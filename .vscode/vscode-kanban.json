{
  "backlog": [],
  "done": [
    {
      "assignedTo": {
        "name": "arolson101"
      },
      "category": "features",
      "creation_time": "2019-02-25T21:34:47.301Z",
      "id": "6",
      "prio": 15,
      "references": [],
      "title": "get accounts from server"
    },
    {
      "assignedTo": {
        "name": "arolson101"
      },
      "creation_time": "2019-02-25T21:30:17.392Z",
      "description": {
        "content": "need to include @ag/util, @ag/db, etc",
        "mime": "text/markdown"
      },
      "id": "1",
      "prio": 0,
      "references": [],
      "title": "webpack vendor dll isn't loading all libs",
      "type": "bug"
    },
    {
      "assignedTo": {
        "name": "arolson101"
      },
      "creation_time": "2019-02-25T22:45:41.835Z",
      "description": {
        "content": "a random-colored box with the bank initials on it for banks with no favico",
        "mime": "text/markdown"
      },
      "id": "15",
      "references": [],
      "title": "bank 'avatar'"
    },
    {
      "assignedTo": {
        "name": "arolson101"
      },
      "creation_time": "2019-02-25T22:59:57.129Z",
      "description": {
        "content": "graphql service should do the online things",
        "mime": "text/markdown"
      },
      "id": "17",
      "references": [],
      "title": "move online stuff to db"
    },
    {
      "assignedTo": {
        "name": "arolson101"
      },
      "creation_time": "2019-02-26T21:23:54.944Z",
      "description": {
        "content": "debug('app:...') => debug('core:...') or debug('db:...')",
        "mime": "text/markdown"
      },
      "id": "20",
      "references": [],
      "title": "normalize debug categories"
    },
    {
      "assignedTo": {
        "name": "arolson101"
      },
      "creation_time": "2019-02-25T22:05:48.145Z",
      "description": {
        "content": "nohoist adds extra complexity to rn-cli.config.js because it can't handle two (identical) packages.  Also, linking native modules from (internal) libs like react-native-svg-image is a PITA",
        "mime": "text/markdown"
      },
      "id": "13",
      "references": [],
      "title": "remove nohoist"
    },
    {
      "assignedTo": {
        "name": "arolson101"
      },
      "creation_time": "2019-02-26T16:08:09.828Z",
      "id": "19",
      "references": [],
      "title": "use axios instead of fetch"
    },
    {
      "assignedTo": {
        "name": "arolson101"
      },
      "creation_time": "2019-02-26T16:04:24.023Z",
      "description": {
        "content": "AppContext, AppState, etc",
        "mime": "text/markdown"
      },
      "id": "18",
      "references": [],
      "title": "rename App* to Core*"
    }
  ],
  "in-progress": [
    {
      "assignedTo": {
        "name": "arolson101"
      },
      "category": "features",
      "creation_time": "2019-02-25T21:51:37.313Z",
      "id": "7",
      "prio": 10,
      "references": [],
      "title": "import/export data"
    }
  ],
  "testing": [],
  "todo": [
    {
      "assignedTo": {
        "name": "arolson101"
      },
      "creation_time": "2019-02-25T21:51:55.655Z",
      "id": "8",
      "prio": 10,
      "references": [],
      "title": "add bills"
    },
    {
      "assignedTo": {
        "name": "arolson101"
      },
      "category": "features",
      "creation_time": "2019-02-25T21:52:03.901Z",
      "id": "9",
      "prio": 10,
      "references": [],
      "title": "add transactions"
    },
    {
      "assignedTo": {
        "name": "arolson101"
      },
      "category": "features",
      "creation_time": "2019-02-25T21:52:12.690Z",
      "id": "10",
      "prio": 10,
      "references": [],
      "title": "download transactions"
    },
    {
      "assignedTo": {
        "name": "arolson101"
      },
      "category": "features",
      "creation_time": "2019-02-25T21:52:20.036Z",
      "id": "11",
      "prio": 10,
      "references": [],
      "title": "sync"
    },
    {
      "assignedTo": {
        "name": "arolson101"
      },
      "category": "testing",
      "creation_time": "2019-02-25T21:31:12.780Z",
      "id": "2",
      "prio": 5,
      "references": [],
      "title": "mock http requests"
    },
    {
      "assignedTo": {
        "name": "arolson101"
      },
      "category": "features",
      "creation_time": "2019-02-25T21:52:32.729Z",
      "id": "12",
      "prio": 5,
      "references": [],
      "title": "scan receipts"
    },
    {
      "assignedTo": {
        "name": "arolson101"
      },
      "category": "testing",
      "creation_time": "2019-02-25T21:32:33.107Z",
      "description": {
        "content": "test that e.g. changing bank in create bank dialog updates address, webpage, etc",
        "mime": "text/markdown"
      },
      "id": "4",
      "prio": 0,
      "references": [],
      "title": "add functionality tests"
    },
    {
      "assignedTo": {
        "name": "arolson101"
      },
      "category": "testing",
      "creation_time": "2019-02-25T21:33:32.756Z",
      "description": {
        "content": "command-line way of ensuring that all the stories at least load without errors",
        "mime": "text/markdown"
      },
      "id": "5",
      "references": [],
      "title": "ensure stories work"
    },
    {
      "assignedTo": {
        "name": "arolson101"
      },
      "category": "testing",
      "creation_time": "2019-02-25T21:31:21.058Z",
      "id": "3",
      "references": [],
      "title": "jest snapshots"
    },
    {
      "assignedTo": {
        "name": "arolson101"
      },
      "creation_time": "2019-02-25T22:48:36.150Z",
      "description": {
        "content": "the native-base toast is weaksauce.  Is there a 3rd party one that user can dismiss with swipes and looks pretty?\nperhaps react-native-simple-toast or react-native-dropdownalert",
        "mime": "text/markdown"
      },
      "id": "16",
      "references": [],
      "title": "react-native-simple-toast"
    },
    {
      "assignedTo": {
        "name": "arolson101"
      },
      "creation_time": "2019-02-25T22:45:06.034Z",
      "description": {
        "content": "package.json way to run all scripts, compiles, etc to ensure nothing is broken",
        "mime": "text/markdown"
      },
      "id": "14",
      "references": [],
      "title": "run all the things"
    }
  ]
}