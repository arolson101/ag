{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/main.js","ofx4js.min.js","node_modules/browserify/node_modules/buffer/index.js","node_modules/browserify/node_modules/buffer/node_modules/base64-js/lib/b64.js","node_modules/browserify/node_modules/buffer/node_modules/ieee754/index.js","node_modules/browserify/node_modules/buffer/node_modules/is-array/index.js","node_modules/browserify/node_modules/events/events.js","node_modules/browserify/node_modules/isarray/index.js","node_modules/browserify/node_modules/process/browser.js","node_modules/browserify/node_modules/readable-stream/duplex.js","node_modules/browserify/node_modules/readable-stream/lib/_stream_duplex.js","node_modules/browserify/node_modules/readable-stream/lib/_stream_passthrough.js","node_modules/browserify/node_modules/readable-stream/lib/_stream_readable.js","node_modules/browserify/node_modules/readable-stream/lib/_stream_transform.js","node_modules/browserify/node_modules/readable-stream/lib/_stream_writable.js","node_modules/browserify/node_modules/readable-stream/node_modules/core-util-is/lib/util.js","node_modules/browserify/node_modules/readable-stream/passthrough.js","node_modules/browserify/node_modules/readable-stream/readable.js","node_modules/browserify/node_modules/readable-stream/transform.js","node_modules/browserify/node_modules/readable-stream/writable.js","node_modules/browserify/node_modules/stream-browserify/index.js","node_modules/browserify/node_modules/string_decoder/index.js","node_modules/clone/clone.js","node_modules/inherits/inherits_browser.js","node_modules/sax/lib/sax.js","node_modules/uuid/rng-browser.js","node_modules/uuid/uuid.js","src/client/AccountStatement.js","src/client/BankAccount.js","src/client/CreditCardAccount.js","src/client/FinancialInstitution.js","src/client/FinancialInstitutionAccount.js","src/client/FinancialInstitutionData.js","src/client/FinancialInstitutionProfile.js","src/client/InvestmentAccount.js","src/client/context/DefaultApplicationContext.js","src/client/context/OFXApplicationContext.js","src/client/context/OFXApplicationContextHolder.js","src/client/context/index.js","src/client/impl/BankingAccountImpl.js","src/client/impl/BaseAccountImpl.js","src/client/impl/BaseFinancialInstitutionData.js","src/client/impl/CreditCardAccountImpl.js","src/client/impl/FinancialInstitutionImpl.js","src/client/impl/InvestmentAccountImpl.js","src/client/impl/index.js","src/client/index.js","src/client/net/OFXConnection.js","src/client/net/OFXV1Connection.js","src/client/net/OFXV2Connection.js","src/client/net/index.js","src/domain/data/ApplicationSecurity.js","src/domain/data/MessageSetProfile.js","src/domain/data/MessageSetType.js","src/domain/data/RequestEnvelope.js","src/domain/data/RequestMessage.js","src/domain/data/RequestMessageSet.js","src/domain/data/ResponseEnvelope.js","src/domain/data/ResponseMessage.js","src/domain/data/ResponseMessageSet.js","src/domain/data/SignonProfile.js","src/domain/data/TransactionWrappedRequestMessage.js","src/domain/data/TransactionWrappedResponseMessage.js","src/domain/data/banking/AccountType.js","src/domain/data/banking/BankAccountDetails.js","src/domain/data/banking/BankAccountInfo.js","src/domain/data/banking/BankStatementRequest.js","src/domain/data/banking/BankStatementRequestTransaction.js","src/domain/data/banking/BankStatementResponse.js","src/domain/data/banking/BankStatementResponseTransaction.js","src/domain/data/banking/BankingRequestMessageSet.js","src/domain/data/banking/BankingResponseMessageSet.js","src/domain/data/banking/index.js","src/domain/data/common/AccountDetails.js","src/domain/data/common/AccountInfo.js","src/domain/data/common/AccountStatus.js","src/domain/data/common/BalanceInfo.js","src/domain/data/common/BalanceRecord.js","src/domain/data/common/CorrectionAction.js","src/domain/data/common/Currency.js","src/domain/data/common/Payee.js","src/domain/data/common/ProcessorDayOff.js","src/domain/data/common/StatementRange.js","src/domain/data/common/StatementRequest.js","src/domain/data/common/StatementResponse.js","src/domain/data/common/Status.js","src/domain/data/common/StatusCode.js","src/domain/data/common/StatusHolder.js","src/domain/data/common/T1099Request.js","src/domain/data/common/T1099Response.js","src/domain/data/common/Transaction.js","src/domain/data/common/TransactionList.js","src/domain/data/common/TransactionType.js","src/domain/data/common/TransferInfo.js","src/domain/data/common/TransferStatus.js","src/domain/data/common/TransferStatusEvent.js","src/domain/data/common/UnknownStatusCode.js","src/domain/data/common/index.js","src/domain/data/creditcard/CreditCardAccountDetails.js","src/domain/data/creditcard/CreditCardAccountInfo.js","src/domain/data/creditcard/CreditCardRequestMessageSet.js","src/domain/data/creditcard/CreditCardResponseMessageSet.js","src/domain/data/creditcard/CreditCardStatementRequest.js","src/domain/data/creditcard/CreditCardStatementRequestTransaction.js","src/domain/data/creditcard/CreditCardStatementResponse.js","src/domain/data/creditcard/CreditCardStatementResponseTransaction.js","src/domain/data/creditcard/index.js","src/domain/data/index.js","src/domain/data/investment/accounts/AccountType.js","src/domain/data/investment/accounts/ActivationStatus.js","src/domain/data/investment/accounts/InvestmentAccountDetails.js","src/domain/data/investment/accounts/InvestmentAccountInfo.js","src/domain/data/investment/accounts/SubAccountType.js","src/domain/data/investment/accounts/UnitedStatesAccountType.js","src/domain/data/investment/accounts/index.js","src/domain/data/investment/index.js","src/domain/data/investment/positions/BasePosition.js","src/domain/data/investment/positions/DebtPosition.js","src/domain/data/investment/positions/Inv401KSource.js","src/domain/data/investment/positions/InvestmentPosition.js","src/domain/data/investment/positions/InvestmentPositionList.js","src/domain/data/investment/positions/MutualFundPosition.js","src/domain/data/investment/positions/OptionsPosition.js","src/domain/data/investment/positions/OtherPosition.js","src/domain/data/investment/positions/PositionType.js","src/domain/data/investment/positions/ShortOptionSecurity.js","src/domain/data/investment/positions/StockPosition.js","src/domain/data/investment/positions/index.js","src/domain/data/investment/statements/BalanceList.js","src/domain/data/investment/statements/IncludePosition.js","src/domain/data/investment/statements/InvestmentBalance.js","src/domain/data/investment/statements/InvestmentStatementRequest.js","src/domain/data/investment/statements/InvestmentStatementRequestMessageSet.js","src/domain/data/investment/statements/InvestmentStatementRequestTransaction.js","src/domain/data/investment/statements/InvestmentStatementResponse.js","src/domain/data/investment/statements/InvestmentStatementResponseMessageSet.js","src/domain/data/investment/statements/InvestmentStatementResponseTransaction.js","src/domain/data/investment/statements/index.js","src/domain/data/investment/transactions/BaseBuyInvestmentTransaction.js","src/domain/data/investment/transactions/BaseInvestmentTransaction.js","src/domain/data/investment/transactions/BaseOtherInvestmentTransaction.js","src/domain/data/investment/transactions/BaseSellInvestmentTransaction.js","src/domain/data/investment/transactions/BuyDebtTransaction.js","src/domain/data/investment/transactions/BuyInvestmentTransaction.js","src/domain/data/investment/transactions/BuyMutualFundTransaction.js","src/domain/data/investment/transactions/BuyOptionTransaction.js","src/domain/data/investment/transactions/BuyOtherTransaction.js","src/domain/data/investment/transactions/BuyStockTransaction.js","src/domain/data/investment/transactions/BuyType.js","src/domain/data/investment/transactions/CloseOptionAction.js","src/domain/data/investment/transactions/CloseOptionTransaction.js","src/domain/data/investment/transactions/IncomeTransaction.js","src/domain/data/investment/transactions/IncomeType.js","src/domain/data/investment/transactions/InvestmentBankTransaction.js","src/domain/data/investment/transactions/InvestmentExpenseTransaction.js","src/domain/data/investment/transactions/InvestmentTransaction.js","src/domain/data/investment/transactions/InvestmentTransactionList.js","src/domain/data/investment/transactions/JournalFundTransaction.js","src/domain/data/investment/transactions/JournalSecurityTransaction.js","src/domain/data/investment/transactions/MarginInterestTransaction.js","src/domain/data/investment/transactions/OptionBuyType.js","src/domain/data/investment/transactions/OptionSellType.js","src/domain/data/investment/transactions/OriginalCurrency.js","src/domain/data/investment/transactions/ReinvestIncomeTransaction.js","src/domain/data/investment/transactions/RelatedOptionType.js","src/domain/data/investment/transactions/ReturnOfCapitalTransaction.js","src/domain/data/investment/transactions/SellDebtReason.js","src/domain/data/investment/transactions/SellDebtTransaction.js","src/domain/data/investment/transactions/SellInvestmentTransaction.js","src/domain/data/investment/transactions/SellMutualFundTransaction.js","src/domain/data/investment/transactions/SellOptionTransaction.js","src/domain/data/investment/transactions/SellOtherTransaction.js","src/domain/data/investment/transactions/SellStockTransaction.js","src/domain/data/investment/transactions/SellType.js","src/domain/data/investment/transactions/SplitTransaction.js","src/domain/data/investment/transactions/TransactionType.js","src/domain/data/investment/transactions/TransactionWithSecurity.js","src/domain/data/investment/transactions/TransferAction.js","src/domain/data/investment/transactions/TransferInvestmentTransaction.js","src/domain/data/investment/transactions/index.js","src/domain/data/profile/AbstractMessageSetInfo.js","src/domain/data/profile/CharacterType.js","src/domain/data/profile/ClientRoutingCapability.js","src/domain/data/profile/CoreMessageSetInfo.js","src/domain/data/profile/MessageSetInfoList.js","src/domain/data/profile/ProfileRequest.js","src/domain/data/profile/ProfileRequestMessageSet.js","src/domain/data/profile/ProfileRequestTransaction.js","src/domain/data/profile/ProfileResponse.js","src/domain/data/profile/ProfileResponseMessageSet.js","src/domain/data/profile/ProfileResponseTransaction.js","src/domain/data/profile/SignonInfo.js","src/domain/data/profile/SignonInfoList.js","src/domain/data/profile/SynchronizationCapability.js","src/domain/data/profile/VersionSpecificMessageSetInfo.js","src/domain/data/profile/index.js","src/domain/data/profile/info/BankingMessageSetInfo.js","src/domain/data/profile/info/BankingV1MessageSetInfo.js","src/domain/data/profile/info/BillpayMessageSetInfo.js","src/domain/data/profile/info/BillpayV1MessageSetInfo.js","src/domain/data/profile/info/CreditCardMessageSetInfo.js","src/domain/data/profile/info/CreditCardV1MessageSetInfo.js","src/domain/data/profile/info/EmailMessageSetInfo.js","src/domain/data/profile/info/EmailV1MessageSetInfo.js","src/domain/data/profile/info/InterbankTransferMessageSetInfo.js","src/domain/data/profile/info/InterbankTransferV1MessageSetInfo.js","src/domain/data/profile/info/InvestmentMessageSetInfo.js","src/domain/data/profile/info/InvestmentV1MessageSetInfo.js","src/domain/data/profile/info/ProfileMessageSetInfo.js","src/domain/data/profile/info/ProfileV1MessageSetInfo.js","src/domain/data/profile/info/SecurityListMessageSetInfo.js","src/domain/data/profile/info/SecurityListV1MessageSetInfo.js","src/domain/data/profile/info/SignOnMessageSetInfo.js","src/domain/data/profile/info/SignOnV1MessageSetInfo.js","src/domain/data/profile/info/SignupMessageSetInfo.js","src/domain/data/profile/info/SignupV1MessageSetInfo.js","src/domain/data/profile/info/WireTransferMessageSetInfo.js","src/domain/data/profile/info/WireTransferV1MessageSetInfo.js","src/domain/data/profile/info/banking/EmailProfile.js","src/domain/data/profile/info/banking/StopCheckProfile.js","src/domain/data/profile/info/banking/index.js","src/domain/data/profile/info/common/ImageProfile.js","src/domain/data/profile/info/common/TransferProfile.js","src/domain/data/profile/info/common/index.js","src/domain/data/profile/info/index.js","src/domain/data/profile/info/signup/ClientEnrollment.js","src/domain/data/profile/info/signup/OtherEnrollment.js","src/domain/data/profile/info/signup/WebEnrollment.js","src/domain/data/profile/info/signup/index.js","src/domain/data/seclist/AssetClass.js","src/domain/data/seclist/BaseSecurityInfo.js","src/domain/data/seclist/CallType.js","src/domain/data/seclist/CouponFrequency.js","src/domain/data/seclist/DebtClass.js","src/domain/data/seclist/DebtSecurityInfo.js","src/domain/data/seclist/DebtType.js","src/domain/data/seclist/MutualFundSecurityInfo.js","src/domain/data/seclist/MutualFundType.js","src/domain/data/seclist/OptionSecurityInfo.js","src/domain/data/seclist/OptionType.js","src/domain/data/seclist/OtherSecurityInfo.js","src/domain/data/seclist/SecurityId.js","src/domain/data/seclist/SecurityInfo.js","src/domain/data/seclist/SecurityList.js","src/domain/data/seclist/SecurityListRequest.js","src/domain/data/seclist/SecurityListRequestMessageSet.js","src/domain/data/seclist/SecurityListRequestTransaction.js","src/domain/data/seclist/SecurityListResponse.js","src/domain/data/seclist/SecurityListResponseMessageSet.js","src/domain/data/seclist/SecurityListResponseTransaction.js","src/domain/data/seclist/SecurityRequest.js","src/domain/data/seclist/StockSecurityInfo.js","src/domain/data/seclist/StockType.js","src/domain/data/seclist/index.js","src/domain/data/signon/FinancialInstitution.js","src/domain/data/signon/PasswordChangeRequest.js","src/domain/data/signon/PasswordChangeRequestTransaction.js","src/domain/data/signon/PasswordChangeResponse.js","src/domain/data/signon/PasswordChangeResponseTransaction.js","src/domain/data/signon/SignonRequest.js","src/domain/data/signon/SignonRequestMessageSet.js","src/domain/data/signon/SignonResponse.js","src/domain/data/signon/SignonResponseMessageSet.js","src/domain/data/signon/index.js","src/domain/data/signup/AccountInfoRequest.js","src/domain/data/signup/AccountInfoRequestTransaction.js","src/domain/data/signup/AccountInfoResponse.js","src/domain/data/signup/AccountInfoResponseTransaction.js","src/domain/data/signup/AccountProfile.js","src/domain/data/signup/SignupRequestMessageSet.js","src/domain/data/signup/SignupResponseMessageSet.js","src/domain/data/signup/index.js","src/domain/data/tax1099/ExtDBInfo.js","src/domain/data/tax1099/PayerAddress.js","src/domain/data/tax1099/ProcDet.js","src/domain/data/tax1099/RecAddress.js","src/domain/data/tax1099/Tax1099B.js","src/domain/data/tax1099/Tax1099DIV.js","src/domain/data/tax1099/Tax1099INT.js","src/domain/data/tax1099/Tax1099MISC.js","src/domain/data/tax1099/Tax1099OID.js","src/domain/data/tax1099/Tax1099R.js","src/domain/data/tax1099/Tax1099Request.js","src/domain/data/tax1099/Tax1099RequestMessageSet.js","src/domain/data/tax1099/Tax1099RequestTransaction.js","src/domain/data/tax1099/Tax1099Response.js","src/domain/data/tax1099/Tax1099ResponseMessageSet.js","src/domain/data/tax1099/Tax1099ResponseTransaction.js","src/domain/data/tax1099/index.js","src/domain/index.js","src/io/AggregateAttribute.js","src/io/AggregateInfo.js","src/io/AggregateIntrospector.js","src/io/AggregateMarshaller.js","src/io/AggregateStackContentHandler.js","src/io/AggregateUnmarshaller.js","src/io/BaseOFXReader.js","src/io/DefaultHandler.js","src/io/DefaultStringConversion.js","src/io/OFXAggregate.js","src/io/OFXHandler.js","src/io/OFXParseEvent.js","src/io/OFXReader.js","src/io/OFXV2ContentHandler.js","src/io/OFXWriter.js","src/io/StringConversion.js","src/io/index.js","src/io/v1/OFXV1Writer.js","src/io/v2/OFXV2Writer.js","src/meta/Aggregate.js","src/meta/ChildAggregate.js","src/meta/Element.js","src/meta/Header.js","src/meta/index.js","src/util/OutputStreamWriter.js","src/util/StringReader.js","src/util/index.js","src/util/inherit.js","src/util/log.js","src/util/stack.js"],"names":["e","exports","module","define","amd","f","window","global","self","ofx4js","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","./src/main.js","client","domain","io","meta","util","./client/index","./domain/index","./io/index","./meta/index","./util/index","/Users/aolson/Developer/ofx4js/node_modules/browserify/node_modules/buffer/index.js","Buffer","subject","encoding","noZero","this","type","byteLength","TypeError","isArray","data","kMaxLength","RangeError","toString","TYPED_ARRAY_SUPPORT","_augment","Uint8Array","_isBuffer","_set","isArrayish","isBuffer","readUInt8","write","poolSize","parent","rootParent","SlowBuffer","buf","hexWrite","string","offset","Number","remaining","strLen","byte","parseInt","substr","isNaN","utf8Write","charsWritten","blitBuffer","utf8ToBytes","asciiWrite","asciiToBytes","binaryWrite","base64Write","base64ToBytes","utf16leWrite","utf16leToBytes","base64Slice","start","end","base64","fromByteArray","slice","utf8Slice","res","tmp","Math","min","decodeUtf8Char","String","fromCharCode","asciiSlice","ret","binarySlice","hexSlice","len","out","toHex","utf16leSlice","bytes","checkOffset","ext","checkInt","value","max","objectWriteUInt16","littleEndian","j","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","str","stringtrim","replace","INVALID_BASE64_RE","trim","units","Infinity","codePoint","leadSurrogate","charCodeAt","push","byteArray","c","hi","lo","toByteArray","src","dst","decodeURIComponent","err","INSPECT_MAX_BYTES","ArrayBuffer","arr","foo","subarray","b","compare","x","y","isEncoding","toLowerCase","concat","list","totalLength","undefined","pos","item","copy","prototype","loweredCase","equals","inspect","match","join","get","console","log","set","v","writeUInt8","isFinite","swap","toJSON","Array","_arr","newBuf","sliceLen","readUIntLE","val","mul","readUIntBE","readUInt16LE","readUInt16BE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","read","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","target","target_start","fill","toArrayBuffer","buffer","BP","constructor","_get","toLocaleString","base64-js","is-array","/Users/aolson/Developer/ofx4js/node_modules/browserify/node_modules/buffer/node_modules/base64-js/lib/b64.js","lookup","decode","elt","PLUS","PLUS_URL_SAFE","SLASH","SLASH_URL_SAFE","NUMBER","UPPER","LOWER","b64ToByteArray","b64","L","placeHolders","charAt","Arr","uint8ToBase64","uint8","encode","num","tripletToBase64","temp","extraBytes","output","base64js","/Users/aolson/Developer/ofx4js/node_modules/browserify/node_modules/buffer/node_modules/ieee754/index.js","isLE","mLen","nBytes","m","eLen","eMax","eBias","nBits","d","NaN","rt","abs","LN2","/Users/aolson/Developer/ofx4js/node_modules/browserify/node_modules/buffer/node_modules/is-array/index.js","Object","/Users/aolson/Developer/ofx4js/node_modules/browserify/node_modules/events/events.js","EventEmitter","_events","_maxListeners","isFunction","arg","isNumber","isObject","isUndefined","defaultMaxListeners","setMaxListeners","emit","er","handler","args","listeners","error","arguments","apply","addListener","listener","newListener","warned","trace","on","once","g","removeListener","fired","position","splice","removeAllListeners","key","listenerCount","emitter","/Users/aolson/Developer/ofx4js/node_modules/browserify/node_modules/isarray/index.js","/Users/aolson/Developer/ofx4js/node_modules/browserify/node_modules/process/browser.js","drainQueue","draining","currentQueue","queue","noop","process","nextTick","fun","setTimeout","title","browser","env","argv","version","off","binding","cwd","chdir","umask","/Users/aolson/Developer/ofx4js/node_modules/browserify/node_modules/readable-stream/duplex.js","./lib/_stream_duplex.js","/Users/aolson/Developer/ofx4js/node_modules/browserify/node_modules/readable-stream/lib/_stream_duplex.js","Duplex","options","Readable","Writable","readable","writable","allowHalfOpen","onend","_writableState","ended","bind","forEach","xs","objectKeys","keys","obj","inherits","method","./_stream_readable","./_stream_writable","_process","core-util-is","/Users/aolson/Developer/ofx4js/node_modules/browserify/node_modules/readable-stream/lib/_stream_passthrough.js","PassThrough","Transform","_transform","chunk","cb","./_stream_transform","/Users/aolson/Developer/ofx4js/node_modules/browserify/node_modules/readable-stream/lib/_stream_readable.js","ReadableState","hwm","highWaterMark","pipes","pipesCount","flowing","endEmitted","reading","calledRead","sync","needReadable","emittedReadable","readableListening","objectMode","defaultEncoding","ranOut","awaitDrain","readingMore","decoder","StringDecoder","_readableState","Stream","readableAddChunk","stream","state","addToFront","chunkInvalid","onEofChunk","unshift","emitReadable","maybeReadMore","needMoreData","roundUpToNextPowerOf2","MAX_HWM","p","howMuchToRead","endReadable","emitReadable_","maybeReadMore_","pipeOnDrain","flow","dest","written","EE","emitDataEvents","pipeOnReadable","startPaused","paused","pipe","pause","resume","fromList","stringMode","shift","cpy","indexOf","setEncoding","enc","nOrig","doRead","_read","pipeOpts","onunpipe","cleanup","onclose","onfinish","ondrain","onerror","needDrain","unpipe","doEnd","stdout","stderr","endFn","dests","ev","fn","wrap","events","_fromList","isarray","string_decoder/","/Users/aolson/Developer/ofx4js/node_modules/browserify/node_modules/readable-stream/lib/_stream_transform.js","TransformState","afterTransform","needTransform","transforming","writecb","writechunk","ts","_transformState","rs","_flush","done","ws","_write","writeencoding","./_stream_duplex","/Users/aolson/Developer/ofx4js/node_modules/browserify/node_modules/readable-stream/lib/_stream_writable.js","WriteReq","callback","WritableState","ending","finished","noDecode","decodeStrings","writing","bufferProcessing","onwrite","writelen","errorEmitted","writeAfterEnd","validChunk","valid","decodeChunk","writeOrBuffer","doWrite","onwriteError","onwriteStateUpdate","needFinish","clearBuffer","afterWrite","onwriteDrain","finishMaybe","entry","need","endWritable","/Users/aolson/Developer/ofx4js/node_modules/browserify/node_modules/readable-stream/node_modules/core-util-is/lib/util.js","ar","isBoolean","isNull","isNullOrUndefined","isString","isSymbol","isRegExp","re","objectToString","isDate","isError","isPrimitive","/Users/aolson/Developer/ofx4js/node_modules/browserify/node_modules/readable-stream/passthrough.js","./lib/_stream_passthrough.js","/Users/aolson/Developer/ofx4js/node_modules/browserify/node_modules/readable-stream/readable.js","./lib/_stream_readable.js","./lib/_stream_transform.js","./lib/_stream_writable.js","/Users/aolson/Developer/ofx4js/node_modules/browserify/node_modules/readable-stream/transform.js","/Users/aolson/Developer/ofx4js/node_modules/browserify/node_modules/readable-stream/writable.js","/Users/aolson/Developer/ofx4js/node_modules/browserify/node_modules/stream-browserify/index.js","ondata","source","didOnEnd","destroy","_isStdio","readable-stream/duplex.js","readable-stream/passthrough.js","readable-stream/readable.js","readable-stream/transform.js","readable-stream/writable.js","/Users/aolson/Developer/ofx4js/node_modules/browserify/node_modules/string_decoder/index.js","assertEncoding","isBufferEncoding","passThroughWrite","utf16DetectIncompleteChar","charReceived","charLength","base64DetectIncompleteChar","surrogateSize","detectIncompleteChar","charBuffer","charStr","available","charCode","size","substring","cr","/Users/aolson/Developer/ofx4js/node_modules/clone/clone.js","clone","circular","depth","_clone","child","proto","RegExp","getRegExpFlags","lastIndex","Date","getTime","useBuffer","getPrototypeOf","create","index","allParents","allChildren","attrs","getOwnPropertyDescriptor","flags","ignoreCase","multiline","clonePrototype","/Users/aolson/Developer/ofx4js/node_modules/inherits/inherits_browser.js","ctor","superCtor","super_","enumerable","configurable","TempCtor","/Users/aolson/Developer/ofx4js/node_modules/sax/lib/sax.js","sax","SAXParser","strict","opt","parser","clearBuffers","q","bufferCheckPosition","MAX_BUFFER_LENGTH","lowercase","lowercasetags","looseCase","tags","closed","closedRoot","sawRoot","tag","noscript","S","BEGIN","ENTITIES","attribList","xmlns","ns","rootNS","trackPosition","line","column","checkBufferLength","maxAllowed","maxActual","buffers","closeText","emitNode","cdata","script","flushBuffers","createStream","SAXStream","_parser","me","_decoder","streamWraps","defineProperty","h","charClass","split","reduce","is","charclass","not","event","nodeType","textNode","textopts","text","normalize","strictFail","TEXT","message","newTag","tagName","name","attributes","qname","attribute","qualName","prefix","local","attrib","attribName","hasOwnProperty","attribValue","qn","XML_NAMESPACE","XMLNS_NAMESPACE","openTag","selfClosing","uri","JSON","stringify","nv","isSelfClosing","SCRIPT","closeTag","closeTo","close","pop","parseEntity","entity","entityLC","numStr","fromCodePoint","OPEN_WAKA","startTagPosition","whitespace","starti","TEXT_ENTITY","SCRIPT_ENDING","CLOSE_TAG","SGML_DECL","sgmlDecl","nameStart","OPEN_TAG","PROC_INST","procInstName","procInstBody","pad","toUpperCase","CDATA","COMMENT","comment","DOCTYPE","doctype","quote","SGML_DECL_QUOTED","DOCTYPE_DTD","DOCTYPE_QUOTED","DOCTYPE_DTD_QUOTED","COMMENT_ENDING","COMMENT_ENDED","CDATA_ENDING","CDATA_ENDING_2","PROC_INST_ENDING","PROC_INST_BODY","body","nameBody","OPEN_TAG_SLASH","ATTRIB","ATTRIB_NAME","ATTRIB_VALUE","ATTRIB_NAME_SAW_WHITE","ATTRIB_VALUE_QUOTED","ATTRIB_VALUE_UNQUOTED","ATTRIB_VALUE_ENTITY_Q","ATTRIB_VALUE_CLOSED","attribEnd","ATTRIB_VALUE_ENTITY_U","CLOSE_TAG_SAW_WHITE","returnState","EVENTS","__proto__","flush","ex","filter","SD","number","letter","xml","STATE","COMMENT_STARTING","amp","gt","lt","quot","apos","AElig","Aacute","Acirc","Agrave","Aring","Atilde","Auml","Ccedil","ETH","Eacute","Ecirc","Egrave","Euml","Iacute","Icirc","Igrave","Iuml","Ntilde","Oacute","Ocirc","Ograve","Oslash","Otilde","Ouml","THORN","Uacute","Ucirc","Ugrave","Uuml","Yacute","aacute","acirc","aelig","agrave","aring","atilde","auml","ccedil","eacute","ecirc","egrave","eth","euml","iacute","icirc","igrave","iuml","ntilde","oacute","ocirc","ograve","oslash","otilde","ouml","szlig","thorn","uacute","ucirc","ugrave","uuml","yacute","yuml","reg","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","ordf","laquo","shy","macr","deg","plusmn","sup1","sup2","sup3","acute","micro","para","middot","cedil","ordm","raquo","frac14","frac12","frac34","iquest","times","divide","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","tilde","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","stringFromCharCode","highSurrogate","lowSurrogate","MAX_SIZE","codeUnits","result","string_decoder","/Users/aolson/Developer/ofx4js/node_modules/uuid/rng-browser.js","rng","crypto","getRandomValues","_rnds8","_rnds","random","/Users/aolson/Developer/ofx4js/node_modules/uuid/uuid.js","parse","ii","oct","_hexToByte","unparse","bth","_byteToHex","v1","clockseq","_clockseq","msecs","nsecs","_lastNSecs","dt","_lastMSecs","tl","tmh","node","_nodeId","v4","rnds","_rng","_seedBytes","uuid","./rng","/Users/aolson/Developer/ofx4js/src/client/AccountStatement.js","AccountStatement","getCurrencyCode","getTransactionList","getLedgerBalance","getAvailableBalance","/Users/aolson/Developer/ofx4js/src/client/BankAccount.js","BankAccount","getDetails","/Users/aolson/Developer/ofx4js/src/client/CreditCardAccount.js","CreditCardAccount","/Users/aolson/Developer/ofx4js/src/client/FinancialInstitution.js","FinancialInstitution","getData","readProfile","readAccountProfiles","loadBankAccount","loadCreditCardAccount","loadInvestmentAccount","/Users/aolson/Developer/ofx4js/src/client/FinancialInstitutionAccount.js","FinancialInstitutionAccount","readStatement","/Users/aolson/Developer/ofx4js/src/client/FinancialInstitutionData.js","FinancialInstitutionData","getId","getFinancialInstitutionId","getName","getOrganization","getOFXURL","getBrokerId","/Users/aolson/Developer/ofx4js/src/client/FinancialInstitutionProfile.js","FinancialInstitutionProfile","getLastUpdated","getFinancialInstitutionName","getAddress1","getAddress2","getAddress3","getCity","getState","getZip","getCountry","getCustomerServicePhone","getTechnicalSupportPhone","getFax","getSiteURL","getEmail","getMessageSetProfile","getSignonProfile","/Users/aolson/Developer/ofx4js/src/client/InvestmentAccount.js","InvestmentAccount","readSecurityList","/Users/aolson/Developer/ofx4js/src/client/context/DefaultApplicationContext.js","DefaultApplicationContext","appId","appVersion","inherit","OFXApplicationContext","getAppId","getAppVersion","../../util/inherit","./OFXApplicationContext","/Users/aolson/Developer/ofx4js/src/client/context/OFXApplicationContext.js","/Users/aolson/Developer/ofx4js/src/client/context/OFXApplicationContextHolder.js","OFXApplicationContextHolder","CURRENT_CONTEXT","getCurrentContext","setCurrentContext","context","./DefaultApplicationContext","/Users/aolson/Developer/ofx4js/src/client/context/index.js","./OFXApplicationContextHolder","/Users/aolson/Developer/ofx4js/src/client/impl/BankingAccountImpl.js","BankingAccountImpl","details","username","password","institution","BaseAccountImpl","MessageSetType","BankingRequestMessageSet","BankStatementRequestTransaction","BankStatementRequest","unwrapStatementResponse","response","bankingSet","getMessageSet","banking","statementTransactionResponse","getStatementResponse","statement","getMessage","createRequestMessageSet","transaction","bankingRequest","setStatementRequest","createTransaction","createStatementRequest","range","bankRequest","setAccount","setStatementRange","../../domain/data/MessageSetType","../../domain/data/banking/BankStatementRequest","../../domain/data/banking/BankStatementRequestTransaction","../../domain/data/banking/BankingRequestMessageSet","../BankAccount","./BaseAccountImpl","/Users/aolson/Developer/ofx4js/src/client/impl/BaseAccountImpl.js","messageType","getMessageSetType","BankAccountDetails","StatementRange","CreditCardAccountDetails","InvestmentAccountDetails","creditcard","investment","setIncludeTransactions","setStart","setEnd","request","createAuthenticatedRequest","requestTransaction","setWrappedMessage","getMessageSets","sendRequest","doGeneralValidationChecks","getMessageType","../../domain/data/banking/BankAccountDetails","../../domain/data/common/StatementRange","../../domain/data/creditcard/CreditCardAccountDetails","../../domain/data/investment/accounts/InvestmentAccountDetails","../FinancialInstitutionAccount","/Users/aolson/Developer/ofx4js/src/client/impl/BaseFinancialInstitutionData.js","BaseFinancialInstitutionData","id","fid","organization","ofxUrl","brokerId","setId","setFinancialInstitutionId","setName","setOrganization","setOFXURL","OFXURL","setBrokerId","../FinancialInstitutionData","/Users/aolson/Developer/ofx4js/src/client/impl/CreditCardAccountImpl.js","CreditCardAccountImpl","CreditCardRequestMessageSet","CreditCardStatementRequestTransaction","CreditCardStatementRequest","creditCardSet","creditCardRequest","../../domain/data/creditcard/CreditCardRequestMessageSet","../../domain/data/creditcard/CreditCardStatementRequest","../../domain/data/creditcard/CreditCardStatementRequestTransaction","../CreditCardAccount","/Users/aolson/Developer/ofx4js/src/client/impl/FinancialInstitutionImpl.js","FinancialInstitutionImpl","connection","Status","StatusHolder","SignonRequest","SignonRequestMessageSet","ProfileRequestMessageSet","SignupRequestMessageSet","InvestmentAccountImpl","RequestEnvelope","ApplicationSecurity","TransactionWrappedRequestMessage","TransactionWrappedResponseMessage","AccountInfoRequest","AccountInfoRequestTransaction","ProfileRequestTransaction","ProfileRequest","ANONYMOUS_USER","profileRequest","setProfileRequest","createProfileTransaction","then","getProfile","signupRequest","setAccountInfoRequest","createAccountInfoTransaction","getAccountProfiles","messageSets","signonRequest","setSignonRequest","createSignonRequest","setMessageSets","url","getConnection","profileSet","profile","transactionResponse","getProfileResponse","getSecurity","NONE","getUID","messageSetsIdx","requestSet","responseSet","getType","signon","signonResponse","getSignonResponse","transactionIds","requestMessages","getRequestMessages","requestMessagesIdx","requestMessage","responseMessages","getResponseMessages","responseMessagesIdx","responseMessage","validateStatus","uid","statusHolder","status","getStatus","getStatusHolderName","KnownCode","SUCCESS","getCode","profileTx","setMessage","createProfileRequest","setProfileLastUpdated","setTimestamp","fi","setFinancialInstitution","setUserId","setPassword","setApplicationId","setApplicationVersion","createAccountInfoRequest","messageSet","signup","getAccountInfoResponse","infoResponse","getAccounts","../../domain/data/ApplicationSecurity","../../domain/data/RequestEnvelope","../../domain/data/TransactionWrappedRequestMessage","../../domain/data/TransactionWrappedResponseMessage","../../domain/data/common/Status","../../domain/data/common/StatusHolder","../../domain/data/profile/ProfileRequest","../../domain/data/profile/ProfileRequestMessageSet","../../domain/data/profile/ProfileRequestTransaction","../../domain/data/signon/FinancialInstitution","../../domain/data/signon/SignonRequest","../../domain/data/signon/SignonRequestMessageSet","../../domain/data/signup/AccountInfoRequest","../../domain/data/signup/AccountInfoRequestTransaction","../../domain/data/signup/SignupRequestMessageSet","../context/OFXApplicationContextHolder","./BankingAccountImpl","./CreditCardAccountImpl","./InvestmentAccountImpl","/Users/aolson/Developer/ofx4js/src/client/impl/InvestmentAccountImpl.js","IncludePosition","InvestmentStatementRequestTransaction","SecurityListRequestTransaction","InvestmentStatementRequestMessageSet","InvestmentStatementRequest","SecurityListRequestMessageSet","SecurityListRequest","createStatementRequestMessageSet","securities","createSecurityListRequest","createSecurityListRequestMessageSet","unwrapSecurityList","investmentStatementSet","securityListMessageSet","investment_security","setSecurityList","getSecurityList","investmentStatementRequest","investRequest","setIncludePosition","securityListRequest","setSecurityListRequest","setSecurityRequests","securityListSet","securityList","../../domain/data/investment/statements/IncludePosition","../../domain/data/investment/statements/InvestmentStatementRequest","../../domain/data/investment/statements/InvestmentStatementRequestMessageSet","../../domain/data/investment/statements/InvestmentStatementRequestTransaction","../../domain/data/seclist/SecurityListRequest","../../domain/data/seclist/SecurityListRequestMessageSet","../../domain/data/seclist/SecurityListRequestTransaction","../InvestmentAccount","/Users/aolson/Developer/ofx4js/src/client/impl/index.js","./BaseFinancialInstitutionData","./FinancialInstitutionImpl","/Users/aolson/Developer/ofx4js/src/client/index.js","impl","net","./AccountStatement","./BankAccount","./CreditCardAccount","./FinancialInstitution","./FinancialInstitutionAccount","./FinancialInstitutionData","./FinancialInstitutionProfile","./InvestmentAccount","./context/index","./impl/index","./net/index","/Users/aolson/Developer/ofx4js/src/client/net/OFXConnection.js","OFXConnection","/Users/aolson/Developer/ofx4js/src/client/net/OFXV1Connection.js","OFXV1Connection","marshaller","AggregateMarshaller","unmarshaller","AggregateUnmarshaller","ResponseEnvelope","async","OFXV1Writer","LOG","outBuffer","ofxWriter","newOFXWriter","getMarshaller","marshal","logRequest","sendBuffer","in_","logResponse","unmarshal","network","inBuffer","outText","getAsync","Promise","resolve","reject","XMLHttpRequest","onloadCalled","open","setRequestHeader","onload","responseText","send","getUnmarshaller","setMarshaller","setUnmarshaller","setAsync","../../domain/data/ResponseEnvelope","../../io/AggregateMarshaller","../../io/AggregateUnmarshaller","../../io/v1/OFXV1Writer","../../util/log","./OFXConnection","/Users/aolson/Developer/ofx4js/src/client/net/OFXV2Connection.js","OFXV2Connection","OFXV2Writer","../../io/v2/OFXV2Writer","./OFXV1Connection","/Users/aolson/Developer/ofx4js/src/client/net/index.js","./OFXV2Connection","/Users/aolson/Developer/ofx4js/src/domain/data/ApplicationSecurity.js","TYPE1","/Users/aolson/Developer/ofx4js/src/domain/data/MessageSetProfile.js","MessageSetProfile","getVersion","getServiceProviderName","getUrl","isSslRequired","getRealm","getLanguage","getSyncCapability","hasFileBasedErrorRecoverySupport","/Users/aolson/Developer/ofx4js/src/domain/data/MessageSetType.js","interbank_transfer","wire_transfer","payments","email","tax1099","/Users/aolson/Developer/ofx4js/src/domain/data/RequestEnvelope.js","UID","security","UUID","lastProcessedUID","Aggregate","ChildAggregate","Header","RequestMessageSet","add","attributeType","readMethod","writeMethod","setSecurity","setUID","getLastProcessedUID","setLastProcessedUID","order","collectionEntryType","../../meta/Aggregate","../../meta/ChildAggregate","../../meta/Header","./ApplicationSecurity","./RequestMessageSet","/Users/aolson/Developer/ofx4js/src/domain/data/RequestMessage.js","RequestMessage","/Users/aolson/Developer/ofx4js/src/domain/data/RequestMessageSet.js","setVersion","compareTo","/Users/aolson/Developer/ofx4js/src/domain/data/ResponseEnvelope.js","ResponseMessageSet","./MessageSetType","./ResponseMessageSet","/Users/aolson/Developer/ofx4js/src/domain/data/ResponseMessage.js","ResponseMessage","getResponseMessageName","/Users/aolson/Developer/ofx4js/src/domain/data/ResponseMessageSet.js","/Users/aolson/Developer/ofx4js/src/domain/data/SignonProfile.js","SignonProfile","getMinPasswordCharacters","getMaxPasswordCharacters","getPasswordCharacterType","getPasswordCaseSensitive","getPasswordSpecialCharsAllowed","getPasswordSpacesAllowed","getChangePasswordSupported","getChangePasswordFirstRequired","getAdditionalCredientialsLabel1","getAdditionalCredientialsLabel2","getClientUIDRequired","getAuthTokenRequiredForFirstSignon","getAuthTokenLabel","getAuthTokenInfoURL","getMfaSupported","getMfaChallengeRequiredForFirstSignon","/Users/aolson/Developer/ofx4js/src/domain/data/TransactionWrappedRequestMessage.js","clientCookie","transactionAuthorizationNumber","Element","required","getClientCookie","setClientCookie","getTransactionAuthorizationNumber","setTransactionAuthorizationNumber","../../meta/Element","./ResponseMessage","/Users/aolson/Developer/ofx4js/src/domain/data/TransactionWrappedResponseMessage.js","getWrappedMessage","AggregateIntrospector","aggregateName","getAggregateName","setStatus","../../io/AggregateIntrospector","./common/Status","./common/StatusHolder","/Users/aolson/Developer/ofx4js/src/domain/data/banking/AccountType.js","AccountType","CHECKING","SAVINGS","MONEYMRKT","CREDITLINE","/Users/aolson/Developer/ofx4js/src/domain/data/banking/BankAccountDetails.js","bankId","branchId","accountNumber","accountType","accountKey","AccountDetails","getBankId","setBankId","getRoutingNumber","setRoutingNumber","routingNumber","getBranchId","setBranchId","getAccountNumber","setAccountNumber","getAccountType","setAccountType","getAccountKey","setAccountKey","../../../meta/Aggregate","../../../meta/Element","../../../util/inherit","../common/AccountDetails","./AccountType","/Users/aolson/Developer/ofx4js/src/domain/data/banking/BankAccountInfo.js","BankAccountInfo","bankAccount","supportsTransactionDetailOperations","supportsTransferToOtherAccountOperations","supportsTransferFromOtherAccountOperations","AccountInfo","AccountStatus","getBankAccount","setBankAccount","getAccountDetails","getSupportsTransactionDetailOperations","Boolean","setSupportsTransactionDetailOperations","getSupportsTransferToOtherAccountOperations","setSupportsTransferToOtherAccountOperations","getSupportsTransferFromOtherAccountOperations","setSupportsTransferFromOtherAccountOperations","../../../meta/ChildAggregate","../common/AccountInfo","../common/AccountStatus","./BankAccountDetails","/Users/aolson/Developer/ofx4js/src/domain/data/banking/BankStatementRequest.js","StatementRequest","account","getAccount","../common/StatementRequest","/Users/aolson/Developer/ofx4js/src/domain/data/banking/BankStatementRequestTransaction.js","../TransactionWrappedRequestMessage","./BankStatementRequest","/Users/aolson/Developer/ofx4js/src/domain/data/banking/BankStatementResponse.js","BankStatementResponse","StatementResponse","../common/StatementResponse","/Users/aolson/Developer/ofx4js/src/domain/data/banking/BankStatementResponseTransaction.js","BankStatementResponseTransaction","../TransactionWrappedResponseMessage","./BankStatementResponse","/Users/aolson/Developer/ofx4js/src/domain/data/banking/BankingRequestMessageSet.js","statementRequest","getStatementRequest","../MessageSetType","../RequestMessageSet","./BankStatementRequestTransaction","/Users/aolson/Developer/ofx4js/src/domain/data/banking/BankingResponseMessageSet.js","BankingResponseMessageSet","statementResponses","getStatementResponses","setStatementResponses","setStatementResponse","statementResponse","../ResponseMessageSet","./BankStatementResponseTransaction","/Users/aolson/Developer/ofx4js/src/domain/data/banking/index.js","./BankAccountInfo","./BankingRequestMessageSet","./BankingResponseMessageSet","/Users/aolson/Developer/ofx4js/src/domain/data/common/AccountDetails.js","/Users/aolson/Developer/ofx4js/src/domain/data/common/AccountInfo.js","/Users/aolson/Developer/ofx4js/src/domain/data/common/AccountStatus.js","AVAIL","PEND","ACTIVE","/Users/aolson/Developer/ofx4js/src/domain/data/common/BalanceInfo.js","BalanceInfo","amount","asOfDate","getAmount","setAmount","getAsOfDate","setAsOfDate","/Users/aolson/Developer/ofx4js/src/domain/data/common/BalanceRecord.js","BalanceRecord","description","timestamp","currency","Currency","Type","DOLLAR","PERCENT","getDescription","setDescription","setType","getValue","setValue","getTimestamp","getCurrency","setCurrency","./Currency","/Users/aolson/Developer/ofx4js/src/domain/data/common/CorrectionAction.js","CorrectionAction","REPLACE","DELETE","/Users/aolson/Developer/ofx4js/src/domain/data/common/Currency.js","exchangeRate","setCode","getExchangeRate","setExchangeRate","/Users/aolson/Developer/ofx4js/src/domain/data/common/Payee.js","Payee","address1","address2","address3","city","zip","country","phone","setAddress1","setAddress2","setAddress3","setCity","setState","setZip","setCountry","getPhone","setPhone","/Users/aolson/Developer/ofx4js/src/domain/data/common/ProcessorDayOff.js","ProcessorDayOff","MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY","SUNDAY","fromOfx","ofxVal","/Users/aolson/Developer/ofx4js/src/domain/data/common/StatementRange.js","includeTransactions","TRUE","getStart","getEnd","getIncludeTransactions","/Users/aolson/Developer/ofx4js/src/domain/data/common/StatementRequest.js","statementRange","getStatementRange","../RequestMessage","./StatementRange","/Users/aolson/Developer/ofx4js/src/domain/data/common/StatementResponse.js","currencyCode","transactionList","ledgerBalance","availableBalance","marketingInfo","TransactionList","setCurrencyCode","setTransactionList","setLedgerBalance","setAvailableBalance","getMarketingInfo","setMarketingInfo","../../../client/AccountStatement","../ResponseMessage","./BalanceInfo","./TransactionList","/Users/aolson/Developer/ofx4js/src/domain/data/common/Status.js","severity","StatusCode","Severity","INFO","WARN","ERROR","defaultSeverity","CLIENT_UP_TO_DATE","GENERAL_ERROR","GENERAL_ACCOUNT_ERROR","ACCOUNT_NOT_FOUND","ACCOUNT_CLOSED","ACCOUNT_NOT_AUTHORIZED","DATE_TOO_SOON","DUPLICATE_REQUEST","UNSUPPORTED_VERSION","INVALID_TAN","MFA_CHALLENGE_REQUIRED","MFA_CHALLENGE_FAILED","PASSWORD_CHANGE_REQUIRED","SIGNON_INVALID","CUSTOMER_ACCOUNT_IN_USE","PASSWORD_LOCKED","INVALID_CLIENT_UID","CONTACT_FI","AUTHTOKEN_REQUIRED","INVALID_AUTHTOKEN","NO_DATA","DB_EXCEPTION","NO_TAXSUPPORT","getDefaultSeverity","fromCode","getSeverity","setSeverity","./StatusCode","/Users/aolson/Developer/ofx4js/src/domain/data/common/StatusCode.js","/Users/aolson/Developer/ofx4js/src/domain/data/common/StatusHolder.js","/Users/aolson/Developer/ofx4js/src/domain/data/common/T1099Request.js","T1099Request","/Users/aolson/Developer/ofx4js/src/domain/data/common/T1099Response.js","T1099Response","/Users/aolson/Developer/ofx4js/src/domain/data/common/Transaction.js","Transaction","transactionType","datePosted","dateInitiated","dateAvailable","correctionId","correctionAction","tempId","checkNumber","referenceNumber","standardIndustrialCode","payeeId","payee","bankAccountTo","creditCardAccountTo","memo","originalCurrency","TransactionType","getTransactionType","setTransactionType","getDatePosted","setDatePosted","getDateInitiated","setDateInitiated","getDateAvailable","setDateAvailable","getBigDecimalAmount","setBigDecimalAmount","getCorrectionId","setCorrectionId","getCorrectionAction","setCorrectionAction","getTempId","setTempId","getCheckNumber","setCheckNumber","getReferenceNumber","setReferenceNumber","getStandardIndustrialCode","setStandardIndustrialCode","getPayeeId","setPayeeId","getPayee","setPayee","getBankAccountTo","setBankAccountTo","getCreditCardAccountTo","setCreditCardAccountTo","getMemo","setMemo","getOriginalCurrency","setOriginalCurrency","../banking/BankAccountDetails","../creditcard/CreditCardAccountDetails","./CorrectionAction","./Payee","./TransactionType","/Users/aolson/Developer/ofx4js/src/domain/data/common/TransactionList.js","transactions","getTransactions","setTransactions","./Transaction","/Users/aolson/Developer/ofx4js/src/domain/data/common/TransactionType.js","CREDIT","DEBIT","INT","DIV","FEE","SRVCHG","DEP","ATM","POS","XFER","CHECK","PAYMENT","CASH","DIRECTDEP","DIRECTDEBIT","REPEATPMT","OTHER","/Users/aolson/Developer/ofx4js/src/domain/data/common/TransferInfo.js","TransferInfo","bankAccountFrom","creditCardAccountFrom","due","getBankAccountFrom","setBankAccountFrom","setAccountFrom","accountFrom","setCreditCardAccountFrom","getCreditCardAccountFrom","setAccountTo","accountTo","getDue","setDue","/Users/aolson/Developer/ofx4js/src/domain/data/common/TransferStatus.js","TransferStatus","date","TransferStatusEvent","getEvent","setEvent","getDate","setDate","./TransferStatusEvent","/Users/aolson/Developer/ofx4js/src/domain/data/common/TransferStatusEvent.js","WILLPROCESSON","POSTEDON","NOFUNDSON","CANCELEDON","FAILEDON","/Users/aolson/Developer/ofx4js/src/domain/data/common/UnknownStatusCode.js","UnknownStatusCode","valueOf","/Users/aolson/Developer/ofx4js/src/domain/data/common/index.js","./AccountDetails","./AccountInfo","./AccountStatus","./BalanceRecord","./ProcessorDayOff","./StatementRequest","./StatementResponse","./Status","./StatusHolder","./T1099Request","./T1099Response","./TransferInfo","./TransferStatus","./UnknownStatusCode","/Users/aolson/Developer/ofx4js/src/domain/data/creditcard/CreditCardAccountDetails.js","/Users/aolson/Developer/ofx4js/src/domain/data/creditcard/CreditCardAccountInfo.js","CreditCardAccountInfo","creditCardAccount","getCreditCardAccount","setCreditCardAccount","./CreditCardAccountDetails","/Users/aolson/Developer/ofx4js/src/domain/data/creditcard/CreditCardRequestMessageSet.js","./CreditCardStatementRequestTransaction","/Users/aolson/Developer/ofx4js/src/domain/data/creditcard/CreditCardResponseMessageSet.js","CreditCardResponseMessageSet","CreditCardStatementResponseTransaction","./CreditCardStatementResponseTransaction","/Users/aolson/Developer/ofx4js/src/domain/data/creditcard/CreditCardStatementRequest.js","/Users/aolson/Developer/ofx4js/src/domain/data/creditcard/CreditCardStatementRequestTransaction.js","./CreditCardStatementRequest","/Users/aolson/Developer/ofx4js/src/domain/data/creditcard/CreditCardStatementResponse.js","CreditCardStatementResponse","/Users/aolson/Developer/ofx4js/src/domain/data/creditcard/CreditCardStatementResponseTransaction.js","./CreditCardStatementResponse","/Users/aolson/Developer/ofx4js/src/domain/data/creditcard/index.js","./CreditCardAccountInfo","./CreditCardRequestMessageSet","./CreditCardResponseMessageSet","/Users/aolson/Developer/ofx4js/src/domain/data/index.js","common","seclist","./MessageSetProfile","./RequestEnvelope","./RequestMessage","./ResponseEnvelope","./SignonProfile","./TransactionWrappedRequestMessage","./TransactionWrappedResponseMessage","./banking/index","./common/index","./creditcard/index","./investment/index","./profile/index","./seclist/index","./signon/index","./signup/index","./tax1099/index","/Users/aolson/Developer/ofx4js/src/domain/data/investment/accounts/AccountType.js","INDIVIDUAL","JOINT","TRUST","CORPORATE","/Users/aolson/Developer/ofx4js/src/domain/data/investment/accounts/ActivationStatus.js","ActivationStatus","PENDING","AVAILABLE","/Users/aolson/Developer/ofx4js/src/domain/data/investment/accounts/InvestmentAccountDetails.js","../../../../meta/Aggregate","../../../../meta/Element","../../../../util/inherit","../../common/AccountDetails","/Users/aolson/Developer/ofx4js/src/domain/data/investment/accounts/InvestmentAccountInfo.js","InvestmentAccountInfo","investmentAccount","unitedStatesAccountType","supportsChecking","activationStatus","investmentAccountType","optionLevel","UnitedStatesAccountType","getInvestmentAccount","setInvestmentAccount","getUnitedStatesAccountType","setUnitedStatesAccountType","getUnitedStatesAccountTypeEnum","getSupportsChecking","setSupportsChecking","getActivationStatus","setActivationStatus","getActivationStatusEnum","getInvestmentAccountType","setInvestmentAccountType","getInvestmentAccountTypeEnum","getOptionLevel","setOptionLevel","../../../../meta/ChildAggregate","../../common/AccountInfo","./ActivationStatus","./InvestmentAccountDetails","./UnitedStatesAccountType","/Users/aolson/Developer/ofx4js/src/domain/data/investment/accounts/SubAccountType.js","SubAccountType","MARGIN","SHORT","/Users/aolson/Developer/ofx4js/src/domain/data/investment/accounts/UnitedStatesAccountType.js","R401K","R403B","IRA","KEOUGH","SARSEP","SIMPLE","NORMAL","TDA","UGMA","/Users/aolson/Developer/ofx4js/src/domain/data/investment/accounts/index.js","./InvestmentAccountInfo","./SubAccountType","/Users/aolson/Developer/ofx4js/src/domain/data/investment/index.js","accounts","positions","statements","./accounts/index","./positions/index","./statements/index","./transactions/index","/Users/aolson/Developer/ofx4js/src/domain/data/investment/positions/BasePosition.js","BasePosition","investmentPosition","PositionType","Inv401KSource","InvestmentPosition","getInvestmentPosition","setInvestmentPosition","getSecurityId","getHeldInAccount","getHeldInAccountEnum","getPositionType","getPositionTypeEnum","getUnits","getUnitPrice","getMarketValue","getMarketValueDate","get401kSource","get401kSourceEnum","../accounts/SubAccountType","./Inv401KSource","./InvestmentPosition","./PositionType","/Users/aolson/Developer/ofx4js/src/domain/data/investment/positions/DebtPosition.js","DebtPosition","./BasePosition","/Users/aolson/Developer/ofx4js/src/domain/data/investment/positions/Inv401KSource.js","PRETAX","AFTER_TAX","MATCH","PROFIT_SHARING","ROLLOVER","OTHER_VEST","OTHER_NONVEST","/Users/aolson/Developer/ofx4js/src/domain/data/investment/positions/InvestmentPosition.js","securityId","heldInAccount","positionType","unitPrice","marketValue","marketValueDate","inv401kSource","SecurityId","setSecurityId","setHeldInAccount","setPositionType","setUnits","setUnitPrice","setMarketValue","setMarketValueDate","set401kSource","../../seclist/SecurityId","/Users/aolson/Developer/ofx4js/src/domain/data/investment/positions/InvestmentPositionList.js","InvestmentPositionList","getPositions","setPositions","/Users/aolson/Developer/ofx4js/src/domain/data/investment/positions/MutualFundPosition.js","MutualFundPosition","unitsStreet","unitsUser","reinvestDividends","reinvestCapitalGains","getUnitsStreet","setUnitsStreet","getUnitsUser","setUnitsUser","getReinvestDividends","setReinvestDividends","getReinvestCapitalGains","setReinvestCapitalGains","/Users/aolson/Developer/ofx4js/src/domain/data/investment/positions/OptionsPosition.js","OptionsPosition","secured","ShortOptionSecurity","getSecured","setSecured","getSecuredEnum","./ShortOptionSecurity","/Users/aolson/Developer/ofx4js/src/domain/data/investment/positions/OtherPosition.js","OtherPosition","/Users/aolson/Developer/ofx4js/src/domain/data/investment/positions/PositionType.js","LONG","/Users/aolson/Developer/ofx4js/src/domain/data/investment/positions/ShortOptionSecurity.js","NAKED","COVERED","/Users/aolson/Developer/ofx4js/src/domain/data/investment/positions/StockPosition.js","StockPosition","/Users/aolson/Developer/ofx4js/src/domain/data/investment/positions/index.js","./DebtPosition","./InvestmentPositionList","./MutualFundPosition","./OptionsPosition","./OtherPosition","./StockPosition","/Users/aolson/Developer/ofx4js/src/domain/data/investment/statements/BalanceList.js","BalanceList","balanceRecords","getBalanceRecords","setBalanceRecords","../../common/BalanceRecord","/Users/aolson/Developer/ofx4js/src/domain/data/investment/statements/IncludePosition.js","sentDownDate","includePositions","getDateSentDown","setDateSentDown","getIncludePositions","setIncludePositions","/Users/aolson/Developer/ofx4js/src/domain/data/investment/statements/InvestmentBalance.js","InvestmentBalance","availableCash","marginBalance","shortBalance","buyingPower","balanceList","getAvailableCash","setAvailableCash","getMarginBalance","setMarginBalance","getShortBalance","setShortBalance","getBuyingPower","setBuyingPower","getBalanceList","setBalanceList","./BalanceList","/Users/aolson/Developer/ofx4js/src/domain/data/investment/statements/InvestmentStatementRequest.js","includeOpenOrders","FALSE","includePosition","includeBalance","getIncludeOpenOrders","setIncludeOpenOrders","getIncludePosition","getIncludeBalance","setIncludeBalance","../../common/StatementRequest","../accounts/InvestmentAccountDetails","./IncludePosition","/Users/aolson/Developer/ofx4js/src/domain/data/investment/statements/InvestmentStatementRequestMessageSet.js","../../MessageSetType","../../RequestMessageSet","./InvestmentStatementRequestTransaction","/Users/aolson/Developer/ofx4js/src/domain/data/investment/statements/InvestmentStatementRequestTransaction.js","../../TransactionWrappedRequestMessage","./InvestmentStatementRequest","/Users/aolson/Developer/ofx4js/src/domain/data/investment/statements/InvestmentStatementResponse.js","InvestmentStatementResponse","dateOfStatement","positionList","accountBalance","InvestmentTransactionList","getDateOfStatement","setDateOfStatement","getInvestmentTransactionList","setInvestmentTransactionList","getPositionList","setPositionList","getAccountBalance","setAccountBalance","../../common/StatementResponse","../positions/InvestmentPositionList","../transactions/InvestmentTransactionList","./InvestmentBalance","/Users/aolson/Developer/ofx4js/src/domain/data/investment/statements/InvestmentStatementResponseMessageSet.js","InvestmentStatementResponseMessageSet","InvestmentStatementResponseTransaction","../../ResponseMessageSet","./InvestmentStatementResponseTransaction","/Users/aolson/Developer/ofx4js/src/domain/data/investment/statements/InvestmentStatementResponseTransaction.js","../../TransactionWrappedResponseMessage","./InvestmentStatementResponse","/Users/aolson/Developer/ofx4js/src/domain/data/investment/statements/index.js","./InvestmentStatementRequestMessageSet","./InvestmentStatementResponseMessageSet","/Users/aolson/Developer/ofx4js/src/domain/data/investment/transactions/BaseBuyInvestmentTransaction.js","BaseBuyInvestmentTransaction","BaseInvestmentTransaction","buyInvestment","TransactionWithSecurity","BuyInvestmentTransaction","getBuyInvestment","setBuyInvestment","getInvestmentTransaction","getMarkup","getCommission","getTaxes","getFees","getLoad","getTotal","getOriginalCurrencyInfo","getSubAccountSecurity","getSubAccountSecurityEnum","getSubAccountFund","getSubAccountFundEnum","./BaseInvestmentTransaction","./BuyInvestmentTransaction","./TransactionWithSecurity","/Users/aolson/Developer/ofx4js/src/domain/data/investment/transactions/BaseInvestmentTransaction.js","getTransactionId","getServerId","getTradeDate","getSettlementDate","getReversalTransactionId","/Users/aolson/Developer/ofx4js/src/domain/data/investment/transactions/BaseOtherInvestmentTransaction.js","BaseOtherInvestmentTransaction","investmentTransaction","InvestmentTransaction","setInvestmentTransaction","./InvestmentTransaction","/Users/aolson/Developer/ofx4js/src/domain/data/investment/transactions/BaseSellInvestmentTransaction.js","BaseSellInvestmentTransaction","sellInvestment","SellInvestmentTransaction","getSellInvestment","setSellInvestment","getMarkdown","getWithholding","getTaxExempt","getGain","getLoadId","getLoanId","getStateWithholding","getPenalty","../positions/Inv401KSource","./SellInvestmentTransaction","/Users/aolson/Developer/ofx4js/src/domain/data/investment/transactions/BuyDebtTransaction.js","BuyDebtTransaction","BUY_DEBT","accruedInterest","getAccruedInterest","setAccruedInterest","./BaseBuyInvestmentTransaction","/Users/aolson/Developer/ofx4js/src/domain/data/investment/transactions/BuyInvestmentTransaction.js","markup","commission","taxes","fees","load","total","originalCurrencyInfo","subAccountSecurity","subAccountFund","OriginalCurrency","setMarkup","setCommission","setTaxes","setFees","setLoad","setTotal","setOriginalCurrencyInfo","setSubAccountSecurity","setSubAccountFund","subAcctFund","./OriginalCurrency","/Users/aolson/Developer/ofx4js/src/domain/data/investment/transactions/BuyMutualFundTransaction.js","BuyMutualFundTransaction","BUY_MUTUAL_FUND","buyType","relatedTransactionId","BuyType","getBuyType","setBuyType","getBuyTypeEnum","getRelatedTransactionId","setRelatedTransactionId","./BuyType","/Users/aolson/Developer/ofx4js/src/domain/data/investment/transactions/BuyOptionTransaction.js","BuyOptionTransaction","BUY_OPTION","optionBuyType","sharesPerContact","OptionBuyType","getOptionBuyType","setOptionBuyType","getOptionBuyTypeEnum","getSharesPerContract","setSharesPerContract","./OptionBuyType","/Users/aolson/Developer/ofx4js/src/domain/data/investment/transactions/BuyOtherTransaction.js","BuyOtherTransaction","BUY_OTHER","/Users/aolson/Developer/ofx4js/src/domain/data/investment/transactions/BuyStockTransaction.js","BuyStockTransaction","BUY_STOCK","/Users/aolson/Developer/ofx4js/src/domain/data/investment/transactions/BuyType.js","BUY","BUY_TO_COVER","/Users/aolson/Developer/ofx4js/src/domain/data/investment/transactions/CloseOptionAction.js","CloseOptionAction","EXERCISE","ASSIGN","EXPIRE","/Users/aolson/Developer/ofx4js/src/domain/data/investment/transactions/CloseOptionTransaction.js","CloseOptionTransaction","CLOSE_OPTION","optionAction","gain","getOptionAction","setOptionAction","getOptionActionEnum","getSharesPerContact","setSharesPerContact","setGain","./BaseOtherInvestmentTransaction","./CloseOptionAction","/Users/aolson/Developer/ofx4js/src/domain/data/investment/transactions/IncomeTransaction.js","IncomeTransaction","INCOME","incomeType","taxExempt","withholding","IncomeType","getIncomeType","setIncomeType","getIncomeTypeEnum","subAcctSec","setTaxExempt","setWithholding","./IncomeType","/Users/aolson/Developer/ofx4js/src/domain/data/investment/transactions/IncomeType.js","LONG_TERM_CAP_GAINS","SHORT_TERM_CAP_GAINS","DIVIDEND","INTEREST","MISC","/Users/aolson/Developer/ofx4js/src/domain/data/investment/transactions/InvestmentBankTransaction.js","InvestmentBankTransaction","getTransaction","setTransaction","../../common/Transaction","/Users/aolson/Developer/ofx4js/src/domain/data/investment/transactions/InvestmentExpenseTransaction.js","InvestmentExpenseTransaction","INVESTMENT_EXPENSE","/Users/aolson/Developer/ofx4js/src/domain/data/investment/transactions/InvestmentTransaction.js","transactionId","serverId","tradeDate","settlementDate","reversalTransactionId","setTransactionId","setServerId","setTradeDate","setSettlementDate","setReversalTransactionId","/Users/aolson/Developer/ofx4js/src/domain/data/investment/transactions/InvestmentTransactionList.js","bankTransactions","getInvestmentTransactions","setInvestmentTransactions","getBankTransactions","setBankTransactions","./InvestmentBankTransaction","/Users/aolson/Developer/ofx4js/src/domain/data/investment/transactions/JournalFundTransaction.js","JournalFundTransaction","JOURNAL_FUND","subAccountFrom","subAccountTo","getFromSubAccountFund","setFromSubAccountFund","getFromSubAccountFundEnum","getToSubAccountFund","setToSubAccountFund","getToSubAccountFundEnum","../../../../domain/data/investment/accounts/SubAccountType","/Users/aolson/Developer/ofx4js/src/domain/data/investment/transactions/JournalSecurityTransaction.js","JournalSecurityTransaction","JOURNAL_SECURITY","/Users/aolson/Developer/ofx4js/src/domain/data/investment/transactions/MarginInterestTransaction.js","MarginInterestTransaction","MARGIN_INTEREST","SetOriginalCurrency","/Users/aolson/Developer/ofx4js/src/domain/data/investment/transactions/OptionBuyType.js","BUY_TO_OPEN","BUY_TO_CLOSE","/Users/aolson/Developer/ofx4js/src/domain/data/investment/transactions/OptionSellType.js","OptionSellType","SELL_TO_CLOSE","SELL_TO_OPEN","/Users/aolson/Developer/ofx4js/src/domain/data/investment/transactions/OriginalCurrency.js","currencyRate","getCurrencyRate","setCurrencyRate","/Users/aolson/Developer/ofx4js/src/domain/data/investment/transactions/ReinvestIncomeTransaction.js","ReinvestIncomeTransaction","REINVEST_INCOME","/Users/aolson/Developer/ofx4js/src/domain/data/investment/transactions/RelatedOptionType.js","RelatedOptionType","SPREAD","STRADDLE","/Users/aolson/Developer/ofx4js/src/domain/data/investment/transactions/ReturnOfCapitalTransaction.js","ReturnOfCapitalTransaction","RETURN_OF_CAPITAL","/Users/aolson/Developer/ofx4js/src/domain/data/investment/transactions/SellDebtReason.js","SellDebtReason","CALL","SELL","MATURITY","/Users/aolson/Developer/ofx4js/src/domain/data/investment/transactions/SellDebtTransaction.js","SellDebtTransaction","SELL_DEBT","sellReason","getSellReason","setSellReason","getSellReasonEnum","./BaseSellInvestmentTransaction","./SellDebtReason","/Users/aolson/Developer/ofx4js/src/domain/data/investment/transactions/SellInvestmentTransaction.js","markdown","loanId","stateWithholding","penalty","setMarkdown","setLoanId","setStateWithholding","setPenalty","/Users/aolson/Developer/ofx4js/src/domain/data/investment/transactions/SellMutualFundTransaction.js","SellMutualFundTransaction","SELL_MUTUAL_FUND","sellType","averageCostBasis","SellType","getSellType","setSellType","getSellTypeEnum","getAverageCostBasis","setAverageCostBasis","./SellType","/Users/aolson/Developer/ofx4js/src/domain/data/investment/transactions/SellOptionTransaction.js","SellOptionTransaction","SELL_OPTION","optionSellType","relatedType","getOptionSellType","setOptionSellType","getOptionSellTypeEnum","getRelatedType","setRelatedType","getRelatedTypeEnum","../positions/ShortOptionSecurity","./OptionSellType","./RelatedOptionType","/Users/aolson/Developer/ofx4js/src/domain/data/investment/transactions/SellOtherTransaction.js","SellOtherTransaction","SELL_OTHER","/Users/aolson/Developer/ofx4js/src/domain/data/investment/transactions/SellStockTransaction.js","SellStockTransaction","SELL_STOCK","/Users/aolson/Developer/ofx4js/src/domain/data/investment/transactions/SellType.js","SELL_SHORT","/Users/aolson/Developer/ofx4js/src/domain/data/investment/transactions/SplitTransaction.js","SplitTransaction","SPLIT","oldUnits","newUnits","numerator","denominator","cashForFractionalUnits","getOldUnits","setOldUnits","getNewUnits","setNewUnits","getNumerator","setNumerator","getDenominator","setDenominator","getCashForFractionalUnits","setCashForFractionalUnits","/Users/aolson/Developer/ofx4js/src/domain/data/investment/transactions/TransactionType.js","TRANSFER","/Users/aolson/Developer/ofx4js/src/domain/data/investment/transactions/TransactionWithSecurity.js","/Users/aolson/Developer/ofx4js/src/domain/data/investment/transactions/TransferAction.js","TransferAction","IN","OUT","/Users/aolson/Developer/ofx4js/src/domain/data/investment/transactions/TransferInvestmentTransaction.js","TransferInvestmentTransaction","transferAction","purchaseDate","getTransferAction","setTransferAction","getTransferActionEnum","getPurchaseDate","setPurchaseDate","../positions/PositionType","./TransferAction","/Users/aolson/Developer/ofx4js/src/domain/data/investment/transactions/index.js","./BuyDebtTransaction","./BuyMutualFundTransaction","./BuyOptionTransaction","./BuyOtherTransaction","./BuyStockTransaction","./CloseOptionTransaction","./IncomeTransaction","./InvestmentExpenseTransaction","./InvestmentTransactionList","./JournalFundTransaction","./JournalSecurityTransaction","./MarginInterestTransaction","./ReinvestIncomeTransaction","./ReturnOfCapitalTransaction","./SellDebtTransaction","./SellMutualFundTransaction","./SellOptionTransaction","./SellOtherTransaction","./SellStockTransaction","./SplitTransaction","./TransferInvestmentTransaction","/Users/aolson/Developer/ofx4js/src/domain/data/profile/AbstractMessageSetInfo.js","AbstractMessageSetInfo","versionSpecificInformationList","VersionSpecificMessageSetInfo","getVersionSpecificInformationList","setVersionSpecificInformationList","./VersionSpecificMessageSetInfo","/Users/aolson/Developer/ofx4js/src/domain/data/profile/CharacterType.js","CharacterType","ALPHAONLY","NUMERICONLY","ALPHAORNUMERIC","ALPHAANDNUMERIC","/Users/aolson/Developer/ofx4js/src/domain/data/profile/ClientRoutingCapability.js","ClientRoutingCapability","SERVICE","MESSAGE_SET","/Users/aolson/Developer/ofx4js/src/domain/data/profile/CoreMessageSetInfo.js","CoreMessageSetInfo","serviceProviderName","sslRequired","realm","language","syncCapability","fileBasedErrorRecoverySupport","timeout","SynchronizationCapability","setServiceProviderName","setUrl","getSslRequired","setSslRequired","setRealm","setLanguage","setSyncCapability","getFileBasedErrorRecoverySupport","setFileBasedErrorRecoverySupport","getIntuTimeout","setIntuTimeout","../ApplicationSecurity","./SynchronizationCapability","/Users/aolson/Developer/ofx4js/src/domain/data/profile/MessageSetInfoList.js","MessageSetInfoList","informationList","getInformationList","setInformationList","./AbstractMessageSetInfo","/Users/aolson/Developer/ofx4js/src/domain/data/profile/ProfileRequest.js","routingCapability","profileLastUpdated","getRoutingCapability","setRoutingCapability","getProfileLastUpdated","./ClientRoutingCapability","/Users/aolson/Developer/ofx4js/src/domain/data/profile/ProfileRequestMessageSet.js","getProfileRequest","./ProfileRequestTransaction","/Users/aolson/Developer/ofx4js/src/domain/data/profile/ProfileRequestTransaction.js","./ProfileRequest","/Users/aolson/Developer/ofx4js/src/domain/data/profile/ProfileResponse.js","ProfileResponse","messageSetList","signonInfoList","financialInstitutionName","customerServicePhone","technicalSupportPhone","fax","siteURL","SignonInfoList","getMessageSetList","setMessageSetList","getSignonInfoList","setSignonInfoList","setFinancialInstitutionName","setCustomerServicePhone","setTechnicalSupportPhone","setFax","setSiteURL","setEmail","getProfiles","profiles","informationListIdx","info","versionSpecificInformationListIdx","versionSpecificInfo","getInfoList","infoList","infoListIdx","signonInfo","../../../client/FinancialInstitutionProfile","./MessageSetInfoList","./SignonInfoList","/Users/aolson/Developer/ofx4js/src/domain/data/profile/ProfileResponseMessageSet.js","ProfileResponseMessageSet","profileResponse","ProfileResponseTransaction","setProfileResponse","messages","./ProfileResponseTransaction","/Users/aolson/Developer/ofx4js/src/domain/data/profile/ProfileResponseTransaction.js","./ProfileResponse","/Users/aolson/Developer/ofx4js/src/domain/data/profile/SignonInfo.js","SignonInfo","minPasswordCharacters","maxPasswordCharacters","passwordCharacterType","passwordCaseSensitive","passwordSpecialCharsAllowed","passwordSpacesAllowed","changePasswordSupported","changePasswordFirstRequired","additionalCredientialsLabel1","additionalCredientialsLabel2","clientUIDRequired","authTokenRequiredForFirstSignon","authTokenLabel","authTokenInfoURL","mfaSupported","mfaChallengeRequiredForFirstSignon","setMinPasswordCharacters","setMaxPasswordCharacters","setPasswordCharacterType","setPasswordCaseSensitive","setPasswordSpecialCharsAllowed","setPasswordSpacesAllowed","setChangePasswordSupported","setChangePasswordFirstRequired","setAdditionalCredientialsLabel1","setAdditionalCredientialsLabel2","setClientUIDRequired","setAuthTokenRequiredForFirstSignon","setAuthTokenLabel","setAuthTokenInfoURL","setMfaSupported","setMfaChallengeRequiredForFirstSignon","../SignonProfile","./CharacterType","/Users/aolson/Developer/ofx4js/src/domain/data/profile/SignonInfoList.js","setInfoList","./SignonInfo","/Users/aolson/Developer/ofx4js/src/domain/data/profile/SynchronizationCapability.js","FULL","LITE","/Users/aolson/Developer/ofx4js/src/domain/data/profile/VersionSpecificMessageSetInfo.js","core","getCore","setCore","../MessageSetProfile","./CoreMessageSetInfo","/Users/aolson/Developer/ofx4js/src/domain/data/profile/index.js","./ProfileRequestMessageSet","./ProfileResponseMessageSet","./info/index","/Users/aolson/Developer/ofx4js/src/domain/data/profile/info/BankingMessageSetInfo.js","BankingMessageSetInfo","version1Info","BankingV1MessageSetInfo","getVersion1Info","setVersion1Info","../../profile/AbstractMessageSetInfo","./BankingV1MessageSetInfo","/Users/aolson/Developer/ofx4js/src/domain/data/profile/info/BankingV1MessageSetInfo.js","invalidAccountTypes","closingAvail","transferProfile","stopCheckProfile","emailProfile","imageProfile","TransferProfile","StopCheckProfile","EmailProfile","ImageProfile","getInvalidAccountTypes","setInvalidAccountTypes","getClosingAvail","setClosingAvail","getTransferProfile","setTransferProfile","getStopCheckProfile","setStopCheckProfile","getEmailProfile","setEmailProfile","getImageProfile","setImageProfile","../../banking/AccountType","../VersionSpecificMessageSetInfo","./banking/EmailProfile","./banking/StopCheckProfile","./common/ImageProfile","./common/TransferProfile","/Users/aolson/Developer/ofx4js/src/domain/data/profile/info/BillpayMessageSetInfo.js","BillpayMessageSetInfo","BillpayV1MessageSetInfo","./BillpayV1MessageSetInfo","/Users/aolson/Developer/ofx4js/src/domain/data/profile/info/BillpayV1MessageSetInfo.js","daysWith","defaultDaysToPay","transferDaysWith","transferDefaultDaysToPay","processorDaysOff","processorEndTime","modelWindow","postProcessorWindow","supportsStatusUpdateViaPaymentModificationResponse","supportsPaymentByAddress","supportsPaymentByTransfer","supportsPaymentByPayeeId","userCanAddPayee","supportsExtendedPayment","canModifyPayments","canModifyModels","supportsDifferentFirstPayment","supportsDifferentLastPayment","supportsBillPresentmentContext","getDaysWith","setDaysWith","getDefaultDaysToPay","setDefaultDaysToPay","getTransferDaysWith","setTransferDaysWith","getTransferDefaultDaysToPay","setTransferDefaultDaysToPay","getProcessorDaysOff","setProcessorDaysOff","getProcessorEndTime","setProcessorEndTime","getModelWindow","setModelWindow","getPostProcessorWindow","setPostProcessorWindow","getSupportsStatusUpdateViaPaymentModificationResponse","setSupportsStatusUpdateViaPaymentModificationResponse","getSupportsPaymentByAddress","setSupportsPaymentByAddress","getSupportsPaymentByTransfer","setSupportsPaymentByTransfer","getSupportsPaymentByPayeeId","setSupportsPaymentByPayeeId","getUserCanAddPayee","setUserCanAddPayee","getSupportsExtendedPayment","setSupportsExtendedPayment","getCanModifyPayments","setCanModifyPayments","getCanModifyModels","setCanModifyModels","getSupportsDifferentFirstPayment","setSupportsDifferentFirstPayment","getSupportsDifferentLastPayment","setSupportsDifferentLastPayment","getSupportsBillPresentmentContext","setSupportsBillPresentmentContext","../../common/ProcessorDayOff","../../profile/VersionSpecificMessageSetInfo","/Users/aolson/Developer/ofx4js/src/domain/data/profile/info/CreditCardMessageSetInfo.js","CreditCardMessageSetInfo","CreditCardV1MessageSetInfo","./CreditCardV1MessageSetInfo","/Users/aolson/Developer/ofx4js/src/domain/data/profile/info/CreditCardV1MessageSetInfo.js","/Users/aolson/Developer/ofx4js/src/domain/data/profile/info/EmailMessageSetInfo.js","EmailMessageSetInfo","EmailV1MessageSetInfo","./EmailV1MessageSetInfo","/Users/aolson/Developer/ofx4js/src/domain/data/profile/info/EmailV1MessageSetInfo.js","supportsMail","supportsMimeType","getSupportsMail","setSupportsMail","getSupportsMimeType","setSupportsMimeType","/Users/aolson/Developer/ofx4js/src/domain/data/profile/info/InterbankTransferMessageSetInfo.js","InterbankTransferMessageSetInfo","InterbankTransferV1MessageSetInfo","./InterbankTransferV1MessageSetInfo","/Users/aolson/Developer/ofx4js/src/domain/data/profile/info/InterbankTransferV1MessageSetInfo.js","supportsBillPay","cancelWindow","domesticInterbankTransferFee","internationalInterbankTransferFee","getSupportsBillPay","setSupportsBillPay","getCancelWindow","setCancelWindow","getDomesticInterbankTransferFee","setDomesticInterbankTransferFee","getInternationalInterbankTransferFee","setInternationalInterbankTransferFee","/Users/aolson/Developer/ofx4js/src/domain/data/profile/info/InvestmentMessageSetInfo.js","InvestmentMessageSetInfo","InvestmentV1MessageSetInfo","./InvestmentV1MessageSetInfo","/Users/aolson/Developer/ofx4js/src/domain/data/profile/info/InvestmentV1MessageSetInfo.js","supportsStatementsDownload","supportsOpenOrdersDownload","supportsPositionsDownload","supportsBalanceDownload","supportsEmail","supports401kInformation","supportsClosingStatements","getSupportsStatementsDownload","setSupportsStatementsDownload","getSupportsOpenOrdersDownload","setSupportsOpenOrdersDownload","getSupportsPositionsDownload","setSupportsPositionsDownload","getSupportsBalanceDownload","setSupportsBalanceDownload","getSupportsEmail","setSupportsEmail","getSupports401kInformation","setSupports401kInformation","getSupportsClosingStatements","setSupportsClosingStatements","/Users/aolson/Developer/ofx4js/src/domain/data/profile/info/ProfileMessageSetInfo.js","ProfileMessageSetInfo","ProfileV1MessageSetInfo","./ProfileV1MessageSetInfo","/Users/aolson/Developer/ofx4js/src/domain/data/profile/info/ProfileV1MessageSetInfo.js","/Users/aolson/Developer/ofx4js/src/domain/data/profile/info/SecurityListMessageSetInfo.js","SecurityListMessageSetInfo","SecurityListV1MessageSetInfo","./SecurityListV1MessageSetInfo","/Users/aolson/Developer/ofx4js/src/domain/data/profile/info/SecurityListV1MessageSetInfo.js","supportsSecurityListDownload","getSupportsSecurityListDownload","setSupportsSecurityListDownload","/Users/aolson/Developer/ofx4js/src/domain/data/profile/info/SignOnMessageSetInfo.js","SignOnMessageSetInfo","SignOnV1MessageSetInfo","./SignOnV1MessageSetInfo","/Users/aolson/Developer/ofx4js/src/domain/data/profile/info/SignOnV1MessageSetInfo.js","/Users/aolson/Developer/ofx4js/src/domain/data/profile/info/SignupMessageSetInfo.js","SignupMessageSetInfo","SignupV1MessageSetInfo","./SignupV1MessageSetInfo","/Users/aolson/Developer/ofx4js/src/domain/data/profile/info/SignupV1MessageSetInfo.js","clientEnrollment","webEnrollment","otherEnrollment","supportsClientUserInfoChanges","supportsAvailableAccounts","supportsClientServiceActivationRequests","ClientEnrollment","WebEnrollment","OtherEnrollment","getClientEnrollment","setClientEnrollment","getWebEnrollment","setWebEnrollment","getOtherEnrollment","setOtherEnrollment","getSupportsClientUserInfoChanges","setSupportsClientUserInfoChanges","getSupportsAvailableAccounts","setSupportsAvailableAccounts","getSupportsClientServiceActivationRequests","setSupportsClientServiceActivationRequests","./signup/ClientEnrollment","./signup/OtherEnrollment","./signup/WebEnrollment","/Users/aolson/Developer/ofx4js/src/domain/data/profile/info/WireTransferMessageSetInfo.js","WireTransferMessageSetInfo","WireTransferV1MessageSetInfo","./WireTransferV1MessageSetInfo","/Users/aolson/Developer/ofx4js/src/domain/data/profile/info/WireTransferV1MessageSetInfo.js","processEndTime","supportsScheduledTransfers","domesticWireTransferFee","internationalWireTransferFee","getProcessEndTime","setProcessEndTime","getSupportsScheduledTransfers","setSupportsScheduledTransfers","getDomesticWireTransferFee","setDomesticWireTransferFee","getInternationalWireTransferFee","setInternationalWireTransferFee","/Users/aolson/Developer/ofx4js/src/domain/data/profile/info/banking/EmailProfile.js","canEmail","canNotify","getCanEmail","setCanEmail","getCanNotify","setCanNotify","../../../../../meta/Aggregate","../../../../../meta/Element","/Users/aolson/Developer/ofx4js/src/domain/data/profile/info/banking/StopCheckProfile.js","canUseRange","canUseDescription","stopCheckFee","getCanUseRange","setCanUseRange","getCanUseDescription","setCanUseDescription","getStopCheckFee","setStopCheckFee","../../../common/ProcessorDayOff","/Users/aolson/Developer/ofx4js/src/domain/data/profile/info/banking/index.js","./EmailProfile","./StopCheckProfile","/Users/aolson/Developer/ofx4js/src/domain/data/profile/info/common/ImageProfile.js","closingImageAvailable","transactionImageAvailable","getClosingImageAvailable","setClosingImageAvailable","getTransactionImageAvailable","setTransactionImageAvailable","/Users/aolson/Developer/ofx4js/src/domain/data/profile/info/common/TransferProfile.js","supportsRecurringTransfers","supportsLoanTransfers","supportsScheduledLoanTransfers","supportsRecurringLoanTransfers","supportsTransferModification","supportsModelModification","withdrawnDays","getSupportsRecurringTransfers","setSupportsRecurringTransfers","getSupportsLoanTransfers","setSupportsLoanTransfers","getSupportsScheduledLoanTransfers","setSupportsScheduledLoanTransfers","getSupportsRecurringLoanTransfers","setSupportsRecurringLoanTransfers","getSupportsTransferModification","setSupportsTransferModification","getSupportsModelModification","setSupportsModelModification","getWithdrawnDays","setWithdrawnDays","/Users/aolson/Developer/ofx4js/src/domain/data/profile/info/common/index.js","./ImageProfile","./TransferProfile","/Users/aolson/Developer/ofx4js/src/domain/data/profile/info/index.js","./BankingMessageSetInfo","./BillpayMessageSetInfo","./CreditCardMessageSetInfo","./EmailMessageSetInfo","./InterbankTransferMessageSetInfo","./InvestmentMessageSetInfo","./ProfileMessageSetInfo","./SecurityListMessageSetInfo","./SignOnMessageSetInfo","./SignupMessageSetInfo","./WireTransferMessageSetInfo","/Users/aolson/Developer/ofx4js/src/domain/data/profile/info/signup/ClientEnrollment.js","accountRequired","getAccountRequired","setAccountRequired","/Users/aolson/Developer/ofx4js/src/domain/data/profile/info/signup/OtherEnrollment.js","/Users/aolson/Developer/ofx4js/src/domain/data/profile/info/signup/WebEnrollment.js","/Users/aolson/Developer/ofx4js/src/domain/data/profile/info/signup/index.js","./ClientEnrollment","./OtherEnrollment","./WebEnrollment","/Users/aolson/Developer/ofx4js/src/domain/data/seclist/AssetClass.js","AssetClass","DOMESTIC_BOND","INTL_BOND","LARGE_STOCK","SMALL_STOCK","INTL_STOCK","MONEY_MARKET","/Users/aolson/Developer/ofx4js/src/domain/data/seclist/BaseSecurityInfo.js","BaseSecurityInfo","securityInfo","SecurityInfo","getSecurityInfo","setSecurityInfo","getSecurityName","getTickerSymbol","getFiId","getRating","getUnitPriceAsOfDate","./SecurityInfo","/Users/aolson/Developer/ofx4js/src/domain/data/seclist/CallType.js","CallType","PUT","PREFUND","/Users/aolson/Developer/ofx4js/src/domain/data/seclist/CouponFrequency.js","CouponFrequency","MONTHLY","QUARTERLY","SEMIANNUAL","ANNUAL","/Users/aolson/Developer/ofx4js/src/domain/data/seclist/DebtClass.js","DebtClass","TREASURY","MUNICIPAL","/Users/aolson/Developer/ofx4js/src/domain/data/seclist/DebtSecurityInfo.js","DebtSecurityInfo","parValue","debtType","debtClass","couponRate","nextMaturityDate","couponFrequency","callPrice","yieldToCall","nextCallDate","callType","yieldToMaturity","debtMaturityDate","assetClass","fiAssetClass","DebtType","getParValue","setParValue","getDebtType","setDebtType","getDebtTypeEnum","getDebtClass","setDebtClass","getDebtClassEnum","getCouponRate","setCouponRate","getNextMaturityDate","setNextMaturityDate","getCouponFrequency","setCouponFrequency","getCouponFrequencyEnum","getCallPrice","setCallPrice","getYieldToCall","setYieldToCall","getNextCallDate","setNextCallDate","getCallType","setCallType","getCallTypeEnum","getYieldToMaturity","setYieldToMaturity","getDebtMaturityDate","setDebtMaturityDate","getAssetClass","setAssetClass","getAssetClassEnum","getFiAssetClass","setFiAssetClass","./AssetClass","./BaseSecurityInfo","./CallType","./CouponFrequency","./DebtClass","./DebtType","/Users/aolson/Developer/ofx4js/src/domain/data/seclist/DebtType.js","COUPON","ZERO","/Users/aolson/Developer/ofx4js/src/domain/data/seclist/MutualFundSecurityInfo.js","MutualFundSecurityInfo","mfType","dateYieldAsOf","MutualFundType","getTypeEnum","getYield","setYield","yield_","getDateYieldAsOf","setDateYieldAsOf","./MutualFundType","/Users/aolson/Developer/ofx4js/src/domain/data/seclist/MutualFundType.js","OPEN_END","CLOSE_END","/Users/aolson/Developer/ofx4js/src/domain/data/seclist/OptionSecurityInfo.js","OptionSecurityInfo","optionType","strikePrice","expirationDate","underlyingSecurity","OptionType","getOptionType","setOptionType","getOptionTypeEnum","getStrikePrice","setStrikePrice","getExpirationDate","setExpirationDate","getUnderlyingSecurity","setUnderlyingSecurity","./OptionType","./SecurityId","/Users/aolson/Developer/ofx4js/src/domain/data/seclist/OptionType.js","/Users/aolson/Developer/ofx4js/src/domain/data/seclist/OtherSecurityInfo.js","OtherSecurityInfo","typeDesc","getTypeDesc","setTypeDesc","/Users/aolson/Developer/ofx4js/src/domain/data/seclist/SecurityId.js","uniqueId","uniqueIdType","getUniqueId","setUniqueId","getUniqueIdType","setUniqueIdType","/Users/aolson/Developer/ofx4js/src/domain/data/seclist/SecurityInfo.js","securityName","tickerSymbol","fiId","rating","setSecurityName","setTickerSymbol","setFiId","setRating","setUnitPriceAsOfDate","/Users/aolson/Developer/ofx4js/src/domain/data/seclist/SecurityList.js","SecurityList","securityInfos","getSecurityInfos","setSecurityInfos","/Users/aolson/Developer/ofx4js/src/domain/data/seclist/SecurityListRequest.js","securityRequests","SecurityRequest","getSecurityRequests","./SecurityRequest","/Users/aolson/Developer/ofx4js/src/domain/data/seclist/SecurityListRequestMessageSet.js","getSecurityListRequest","./SecurityListRequestTransaction","/Users/aolson/Developer/ofx4js/src/domain/data/seclist/SecurityListRequestTransaction.js","./SecurityListRequest","/Users/aolson/Developer/ofx4js/src/domain/data/seclist/SecurityListResponse.js","SecurityListResponse","/Users/aolson/Developer/ofx4js/src/domain/data/seclist/SecurityListResponseMessageSet.js","SecurityListResponseMessageSet","securityListResponse","SecurityListResponseTransaction","getSecurityListResponse","setSecurityListResponse","./SecurityList","./SecurityListResponseTransaction","/Users/aolson/Developer/ofx4js/src/domain/data/seclist/SecurityListResponseTransaction.js","./SecurityListResponse","/Users/aolson/Developer/ofx4js/src/domain/data/seclist/SecurityRequest.js","/Users/aolson/Developer/ofx4js/src/domain/data/seclist/StockSecurityInfo.js","StockSecurityInfo","stockType","StockType","./StockType","/Users/aolson/Developer/ofx4js/src/domain/data/seclist/StockType.js","COMMON","PREFERRED","CONVERTIBLE","/Users/aolson/Developer/ofx4js/src/domain/data/seclist/index.js","./DebtSecurityInfo","./MutualFundSecurityInfo","./OptionSecurityInfo","./OtherSecurityInfo","./SecurityListRequestMessageSet","./SecurityListResponseMessageSet","./StockSecurityInfo","/Users/aolson/Developer/ofx4js/src/domain/data/signon/FinancialInstitution.js","/Users/aolson/Developer/ofx4js/src/domain/data/signon/PasswordChangeRequest.js","PasswordChangeRequest","userId","newPassword","getUserId","getNewPassword","setNewPassword","/Users/aolson/Developer/ofx4js/src/domain/data/signon/PasswordChangeRequestTransaction.js","PasswordChangeRequestTransaction","./PasswordChangeRequest","/Users/aolson/Developer/ofx4js/src/domain/data/signon/PasswordChangeResponse.js","PasswordChangeResponse","changeTimestamp","getChangeTimestamp","setChangeTimestamp","/Users/aolson/Developer/ofx4js/src/domain/data/signon/PasswordChangeResponseTransaction.js","PasswordChangeResponseTransaction","./PasswordChangeResponse","/Users/aolson/Developer/ofx4js/src/domain/data/signon/SignonRequest.js","userKey","generateUserKey","financialInstitution","sessionId","applicationId","applicationVersion","clientUID","additionalCredentials1","additionalCredentials2","authToken","accessKey","getPassword","getUserKey","setUserKey","getGenerateUserKey","setGenerateUserKey","getFinancialInstitution","getSessionId","setSessionId","getApplicationId","getApplicationVersion","getClientUID","setClientUID","getAdditionalCredentials1","setAdditionalCredentials1","getAdditionalCredentials2","setAdditionalCredentials2","getAuthToken","setAuthToken","getAccessKey","setAccessKey","/Users/aolson/Developer/ofx4js/src/domain/data/signon/SignonRequestMessageSet.js","passwordChangeRequest","getSignonRequest","getPasswordChangeRequest","setPasswordChangeRequest","./PasswordChangeRequestTransaction","./SignonRequest","/Users/aolson/Developer/ofx4js/src/domain/data/signon/SignonResponse.js","SignonResponse","userKeyExpiration","accountLastUpdated","getUserKeyExpiration","setUserKeyExpiration","getAccountLastUpdated","setAccountLastUpdated","../common/Status","../common/StatusHolder","/Users/aolson/Developer/ofx4js/src/domain/data/signon/SignonResponseMessageSet.js","SignonResponseMessageSet","passwordChangeResponse","setSignonResponse","getPasswordChangeResponse","setPasswordChangeResponse","./PasswordChangeResponseTransaction","./SignonResponse","/Users/aolson/Developer/ofx4js/src/domain/data/signon/index.js","./SignonRequestMessageSet","./SignonResponseMessageSet","/Users/aolson/Developer/ofx4js/src/domain/data/signup/AccountInfoRequest.js","lastUpdated","setLastUpdated","/Users/aolson/Developer/ofx4js/src/domain/data/signup/AccountInfoRequestTransaction.js","./AccountInfoRequest","/Users/aolson/Developer/ofx4js/src/domain/data/signup/AccountInfoResponse.js","AccountInfoResponse","AccountProfile","setAccounts","./AccountProfile","/Users/aolson/Developer/ofx4js/src/domain/data/signup/AccountInfoResponseTransaction.js","AccountInfoResponseTransaction","./AccountInfoResponse","/Users/aolson/Developer/ofx4js/src/domain/data/signup/AccountProfile.js","bankSpecifics","creditCardSpecifics","investSpecifics","getSpecifics","getBankSpecifics","getCreditCardSpecifics","getInvestmentSpecifics","setSpecifics","specifics","setBankSpecifics","setCreditCardSpecifics","setInvestmentSpecifics","../banking/BankAccountInfo","../creditcard/CreditCardAccountInfo","../investment/accounts/InvestmentAccountInfo","/Users/aolson/Developer/ofx4js/src/domain/data/signup/SignupRequestMessageSet.js","accountInfoRequest","getAccountInfoRequest","./AccountInfoRequestTransaction","/Users/aolson/Developer/ofx4js/src/domain/data/signup/SignupResponseMessageSet.js","SignupResponseMessageSet","accountInfoResponse","setAccountInfoResponse","./AccountInfoResponseTransaction","/Users/aolson/Developer/ofx4js/src/domain/data/signup/index.js","./SignupRequestMessageSet","./SignupResponseMessageSet","/Users/aolson/Developer/ofx4js/src/domain/data/tax1099/ExtDBInfo.js","ExtDBInfo","procDet","teInterest","pabInterest","teIntDividend","pabDividend","ProcDet","getProcDet","setProcDet","getTeInterest","setTeInterest","getPabInterest","setPabInterest","getTeIntDividend","setTeIntDividend","getPabDividend","setPabDividend","./ProcDet","/Users/aolson/Developer/ofx4js/src/domain/data/tax1099/PayerAddress.js","PayerAddress","payerName1","payerName2","postalCode","getPayerName1","setPayerName1","getPayerName2","setPayerName2","getPostalCode","setPostalCode","/Users/aolson/Developer/ofx4js/src/domain/data/tax1099/ProcDet.js","dtAqd","dtSale","secName","costBasis","saleSpr","longShort","wasDisAllowed","noncoveredSec","basisNotshown","getDtAqd","setDtAqd","getDtSale","setDtSale","getSecName","setSecName","getCostBasis","setCostBasis","getSaleSpr","setSaleSpr","getLongShort","setLongShort","getWasDisAllowed","setWasDisAllowed","getNoncoveredSec","setNoncoveredSec","getBasisNotshown","setBasisNotshown","/Users/aolson/Developer/ofx4js/src/domain/data/tax1099/RecAddress.js","RecAddress","recName1","recName2","getRecName1","setRecName1","getRecName2","setRecName2","/Users/aolson/Developer/ofx4js/src/domain/data/tax1099/Tax1099B.js","Tax1099B","srvrtId","taxYear","extDBInfo","payerAddress","payerId","recAddress","recId","recAcct","getSrvrtId","setSrvrtId","getTaxYear","setTaxYear","getExtDBInfo","setExtDBInfo","getPayerAddress","setPayerAddress","getPayerId","setPayerId","getRecAddress","setRecAddress","getRecId","setRecId","getRecAcct","setRecAcct","./ExtDBInfo","./PayerAddress","./RecAddress","/Users/aolson/Developer/ofx4js/src/domain/data/tax1099/Tax1099DIV.js","Tax1099DIV","ordDiv","qualifiedDiv","totCapGain","p28Gain","unrecSec1250","sec1202","nonTaxDist","fedTaxWh","investExp","forTaxPd","cashLiq","nonCashLiq","getOrdDiv","setOrdDiv","getQualifiedDiv","setQualifiedDiv","getTotCapGain","setTotCapGain","getP28Gain","setP28Gain","getUnrecSec1250","setUnrecSec1250","getSec1202","setSec1202","getNonTaxDist","setNonTaxDist","getFedTaxWh","setFedTaxWh","getInvestExp","setInvestExp","getForTaxPd","setForTaxPd","getCashLiq","setCashLiq","getNonCashLiq","setNonCashLiq","/Users/aolson/Developer/ofx4js/src/domain/data/tax1099/Tax1099INT.js","Tax1099INT","intIncome","erlWithPen","intUsbndtrs","taxExemptInt","specifiedPabInt","getIntIncome","setIntIncome","getErlWithPen","setErlWithPen","getIntUsbndtrs","setIntUsbndtrs","getTaxExemptInt","setTaxExemptInt","getSpecifiedPabInt","setSpecifiedPabInt","/Users/aolson/Developer/ofx4js/src/domain/data/tax1099/Tax1099MISC.js","Tax1099MISC","royalties","otherIncome","subPmts","getRoyalties","setRoyalties","getOtherIncome","setOtherIncome","getSubPmts","setSubPmts","/Users/aolson/Developer/ofx4js/src/domain/data/tax1099/Tax1099OID.js","Tax1099OID","originalDisc","otherPerInt","desc","oidOnUstres","getOriginalDisc","setOriginalDisc","getOtherPerInt","setOtherPerInt","getDesc","setDesc","getOidOnUstres","setOidOnUstres","/Users/aolson/Developer/ofx4js/src/domain/data/tax1099/Tax1099R.js","Tax1099R","grossDist","taxAmt","taxAmtNd","capGain","empContins","netUnapEmp","distCode","iraSepSimp","annCtrctDist","totEmpCount","getGrossDist","setGrossDist","getTaxAmt","setTaxAmt","getTaxAmtNd","setTaxAmtNd","getCapGain","setCapGain","getEmpContins","setEmpContins","getNetUnapEmp","setNetUnapEmp","getDistCode","setDistCode","getIraSepSimp","setIraSepSimp","getAnnCtrctDist","setAnnCtrctDist","getTotEmpCount","setTotEmpCount","/Users/aolson/Developer/ofx4js/src/domain/data/tax1099/Tax1099Request.js","Tax1099Request","../common/T1099Request","/Users/aolson/Developer/ofx4js/src/domain/data/tax1099/Tax1099RequestMessageSet.js","Tax1099RequestMessageSet","taxRequestTransaction","Tax1099RequestTransaction","getTaxRequestTransaction","setTaxRequestTransaction","./Tax1099RequestTransaction","/Users/aolson/Developer/ofx4js/src/domain/data/tax1099/Tax1099RequestTransaction.js","tax1099Request","getTax1099Request","setTax1099Request","./Tax1099Request","/Users/aolson/Developer/ofx4js/src/domain/data/tax1099/Tax1099Response.js","Tax1099Response","tax1099div","lstTax1099DIV","lstTax1099INT","lstTax1099R","lstTax1099B","lstTax1099MISC","lstTax1099OID","getLstTax1099DIV","setLstTax1099DIV","getLstTax1099INT","setLstTax1099INT","getLstTax1099R","setLstTax1099R","getLstTax1099B","setLstTax1099B","getLstTax1099MISC","setLstTax1099MISC","getLstTax1099OID","setLstTax1099OID","../common/T1099Response","./Tax1099B","./Tax1099DIV","./Tax1099INT","./Tax1099MISC","./Tax1099OID","./Tax1099R","/Users/aolson/Developer/ofx4js/src/domain/data/tax1099/Tax1099ResponseMessageSet.js","Tax1099ResponseMessageSet","taxResponseTransaction","Tax1099ResponseTransaction","getTaxResponseTransaction","setTaxResponseTransaction","./Tax1099ResponseTransaction","/Users/aolson/Developer/ofx4js/src/domain/data/tax1099/Tax1099ResponseTransaction.js","tax1099Response","getTax1099Response","setTax1099Response","./Tax1099Response","/Users/aolson/Developer/ofx4js/src/domain/data/tax1099/index.js","./Tax1099RequestMessageSet","./Tax1099ResponseMessageSet","/Users/aolson/Developer/ofx4js/src/domain/index.js","./data/index","/Users/aolson/Developer/ofx4js/src/io/AggregateAttribute.js","AggregateAttribute","toString_","collection","CHILD_AGGREGATE","AggregateAttributeForChildAggregate","ELEMENT","AggregateAttributeForElement","elementInfo","childAggregate","aggregateInfo","getAggregateInfo","instance","getAttributeType","getCollectionEntryType","isRequired","getOrder","other","isCollection","./AggregateIntrospector","/Users/aolson/Developer/ofx4js/src/io/AggregateInfo.js","AggregateInfo","clazz","headers","addChildAggregate","childAggregateInfo","addElement","addHeader","assert","getAttributes","getAttribute","orderHint","assignableTo","candidates","collectionBucket","attributeIdx","entryType","isAssignableFrom","candidateIdx","candidate","hasHeaders","getMethod","header","fcn","getHeaders","headerValue","getHeaderType","setHeader","../util/inherit","./AggregateAttribute","/Users/aolson/Developer/ofx4js/src/io/AggregateIntrospector.js","AGGREGATE_CLASSES_BY_NAME","placeholderName","findAggregateByName","extend","parentAggregate","addAggregate","./AggregateInfo","/Users/aolson/Developer/ofx4js/src/io/AggregateMarshaller.js","conversion","DefaultStringConversion","aggregate","writer","headerValues","convertedValues","getConversion","writeHeaders","writeStartAggregate","aggregateAttributes","writeAggregateAttributes","writeEndAggregate","aggregateAttribute","childValue","childValues","childValueIdx","attributeName","writeElement","setConversion","./DefaultStringConversion","/Users/aolson/Developer/ofx4js/src/io/AggregateStackContentHandler.js","AggregateInfoHolder","currentAttributeIndex","ignoredAggregateName","AggregateStackContentHandler","root","stack","Stack","parsingRoot","OFXHandler","isBeingSkipped","isSkipping","onHeader","headerType","peek","fromString","onElement","startAggregate","infoHolder","aggregateType","warning","endAggregate","isEmpty","../util/log","../util/stack","./OFXHandler","/Users/aolson/Developer/ofx4js/src/io/AggregateUnmarshaller.js","BaseOFXReader","reader","ofxReader","newReader","setContentHandler","./AggregateStackContentHandler","./BaseOFXReader","/Users/aolson/Developer/ofx4js/src/io/BaseOFXReader.js","contentHandler","DefaultHandler","arraysEqual","a1","a2","OFXReader","OFXV2ContentHandler","StringReader","OFX_2_PROCESSING_INSTRUCTION_PATTERN","getContentHandler","firstElementStart","getFirstElementStart","mark","ch","contains","shifted","shiftAndAppend","matches","exec","processOFXv2Headers","reset","parseV2FromFirstElement","remainder","processOFXv1Headers","parseV1FromFirstElement","install","chars","lines","colonIndex","nameValuePairs","nameValuePair","equalsIndex","../util/StringReader","./DefaultHandler","./OFXReader","./OFXV2ContentHandler","/Users/aolson/Developer/ofx4js/src/io/DefaultHandler.js","/Users/aolson/Developer/ofx4js/src/io/DefaultStringConversion.js","dpad","StringConversion","formatDate","statusCode","parseDate","year","month","day","hour","minute","second","milli","bracket","gmtOffset","UTC","gmt","getTimezoneOffset","getFullYear","getMonth","getDay","getHours","getMinutes","getSeconds","getMilliseconds","../domain/data/common/Status","../domain/data/common/StatusCode","../domain/data/common/UnknownStatusCode","./StringConversion","/Users/aolson/Developer/ofx4js/src/io/OFXAggregate.js","OFXAggregate","containsElement","elementNames","getElementValue","/Users/aolson/Developer/ofx4js/src/io/OFXHandler.js","/Users/aolson/Developer/ofx4js/src/io/OFXParseEvent.js","OFXParseEvent","eventType","eventValue","CHARACTERS","getEventType","getEventValue","/Users/aolson/Developer/ofx4js/src/io/OFXReader.js","/Users/aolson/Developer/ofx4js/src/io/OFXV2ContentHandler.js","ofxHandler","eventStack","startedEvents","ontext","onopentag","params","onclosetag","qName","isAlreadyStarted","eventToFinish","elementEvent","./OFXParseEvent","/Users/aolson/Developer/ofx4js/src/io/OFXWriter.js","OFXWriter","/Users/aolson/Developer/ofx4js/src/io/StringConversion.js","/Users/aolson/Developer/ofx4js/src/io/index.js","v2","./AggregateMarshaller","./AggregateUnmarshaller","./OFXAggregate","./OFXWriter","./v1/OFXV1Writer","./v2/OFXV2Writer","/Users/aolson/Developer/ofx4js/src/io/v1/OFXV1Writer.js","LINE_SEPARATOR","headersWritten","newWriter","writeAttributesOnNewLine","OutputStreamWriter","println","print","olduid","isWriteAttributesOnNewLine","setWriteAttributesOnNewLine","../../util/OutputStreamWriter","../OFXWriter","/Users/aolson/Developer/ofx4js/src/io/v2/OFXV2Writer.js","../v1/OFXV1Writer","/Users/aolson/Developer/ofx4js/src/meta/Aggregate.js","../io/AggregateIntrospector","/Users/aolson/Developer/ofx4js/src/meta/ChildAggregate.js","/Users/aolson/Developer/ofx4js/src/meta/Element.js","/Users/aolson/Developer/ofx4js/src/meta/Header.js","/Users/aolson/Developer/ofx4js/src/meta/index.js","./Aggregate","./ChildAggregate","./Element","./Header","/Users/aolson/Developer/ofx4js/src/util/OutputStreamWriter.js","/Users/aolson/Developer/ofx4js/src/util/StringReader.js","_text","_cursor","_mark","readChar","cbuf","/Users/aolson/Developer/ofx4js/src/util/index.js","./OutputStreamWriter","./StringReader","./inherit","./log","./stack","/Users/aolson/Developer/ofx4js/src/util/inherit.js","/Users/aolson/Developer/ofx4js/src/util/log.js","/Users/aolson/Developer/ofx4js/src/util/stack.js","values"],"mappings":"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","file":"ofx4js.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\n\nvar ofx4js = {\n  client: require(\"./client/index\"),\n  domain: require(\"./domain/index\"),\n  io: require(\"./io/index\"),\n  meta: require(\"./meta/index\"),\n  util: require(\"./util/index\"),\n};\n\nmodule.exports = ofx4js;\n",null,"/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('is-array')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\nBuffer.poolSize = 8192 // not used by this implementation\n\nvar kMaxLength = 0x3fffffff\nvar rootParent = {}\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Note:\n *\n * - Implementation must support adding new properties to `Uint8Array` instances.\n *   Firefox 4-29 lacked support, fixed in Firefox 30+.\n *   See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *  - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *  - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *    incorrect length in some situations.\n *\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they will\n * get the Object implementation, which is slower but will work correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = (function () {\n  try {\n    var buf = new ArrayBuffer(0)\n    var arr = new Uint8Array(buf)\n    arr.foo = function () { return 42 }\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        new Uint8Array(1).subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n})()\n\n/**\n * Class: Buffer\n * =============\n *\n * The Buffer constructor returns instances of `Uint8Array` that are augmented\n * with function properties for all the node `Buffer` API functions. We use\n * `Uint8Array` so that square bracket notation works as expected -- it returns\n * a single octet.\n *\n * By augmenting the instances, we can avoid modifying the `Uint8Array`\n * prototype.\n */\nfunction Buffer (subject, encoding, noZero) {\n  if (!(this instanceof Buffer))\n    return new Buffer(subject, encoding, noZero)\n\n  var type = typeof subject\n\n  // Find the length\n  var length\n  if (type === 'number') {\n    length = +subject\n  } else if (type === 'string') {\n    length = Buffer.byteLength(subject, encoding)\n  } else if (type === 'object' && subject !== null) { // assume object is array-like\n    if (subject.type === 'Buffer' && isArray(subject.data))\n      subject = subject.data\n    length = +subject.length\n  } else {\n    throw new TypeError('must start with number, buffer, array or string')\n  }\n\n  if (length > kMaxLength)\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n      'size: 0x' + kMaxLength.toString(16) + ' bytes')\n\n  if (length < 0)\n    length = 0\n  else\n    length >>>= 0 // Coerce to uint32.\n\n  var self = this\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Preferred: Return an augmented `Uint8Array` instance for best performance\n    /*eslint-disable consistent-this */\n    self = Buffer._augment(new Uint8Array(length))\n    /*eslint-enable consistent-this */\n  } else {\n    // Fallback: Return THIS instance of Buffer (created by `new`)\n    self.length = length\n    self._isBuffer = true\n  }\n\n  var i\n  if (Buffer.TYPED_ARRAY_SUPPORT && typeof subject.byteLength === 'number') {\n    // Speed optimization -- use set if we're copying from a typed array\n    self._set(subject)\n  } else if (isArrayish(subject)) {\n    // Treat array-ish objects as a byte array\n    if (Buffer.isBuffer(subject)) {\n      for (i = 0; i < length; i++)\n        self[i] = subject.readUInt8(i)\n    } else {\n      for (i = 0; i < length; i++)\n        self[i] = ((subject[i] % 256) + 256) % 256\n    }\n  } else if (type === 'string') {\n    self.write(subject, 0, encoding)\n  } else if (type === 'number' && !Buffer.TYPED_ARRAY_SUPPORT && !noZero) {\n    for (i = 0; i < length; i++) {\n      self[i] = 0\n    }\n  }\n\n  if (length > 0 && length <= Buffer.poolSize)\n    self.parent = rootParent\n\n  return self\n}\n\nfunction SlowBuffer (subject, encoding, noZero) {\n  if (!(this instanceof SlowBuffer))\n    return new SlowBuffer(subject, encoding, noZero)\n\n  var buf = new Buffer(subject, encoding, noZero)\n  delete buf.parent\n  return buf\n}\n\nBuffer.isBuffer = function (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b))\n    throw new TypeError('Arguments must be Buffers')\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n  for (var i = 0, len = Math.min(x, y); i < len && a[i] === b[i]; i++) {}\n  if (i !== len) {\n    x = a[i]\n    y = b[i]\n  }\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function (list, totalLength) {\n  if (!isArray(list)) throw new TypeError('Usage: Buffer.concat(list[, length])')\n\n  if (list.length === 0) {\n    return new Buffer(0)\n  } else if (list.length === 1) {\n    return list[0]\n  }\n\n  var i\n  if (totalLength === undefined) {\n    totalLength = 0\n    for (i = 0; i < list.length; i++) {\n      totalLength += list[i].length\n    }\n  }\n\n  var buf = new Buffer(totalLength)\n  var pos = 0\n  for (i = 0; i < list.length; i++) {\n    var item = list[i]\n    item.copy(buf, pos)\n    pos += item.length\n  }\n  return buf\n}\n\nBuffer.byteLength = function (str, encoding) {\n  var ret\n  str = str + ''\n  switch (encoding || 'utf8') {\n    case 'ascii':\n    case 'binary':\n    case 'raw':\n      ret = str.length\n      break\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      ret = str.length * 2\n      break\n    case 'hex':\n      ret = str.length >>> 1\n      break\n    case 'utf8':\n    case 'utf-8':\n      ret = utf8ToBytes(str).length\n      break\n    case 'base64':\n      ret = base64ToBytes(str).length\n      break\n    default:\n      ret = str.length\n  }\n  return ret\n}\n\n// pre-set for values that may exist in the future\nBuffer.prototype.length = undefined\nBuffer.prototype.parent = undefined\n\n// toString(encoding, start=0, end=buffer.length)\nBuffer.prototype.toString = function (encoding, start, end) {\n  var loweredCase = false\n\n  start = start >>> 0\n  end = end === undefined || end === Infinity ? this.length : end >>> 0\n\n  if (!encoding) encoding = 'utf8'\n  if (start < 0) start = 0\n  if (end > this.length) end = this.length\n  if (end <= start) return ''\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'binary':\n        return binarySlice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase)\n          throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.equals = function (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max)\n      str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return 0\n  return Buffer.compare(this, b)\n}\n\n// `get` will be removed in Node 0.13+\nBuffer.prototype.get = function (offset) {\n  console.log('.get() is deprecated. Access using array indexes instead.')\n  return this.readUInt8(offset)\n}\n\n// `set` will be removed in Node 0.13+\nBuffer.prototype.set = function (v, offset) {\n  console.log('.set() is deprecated. Access using array indexes instead.')\n  return this.writeUInt8(v, offset)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; i++) {\n    var byte = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(byte)) throw new Error('Invalid hex string')\n    buf[offset + i] = byte\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  var charsWritten = blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n  return charsWritten\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  var charsWritten = blitBuffer(asciiToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nfunction binaryWrite (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  var charsWritten = blitBuffer(base64ToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nfunction utf16leWrite (buf, string, offset, length) {\n  var charsWritten = blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n  return charsWritten\n}\n\nBuffer.prototype.write = function (string, offset, length, encoding) {\n  // Support both (string, offset, length, encoding)\n  // and the legacy (string, encoding, offset, length)\n  if (isFinite(offset)) {\n    if (!isFinite(length)) {\n      encoding = length\n      length = undefined\n    }\n  } else {  // legacy\n    var swap = encoding\n    encoding = offset\n    offset = length\n    length = swap\n  }\n\n  offset = Number(offset) || 0\n\n  if (length < 0 || offset < 0 || offset > this.length)\n    throw new RangeError('attempt to write outside buffer bounds')\n\n  var remaining = this.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n  encoding = String(encoding || 'utf8').toLowerCase()\n\n  var ret\n  switch (encoding) {\n    case 'hex':\n      ret = hexWrite(this, string, offset, length)\n      break\n    case 'utf8':\n    case 'utf-8':\n      ret = utf8Write(this, string, offset, length)\n      break\n    case 'ascii':\n      ret = asciiWrite(this, string, offset, length)\n      break\n    case 'binary':\n      ret = binaryWrite(this, string, offset, length)\n      break\n    case 'base64':\n      ret = base64Write(this, string, offset, length)\n      break\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      ret = utf16leWrite(this, string, offset, length)\n      break\n    default:\n      throw new TypeError('Unknown encoding: ' + encoding)\n  }\n  return ret\n}\n\nBuffer.prototype.toJSON = function () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  var res = ''\n  var tmp = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    if (buf[i] <= 0x7F) {\n      res += decodeUtf8Char(tmp) + String.fromCharCode(buf[i])\n      tmp = ''\n    } else {\n      tmp += '%' + buf[i].toString(16)\n    }\n  }\n\n  return res + decodeUtf8Char(tmp)\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction binarySlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0)\n      start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0)\n      end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start)\n    end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = Buffer._augment(this.subarray(start, end))\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined, true)\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  if (newBuf.length)\n    newBuf.parent = this.parent || this\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0)\n    throw new RangeError('offset is not uint')\n  if (offset + ext > length)\n    throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert)\n    checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100))\n    val += this[offset + i] * mul\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert)\n    checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100))\n    val += this[offset + --byteLength] * mul\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n      ((this[offset + 1] << 16) |\n      (this[offset + 2] << 8) |\n      this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert)\n    checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100))\n    val += this[offset + i] * mul\n  mul *= 0x80\n\n  if (val >= mul)\n    val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert)\n    checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100))\n    val += this[offset + --i] * mul\n  mul *= 0x80\n\n  if (val >= mul)\n    val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80))\n    return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16) |\n      (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n      (this[offset + 1] << 16) |\n      (this[offset + 2] << 8) |\n      (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100))\n    this[offset + i] = (value / mul) >>> 0 & 0xFF\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100))\n    this[offset + i] = (value / mul) >>> 0 & 0xFF\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = value\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n  } else objectWriteUInt16(this, value, offset, true)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = value\n  } else objectWriteUInt16(this, value, offset, false)\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = value\n  } else objectWriteUInt32(this, value, offset, true)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = value\n  } else objectWriteUInt32(this, value, offset, false)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkInt(this,\n             value,\n             offset,\n             byteLength,\n             Math.pow(2, 8 * byteLength - 1) - 1,\n             -Math.pow(2, 8 * byteLength - 1))\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100))\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkInt(this,\n             value,\n             offset,\n             byteLength,\n             Math.pow(2, 8 * byteLength - 1) - 1,\n             -Math.pow(2, 8 * byteLength - 1))\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100))\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = value\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n  } else objectWriteUInt16(this, value, offset, true)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = value\n  } else objectWriteUInt16(this, value, offset, false)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else objectWriteUInt32(this, value, offset, true)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = value\n  } else objectWriteUInt32(this, value, offset, false)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n  if (offset < 0) throw new RangeError('index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert)\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert)\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function (target, target_start, start, end) {\n  var self = this // source\n\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (target_start >= target.length) target_start = target.length\n  if (!target_start) target_start = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || self.length === 0) return 0\n\n  // Fatal error conditions\n  if (target_start < 0)\n    throw new RangeError('targetStart out of bounds')\n  if (start < 0 || start >= self.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length)\n    end = this.length\n  if (target.length - target_start < end - start)\n    end = target.length - target_start + start\n\n  var len = end - start\n\n  if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < len; i++) {\n      target[i + target_start] = this[i + start]\n    }\n  } else {\n    target._set(this.subarray(start, start + len), target_start)\n  }\n\n  return len\n}\n\n// fill(value, start=0, end=buffer.length)\nBuffer.prototype.fill = function (value, start, end) {\n  if (!value) value = 0\n  if (!start) start = 0\n  if (!end) end = this.length\n\n  if (end < start) throw new RangeError('end < start')\n\n  // Fill 0 bytes; we're done\n  if (end === start) return\n  if (this.length === 0) return\n\n  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')\n  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')\n\n  var i\n  if (typeof value === 'number') {\n    for (i = start; i < end; i++) {\n      this[i] = value\n    }\n  } else {\n    var bytes = utf8ToBytes(value.toString())\n    var len = bytes.length\n    for (i = start; i < end; i++) {\n      this[i] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n/**\n * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.\n * Added in Node 0.12. Only available in browsers that support ArrayBuffer.\n */\nBuffer.prototype.toArrayBuffer = function () {\n  if (typeof Uint8Array !== 'undefined') {\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n      return (new Buffer(this)).buffer\n    } else {\n      var buf = new Uint8Array(this.length)\n      for (var i = 0, len = buf.length; i < len; i += 1) {\n        buf[i] = this[i]\n      }\n      return buf.buffer\n    }\n  } else {\n    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')\n  }\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar BP = Buffer.prototype\n\n/**\n * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods\n */\nBuffer._augment = function (arr) {\n  arr.constructor = Buffer\n  arr._isBuffer = true\n\n  // save reference to original Uint8Array get/set methods before overwriting\n  arr._get = arr.get\n  arr._set = arr.set\n\n  // deprecated, will be removed in node 0.13+\n  arr.get = BP.get\n  arr.set = BP.set\n\n  arr.write = BP.write\n  arr.toString = BP.toString\n  arr.toLocaleString = BP.toString\n  arr.toJSON = BP.toJSON\n  arr.equals = BP.equals\n  arr.compare = BP.compare\n  arr.copy = BP.copy\n  arr.slice = BP.slice\n  arr.readUIntLE = BP.readUIntLE\n  arr.readUIntBE = BP.readUIntBE\n  arr.readUInt8 = BP.readUInt8\n  arr.readUInt16LE = BP.readUInt16LE\n  arr.readUInt16BE = BP.readUInt16BE\n  arr.readUInt32LE = BP.readUInt32LE\n  arr.readUInt32BE = BP.readUInt32BE\n  arr.readIntLE = BP.readIntLE\n  arr.readIntBE = BP.readIntBE\n  arr.readInt8 = BP.readInt8\n  arr.readInt16LE = BP.readInt16LE\n  arr.readInt16BE = BP.readInt16BE\n  arr.readInt32LE = BP.readInt32LE\n  arr.readInt32BE = BP.readInt32BE\n  arr.readFloatLE = BP.readFloatLE\n  arr.readFloatBE = BP.readFloatBE\n  arr.readDoubleLE = BP.readDoubleLE\n  arr.readDoubleBE = BP.readDoubleBE\n  arr.writeUInt8 = BP.writeUInt8\n  arr.writeUIntLE = BP.writeUIntLE\n  arr.writeUIntBE = BP.writeUIntBE\n  arr.writeUInt16LE = BP.writeUInt16LE\n  arr.writeUInt16BE = BP.writeUInt16BE\n  arr.writeUInt32LE = BP.writeUInt32LE\n  arr.writeUInt32BE = BP.writeUInt32BE\n  arr.writeIntLE = BP.writeIntLE\n  arr.writeIntBE = BP.writeIntBE\n  arr.writeInt8 = BP.writeInt8\n  arr.writeInt16LE = BP.writeInt16LE\n  arr.writeInt16BE = BP.writeInt16BE\n  arr.writeInt32LE = BP.writeInt32LE\n  arr.writeInt32BE = BP.writeInt32BE\n  arr.writeFloatLE = BP.writeFloatLE\n  arr.writeFloatBE = BP.writeFloatBE\n  arr.writeDoubleLE = BP.writeDoubleLE\n  arr.writeDoubleBE = BP.writeDoubleBE\n  arr.fill = BP.fill\n  arr.inspect = BP.inspect\n  arr.toArrayBuffer = BP.toArrayBuffer\n\n  return arr\n}\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-z\\-]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction isArrayish (subject) {\n  return isArray(subject) || Buffer.isBuffer(subject) ||\n      subject && typeof subject === 'object' &&\n      typeof subject.length === 'number'\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n  var i = 0\n\n  for (; i < length; i++) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (leadSurrogate) {\n        // 2 leads in a row\n        if (codePoint < 0xDC00) {\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          leadSurrogate = codePoint\n          continue\n        } else {\n          // valid surrogate pair\n          codePoint = leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00 | 0x10000\n          leadSurrogate = null\n        }\n      } else {\n        // no lead yet\n\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else {\n          // valid lead\n          leadSurrogate = codePoint\n          continue\n        }\n      }\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n      leadSurrogate = null\n    }\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x200000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; i++) {\n    if ((i + offset >= dst.length) || (i >= src.length))\n      break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction decodeUtf8Char (str) {\n  try {\n    return decodeURIComponent(str)\n  } catch (err) {\n    return String.fromCharCode(0xFFFD) // UTF 8 invalid char\n  }\n}\n","var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n;(function (exports) {\n\t'use strict';\n\n  var Arr = (typeof Uint8Array !== 'undefined')\n    ? Uint8Array\n    : Array\n\n\tvar PLUS   = '+'.charCodeAt(0)\n\tvar SLASH  = '/'.charCodeAt(0)\n\tvar NUMBER = '0'.charCodeAt(0)\n\tvar LOWER  = 'a'.charCodeAt(0)\n\tvar UPPER  = 'A'.charCodeAt(0)\n\tvar PLUS_URL_SAFE = '-'.charCodeAt(0)\n\tvar SLASH_URL_SAFE = '_'.charCodeAt(0)\n\n\tfunction decode (elt) {\n\t\tvar code = elt.charCodeAt(0)\n\t\tif (code === PLUS ||\n\t\t    code === PLUS_URL_SAFE)\n\t\t\treturn 62 // '+'\n\t\tif (code === SLASH ||\n\t\t    code === SLASH_URL_SAFE)\n\t\t\treturn 63 // '/'\n\t\tif (code < NUMBER)\n\t\t\treturn -1 //no match\n\t\tif (code < NUMBER + 10)\n\t\t\treturn code - NUMBER + 26 + 26\n\t\tif (code < UPPER + 26)\n\t\t\treturn code - UPPER\n\t\tif (code < LOWER + 26)\n\t\t\treturn code - LOWER + 26\n\t}\n\n\tfunction b64ToByteArray (b64) {\n\t\tvar i, j, l, tmp, placeHolders, arr\n\n\t\tif (b64.length % 4 > 0) {\n\t\t\tthrow new Error('Invalid string. Length must be a multiple of 4')\n\t\t}\n\n\t\t// the number of equal signs (place holders)\n\t\t// if there are two placeholders, than the two characters before it\n\t\t// represent one byte\n\t\t// if there is only one, then the three characters before it represent 2 bytes\n\t\t// this is just a cheap hack to not do indexOf twice\n\t\tvar len = b64.length\n\t\tplaceHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0\n\n\t\t// base64 is 4/3 + up to two characters of the original data\n\t\tarr = new Arr(b64.length * 3 / 4 - placeHolders)\n\n\t\t// if there are placeholders, only get up to the last complete 4 chars\n\t\tl = placeHolders > 0 ? b64.length - 4 : b64.length\n\n\t\tvar L = 0\n\n\t\tfunction push (v) {\n\t\t\tarr[L++] = v\n\t\t}\n\n\t\tfor (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))\n\t\t\tpush((tmp & 0xFF0000) >> 16)\n\t\t\tpush((tmp & 0xFF00) >> 8)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\tif (placeHolders === 2) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)\n\t\t\tpush(tmp & 0xFF)\n\t\t} else if (placeHolders === 1) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)\n\t\t\tpush((tmp >> 8) & 0xFF)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\treturn arr\n\t}\n\n\tfunction uint8ToBase64 (uint8) {\n\t\tvar i,\n\t\t\textraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\toutput = \"\",\n\t\t\ttemp, length\n\n\t\tfunction encode (num) {\n\t\t\treturn lookup.charAt(num)\n\t\t}\n\n\t\tfunction tripletToBase64 (num) {\n\t\t\treturn encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)\n\t\t}\n\n\t\t// go through the array every three bytes, we'll deal with trailing stuff later\n\t\tfor (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n\t\t\ttemp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t\t\toutput += tripletToBase64(temp)\n\t\t}\n\n\t\t// pad the end with zeros, but make sure to not forget the extra bytes\n\t\tswitch (extraBytes) {\n\t\t\tcase 1:\n\t\t\t\ttemp = uint8[uint8.length - 1]\n\t\t\t\toutput += encode(temp >> 2)\n\t\t\t\toutput += encode((temp << 4) & 0x3F)\n\t\t\t\toutput += '=='\n\t\t\t\tbreak\n\t\t\tcase 2:\n\t\t\t\ttemp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])\n\t\t\t\toutput += encode(temp >> 10)\n\t\t\t\toutput += encode((temp >> 4) & 0x3F)\n\t\t\t\toutput += encode((temp << 2) & 0x3F)\n\t\t\t\toutput += '='\n\t\t\t\tbreak\n\t\t}\n\n\t\treturn output\n\t}\n\n\texports.toByteArray = b64ToByteArray\n\texports.fromByteArray = uint8ToBase64\n}(typeof exports === 'undefined' ? (this.base64js = {}) : exports))\n","exports.read = function(buffer, offset, isLE, mLen, nBytes) {\n  var e, m,\n      eLen = nBytes * 8 - mLen - 1,\n      eMax = (1 << eLen) - 1,\n      eBias = eMax >> 1,\n      nBits = -7,\n      i = isLE ? (nBytes - 1) : 0,\n      d = isLE ? -1 : 1,\n      s = buffer[offset + i];\n\n  i += d;\n\n  e = s & ((1 << (-nBits)) - 1);\n  s >>= (-nBits);\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n  m = e & ((1 << (-nBits)) - 1);\n  e >>= (-nBits);\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity);\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nexports.write = function(buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c,\n      eLen = nBytes * 8 - mLen - 1,\n      eMax = (1 << eLen) - 1,\n      eBias = eMax >> 1,\n      rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0),\n      i = isLE ? 0 : (nBytes - 1),\n      d = isLE ? 1 : -1,\n      s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8);\n\n  e = (e << mLen) | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8);\n\n  buffer[offset + i - d] |= s * 128;\n};\n","\n/**\n * isArray\n */\n\nvar isArray = Array.isArray;\n\n/**\n * toString\n */\n\nvar str = Object.prototype.toString;\n\n/**\n * Whether or not the given `val`\n * is an array.\n *\n * example:\n *\n *        isArray([]);\n *        // > true\n *        isArray(arguments);\n *        // > false\n *        isArray('');\n *        // > false\n *\n * @param {mixed} val\n * @return {bool}\n */\n\nmodule.exports = isArray || function (val) {\n  return !! val && '[object Array]' == str.call(val);\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      }\n      throw TypeError('Uncaught, unspecified \"error\" event.');\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        len = arguments.length;\n        args = new Array(len - 1);\n        for (i = 1; i < len; i++)\n          args[i - 1] = arguments[i];\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    len = arguments.length;\n    args = new Array(len - 1);\n    for (i = 1; i < len; i++)\n      args[i - 1] = arguments[i];\n\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    var m;\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  var ret;\n  if (!emitter._events || !emitter._events[type])\n    ret = 0;\n  else if (isFunction(emitter._events[type]))\n    ret = 1;\n  else\n    ret = emitter._events[type].length;\n  return ret;\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    draining = true;\n    var currentQueue;\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        var i = -1;\n        while (++i < len) {\n            currentQueue[i]();\n        }\n        len = queue.length;\n    }\n    draining = false;\n}\nprocess.nextTick = function (fun) {\n    queue.push(fun);\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","module.exports = require(\"./lib/_stream_duplex.js\")\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\nforEach(objectKeys(Writable.prototype), function(method) {\n  if (!Duplex.prototype[method])\n    Duplex.prototype[method] = Writable.prototype[method];\n});\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex))\n    return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false)\n    this.readable = false;\n\n  if (options && options.writable === false)\n    this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false)\n    this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended)\n    return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(this.end.bind(this));\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough))\n    return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function(chunk, encoding, cb) {\n  cb(null, chunk);\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\nvar EE = require('events').EventEmitter;\n\n/*<replacement>*/\nif (!EE.listenerCount) EE.listenerCount = function(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\nvar Stream = require('stream');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nfunction ReadableState(options, stream) {\n  options = options || {};\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : 16 * 1024;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.buffer = [];\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = false;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // In streams that never have any data, and do push(null) right away,\n  // the consumer can miss the 'end' event if they do some I/O before\n  // consuming the stream.  So, we don't emit('end') until some reading\n  // happens.\n  this.calledRead = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, becuase any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // when piping, we only care about 'readable' events that happen\n  // after read()ing all the bytes and not getting any pushback.\n  this.ranOut = false;\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder)\n      StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  if (!(this instanceof Readable))\n    return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  Stream.call(this);\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function(chunk, encoding) {\n  var state = this._readableState;\n\n  if (typeof chunk === 'string' && !state.objectMode) {\n    encoding = encoding || state.defaultEncoding;\n    if (encoding !== state.encoding) {\n      chunk = new Buffer(chunk, encoding);\n      encoding = '';\n    }\n  }\n\n  return readableAddChunk(this, state, chunk, encoding, false);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function(chunk) {\n  var state = this._readableState;\n  return readableAddChunk(this, state, chunk, '', true);\n};\n\nfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n  var er = chunkInvalid(state, chunk);\n  if (er) {\n    stream.emit('error', er);\n  } else if (chunk === null || chunk === undefined) {\n    state.reading = false;\n    if (!state.ended)\n      onEofChunk(stream, state);\n  } else if (state.objectMode || chunk && chunk.length > 0) {\n    if (state.ended && !addToFront) {\n      var e = new Error('stream.push() after EOF');\n      stream.emit('error', e);\n    } else if (state.endEmitted && addToFront) {\n      var e = new Error('stream.unshift() after end event');\n      stream.emit('error', e);\n    } else {\n      if (state.decoder && !addToFront && !encoding)\n        chunk = state.decoder.write(chunk);\n\n      // update the buffer info.\n      state.length += state.objectMode ? 1 : chunk.length;\n      if (addToFront) {\n        state.buffer.unshift(chunk);\n      } else {\n        state.reading = false;\n        state.buffer.push(chunk);\n      }\n\n      if (state.needReadable)\n        emitReadable(stream);\n\n      maybeReadMore(stream, state);\n    }\n  } else if (!addToFront) {\n    state.reading = false;\n  }\n\n  return needMoreData(state);\n}\n\n\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended &&\n         (state.needReadable ||\n          state.length < state.highWaterMark ||\n          state.length === 0);\n}\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function(enc) {\n  if (!StringDecoder)\n    StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n};\n\n// Don't raise the hwm > 128MB\nvar MAX_HWM = 0x800000;\nfunction roundUpToNextPowerOf2(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2\n    n--;\n    for (var p = 1; p < 32; p <<= 1) n |= n >> p;\n    n++;\n  }\n  return n;\n}\n\nfunction howMuchToRead(n, state) {\n  if (state.length === 0 && state.ended)\n    return 0;\n\n  if (state.objectMode)\n    return n === 0 ? 0 : 1;\n\n  if (n === null || isNaN(n)) {\n    // only flow one buffer at a time\n    if (state.flowing && state.buffer.length)\n      return state.buffer[0].length;\n    else\n      return state.length;\n  }\n\n  if (n <= 0)\n    return 0;\n\n  // If we're asking for more than the target buffer level,\n  // then raise the water mark.  Bump up to the next highest\n  // power of 2, to prevent increasing it excessively in tiny\n  // amounts.\n  if (n > state.highWaterMark)\n    state.highWaterMark = roundUpToNextPowerOf2(n);\n\n  // don't have that much.  return null, unless we've ended.\n  if (n > state.length) {\n    if (!state.ended) {\n      state.needReadable = true;\n      return 0;\n    } else\n      return state.length;\n  }\n\n  return n;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function(n) {\n  var state = this._readableState;\n  state.calledRead = true;\n  var nOrig = n;\n  var ret;\n\n  if (typeof n !== 'number' || n > 0)\n    state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 &&\n      state.needReadable &&\n      (state.length >= state.highWaterMark || state.ended)) {\n    emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    ret = null;\n\n    // In cases where the decoder did not receive enough data\n    // to produce a full chunk, then immediately received an\n    // EOF, state.buffer will contain [<Buffer >, <Buffer 00 ...>].\n    // howMuchToRead will see this and coerce the amount to\n    // read to zero (because it's looking at the length of the\n    // first <Buffer > in state.buffer), and we'll end up here.\n    //\n    // This can only happen via state.decoder -- no other venue\n    // exists for pushing a zero-length chunk into state.buffer\n    // and triggering this behavior. In this case, we return our\n    // remaining data and end the stream, if appropriate.\n    if (state.length > 0 && state.decoder) {\n      ret = fromList(n, state);\n      state.length -= ret.length;\n    }\n\n    if (state.length === 0)\n      endReadable(this);\n\n    return ret;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length - n <= state.highWaterMark)\n    doRead = true;\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading)\n    doRead = false;\n\n  if (doRead) {\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0)\n      state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n  }\n\n  // If _read called its callback synchronously, then `reading`\n  // will be false, and we need to re-evaluate how much data we\n  // can return to the user.\n  if (doRead && !state.reading)\n    n = howMuchToRead(nOrig, state);\n\n  if (n > 0)\n    ret = fromList(n, state);\n  else\n    ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  }\n\n  state.length -= n;\n\n  // If we have nothing in the buffer, then we want to know\n  // as soon as we *do* get something into the buffer.\n  if (state.length === 0 && !state.ended)\n    state.needReadable = true;\n\n  // If we happened to read() exactly the remaining amount in the\n  // buffer, and the EOF has been seen at this point, then make sure\n  // that we emit 'end' on the very next tick.\n  if (state.ended && !state.endEmitted && state.length === 0)\n    endReadable(this);\n\n  return ret;\n};\n\nfunction chunkInvalid(state, chunk) {\n  var er = null;\n  if (!Buffer.isBuffer(chunk) &&\n      'string' !== typeof chunk &&\n      chunk !== null &&\n      chunk !== undefined &&\n      !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n\nfunction onEofChunk(stream, state) {\n  if (state.decoder && !state.ended) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // if we've ended and we have some data left, then emit\n  // 'readable' now to make sure it gets picked up.\n  if (state.length > 0)\n    emitReadable(stream);\n  else\n    endReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (state.emittedReadable)\n    return;\n\n  state.emittedReadable = true;\n  if (state.sync)\n    process.nextTick(function() {\n      emitReadable_(stream);\n    });\n  else\n    emitReadable_(stream);\n}\n\nfunction emitReadable_(stream) {\n  stream.emit('readable');\n}\n\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(function() {\n      maybeReadMore_(stream, state);\n    });\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended &&\n         state.length < state.highWaterMark) {\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n    else\n      len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function(n) {\n  this.emit('error', new Error('not implemented'));\n};\n\nReadable.prototype.pipe = function(dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&\n              dest !== process.stdout &&\n              dest !== process.stderr;\n\n  var endFn = doEnd ? onend : cleanup;\n  if (state.endEmitted)\n    process.nextTick(endFn);\n  else\n    src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable) {\n    if (readable !== src) return;\n    cleanup();\n  }\n\n  function onend() {\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  function cleanup() {\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', cleanup);\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (!dest._writableState || dest._writableState.needDrain)\n      ondrain();\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EE.listenerCount(dest, 'error') === 0)\n      dest.emit('error', er);\n  }\n  // This is a brutally ugly hack to make sure that our error handler\n  // is attached before any userland ones.  NEVER DO THIS.\n  if (!dest._events || !dest._events.error)\n    dest.on('error', onerror);\n  else if (isArray(dest._events.error))\n    dest._events.error.unshift(onerror);\n  else\n    dest._events.error = [onerror, dest._events.error];\n\n\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    // the handler that waits for readable events after all\n    // the data gets sucked out in flow.\n    // This would be easier to follow with a .once() handler\n    // in flow(), but that is too slow.\n    this.on('readable', pipeOnReadable);\n\n    state.flowing = true;\n    process.nextTick(function() {\n      flow(src);\n    });\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function() {\n    var dest = this;\n    var state = src._readableState;\n    state.awaitDrain--;\n    if (state.awaitDrain === 0)\n      flow(src);\n  };\n}\n\nfunction flow(src) {\n  var state = src._readableState;\n  var chunk;\n  state.awaitDrain = 0;\n\n  function write(dest, i, list) {\n    var written = dest.write(chunk);\n    if (false === written) {\n      state.awaitDrain++;\n    }\n  }\n\n  while (state.pipesCount && null !== (chunk = src.read())) {\n\n    if (state.pipesCount === 1)\n      write(state.pipes, 0, null);\n    else\n      forEach(state.pipes, write);\n\n    src.emit('data', chunk);\n\n    // if anyone needs a drain, then we have to wait for that.\n    if (state.awaitDrain > 0)\n      return;\n  }\n\n  // if every destination was unpiped, either before entering this\n  // function, or in the while loop, then stop flowing.\n  //\n  // NB: This is a pretty rare edge case.\n  if (state.pipesCount === 0) {\n    state.flowing = false;\n\n    // if there were data event listeners added, then switch to old mode.\n    if (EE.listenerCount(src, 'data') > 0)\n      emitDataEvents(src);\n    return;\n  }\n\n  // at this point, no one needed a drain, so we just ran out of data\n  // on the next readable event, start it over again.\n  state.ranOut = true;\n}\n\nfunction pipeOnReadable() {\n  if (this._readableState.ranOut) {\n    this._readableState.ranOut = false;\n    flow(this);\n  }\n}\n\n\nReadable.prototype.unpipe = function(dest) {\n  var state = this._readableState;\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0)\n    return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes)\n      return this;\n\n    if (!dest)\n      dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    this.removeListener('readable', pipeOnReadable);\n    state.flowing = false;\n    if (dest)\n      dest.emit('unpipe', this);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    this.removeListener('readable', pipeOnReadable);\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++)\n      dests[i].emit('unpipe', this);\n    return this;\n  }\n\n  // try to find the right one.\n  var i = indexOf(state.pipes, dest);\n  if (i === -1)\n    return this;\n\n  state.pipes.splice(i, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1)\n    state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function(ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data' && !this._readableState.flowing)\n    emitDataEvents(this);\n\n  if (ev === 'readable' && this.readable) {\n    var state = this._readableState;\n    if (!state.readableListening) {\n      state.readableListening = true;\n      state.emittedReadable = false;\n      state.needReadable = true;\n      if (!state.reading) {\n        this.read(0);\n      } else if (state.length) {\n        emitReadable(this, state);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function() {\n  emitDataEvents(this);\n  this.read(0);\n  this.emit('resume');\n};\n\nReadable.prototype.pause = function() {\n  emitDataEvents(this, true);\n  this.emit('pause');\n};\n\nfunction emitDataEvents(stream, startPaused) {\n  var state = stream._readableState;\n\n  if (state.flowing) {\n    // https://github.com/isaacs/readable-stream/issues/16\n    throw new Error('Cannot switch to old mode now.');\n  }\n\n  var paused = startPaused || false;\n  var readable = false;\n\n  // convert to an old-style stream.\n  stream.readable = true;\n  stream.pipe = Stream.prototype.pipe;\n  stream.on = stream.addListener = Stream.prototype.on;\n\n  stream.on('readable', function() {\n    readable = true;\n\n    var c;\n    while (!paused && (null !== (c = stream.read())))\n      stream.emit('data', c);\n\n    if (c === null) {\n      readable = false;\n      stream._readableState.needReadable = true;\n    }\n  });\n\n  stream.pause = function() {\n    paused = true;\n    this.emit('pause');\n  };\n\n  stream.resume = function() {\n    paused = false;\n    if (readable)\n      process.nextTick(function() {\n        stream.emit('readable');\n      });\n    else\n      this.read(0);\n    this.emit('resume');\n  };\n\n  // now make it start, just in case it hadn't already.\n  stream.emit('readable');\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function(stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function() {\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length)\n        self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function(chunk) {\n    if (state.decoder)\n      chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    //if (state.objectMode && util.isNullOrUndefined(chunk))\n    if (state.objectMode && (chunk === null || chunk === undefined))\n      return;\n    else if (!state.objectMode && (!chunk || !chunk.length))\n      return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (typeof stream[i] === 'function' &&\n        typeof this[i] === 'undefined') {\n      this[i] = function(method) { return function() {\n        return stream[method].apply(stream, arguments);\n      }}(i);\n    }\n  }\n\n  // proxy certain important events.\n  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n  forEach(events, function(ev) {\n    stream.on(ev, self.emit.bind(self, ev));\n  });\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function(n) {\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\nfunction fromList(n, state) {\n  var list = state.buffer;\n  var length = state.length;\n  var stringMode = !!state.decoder;\n  var objectMode = !!state.objectMode;\n  var ret;\n\n  // nothing in the list, definitely empty.\n  if (list.length === 0)\n    return null;\n\n  if (length === 0)\n    ret = null;\n  else if (objectMode)\n    ret = list.shift();\n  else if (!n || n >= length) {\n    // read it all, truncate the array.\n    if (stringMode)\n      ret = list.join('');\n    else\n      ret = Buffer.concat(list, length);\n    list.length = 0;\n  } else {\n    // read just some of it.\n    if (n < list[0].length) {\n      // just take a part of the first list item.\n      // slice is the same for buffers and strings.\n      var buf = list[0];\n      ret = buf.slice(0, n);\n      list[0] = buf.slice(n);\n    } else if (n === list[0].length) {\n      // first list is a perfect match\n      ret = list.shift();\n    } else {\n      // complex case.\n      // we have enough to cover it, but it spans past the first buffer.\n      if (stringMode)\n        ret = '';\n      else\n        ret = new Buffer(n);\n\n      var c = 0;\n      for (var i = 0, l = list.length; i < l && c < n; i++) {\n        var buf = list[0];\n        var cpy = Math.min(n - c, buf.length);\n\n        if (stringMode)\n          ret += buf.slice(0, cpy);\n        else\n          buf.copy(ret, c, 0, cpy);\n\n        if (cpy < buf.length)\n          list[0] = buf.slice(cpy);\n        else\n          list.shift();\n\n        c += cpy;\n      }\n    }\n  }\n\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0)\n    throw new Error('endReadable called on non-empty stream');\n\n  if (!state.endEmitted && state.calledRead) {\n    state.ended = true;\n    process.nextTick(function() {\n      // Check that we didn't get one last unshift.\n      if (!state.endEmitted && state.length === 0) {\n        state.endEmitted = true;\n        stream.readable = false;\n        stream.emit('end');\n      }\n    });\n  }\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf (xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\n\nfunction TransformState(options, stream) {\n  this.afterTransform = function(er, data) {\n    return afterTransform(stream, er, data);\n  };\n\n  this.needTransform = false;\n  this.transforming = false;\n  this.writecb = null;\n  this.writechunk = null;\n}\n\nfunction afterTransform(stream, er, data) {\n  var ts = stream._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb)\n    return stream.emit('error', new Error('no writecb in Transform class'));\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data !== null && data !== undefined)\n    stream.push(data);\n\n  if (cb)\n    cb(er);\n\n  var rs = stream._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    stream._read(rs.highWaterMark);\n  }\n}\n\n\nfunction Transform(options) {\n  if (!(this instanceof Transform))\n    return new Transform(options);\n\n  Duplex.call(this, options);\n\n  var ts = this._transformState = new TransformState(options, this);\n\n  // when the writable side finishes, then flush out anything remaining.\n  var stream = this;\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  this.once('finish', function() {\n    if ('function' === typeof this._flush)\n      this._flush(function(er) {\n        done(stream, er);\n      });\n    else\n      done(stream);\n  });\n}\n\nTransform.prototype.push = function(chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function(chunk, encoding, cb) {\n  throw new Error('not implemented');\n};\n\nTransform.prototype._write = function(chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform ||\n        rs.needReadable ||\n        rs.length < rs.highWaterMark)\n      this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function(n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\n\nfunction done(stream, er) {\n  if (er)\n    return stream.emit('error', er);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  var ws = stream._writableState;\n  var rs = stream._readableState;\n  var ts = stream._transformState;\n\n  if (ws.length)\n    throw new Error('calling transform done when ws.length != 0');\n\n  if (ts.transforming)\n    throw new Error('calling transform done when still transforming');\n\n  return stream.push(null);\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, cb), and it'll handle all\n// the drain event emission and buffering.\n\nmodule.exports = Writable;\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Stream = require('stream');\n\nutil.inherits(Writable, Stream);\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n}\n\nfunction WritableState(options, stream) {\n  options = options || {};\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : 16 * 1024;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, becuase any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function(er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.buffer = [];\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n}\n\nfunction Writable(options) {\n  var Duplex = require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, though they're not\n  // instanceof Writable, they're instanceof Readable.\n  if (!(this instanceof Writable) && !(this instanceof Duplex))\n    return new Writable(options);\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function() {\n  this.emit('error', new Error('Cannot pipe. Not readable.'));\n};\n\n\nfunction writeAfterEnd(stream, state, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  process.nextTick(function() {\n    cb(er);\n  });\n}\n\n// If we get something that is not a buffer, string, null, or undefined,\n// and we're not in objectMode, then that's an error.\n// Otherwise stream chunks are all considered to be of length=1, and the\n// watermarks determine how many objects to keep in the buffer, rather than\n// how many bytes or characters.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  if (!Buffer.isBuffer(chunk) &&\n      'string' !== typeof chunk &&\n      chunk !== null &&\n      chunk !== undefined &&\n      !state.objectMode) {\n    var er = new TypeError('Invalid non-string/buffer chunk');\n    stream.emit('error', er);\n    process.nextTick(function() {\n      cb(er);\n    });\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function(chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (Buffer.isBuffer(chunk))\n    encoding = 'buffer';\n  else if (!encoding)\n    encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function')\n    cb = function() {};\n\n  if (state.ended)\n    writeAfterEnd(this, state, cb);\n  else if (validChunk(this, state, chunk, cb))\n    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n\n  return ret;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode &&\n      state.decodeStrings !== false &&\n      typeof chunk === 'string') {\n    chunk = new Buffer(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n  chunk = decodeChunk(state, chunk, encoding);\n  if (Buffer.isBuffer(chunk))\n    encoding = 'buffer';\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret)\n    state.needDrain = true;\n\n  if (state.writing)\n    state.buffer.push(new WriteReq(chunk, encoding, cb));\n  else\n    doWrite(stream, state, len, chunk, encoding, cb);\n\n  return ret;\n}\n\nfunction doWrite(stream, state, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  if (sync)\n    process.nextTick(function() {\n      cb(er);\n    });\n  else\n    cb(er);\n\n  stream._writableState.errorEmitted = true;\n  stream.emit('error', er);\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er)\n    onwriteError(stream, state, sync, er, cb);\n  else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(stream, state);\n\n    if (!finished && !state.bufferProcessing && state.buffer.length)\n      clearBuffer(stream, state);\n\n    if (sync) {\n      process.nextTick(function() {\n        afterWrite(stream, state, finished, cb);\n      });\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished)\n    onwriteDrain(stream, state);\n  cb();\n  if (finished)\n    finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n\n  for (var c = 0; c < state.buffer.length; c++) {\n    var entry = state.buffer[c];\n    var chunk = entry.chunk;\n    var encoding = entry.encoding;\n    var cb = entry.callback;\n    var len = state.objectMode ? 1 : chunk.length;\n\n    doWrite(stream, state, len, chunk, encoding, cb);\n\n    // if we didn't call the onwrite immediately, then\n    // it means that we need to wait until it does.\n    // also, that means that the chunk and cb are currently\n    // being processed, so move the buffer counter past them.\n    if (state.writing) {\n      c++;\n      break;\n    }\n  }\n\n  state.bufferProcessing = false;\n  if (c < state.buffer.length)\n    state.buffer = state.buffer.slice(c);\n  else\n    state.buffer.length = 0;\n}\n\nWritable.prototype._write = function(chunk, encoding, cb) {\n  cb(new Error('not implemented'));\n};\n\nWritable.prototype.end = function(chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (typeof chunk !== 'undefined' && chunk !== null)\n    this.write(chunk, encoding);\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished)\n    endWritable(this, state, cb);\n};\n\n\nfunction needFinish(stream, state) {\n  return (state.ending &&\n          state.length === 0 &&\n          !state.finished &&\n          !state.writing);\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(stream, state);\n  if (need) {\n    state.finished = true;\n    stream.emit('finish');\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished)\n      process.nextTick(cb);\n    else\n      stream.once('finish', cb);\n  }\n  state.ended = true;\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nfunction isBuffer(arg) {\n  return Buffer.isBuffer(arg);\n}\nexports.isBuffer = isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}","module.exports = require(\"./lib/_stream_passthrough.js\")\n","var Stream = require('stream'); // hack to fix a circular dependency issue when used with browserify\nexports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = Stream;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n","module.exports = require(\"./lib/_stream_transform.js\")\n","module.exports = require(\"./lib/_stream_writable.js\")\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar Buffer = require('buffer').Buffer;\n\nvar isBufferEncoding = Buffer.isEncoding\n  || function(encoding) {\n       switch (encoding && encoding.toLowerCase()) {\n         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n         default: return false;\n       }\n     }\n\n\nfunction assertEncoding(encoding) {\n  if (encoding && !isBufferEncoding(encoding)) {\n    throw new Error('Unknown encoding: ' + encoding);\n  }\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters. CESU-8 is handled as part of the UTF-8 encoding.\n//\n// @TODO Handling all encodings inside a single object makes it very difficult\n// to reason about this code, so it should be split up in the future.\n// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n// points as used by CESU-8.\nvar StringDecoder = exports.StringDecoder = function(encoding) {\n  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n  assertEncoding(encoding);\n  switch (this.encoding) {\n    case 'utf8':\n      // CESU-8 represents each of Surrogate Pair by 3-bytes\n      this.surrogateSize = 3;\n      break;\n    case 'ucs2':\n    case 'utf16le':\n      // UTF-16 represents each of Surrogate Pair by 2-bytes\n      this.surrogateSize = 2;\n      this.detectIncompleteChar = utf16DetectIncompleteChar;\n      break;\n    case 'base64':\n      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n      this.surrogateSize = 3;\n      this.detectIncompleteChar = base64DetectIncompleteChar;\n      break;\n    default:\n      this.write = passThroughWrite;\n      return;\n  }\n\n  // Enough space to store all bytes of a single character. UTF-8 needs 4\n  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n  this.charBuffer = new Buffer(6);\n  // Number of bytes received for the current incomplete multi-byte character.\n  this.charReceived = 0;\n  // Number of bytes expected for the current incomplete multi-byte character.\n  this.charLength = 0;\n};\n\n\n// write decodes the given buffer and returns it as JS string that is\n// guaranteed to not contain any partial multi-byte characters. Any partial\n// character found at the end of the buffer is buffered up, and will be\n// returned when calling write again with the remaining bytes.\n//\n// Note: Converting a Buffer containing an orphan surrogate to a String\n// currently works, but converting a String to a Buffer (via `new Buffer`, or\n// Buffer#write) will replace incomplete surrogates with the unicode\n// replacement character. See https://codereview.chromium.org/121173009/ .\nStringDecoder.prototype.write = function(buffer) {\n  var charStr = '';\n  // if our last write ended with an incomplete multibyte character\n  while (this.charLength) {\n    // determine how many remaining bytes this buffer has to offer for this char\n    var available = (buffer.length >= this.charLength - this.charReceived) ?\n        this.charLength - this.charReceived :\n        buffer.length;\n\n    // add the new bytes to the char buffer\n    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n    this.charReceived += available;\n\n    if (this.charReceived < this.charLength) {\n      // still not enough chars in this buffer? wait for more ...\n      return '';\n    }\n\n    // remove bytes belonging to the current character from the buffer\n    buffer = buffer.slice(available, buffer.length);\n\n    // get the character that was split\n    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\n    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n    var charCode = charStr.charCodeAt(charStr.length - 1);\n    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n      this.charLength += this.surrogateSize;\n      charStr = '';\n      continue;\n    }\n    this.charReceived = this.charLength = 0;\n\n    // if there are no more bytes in this buffer, just emit our char\n    if (buffer.length === 0) {\n      return charStr;\n    }\n    break;\n  }\n\n  // determine and set charLength / charReceived\n  this.detectIncompleteChar(buffer);\n\n  var end = buffer.length;\n  if (this.charLength) {\n    // buffer the incomplete character bytes we got\n    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n    end -= this.charReceived;\n  }\n\n  charStr += buffer.toString(this.encoding, 0, end);\n\n  var end = charStr.length - 1;\n  var charCode = charStr.charCodeAt(end);\n  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n    var size = this.surrogateSize;\n    this.charLength += size;\n    this.charReceived += size;\n    this.charBuffer.copy(this.charBuffer, size, 0, size);\n    buffer.copy(this.charBuffer, 0, 0, size);\n    return charStr.substring(0, end);\n  }\n\n  // or just emit the charStr\n  return charStr;\n};\n\n// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n// the end of the given buffer. If so, it sets this.charLength to the byte\n// length that character, and sets this.charReceived to the number of bytes\n// that are available for this character.\nStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n  // determine how many bytes we have to check at the end of this buffer\n  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\n  // Figure out if one of the last i bytes of our buffer announces an\n  // incomplete char.\n  for (; i > 0; i--) {\n    var c = buffer[buffer.length - i];\n\n    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\n    // 110XXXXX\n    if (i == 1 && c >> 5 == 0x06) {\n      this.charLength = 2;\n      break;\n    }\n\n    // 1110XXXX\n    if (i <= 2 && c >> 4 == 0x0E) {\n      this.charLength = 3;\n      break;\n    }\n\n    // 11110XXX\n    if (i <= 3 && c >> 3 == 0x1E) {\n      this.charLength = 4;\n      break;\n    }\n  }\n  this.charReceived = i;\n};\n\nStringDecoder.prototype.end = function(buffer) {\n  var res = '';\n  if (buffer && buffer.length)\n    res = this.write(buffer);\n\n  if (this.charReceived) {\n    var cr = this.charReceived;\n    var buf = this.charBuffer;\n    var enc = this.encoding;\n    res += buf.slice(0, cr).toString(enc);\n  }\n\n  return res;\n};\n\nfunction passThroughWrite(buffer) {\n  return buffer.toString(this.encoding);\n}\n\nfunction utf16DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 2;\n  this.charLength = this.charReceived ? 2 : 0;\n}\n\nfunction base64DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 3;\n  this.charLength = this.charReceived ? 3 : 0;\n}\n","'use strict';\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n// shim for Node's 'util' package\n// DO NOT REMOVE THIS! It is required for compatibility with EnderJS (http://enderjs.com/).\nvar util = {\n  isArray: function (ar) {\n    return Array.isArray(ar) || (typeof ar === 'object' && objectToString(ar) === '[object Array]');\n  },\n  isDate: function (d) {\n    return typeof d === 'object' && objectToString(d) === '[object Date]';\n  },\n  isRegExp: function (re) {\n    return typeof re === 'object' && objectToString(re) === '[object RegExp]';\n  },\n  getRegExpFlags: function (re) {\n    var flags = '';\n    re.global && (flags += 'g');\n    re.ignoreCase && (flags += 'i');\n    re.multiline && (flags += 'm');\n    return flags;\n  }\n};\n\n\nif (typeof module === 'object')\n  module.exports = clone;\n\n/**\n * Clones (copies) an Object using deep copying.\n *\n * This function supports circular references by default, but if you are certain\n * there are no circular references in your object, you can save some CPU time\n * by calling clone(obj, false).\n *\n * Caution: if `circular` is false and `parent` contains circular references,\n * your program may enter an infinite loop and crash.\n *\n * @param `parent` - the object to be cloned\n * @param `circular` - set to true if the object to be cloned may contain\n *    circular references. (optional - true by default)\n * @param `depth` - set to a number if the object is only to be cloned to\n *    a particular depth. (optional - defaults to Infinity)\n * @param `prototype` - sets the prototype to be used when cloning an object.\n *    (optional - defaults to parent prototype).\n*/\n\nfunction clone(parent, circular, depth, prototype) {\n  // maintain two arrays for circular references, where corresponding parents\n  // and children have the same index\n  var allParents = [];\n  var allChildren = [];\n\n  var useBuffer = typeof Buffer != 'undefined';\n\n  if (typeof circular == 'undefined')\n    circular = true;\n\n  if (typeof depth == 'undefined')\n    depth = Infinity;\n\n  // recurse this function so we don't reset allParents and allChildren\n  function _clone(parent, depth) {\n    // cloning null always returns null\n    if (parent === null)\n      return null;\n\n    if (depth == 0)\n      return parent;\n\n    var child;\n    var proto;\n    if (typeof parent != 'object') {\n      return parent;\n    }\n\n    if (util.isArray(parent)) {\n      child = [];\n    } else if (util.isRegExp(parent)) {\n      child = new RegExp(parent.source, util.getRegExpFlags(parent));\n      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n    } else if (util.isDate(parent)) {\n      child = new Date(parent.getTime());\n    } else if (useBuffer && Buffer.isBuffer(parent)) {\n      child = new Buffer(parent.length);\n      parent.copy(child);\n      return child;\n    } else {\n      if (typeof prototype == 'undefined') {\n        proto = Object.getPrototypeOf(parent);\n        child = Object.create(proto);\n      }\n      else {\n        child = Object.create(prototype);\n        proto = prototype;\n      }\n    }\n\n    if (circular) {\n      var index = allParents.indexOf(parent);\n\n      if (index != -1) {\n        return allChildren[index];\n      }\n      allParents.push(parent);\n      allChildren.push(child);\n    }\n\n    for (var i in parent) {\n      var attrs;\n      if (proto) {\n        attrs = Object.getOwnPropertyDescriptor(proto, i);\n      }\n      \n      if (attrs && attrs.set == null) {\n        continue;\n      }\n      child[i] = _clone(parent[i], depth - 1);\n    }\n\n    return child;\n  }\n\n  return _clone(parent, depth);\n}\n\n/**\n * Simple flat clone using prototype, accepts only objects, usefull for property\n * override on FLAT configuration object (no nested props).\n *\n * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n * works.\n */\nclone.clonePrototype = function(parent) {\n  if (parent === null)\n    return null;\n\n  var c = function () {};\n  c.prototype = parent;\n  return new c();\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","// wrapper for non-node envs\n;(function (sax) {\n\nsax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\nsax.SAXParser = SAXParser\nsax.SAXStream = SAXStream\nsax.createStream = createStream\n\n// When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n// When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n// since that's the earliest that a buffer overrun could occur.  This way, checks are\n// as rare as required, but as often as necessary to ensure never crossing this bound.\n// Furthermore, buffers are only tested at most once per write(), so passing a very\n// large string into write() might have undesirable effects, but this is manageable by\n// the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n// edge case, result in creating at most one complete copy of the string passed in.\n// Set to Infinity to have unlimited buffers.\nsax.MAX_BUFFER_LENGTH = 64 * 1024\n\nvar buffers = [\n  \"comment\", \"sgmlDecl\", \"textNode\", \"tagName\", \"doctype\",\n  \"procInstName\", \"procInstBody\", \"entity\", \"attribName\",\n  \"attribValue\", \"cdata\", \"script\"\n]\n\nsax.EVENTS = // for discoverability.\n  [ \"text\"\n  , \"processinginstruction\"\n  , \"sgmldeclaration\"\n  , \"doctype\"\n  , \"comment\"\n  , \"attribute\"\n  , \"opentag\"\n  , \"closetag\"\n  , \"opencdata\"\n  , \"cdata\"\n  , \"closecdata\"\n  , \"error\"\n  , \"end\"\n  , \"ready\"\n  , \"script\"\n  , \"opennamespace\"\n  , \"closenamespace\"\n  ]\n\nfunction SAXParser (strict, opt) {\n  if (!(this instanceof SAXParser)) return new SAXParser(strict, opt)\n\n  var parser = this\n  clearBuffers(parser)\n  parser.q = parser.c = \"\"\n  parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n  parser.opt = opt || {}\n  parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n  parser.looseCase = parser.opt.lowercase ? \"toLowerCase\" : \"toUpperCase\"\n  parser.tags = []\n  parser.closed = parser.closedRoot = parser.sawRoot = false\n  parser.tag = parser.error = null\n  parser.strict = !!strict\n  parser.noscript = !!(strict || parser.opt.noscript)\n  parser.state = S.BEGIN\n  parser.ENTITIES = Object.create(sax.ENTITIES)\n  parser.attribList = []\n\n  // namespaces form a prototype chain.\n  // it always points at the current tag,\n  // which protos to its parent tag.\n  if (parser.opt.xmlns) parser.ns = Object.create(rootNS)\n\n  // mostly just for error reporting\n  parser.trackPosition = parser.opt.position !== false\n  if (parser.trackPosition) {\n    parser.position = parser.line = parser.column = 0\n  }\n  emit(parser, \"onready\")\n}\n\nif (!Object.create) Object.create = function (o) {\n  function f () { this.__proto__ = o }\n  f.prototype = o\n  return new f\n}\n\nif (!Object.getPrototypeOf) Object.getPrototypeOf = function (o) {\n  return o.__proto__\n}\n\nif (!Object.keys) Object.keys = function (o) {\n  var a = []\n  for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n  return a\n}\n\nfunction checkBufferLength (parser) {\n  var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    , maxActual = 0\n  for (var i = 0, l = buffers.length; i < l; i ++) {\n    var len = parser[buffers[i]].length\n    if (len > maxAllowed) {\n      // Text/cdata nodes can get big, and since they're buffered,\n      // we can get here under normal conditions.\n      // Avoid issues by emitting the text node now,\n      // so at least it won't get any bigger.\n      switch (buffers[i]) {\n        case \"textNode\":\n          closeText(parser)\n        break\n\n        case \"cdata\":\n          emitNode(parser, \"oncdata\", parser.cdata)\n          parser.cdata = \"\"\n        break\n\n        case \"script\":\n          emitNode(parser, \"onscript\", parser.script)\n          parser.script = \"\"\n        break\n\n        default:\n          error(parser, \"Max buffer length exceeded: \"+buffers[i])\n      }\n    }\n    maxActual = Math.max(maxActual, len)\n  }\n  // schedule the next check for the earliest possible buffer overrun.\n  parser.bufferCheckPosition = (sax.MAX_BUFFER_LENGTH - maxActual)\n                             + parser.position\n}\n\nfunction clearBuffers (parser) {\n  for (var i = 0, l = buffers.length; i < l; i ++) {\n    parser[buffers[i]] = \"\"\n  }\n}\n\nfunction flushBuffers (parser) {\n  closeText(parser)\n  if (parser.cdata !== \"\") {\n    emitNode(parser, \"oncdata\", parser.cdata)\n    parser.cdata = \"\"\n  }\n  if (parser.script !== \"\") {\n    emitNode(parser, \"onscript\", parser.script)\n    parser.script = \"\"\n  }\n}\n\nSAXParser.prototype =\n  { end: function () { end(this) }\n  , write: write\n  , resume: function () { this.error = null; return this }\n  , close: function () { return this.write(null) }\n  , flush: function () { flushBuffers(this) }\n  }\n\ntry {\n  var Stream = require(\"stream\").Stream\n} catch (ex) {\n  var Stream = function () {}\n}\n\n\nvar streamWraps = sax.EVENTS.filter(function (ev) {\n  return ev !== \"error\" && ev !== \"end\"\n})\n\nfunction createStream (strict, opt) {\n  return new SAXStream(strict, opt)\n}\n\nfunction SAXStream (strict, opt) {\n  if (!(this instanceof SAXStream)) return new SAXStream(strict, opt)\n\n  Stream.apply(this)\n\n  this._parser = new SAXParser(strict, opt)\n  this.writable = true\n  this.readable = true\n\n\n  var me = this\n\n  this._parser.onend = function () {\n    me.emit(\"end\")\n  }\n\n  this._parser.onerror = function (er) {\n    me.emit(\"error\", er)\n\n    // if didn't throw, then means error was handled.\n    // go ahead and clear error, so we can write again.\n    me._parser.error = null\n  }\n\n  this._decoder = null;\n\n  streamWraps.forEach(function (ev) {\n    Object.defineProperty(me, \"on\" + ev, {\n      get: function () { return me._parser[\"on\" + ev] },\n      set: function (h) {\n        if (!h) {\n          me.removeAllListeners(ev)\n          return me._parser[\"on\"+ev] = h\n        }\n        me.on(ev, h)\n      },\n      enumerable: true,\n      configurable: false\n    })\n  })\n}\n\nSAXStream.prototype = Object.create(Stream.prototype,\n  { constructor: { value: SAXStream } })\n\nSAXStream.prototype.write = function (data) {\n  if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n    if (!this._decoder) {\n      var SD = require('string_decoder').StringDecoder\n      this._decoder = new SD('utf8')\n    }\n    data = this._decoder.write(data);\n  }\n\n  this._parser.write(data.toString())\n  this.emit(\"data\", data)\n  return true\n}\n\nSAXStream.prototype.end = function (chunk) {\n  if (chunk && chunk.length) this.write(chunk)\n  this._parser.end()\n  return true\n}\n\nSAXStream.prototype.on = function (ev, handler) {\n  var me = this\n  if (!me._parser[\"on\"+ev] && streamWraps.indexOf(ev) !== -1) {\n    me._parser[\"on\"+ev] = function () {\n      var args = arguments.length === 1 ? [arguments[0]]\n               : Array.apply(null, arguments)\n      args.splice(0, 0, ev)\n      me.emit.apply(me, args)\n    }\n  }\n\n  return Stream.prototype.on.call(me, ev, handler)\n}\n\n\n\n// character classes and tokens\nvar whitespace = \"\\r\\n\\t \"\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  , number = \"0124356789\"\n  , letter = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n  // (Letter | \"_\" | \":\")\n  , quote = \"'\\\"\"\n  , entity = number+letter+\"#\"\n  , attribEnd = whitespace + \">\"\n  , CDATA = \"[CDATA[\"\n  , DOCTYPE = \"DOCTYPE\"\n  , XML_NAMESPACE = \"http://www.w3.org/XML/1998/namespace\"\n  , XMLNS_NAMESPACE = \"http://www.w3.org/2000/xmlns/\"\n  , rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n// turn all the string character sets into character class objects.\nwhitespace = charClass(whitespace)\nnumber = charClass(number)\nletter = charClass(letter)\n\n// http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n// This implementation works on strings, a single character at a time\n// as such, it cannot ever support astral-plane characters (10000-EFFFF)\n// without a significant breaking change to either this  parser, or the\n// JavaScript language.  Implementation of an emoji-capable xml parser\n// is left as an exercise for the reader.\nvar nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\nvar nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040\\.\\d-]/\n\nquote = charClass(quote)\nentity = charClass(entity)\nattribEnd = charClass(attribEnd)\n\nfunction charClass (str) {\n  return str.split(\"\").reduce(function (s, c) {\n    s[c] = true\n    return s\n  }, {})\n}\n\nfunction isRegExp (c) {\n  return Object.prototype.toString.call(c) === '[object RegExp]'\n}\n\nfunction is (charclass, c) {\n  return isRegExp(charclass) ? !!c.match(charclass) : charclass[c]\n}\n\nfunction not (charclass, c) {\n  return !is(charclass, c)\n}\n\nvar S = 0\nsax.STATE =\n{ BEGIN                     : S++\n, TEXT                      : S++ // general stuff\n, TEXT_ENTITY               : S++ // &amp and such.\n, OPEN_WAKA                 : S++ // <\n, SGML_DECL                 : S++ // <!BLARG\n, SGML_DECL_QUOTED          : S++ // <!BLARG foo \"bar\n, DOCTYPE                   : S++ // <!DOCTYPE\n, DOCTYPE_QUOTED            : S++ // <!DOCTYPE \"//blah\n, DOCTYPE_DTD               : S++ // <!DOCTYPE \"//blah\" [ ...\n, DOCTYPE_DTD_QUOTED        : S++ // <!DOCTYPE \"//blah\" [ \"foo\n, COMMENT_STARTING          : S++ // <!-\n, COMMENT                   : S++ // <!--\n, COMMENT_ENDING            : S++ // <!-- blah -\n, COMMENT_ENDED             : S++ // <!-- blah --\n, CDATA                     : S++ // <![CDATA[ something\n, CDATA_ENDING              : S++ // ]\n, CDATA_ENDING_2            : S++ // ]]\n, PROC_INST                 : S++ // <?hi\n, PROC_INST_BODY            : S++ // <?hi there\n, PROC_INST_ENDING          : S++ // <?hi \"there\" ?\n, OPEN_TAG                  : S++ // <strong\n, OPEN_TAG_SLASH            : S++ // <strong /\n, ATTRIB                    : S++ // <a\n, ATTRIB_NAME               : S++ // <a foo\n, ATTRIB_NAME_SAW_WHITE     : S++ // <a foo _\n, ATTRIB_VALUE              : S++ // <a foo=\n, ATTRIB_VALUE_QUOTED       : S++ // <a foo=\"bar\n, ATTRIB_VALUE_CLOSED       : S++ // <a foo=\"bar\"\n, ATTRIB_VALUE_UNQUOTED     : S++ // <a foo=bar\n, ATTRIB_VALUE_ENTITY_Q     : S++ // <foo bar=\"&quot;\"\n, ATTRIB_VALUE_ENTITY_U     : S++ // <foo bar=&quot;\n, CLOSE_TAG                 : S++ // </a\n, CLOSE_TAG_SAW_WHITE       : S++ // </a   >\n, SCRIPT                    : S++ // <script> ...\n, SCRIPT_ENDING             : S++ // <script> ... <\n}\n\nsax.ENTITIES =\n{ \"amp\" : \"&\"\n, \"gt\" : \">\"\n, \"lt\" : \"<\"\n, \"quot\" : \"\\\"\"\n, \"apos\" : \"'\"\n, \"AElig\" : 198\n, \"Aacute\" : 193\n, \"Acirc\" : 194\n, \"Agrave\" : 192\n, \"Aring\" : 197\n, \"Atilde\" : 195\n, \"Auml\" : 196\n, \"Ccedil\" : 199\n, \"ETH\" : 208\n, \"Eacute\" : 201\n, \"Ecirc\" : 202\n, \"Egrave\" : 200\n, \"Euml\" : 203\n, \"Iacute\" : 205\n, \"Icirc\" : 206\n, \"Igrave\" : 204\n, \"Iuml\" : 207\n, \"Ntilde\" : 209\n, \"Oacute\" : 211\n, \"Ocirc\" : 212\n, \"Ograve\" : 210\n, \"Oslash\" : 216\n, \"Otilde\" : 213\n, \"Ouml\" : 214\n, \"THORN\" : 222\n, \"Uacute\" : 218\n, \"Ucirc\" : 219\n, \"Ugrave\" : 217\n, \"Uuml\" : 220\n, \"Yacute\" : 221\n, \"aacute\" : 225\n, \"acirc\" : 226\n, \"aelig\" : 230\n, \"agrave\" : 224\n, \"aring\" : 229\n, \"atilde\" : 227\n, \"auml\" : 228\n, \"ccedil\" : 231\n, \"eacute\" : 233\n, \"ecirc\" : 234\n, \"egrave\" : 232\n, \"eth\" : 240\n, \"euml\" : 235\n, \"iacute\" : 237\n, \"icirc\" : 238\n, \"igrave\" : 236\n, \"iuml\" : 239\n, \"ntilde\" : 241\n, \"oacute\" : 243\n, \"ocirc\" : 244\n, \"ograve\" : 242\n, \"oslash\" : 248\n, \"otilde\" : 245\n, \"ouml\" : 246\n, \"szlig\" : 223\n, \"thorn\" : 254\n, \"uacute\" : 250\n, \"ucirc\" : 251\n, \"ugrave\" : 249\n, \"uuml\" : 252\n, \"yacute\" : 253\n, \"yuml\" : 255\n, \"copy\" : 169\n, \"reg\" : 174\n, \"nbsp\" : 160\n, \"iexcl\" : 161\n, \"cent\" : 162\n, \"pound\" : 163\n, \"curren\" : 164\n, \"yen\" : 165\n, \"brvbar\" : 166\n, \"sect\" : 167\n, \"uml\" : 168\n, \"ordf\" : 170\n, \"laquo\" : 171\n, \"not\" : 172\n, \"shy\" : 173\n, \"macr\" : 175\n, \"deg\" : 176\n, \"plusmn\" : 177\n, \"sup1\" : 185\n, \"sup2\" : 178\n, \"sup3\" : 179\n, \"acute\" : 180\n, \"micro\" : 181\n, \"para\" : 182\n, \"middot\" : 183\n, \"cedil\" : 184\n, \"ordm\" : 186\n, \"raquo\" : 187\n, \"frac14\" : 188\n, \"frac12\" : 189\n, \"frac34\" : 190\n, \"iquest\" : 191\n, \"times\" : 215\n, \"divide\" : 247\n, \"OElig\" : 338\n, \"oelig\" : 339\n, \"Scaron\" : 352\n, \"scaron\" : 353\n, \"Yuml\" : 376\n, \"fnof\" : 402\n, \"circ\" : 710\n, \"tilde\" : 732\n, \"Alpha\" : 913\n, \"Beta\" : 914\n, \"Gamma\" : 915\n, \"Delta\" : 916\n, \"Epsilon\" : 917\n, \"Zeta\" : 918\n, \"Eta\" : 919\n, \"Theta\" : 920\n, \"Iota\" : 921\n, \"Kappa\" : 922\n, \"Lambda\" : 923\n, \"Mu\" : 924\n, \"Nu\" : 925\n, \"Xi\" : 926\n, \"Omicron\" : 927\n, \"Pi\" : 928\n, \"Rho\" : 929\n, \"Sigma\" : 931\n, \"Tau\" : 932\n, \"Upsilon\" : 933\n, \"Phi\" : 934\n, \"Chi\" : 935\n, \"Psi\" : 936\n, \"Omega\" : 937\n, \"alpha\" : 945\n, \"beta\" : 946\n, \"gamma\" : 947\n, \"delta\" : 948\n, \"epsilon\" : 949\n, \"zeta\" : 950\n, \"eta\" : 951\n, \"theta\" : 952\n, \"iota\" : 953\n, \"kappa\" : 954\n, \"lambda\" : 955\n, \"mu\" : 956\n, \"nu\" : 957\n, \"xi\" : 958\n, \"omicron\" : 959\n, \"pi\" : 960\n, \"rho\" : 961\n, \"sigmaf\" : 962\n, \"sigma\" : 963\n, \"tau\" : 964\n, \"upsilon\" : 965\n, \"phi\" : 966\n, \"chi\" : 967\n, \"psi\" : 968\n, \"omega\" : 969\n, \"thetasym\" : 977\n, \"upsih\" : 978\n, \"piv\" : 982\n, \"ensp\" : 8194\n, \"emsp\" : 8195\n, \"thinsp\" : 8201\n, \"zwnj\" : 8204\n, \"zwj\" : 8205\n, \"lrm\" : 8206\n, \"rlm\" : 8207\n, \"ndash\" : 8211\n, \"mdash\" : 8212\n, \"lsquo\" : 8216\n, \"rsquo\" : 8217\n, \"sbquo\" : 8218\n, \"ldquo\" : 8220\n, \"rdquo\" : 8221\n, \"bdquo\" : 8222\n, \"dagger\" : 8224\n, \"Dagger\" : 8225\n, \"bull\" : 8226\n, \"hellip\" : 8230\n, \"permil\" : 8240\n, \"prime\" : 8242\n, \"Prime\" : 8243\n, \"lsaquo\" : 8249\n, \"rsaquo\" : 8250\n, \"oline\" : 8254\n, \"frasl\" : 8260\n, \"euro\" : 8364\n, \"image\" : 8465\n, \"weierp\" : 8472\n, \"real\" : 8476\n, \"trade\" : 8482\n, \"alefsym\" : 8501\n, \"larr\" : 8592\n, \"uarr\" : 8593\n, \"rarr\" : 8594\n, \"darr\" : 8595\n, \"harr\" : 8596\n, \"crarr\" : 8629\n, \"lArr\" : 8656\n, \"uArr\" : 8657\n, \"rArr\" : 8658\n, \"dArr\" : 8659\n, \"hArr\" : 8660\n, \"forall\" : 8704\n, \"part\" : 8706\n, \"exist\" : 8707\n, \"empty\" : 8709\n, \"nabla\" : 8711\n, \"isin\" : 8712\n, \"notin\" : 8713\n, \"ni\" : 8715\n, \"prod\" : 8719\n, \"sum\" : 8721\n, \"minus\" : 8722\n, \"lowast\" : 8727\n, \"radic\" : 8730\n, \"prop\" : 8733\n, \"infin\" : 8734\n, \"ang\" : 8736\n, \"and\" : 8743\n, \"or\" : 8744\n, \"cap\" : 8745\n, \"cup\" : 8746\n, \"int\" : 8747\n, \"there4\" : 8756\n, \"sim\" : 8764\n, \"cong\" : 8773\n, \"asymp\" : 8776\n, \"ne\" : 8800\n, \"equiv\" : 8801\n, \"le\" : 8804\n, \"ge\" : 8805\n, \"sub\" : 8834\n, \"sup\" : 8835\n, \"nsub\" : 8836\n, \"sube\" : 8838\n, \"supe\" : 8839\n, \"oplus\" : 8853\n, \"otimes\" : 8855\n, \"perp\" : 8869\n, \"sdot\" : 8901\n, \"lceil\" : 8968\n, \"rceil\" : 8969\n, \"lfloor\" : 8970\n, \"rfloor\" : 8971\n, \"lang\" : 9001\n, \"rang\" : 9002\n, \"loz\" : 9674\n, \"spades\" : 9824\n, \"clubs\" : 9827\n, \"hearts\" : 9829\n, \"diams\" : 9830\n}\n\nObject.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n})\n\nfor (var S in sax.STATE) sax.STATE[sax.STATE[S]] = S\n\n// shorthand\nS = sax.STATE\n\nfunction emit (parser, event, data) {\n  parser[event] && parser[event](data)\n}\n\nfunction emitNode (parser, nodeType, data) {\n  if (parser.textNode) closeText(parser)\n  emit(parser, nodeType, data)\n}\n\nfunction closeText (parser) {\n  parser.textNode = textopts(parser.opt, parser.textNode)\n  if (parser.textNode) emit(parser, \"ontext\", parser.textNode)\n  parser.textNode = \"\"\n}\n\nfunction textopts (opt, text) {\n  if (opt.trim) text = text.trim()\n  if (opt.normalize) text = text.replace(/\\s+/g, \" \")\n  return text\n}\n\nfunction error (parser, er) {\n  closeText(parser)\n  if (parser.trackPosition) {\n    er += \"\\nLine: \"+parser.line+\n          \"\\nColumn: \"+parser.column+\n          \"\\nChar: \"+parser.c\n  }\n  er = new Error(er)\n  parser.error = er\n  emit(parser, \"onerror\", er)\n  return parser\n}\n\nfunction end (parser) {\n  if (!parser.closedRoot) strictFail(parser, \"Unclosed root tag\")\n  if ((parser.state !== S.BEGIN) && (parser.state !== S.TEXT)) error(parser, \"Unexpected end\")\n  closeText(parser)\n  parser.c = \"\"\n  parser.closed = true\n  emit(parser, \"onend\")\n  SAXParser.call(parser, parser.strict, parser.opt)\n  return parser\n}\n\nfunction strictFail (parser, message) {\n  if (typeof parser !== 'object' || !(parser instanceof SAXParser))\n    throw new Error('bad call to strictFail');\n  if (parser.strict) error(parser, message)\n}\n\nfunction newTag (parser) {\n  if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n  var parent = parser.tags[parser.tags.length - 1] || parser\n    , tag = parser.tag = { name : parser.tagName, attributes : {} }\n\n  // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n  if (parser.opt.xmlns) tag.ns = parent.ns\n  parser.attribList.length = 0\n}\n\nfunction qname (name, attribute) {\n  var i = name.indexOf(\":\")\n    , qualName = i < 0 ? [ \"\", name ] : name.split(\":\")\n    , prefix = qualName[0]\n    , local = qualName[1]\n\n  // <x \"xmlns\"=\"http://foo\">\n  if (attribute && name === \"xmlns\") {\n    prefix = \"xmlns\"\n    local = \"\"\n  }\n\n  return { prefix: prefix, local: local }\n}\n\nfunction attrib (parser) {\n  if (!parser.strict) parser.attribName = parser.attribName[parser.looseCase]()\n\n  if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n    return parser.attribName = parser.attribValue = \"\"\n  }\n\n  if (parser.opt.xmlns) {\n    var qn = qname(parser.attribName, true)\n      , prefix = qn.prefix\n      , local = qn.local\n\n    if (prefix === \"xmlns\") {\n      // namespace binding attribute; push the binding into scope\n      if (local === \"xml\" && parser.attribValue !== XML_NAMESPACE) {\n        strictFail( parser\n                  , \"xml: prefix must be bound to \" + XML_NAMESPACE + \"\\n\"\n                  + \"Actual: \" + parser.attribValue )\n      } else if (local === \"xmlns\" && parser.attribValue !== XMLNS_NAMESPACE) {\n        strictFail( parser\n                  , \"xmlns: prefix must be bound to \" + XMLNS_NAMESPACE + \"\\n\"\n                  + \"Actual: \" + parser.attribValue )\n      } else {\n        var tag = parser.tag\n          , parent = parser.tags[parser.tags.length - 1] || parser\n        if (tag.ns === parent.ns) {\n          tag.ns = Object.create(parent.ns)\n        }\n        tag.ns[local] = parser.attribValue\n      }\n    }\n\n    // defer onattribute events until all attributes have been seen\n    // so any new bindings can take effect; preserve attribute order\n    // so deferred events can be emitted in document order\n    parser.attribList.push([parser.attribName, parser.attribValue])\n  } else {\n    // in non-xmlns mode, we can emit the event right away\n    parser.tag.attributes[parser.attribName] = parser.attribValue\n    emitNode( parser\n            , \"onattribute\"\n            , { name: parser.attribName\n              , value: parser.attribValue } )\n  }\n\n  parser.attribName = parser.attribValue = \"\"\n}\n\nfunction openTag (parser, selfClosing) {\n  if (parser.opt.xmlns) {\n    // emit namespace binding events\n    var tag = parser.tag\n\n    // add namespace info to tag\n    var qn = qname(parser.tagName)\n    tag.prefix = qn.prefix\n    tag.local = qn.local\n    tag.uri = tag.ns[qn.prefix] || \"\"\n\n    if (tag.prefix && !tag.uri) {\n      strictFail(parser, \"Unbound namespace prefix: \"\n                       + JSON.stringify(parser.tagName))\n      tag.uri = qn.prefix\n    }\n\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    if (tag.ns && parent.ns !== tag.ns) {\n      Object.keys(tag.ns).forEach(function (p) {\n        emitNode( parser\n                , \"onopennamespace\"\n                , { prefix: p , uri: tag.ns[p] } )\n      })\n    }\n\n    // handle deferred onattribute events\n    // Note: do not apply default ns to attributes:\n    //   http://www.w3.org/TR/REC-xml-names/#defaulting\n    for (var i = 0, l = parser.attribList.length; i < l; i ++) {\n      var nv = parser.attribList[i]\n      var name = nv[0]\n        , value = nv[1]\n        , qualName = qname(name, true)\n        , prefix = qualName.prefix\n        , local = qualName.local\n        , uri = prefix == \"\" ? \"\" : (tag.ns[prefix] || \"\")\n        , a = { name: name\n              , value: value\n              , prefix: prefix\n              , local: local\n              , uri: uri\n              }\n\n      // if there's any attributes with an undefined namespace,\n      // then fail on them now.\n      if (prefix && prefix != \"xmlns\" && !uri) {\n        strictFail(parser, \"Unbound namespace prefix: \"\n                         + JSON.stringify(prefix))\n        a.uri = prefix\n      }\n      parser.tag.attributes[name] = a\n      emitNode(parser, \"onattribute\", a)\n    }\n    parser.attribList.length = 0\n  }\n\n  parser.tag.isSelfClosing = !!selfClosing\n\n  // process the tag\n  parser.sawRoot = true\n  parser.tags.push(parser.tag)\n  emitNode(parser, \"onopentag\", parser.tag)\n  if (!selfClosing) {\n    // special case for <script> in non-strict mode.\n    if (!parser.noscript && parser.tagName.toLowerCase() === \"script\") {\n      parser.state = S.SCRIPT\n    } else {\n      parser.state = S.TEXT\n    }\n    parser.tag = null\n    parser.tagName = \"\"\n  }\n  parser.attribName = parser.attribValue = \"\"\n  parser.attribList.length = 0\n}\n\nfunction closeTag (parser) {\n  if (!parser.tagName) {\n    strictFail(parser, \"Weird empty close tag.\")\n    parser.textNode += \"</>\"\n    parser.state = S.TEXT\n    return\n  }\n\n  if (parser.script) {\n    if (parser.tagName !== \"script\") {\n      parser.script += \"</\" + parser.tagName + \">\"\n      parser.tagName = \"\"\n      parser.state = S.SCRIPT\n      return\n    }\n    emitNode(parser, \"onscript\", parser.script)\n    parser.script = \"\"\n  }\n\n  // first make sure that the closing tag actually exists.\n  // <a><b></c></b></a> will close everything, otherwise.\n  var t = parser.tags.length\n  var tagName = parser.tagName\n  if (!parser.strict) tagName = tagName[parser.looseCase]()\n  var closeTo = tagName\n  while (t --) {\n    var close = parser.tags[t]\n    if (close.name !== closeTo) {\n      // fail the first time in strict mode\n      strictFail(parser, \"Unexpected close tag\")\n    } else break\n  }\n\n  // didn't find it.  we already failed for strict, so just abort.\n  if (t < 0) {\n    strictFail(parser, \"Unmatched closing tag: \"+parser.tagName)\n    parser.textNode += \"</\" + parser.tagName + \">\"\n    parser.state = S.TEXT\n    return\n  }\n  parser.tagName = tagName\n  var s = parser.tags.length\n  while (s --> t) {\n    var tag = parser.tag = parser.tags.pop()\n    parser.tagName = parser.tag.name\n    emitNode(parser, \"onclosetag\", parser.tagName)\n\n    var x = {}\n    for (var i in tag.ns) x[i] = tag.ns[i]\n\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    if (parser.opt.xmlns && tag.ns !== parent.ns) {\n      // remove namespace bindings introduced by tag\n      Object.keys(tag.ns).forEach(function (p) {\n        var n = tag.ns[p]\n        emitNode(parser, \"onclosenamespace\", { prefix: p, uri: n })\n      })\n    }\n  }\n  if (t === 0) parser.closedRoot = true\n  parser.tagName = parser.attribValue = parser.attribName = \"\"\n  parser.attribList.length = 0\n  parser.state = S.TEXT\n}\n\nfunction parseEntity (parser) {\n  var entity = parser.entity\n    , entityLC = entity.toLowerCase()\n    , num\n    , numStr = \"\"\n  if (parser.ENTITIES[entity])\n    return parser.ENTITIES[entity]\n  if (parser.ENTITIES[entityLC])\n    return parser.ENTITIES[entityLC]\n  entity = entityLC\n  if (entity.charAt(0) === \"#\") {\n    if (entity.charAt(1) === \"x\") {\n      entity = entity.slice(2)\n      num = parseInt(entity, 16)\n      numStr = num.toString(16)\n    } else {\n      entity = entity.slice(1)\n      num = parseInt(entity, 10)\n      numStr = num.toString(10)\n    }\n  }\n  entity = entity.replace(/^0+/, \"\")\n  if (numStr.toLowerCase() !== entity) {\n    strictFail(parser, \"Invalid character entity\")\n    return \"&\"+parser.entity + \";\"\n  }\n\n  return String.fromCodePoint(num)\n}\n\nfunction write (chunk) {\n  var parser = this\n  if (this.error) throw this.error\n  if (parser.closed) return error(parser,\n    \"Cannot write after close. Assign an onready handler.\")\n  if (chunk === null) return end(parser)\n  var i = 0, c = \"\"\n  while (parser.c = c = chunk.charAt(i++)) {\n    if (parser.trackPosition) {\n      parser.position ++\n      if (c === \"\\n\") {\n        parser.line ++\n        parser.column = 0\n      } else parser.column ++\n    }\n    switch (parser.state) {\n\n      case S.BEGIN:\n        if (c === \"<\") {\n          parser.state = S.OPEN_WAKA\n          parser.startTagPosition = parser.position\n        } else if (not(whitespace,c)) {\n          // have to process this as a text node.\n          // weird, but happens.\n          strictFail(parser, \"Non-whitespace before first tag.\")\n          parser.textNode = c\n          parser.state = S.TEXT\n        }\n      continue\n\n      case S.TEXT:\n        if (parser.sawRoot && !parser.closedRoot) {\n          var starti = i-1\n          while (c && c!==\"<\" && c!==\"&\") {\n            c = chunk.charAt(i++)\n            if (c && parser.trackPosition) {\n              parser.position ++\n              if (c === \"\\n\") {\n                parser.line ++\n                parser.column = 0\n              } else parser.column ++\n            }\n          }\n          parser.textNode += chunk.substring(starti, i-1)\n        }\n        if (c === \"<\") {\n          parser.state = S.OPEN_WAKA\n          parser.startTagPosition = parser.position\n        } else {\n          if (not(whitespace, c) && (!parser.sawRoot || parser.closedRoot))\n            strictFail(parser, \"Text data outside of root node.\")\n          if (c === \"&\") parser.state = S.TEXT_ENTITY\n          else parser.textNode += c\n        }\n      continue\n\n      case S.SCRIPT:\n        // only non-strict\n        if (c === \"<\") {\n          parser.state = S.SCRIPT_ENDING\n        } else parser.script += c\n      continue\n\n      case S.SCRIPT_ENDING:\n        if (c === \"/\") {\n          parser.state = S.CLOSE_TAG\n        } else {\n          parser.script += \"<\" + c\n          parser.state = S.SCRIPT\n        }\n      continue\n\n      case S.OPEN_WAKA:\n        // either a /, ?, !, or text is coming next.\n        if (c === \"!\") {\n          parser.state = S.SGML_DECL\n          parser.sgmlDecl = \"\"\n        } else if (is(whitespace, c)) {\n          // wait for it...\n        } else if (is(nameStart,c)) {\n          parser.state = S.OPEN_TAG\n          parser.tagName = c\n        } else if (c === \"/\") {\n          parser.state = S.CLOSE_TAG\n          parser.tagName = \"\"\n        } else if (c === \"?\") {\n          parser.state = S.PROC_INST\n          parser.procInstName = parser.procInstBody = \"\"\n        } else {\n          strictFail(parser, \"Unencoded <\")\n          // if there was some whitespace, then add that in.\n          if (parser.startTagPosition + 1 < parser.position) {\n            var pad = parser.position - parser.startTagPosition\n            c = new Array(pad).join(\" \") + c\n          }\n          parser.textNode += \"<\" + c\n          parser.state = S.TEXT\n        }\n      continue\n\n      case S.SGML_DECL:\n        if ((parser.sgmlDecl+c).toUpperCase() === CDATA) {\n          emitNode(parser, \"onopencdata\")\n          parser.state = S.CDATA\n          parser.sgmlDecl = \"\"\n          parser.cdata = \"\"\n        } else if (parser.sgmlDecl+c === \"--\") {\n          parser.state = S.COMMENT\n          parser.comment = \"\"\n          parser.sgmlDecl = \"\"\n        } else if ((parser.sgmlDecl+c).toUpperCase() === DOCTYPE) {\n          parser.state = S.DOCTYPE\n          if (parser.doctype || parser.sawRoot) strictFail(parser,\n            \"Inappropriately located doctype declaration\")\n          parser.doctype = \"\"\n          parser.sgmlDecl = \"\"\n        } else if (c === \">\") {\n          emitNode(parser, \"onsgmldeclaration\", parser.sgmlDecl)\n          parser.sgmlDecl = \"\"\n          parser.state = S.TEXT\n        } else if (is(quote, c)) {\n          parser.state = S.SGML_DECL_QUOTED\n          parser.sgmlDecl += c\n        } else parser.sgmlDecl += c\n      continue\n\n      case S.SGML_DECL_QUOTED:\n        if (c === parser.q) {\n          parser.state = S.SGML_DECL\n          parser.q = \"\"\n        }\n        parser.sgmlDecl += c\n      continue\n\n      case S.DOCTYPE:\n        if (c === \">\") {\n          parser.state = S.TEXT\n          emitNode(parser, \"ondoctype\", parser.doctype)\n          parser.doctype = true // just remember that we saw it.\n        } else {\n          parser.doctype += c\n          if (c === \"[\") parser.state = S.DOCTYPE_DTD\n          else if (is(quote, c)) {\n            parser.state = S.DOCTYPE_QUOTED\n            parser.q = c\n          }\n        }\n      continue\n\n      case S.DOCTYPE_QUOTED:\n        parser.doctype += c\n        if (c === parser.q) {\n          parser.q = \"\"\n          parser.state = S.DOCTYPE\n        }\n      continue\n\n      case S.DOCTYPE_DTD:\n        parser.doctype += c\n        if (c === \"]\") parser.state = S.DOCTYPE\n        else if (is(quote,c)) {\n          parser.state = S.DOCTYPE_DTD_QUOTED\n          parser.q = c\n        }\n      continue\n\n      case S.DOCTYPE_DTD_QUOTED:\n        parser.doctype += c\n        if (c === parser.q) {\n          parser.state = S.DOCTYPE_DTD\n          parser.q = \"\"\n        }\n      continue\n\n      case S.COMMENT:\n        if (c === \"-\") parser.state = S.COMMENT_ENDING\n        else parser.comment += c\n      continue\n\n      case S.COMMENT_ENDING:\n        if (c === \"-\") {\n          parser.state = S.COMMENT_ENDED\n          parser.comment = textopts(parser.opt, parser.comment)\n          if (parser.comment) emitNode(parser, \"oncomment\", parser.comment)\n          parser.comment = \"\"\n        } else {\n          parser.comment += \"-\" + c\n          parser.state = S.COMMENT\n        }\n      continue\n\n      case S.COMMENT_ENDED:\n        if (c !== \">\") {\n          strictFail(parser, \"Malformed comment\")\n          // allow <!-- blah -- bloo --> in non-strict mode,\n          // which is a comment of \" blah -- bloo \"\n          parser.comment += \"--\" + c\n          parser.state = S.COMMENT\n        } else parser.state = S.TEXT\n      continue\n\n      case S.CDATA:\n        if (c === \"]\") parser.state = S.CDATA_ENDING\n        else parser.cdata += c\n      continue\n\n      case S.CDATA_ENDING:\n        if (c === \"]\") parser.state = S.CDATA_ENDING_2\n        else {\n          parser.cdata += \"]\" + c\n          parser.state = S.CDATA\n        }\n      continue\n\n      case S.CDATA_ENDING_2:\n        if (c === \">\") {\n          if (parser.cdata) emitNode(parser, \"oncdata\", parser.cdata)\n          emitNode(parser, \"onclosecdata\")\n          parser.cdata = \"\"\n          parser.state = S.TEXT\n        } else if (c === \"]\") {\n          parser.cdata += \"]\"\n        } else {\n          parser.cdata += \"]]\" + c\n          parser.state = S.CDATA\n        }\n      continue\n\n      case S.PROC_INST:\n        if (c === \"?\") parser.state = S.PROC_INST_ENDING\n        else if (is(whitespace, c)) parser.state = S.PROC_INST_BODY\n        else parser.procInstName += c\n      continue\n\n      case S.PROC_INST_BODY:\n        if (!parser.procInstBody && is(whitespace, c)) continue\n        else if (c === \"?\") parser.state = S.PROC_INST_ENDING\n        else parser.procInstBody += c\n      continue\n\n      case S.PROC_INST_ENDING:\n        if (c === \">\") {\n          emitNode(parser, \"onprocessinginstruction\", {\n            name : parser.procInstName,\n            body : parser.procInstBody\n          })\n          parser.procInstName = parser.procInstBody = \"\"\n          parser.state = S.TEXT\n        } else {\n          parser.procInstBody += \"?\" + c\n          parser.state = S.PROC_INST_BODY\n        }\n      continue\n\n      case S.OPEN_TAG:\n        if (is(nameBody, c)) parser.tagName += c\n        else {\n          newTag(parser)\n          if (c === \">\") openTag(parser)\n          else if (c === \"/\") parser.state = S.OPEN_TAG_SLASH\n          else {\n            if (not(whitespace, c)) strictFail(\n              parser, \"Invalid character in tag name\")\n            parser.state = S.ATTRIB\n          }\n        }\n      continue\n\n      case S.OPEN_TAG_SLASH:\n        if (c === \">\") {\n          openTag(parser, true)\n          closeTag(parser)\n        } else {\n          strictFail(parser, \"Forward-slash in opening tag not followed by >\")\n          parser.state = S.ATTRIB\n        }\n      continue\n\n      case S.ATTRIB:\n        // haven't read the attribute name yet.\n        if (is(whitespace, c)) continue\n        else if (c === \">\") openTag(parser)\n        else if (c === \"/\") parser.state = S.OPEN_TAG_SLASH\n        else if (is(nameStart, c)) {\n          parser.attribName = c\n          parser.attribValue = \"\"\n          parser.state = S.ATTRIB_NAME\n        } else strictFail(parser, \"Invalid attribute name\")\n      continue\n\n      case S.ATTRIB_NAME:\n        if (c === \"=\") parser.state = S.ATTRIB_VALUE\n        else if (c === \">\") {\n          strictFail(parser, \"Attribute without value\")\n          parser.attribValue = parser.attribName\n          attrib(parser)\n          openTag(parser)\n        }\n        else if (is(whitespace, c)) parser.state = S.ATTRIB_NAME_SAW_WHITE\n        else if (is(nameBody, c)) parser.attribName += c\n        else strictFail(parser, \"Invalid attribute name\")\n      continue\n\n      case S.ATTRIB_NAME_SAW_WHITE:\n        if (c === \"=\") parser.state = S.ATTRIB_VALUE\n        else if (is(whitespace, c)) continue\n        else {\n          strictFail(parser, \"Attribute without value\")\n          parser.tag.attributes[parser.attribName] = \"\"\n          parser.attribValue = \"\"\n          emitNode(parser, \"onattribute\",\n                   { name : parser.attribName, value : \"\" })\n          parser.attribName = \"\"\n          if (c === \">\") openTag(parser)\n          else if (is(nameStart, c)) {\n            parser.attribName = c\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, \"Invalid attribute name\")\n            parser.state = S.ATTRIB\n          }\n        }\n      continue\n\n      case S.ATTRIB_VALUE:\n        if (is(whitespace, c)) continue\n        else if (is(quote, c)) {\n          parser.q = c\n          parser.state = S.ATTRIB_VALUE_QUOTED\n        } else {\n          strictFail(parser, \"Unquoted attribute value\")\n          parser.state = S.ATTRIB_VALUE_UNQUOTED\n          parser.attribValue = c\n        }\n      continue\n\n      case S.ATTRIB_VALUE_QUOTED:\n        if (c !== parser.q) {\n          if (c === \"&\") parser.state = S.ATTRIB_VALUE_ENTITY_Q\n          else parser.attribValue += c\n          continue\n        }\n        attrib(parser)\n        parser.q = \"\"\n        parser.state = S.ATTRIB_VALUE_CLOSED\n      continue\n\n      case S.ATTRIB_VALUE_CLOSED:\n        if (is(whitespace, c)) {\n          parser.state = S.ATTRIB\n        } else if (c === \">\") openTag(parser)\n        else if (c === \"/\") parser.state = S.OPEN_TAG_SLASH\n        else if (is(nameStart, c)) {\n          strictFail(parser, \"No whitespace between attributes\")\n          parser.attribName = c\n          parser.attribValue = \"\"\n          parser.state = S.ATTRIB_NAME\n        } else strictFail(parser, \"Invalid attribute name\")\n      continue\n\n      case S.ATTRIB_VALUE_UNQUOTED:\n        if (not(attribEnd,c)) {\n          if (c === \"&\") parser.state = S.ATTRIB_VALUE_ENTITY_U\n          else parser.attribValue += c\n          continue\n        }\n        attrib(parser)\n        if (c === \">\") openTag(parser)\n        else parser.state = S.ATTRIB\n      continue\n\n      case S.CLOSE_TAG:\n        if (!parser.tagName) {\n          if (is(whitespace, c)) continue\n          else if (not(nameStart, c)) {\n            if (parser.script) {\n              parser.script += \"</\" + c\n              parser.state = S.SCRIPT\n            } else {\n              strictFail(parser, \"Invalid tagname in closing tag.\")\n            }\n          } else parser.tagName = c\n        }\n        else if (c === \">\") closeTag(parser)\n        else if (is(nameBody, c)) parser.tagName += c\n        else if (parser.script) {\n          parser.script += \"</\" + parser.tagName\n          parser.tagName = \"\"\n          parser.state = S.SCRIPT\n        } else {\n          if (not(whitespace, c)) strictFail(parser,\n            \"Invalid tagname in closing tag\")\n          parser.state = S.CLOSE_TAG_SAW_WHITE\n        }\n      continue\n\n      case S.CLOSE_TAG_SAW_WHITE:\n        if (is(whitespace, c)) continue\n        if (c === \">\") closeTag(parser)\n        else strictFail(parser, \"Invalid characters in closing tag\")\n      continue\n\n      case S.TEXT_ENTITY:\n      case S.ATTRIB_VALUE_ENTITY_Q:\n      case S.ATTRIB_VALUE_ENTITY_U:\n        switch(parser.state) {\n          case S.TEXT_ENTITY:\n            var returnState = S.TEXT, buffer = \"textNode\"\n          break\n\n          case S.ATTRIB_VALUE_ENTITY_Q:\n            var returnState = S.ATTRIB_VALUE_QUOTED, buffer = \"attribValue\"\n          break\n\n          case S.ATTRIB_VALUE_ENTITY_U:\n            var returnState = S.ATTRIB_VALUE_UNQUOTED, buffer = \"attribValue\"\n          break\n        }\n        if (c === \";\") {\n          parser[buffer] += parseEntity(parser)\n          parser.entity = \"\"\n          parser.state = returnState\n        }\n        else if (is(entity, c)) parser.entity += c\n        else {\n          strictFail(parser, \"Invalid character entity\")\n          parser[buffer] += \"&\" + parser.entity + c\n          parser.entity = \"\"\n          parser.state = returnState\n        }\n      continue\n\n      default:\n        throw new Error(parser, \"Unknown state: \" + parser.state)\n    }\n  } // while\n  // cdata blocks can get very big under normal conditions. emit and move on.\n  // if (parser.state === S.CDATA && parser.cdata) {\n  //   emitNode(parser, \"oncdata\", parser.cdata)\n  //   parser.cdata = \"\"\n  // }\n  if (parser.position >= parser.bufferCheckPosition) checkBufferLength(parser)\n  return parser\n}\n\n/*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\nif (!String.fromCodePoint) {\n        (function() {\n                var stringFromCharCode = String.fromCharCode;\n                var floor = Math.floor;\n                var fromCodePoint = function() {\n                        var MAX_SIZE = 0x4000;\n                        var codeUnits = [];\n                        var highSurrogate;\n                        var lowSurrogate;\n                        var index = -1;\n                        var length = arguments.length;\n                        if (!length) {\n                                return '';\n                        }\n                        var result = '';\n                        while (++index < length) {\n                                var codePoint = Number(arguments[index]);\n                                if (\n                                        !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n                                        codePoint < 0 || // not a valid Unicode code point\n                                        codePoint > 0x10FFFF || // not a valid Unicode code point\n                                        floor(codePoint) != codePoint // not an integer\n                                ) {\n                                        throw RangeError('Invalid code point: ' + codePoint);\n                                }\n                                if (codePoint <= 0xFFFF) { // BMP code point\n                                        codeUnits.push(codePoint);\n                                } else { // Astral code point; split in surrogate halves\n                                        // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n                                        codePoint -= 0x10000;\n                                        highSurrogate = (codePoint >> 10) + 0xD800;\n                                        lowSurrogate = (codePoint % 0x400) + 0xDC00;\n                                        codeUnits.push(highSurrogate, lowSurrogate);\n                                }\n                                if (index + 1 == length || codeUnits.length > MAX_SIZE) {\n                                        result += stringFromCharCode.apply(null, codeUnits);\n                                        codeUnits.length = 0;\n                                }\n                        }\n                        return result;\n                };\n                if (Object.defineProperty) {\n                        Object.defineProperty(String, 'fromCodePoint', {\n                                'value': fromCodePoint,\n                                'configurable': true,\n                                'writable': true\n                        });\n                } else {\n                        String.fromCodePoint = fromCodePoint;\n                }\n        }());\n}\n\n})(typeof exports === \"undefined\" ? sax = {} : exports);\n","\nvar rng;\n\nif (global.crypto && crypto.getRandomValues) {\n  // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto\n  // Moderately fast, high quality\n  var _rnds8 = new Uint8Array(16);\n  rng = function whatwgRNG() {\n    crypto.getRandomValues(_rnds8);\n    return _rnds8;\n  };\n}\n\nif (!rng) {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var  _rnds = new Array(16);\n  rng = function() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return _rnds;\n  };\n}\n\nmodule.exports = rng;\n\n","//     uuid.js\n//\n//     Copyright (c) 2010-2012 Robert Kieffer\n//     MIT License - http://opensource.org/licenses/mit-license.php\n\n// Unique ID creation requires a high quality random # generator.  We feature\n// detect to determine the best RNG source, normalizing to a function that\n// returns 128-bits of randomness, since that's what's usually required\nvar _rng = require('./rng');\n\n// Maps for number <-> hex string conversion\nvar _byteToHex = [];\nvar _hexToByte = {};\nfor (var i = 0; i < 256; i++) {\n  _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n  _hexToByte[_byteToHex[i]] = i;\n}\n\n// **`parse()` - Parse a UUID into it's component bytes**\nfunction parse(s, buf, offset) {\n  var i = (buf && offset) || 0, ii = 0;\n\n  buf = buf || [];\n  s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {\n    if (ii < 16) { // Don't overflow!\n      buf[i + ii++] = _hexToByte[oct];\n    }\n  });\n\n  // Zero out remaining bytes if string was short\n  while (ii < 16) {\n    buf[i + ii++] = 0;\n  }\n\n  return buf;\n}\n\n// **`unparse()` - Convert UUID byte array (ala parse()) into a string**\nfunction unparse(buf, offset) {\n  var i = offset || 0, bth = _byteToHex;\n  return  bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\n// random #'s we need to init node and clockseq\nvar _seedBytes = _rng();\n\n// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\nvar _nodeId = [\n  _seedBytes[0] | 0x01,\n  _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n];\n\n// Per 4.2.2, randomize (14 bit) clockseq\nvar _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\n// Previous uuid creation time\nvar _lastMSecs = 0, _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  var node = options.node || _nodeId;\n  for (var n = 0; n < 6; n++) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : unparse(b);\n}\n\n// **`v4()` - Generate random UUID**\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v4(options, buf, offset) {\n  // Deprecated - 'format' argument, as supported in v1.2\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options == 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || _rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ii++) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || unparse(rnds);\n}\n\n// Export public API\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\nuuid.parse = parse;\nuuid.unparse = unparse;\n\nmodule.exports = uuid;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * @class\n */\nfunction AccountStatement() {\n}\n\n/**\n * The currency code.\n *\n * @return {String} The currency code.\n * @see java.util.Currency#getCurrencyCode()\n */\nAccountStatement.prototype.getCurrencyCode = function() { throw new Error(\"not implemented\"); };\n\n/**\n * The transaction list.\n *\n * @return {TransactionList} The transaction list.\n */\nAccountStatement.prototype.getTransactionList = function() { throw new Error(\"not implemented\"); };\n\n/**\n * The ledger balance.\n *\n * @return {BalanceInfo} The ledger balance.\n */\nAccountStatement.prototype.getLedgerBalance = function() { throw new Error(\"not implemented\"); };\n\n/**\n * The available balance.\n *\n * @return {BalanceInfo} The available balance.\n */\nAccountStatement.prototype.getAvailableBalance = function() { throw new Error(\"not implemented\"); };\n\n\nmodule.exports = AccountStatement;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * @class\n */\nfunction BankAccount() {\n}\n\n/**\n * The details of the account.\n *\n * @return {BankAccountDetails} The details of the account.\n */\nBankAccount.prototype.getDetails = function() { throw new Error(\"not implemented\"); };\n\n\nmodule.exports = BankAccount;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * @class\n */\nfunction CreditCardAccount() {\n}\n\n/**\n * The details of the credit card account.\n *\n * @return {CreditCardAccountDetails} The details of the credit card account.\n */\nCreditCardAccount.prototype.getDetails = function() { throw new Error(\"not implemented\"); };\n\n\nmodule.exports = CreditCardAccount;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * @class\n */\nfunction FinancialInstitution() {\n  throw new Error(\"interface\");\n}\n\n/**\n * The financial institution data defining this FI.\n *\n * @return {Promise<FinancialInstitutionData>} The financial institution data.\n */\nFinancialInstitution.prototype.getData = function() { throw new Error(\"not implemented\"); };\n\n/**\n * Read the specified financial institution profile. Implies a network call.\n *\n * @return {Promise<FinancialInstitutionProfile>} The profile.\n * @throws OFXException if something goes awry.\n */\nFinancialInstitution.prototype.readProfile = function() { throw new Error(\"not implemented\"); };\n\n/**\n * Read the account profiles of the specified user.\n *\n * @param {String} username The username.\n * @param {String} password The password.\n * @return {Promise<AccountProfile[]>} The profiles.\n */\nFinancialInstitution.prototype.readAccountProfiles = function(/*username, password*/) { throw new Error(\"not implemented\"); };\n\n/**\n * Load a bank account.\n *\n * @param {BankAccountDetails} details The bank account details.\n * @param {String} username The username.\n * @param {String} password The password.\n * @return {BankAccount} The bank account.\n */\nFinancialInstitution.prototype.loadBankAccount = function(/*details, username, password*/) { throw new Error(\"not implemented\"); };\n\n/**\n * Load a credit card account.\n *\n * @param {CreditCardAccountDetails} details The credit card account details.\n * @param {String} username The username.\n * @param {String} password The password.\n * @return {CreditCardAccount} The credit card account.\n */\nFinancialInstitution.prototype.loadCreditCardAccount = function(/*details, username, password*/) { throw new Error(\"not implemented\"); };\n\n/**\n * Load an investment account.\n *\n * @param {InvestmentAccountDetails} details The investment account details.\n * @param {String} username The username.\n * @param {String} password The password.\n * @return {InvestmentAccount} The investment account.\n */\nFinancialInstitution.prototype.loadInvestmentAccount = function(/*details, username, password*/) { throw new Error(\"not implemented\"); };\n\n\nmodule.exports = FinancialInstitution;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * A specific account at a financial institution.\n *\n * @class\n */\nfunction FinancialInstitutionAccount() {\n}\n\n/**\n * Read an account statement.\n *\n * @param {Date} start The start date of the statement.\n * @param {Date} end The end date of the statement.\n * @return {AccountStatement} The account statement.\n */\nFinancialInstitutionAccount.prototype.readStatement = function(/*start, end*/) { throw new Error(\"not implemented\"); };\n\n\nmodule.exports = FinancialInstitutionAccount;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * Interface for core FI data.  This is the base set of information\n * required in order to initiate a connection to an FI server.\n *\n * @class\n */\nfunction FinancialInstitutionData() {\n}\n\n/**\n * A unique id for this FI.\n *\n * @return {String} A unique id for this FI.\n */\nFinancialInstitutionData.prototype.getId = function() { throw new Error(\"not implemented\"); };\n\n/**\n * The id of the FI.\n *\n * @return {String} The id of the FI.\n */\nFinancialInstitutionData.prototype.getFinancialInstitutionId = function() { throw new Error(\"not implemented\"); };\n\n/**\n * The name of the FI.\n *\n * @return {String} The name of the FI.\n */\nFinancialInstitutionData.prototype.getName = function() { throw new Error(\"not implemented\"); };\n\n/**\n * The OFX organization name.\n *\n * @return {String} The OFX organization name.\n */\nFinancialInstitutionData.prototype.getOrganization = function() { throw new Error(\"not implemented\"); };\n\n/**\n * The URL to the OFX server for this institution.\n *\n * @return {URL} The URL to the OFX server for this institution.\n */\nFinancialInstitutionData.prototype.getOFXURL = function() { throw new Error(\"not implemented\"); };\n\n/**\n * The broker id.\n *\n * @return {String} The broker id.\n */\nFinancialInstitutionData.prototype.getBrokerId = function() { throw new Error(\"not implemented\"); };\n\n\nmodule.exports = FinancialInstitutionData;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * @class\n */\nfunction FinancialInstitutionProfile() {\n}\n\n/**\n * When this profile was last updated.\n *\n * @return {Date} When this profile was last updated.\n */\nFinancialInstitutionProfile.prototype.getLastUpdated = function() { throw new Error(\"not implemented\"); };\n\n/**\n * The name of the financial institution.\n *\n * @return {String} The name of the financial institution.\n */\nFinancialInstitutionProfile.prototype.getFinancialInstitutionName = function() { throw new Error(\"not implemented\"); };\n\n/**\n * The address of the financial institution.\n *\n * @return {String} The address of the financial institution.\n */\nFinancialInstitutionProfile.prototype.getAddress1 = function() { throw new Error(\"not implemented\"); };\n\n/**\n * The address of the financial institution.\n *\n * @return {String} The address of the financial institution.\n */\nFinancialInstitutionProfile.prototype.getAddress2 = function() { throw new Error(\"not implemented\"); };\n\n/**\n * The address of the financial institution.\n *\n * @return {String} The address of the financial institution.\n */\nFinancialInstitutionProfile.prototype.getAddress3 = function() { throw new Error(\"not implemented\"); };\n\n/**\n * The city of the financial institution.\n *\n * @return {String} The city of the financial institution.\n */\nFinancialInstitutionProfile.prototype.getCity = function() { throw new Error(\"not implemented\"); };\n\n/**\n * The state of this financial institution.\n *\n * @return {String} The state of this financial institution.\n */\nFinancialInstitutionProfile.prototype.getState = function() { throw new Error(\"not implemented\"); };\n\n/**\n * The postal code of this financial institution.\n *\n * @return {String} The postal code of this financial institution.\n */\nFinancialInstitutionProfile.prototype.getZip = function() { throw new Error(\"not implemented\"); };\n\n/**\n * The country code for this financial institution.\n *\n * @return {String} The country code for this financial institution.\n * @see java.util.Locale#getISO3Country()\n */\nFinancialInstitutionProfile.prototype.getCountry = function() { throw new Error(\"not implemented\"); };\n\n/**\n * The phone number to customer service.\n *\n * @return {String} The phone number to customer service.\n */\nFinancialInstitutionProfile.prototype.getCustomerServicePhone = function() { throw new Error(\"not implemented\"); };\n\n/**\n * The phone number to tech support.\n *\n * @return {String} The phone number to tech support.\n */\nFinancialInstitutionProfile.prototype.getTechnicalSupportPhone = function() { throw new Error(\"not implemented\"); };\n\n/**\n * The fax number.\n *\n * @return {String} The fax number.\n */\nFinancialInstitutionProfile.prototype.getFax = function() { throw new Error(\"not implemented\"); };\n\n/**\n * URL for the financial institution.\n *\n * @return {String} URL for the financial institution.\n */\nFinancialInstitutionProfile.prototype.getSiteURL = function() { throw new Error(\"not implemented\"); };\n\n/**\n * The email for this FI\n *\n * @return {String} The email for this FI\n */\nFinancialInstitutionProfile.prototype.getEmail = function() { throw new Error(\"not implemented\"); };\n\n/**\n * Get the message set profile for the specified message set and, optionally, the specified version.\n *\n * @param {MessageSetType} type The message set type for which to retrieve the profile.\n * @param {String} [version] The version for which to retrieve the profile.\n * @return {MessageSetProfile} The message set profile information, or null if the FI doesn't support the specified message set of the specified version.\n */\nFinancialInstitutionProfile.prototype.getMessageSetProfile = function(/*type, version*/) { throw new Error(\"not implemented\"); };\n\n/**\n * Get the signon profile for the specified message set.\n *\n * @param {MessageSetProfile} messageSet The message set.\n * @return {SignonProfile} The signon profile, or null if none was found.\n */\nFinancialInstitutionProfile.prototype.getSignonProfile = function(/*messageSet*/) { throw new Error(\"not implemented\"); };\n\n\nmodule.exports = FinancialInstitutionProfile;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * @class\n */\nfunction InvestmentAccount() {\n}\n\n/**\n * Read an account statement.\n *\n * @param {Date} start The start date of the statement.\n * @param {Date} end The end date of the statement.\n * @throws OFXException if there's an error talking to the brokerage\n * @return {InvestmentStatementResponse} The account statement.\n */\nInvestmentAccount.prototype.readStatement = function(/*start, end*/) { throw new Error(\"not implemented\"); };\n\n/**\n * Reads a list of securities from the brokerage\n *\n * @param {SecurityRequest[]} securities the securities to read\n * @return {SecurityList} The security response containing the security infos\n * @throws OFXException if there's an error talking to the brokerage\n */\nInvestmentAccount.prototype.readSecurityList = function(/*securities*/) { throw new Error(\"not implemented\"); };\n\n/**\n * The details of the account.\n *\n * @return {InvestmentAccountDetails} The details of the account.\n */\nInvestmentAccount.prototype.getDetails = function() { throw new Error(\"not implemented\"); };\n\n\nmodule.exports = InvestmentAccount;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../util/inherit\");\nvar OFXApplicationContext = require(\"./OFXApplicationContext\");\n\n/**\n * Default application context.\n * \n * @class\n */\nfunction DefaultApplicationContext (/*String*/ appId, /*String*/ appVersion) {\n\n  /**\n   * @name DefaultApplicationContext#appId\n   * @type String\n   * @access private\n   */\n  this.appId = appId;\n\n  /**\n   * @name DefaultApplicationContext#appVersion\n   * @type String\n   * @access private\n   */\n  this.appVersion = appVersion;\n}\n\ninherit(DefaultApplicationContext, \"implements\", OFXApplicationContext);\n\n\n\nDefaultApplicationContext.prototype.getAppId = function() {\n  return this.appId;\n};\n\n\nDefaultApplicationContext.prototype.getAppVersion = function() {\n  return this.appVersion;\n};\n\n\n\n\nmodule.exports = DefaultApplicationContext;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * The application context.\n *\n * @class\n */\nfunction OFXApplicationContext() {\n}\n\n/**\n * The current application id.\n *\n * @return {String} The current application id.\n */\nOFXApplicationContext.prototype.getAppId = function() { throw new Error(\"not implemented\"); };\n\n/**\n * The application version.\n *\n * @return {String} The application version.\n */\nOFXApplicationContext.prototype.getAppVersion = function() { throw new Error(\"not implemented\"); };\n\n\nmodule.exports = OFXApplicationContext;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar DefaultApplicationContext = require(\"./DefaultApplicationContext\");\n\n/**\n * @class\n */\nvar OFXApplicationContextHolder = {};\n\n\n/**\n * @name OFXApplicationContextHolder.CURRENT_CONTEXT\n * @type OFXApplicationContext\n */\nOFXApplicationContextHolder.CURRENT_CONTEXT = new DefaultApplicationContext(\"Money\", \"1600\"); //some apps fail unless you're Quicken or Money...\n//OFXApplicationContextHolder.CURRENT_CONTEXT = new DefaultApplicationContext(\"QWIN\", \"0900\"); //some apps fail unless you're Quicken or Money...\n\n\n\n\n/**\n * Get the current (thread-safe) context.\n *\n * @return {OFXApplicationContext} The thread-safe context.\n */\nOFXApplicationContextHolder.getCurrentContext = function() {\n  //todo: implement a strategy (perhaps for thread-local access or something)?\n  return OFXApplicationContextHolder.CURRENT_CONTEXT;\n};\n\n\n/**\n * Set the current context.\n *\n * @param {OFXApplicationContext} context The context.\n */\nOFXApplicationContextHolder.setCurrentContext = function(context) {\n  OFXApplicationContextHolder.CURRENT_CONTEXT = context;\n};\n\n\n\n\nmodule.exports = OFXApplicationContextHolder;\n","\"use strict\";\n\nmodule.exports = {\n  DefaultApplicationContext: require(\"./DefaultApplicationContext\"),\n  OFXApplicationContext: require(\"./OFXApplicationContext\"),\n  OFXApplicationContextHolder: require(\"./OFXApplicationContextHolder\"),\n};\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../util/inherit\");\n\nvar BankAccount = require(\"../BankAccount\");\nvar BaseAccountImpl = require(\"./BaseAccountImpl\");\nvar MessageSetType = require(\"../../domain/data/MessageSetType\");\nvar BankingRequestMessageSet = require(\"../../domain/data/banking/BankingRequestMessageSet\");\nvar BankStatementRequestTransaction = require(\"../../domain/data/banking/BankStatementRequestTransaction\");\nvar BankStatementRequest = require(\"../../domain/data/banking/BankStatementRequest\");\n\n/**\n * @class\n * @augments BaseAccountImpl\n */\nfunction BankingAccountImpl(/*BankAccountDetails*/ details, /*String*/ username, /*String*/ password, /*FinancialInstitutionImpl*/ institution) {\n  BaseAccountImpl.call(this, details, username, password, institution);\n}\n\ninherit(BankingAccountImpl, \"extends\", BaseAccountImpl);\ninherit(BankingAccountImpl, \"implements\", BankAccount);\n\n\n\nBankingAccountImpl.prototype.unwrapStatementResponse = function(/*ResponseEnvelope*/ response) {\n  var bankingSet = response.getMessageSet(MessageSetType.banking);\n  if (!bankingSet) {\n    throw new Error(\"No banking response message set.\");\n  }\n\n  var statementTransactionResponse = bankingSet.getStatementResponse();\n  if (!statementTransactionResponse) {\n    throw new Error(\"No banking statement response transaction.\");\n  }\n\n  var statement = statementTransactionResponse.getMessage();\n  if (!statement) {\n    throw new Error(\"No banking statement in the transaction.\");\n  }\n  \n  return statement;\n};\n\n\nBankingAccountImpl.prototype.createRequestMessageSet = function(/*TransactionWrappedRequestMessage*/ transaction) {\n  var bankingRequest = new BankingRequestMessageSet();\n  bankingRequest.setStatementRequest(transaction);\n  return bankingRequest;\n};\n\n\nBankingAccountImpl.prototype.createTransaction = function() {\n  return new BankStatementRequestTransaction();\n};\n\n\nBankingAccountImpl.prototype.createStatementRequest = function(/*BankAccountDetails*/ details, /*StatementRange*/ range) {\n  var bankRequest = new BankStatementRequest();\n  bankRequest.setAccount(details);\n  bankRequest.setStatementRange(range);\n  return bankRequest;\n};\n\n\n\n\nmodule.exports = BankingAccountImpl;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../util/inherit\");\n\nvar FinancialInstitutionAccount = require(\"../FinancialInstitutionAccount\");\nvar BankAccountDetails = require(\"../../domain/data/banking/BankAccountDetails\");\nvar StatementRange = require(\"../../domain/data/common/StatementRange\");\nvar CreditCardAccountDetails = require(\"../../domain/data/creditcard/CreditCardAccountDetails\");\nvar InvestmentAccountDetails = require(\"../../domain/data/investment/accounts/InvestmentAccountDetails\");\nvar MessageSetType = require(\"../../domain/data/MessageSetType\");\n\n\n/**\n * Base account implementation. Supports banking and credit card accounts.\n *\n * @class\n */\nfunction BaseAccountImpl(/*D*/ details, /*String*/ username, /*String*/ password, /*FinancialInstitutionImpl*/ institution) {\n\n  /**\n   * @name BaseAccountImpl#details\n   * @access private\n   */\n  this.details = details;\n\n  /**\n   * @name BaseAccountImpl#messageType\n   * @type MessageSetType\n   * @access private\n   */\n  this.messageType = this.getMessageSetType(details);\n\n  /**\n   * @name BaseAccountImpl#username\n   * @type String\n   * @access private\n   */\n  this.username = username;\n\n  /**\n   * @name BaseAccountImpl#password\n   * @type String\n   * @access private\n   */\n  this.password = password;\n\n  /**\n   * @name BaseAccountImpl#institution\n   * @type FinancialInstitutionImpl\n   * @access private\n   */\n  this.institution = institution;\n}\n\ninherit(BaseAccountImpl, \"implements\", FinancialInstitutionAccount);\n\n\n\n/**\n * Get the message set type of the specified details.\n *\n * @param details The details.\n * @return {MessageSetType} The message set type.\n */\nBaseAccountImpl.prototype.getMessageSetType = function(details) {\n  var messageType;\n  if (details instanceof BankAccountDetails) {\n    messageType = MessageSetType.banking;\n  }\n  else if (this.getDetails() instanceof CreditCardAccountDetails) {\n    messageType = MessageSetType.creditcard;\n  }\n  else if (this.getDetails() instanceof InvestmentAccountDetails) {\n    messageType = MessageSetType.investment;\n  }\n  else {\n    throw new Error(\"Illegal details: \" + this.details.constructor.name);\n  }\n  return messageType;\n};\n\n\nBaseAccountImpl.prototype.readStatement = function(/*Date*/ start, /*Date*/ end) {\n  var range = new StatementRange();\n  range.setIncludeTransactions(true);\n  range.setStart(start);\n  range.setEnd(end);\n\n  var request = this.institution.createAuthenticatedRequest(this.username, this.password);\n  var requestTransaction = this.createTransaction();\n  requestTransaction.setWrappedMessage(this.createStatementRequest(this.getDetails(), range));\n  request.getMessageSets().push(this.createRequestMessageSet(requestTransaction));\n\n  var response = this.institution.sendRequest(request);\n  this.institution.doGeneralValidationChecks(request, response);\n\n  return this.unwrapStatementResponse(response);\n};\n\n\n/**\n * Create a request message set from the specified transaction.\n *\n * @param {TransactionWrappedRequestMessage} transaction The transaction.\n * @return {RequestMessageSet} The request message set.\n */\nBaseAccountImpl.prototype.createRequestMessageSet = function(/*transaction*/) { throw new Error(\"not implemented\"); };\n\n/**\n * Create a transaction.\n *\n * @return {TransactionWrappedRequestMessage} The transaction.\n */\nBaseAccountImpl.prototype.createTransaction = function() { throw new Error(\"not implemented\"); };\n\n/**\n * Create a statement request.\n *\n * @param details The details.\n * @param {StatementRange} range the range.\n * @return {StatementRequest} The statement request.\n */\nBaseAccountImpl.prototype.createStatementRequest = function(/*details, range*/) { throw new Error(\"not implemented\"); };\n\n/**\n * The details of this account.\n *\n * @return The details of this account.\n */\nBaseAccountImpl.prototype.getDetails = function() {\n  return this.details;\n};\n\n/**\n * The message set type.\n *\n * @return {MessageSetType} The message set type.\n */\nBaseAccountImpl.prototype.getMessageType = function() {\n  return this.messageType;\n};\n\n\n\n\nmodule.exports = BaseAccountImpl;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../util/inherit\");\n\nvar FinancialInstitutionData = require(\"../FinancialInstitutionData\");\n\n/**\n * Base class for FI data.\n *\n * @class\n */\nfunction BaseFinancialInstitutionData (/*string*/ id) {\n\n  /**\n   * @name BaseFinancialInstitutionData#id\n   * @type String\n   * @access private\n   */\n  this.id = id;\n\n  /**\n   * @name BaseFinancialInstitutionData#fid\n   * @type String\n   * @access private\n   */\n  this.fid = null;\n\n  /**\n   * @name BaseFinancialInstitutionData#name\n   * @type String\n   * @access private\n   */\n  this.name = null;\n\n  /**\n   * @name BaseFinancialInstitutionData#organization\n   * @type String\n   * @access private\n   */\n  this.organization = null;\n\n  /**\n   * @name BaseFinancialInstitutionData#ofxUrl\n   * @type URL\n   * @access private\n   */\n  this.ofxUrl = null;\n\n  /**\n   * @name BaseFinancialInstitutionData#brokerId\n   * @type String\n   * @access private\n   */\n  this.brokerId = null;\n}\n\ninherit(BaseFinancialInstitutionData, \"implements\", FinancialInstitutionData);\n\n\n\nBaseFinancialInstitutionData.prototype.getId = function() {\n  return this.id;\n};\n\n\nBaseFinancialInstitutionData.prototype.setId = function(/*String*/ id) {\n  this.id = id;\n};\n\n\nBaseFinancialInstitutionData.prototype.getFinancialInstitutionId = function() {\n  return this.fid;\n};\n\n\nBaseFinancialInstitutionData.prototype.setFinancialInstitutionId = function(/*String*/ id) {\n  this.fid = id;\n};\n\n\nBaseFinancialInstitutionData.prototype.getName = function() {\n  return this.name;\n};\n\n\nBaseFinancialInstitutionData.prototype.setName = function(/*String*/ name) {\n  this.name = name;\n};\n\n\nBaseFinancialInstitutionData.prototype.getOrganization = function() {\n  return this.organization;\n};\n\n\nBaseFinancialInstitutionData.prototype.setOrganization = function(/*String*/ organization) {\n  this.organization = organization;\n};\n\n\nBaseFinancialInstitutionData.prototype.getOFXURL = function() {\n  return this.ofxUrl;\n};\n\n\nBaseFinancialInstitutionData.prototype.setOFXURL = function(/*URL*/ OFXURL) {\n  this.ofxUrl = OFXURL;\n};\n\n\nBaseFinancialInstitutionData.prototype.getBrokerId = function() {\n  return this.brokerId;\n};\n\n\nBaseFinancialInstitutionData.prototype.setBrokerId = function(/*String*/ brokerId) {\n  this.brokerId = brokerId;\n};\n\n\n\n\nmodule.exports = BaseFinancialInstitutionData;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../util/inherit\");\n\nvar CreditCardAccount = require(\"../CreditCardAccount\");\nvar BaseAccountImpl = require(\"./BaseAccountImpl\");\nvar MessageSetType = require(\"../../domain/data/MessageSetType\");\nvar CreditCardRequestMessageSet = require(\"../../domain/data/creditcard/CreditCardRequestMessageSet\");\nvar CreditCardStatementRequestTransaction = require(\"../../domain/data/creditcard/CreditCardStatementRequestTransaction\");\nvar CreditCardStatementRequest = require(\"../../domain/data/creditcard/CreditCardStatementRequest\");\n\n/**\n * @class\n */\nfunction CreditCardAccountImpl(/*CreditCardAccountDetails*/ details, /*String*/ username, /*String*/ password, /*FinancialInstitutionImpl*/ institution) {\n  BaseAccountImpl.call(this, details, username, password, institution);\n}\n\ninherit(CreditCardAccountImpl, \"extends\", BaseAccountImpl);\ninherit(CreditCardAccountImpl, \"implements\", CreditCardAccount);\n\n\n\n\nCreditCardAccountImpl.prototype.unwrapStatementResponse = function(/*ResponseEnvelope*/ response) {\n  var creditCardSet = response.getMessageSet(MessageSetType.creditcard);\n  if (!creditCardSet) {\n    throw new Error(\"No credit card response message set.\");\n  }\n\n  var statementTransactionResponse = creditCardSet.getStatementResponse();\n  if (!statementTransactionResponse) {\n    throw new Error(\"No credit card statement response transaction.\");\n  }\n\n  var statement = statementTransactionResponse.getMessage();\n  if (!statement) {\n    throw new Error(\"No credit card statement in the transaction.\");\n  }\n\n  return statement;\n};\n\n\nCreditCardAccountImpl.prototype.createRequestMessageSet = function(/*TransactionWrappedRequestMessage*/ transaction) {\n  var creditCardRequest = new CreditCardRequestMessageSet();\n  creditCardRequest.setStatementRequest(transaction);\n  return creditCardRequest;\n};\n\n\nCreditCardAccountImpl.prototype.createTransaction = function() {\n  return new CreditCardStatementRequestTransaction();\n};\n\n\nCreditCardAccountImpl.prototype.createStatementRequest = function(/*CreditCardAccountDetails*/ details, /*StatementRange*/ range) {\n  var bankRequest = new CreditCardStatementRequest();\n  bankRequest.setAccount(details);\n  bankRequest.setStatementRange(range);\n  return bankRequest;\n};\n\n\n\n\nmodule.exports = CreditCardAccountImpl;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../util/inherit\");\n\nvar OFXApplicationContextHolder = require(\"../context/OFXApplicationContextHolder\");\nvar Status = require(\"../../domain/data/common/Status\");\nvar StatusHolder = require(\"../../domain/data/common/StatusHolder\");\nvar SignonRequest = require(\"../../domain/data/signon/SignonRequest\");\nvar SignonRequestMessageSet = require(\"../../domain/data/signon/SignonRequestMessageSet\");\nvar FinancialInstitution = require(\"../../domain/data/signon/FinancialInstitution\");\nvar ProfileRequestMessageSet = require(\"../../domain/data/profile/ProfileRequestMessageSet\");\nvar SignupRequestMessageSet = require(\"../../domain/data/signup/SignupRequestMessageSet\");\nvar BankingAccountImpl = require(\"./BankingAccountImpl\");\nvar CreditCardAccountImpl = require(\"./CreditCardAccountImpl\");\nvar InvestmentAccountImpl = require(\"./InvestmentAccountImpl\");\nvar RequestEnvelope = require(\"../../domain/data/RequestEnvelope\");\nvar MessageSetType = require(\"../../domain/data/MessageSetType\");\nvar ApplicationSecurity = require(\"../../domain/data/ApplicationSecurity\");\nvar TransactionWrappedRequestMessage = require(\"../../domain/data/TransactionWrappedRequestMessage\");\nvar TransactionWrappedResponseMessage = require(\"../../domain/data/TransactionWrappedResponseMessage\");\nvar AccountInfoRequest = require(\"../../domain/data/signup/AccountInfoRequest\");\nvar AccountInfoRequestTransaction = require(\"../../domain/data/signup/AccountInfoRequestTransaction\");\nvar ProfileRequestTransaction = require(\"../../domain/data/profile/ProfileRequestTransaction\");\nvar ProfileRequest = require(\"../../domain/data/profile/ProfileRequest\");\n\n/**\n * Base implementation for the financial institution.\n *\n * @class\n */\nfunction FinancialInstitutionImpl (/*FinancialInstitutionData*/ data, /*OFXConnection*/ connection) {\n  if (!data) {\n    throw new Error(\"Data cannot be null\");\n  }\n  if (!connection) {\n    throw new Error(\"An OFX connection must be supplied\");\n  }\n\n  /**\n   * @name FinancialInstitutionImpl#connection\n   * @type OFXConnection\n   * @access private\n   */\n  this.connection = connection;\n\n  /**\n   * @name FinancialInstitutionImpl#data\n   * @type FinancialInstitutionData\n   * @access private\n   */\n  this.data = data;\n}\n\ninherit(FinancialInstitutionImpl, \"implements\", FinancialInstitution);\n\n\n\n// Inherited.\nFinancialInstitutionImpl.prototype.readProfile = function() {\n  var request = this.createAuthenticatedRequest(SignonRequest.ANONYMOUS_USER, SignonRequest.ANONYMOUS_USER);\n  var profileRequest = new ProfileRequestMessageSet();\n  profileRequest.setProfileRequest(this.createProfileTransaction());\n  request.getMessageSets().push(profileRequest);\n  var self = this;\n  return self.sendRequest(request, self.getData().getOFXURL())\n  .then(function(response) {\n    self.doGeneralValidationChecks(request, response);\n    return self.getProfile(response);\n  });\n};\n\n\n// Inherited.\nFinancialInstitutionImpl.prototype.readAccountProfiles = function(/*String*/ username, /*String*/ password) {\n  var request = this.createAuthenticatedRequest(username, password);\n  var signupRequest = new SignupRequestMessageSet();\n  signupRequest.setAccountInfoRequest(this.createAccountInfoTransaction());\n  request.getMessageSets().push(signupRequest);\n  var self = this;\n  return self.sendRequest(request, self.getData().getOFXURL())\n  .then(function(response) {\n    self.doGeneralValidationChecks(request, response);\n    return self.getAccountProfiles(response);\n  });\n};\n\n\n// Inherited.\nFinancialInstitutionImpl.prototype.loadBankAccount = function(/*BankAccountDetails*/ details, /*String*/ username, /*String*/ password) {\n  return new BankingAccountImpl(details, username, password, this);\n};\n\n\n// Inherited.\nFinancialInstitutionImpl.prototype.loadCreditCardAccount = function(/*CreditCardAccountDetails*/ details, /*String*/ username, /*String*/ password) {\n  return new CreditCardAccountImpl(details, username, password, this);\n};\n\n\n// Inherited\nFinancialInstitutionImpl.prototype.loadInvestmentAccount = function(/*InvestmentAccountDetails*/ details, /*String*/ username, /*String*/ password) {\n  return new InvestmentAccountImpl(details, username, password, this);\n};\n\n\n/**\n * Create an authenticated request envelope.\n *\n * @param {String} username The username.\n * @param {String} password The password.\n * @return {RequestEnvelope} The request envelope.\n */\nFinancialInstitutionImpl.prototype.createAuthenticatedRequest = function(username, password) {\n  var request = new RequestEnvelope();\n  var messageSets = [];\n  var signonRequest = new SignonRequestMessageSet();\n  signonRequest.setSignonRequest(this.createSignonRequest(username, password));\n  messageSets.push(signonRequest);\n  request.setMessageSets(messageSets);\n  return request;\n};\n\n\n/**\n * Send a request to a specific URL.\n *\n * @param {RequestEnvelope} request The request.\n * @param {URL} [url] The url.\n * @return {ResponseEnvelope} The request.\n */\nFinancialInstitutionImpl.prototype.sendRequest = function(request, url) {\n  url = url || this.getData().getOFXURL();\n  return this.getConnection().sendRequest(request, url);\n};\n\n\n/**\n * Open the specified response envelope and look for the profile.\n *\n * @param {ResponseEnvelope} response The response envelope.\n * @return {FinancialInstitutionProfile} The profile.\n */\nFinancialInstitutionImpl.prototype.getProfile = function(response) {\n\n  var profileSet = response.getMessageSet(MessageSetType.profile);\n  if (!profileSet) {\n    throw new Error(\"No profile response set.\");\n  }\n\n  var transactionResponse = profileSet.getProfileResponse();\n  if (!transactionResponse) {\n    throw new Error(\"No profile transaction wrapper.\");\n  }\n\n  var message = transactionResponse.getMessage();\n  if (!message) {\n    throw new Error(\"No profile message.\");\n  }\n  return message;\n};\n\n\n/**\n * General validation checks on the specified response.\n *\n * @param {RequestEnvelope} request The request.\n * @param {ResponseEnvelope} response Their response.\n * @throws OFXException Upon invalid response.\n */\nFinancialInstitutionImpl.prototype.doGeneralValidationChecks = function(request, response) {\n  if (response.getSecurity() != ApplicationSecurity.NONE) {\n    throw new Error(\"Unable to participate in \" + response.getSecurity() + \" security.\");\n  }\n\n  if (request.getUID() !== response.getUID() && response.getUID() != \"NONE\" && response.getUID() !== null) { // \"NONE\" is not to spec but was found in the wild\n    throw new Error(\"Invalid transaction ID '\" + response.getUID() + \"' in response.  Expected: \" + response.getUID());\n  }\n\n  var messageSets = request.getMessageSets();\n  for (var messageSetsIdx=0; messageSetsIdx<messageSets.length; messageSetsIdx++) {\n    var requestSet = messageSets[messageSetsIdx];\n    var responseSet = response.getMessageSet(requestSet.getType());\n    if (!responseSet) {\n      throw new Error(\"No response for the \" + requestSet.getType() + \" request.\");\n    }\n\n    if (responseSet.getType() === MessageSetType.signon) {\n      var signonResponse = responseSet.getSignonResponse();\n\n      if (!signonResponse) {\n        throw new Error(\"No signon response.\");\n      }\n    }\n\n    var transactionIds = {};\n    var requestMessages = requestSet.getRequestMessages();\n    for (var requestMessagesIdx=0; requestMessagesIdx<requestMessages.length; requestMessages++) {\n      var requestMessage = requestMessages[requestMessagesIdx];\n      if (requestMessage instanceof TransactionWrappedRequestMessage) {\n        transactionIds[requestMessage.getUID()] = 1;\n      }\n    }\n\n    var responseMessages = responseSet.getResponseMessages();\n    for (var responseMessagesIdx=0; responseMessagesIdx<responseMessages.length; responseMessagesIdx++) {\n      var responseMessage = responseMessages[responseMessagesIdx];\n      if (responseMessage instanceof StatusHolder) {\n        this.validateStatus(responseMessage);\n      }\n\n      if (responseMessage instanceof TransactionWrappedResponseMessage) {\n        var uid = responseMessage.getUID();\n        if (!uid) {\n          throw new Error(\"Invalid response transaction: no UID.\");\n        }\n        else if (!(uid in transactionIds)) {\n          throw new Error(\"Response to an unknown transaction: \" + uid + \".\");\n        }\n        delete transactionIds[uid];\n      }\n    }\n\n    if (transactionIds.length > 0) {\n      throw new Error(\"No response to the following transactions: \" + transactionIds);\n    }\n  }\n};\n\n\n/**\n * Validate the status of the given status holder.\n *\n * @param {StatusHolder} statusHolder The status holder.\n */\nFinancialInstitutionImpl.prototype.validateStatus = function(statusHolder) {\n  var status = statusHolder.getStatus();\n  if (!status) {\n    throw new Error(\"Invalid OFX response: no status returned in the \" + statusHolder.getStatusHolderName() + \" response.\");\n  }\n\n  if (Status.KnownCode.SUCCESS !== status.getCode()) {\n    var message = status.getMessage();\n    if (!message) {\n      message = \"No response status code.\";\n\n      if (status.getCode()) {\n        message = status.getCode().getMessage();\n      }\n    }\n\n    throw new Error(\"Invalid \" + statusHolder.getStatusHolderName() + \": \" + message);\n  }\n};\n\n\n/**\n * Create a transaction message for a profile request.\n *\n * @return {ProfileRequestTransaction} The transaction message.\n */\nFinancialInstitutionImpl.prototype.createProfileTransaction = function() {\n  var profileTx = new ProfileRequestTransaction();\n  profileTx.setMessage(this.createProfileRequest());\n  return profileTx;\n};\n\n\n/**\n * Create a profile request.\n *\n * @return {ProfileRequest} The profile request.\n */\nFinancialInstitutionImpl.prototype.createProfileRequest = function() {\n  var profileRequest = new ProfileRequest();\n  profileRequest.setProfileLastUpdated(new Date(0));\n  return profileRequest;\n};\n\n\n/**\n * Create a sign-on request for the specified user.\n *\n * @param {String} username The username.\n * @param {String} password The password.\n * @return {SignonRequest} The signon request.\n */\nFinancialInstitutionImpl.prototype.createSignonRequest = function(username, password) {\n  var signonRequest = new SignonRequest();\n  signonRequest.setTimestamp(new Date());\n  var fi = new FinancialInstitution();\n  fi.setId(this.getData().getFinancialInstitutionId());\n  fi.setOrganization(this.getData().getOrganization());\n  signonRequest.setFinancialInstitution(fi);\n  signonRequest.setUserId(username);\n  signonRequest.setPassword(password);\n  signonRequest.setApplicationId(OFXApplicationContextHolder.getCurrentContext().getAppId());\n  signonRequest.setApplicationVersion(OFXApplicationContextHolder.getCurrentContext().getAppVersion());\n  return signonRequest;\n};\n\n\n/**\n * Create a transaction for an account info request.\n *\n * @return {AccountInfoRequestTransaction} The transaction.\n */\nFinancialInstitutionImpl.prototype.createAccountInfoTransaction = function() {\n  var transaction = new AccountInfoRequestTransaction();\n  transaction.setMessage(this.createAccountInfoRequest());\n  return transaction;\n};\n\n\n/**\n * Create an account info request.\n *\n * @return {AccountInfoRequest} The account info request.\n */\nFinancialInstitutionImpl.prototype.createAccountInfoRequest = function() {\n  return new AccountInfoRequest();\n};\n\n\n/**\n * Get the account profiles for the specified response envelope.\n *\n * @param {ResponseEnvelope} response The response envelope.\n * @return {AccountProfile[]} The account profiles.\n */\nFinancialInstitutionImpl.prototype.getAccountProfiles = function(response) {\n  var messageSet = response.getMessageSet(MessageSetType.signup);\n  if (!messageSet) {\n    throw new Error(\"No signup response message set.\");\n  }\n\n  var transaction = messageSet.getAccountInfoResponse();\n  if (!transaction) {\n    throw new Error(\"No account info transaction in the signup response.\");\n  }\n\n  var infoResponse = transaction.getMessage();\n  if (!infoResponse) {\n    throw new Error(\"No account info response in the transaction.\");\n  }\n\n  return infoResponse.getAccounts();\n};\n\n\n/**\n * The connection used by this implementation.\n *\n * @return {OFXConnection} The connection used by this implementation.\n */\nFinancialInstitutionImpl.prototype.getConnection = function() {\n  return this.connection;\n};\n\n\n/**\n * The financial institution data.\n *\n * @return {FinancialInstitutionData} The financial institution data.\n */\nFinancialInstitutionImpl.prototype.getData = function() {\n  return this.data;\n};\n\n\n\n\nmodule.exports = FinancialInstitutionImpl;\n","\"use strict\";\n\nvar inherit = require(\"../../util/inherit\");\n\nvar InvestmentAccount = require(\"../InvestmentAccount\");\nvar StatementRange = require(\"../../domain/data/common/StatementRange\");\nvar IncludePosition = require(\"../../domain/data/investment/statements/IncludePosition\");\nvar InvestmentStatementRequestTransaction = require(\"../../domain/data/investment/statements/InvestmentStatementRequestTransaction\");\nvar SecurityListRequestTransaction = require(\"../../domain/data/seclist/SecurityListRequestTransaction\");\nvar MessageSetType = require(\"../../domain/data/MessageSetType\");\nvar InvestmentStatementRequestMessageSet = require(\"../../domain/data/investment/statements/InvestmentStatementRequestMessageSet\");\nvar InvestmentStatementRequest = require(\"../../domain/data/investment/statements/InvestmentStatementRequest\");\nvar SecurityListRequestMessageSet = require(\"../../domain/data/seclist/SecurityListRequestMessageSet\");\nvar SecurityListRequest = require(\"../../domain/data/seclist/SecurityListRequest\");\n\n/**\n * @class\n */\nfunction InvestmentAccountImpl (/*InvestmentAccountDetails*/ details, /*String*/ username, /*String*/ password, /*FinancialInstitutionImpl*/ institution) {\n\n  /**\n   * @name InvestmentAccountImpl#details\n   * @type InvestmentAccountDetails\n   * @access private\n   */\n  this.details = details;\n\n  /**\n   * @name InvestmentAccountImpl#username\n   * @type String\n   * @access private\n   */\n  this.username = username;\n\n  /**\n   * @name InvestmentAccountImpl#password\n   * @type String\n   * @access private\n   */\n  this.password = password;\n\n  /**\n   * @name InvestmentAccountImpl#institution\n   * @type FinancialInstitutionImpl\n   * @access private\n   */\n  this.institution = institution;\n}\n\ninherit(InvestmentAccountImpl, \"implements\", InvestmentAccount);\n\n\n\nInvestmentAccountImpl.prototype.readStatement = function(/*Date*/ start, /*Date*/ end) {\n  var range = new StatementRange();\n  range.setIncludeTransactions(true);\n  range.setStart(start);\n  range.setEnd(end);\n\n  var request = this.institution.createAuthenticatedRequest(this.username, this.password);\n  var requestTransaction = new InvestmentStatementRequestTransaction();\n  requestTransaction.setWrappedMessage(this.createStatementRequest(this.getDetails(), range));\n  request.getMessageSets().push(this.createStatementRequestMessageSet(requestTransaction));\n\n  var response = this.institution.sendRequest(request);\n  this.institution.doGeneralValidationChecks(request, response);\n\n  return this.unwrapStatementResponse(response);\n};\n\n\nInvestmentAccountImpl.prototype.readSecurityList = function(/*SecurityRequest[]*/ securities) {\n  var request = this.institution.createAuthenticatedRequest(this.username, this.password);\n  var requestTransaction = new SecurityListRequestTransaction();\n  requestTransaction.setWrappedMessage(this.createSecurityListRequest(securities));\n  request.getMessageSets().push(this.createSecurityListRequestMessageSet(requestTransaction));\n\n  var response = this.institution.sendRequest(request);\n  this.institution.doGeneralValidationChecks(request, response);\n\n  return this.unwrapSecurityList(response);\n};\n\n\n/**\n * The details of this account.\n *\n * @return {InvestmentAccountDetails} The details of this account.\n */\nInvestmentAccountImpl.prototype.getDetails = function() {\n  return this.details;\n};\n\n\nInvestmentAccountImpl.prototype.unwrapStatementResponse = function(/*ResponseEnvelope*/ response) {\n  var investmentStatementSet = response.getMessageSet(MessageSetType.investment);\n  if (!investmentStatementSet) {\n    throw new Error(\"No investment response message set.\");\n  }\n\n  var statementTransactionResponse = investmentStatementSet.getStatementResponse();\n  if (!statementTransactionResponse) {\n    throw new Error(\"No investment statement response transaction.\");\n  }\n\n  var statement = statementTransactionResponse.getMessage();\n  if (!statement) {\n    throw new Error(\"No investment statement in the transaction.\");\n  }\n\n  // See if there's a security list -- often sent back with an account statement by servers.\n  var securityListMessageSet = response.getMessageSet(MessageSetType.investment_security);\n  if (securityListMessageSet) {\n    statement.setSecurityList(securityListMessageSet.getSecurityList());\n  }\n\n  return statement;\n};\n\n\nInvestmentAccountImpl.prototype.createStatementRequestMessageSet = function(/*InvestmentStatementRequestTransaction*/ transaction) {\n  var investmentStatementRequest = new InvestmentStatementRequestMessageSet();\n  investmentStatementRequest.setStatementRequest(transaction);\n  return investmentStatementRequest;\n};\n\n\nInvestmentAccountImpl.prototype.createStatementRequest = function(/*InvestmentAccountDetails*/ details, /*StatementRange*/ range) {\n  var investRequest = new InvestmentStatementRequest();\n  investRequest.setAccount(details);\n  investRequest.setStatementRange(range);\n  investRequest.setIncludePosition(new IncludePosition());\n  return investRequest;\n};\n\n\nInvestmentAccountImpl.prototype.createSecurityListRequestMessageSet = function(/*SecurityListRequestTransaction*/ transaction) {\n  var securityListRequest = new SecurityListRequestMessageSet();\n  securityListRequest.setSecurityListRequest(transaction);\n  return securityListRequest;\n};\n\n\nInvestmentAccountImpl.prototype.createSecurityListRequest = function(/*SecurityRequest[]*/ securities) {\n  var securityListRequest = new SecurityListRequest();\n  securityListRequest.setSecurityRequests(securities);\n  return securityListRequest;\n};\n\n\nInvestmentAccountImpl.prototype.unwrapSecurityList = function(/*ResponseEnvelope*/ response) {\n  var securityListSet = response.getMessageSet(MessageSetType.investment_security);\n  if (!securityListSet) {\n    throw new Error(\"No security list response message set.\");\n  }\n\n  var securityList = securityListSet.getSecurityList();\n  if (!securityList) {\n    throw new Error(\"No security list response transaction.\");\n  }\n\n  return securityList;\n};\n\n\n\n\nmodule.exports = InvestmentAccountImpl;\n","\"use strict\";\n\nmodule.exports = {\n  BankingAccountImpl: require(\"./BankingAccountImpl\"),\n  BaseAccountImpl: require(\"./BaseAccountImpl\"),\n  BaseFinancialInstitutionData: require(\"./BaseFinancialInstitutionData\"),\n  CreditCardAccountImpl: require(\"./CreditCardAccountImpl\"),\n  FinancialInstitutionImpl: require(\"./FinancialInstitutionImpl\"),\n  InvestmentAccountImpl: require(\"./InvestmentAccountImpl\"),\n};\n","\"use strict\";\n\nmodule.exports = {\n  context: require(\"./context/index\"),\n  impl: require(\"./impl/index\"),\n  net: require(\"./net/index\"),\n\n  AccountStatement: require(\"./AccountStatement\"),\n  BankAccount: require(\"./BankAccount\"),\n  CreditCardAccount: require(\"./CreditCardAccount\"),\n  FinancialInstitution: require(\"./FinancialInstitution\"),\n  FinancialInstitutionAccount: require(\"./FinancialInstitutionAccount\"),\n  FinancialInstitutionData: require(\"./FinancialInstitutionData\"),\n  FinancialInstitutionProfile: require(\"./FinancialInstitutionProfile\"),\n  InvestmentAccount: require(\"./InvestmentAccount\"),\n};\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * Connection to an OFX interface.\n *\n * @class\n */\nfunction OFXConnection() {\n}\n\n/**\n * Send a request.\n *\n * @param {RequestEnvelope} request The request to send.\n * @param {URL} url The URL to which to send the request.\n * @return {Promise<ResponseEnvelope>} The response.\n */\nOFXConnection.prototype.sendRequest = function(/*request, url*/) { throw new Error(\"not implemented\"); };\n\n\nmodule.exports = OFXConnection;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*global XMLHttpRequest*/\n\n\"use strict\";\n\nvar inherit = require(\"../../util/inherit\");\n\nvar ResponseEnvelope = require(\"../../domain/data/ResponseEnvelope\");\nvar OFXConnection = require(\"./OFXConnection\");\nvar AggregateMarshaller = require(\"../../io/AggregateMarshaller\");\nvar OFXV1Writer = require(\"../../io/v1/OFXV1Writer\");\nvar AggregateUnmarshaller = require(\"../../io/AggregateUnmarshaller\");\nvar LOG = require(\"../../util/log\");\n\n/**\n * Base implementation for an OFX connection.\n *\n * @class\n */\nfunction OFXV1Connection () {\n\n  /**\n   * @name OFXV1Connection#marshaller\n   * @type AggregateMarshaller\n   * @access private\n   */\n  this.marshaller = new AggregateMarshaller();\n\n  /**\n   * @name OFXV1Connection#unmarshaller\n   * @type AggregateUnmarshaller<ResponseEnvelope>\n   * @access private\n   */\n  this.unmarshaller = new AggregateUnmarshaller(ResponseEnvelope);\n  \n  /**\n   * @name OFXV1Connection#async\n   * @type bool\n   * @access private\n   */\n  this.async = true;\n}\n\ninherit(OFXV1Connection, \"implements\", OFXConnection);\n\n\n\n\n// Inherited.\nOFXV1Connection.prototype.sendRequest = function(/*RequestEnvelope*/ request, /*URL*/ url) {\n  //marshal to memory so we can determine the size...\n  var outBuffer = [];\n  var ofxWriter = this.newOFXWriter(outBuffer);\n  this.getMarshaller().marshal(request, ofxWriter);\n  ofxWriter.close();\n  this.logRequest(outBuffer);\n  var self = this;\n  return self.sendBuffer(url, outBuffer)\n  .then(function(in_) {\n    self.logResponse(in_);\n    return self.unmarshal(in_);\n  });\n};\n\n\n/**\n * Log a request buffer.\n *\n * @param {ByteArrayOutputStream} outBuffer The buffer to log.\n */\nOFXV1Connection.prototype.logRequest = function(outBuffer) {\n  if (LOG.network) {\n    console.log(\"Sending OFX request:\", outBuffer.join(\"\"));\n  }\n};\n\n\n/**\n * Log a response buffer.\n *\n * @param {ByteArrayOutputStream} outBuffer The buffer to log.\n */\nOFXV1Connection.prototype.logResponse = function(inBuffer) {\n  if (LOG.network) {\n    console.log(\"Received OFX response:\", inBuffer);\n  }\n};\n\n\n/**\n * Send the specified buffer to the specified URL.\n *\n * @param {URL} url The URL.\n * @param {ByteArrayOutputStream} outBuffer The buffer.\n * @return {Promise<string>} The response.\n */\nOFXV1Connection.prototype.sendBuffer = function(url, outBuffer) {\n  var outText = outBuffer.join(\"\");\n  var async = this.getAsync();\n  return new Promise(function(resolve, reject) {\n    var request = new XMLHttpRequest();\n    var onloadCalled = false;\n    request.open(\"POST\", url, async);\n    request.setRequestHeader(\"Content-Type\", \"application/x-ofx\");\n    request.setRequestHeader(\"Accept\", \"*/*, application/x-ofx\");\n    request.onload = function() {\n      onloadCalled = true;\n      if (request.status >= 200 && request.status < 300) {\n        resolve(request.responseText);\n      } else if (request.status >= 400 && request.status < 500) {\n        reject(Error(\"Error \" + request.status + \" with client request: \" + request.responseText));\n      } else {\n        reject(Error(\"Invalid response code from OFX server: \" + request.status));\n      }\n    };\n    request.onerror = function() {\n      reject(Error(\"Network error\"));\n    };\n    \n    request.send(outText);\n    \n    if (!async && !onloadCalled) {\n      request.onload();\n    }\n  });\n};\n\n\n/**\n * Unmarshal the input stream.\n *\n * @param {string} in_ The input text.\n * @return {ResponseEnvelope} The response envelope.\n */\nOFXV1Connection.prototype.unmarshal = function(in_) {\n  return this.getUnmarshaller().unmarshal(in_);\n};\n\n\n/**\n * Create a new OFX writer.\n *\n * @param {OutputStream} out The output stream for the writer.\n * @return {OFXWriter} The OFX writer.\n */\nOFXV1Connection.prototype.newOFXWriter = function(out) {\n  return new OFXV1Writer(out);\n};\n\n\n/**\n * The marshaller.\n *\n * @return {AggregateMarshaller} The marshaller.\n */\nOFXV1Connection.prototype.getMarshaller = function() {\n  return this.marshaller;\n};\n\n\n/**\n * The marshaller.\n *\n * @param {AggregateMarshaller} marshaller The marshaller.\n */\nOFXV1Connection.prototype.setMarshaller = function(marshaller) {\n  this.marshaller = marshaller;\n};\n\n\n/**\n * The unmarshaller.\n *\n * @return {AggregateUnmarshaller<ResponseEnvelope>} The unmarshaller.\n */\nOFXV1Connection.prototype.getUnmarshaller = function() {\n  return this.unmarshaller;\n};\n\n\n/**\n * The unmarshaller.\n *\n * @param {AggregateUnmarshaller<ResponseEnvelope>} unmarshaller The unmarshaller.\n */\nOFXV1Connection.prototype.setUnmarshaller = function(unmarshaller) {\n  this.unmarshaller = unmarshaller;\n};\n\n\n\n/**\n * Async mode\n *\n * @return {bool} Whether in async mode.\n */\nOFXV1Connection.prototype.getAsync = function() {\n  return this.async;\n};\n\n\n/**\n * Async mode\n *\n * @param {bool} async async mode.\n */\nOFXV1Connection.prototype.setAsync = function(async) {\n  this.async = async;\n};\n\n\n\nmodule.exports = OFXV1Connection;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../util/inherit\");\n\nvar OFXV2Writer = require(\"../../io/v2/OFXV2Writer\");\nvar OFXV1Connection = require(\"./OFXV1Connection\");\n\n\n/**\n * @class\n */\nfunction OFXV2Connection () {\n  OFXV2Connection.call(this);\n}\n\ninherit(OFXV2Connection, \"extends\", OFXV1Connection);\n\n\n\n\n// @Override\nOFXV2Connection.prototype.newOFXWriter = function(/*OutputStream*/ out) {\n  return new OFXV2Writer(out);\n};\n\n\n\n\nmodule.exports = OFXV2Connection;\n","\"use strict\";\n\nmodule.exports = {\n  OFXConnection: require(\"./OFXConnection\"),\n  OFXV1Connection: require(\"./OFXV1Connection\"),\n  OFXV2Connection: require(\"./OFXV2Connection\"),\n};\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * @enum\n * See \"Section 4, OFX spec\"\n */\nvar ApplicationSecurity = {\n\n  NONE: \"NONE\",\n\n  TYPE1: \"TYPE1\"\n};\n\n\nmodule.exports = ApplicationSecurity;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * @class\n */\nfunction MessageSetProfile() {\n}\n\n/**\n * Version of the message set.\n *\n * @return {String} The version of the message set.\n */\nMessageSetProfile.prototype.getVersion = function() { throw new Error(\"not implemented\"); };\n\n/**\n * The name of the service provider (sometimes the message set processing is outsourced).\n *\n * @return {String} The name of the service provider (sometimes the message set processing is outsourced).\n */\nMessageSetProfile.prototype.getServiceProviderName = function() { throw new Error(\"not implemented\"); };\n\n/**\n * The URL at which the message set is processed.\n *\n * @return {String} The URL at which the message set is processed.\n */\nMessageSetProfile.prototype.getUrl = function() { throw new Error(\"not implemented\"); };\n\n/**\n * The application-level security required for this message set.\n *\n * @return {ApplicationSecurity} The application-level security required for this message set.\n */\nMessageSetProfile.prototype.getSecurity = function() { throw new Error(\"not implemented\"); };\n\n/**\n * Whether transport-level security is required for this message set.\n *\n * @return {boolean} Whether transport-level security is required for this message set.\n */\nMessageSetProfile.prototype.isSslRequired = function() { throw new Error(\"not implemented\"); };\n\n/**\n * The sign-on realm.\n *\n * @return {String} The sign-on realm.\n */\nMessageSetProfile.prototype.getRealm = function() { throw new Error(\"not implemented\"); };\n\n/**\n * The language.\n *\n * @return {String} The language.\n * @see java.util.Locale#getISO3Language()\n */\nMessageSetProfile.prototype.getLanguage = function() { throw new Error(\"not implemented\"); };\n\n/**\n * The synchronization capability for this message set.\n *\n * @return {SynchronizationCapability} The synchronization capability for this message set.\n */\nMessageSetProfile.prototype.getSyncCapability = function() { throw new Error(\"not implemented\"); };\n\n/**\n * Whether there exists support for resposne-file based error recovery.\n *\n * @return {boolean} Whether there exists support for resposne-file based error recovery.\n */\nMessageSetProfile.prototype.hasFileBasedErrorRecoverySupport = function() { throw new Error(\"not implemented\"); };\n\n\nmodule.exports = MessageSetProfile;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * The message set type, used to define message set order in the envelope.\n *\n * @enum\n * See \"Section 2.4.5.2, OFX spec\"\n */\nvar MessageSetType = {\n\n  signon: 0,\n\n  signup: 1,\n\n  banking: 2,\n\n  creditcard: 3,\n\n  investment: 4,\n\n  interbank_transfer: 5,\n\n  wire_transfer: 6,\n\n  payments: 7,\n\n  email: 8,\n\n  investment_security: 9,\n\n  profile: 10,\n\n  tax1099: 11\n\n};\n\n\nmodule.exports = MessageSetType;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar Aggregate = require(\"../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../meta/ChildAggregate\");\nvar Header = require(\"../../meta/Header\");\nvar ApplicationSecurity = require(\"./ApplicationSecurity\");\nvar RequestMessageSet = require(\"./RequestMessageSet\");\nvar UUID = require(\"uuid\");\n\n/**\n * Envelope for enclosing an OFX request.\n *\n * @class\n * See \"Section 2.4.3, OFX Spec\"\n */\nfunction RequestEnvelope (/*String*/ UID) {\n\n  /**\n   * @name RequestEnvelope#security\n   * @type ApplicationSecurity\n   * @access private\n   */\n  this.security = ApplicationSecurity.NONE;\n\n  /**\n   * @name RequestEnvelope#UID\n   * @type String\n   * @access private\n   */\n  this.UID = UID ? UID : UUID.v4();\n\n  /**\n   * @name RequestEnvelope#lastProcessedUID\n   * @type String\n   * @access private\n   */\n  this.lastProcessedUID = null;\n\n  /**\n   * @name RequestEnvelope#messageSets\n   * @type RequestMessageSet[]\n   * @access private\n   */\n  this.messageSets = null;\n}\n\n\n\nAggregate.add(\"OFX\", RequestEnvelope);\n\n\n\n/**\n * The security of this envelope.\n *\n * @return {ApplicationSecurity} The security of this envelope.\n * See \"Section 2.2, OFX spec\"\n */\nRequestEnvelope.prototype.getSecurity = function() {\n  return this.security;\n};\nHeader.add(RequestEnvelope, {name: \"SECURITY\", attributeType: ApplicationSecurity, readMethod: \"getSecurity\", writeMethod: \"setSecurity\"});\n\n\n/**\n * The security of this envelope.\n *\n * @param {ApplicationSecurity} security The security of this envelope.\n * See \"Section 2.2, OFX spec\"\n */\nRequestEnvelope.prototype.setSecurity = function(security) {\n  this.security = security;\n};\n\n\n/**\n * The UID for the envelope.\n *\n * @return {String} The UID for the envelope.\n * See \"Section 2.2, OFX spec\"\n */\nRequestEnvelope.prototype.getUID = function() {\n  return this.UID;\n};\nHeader.add(RequestEnvelope, {name: \"NEWFILEUID\", attributeType: String, readMethod: \"getUID\", writeMethod: \"setUID\"});\n\n\n/**\n * The UID for the envelope.\n *\n * @param {String} UID The UID for the envelope.\n * See \"Section 2.2, OFX spec\"\n */\nRequestEnvelope.prototype.setUID = function(UID) {\n  this.UID = UID;\n};\n\n\n/**\n * The UID of the last-processed request/response (used for file-based error recovery).\n *\n * @return {String} The UID of the last-processed request/response (used for file-based error recovery).\n * See \"Section 2.2, OFX spec\"\n */\nRequestEnvelope.prototype.getLastProcessedUID = function() {\n  return this.lastProcessedUID;\n};\nHeader.add(RequestEnvelope, {name: \"OLDFILEUID\", attributeType: String, readMethod: \"getLastProcessedUID\", writeMethod: \"setLastProcessedUID\"});\n\n\n/**\n * The UID of the last-processed request/response (used for file-based error recovery).\n *\n * @param {String} lastProcessedUID The UID of the last-processed request/response (used for file-based error recovery).\n * See \"Section 2.2, OFX spec\"\n */\nRequestEnvelope.prototype.setLastProcessedUID = function(lastProcessedUID) {\n  this.lastProcessedUID = lastProcessedUID;\n};\n\n\n/**\n * The message sets that make up the content of this request.\n *\n * @return {RequestMessageSet[]} The message sets that make up the content of this request.\n * See \"Section 2.4.5, OFX Spec\"\n */\nRequestEnvelope.prototype.getMessageSets = function() {\n  return this.messageSets;\n};\nChildAggregate.add(RequestEnvelope, {order: 1, attributeType: Array, collectionEntryType: RequestMessageSet, readMethod: \"getMessageSets\", writeMethod: \"setMessageSets\"});\n\n\n/**\n * The message sets that make up the content of this request.\n *\n * @param {RequestMessageSet[]} messageSets The message sets that make up the content of this request.\n * See \"Section 2.4.5, OFX Spec\"\n */\nRequestEnvelope.prototype.setMessageSets = function(messageSets) {\n  this.messageSets = messageSets;\n};\n\n\n\n\nmodule.exports = RequestEnvelope;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * A message applicable to a request message set.\n *\n * @class\n */\nfunction RequestMessage () {\n}\n\n\nmodule.exports = RequestMessage;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * A message set enclosed in an OFX request envelope.\n *\n * @class\n */\nfunction RequestMessageSet () {\n\n  /**\n   * @name RequestMessageSet#version\n   * @type String\n   * @access private\n   */\n  this.version = \"1\";\n}\n\n\nRequestMessageSet.prototype.getType = function() { throw new Error(\"not implemented\"); };\n\n/**\n * The version of this request message.\n *\n * @return {String} The version of this request message.\n */\nRequestMessageSet.prototype.getVersion = function() {\n  return this.version;\n};\n\n/**\n * The version of this request message.\n *\n * @param {String} version The version of this request message.\n */\nRequestMessageSet.prototype.setVersion = function(version) {\n  this.version = version;\n};\n\n/**\n * The request messages for this request message set.\n *\n * @return {RequestMessage[]} The request messages for this request message set.\n */\nRequestMessageSet.prototype.getRequestMessages = function() { throw new Error(\"not implemented\"); };\n\n// Inherited.\nRequestMessageSet.prototype.compareTo = function(/*RequestMessageSet*/ o) {\n  return this.getType().compareTo(o.getType());\n};\n\n\n\n\nmodule.exports = RequestMessageSet;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar Aggregate = require(\"../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../meta/ChildAggregate\");\nvar Header = require(\"../../meta/Header\");\nvar ApplicationSecurity = require(\"./ApplicationSecurity\");\nvar MessageSetType = require(\"./MessageSetType\");\nvar ResponseMessageSet = require(\"./ResponseMessageSet\");\n\n/**\n * Envelope for enclosing an OFX response.\n *\n * @class\n * See \"Section 2.4.3, OFX Spec\"\n */\nfunction ResponseEnvelope () {\n\n  /**\n   * @name ResponseEnvelope#security\n   * @type ApplicationSecurity\n   * @access private\n   */\n  this.security = ApplicationSecurity.NONE;\n\n  /**\n   * @name ResponseEnvelope#UID\n   * @type String\n   * @access private\n   */\n  this.UID = null;\n\n  /**\n   * @name ResponseEnvelope#messageSets\n   * @type ResponseMessageSet[]\n   * @access private\n   */\n  this.messageSets = null;\n}\n\n\n\nAggregate.add(\"OFX\", ResponseEnvelope);\n\n\n/**\n * The security of this envelope.\n *\n * @return {ApplicationSecurity} The security of this envelope.\n * See \"Section 2.2, OFX spec\"\n */\nResponseEnvelope.prototype.getSecurity = function() {\n  return this.security;\n};\nHeader.add(ResponseEnvelope, {name: \"SECURITY\", attributeType: ApplicationSecurity, readMethod: \"getSecurity\", writeMethod: \"setSecurity\"});\n\n\n/**\n * The security of this envelope.\n *\n * @param {ApplicationSecurity} security The security of this envelope.\n * See \"Section 2.2, OFX spec\"\n */\nResponseEnvelope.prototype.setSecurity = function(security) {\n  this.security = security;\n};\n\n\n/**\n * The UID for the envelope.\n *\n * @return {String} The UID for the envelope.\n * See \"Section 2.2, OFX spec\"\n */\nResponseEnvelope.prototype.getUID = function() {\n  return this.UID;\n};\nHeader.add(ResponseEnvelope, {name: \"NEWFILEUID\", attributeType: String, readMethod: \"getUID\", writeMethod: \"setUID\"});\n\n\n/**\n * The UID for the envelope.\n *\n * @param {String} UID The UID for the envelope.\n * See \"Section 2.2, OFX spec\"\n */\nResponseEnvelope.prototype.setUID = function(UID) {\n  this.UID = UID;\n};\n\n\n/**\n * The message sets that make up the content of this response.\n *\n * @return {ResponseMessageSet[]} The message sets that make up the content of this response.\n * See \"Section 2.4.5, OFX Spec\"\n */\nResponseEnvelope.prototype.getMessageSets = function() {\n  return this.messageSets;\n};\nChildAggregate.add(ResponseEnvelope, {order: 1, attributeType: Array, collectionEntryType: ResponseMessageSet, readMethod: \"getMessageSets\", writeMethod: \"setMessageSets\"});\n\n\n/**\n * The message sets that make up the content of this response.\n *\n * @param {ResponseMessageSet[]} messageSets The message sets that make up the content of this response.\n * See \"Section 2.4.5, OFX Spec\"\n */\nResponseEnvelope.prototype.setMessageSets = function(messageSets) {\n  this.messageSets = messageSets;\n};\n\n\n/**\n * Helper method for looking up the signon response.\n *\n * @return {SignonResponse} The signon response, or null if none found.\n */\nResponseEnvelope.prototype.getSignonResponse = function() {\n  var type = MessageSetType.signon;\n  var message = this.getMessageSet(type);\n\n  if (message) {\n    return message.getSignonResponse();\n  }\n  else {\n    return null;\n  }\n};\n\n\n/**\n * Get the message set of the specified type.\n *\n * @param {MessageSetType} type The type.\n * @return {ResponseMessageSet} The message set, or null.\n */\nResponseEnvelope.prototype.getMessageSet = function(type) {\n  var message = null;\n  if (this.messageSets) {\n    for (var i=0; i<this.messageSets.length; i++) {\n      var messageSet = this.messageSets[i];\n      if (messageSet.getType() == type) {\n        message = messageSet;\n        break;\n      }\n    }\n  }\n  return message;\n};\n\n\n\n\nmodule.exports = ResponseEnvelope;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * A message applicable to a response message set.\n *\n * @class\n */\nfunction ResponseMessage () {\n}\n\n\n\n\n\n/**\n * The name of the response message.\n *\n * @return {String} The name of the response message.\n */\nResponseMessage.prototype.getResponseMessageName = function() { throw new Error(\"not implemented\"); };\n\n\n\n\nmodule.exports = ResponseMessage;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * A message set enclosed in a response envelope.\n *\n * @class\n */\nfunction ResponseMessageSet () {\n\n  /**\n   * @name ResponseMessageSet#version\n   * @type String\n   * @access private\n   */\n  this.version = \"1\";\n}\n\n\nResponseMessageSet.prototype.getType = function() { throw new Error(\"not implemented\"); };\n\n/**\n * The version of this message set.\n *\n * @return {String} The version of this message set.\n */\nResponseMessageSet.prototype.getVersion = function() {\n  return this.version;\n};\n\n/**\n * The version of this message set.\n *\n * @param {String} version The version of this message set.\n */\nResponseMessageSet.prototype.setVersion = function(version) {\n  this.version = version;\n};\n\n/**\n * The list of response messages.\n *\n * @return {ResponseMessage[]} The list of response messages.\n */\nResponseMessageSet.prototype.getResponseMessages = function() { throw new Error(\"not implemented\"); };\n\n// Inherited.\nResponseMessageSet.prototype.compareTo = function(/*ResponseMessageSet*/ o) {\n  return this.getType().compareTo(o.getType());\n};\n\n\n\n\nmodule.exports = ResponseMessageSet;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * @class\n */\nfunction SignonProfile() {\n}\n\n/**\n * The name of the sign-on realm.\n *\n * @return {String} The name of the sign-on realm.\n */\nSignonProfile.prototype.getRealm = function() { throw new Error(\"not implemented\"); };\n\n/**\n * The minimum number of password characters.\n *\n * @return {Integer} The minimum number of password characters.\n */\nSignonProfile.prototype.getMinPasswordCharacters = function() { throw new Error(\"not implemented\"); };\n\n/**\n * The maximum number of password characters.\n *\n * @return {Integer} The maximum number of password characters.\n */\nSignonProfile.prototype.getMaxPasswordCharacters = function() { throw new Error(\"not implemented\"); };\n\n/**\n * The type of password characters supported.\n *\n * @return {CharacterType} The type of password characters supported.\n */\nSignonProfile.prototype.getPasswordCharacterType = function() { throw new Error(\"not implemented\"); };\n\n/**\n * Whether the password is case-sensitive.\n *\n * @return {Boolean} Whether the password is case-sensitive.\n */\nSignonProfile.prototype.getPasswordCaseSensitive = function() { throw new Error(\"not implemented\"); };\n\n/**\n * Whether special characters are allowed in the password.\n *\n * @return {Boolean} Whether special characters are allowed in the password.\n */\nSignonProfile.prototype.getPasswordSpecialCharsAllowed = function() { throw new Error(\"not implemented\"); };\n\n/**\n * Whether spaces are allowed in the password.\n *\n * @return {Boolean} Whether spaces are allowed in the password.\n */\nSignonProfile.prototype.getPasswordSpacesAllowed = function() { throw new Error(\"not implemented\"); };\n\n/**\n * Whether the server can process a password change request for this realm.\n *\n * @return {Boolean} Whether the server can process a password change request for this realm.\n */\nSignonProfile.prototype.getChangePasswordSupported = function() { throw new Error(\"not implemented\"); };\n\n/**\n * Whether the server requires the user to change their password as part of their first signon.\n *\n * @return {Boolean} Whether the server requires the user to change their password as part of their first signon.\n */\nSignonProfile.prototype.getChangePasswordFirstRequired = function() { throw new Error(\"not implemented\"); };\n\n/**\n * Label for a set of additional credentials that the user must supply.\n *\n * @return {String} Label for a set of additional credentials that the user must supply.\n */\nSignonProfile.prototype.getAdditionalCredientialsLabel1 = function() { throw new Error(\"not implemented\"); };\n\n/**\n * Label for a set of additional credentials that the user must supply.\n *\n * @return {String} Label for a set of additional credentials that the user must supply.\n */\nSignonProfile.prototype.getAdditionalCredientialsLabel2 = function() { throw new Error(\"not implemented\"); };\n\n/**\n * Whether a client UID is required for teh sign-on.\n *\n * @return {Boolean} Whether a client UID is required for teh sign-on.\n */\nSignonProfile.prototype.getClientUIDRequired = function() { throw new Error(\"not implemented\"); };\n\n/**\n * Whether an auth token is required for the sign-on.\n *\n * @return {Boolean} Whether an auth token is required for the sign-on.\n */\nSignonProfile.prototype.getAuthTokenRequiredForFirstSignon = function() { throw new Error(\"not implemented\"); };\n\n/**\n * The label of the auth token.\n *\n * @return {String} The label of the auth token.\n */\nSignonProfile.prototype.getAuthTokenLabel = function() { throw new Error(\"not implemented\"); };\n\n/**\n * The URL for the auth token information.\n *\n * @return {String} The URL for the auth token information.\n */\nSignonProfile.prototype.getAuthTokenInfoURL = function() { throw new Error(\"not implemented\"); };\n\n/**\n * Whether MFA is supported.\n *\n * @return {Boolean} Whether MFA is supported.\n */\nSignonProfile.prototype.getMfaSupported = function() { throw new Error(\"not implemented\"); };\n\n/**\n * Whether an MFA challenge request is required for the first sign-on into this realm.\n *\n * @return {Boolean} Whether an MFA challenge request is required for the first sign-on into this realm.\n */\nSignonProfile.prototype.getMfaChallengeRequiredForFirstSignon = function() { throw new Error(\"not implemented\"); };\n\n\nmodule.exports = SignonProfile;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../util/inherit\");\n\nvar Element = require(\"../../meta/Element\");\nvar UUID = require(\"uuid\");\nvar RequestMessage = require(\"./ResponseMessage\");\n\n/**\n * A request message wrapped in a transaction.\n *\n * @class\n * See \"Section 2.4.6, OFX Spec\"\n */\nfunction TransactionWrappedRequestMessage() {\n  RequestMessage.call(this);\n\n  var UID;\n  if(arguments.length === 1) {\n    UID = arguments[0];\n  } else {\n    UID = UUID.v4();\n  }\n\n  /**\n   * @type String\n   */\n  this.UID = UID;\n\n  /**\n   * @type String\n   */\n  this.clientCookie = null;\n\n  /**\n   * @type String\n   */\n  this.transactionAuthorizationNumber = null;\n}\n\ninherit(TransactionWrappedRequestMessage, \"extends\", RequestMessage);\n\n\n/**\n * UID of this transaction.\n *\n * @return UID of this transaction.\n */\nTransactionWrappedRequestMessage.prototype.getUID = function() {\n  return this.UID;\n};\nElement.add(TransactionWrappedRequestMessage, {name: \"TRNUID\", required: true, order: 0, attributeType: String, readMethod: \"getUID\", writeMethod: \"setUID\"});\n\n\n/**\n * UID of this transaction.\n *\n * @param {String} UID UID of this transaction.\n */\nTransactionWrappedRequestMessage.prototype.setUID = function(UID) {\n  this.UID = UID;\n};\n\n/**\n * Client cookie (echoed back by the response).\n *\n * @return {String} Client cookie (echoed back by the response).\n */\nTransactionWrappedRequestMessage.prototype.getClientCookie = function() {\n  return this.clientCookie;\n};\nElement.add(TransactionWrappedRequestMessage, {name: \"CLTCOOKIE\", order: 10, attributeType: String, readMethod: \"getClientCookie\", writeMethod: \"setClientCookie\"});\n\n/**\n * Client cookie (echoed back by the response).\n *\n * @param {String} clientCookie Client cookie (echoed back by the response).\n */\nTransactionWrappedRequestMessage.prototype.setClientCookie = function(clientCookie) {\n  this.clientCookie = clientCookie;\n};\n\n/**\n * The transaction authorization number.\n *\n * @return {String} The transaction authorization number.\n */\nTransactionWrappedRequestMessage.prototype.getTransactionAuthorizationNumber = function() {\n  return this.transactionAuthorizationNumber;\n};\nElement.add(TransactionWrappedRequestMessage, {name: \"TAN\", order: 20, attributeType: String, readMethod: \"getTransactionAuthorizationNumber\", writeMethod: \"setTransactionAuthorizationNumber\"});\n\n/**\n * The transaction authorization number.\n *\n * @param {String} transactionAuthorizationNumber The transaction authorization number.\n */\nTransactionWrappedRequestMessage.prototype.setTransactionAuthorizationNumber = function(transactionAuthorizationNumber) {\n  this.transactionAuthorizationNumber = transactionAuthorizationNumber;\n};\n\n\n/**\n * Set the wrapped message.\n *\n * @param {M} message The wrapped message.\n */\nTransactionWrappedRequestMessage.prototype.setWrappedMessage = function(/*message*/) { throw new Error(\"not implemented\"); };\n\n\n\nmodule.exports = TransactionWrappedRequestMessage;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../util/inherit\");\n\nvar StatusHolder = require(\"./common/StatusHolder\");\nvar ChildAggregate = require(\"../../meta/ChildAggregate\");\nvar Element = require(\"../../meta/Element\");\nvar ResponseMessage = require(\"./ResponseMessage\");\nvar Status = require(\"./common/Status\");\n\n/**\n * A response message wrapped in a transaction.\n *\n * @class\n * @augments ResponseMessage\n * @augments StatusHolder\n * See \"Section 2.4.6, OFX Spec\"\n */\nfunction TransactionWrappedResponseMessage() {\n  ResponseMessage.call(this);\n\n  /**\n   * @type String\n   */\n  this.UID = null;\n\n  /**\n   * @type String\n   */\n  this.clientCookie = null;\n\n  /**\n   * @type Status\n   */\n  this.status = null;\n}\n\ninherit(TransactionWrappedResponseMessage, \"extends\", ResponseMessage);\ninherit(TransactionWrappedResponseMessage, \"implements\", StatusHolder);\n\n\n/**\n * UID of this transaction.\n *\n * @return {String} UID of this transaction.\n */\nTransactionWrappedResponseMessage.prototype.getUID = function() {\n  return this.UID;\n};\nElement.add(TransactionWrappedResponseMessage, {name: \"TRNUID\", required: true, order: 0, attributeType: String, readMethod: \"getUID\", writeMethod: \"setUID\"});\n\n/**\n * UID of this transaction.\n *\n * @param {String} UID UID of this transaction.\n */\nTransactionWrappedResponseMessage.prototype.setUID = function(UID) {\n  this.UID = UID;\n};\n\n/**\n * Client cookie (echoed back by the response).\n *\n * @return {String} Client cookie (echoed back by the response).\n */\nTransactionWrappedResponseMessage.prototype.getClientCookie = function() {\n  return this.clientCookie;\n};\nElement.add(TransactionWrappedResponseMessage, {name: \"CLTCOOKIE\", order: 20, attributeType: String, readMethod: \"getClientCookie\", writeMethod: \"setClientCookie\"});\n\n/**\n * Client cookie (echoed back by the response).\n *\n * @param {String} clientCookie Client cookie (echoed back by the response).\n */\nTransactionWrappedResponseMessage.prototype.setClientCookie = function(clientCookie) {\n  this.clientCookie = clientCookie;\n};\n\n// Inherited.\nTransactionWrappedResponseMessage.prototype.getStatusHolderName = function() {\n  return this.getResponseMessageName();\n};\n\n// Inherited.\nTransactionWrappedResponseMessage.prototype.getResponseMessageName = function() {\n  var name = \"transaction response\";\n  if (this.getWrappedMessage()) {\n    name = this.getWrappedMessage().getResponseMessageName() + \" transaction\";\n  }\n  else {\n    var AggregateIntrospector = require(\"../../io/AggregateIntrospector\");\n    var aggregateName = AggregateIntrospector.getAggregateName(this.constructor);\n    if (aggregateName) {\n      name = aggregateName + \" transaction\";\n    }\n  }\n\n  return name;\n};\n\n/**\n * Status of the transaction.\n *\n * @return {Status} Status of the transaction.\n */\nTransactionWrappedResponseMessage.prototype.getStatus = function() {\n  return this.status;\n};\nChildAggregate.add(TransactionWrappedResponseMessage, {required: true, order: 10, attributeType: Status, readMethod: \"getStatus\", writeMethod: \"setStatus\"});\n\n/**\n * Status of the transaction.\n *\n * @param {Status} status Status of the transaction.\n */\nTransactionWrappedResponseMessage.prototype.setStatus = function(status) {\n  this.status = status;\n};\n\n/**\n * Get the wrapped message.\n *\n * @return The wrapped message.\n */\nTransactionWrappedResponseMessage.prototype.getWrappedMessage = function() { throw new Error(\"not implemented\"); };\n\nmodule.exports = TransactionWrappedResponseMessage;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * @see \"OFX Spec, Section 11.3.1.1\"\n * @enum\n */\nvar AccountType = {\n\n  CHECKING: \"CHECKING\",\n\n  SAVINGS: \"SAVINGS\",\n\n  MONEYMRKT: \"MONEYMRKT\",\n\n  CREDITLINE: \"CREDITLINE\",\n  \n};\n\n\nmodule.exports = AccountType;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar Element = require(\"../../../meta/Element\");\nvar AccountDetails = require(\"../common/AccountDetails\");\nvar AccountType = require(\"./AccountType\");\n\n/**\n * Base bank account details.\n *\n * @class\n * @augments AccountDetails\n * @see \"OFX Spec, Section 11.3.1\"\n */\nfunction BankAccountDetails () {\n\n  /**\n   * @name BankAccountDetails#bankId\n   * @type String\n   * @access private\n   */\n  this.bankId = null;\n\n  /**\n   * @name BankAccountDetails#branchId\n   * @type String\n   * @access private\n   */\n  this.branchId = null;\n\n  /**\n   * @name BankAccountDetails#accountNumber\n   * @type String\n   * @access private\n   */\n  this.accountNumber = null;\n\n  /**\n   * @name BankAccountDetails#accountType\n   * @type AccountType\n   * @access private\n   */\n  this.accountType = null;\n\n  /**\n   * @name BankAccountDetails#accountKey\n   * @type String\n   * @access private\n   */\n  this.accountKey = null;\n}\n\ninherit(BankAccountDetails, \"implements\", AccountDetails);\n\n\nAggregate.add(\"BankAccountDetails\", BankAccountDetails);\n\n\n/**\n * The routing and transit number.\n *\n * @return {String} The routing and transit number.\n */\nBankAccountDetails.prototype.getBankId = function() {\n  return this.bankId;\n};\nElement.add(BankAccountDetails, {name: \"BANKID\", required: true, order: 0, attributeType: String, readMethod: \"getBankId\", writeMethod: \"setBankId\"});\n\n\n/**\n * The routing and transit number.\n *\n * @param {String} bankId The routing and transit number.\n */\nBankAccountDetails.prototype.setBankId = function(bankId) {\n  this.bankId = bankId;\n};\n\n\n/**\n * The routing and transit number.\n *\n * @return {String} The routing and transit number.\n */\nBankAccountDetails.prototype.getRoutingNumber = function() {\n  return this.getBankId();\n};\n\n\n/**\n * The routing and transit number.\n *\n * @param {String} routingNumber The routing and transit number.\n */\nBankAccountDetails.prototype.setRoutingNumber = function(routingNumber) {\n  this.setBankId(routingNumber);\n};\n\n\n/**\n * The branch id.\n *\n * @return {String} The branch id.\n */\nBankAccountDetails.prototype.getBranchId = function() {\n  return this.branchId;\n};\nElement.add(BankAccountDetails, {name: \"BRANCHID\", order: 10, attributeType: String, readMethod: \"getBranchId\", writeMethod: \"setBranchId\"});\n\n\n/**\n * The branch id.\n *\n * @param {String} branchId The branch id.\n */\nBankAccountDetails.prototype.setBranchId = function(branchId) {\n  this.branchId = branchId;\n};\n\n\n/**\n * The account number.\n *\n * @return {String} The account number.\n */\nBankAccountDetails.prototype.getAccountNumber = function() {\n  return this.accountNumber;\n};\nElement.add(BankAccountDetails, {name: \"ACCTID\", required: true, order: 20, attributeType: String, readMethod: \"getAccountNumber\", writeMethod: \"setAccountNumber\"});\n\n\n/**\n * The account number.\n *\n * @param {String} accountNumber The account number.\n */\nBankAccountDetails.prototype.setAccountNumber = function(accountNumber) {\n  this.accountNumber = accountNumber;\n};\n\n\n/**\n * The account type.\n *\n * @return {AccountType} The account type.\n */\nBankAccountDetails.prototype.getAccountType = function() {\n  return this.accountType;\n};\nElement.add(BankAccountDetails, {name: \"ACCTTYPE\", required: true, order: 30, attributeType: AccountType, readMethod: \"getAccountType\", writeMethod: \"setAccountType\"});\n\n\n/**\n * The account type.\n *\n * @param {AccountType} accountType The account type.\n */\nBankAccountDetails.prototype.setAccountType = function(accountType) {\n  this.accountType = accountType;\n};\n\n\n/**\n * The account key.\n *\n * @return {String} The account key.\n */\nBankAccountDetails.prototype.getAccountKey = function() {\n  return this.accountKey;\n};\nElement.add(BankAccountDetails, {name: \"ACCTKEY\", order: 40, attributeType: String, readMethod: \"getAccountKey\", writeMethod: \"setAccountKey\"});\n\n\n/**\n * The account key.\n *\n * @param {String} accountKey The account key.\n */\nBankAccountDetails.prototype.setAccountKey = function(accountKey) {\n  this.accountKey = accountKey;\n};\n\n\n\n\nmodule.exports = BankAccountDetails;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar Element = require(\"../../../meta/Element\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar AccountInfo = require(\"../common/AccountInfo\");\nvar AccountStatus = require(\"../common/AccountStatus\");\nvar BankAccountDetails = require(\"./BankAccountDetails\");\n\n/**\n * @class\n * @augments AccountInfo\n */\nfunction BankAccountInfo () {\n\n  /**\n   * @name BankAccountInfo#bankAccount\n   * @type BankAccountDetails\n   * @access private\n   */\n  this.bankAccount = null;\n\n  /**\n   * @name BankAccountInfo#supportsTransactionDetailOperations\n   * @type Boolean\n   * @access private\n   */\n  this.supportsTransactionDetailOperations = null;\n\n  /**\n   * @name BankAccountInfo#supportsTransferToOtherAccountOperations\n   * @type Boolean\n   * @access private\n   */\n  this.supportsTransferToOtherAccountOperations = null;\n\n  /**\n   * @name BankAccountInfo#supportsTransferFromOtherAccountOperations\n   * @type Boolean\n   * @access private\n   */\n  this.supportsTransferFromOtherAccountOperations = null;\n\n  /**\n   * @name BankAccountInfo#status\n   * @type AccountStatus\n   * @access private\n   */\n  this.status = null;\n}\n\ninherit(BankAccountInfo, \"implements\", AccountInfo);\n\n\nAggregate.add(\"BANKACCTINFO\", BankAccountInfo);\n\n\n/**\n * The bank account this information is referencing.\n *\n * @return {BankAccountDetails} The bank account this information is referencing.\n */\nBankAccountInfo.prototype.getBankAccount = function() {\n  return this.bankAccount;\n};\nChildAggregate.add(BankAccountInfo, {name: \"BANKACCTFROM\", required: true, order: 0, attributeType: BankAccountDetails, readMethod: \"getBankAccount\", writeMethod: \"setBankAccount\"});\n\n\n/**\n * The bank account this information is referencing.\n *\n * @param {BankAccountDetails} bankAccount The bank account this information is referencing.\n */\nBankAccountInfo.prototype.setBankAccount = function(bankAccount) {\n  this.bankAccount = bankAccount;\n};\n\n\n// Inherited.\nBankAccountInfo.prototype.getAccountDetails = function() {\n  return this.getBankAccount();\n};\n\n\n/**\n * Whether this account supports download of transaction details.\n *\n * @return {Boolean} Whether this account supports download of transaction details.\n */\nBankAccountInfo.prototype.getSupportsTransactionDetailOperations = function() {\n  return this.supportsTransactionDetailOperations;\n};\nElement.add(BankAccountInfo, {name: \"SUPTXDL\", required: true, order: 10, attributeType: Boolean, readMethod: \"getSupportsTransactionDetailOperations\", writeMethod: \"setSupportsTransactionDetailOperations\"});\n\n\n/**\n * Whether this account supports download of transaction details.\n *\n * @param {Boolean} supportsTransactionDetailOperations Whether this account supports download of transaction details.\n */\nBankAccountInfo.prototype.setSupportsTransactionDetailOperations = function(supportsTransactionDetailOperations) {\n  this.supportsTransactionDetailOperations = supportsTransactionDetailOperations;\n};\n\n\n/**\n * Whether this account supports transfer operations to other accounts.\n *\n * @return {Boolean} Whether this account supports transfer operations to other accounts.\n */\nBankAccountInfo.prototype.getSupportsTransferToOtherAccountOperations = function() {\n  return this.supportsTransferToOtherAccountOperations;\n};\nElement.add(BankAccountInfo, {name: \"XFERSRC\", required: true, order: 20, attributeType: Boolean, readMethod: \"getSupportsTransferToOtherAccountOperations\", writeMethod: \"setSupportsTransferToOtherAccountOperations\"});\n\n\n/**\n * Whether this account supports transfer operations to other accounts.\n *\n * @param {Boolean} supportsTransferToOtherAccountOperations Whether this account supports transfer operations to other accounts.\n */\nBankAccountInfo.prototype.setSupportsTransferToOtherAccountOperations = function(supportsTransferToOtherAccountOperations) {\n  this.supportsTransferToOtherAccountOperations = supportsTransferToOtherAccountOperations;\n};\n\n\n/**\n * Whether this account supports transfer operations from other accounts.\n *\n * @return {Boolean} Whether this account supports transfer operations from other accounts.\n */\nBankAccountInfo.prototype.getSupportsTransferFromOtherAccountOperations = function() {\n  return this.supportsTransferFromOtherAccountOperations;\n};\nElement.add(BankAccountInfo, {name: \"XFERDEST\", required: true, order: 30, attributeType: Boolean, readMethod: \"getSupportsTransferFromOtherAccountOperations\", writeMethod: \"setSupportsTransferFromOtherAccountOperations\"});\n\n\n/**\n * Whether this account supports transfer operations from other accounts.\n *\n * @param {Boolean} supportsTransferFromOtherAccountOperations Whether this account supports transfer operations from other accounts.\n */\nBankAccountInfo.prototype.setSupportsTransferFromOtherAccountOperations = function(supportsTransferFromOtherAccountOperations) {\n  this.supportsTransferFromOtherAccountOperations = supportsTransferFromOtherAccountOperations;\n};\n\n\n/**\n * The account status.\n *\n * @return {AccountStatus} The account status.\n */\nBankAccountInfo.prototype.getStatus = function() {\n  return this.status;\n};\nElement.add(BankAccountInfo, {name: \"SVCSTATUS\", required: true, order: 40, attributeType: AccountStatus, readMethod: \"getStatus\", writeMethod: \"setStatus\"});\n\n\n/**\n * The account status.\n *\n * @param {AccountStatus} status The account status.\n */\nBankAccountInfo.prototype.setStatus = function(status) {\n  this.status = status;\n};\n\n\n\n\nmodule.exports = BankAccountInfo;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar StatementRequest = require(\"../common/StatementRequest\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar BankAccountDetails = require(\"./BankAccountDetails\");\n\n/**\n * @class\n * @augments StatementRequest\n */\nfunction BankStatementRequest () {\n  StatementRequest.call(this);\n\n  /**\n   * @name BankStatementRequest#account\n   * @type BankAccountDetails\n   * @access private\n   */\n  this.account = null;\n}\n\ninherit(BankStatementRequest, \"extends\", StatementRequest);\n\n\nAggregate.add(\"STMTRQ\", BankStatementRequest);\n\n\n/**\n * The account details.\n *\n * @return {BankAccountDetails} The account details.\n */\nBankStatementRequest.prototype.getAccount = function() {\n  return this.account;\n};\nChildAggregate.add(BankStatementRequest, {name: \"BANKACCTFROM\", required: true, order: 0, attributeType: BankAccountDetails, readMethod: \"getAccount\", writeMethod: \"setAccount\"});\n\n\n/**\n * The account details.\n *\n * @param {BankAccountDetails} account The account details.\n */\nBankStatementRequest.prototype.setAccount = function(account) {\n  this.account = account;\n};\n\n\n\n\nmodule.exports = BankStatementRequest;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar BankStatementRequest = require(\"./BankStatementRequest\");\nvar TransactionWrappedRequestMessage = require(\"../TransactionWrappedRequestMessage\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\n\n/**\n * @class\n * @augments TransactionWrappedRequestMessage\n */\nfunction BankStatementRequestTransaction () {\n  TransactionWrappedRequestMessage.call(this);\n\n  /**\n   * @name BankStatementRequestTransaction#message\n   * @type BankStatementRequest\n   * @access private\n   */\n  this.message = null;\n}\n\ninherit(BankStatementRequestTransaction, \"extends\", TransactionWrappedRequestMessage);\n\n\nAggregate.add(\"STMTTRNRQ\", BankStatementRequestTransaction);\n\n\n/**\n * The message.\n *\n * @return {BankStatementRequest} The message.\n */\nBankStatementRequestTransaction.prototype.getMessage = function() {\n  return this.message;\n};\nChildAggregate.add(BankStatementRequestTransaction, {required: true, order: 30, attributeType: BankStatementRequest, readMethod: \"getMessage\", writeMethod: \"setMessage\"});\n\n\n/**\n * The message.\n *\n * @param {BankStatementRequest} message The message.\n *\n */\nBankStatementRequestTransaction.prototype.setMessage = function(message) {\n  this.message = message;\n};\n\n\n// Inherited.\nBankStatementRequestTransaction.prototype.setWrappedMessage = function(/*BankStatementRequest*/ message) {\n  this.setMessage(message);\n};\n\n\n\n\nmodule.exports = BankStatementRequestTransaction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar StatementResponse = require(\"../common/StatementResponse\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar BankAccountDetails = require(\"./BankAccountDetails\");\n\n/**\n * @class\n * @augments StatementResponse\n */\nfunction BankStatementResponse () {\n  StatementResponse.call(this);\n\n  /**\n   * @name BankStatementResponse#account\n   * @type BankAccountDetails\n   * @access private\n   */\n  this.account = null;\n}\n\ninherit(BankStatementResponse, \"extends\", StatementResponse);\n\n\nAggregate.add(\"STMTRS\", BankStatementResponse);\n\n\nBankStatementResponse.prototype.getResponseMessageName = function() {\n  return \"bank statement\";\n};\n\n\n/**\n * The account for the statement.\n *\n * @return {BankAccountDetails} The account for the statement.\n */\nBankStatementResponse.prototype.getAccount = function() {\n  return this.account;\n};\nChildAggregate.add(BankStatementResponse, {name:\"BANKACCTFROM\", order: 10, attributeType: BankAccountDetails, readMethod: \"getAccount\", writeMethod: \"setAccount\"});\n\n\n/**\n * The account for the statement.\n *\n * @param {BankAccountDetails} account The account for the statement.\n */\nBankStatementResponse.prototype.setAccount = function(account) {\n  this.account = account;\n};\n\n\n\n\nmodule.exports = BankStatementResponse;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar BankStatementResponse = require(\"./BankStatementResponse\");\nvar TransactionWrappedResponseMessage = require(\"../TransactionWrappedResponseMessage\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\n\n/**\n * @class\n * @augments TransactionWrappedResponseMessage\n */\nfunction BankStatementResponseTransaction () {\n  TransactionWrappedResponseMessage.call(this);\n\n  /**\n   * @name BankStatementResponseTransaction#message\n   * @type BankStatementResponse\n   * @access private\n   */\n  this.message = null;\n}\n\ninherit(BankStatementResponseTransaction, \"extends\", TransactionWrappedResponseMessage);\n\n\nAggregate.add(\"STMTTRNRS\", BankStatementResponseTransaction);\n\n\n/**\n * The message.\n *\n * @return {BankStatementResponse} The message.\n */\nBankStatementResponseTransaction.prototype.getMessage = function() {\n  return this.message;\n};\nChildAggregate.add(BankStatementResponseTransaction, {required: true, order: 30, attributeType: BankStatementResponse, readMethod: \"getMessage\", writeMethod: \"setMessage\"});\n\n\n/**\n * The message.\n *\n * @param {BankStatementResponse} message The message.\n */\nBankStatementResponseTransaction.prototype.setMessage = function(message) {\n  this.message = message;\n};\n\n\n// Inherited.\nBankStatementResponseTransaction.prototype.getWrappedMessage = function() {\n  return this.getMessage();\n};\n\n\n\n\nmodule.exports = BankStatementResponseTransaction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar MessageSetType = require(\"../MessageSetType\");\nvar RequestMessageSet = require(\"../RequestMessageSet\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar BankStatementRequestTransaction = require(\"./BankStatementRequestTransaction\");\n\n/**\n * @class\n * @augments BankingRequestMessageSet\n */\nfunction BankingRequestMessageSet () {\n  RequestMessageSet.call(this);\n\n  /**\n   * @name BankingRequestMessageSet#statementRequest\n   * @type BankStatementRequestTransaction\n   * @access private\n   */\n  this.statementRequest = null;\n}\n\ninherit(BankingRequestMessageSet, \"extends\", RequestMessageSet);\n\n\nAggregate.add(\"BANKMSGSRQV1\", BankingRequestMessageSet);\n\n\nBankingRequestMessageSet.prototype.getType = function() {\n  return MessageSetType.banking;\n};\n\n\n/**\n * The statement request.\n *\n * @return {BankStatementRequestTransaction} The statement request.\n */\nBankingRequestMessageSet.prototype.getStatementRequest = function() {\n  return this.statementRequest;\n};\nChildAggregate.add(BankingRequestMessageSet, {order: 0, attributeType: BankStatementRequestTransaction, readMethod: \"getStatementRequest\", writeMethod: \"setStatementRequest\"});\n\n\n/**\n * The statement request.\n *\n * @param {BankStatementRequestTransaction} statementRequest The statement request.\n */\nBankingRequestMessageSet.prototype.setStatementRequest = function(statementRequest) {\n  this.statementRequest = statementRequest;\n};\n\n\n// Inherited.\nBankingRequestMessageSet.prototype.getRequestMessages = function() {\n  var requestMessages = [];\n  if (this.getStatementRequest()) {\n    requestMessages.push(this.getStatementRequest());\n  }\n  return requestMessages;\n};\n\n\n\n\nmodule.exports = BankingRequestMessageSet;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar MessageSetType = require(\"../MessageSetType\");\nvar ResponseMessageSet = require(\"../ResponseMessageSet\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar BankStatementResponseTransaction = require(\"./BankStatementResponseTransaction\");\n\n/**\n * @class\n * @augments ResponseMessageSet\n */\nfunction BankingResponseMessageSet () {\n  ResponseMessageSet.call(this);\n\n  /**\n   * @name BankingResponseMessageSet#statementResponses\n   * @type BankStatementResponseTransaction[]\n   * @access private\n   */\n  this.statementResponses = null;\n}\n\ninherit(BankingResponseMessageSet, \"extends\", ResponseMessageSet);\n\n\nAggregate.add(\"BANKMSGSRSV1\", BankingResponseMessageSet);\n\n\nBankingResponseMessageSet.prototype.getType = function() {\n  return MessageSetType.banking;\n};\n\n\n/**\n * The statement response list.\n *\n * Most OFX files have a single statement response, except MT2OFX\n * which outputs OFX with multiple statement responses\n * in a single banking response message set.\n *\n * @return {BankStatementResponseTransaction[]} The statement response list.\n */\nBankingResponseMessageSet.prototype.getStatementResponses = function() {\n  return this.statementResponses;\n};\nChildAggregate.add(BankingResponseMessageSet, {order: 0, attributeType: Array, collectionEntryType: BankStatementResponseTransaction, readMethod: \"getStatementResponses\", writeMethod: \"setStatementResponses\"});\n\n\n/**\n * The statement response.\n *\n * @param {BankStatementResponseTransaction[]} statementResponses The statement responses.\n */\nBankingResponseMessageSet.prototype.setStatementResponses = function(statementResponses) {\n  this.statementResponses = statementResponses;\n};\n\n\n// Inherited.\nBankingResponseMessageSet.prototype.getResponseMessages = function() {\n  return [this.statementResponses];\n};\n\n\n/**\n * The first statement response.\n *\n * @return {BankStatementResponseTransaction} the first bank statement response.\n * @deprecated Use getStatementResponses() because sometimes there are multiple responses\n */\nBankingResponseMessageSet.prototype.getStatementResponse = function() {\n  return !this.statementResponses || this.statementResponses.length === 0 ? null : this.statementResponses[0];\n};\n\n\nBankingResponseMessageSet.prototype.setStatementResponse = function(/*BankStatementResponseTransaction*/ statementResponse) {\n  this.statementResponses = [statementResponse];\n};\n\n\n\n\nmodule.exports = BankingResponseMessageSet;\n","\"use strict\";\n\nmodule.exports = {\n  AccountType: require(\"./AccountType\"),\n  BankAccountDetails: require(\"./BankAccountDetails\"),\n  BankAccountInfo: require(\"./BankAccountInfo\"),\n  BankingRequestMessageSet: require(\"./BankingRequestMessageSet\"),\n  BankingResponseMessageSet: require(\"./BankingResponseMessageSet\"),\n  BankStatementRequest: require(\"./BankStatementRequest\"),\n  BankStatementRequestTransaction: require(\"./BankStatementRequestTransaction\"),\n  BankStatementResponse: require(\"./BankStatementResponse\"),\n  BankStatementResponseTransaction: require(\"./BankStatementResponseTransaction\"),\n};\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * Common details about an account.\n *\n * @class\n */\nfunction AccountDetails() {\n}\n\n/**\n * The account number.\n *\n * @return {String} The account number.\n */\nAccountDetails.prototype.getAccountNumber = function() { throw new Error(\"not implemented\"); };\n\n/**\n * The account key.\n *\n * @return {String} The account key.\n */\nAccountDetails.prototype.getAccountKey = function() { throw new Error(\"not implemented\"); };\n\n\nmodule.exports = AccountDetails;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * Marker interface for account information.\n *\n * @class\n */\nfunction AccountInfo() {\n}\n\n/**\n * The account details.\n *\n * @return {AccountDetails} The account details.\n */\nAccountInfo.prototype.getAccountDetails = function() { throw new Error(\"not implemented\"); };\n\n\nmodule.exports = AccountInfo;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * @enum\n */\nvar AccountStatus = {\n\n  /**\n   * Available, but not yet requested.\n   */\n  AVAIL: \"AVAIL\",\n\n  /**\n   * Requested, but not yet available.\n   */\n  PEND: \"PEND\",\n\n  /**\n   * Active.\n   */\n  ACTIVE: \"ACTIVE\",\n\n};\n\n\nmodule.exports = AccountStatus;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar Element = require(\"../../../meta/Element\");\n\n/**\n * @class\n */\nfunction BalanceInfo () {\n\n  /**\n   * @name BalanceInfo#amount\n   * @type double\n   * @access private\n   */\n  this.amount = null;\n\n  /**\n   * @name BalanceInfo#asOfDate\n   * @type Date\n   * @access private\n   */\n  this.asOfDate = null;\n}\n\n\n\nAggregate.add(\"BalanceInfo\", BalanceInfo);\n\n\n/**\n * The amount.\n *\n * @return {double} The amount.\n */\nBalanceInfo.prototype.getAmount = function() {\n  return this.amount;\n};\nElement.add(BalanceInfo, {name: \"BALAMT\", required: true, order: 0, attributeType: Number, readMethod: \"getAmount\", writeMethod: \"setAmount\"});\n\n\n/**\n * The amount.\n *\n * @param {double} amount The amount.\n */\nBalanceInfo.prototype.setAmount = function(amount) {\n  this.amount = amount;\n};\n\n\n/**\n * The as-of date.\n *\n * @return {Date} The as-of date.\n */\nBalanceInfo.prototype.getAsOfDate = function() {\n  return this.asOfDate;\n};\nElement.add(BalanceInfo, {name: \"DTASOF\", required: true, order: 10, attributeType: Date, readMethod: \"getAsOfDate\", writeMethod: \"setAsOfDate\"});\n\n\n/**\n * The as-of date.\n *\n * @param {Date} asOfDate The as-of date.\n */\nBalanceInfo.prototype.setAsOfDate = function(asOfDate) {\n  this.asOfDate = asOfDate;\n};\n\n\n\n\nmodule.exports = BalanceInfo;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar Element = require(\"../../../meta/Element\");\nvar Currency = require(\"./Currency\");\n\n/**\n * @class\n * See \"Section 3.1.3, OFX Spec\"\n */\nfunction BalanceRecord () {\n\n  /**\n   * @name BalanceRecord#name\n   * @type String\n   * @access private\n   */\n  this.name = null;\n\n  /**\n   * @name BalanceRecord#description\n   * @type String\n   * @access private\n   */\n  this.description = null;\n\n  /**\n   * @name BalanceRecord#type\n   * @type Type\n   * @access private\n   */\n  this.type = null;\n\n  /**\n   * @name BalanceRecord#value\n   * @type String\n   * @access private\n   */\n  this.value = null;\n\n  /**\n   * @name BalanceRecord#timestamp\n   * @type Date\n   * @access private\n   */\n  this.timestamp = null;\n\n  /**\n   * @name BalanceRecord#currency\n   * @type Currency\n   * @access private\n   */\n  this.currency = null;\n}\n\n\n\nAggregate.add(\"BAL\", BalanceRecord);\n\n\n/**\n * @enum\n */\nvar Type = BalanceRecord.Type = {\n\n  DOLLAR: \"DOLLAR\",\n\n  PERCENT: \"PERCENT\",\n\n  NUMBER: \"NUMBER\"\n};\n\n/**\n * Name of the balance.\n *\n * @return {String} Name of the balance.\n */\nBalanceRecord.prototype.getName = function() {\n  return this.name;\n};\nElement.add(BalanceRecord, {name: \"NAME\", required: true, order: 0, attributeType: String, readMethod: \"getName\", writeMethod: \"setName\"});\n\n\n/**\n * Name of the balance.\n *\n * @param {String} name Name of the balance.\n */\nBalanceRecord.prototype.setName = function(name) {\n  this.name = name;\n};\n\n\n/**\n * Description of the balance.\n *\n * @return {String} Description of the balance.\n */\nBalanceRecord.prototype.getDescription = function() {\n  return this.description;\n};\nElement.add(BalanceRecord, {name: \"DESC\", required: true, order: 10, attributeType: String, readMethod: \"getDescription\", writeMethod: \"setDescription\"});\n\n\n/**\n * Description of the balance.\n *\n * @param {String} description Description of the balance.\n */\nBalanceRecord.prototype.setDescription = function(description) {\n  this.description = description;\n};\n\n\n/**\n * Type of the balance.\n *\n * @return {Type} Type of the balance.\n */\nBalanceRecord.prototype.getType = function() {\n  return this.type;\n};\nElement.add(BalanceRecord, {name: \"BALTYPE\", required: true, order: 20, attributeType: Type, readMethod: \"getType\", writeMethod: \"setType\"});\n\n\n/**\n * Type of the balance.\n *\n * @param {Type} type Type of the balance.\n */\nBalanceRecord.prototype.setType = function(type) {\n  this.type = type;\n};\n\n\n/**\n * The value of the balance.\n *\n * @return {String} The value of the balance.\n */\nBalanceRecord.prototype.getValue = function() {\n  return this.value;\n};\nElement.add(BalanceRecord, {name: \"VALUE\", required: true, order: 30, attributeType: String, readMethod: \"getValue\", writeMethod: \"setValue\"});\n\n\n/**\n * The value of the balance.\n *\n * @param {String} value The value of the balance.\n */\nBalanceRecord.prototype.setValue = function(value) {\n  this.value = value;\n};\n\n\n/**\n * Timestamp of the balance.\n *\n * @return {Date} Timestamp of the balance.\n */\nBalanceRecord.prototype.getTimestamp = function() {\n  return this.timestamp;\n};\nElement.add(BalanceRecord, {name: \"DTASOF\", order: 40, attributeType: Date, readMethod: \"getTimestamp\", writeMethod: \"setTimestamp\"});\n\n\n/**\n * Timestamp of the balance.\n *\n * @param {Date} timestamp Timestamp of the balance.\n */\nBalanceRecord.prototype.setTimestamp = function(timestamp) {\n  this.timestamp = timestamp;\n};\n\n\n/**\n * Currency.\n *\n * @return {Currency} Currency.\n */\nBalanceRecord.prototype.getCurrency = function() {\n  return this.currency;\n};\nChildAggregate.add(BalanceRecord, {order: 50, attributeType: Currency, readMethod: \"getCurrency\", writeMethod: \"setCurrency\"});\n\n\n/**\n * Currency.\n *\n * @param {Currency} currency Currency.\n */\nBalanceRecord.prototype.setCurrency = function(currency) {\n  this.currency = currency;\n};\n\n\n\n\nmodule.exports = BalanceRecord;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * @enum\n */\nvar CorrectionAction = {\n\n  REPLACE: \"REPLACE\",\n\n  DELETE: \"DELETE\"\n};\n\n\nmodule.exports = CorrectionAction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar Element = require(\"../../../meta/Element\");\n\n/**\n * @class\n * See \"Section 5.2, OFX Spec\"\n */\nfunction Currency () {\n\n  /**\n   * @name Currency#code\n   * @type String\n   * @access private\n   */\n  this.code = \"USD\";\n\n  /**\n   * @name Currency#exchangeRate\n   * @type Float\n   * @access private\n   */\n  this.exchangeRate = null;\n}\n\n\n\nAggregate.add(\"CURRENCY\", Currency);\n\n\n/**\n * The currency code.\n *\n * @return {String} The currency code.\n * @see java.util.Currency#getCurrencyCode()\n */\nCurrency.prototype.getCode = function() {\n  return this.code;\n};\nElement.add(Currency, {name: \"CURSYM\", required: true, order: 0, attributeType: String, readMethod: \"getCode\", writeMethod: \"setCode\"});\n\n\n/**\n * The currency code\n *\n * @param {String} code The currency code\n */\nCurrency.prototype.setCode = function(code) {\n  this.code = code;\n};\n\n\n/**\n * The exchange rate.\n *\n * @return {Float} The exchange rate.\n */\nCurrency.prototype.getExchangeRate = function() {\n  return this.exchangeRate;\n};\nElement.add(Currency, {name: \"CURRATE\", required: true, order: 10, attributeType: Number, readMethod: \"getExchangeRate\", writeMethod: \"setExchangeRate\"});\n\n\n/**\n * The exchange rate.\n *\n * @param {Float} exchangeRate The exchange rate.\n */\nCurrency.prototype.setExchangeRate = function(exchangeRate) {\n  this.exchangeRate = exchangeRate;\n};\n\n\n\n\nmodule.exports = Currency;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar Element = require(\"../../../meta/Element\");\n\n/**\n * @class\n */\nfunction Payee () {\n\n  /**\n   * @name Payee#name\n   * @type String\n   * @access private\n   */\n  this.name = null;\n\n  /**\n   * @name Payee#address1\n   * @type String\n   * @access private\n   */\n  this.address1 = null;\n\n  /**\n   * @name Payee#address2\n   * @type String\n   * @access private\n   */\n  this.address2 = null;\n\n  /**\n   * @name Payee#address3\n   * @type String\n   * @access private\n   */\n  this.address3 = null;\n\n  /**\n   * @name Payee#city\n   * @type String\n   * @access private\n   */\n  this.city = null;\n\n  /**\n   * @name Payee#state\n   * @type String\n   * @access private\n   */\n  this.state = null;\n\n  /**\n   * @name Payee#zip\n   * @type String\n   * @access private\n   */\n  this.zip = null;\n\n  /**\n   * @name Payee#country\n   * @type String\n   * @access private\n   */\n  this.country = null;\n\n  /**\n   * @name Payee#phone\n   * @type String\n   * @access private\n   */\n  this.phone = null;\n}\n\n\n\nAggregate.add(\"PAYEE\", Payee);\n\n\n/**\n * The name of the payee.\n *\n * @return {String} The name of the payee.\n */\nPayee.prototype.getName = function() {\n  return this.name;\n};\nElement.add(Payee, {name: \"NAME\", order: 30, attributeType: String, readMethod: \"getName\", writeMethod: \"setName\"});\n\n\n/**\n * The name of the payee.\n *\n * @param {String} name The name of the payee.\n */\nPayee.prototype.setName = function(name) {\n  this.name = name;\n};\n\n\n/**\n * The address of the payee.\n *\n * @return {String} The address of the payee.\n */\nPayee.prototype.getAddress1 = function() {\n  return this.address1;\n};\nElement.add(Payee, {name: \"ADDR1\", required: true, order: 40, attributeType: String, readMethod: \"getAddress1\", writeMethod: \"setAddress1\"});\n\n\n/**\n * The address of the payee.\n *\n * @param {String} address1 The address of the payee.\n */\nPayee.prototype.setAddress1 = function(address1) {\n  this.address1 = address1;\n};\n\n\n/**\n * The address of the payee.\n *\n * @return {String} The address of the payee.\n */\nPayee.prototype.getAddress2 = function() {\n  return this.address2;\n};\nElement.add(Payee, {name: \"ADDR2\", order: 50, attributeType: String, readMethod: \"getAddress2\", writeMethod: \"setAddress2\"});\n\n\n/**\n * The address of the payee.\n *\n * @param {String} address2 The address of the payee.\n */\nPayee.prototype.setAddress2 = function(address2) {\n  this.address2 = address2;\n};\n\n\n/**\n * The address of the payee.\n *\n * @return {String} The address of the payee.\n */\nPayee.prototype.getAddress3 = function() {\n  return this.address3;\n};\nElement.add(Payee, {name: \"ADDR3\", order: 60, attributeType: String, readMethod: \"getAddress3\", writeMethod: \"setAddress3\"});\n\n\n/**\n * The address of the payee.\n *\n * @param {String} address3 The address of the payee.\n */\nPayee.prototype.setAddress3 = function(address3) {\n  this.address3 = address3;\n};\n\n\n/**\n * The city of the payee.\n *\n * @return {String} The city of the payee.\n */\nPayee.prototype.getCity = function() {\n  return this.city;\n};\nElement.add(Payee, {name: \"CITY\", required: true, order: 70, attributeType: String, readMethod: \"getCity\", writeMethod: \"setCity\"});\n\n\n/**\n * The city of the payee.\n *\n * @param {String} city The city of the payee.\n */\nPayee.prototype.setCity = function(city) {\n  this.city = city;\n};\n\n\n/**\n * The state of this payee.\n *\n * @return {String} The state of this payee.\n */\nPayee.prototype.getState = function() {\n  return this.state;\n};\nElement.add(Payee, {name: \"STATE\", required: true, order: 80, attributeType: String, readMethod: \"getState\", writeMethod: \"setState\"});\n\n\n/**\n * The state of this payee.\n *\n * @param {String} state The state of this payee.\n */\nPayee.prototype.setState = function(state) {\n  this.state = state;\n};\n\n\n/**\n * The postal code of this payee.\n *\n * @return {String} The postal code of this payee.\n */\nPayee.prototype.getZip = function() {\n  return this.zip;\n};\nElement.add(Payee, {name: \"POSTALCODE\", required: true, order: 90, attributeType: String, readMethod: \"getZip\", writeMethod: \"setZip\"});\n\n\n/**\n * The postal code of this payee.\n *\n * @param {String} zip The postal code of this payee.\n */\nPayee.prototype.setZip = function(zip) {\n  this.zip = zip;\n};\n\n\n/**\n * The country code for this payee.\n *\n * @return {String} The country code for this payee.\n * @see java.util.Locale#getISO3Country()\n */\nPayee.prototype.getCountry = function() {\n  return this.country;\n};\nElement.add(Payee, {name: \"COUNTRY\", required: true, order: 100, attributeType: String, readMethod: \"getCountry\", writeMethod: \"setCountry\"});\n\n\n/**\n * The country code for this payee.\n *\n * @param {String} country The country code for this payee.\n */\nPayee.prototype.setCountry = function(country) {\n  this.country = country;\n};\n\n\n/**\n * The phone number.\n *\n * @return {String} The phone number.\n */\nPayee.prototype.getPhone = function() {\n  return this.phone;\n};\nElement.add(Payee, {name: \"PHONE\", order: 110, attributeType: String, readMethod: \"getPhone\", writeMethod: \"setPhone\"});\n\n\n/**\n * The phone number.\n *\n * @param {String} phone The phone number.\n */\nPayee.prototype.setPhone = function(phone) {\n  this.phone = phone;\n};\n\n\n\n\nmodule.exports = Payee;\n","/*\n * Copyright 2012 TheStash\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * Day of week used in \"PROCDAYSOFF\" lists.\n *\n * @enum\n * @see \"OFX Spec, Section 13.6.2\"\n */\nvar ProcessorDayOff = {\n  MONDAY: \"MONDAY\",\n  TUESDAY: \"TUESDAY\",\n  WEDNESDAY: \"WEDNESDAY\",\n  THURSDAY: \"THURSDAY\",\n  FRIDAY: \"FRIDAY\",\n  SATURDAY: \"SATURDAY\",\n  SUNDAY: \"SUNDAY\",\n\n  fromOfx: function(/*String*/ ofxVal) {\n    if (\"MONDAY\" === ofxVal) {\n      return this.MONDAY;\n    } else if (\"TUESDAY\" === ofxVal) {\n      return this.TUESDAY;\n    } else if (\"WEDNESDAY\" === ofxVal) {\n      return this.WEDNESDAY;\n    } else if (\"THURSDAY\" === ofxVal) {\n      return this.THURSDAY;\n    } else if (\"FRIDAY\" === ofxVal) {\n      return this.FRIDAY;\n    } else if (\"SATURDAY\" === ofxVal) {\n      return this.SATURDAY;\n    } else if (\"SUNDAY\" === ofxVal) {\n      return this.SUNDAY;\n    } else {\n      return null;\n    }\n  }\n};\n\n\nmodule.exports = ProcessorDayOff;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar Element = require(\"../../../meta/Element\");\n\n/**\n * @class\n */\nfunction StatementRange () {\n\n  /**\n   * @name StatementRange#start\n   * @type Date\n   * @access private\n   */\n  this.start = null;\n\n  /**\n   * @name StatementRange#end\n   * @type Date\n   * @access private\n   */\n  this.end = null;\n\n  /**\n   * @name StatementRange#includeTransactions\n   * @type Boolean\n   * @access private\n   */\n  this.includeTransactions = Boolean.TRUE;\n}\n\n\n\nAggregate.add(\"INCTRAN\", StatementRange);\n\n\n/**\n * The start of the statement range.\n *\n * @return {Date} The start of the statement range.\n */\nStatementRange.prototype.getStart = function() {\n  return this.start;\n};\nElement.add(StatementRange, {name: \"DTSTART\", order: 0, attributeType: Date, readMethod: \"getStart\", writeMethod: \"setStart\"});\n\n\n/**\n * The start of the statement range.\n *\n * @param {Date} start The start of the statement range.\n */\nStatementRange.prototype.setStart = function(start) {\n  this.start = start;\n};\n\n\n/**\n * The end of the statement range.\n *\n * @return {Date} The end of the statement range.\n */\nStatementRange.prototype.getEnd = function() {\n  return this.end;\n};\nElement.add(StatementRange, {name: \"DTEND\", order: 10, attributeType: Date, readMethod: \"getEnd\", writeMethod: \"setEnd\"});\n\n\n/**\n * The end of the statement range.\n *\n * @param {Date} end The end of the statement range.\n */\nStatementRange.prototype.setEnd = function(end) {\n  this.end = end;\n};\n\n\n/**\n * Whether to include transactions.\n *\n * @return {Boolean} Whether to include transactions.\n */\nStatementRange.prototype.getIncludeTransactions = function() {\n  return this.includeTransactions;\n};\nElement.add(StatementRange, {name: \"INCLUDE\", required: true, order: 20, attributeType: Boolean, readMethod: \"getIncludeTransactions\", writeMethod: \"setIncludeTransactions\"});\n\n\n/**\n * Whether to include transactions.\n *\n * @param {Boolean} includeTransactions Whether to include transactions.\n */\nStatementRange.prototype.setIncludeTransactions = function(includeTransactions) {\n  this.includeTransactions = includeTransactions;\n};\n\n\n\n\nmodule.exports = StatementRange;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar RequestMessage = require(\"../RequestMessage\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar StatementRange = require(\"./StatementRange\");\n\n/**\n * @class\n * @augments RequestMessage\n */\nfunction StatementRequest () {\n  RequestMessage.call(this);\n\n  /**\n   * @name StatementRequest#statementRange\n   * @type StatementRange\n   * @access private\n   */\n  this.statementRange = null;\n}\n\ninherit(StatementRequest, \"extends\", RequestMessage);\n\n\nAggregate.add(\"STMTRQ\", StatementRequest);\n\n\n/**\n * The statement range.\n *\n * @return {StatementRange} The statement range.\n */\nStatementRequest.prototype.getStatementRange = function() {\n  return this.statementRange;\n};\nChildAggregate.add(StatementRequest, {name: \"INCTRAN\", required: false, order: 10, attributeType: StatementRange, readMethod: \"getStatementRange\", writeMethod: \"setStatementRange\"});\n\n\n/**\n * The statement range.\n *\n * @param {StatementRange} statementRange The statement range.\n */\nStatementRequest.prototype.setStatementRange = function(statementRange) {\n  this.statementRange = statementRange;\n};\n\n\n\n\nmodule.exports = StatementRequest;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar ResponseMessage = require(\"../ResponseMessage\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar Element = require(\"../../../meta/Element\");\nvar AccountStatement = require(\"../../../client/AccountStatement\");\nvar TransactionList = require(\"./TransactionList\");\nvar BalanceInfo = require(\"./BalanceInfo\");\n\n/**\n * @class\n * @augments ResponseMessage\n * @augments AccountStatement\n */\nfunction StatementResponse () {\n  ResponseMessage.call(this);\n\n  /**\n   * @name StatementResponse#currencyCode\n   * @type String\n   * @access private\n   */\n  this.currencyCode = \"USD\";\n\n  /**\n   * @name StatementResponse#transactionList\n   * @type TransactionList\n   * @access private\n   */\n  this.transactionList = null;\n\n  /**\n   * @name StatementResponse#ledgerBalance\n   * @type BalanceInfo\n   * @access private\n   */\n  this.ledgerBalance = null;\n\n  /**\n   * @name StatementResponse#availableBalance\n   * @type BalanceInfo\n   * @access private\n   */\n  this.availableBalance = null;\n\n  /**\n   * @name StatementResponse#marketingInfo\n   * @type String\n   * @access private\n   */\n  this.marketingInfo = null;\n}\n\ninherit(StatementResponse, \"extends\", ResponseMessage);\ninherit(StatementResponse, \"implements\", AccountStatement);\n\n\n\n\n/**\n * The currency code.\n *\n * @return {String} The currency code.\n * @see java.util.Currency#getCurrencyCode()\n */\nStatementResponse.prototype.getCurrencyCode = function() {\n  return this.currencyCode;\n};\nElement.add(StatementResponse, {name: \"CURDEF\", required: true, order: 0, attributeType: String, readMethod: \"getCurrencyCode\", writeMethod: \"setCurrencyCode\"});\n\n\n/**\n * The currency code.\n *\n * @param {String} currencyCode The currency code.\n */\nStatementResponse.prototype.setCurrencyCode = function(currencyCode) {\n  this.currencyCode = currencyCode;\n};\n\n\n/**\n * The transaction list.\n *\n * @return {TransactionList} The transaction list.\n */\nStatementResponse.prototype.getTransactionList = function() {\n  return this.transactionList;\n};\nChildAggregate.add(StatementResponse, {order: 20, attributeType: TransactionList, readMethod: \"getTransactionList\", writeMethod: \"setTransactionList\"});\n\n\n/**\n * The transaction list.\n *\n * @param {TransactionList} transactionList The transaction list.\n */\nStatementResponse.prototype.setTransactionList = function(transactionList) {\n  this.transactionList = transactionList;\n};\n\n\n/**\n * The ledger balance.\n *\n * @return {BalanceInfo} The ledger balance.\n */\nStatementResponse.prototype.getLedgerBalance = function() {\n  return this.ledgerBalance;\n};\nChildAggregate.add(StatementResponse, {name: \"LEDGERBAL\", order: 30, attributeType: BalanceInfo, readMethod: \"getLedgerBalance\", writeMethod: \"setLedgerBalance\"});\n\n\n/**\n * The ledger balance.\n *\n * @param {BalanceInfo} ledgerBalance The ledger balance.\n */\nStatementResponse.prototype.setLedgerBalance = function(ledgerBalance) {\n  this.ledgerBalance = ledgerBalance;\n};\n\n\n/**\n * The available balance.\n *\n * @return {BalanceInfo} The available balance.\n */\nStatementResponse.prototype.getAvailableBalance = function() {\n  return this.availableBalance;\n};\nChildAggregate.add(StatementResponse, {name: \"AVAILBAL\", order: 40, attributeType: BalanceInfo, readMethod: \"getAvailableBalance\", writeMethod: \"setAvailableBalance\"});\n\n\n/**\n * The available balance.\n *\n * @param {BalanceInfo} availableBalance The available balance.\n */\nStatementResponse.prototype.setAvailableBalance = function(availableBalance) {\n  this.availableBalance = availableBalance;\n};\n\n\n/**\n * Marketing information. (?)\n *\n * @return {String} Marketing information.\n */\nStatementResponse.prototype.getMarketingInfo = function() {\n  return this.marketingInfo;\n};\nElement.add(StatementResponse, {name: \"MKTGINFO\", order: 50, attributeType: String, readMethod: \"getMarketingInfo\", writeMethod: \"setMarketingInfo\"});\n\n\n/**\n * Marketing information. (?)\n *\n * @param {String} marketingInfo Marketing information.\n */\nStatementResponse.prototype.setMarketingInfo = function(marketingInfo) {\n  this.marketingInfo = marketingInfo;\n};\n\n\n\n\nmodule.exports = StatementResponse;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar Element = require(\"../../../meta/Element\");\nvar StatusCode = require(\"./StatusCode\");\n\n/**\n * Transaction status element.\n *\n * @class\n * See \"Section 3.1.4, OFX Spec\"\n */\nfunction Status () {\n\n  /**\n   * @name Status#code\n   * @type StatusCode\n   * @access private\n   */\n  this.code = Status.KnownCode.SUCCESS;\n\n  /**\n   * @name Status#severity\n   * @type Severity\n   * @access private\n   */\n  this.severity = null;\n\n  /**\n   * @name Status#message\n   * @type String\n   * @access private\n   */\n  this.message = null;\n}\n\n\n\nAggregate.add(\"STATUS\", Status);\n\n\nvar Severity = Status.Severity = {\n  INFO: 0,\n  WARN: 1,\n  ERROR: 2\n};\n\nStatus.KnownCode = function(/*int*/ code, /*String*/ message, /*Severity*/ defaultSeverity) {\n\n  /**\n   * @name Status.KnownCode#code\n   * @type int\n   * @access private\n   */\n  this.code = code;\n\n  /**\n   * @name Status.KnownCode#message\n   * @type String\n   * @access private\n   */\n  this.message = message;\n\n  /**\n   * @name Status.KnownCode#defaultSeverity\n   * @type Severity\n   * @access private\n   */\n  this.defaultSeverity = defaultSeverity;\n};\n\ninherit(Status.KnownCode, \"implements\", StatusCode);\n\n\nStatus.KnownCode.SUCCESS = new Status.KnownCode(0, \"Success\", Severity.INFO);\nStatus.KnownCode.CLIENT_UP_TO_DATE = new Status.KnownCode(1, \"Client is up-to-date\", Severity.INFO);\nStatus.KnownCode.GENERAL_ERROR = new Status.KnownCode(2000, \"General error.\", Severity.ERROR);\nStatus.KnownCode.GENERAL_ACCOUNT_ERROR = new Status.KnownCode(2002, \"General account error.\", Severity.ERROR);\nStatus.KnownCode.ACCOUNT_NOT_FOUND = new Status.KnownCode(2003, \"Account not found.\", Severity.ERROR);\nStatus.KnownCode.ACCOUNT_CLOSED = new Status.KnownCode(2004, \"Account closed.\", Severity.ERROR);\nStatus.KnownCode.ACCOUNT_NOT_AUTHORIZED = new Status.KnownCode(2005, \"Account not authorized.\", Severity.ERROR);\nStatus.KnownCode.DATE_TOO_SOON = new Status.KnownCode(2014, \"Date too soon\", Severity.ERROR);\nStatus.KnownCode.DUPLICATE_REQUEST = new Status.KnownCode(2019, \"Duplicate request.\", Severity.ERROR);\nStatus.KnownCode.UNSUPPORTED_VERSION = new Status.KnownCode(2021, \"Unsupported version\", Severity.ERROR);\nStatus.KnownCode.INVALID_TAN = new Status.KnownCode(2022, \"Invalid transaction authorization number.\", Severity.ERROR);\nStatus.KnownCode.MFA_CHALLENGE_REQUIRED = new Status.KnownCode(3000, \"Further authentication required.\", Severity.ERROR);\nStatus.KnownCode.MFA_CHALLENGE_FAILED = new Status.KnownCode(3001, \"MFA failed.\", Severity.ERROR);\nStatus.KnownCode.PASSWORD_CHANGE_REQUIRED = new Status.KnownCode(15000, \"Password change required.\", Severity.INFO);\nStatus.KnownCode.SIGNON_INVALID = new Status.KnownCode(15500, \"Invalid signon\", Severity.ERROR);\nStatus.KnownCode.CUSTOMER_ACCOUNT_IN_USE = new Status.KnownCode(15501, \"Customer account in use.\", Severity.ERROR);\nStatus.KnownCode.PASSWORD_LOCKED = new Status.KnownCode(15502, \"Password locked.\", Severity.ERROR);\nStatus.KnownCode.INVALID_CLIENT_UID = new Status.KnownCode(15510, \"Invalid client UID.\", Severity.ERROR);\nStatus.KnownCode.CONTACT_FI = new Status.KnownCode(15511, \"User must contact FI.\", Severity.ERROR);\nStatus.KnownCode.AUTHTOKEN_REQUIRED = new Status.KnownCode(15512, \"Auth token required.\", Severity.ERROR);\nStatus.KnownCode.INVALID_AUTHTOKEN = new Status.KnownCode(15513, \"Invalid auth token.\", Severity.ERROR);\nStatus.KnownCode.NO_DATA = new Status.KnownCode(14701, \"No Tax Data for Account.\", Severity.ERROR);\nStatus.KnownCode.DB_EXCEPTION = new Status.KnownCode(14702,\"Database error has occured.\",Severity.ERROR);\nStatus.KnownCode.NO_TAXSUPPORT = new Status.KnownCode(14703,\"This Tax Year is not supported.\",Severity.ERROR);\n\n/**\n * @returns int\n */\nStatus.KnownCode.prototype.getCode = function() {\n  return this.code;\n};\n\n/**\n * @returns String\n */\nStatus.KnownCode.prototype.getMessage = function() {\n  return this.message;\n};\n\n/**\n * @returns Severity\n */\nStatus.KnownCode.prototype.getDefaultSeverity = function() {\n  return this.defaultSeverity;\n};\n\n/**\n * @param {int} code\n * @returns KnownCode\n */\nStatus.KnownCode.fromCode = function(code) {\n  for (var key in Status.KnownCode) {\n    var value = Status.KnownCode[key];\n    if (value instanceof Status.KnownCode && value.getCode() == code) {\n      return value;\n    }\n  }\n  return null;\n};\n\n/**\n * @returns String\n */\nStatus.KnownCode.prototype.toString = function() {\n  return this.code.toString();\n};\n\n/**\n * Status code.\n *\n * @return {StatusCode} The status code.\n */\nStatus.prototype.getCode = function() {\n  return this.code;\n};\nElement.add(Status, {name: \"CODE\", required: true, order: 0, attributeType: StatusCode, readMethod: \"getCode\", writeMethod: \"setCode\"});\n\n\n/**\n * Status code.\n *\n * @param {StatusCode} code Status code.\n */\nStatus.prototype.setCode = function(code) {\n  this.code = code;\n  if (!this.severity) {\n    this.severity = code.getDefaultSeverity();\n  }\n};\n\n\n/**\n * The severity.\n *\n * @return {Severity} The severity.\n */\nStatus.prototype.getSeverity = function() {\n  return this.severity;\n};\nElement.add(Status, {name: \"SEVERITY\", required: true, order: 10, attributeType: Severity, readMethod: \"getSeverity\", writeMethod: \"setSeverity\"});\n\n\n/**\n * The severity.\n *\n * @param {Severity} severity The severity.\n */\nStatus.prototype.setSeverity = function(severity) {\n  this.severity = severity;\n};\n\n\n/**\n * Server-supplied message.\n *\n * @return {String} Server-supplied message.\n */\nStatus.prototype.getMessage = function() {\n  return this.message;\n};\nElement.add(Status, {name: \"MESSAGE\", order: 20, attributeType: String, readMethod: \"getMessage\", writeMethod: \"setMessage\"});\n\n\n/**\n * Server-supplied message.\n *\n * @param {String} message Server-supplied message.\n */\nStatus.prototype.setMessage = function(message) {\n  this.message = message;\n};\n\n\n\n\nmodule.exports = Status;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * @class\n */\nfunction StatusCode() {\n}\n\nStatusCode.prototype.getCode = function() { throw new Error(\"not implemented\"); };\n\nStatusCode.prototype.getMessage = function() { throw new Error(\"not implemented\"); };\n\nStatusCode.prototype.getDefaultSeverity = function() { throw new Error(\"not implemented\"); };\n\n\nmodule.exports = StatusCode;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * A status holder (usually applied to a response).\n *\n * @class\n */\nfunction StatusHolder() {\n}\n\n/**\n * The name of this status holder (for error reporting).\n *\n * @return {String} The name of this status holder (for error reporting).\n */\nStatusHolder.prototype.getStatusHolderName = function() { throw new Error(\"not implemented\"); };\n\n/**\n * Get the status.\n *\n * @return {Status} The status.\n */\nStatusHolder.prototype.getStatus = function() { throw new Error(\"not implemented\"); };\n\n\nmodule.exports = StatusHolder;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar RequestMessage = require(\"../RequestMessage\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\n\n/**\n * @class\n * @augments ResponseMessage\n */\nfunction T1099Request () {\n  RequestMessage.call(this);\n}\n\ninherit(T1099Request, \"extends\", RequestMessage);\n\n\nAggregate.add(\"STMTRQ\", T1099Request);\n\n\n\n\nmodule.exports = T1099Request;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar ResponseMessage = require(\"../ResponseMessage\");\n\n/**\n * @class\n * @augments ResponseMessage\n */\nfunction T1099Response () {\n  ResponseMessage.call(this);\n}\n\ninherit(T1099Response, \"extends\", ResponseMessage);\n\n\n\n\n\n\nmodule.exports = T1099Response;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar Element = require(\"../../../meta/Element\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar TransactionType = require(\"./TransactionType\");\nvar CorrectionAction = require(\"./CorrectionAction\");\nvar Payee = require(\"./Payee\");\nvar BankAccountDetails = require(\"../banking/BankAccountDetails\");\nvar CreditCardAccountDetails = require(\"../creditcard/CreditCardAccountDetails\");\nvar Currency = require(\"./Currency\");\n\n/**\n * @class\n */\nfunction Transaction () {\n\n  /**\n   * @name Transaction#transactionType\n   * @type TransactionType\n   * @access private\n   */\n  this.transactionType = null;\n\n  /**\n   * @name Transaction#datePosted\n   * @type Date\n   * @access private\n   */\n  this.datePosted = null;\n\n  /**\n   * @name Transaction#dateInitiated\n   * @type Date\n   * @access private\n   */\n  this.dateInitiated = null;\n\n  /**\n   * @name Transaction#dateAvailable\n   * @type Date\n   * @access private\n   */\n  this.dateAvailable = null;\n\n  /**\n   * @name Transaction#amount\n   * @type BigDecimal\n   * @access private\n   */\n  this.amount = null;\n\n  /**\n   * @name Transaction#id\n   * @type String\n   * @access private\n   */\n  this.id = null;\n\n  /**\n   * @name Transaction#correctionId\n   * @type String\n   * @access private\n   */\n  this.correctionId = null;\n\n  /**\n   * @name Transaction#correctionAction\n   * @type CorrectionAction\n   * @access private\n   */\n  this.correctionAction = null;\n\n  /**\n   * @name Transaction#tempId\n   * @type String\n   * @access private\n   */\n  this.tempId = null;\n\n  /**\n   * @name Transaction#checkNumber\n   * @type String\n   * @access private\n   */\n  this.checkNumber = null;\n\n  /**\n   * @name Transaction#referenceNumber\n   * @type String\n   * @access private\n   */\n  this.referenceNumber = null;\n\n  /**\n   * @name Transaction#standardIndustrialCode\n   * @type String\n   * @access private\n   */\n  this.standardIndustrialCode = null;\n\n  /**\n   * @name Transaction#payeeId\n   * @type String\n   * @access private\n   */\n  this.payeeId = null;\n\n  /**\n   * @name Transaction#name\n   * @type String\n   * @access private\n   */\n  this.name = null;\n\n  /**\n   * @name Transaction#payee\n   * @type Payee\n   * @access private\n   */\n  this.payee = null;\n\n  /**\n   * @name Transaction#bankAccountTo\n   * @type BankAccountDetails\n   * @access private\n   */\n  this.bankAccountTo = null;\n\n  /**\n   * @name Transaction#creditCardAccountTo\n   * @type CreditCardAccountDetails\n   * @access private\n   */\n  this.creditCardAccountTo = null;\n\n  /**\n   * @name Transaction#memo\n   * @type String\n   * @access private\n   */\n  this.memo = null;\n\n  /**\n   * @name Transaction#currency\n   * @type Currency\n   * @access private\n   */\n  this.currency = null;\n\n  /**\n   * @name Transaction#originalCurrency\n   * @type Currency\n   * @access private\n   */\n  this.originalCurrency = null;\n}\n\n\n\nAggregate.add(\"STMTTRN\", Transaction);\n\n\n/**\n * The transaction type.\n *\n * @return {TransactionType} The transaction type.\n */\nTransaction.prototype.getTransactionType = function() {\n  return this.transactionType;\n};\nElement.add(Transaction, {name: \"TRNTYPE\", required: true, order: 0, attributeType: TransactionType, readMethod: \"getTransactionType\", writeMethod: \"setTransactionType\"});\n\n\n/**\n * The transaction type.\n *\n * @param {TransactionType} transactionType The transaction type.\n */\nTransaction.prototype.setTransactionType = function(transactionType) {\n  this.transactionType = transactionType;\n};\n\n\n/**\n * The date the transaction was posted.\n *\n * @return {Date} The date the transaction was posted.\n */\nTransaction.prototype.getDatePosted = function() {\n  return this.datePosted;\n};\nElement.add(Transaction, {name: \"DTPOSTED\", required: true, order: 10, attributeType: Date, readMethod: \"getDatePosted\", writeMethod: \"setDatePosted\"});\n\n\n/**\n * The date the transaction was posted.\n *\n * @param {Date} datePosted The date the transaction was posted.\n */\nTransaction.prototype.setDatePosted = function(datePosted) {\n  this.datePosted = datePosted;\n};\n\n\n/**\n * The date the transaction was initiated.\n *\n * @return {Date} The date the transaction was initiated.\n */\nTransaction.prototype.getDateInitiated = function() {\n  return this.dateInitiated;\n};\nElement.add(Transaction, {name: \"DTUSER\", order: 20, attributeType: Date, readMethod: \"getDateInitiated\", writeMethod: \"setDateInitiated\"});\n\n\n/**\n * The date the transaction was initiated.\n *\n * @param {Date} dateInitiated The date the transaction was initiated.\n */\nTransaction.prototype.setDateInitiated = function(dateInitiated) {\n  this.dateInitiated = dateInitiated;\n};\n\n\n/**\n * The date the funds are available.\n *\n * @return {Date} The date the funds are available.\n */\nTransaction.prototype.getDateAvailable = function() {\n  return this.dateAvailable;\n};\nElement.add(Transaction, {name: \"DTAVAIL\", order: 30, attributeType: Date, readMethod: \"getDateAvailable\", writeMethod: \"setDateAvailable\"});\n\n\n/**\n * The date the funds are available.\n *\n * @param {Date} dateAvailable The date the funds are available.\n */\nTransaction.prototype.setDateAvailable = function(dateAvailable) {\n  this.dateAvailable = dateAvailable;\n};\n\n\n/**\n * The transaction amount.\n *\n * @return {Double} The transaction amount.\n */\nTransaction.prototype.getAmount = function() {\n  return this.amount;\n};\n\n\n/**\n * The transaction amount.\n *\n * @param {Double} amount The transaction amount.\n */\nTransaction.prototype.setAmount = function(amount) {\n  this.amount = amount;\n};\n\n\n/**\n * The transaction amount.\n *\n * @return {BigDecimal} The transaction amount.\n */\nTransaction.prototype.getBigDecimalAmount = function() {\n  return this.amount;\n};\nElement.add(Transaction, {name: \"TRNAMT\", required: true, order: 40, attributeType: Number, readMethod: \"getBigDecimalAmount\", writeMethod: \"setBigDecimalAmount\"});\n\n\n/**\n * The transaction amount.\n *\n * @param {BigDecimal} amount The transaction amount.\n */\nTransaction.prototype.setBigDecimalAmount = function(amount) {\n  this.amount = amount;\n};\n\n\n/**\n * The transaction id (server-assigned).\n *\n * @return {String} The transaction id (server-assigned).\n */\nTransaction.prototype.getId = function() {\n  return this.id;\n};\nElement.add(Transaction, {name: \"FITID\", required: true, order: 50, attributeType: String, readMethod: \"getId\", writeMethod: \"setId\"});\n\n\n/**\n * The transaction id (server-assigned).\n *\n * @param {String} id The transaction id (server-assigned).\n */\nTransaction.prototype.setId = function(id) {\n  this.id = id;\n};\n\n\n/**\n * The id of the transaction that this is correcting.\n *\n * @return {String} The id of the transaction that this is correcting.\n */\nTransaction.prototype.getCorrectionId = function() {\n  return this.correctionId;\n};\nElement.add(Transaction, {name: \"CORRECTFITID\", order: 60, attributeType: String, readMethod: \"getCorrectionId\", writeMethod: \"setCorrectionId\"});\n\n\n/**\n * The id of the transaction that this is correcting.\n *\n * @param {String} correctionId The id of the transaction that this is correcting.\n */\nTransaction.prototype.setCorrectionId = function(correctionId) {\n  this.correctionId = correctionId;\n};\n\n\n/**\n * The action to take on the {@link Transaction#getCorrectionId() corrected transaction}.\n *\n * @return {CorrectionAction} The action to take on the {@link Transaction#getCorrectionId() corrected transaction}.\n */\nTransaction.prototype.getCorrectionAction = function() {\n  return this.correctionAction;\n};\nElement.add(Transaction, {name: \"CORRECTACTION\", order: 70, attributeType: CorrectionAction, readMethod: \"getCorrectionAction\", writeMethod: \"setCorrectionAction\"});\n\n\n/**\n * The action to take on the {@link Transaction#getCorrectionId() corrected transaction}.\n *\n * @param {CorrectionAction} correctionAction The action to take on the {@link Transaction#getCorrectionId() corrected transaction}.\n */\nTransaction.prototype.setCorrectionAction = function(correctionAction) {\n  this.correctionAction = correctionAction;\n};\n\n\n/**\n * The server-assigned temporary id for client-initiated transactions.\n *\n * @return {String} The server-assigned temporary id for client-initiated transactions.\n */\nTransaction.prototype.getTempId = function() {\n  return this.tempId;\n};\nElement.add(Transaction, {name: \"SRVRTID\", order: 80, attributeType: String, readMethod: \"getTempId\", writeMethod: \"setTempId\"});\n\n\n/**\n * The server-assigned temporary id for client-initiated transactions.\n *\n * @param {String} tempId The server-assigned temporary id for client-initiated transactions.\n */\nTransaction.prototype.setTempId = function(tempId) {\n  this.tempId = tempId;\n};\n\n\n/**\n * The check number.\n *\n * @return {String} The check number.\n */\nTransaction.prototype.getCheckNumber = function() {\n  return this.checkNumber;\n};\nElement.add(Transaction, {name: \"CHECKNUM\", order: 90, attributeType: String, readMethod: \"getCheckNumber\", writeMethod: \"setCheckNumber\"});\n\n\n/**\n * The check number.\n *\n * @param {String} checkNumber The check number.\n */\nTransaction.prototype.setCheckNumber = function(checkNumber) {\n  this.checkNumber = checkNumber;\n};\n\n\n/**\n * The reference number.\n *\n * @return {String} The reference number.\n */\nTransaction.prototype.getReferenceNumber = function() {\n  return this.referenceNumber;\n};\nElement.add(Transaction, {name: \"REFNUM\", order: 100, attributeType: String, readMethod: \"getReferenceNumber\", writeMethod: \"setReferenceNumber\"});\n\n\n/**\n * The reference number.\n *\n * @param {String} referenceNumber The reference number.\n */\nTransaction.prototype.setReferenceNumber = function(referenceNumber) {\n  this.referenceNumber = referenceNumber;\n};\n\n\n/**\n * The standard industrial code.\n *\n * @return {String} The standard industrial code.\n */\nTransaction.prototype.getStandardIndustrialCode = function() {\n  return this.standardIndustrialCode;\n};\nElement.add(Transaction, {name: \"SIC\", order: 110, attributeType: String, readMethod: \"getStandardIndustrialCode\", writeMethod: \"setStandardIndustrialCode\"});\n\n\n/**\n * The standard industrial code.\n *\n * @param {String} standardIndustrialCode The standard industrial code.\n */\nTransaction.prototype.setStandardIndustrialCode = function(standardIndustrialCode) {\n  this.standardIndustrialCode = standardIndustrialCode;\n};\n\n\n/**\n * The payee id.\n *\n * @return {String} The payee id.\n */\nTransaction.prototype.getPayeeId = function() {\n  return this.payeeId;\n};\nElement.add(Transaction, {name: \"PAYEEID\", order: 120, attributeType: String, readMethod: \"getPayeeId\", writeMethod: \"setPayeeId\"});\n\n\n/**\n * The payee id.\n *\n * @param {String} payeeId The payee id.\n */\nTransaction.prototype.setPayeeId = function(payeeId) {\n  this.payeeId = payeeId;\n};\n\n\n/**\n * The name (description) or the transaction.\n *\n * @return {String} The name (description) or the transaction.\n */\nTransaction.prototype.getName = function() {\n  return this.name;\n};\nElement.add(Transaction, {name: \"NAME\", order: 130, attributeType: String, readMethod: \"getName\", writeMethod: \"setName\"});\n\n\n/**\n * The name (description) or the transaction.\n *\n * @param {String} name The name (description) or the transaction.\n */\nTransaction.prototype.setName = function(name) {\n  this.name = name;\n};\n\n\n/**\n * The payee.\n *\n * @return {Payee} The payee.\n */\nTransaction.prototype.getPayee = function() {\n  return this.payee;\n};\nChildAggregate.add(Transaction, {order: 140, attributeType: Payee, readMethod: \"getPayee\", writeMethod: \"setPayee\"});\n\n\n/**\n * The payee.\n *\n * @param {Payee} payee The payee.\n */\nTransaction.prototype.setPayee = function(payee) {\n  this.payee = payee;\n};\n\n\n/**\n * The bank account the transfer was to.\n *\n * @return {BankAccountDetails} The bank account the transfer was to.\n */\nTransaction.prototype.getBankAccountTo = function() {\n  return this.bankAccountTo;\n};\nChildAggregate.add(Transaction, {name: \"BANKACCTTO\", order: 150, attributeType: BankAccountDetails, readMethod: \"getBankAccountTo\", writeMethod: \"setBankAccountTo\"});\n\n\n/**\n * The bank account the transfer was to.\n *\n * @param {BankAccountDetails} bankAccountTo The bank account the transfer was to.\n */\nTransaction.prototype.setBankAccountTo = function(bankAccountTo) {\n  this.bankAccountTo = bankAccountTo;\n};\n\n\n/**\n * The credit-card account the transfer was to.\n *\n * @return {CreditCardAccountDetails} The credit-card account the transfer was to.\n */\nTransaction.prototype.getCreditCardAccountTo = function() {\n  return this.creditCardAccountTo;\n};\nChildAggregate.add(Transaction, {name: \"CCACCTTO\", order: 160, attributeType: CreditCardAccountDetails, readMethod: \"getCreditCardAccountTo\", writeMethod: \"setCreditCardAccountTo\"});\n\n\n/**\n * The credit-card account the transfer was to.\n *\n * @param {CreditCardAccountDetails} creditCardAccountTo The credit-card account the transfer was to.\n */\nTransaction.prototype.setCreditCardAccountTo = function(creditCardAccountTo) {\n  this.creditCardAccountTo = creditCardAccountTo;\n};\n\n\n/**\n * Notes.\n *\n * @return {String} Notes.\n */\nTransaction.prototype.getMemo = function() {\n  return this.memo;\n};\nElement.add(Transaction, {name: \"MEMO\", order: 170, attributeType: String, readMethod: \"getMemo\", writeMethod: \"setMemo\"});\n\n\n/**\n * Notes.\n *\n * @param {String} memo Notes.\n */\nTransaction.prototype.setMemo = function(memo) {\n  this.memo = memo;\n};\n\n\n/**\n * The currency.\n *\n * @return {Currency} The currency.\n */\nTransaction.prototype.getCurrency = function() {\n  return this.currency;\n};\nChildAggregate.add(Transaction, {order: 180, attributeType: Currency, readMethod: \"getCurrency\", writeMethod: \"setCurrency\"});\n\n\n/**\n * The currency.\n *\n * @param {Currency} currency The currency.\n */\nTransaction.prototype.setCurrency = function(currency) {\n  this.currency = currency;\n};\n\n\n/**\n * The original currency.\n *\n * @return {Currency} The original currency.\n */\nTransaction.prototype.getOriginalCurrency = function() {\n  return this.originalCurrency;\n};\nChildAggregate.add(Transaction, {name: \"ORIGCURRENCY\", order: 190, attributeType: Currency, readMethod: \"getOriginalCurrency\", writeMethod: \"setOriginalCurrency\"});\n\n\n/**\n * The original currency.\n *\n * @param {Currency} originalCurrency The original currency.\n */\nTransaction.prototype.setOriginalCurrency = function(originalCurrency) {\n  this.originalCurrency = originalCurrency;\n};\n\n\n\n\nmodule.exports = Transaction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar Element = require(\"../../../meta/Element\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar Transaction = require(\"./Transaction\");\n\n/**\n * @class\n */\nfunction TransactionList () {\n\n  /**\n   * @name TransactionList#start\n   * @type Date\n   * @access private\n   */\n  this.start = null;\n\n  /**\n   * @name TransactionList#end\n   * @type Date\n   * @access private\n   */\n  this.end = null;\n\n  /**\n   * @name TransactionList#transactions\n   * @type Transaction[]\n   * @access private\n   */\n  this.transactions = null;\n}\n\n\n\nAggregate.add(\"BANKTRANLIST\", TransactionList);\n\n\n/**\n * The start date.\n *\n * @return {Date} The start date.\n */\nTransactionList.prototype.getStart = function() {\n  return this.start;\n};\nElement.add(TransactionList, {name: \"DTSTART\", required: true, order: 0, attributeType: Date, readMethod: \"getStart\", writeMethod: \"setStart\"});\n\n\n/**\n * The start date.\n *\n * @param {Date} start The start date.\n */\nTransactionList.prototype.setStart = function(start) {\n  this.start = start;\n};\n\n\n/**\n * The end date.\n *\n * @return {Date} The end date.\n */\nTransactionList.prototype.getEnd = function() {\n  return this.end;\n};\nElement.add(TransactionList, {name: \"DTEND\", required: true, order: 10, attributeType: Date, readMethod: \"getEnd\", writeMethod: \"setEnd\"});\n\n\n/**\n * The end date.\n *\n * @param {Date} end The end date.\n */\nTransactionList.prototype.setEnd = function(end) {\n  this.end = end;\n};\n\n\n/**\n * The transaction list.\n *\n * @return {Transaction[]} The transaction list.\n */\nTransactionList.prototype.getTransactions = function() {\n  return this.transactions;\n};\nChildAggregate.add(TransactionList, {order: 20, attributeType: Array, collectionEntryType: Transaction, readMethod: \"getTransactions\", writeMethod: \"setTransactions\"});\n\n\n/**\n * The transaction list.\n *\n * @param {Transaction[]} transactions The transaction list.\n */\nTransactionList.prototype.setTransactions = function(transactions) {\n  this.transactions = transactions;\n};\n\n\n\n\nmodule.exports = TransactionList;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * @enum\n */\nvar TransactionType = {\n\n  /**\n   * generic credit.\n   */\n  CREDIT: \"CREDIT\",\n\n  /**\n   * genertic debit.\n   */\n  DEBIT: \"DEBIT\",\n\n  /**\n   * interest earned.\n   */\n  INT: \"INT\",\n\n  /**\n   * dividend.\n   */\n  DIV: \"DIV\",\n\n  /**\n   * bank fee.\n   */\n  FEE: \"FEE\",\n\n  /**\n   * service charge.\n   */\n  SRVCHG: \"SRVCHG\",\n\n  /**\n   * deposit.\n   */\n  DEP: \"DEP\",\n\n  /**\n   * ATM transaction.\n   */\n  ATM: \"ATM\",\n\n  /**\n   * point of sale\n   */\n  POS: \"POS\",\n\n  /**\n   * transfer\n   */\n  XFER: \"XFER\",\n\n  /**\n   * check\n   */\n  CHECK: \"CHECK\",\n\n  /**\n   * electronic payment\n   */\n  PAYMENT: \"PAYMENT\",\n\n  /**\n   * cash.\n   */\n  CASH: \"CASH\",\n\n  /**\n   * direct deposit.\n   */\n  DIRECTDEP: \"DIRECTDEP\",\n\n  /**\n   * merchant-initiated debit\n   */\n  DIRECTDEBIT: \"DIRECTDEBIT\",\n\n  /**\n   * repeating payment.\n   */\n  REPEATPMT: \"REPEATPMT\",\n\n  /**\n   * other\n   */\n  OTHER: \"OTHER\",\n};\n\n\nmodule.exports = TransactionType;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar Element = require(\"../../../meta/Element\");\nvar BankAccountDetails = require(\"../banking/BankAccountDetails\");\nvar CreditCardAccountDetails = require(\"../creditcard/CreditCardAccountDetails\");\n\n/**\n * @class\n */\nfunction TransferInfo () {\n\n  /**\n   * @name TransferInfo#bankAccountFrom\n   * @type BankAccountDetails\n   * @access private\n   */\n  this.bankAccountFrom = null;\n\n  /**\n   * @name TransferInfo#creditCardAccountFrom\n   * @type CreditCardAccountDetails\n   * @access private\n   */\n  this.creditCardAccountFrom = null;\n\n  /**\n   * @name TransferInfo#bankAccountTo\n   * @type BankAccountDetails\n   * @access private\n   */\n  this.bankAccountTo = null;\n\n  /**\n   * @name TransferInfo#creditCardAccountTo\n   * @type CreditCardAccountDetails\n   * @access private\n   */\n  this.creditCardAccountTo = null;\n\n  /**\n   * @name TransferInfo#amount\n   * @type Double\n   * @access private\n   */\n  this.amount = null;\n\n  /**\n   * @name TransferInfo#due\n   * @type Date\n   * @access private\n   */\n  this.due = null;\n}\n\n\n\nAggregate.add(\"XFERINFO\", TransferInfo);\n\n\n/**\n * The bank account to transfer from.\n *\n * @return {BankAccountDetails} The bank account to transfer from.\n */\nTransferInfo.prototype.getBankAccountFrom = function() {\n  return this.bankAccountFrom;\n};\nChildAggregate.add(TransferInfo, {name: \"BANKACCTFROM\", order: 0, attributeType: BankAccountDetails, readMethod: \"getBankAccountFrom\", writeMethod: \"setBankAccountFrom\"});\n\n\n/**\n * The bank account to transfer from.\n *\n * @param {BankAccountDetails} bankAccountFrom The bank account to transfer from.\n */\nTransferInfo.prototype.setBankAccountFrom = function(bankAccountFrom) {\n  this.creditCardAccountFrom = null;\n  this.bankAccountFrom = bankAccountFrom;\n};\n\n\n/**\n * The account to transfer from.\n *\n * @param {BankAccountDetails|CreditCardAccountDetails} accountFrom The account to transfer from.\n */\nTransferInfo.prototype.setAccountFrom = function(accountFrom) {\n  if (accountFrom instanceof BankAccountDetails) {\n    this.setBankAccountFrom(accountFrom);\n  } else if (accountFrom instanceof CreditCardAccountDetails) {\n    this.setCreditCardAccountFrom(accountFrom);\n  }\n};\n\n\n/**\n * The credit card to transfer from.\n *\n * @return {CreditCardAccountDetails} The credit card to transfer from.\n */\nTransferInfo.prototype.getCreditCardAccountFrom = function() {\n  return this.creditCardAccountFrom;\n};\nChildAggregate.add(TransferInfo, {name: \"CCACCTFROM\", order: 10, attributeType: CreditCardAccountDetails, readMethod: \"getCreditCardAccountFrom\", writeMethod: \"setCreditCardAccountFrom\"});\n\n\n/**\n * The credit card to transfer from.\n *\n * @param {CreditCardAccountDetails} creditCardAccountFrom The credit card to transfer from.\n */\nTransferInfo.prototype.setCreditCardAccountFrom = function(creditCardAccountFrom) {\n  this.bankAccountFrom = null;\n  this.creditCardAccountFrom = creditCardAccountFrom;\n};\n\n\n/**\n * The bank account to transfer to.\n *\n * @return {BankAccountDetails} The bank account to transfer to.\n */\nTransferInfo.prototype.getBankAccountTo = function() {\n  return this.bankAccountTo;\n};\nChildAggregate.add(TransferInfo, {name: \"BANKACCTTO\", order: 20, attributeType: BankAccountDetails, readMethod: \"getBankAccountTo\", writeMethod: \"setBankAccountTo\"});\n\n\n/**\n * The bank account to transfer to.\n *\n * @param {BankAccountDetails} bankAccountTo The bank account to transfer to.\n */\nTransferInfo.prototype.setBankAccountTo = function(bankAccountTo) {\n  this.creditCardAccountTo = null;\n  this.bankAccountTo = bankAccountTo;\n};\n\n\n/**\n * The bank account to transfer to.\n *\n * @param {BankAccountDetails|CreditCardAccountDetails} accountTo The bank account to transfer to.\n */\nTransferInfo.prototype.setAccountTo = function(accountTo) {\n  if (accountTo instanceof BankAccountDetails) {\n    this.setBankAccountTo(accountTo);\n  } else if (accountTo instanceof CreditCardAccountDetails) {\n    this.setCreditCardAccountTo(accountTo);\n  }\n};\n\n\n/**\n * The credit card account to transfer to.\n *\n * @return {CreditCardAccountDetails} The credit card account to transfer to.\n */\nTransferInfo.prototype.getCreditCardAccountTo = function() {\n  return this.creditCardAccountTo;\n};\nChildAggregate.add(TransferInfo, {name: \"CCACCTTO\", order: 30, attributeType: CreditCardAccountDetails, readMethod: \"getCreditCardAccountTo\", writeMethod: \"setCreditCardAccountTo\"});\n\n\n/**\n * The credit card account to transfer to.\n *\n * @param {CreditCardAccountDetails} creditCardAccountTo The credit card account to transfer to.\n */\nTransferInfo.prototype.setCreditCardAccountTo = function(creditCardAccountTo) {\n  this.bankAccountTo = null;\n  this.creditCardAccountTo = creditCardAccountTo;\n};\n\n\n/**\n * The amount.\n *\n * @return {Double} The amount.\n */\nTransferInfo.prototype.getAmount = function() {\n  return this.amount;\n};\nElement.add(TransferInfo, {name: \"TRNAMT\", required: true, order: 40, attributeType: Number, readMethod: \"getAmount\", writeMethod: \"setAmount\"});\n\n\n/**\n * The amount.\n *\n * @param {Double} amount The amount.\n */\nTransferInfo.prototype.setAmount = function(amount) {\n  this.amount = amount;\n};\n\n\n/**\n * The due date.\n *\n * @return {Date} The due date.\n */\nTransferInfo.prototype.getDue = function() {\n  return this.due;\n};\nElement.add(TransferInfo, {name: \"DTDUE\", order: 50, attributeType: Date, readMethod: \"getDue\", writeMethod: \"setDue\"});\n\n\n/**\n * The due date.\n *\n * @param {Date} due The due date.\n */\nTransferInfo.prototype.setDue = function(due) {\n  this.due = due;\n};\n\n\n\n\nmodule.exports = TransferInfo;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar Element = require(\"../../../meta/Element\");\nvar TransferStatusEvent = require(\"./TransferStatusEvent\");\n\n/**\n * @class\n */\nfunction TransferStatus () {\n\n  /**\n   * @name TransferStatus#event\n   * @type TransferStatusEvent\n   * @access private\n   */\n  this.event = null;\n\n  /**\n   * @name TransferStatus#date\n   * @type Date\n   * @access private\n   */\n  this.date = null;\n}\n\n\n\nAggregate.add(\"XFERPRCSTS\", TransferStatus);\n\n\n/**\n * The event.\n *\n * @return {TransferStatusEvent} The event.\n */\nTransferStatus.prototype.getEvent = function() {\n  return this.event;\n};\nElement.add(TransferStatus, {name: \"XFERPRCCODE\", required: true, order: 0, attributeType: TransferStatusEvent, readMethod: \"getEvent\", writeMethod: \"setEvent\"});\n\n\n/**\n * The event.\n *\n * @param {TransferStatusEvent} event The event.\n */\nTransferStatus.prototype.setEvent = function(event) {\n  this.event = event;\n};\n\n\n/**\n * The date of the event.\n *\n * @return {Date} The date of the event.\n */\nTransferStatus.prototype.getDate = function() {\n  return this.date;\n};\nElement.add(TransferStatus, {name: \"DTXFERPRC\", required: true, order: 10, attributeType: Date, readMethod: \"getDate\", writeMethod: \"setDate\"});\n\n\n/**\n * The date of the event.\n *\n * @param {Date} date The date of the event.\n */\nTransferStatus.prototype.setDate = function(date) {\n  this.date = date;\n};\n\n\n\n\nmodule.exports = TransferStatus;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * @enum\n */\nvar TransferStatusEvent = {\n\n  WILLPROCESSON: \"WILLPROCESSON\",\n\n  POSTEDON: \"POSTEDON\",\n\n  NOFUNDSON: \"NOFUNDSON\",\n\n  CANCELEDON: \"CANCELEDON\",\n\n  FAILEDON: \"FAILEDON\",\n};\n\n\nmodule.exports = TransferStatusEvent;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\nvar StatusCode = require(\"./StatusCode\");\n\n/**\n * Holder for an unknown status code.\n *\n * @class\n * @augments StatusCode\n */\nfunction UnknownStatusCode (/*int*/ code, /*String*/ message, /*Severity*/ defaultSeverity) {\n\n  /**\n   * @name UnknownStatusCode#code\n   * @type int\n   * @access private\n   */\n  this.code = code;\n\n  /**\n   * @name UnknownStatusCode#message\n   * @type String\n   * @access private\n   */\n  this.message = message;\n\n  /**\n   * @name UnknownStatusCode#defaultSeverity\n   * @type Status.Severity\n   * @access private\n   */\n  this.defaultSeverity = defaultSeverity;\n}\n\ninherit(UnknownStatusCode, \"implements\", StatusCode);\n\n\n\n\nUnknownStatusCode.prototype.getCode = function() {\n  return this.code;\n};\n\n\nUnknownStatusCode.prototype.getMessage = function() {\n  return this.message;\n};\n\n\nUnknownStatusCode.prototype.getDefaultSeverity = function() {\n  return this.defaultSeverity;\n};\n\n\n// @Override\nUnknownStatusCode.prototype.toString = function() {\n  return String.valueOf(this.code);\n};\n\n\n\n\nmodule.exports = UnknownStatusCode;\n","\"use strict\";\n\nmodule.exports = {\n  AccountDetails: require(\"./AccountDetails\"),\n  AccountInfo: require(\"./AccountInfo\"),\n  AccountStatus: require(\"./AccountStatus\"),\n  BalanceInfo: require(\"./BalanceInfo\"),\n  BalanceRecord: require(\"./BalanceRecord\"),\n  CorrectionAction: require(\"./CorrectionAction\"),\n  Currency: require(\"./Currency\"),\n  Payee: require(\"./Payee\"),\n  ProcessorDayOff: require(\"./ProcessorDayOff\"),\n  StatementRange: require(\"./StatementRange\"),\n  StatementRequest: require(\"./StatementRequest\"),\n  StatementResponse: require(\"./StatementResponse\"),\n  Status: require(\"./Status\"),\n  StatusCode: require(\"./StatusCode\"),\n  StatusHolder: require(\"./StatusHolder\"),\n  T1099Request: require(\"./T1099Request\"),\n  T1099Response: require(\"./T1099Response\"),\n  Transaction: require(\"./Transaction\"),\n  TransactionList: require(\"./TransactionList\"),\n  TransactionType: require(\"./TransactionType\"),\n  TransferInfo: require(\"./TransferInfo\"),\n  TransferStatus: require(\"./TransferStatus\"),\n  TransferStatusEvent: require(\"./TransferStatusEvent\"),\n  UnknownStatusCode: require(\"./UnknownStatusCode\"),\n};\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar Element = require(\"../../../meta/Element\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar AccountDetails = require(\"../common/AccountDetails\");\n\n/**\n * @class\n * \n * @see \"OFX Spec, Section 11.3.2\"\n * @augments AccountDetails\n */\nfunction CreditCardAccountDetails () {\n\n  /**\n   * @name CreditCardAccountDetails#accountNumber\n   * @type String\n   * @access private\n   */\n  this.accountNumber = null;\n\n  /**\n   * @name CreditCardAccountDetails#accountKey\n   * @type String\n   * @access private\n   */\n  this.accountKey = null;\n}\n\ninherit(CreditCardAccountDetails, \"implements\", AccountDetails);\n\n\nAggregate.add(\"CreditCardAccountDetails\", CreditCardAccountDetails);\n\n\n/**\n * The account number.\n *\n * @return {String} The account number.\n */\nCreditCardAccountDetails.prototype.getAccountNumber = function() {\n  return this.accountNumber;\n};\nElement.add(CreditCardAccountDetails, {name: \"ACCTID\", required: true, order: 0, attributeType: String, readMethod: \"getAccountNumber\", writeMethod: \"setAccountNumber\"});\n\n\n/**\n * The account number.\n *\n * @param {String} accountNumber The account number.\n */\nCreditCardAccountDetails.prototype.setAccountNumber = function(accountNumber) {\n  this.accountNumber = accountNumber;\n};\n\n\n/**\n * The account key.\n *\n * @return {String} The account key.\n */\nCreditCardAccountDetails.prototype.getAccountKey = function() {\n  return this.accountKey;\n};\nElement.add(CreditCardAccountDetails, {name: \"ACCKEY\", order: 10, attributeType: String, readMethod: \"getAccountKey\", writeMethod: \"setAccountKey\"});\n\n\n/**\n * The account key.\n *\n * @param {String} accountKey The account key.\n */\nCreditCardAccountDetails.prototype.setAccountKey = function(accountKey) {\n  this.accountKey = accountKey;\n};\n\n\n\n\nmodule.exports = CreditCardAccountDetails;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar Element = require(\"../../../meta/Element\");\nvar AccountInfo = require(\"../common/AccountInfo\");\nvar AccountStatus = require(\"../common/AccountStatus\");\nvar CreditCardAccountDetails = require(\"./CreditCardAccountDetails\");\n\n/**\n * @class\n * @augments AccountInfo\n */\nfunction CreditCardAccountInfo () {\n\n  /**\n   * @name CreditCardAccountInfo#creditCardAccount\n   * @type CreditCardAccountDetails\n   * @access private\n   */\n  this.creditCardAccount = null;\n\n  /**\n   * @name CreditCardAccountInfo#supportsTransactionDetailOperations\n   * @type Boolean\n   * @access private\n   */\n  this.supportsTransactionDetailOperations = null;\n\n  /**\n   * @name CreditCardAccountInfo#supportsTransferToOtherAccountOperations\n   * @type Boolean\n   * @access private\n   */\n  this.supportsTransferToOtherAccountOperations = null;\n\n  /**\n   * @name CreditCardAccountInfo#supportsTransferFromOtherAccountOperations\n   * @type Boolean\n   * @access private\n   */\n  this.supportsTransferFromOtherAccountOperations = null;\n\n  /**\n   * @name CreditCardAccountInfo#status\n   * @type AccountStatus\n   * @access private\n   */\n  this.status = null;\n}\n\ninherit(CreditCardAccountInfo, \"implements\", AccountInfo);\n\n\nAggregate.add(\"CCACCTINFO\", CreditCardAccountInfo);\n\n\n/**\n * The credit card account this information is referencing.\n *\n * @return {CreditCardAccountDetails} The credit card account this information is referencing.\n */\nCreditCardAccountInfo.prototype.getCreditCardAccount = function() {\n  return this.creditCardAccount;\n};\nChildAggregate.add(CreditCardAccountInfo, {name: \"CCACCTFROM\", required: true, order: 0, attributeType: CreditCardAccountDetails, readMethod: \"getCreditCardAccount\", writeMethod: \"setCreditCardAccount\"});\n\n\n/**\n * The credit card account this information is referencing.\n *\n * @param {CreditCardAccountDetails} creditCardAccount The credit card account this information is referencing.\n */\nCreditCardAccountInfo.prototype.setCreditCardAccount = function(creditCardAccount) {\n  this.creditCardAccount = creditCardAccount;\n};\n\n\n// Inherited.\nCreditCardAccountInfo.prototype.getAccountDetails = function() {\n  return this.getCreditCardAccount();\n};\n\n\n/**\n * Whether this account supports download of transaction details.\n *\n * @return {Boolean} Whether this account supports download of transaction details.\n */\nCreditCardAccountInfo.prototype.getSupportsTransactionDetailOperations = function() {\n  return this.supportsTransactionDetailOperations;\n};\nElement.add(CreditCardAccountInfo, {name: \"SUPTXDL\", required: true, order: 10, attributeType: Boolean, readMethod: \"getSupportsTransactionDetailOperations\", writeMethod: \"setSupportsTransactionDetailOperations\"});\n\n\n/**\n * Whether this account supports download of transaction details.\n *\n * @param {Boolean} supportsTransactionDetailOperations Whether this account supports download of transaction details.\n */\nCreditCardAccountInfo.prototype.setSupportsTransactionDetailOperations = function(supportsTransactionDetailOperations) {\n  this.supportsTransactionDetailOperations = supportsTransactionDetailOperations;\n};\n\n\n/**\n * Whether this account supports transfer operations to other accounts.\n *\n * @return {Boolean} Whether this account supports transfer operations to other accounts.\n */\nCreditCardAccountInfo.prototype.getSupportsTransferToOtherAccountOperations = function() {\n  return this.supportsTransferToOtherAccountOperations;\n};\nElement.add(CreditCardAccountInfo, {name: \"XFERSRC\", required: true, order: 20, attributeType: Boolean, readMethod: \"getSupportsTransferToOtherAccountOperations\", writeMethod: \"setSupportsTransferToOtherAccountOperations\"});\n\n\n/**\n * Whether this account supports transfer operations to other accounts.\n *\n * @param {Boolean} supportsTransferToOtherAccountOperations Whether this account supports transfer operations to other accounts.\n */\nCreditCardAccountInfo.prototype.setSupportsTransferToOtherAccountOperations = function(supportsTransferToOtherAccountOperations) {\n  this.supportsTransferToOtherAccountOperations = supportsTransferToOtherAccountOperations;\n};\n\n\n/**\n * Whether this account supports transfer operations from other accounts.\n *\n * @return {Boolean} Whether this account supports transfer operations from other accounts.\n */\nCreditCardAccountInfo.prototype.getSupportsTransferFromOtherAccountOperations = function() {\n  return this.supportsTransferFromOtherAccountOperations;\n};\nElement.add(CreditCardAccountInfo, {name: \"XFERDEST\", required: true, order: 30, attributeType: Boolean, readMethod: \"getSupportsTransferFromOtherAccountOperations\", writeMethod: \"setSupportsTransferFromOtherAccountOperations\"});\n\n\n/**\n * Whether this account supports transfer operations from other accounts.\n *\n * @param {Boolean} supportsTransferFromOtherAccountOperations Whether this account supports transfer operations from other accounts.\n */\nCreditCardAccountInfo.prototype.setSupportsTransferFromOtherAccountOperations = function(supportsTransferFromOtherAccountOperations) {\n  this.supportsTransferFromOtherAccountOperations = supportsTransferFromOtherAccountOperations;\n};\n\n\n/**\n * The account status.\n *\n * @return {AccountStatus} The account status.\n */\nCreditCardAccountInfo.prototype.getStatus = function() {\n  return this.status;\n};\nElement.add(CreditCardAccountInfo, {name: \"SVCSTATUS\", required: true, order: 40, attributeType: AccountStatus, readMethod: \"getStatus\", writeMethod: \"setStatus\"});\n\n\n/**\n * The account status.\n *\n * @param {AccountStatus} status The account status.\n */\nCreditCardAccountInfo.prototype.setStatus = function(status) {\n  this.status = status;\n};\n\n\n\n\nmodule.exports = CreditCardAccountInfo;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar MessageSetType = require(\"../MessageSetType\");\nvar RequestMessageSet = require(\"../RequestMessageSet\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar CreditCardStatementRequestTransaction = require(\"./CreditCardStatementRequestTransaction\");\n\n/**\n * @class\n * @augments CreditCardRequestMessageSet\n */\nfunction CreditCardRequestMessageSet () {\n  RequestMessageSet.call(this);\n\n  /**\n   * @name CreditCardRequestMessageSet#statementRequest\n   * @type CreditCardStatementRequestTransaction\n   * @access private\n   */\n  this.statementRequest = null;\n}\n\ninherit(CreditCardRequestMessageSet, \"extends\", RequestMessageSet);\n\n\nAggregate.add(\"CREDITCARDMSGSRQV1\", CreditCardRequestMessageSet);\n\n\nCreditCardRequestMessageSet.prototype.getType = function() {\n  return MessageSetType.creditcard;\n};\n\n\n/**\n * The request.\n *\n * @return {CreditCardStatementRequestTransaction} The request.\n */\nCreditCardRequestMessageSet.prototype.getStatementRequest = function() {\n  return this.statementRequest;\n};\nChildAggregate.add(CreditCardRequestMessageSet, {order: 0, attributeType: CreditCardStatementRequestTransaction, readMethod: \"getStatementRequest\", writeMethod: \"setStatementRequest\"});\n\n\n/**\n * The request.\n *\n * @param {CreditCardStatementRequestTransaction} statementRequest The request.\n */\nCreditCardRequestMessageSet.prototype.setStatementRequest = function(statementRequest) {\n  this.statementRequest = statementRequest;\n};\n\n\n// Inherited.\nCreditCardRequestMessageSet.prototype.getRequestMessages = function() {\n  var requestMessages = [];\n  if (this.getStatementRequest()) {\n    requestMessages.push(this.getStatementRequest());\n  }\n  return requestMessages;\n};\n\n\n\n\nmodule.exports = CreditCardRequestMessageSet;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar MessageSetType = require(\"../MessageSetType\");\nvar ResponseMessageSet = require(\"../ResponseMessageSet\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar CreditCardStatementResponseTransaction = require(\"./CreditCardStatementResponseTransaction\");\n\n/**\n * @class\n * @augments ResponseMessageSet\n */\nfunction CreditCardResponseMessageSet () {\n  ResponseMessageSet.call(this);\n\n  /**\n   * @name CreditCardResponseMessageSet#statementResponses\n   * @type CreditCardStatementResponseTransaction[]\n   * @access private\n   */\n  this.statementResponses = null;\n}\n\ninherit(CreditCardResponseMessageSet, \"extends\", ResponseMessageSet);\n\n\nAggregate.add(\"CREDITCARDMSGSRSV1\", CreditCardResponseMessageSet);\n\n\nCreditCardResponseMessageSet.prototype.getType = function() {\n  return MessageSetType.creditcard;\n};\n\n\n/**\n * The statement response list.\n *\n * Most OFX files have a single statement response, except MT2OFX\n * which outputs OFX with multiple statement responses\n * in a single banking response message set.\n *\n * @return {CreditCardStatementResponseTransaction[]} The statement response list.\n */\nCreditCardResponseMessageSet.prototype.getStatementResponses = function() {\n  return this.statementResponses;\n};\nChildAggregate.add(CreditCardResponseMessageSet, {order: 0, attributeType: Array, collectionEntryType: CreditCardStatementResponseTransaction, readMethod: \"getStatementResponses\", writeMethod: \"setStatementResponses\"});\n\n\n/**\n * The statement reponse list.\n *\n * @param {CreditCardStatementResponseTransaction[]} statementResponses The statement response list.\n */\nCreditCardResponseMessageSet.prototype.setStatementResponses = function(statementResponses) {\n  this.statementResponses = statementResponses;\n};\n\n\n/**\n * The first statement response.\n *\n * @return {CreditCardStatementResponseTransaction} the first bank statement response.\n * @deprecated Use getStatementResponses() because sometimes there are multiple responses\n */\nCreditCardResponseMessageSet.prototype.getStatementResponse = function() {\n  return !this.statementResponses || this.statementResponses.length === 0 ? null : this.statementResponses[0];\n};\n\n\n/**\n * The statement response.\n *\n * @param {CreditCardStatementResponseTransaction} statementResponse The statement response.\n */\nCreditCardResponseMessageSet.prototype.setStatementResponse = function(statementResponse) {\n  this.statementResponses = [statementResponse];\n};\n\n\n// Inherited.\nCreditCardResponseMessageSet.prototype.getResponseMessages = function() {\n  return this.statementResponses;\n};\n\n\n\n\nmodule.exports = CreditCardResponseMessageSet;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar StatementRequest = require(\"../common/StatementRequest\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar CreditCardAccountDetails = require(\"./CreditCardAccountDetails\");\n\n/**\n * @class\n * @augments StatementRequest\n */\nfunction CreditCardStatementRequest () {\n  StatementRequest.call(this);\n\n  /**\n   * @name CreditCardStatementRequest#account\n   * @type CreditCardAccountDetails\n   * @access private\n   */\n  this.account = null;\n}\n\ninherit(CreditCardStatementRequest, \"extends\", StatementRequest);\n\n\nAggregate.add(\"CCSTMTRQ\", CreditCardStatementRequest);\n\n\n/**\n * The account details.\n *\n * @return {CreditCardAccountDetails} The account details.\n */\nCreditCardStatementRequest.prototype.getAccount = function() {\n  return this.account;\n};\nChildAggregate.add(CreditCardStatementRequest, {name: \"CCACCTFROM\", required: true, order: 0, attributeType: CreditCardAccountDetails, readMethod: \"getAccount\", writeMethod: \"setAccount\"});\n\n\n/**\n * The account details.\n *\n * @param {CreditCardAccountDetails} account The account details.\n */\nCreditCardStatementRequest.prototype.setAccount = function(account) {\n  this.account = account;\n};\n\n\n\n\nmodule.exports = CreditCardStatementRequest;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar CreditCardStatementRequest = require(\"./CreditCardStatementRequest\");\nvar TransactionWrappedRequestMessage = require(\"../TransactionWrappedRequestMessage\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\n\n/**\n * @class\n * @augments TransactionWrappedRequestMessage\n */\nfunction CreditCardStatementRequestTransaction () {\n  TransactionWrappedRequestMessage.call(this);\n\n  /**\n   * @name CreditCardStatementRequestTransaction#message\n   * @type CreditCardStatementRequest\n   * @access private\n   */\n  this.message = null;\n}\n\ninherit(CreditCardStatementRequestTransaction, \"extends\", TransactionWrappedRequestMessage);\n\n\nAggregate.add(\"CCSTMTTRNRQ\", CreditCardStatementRequestTransaction);\n\n\n/**\n * The message.\n *\n * @return {CreditCardStatementRequest} The message.\n */\nCreditCardStatementRequestTransaction.prototype.getMessage = function() {\n  return this.message;\n};\nChildAggregate.add(CreditCardStatementRequestTransaction, {required: true, order: 30, attributeType: CreditCardStatementRequest, readMethod: \"getMessage\", writeMethod: \"setMessage\"});\n\n\n/**\n * The message.\n *\n * @param {CreditCardStatementRequest} message The message.\n *\n */\nCreditCardStatementRequestTransaction.prototype.setMessage = function(message) {\n  this.message = message;\n};\n\n\n// Inherited.\nCreditCardStatementRequestTransaction.prototype.setWrappedMessage = function(/*CreditCardStatementRequest*/ message) {\n  this.setMessage(message);\n};\n\n\n\n\nmodule.exports = CreditCardStatementRequestTransaction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar StatementResponse = require(\"../common/StatementResponse\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar CreditCardAccountDetails = require(\"./CreditCardAccountDetails\");\n\n/**\n * @class\n * @augments StatementResponse\n */\nfunction CreditCardStatementResponse () {\n  StatementResponse.call(this);\n\n  /**\n   * @name CreditCardStatementResponse#account\n   * @type CreditCardAccountDetails\n   * @access private\n   */\n  this.account = null;\n}\n\ninherit(CreditCardStatementResponse, \"extends\", StatementResponse);\n\n\nAggregate.add(\"CCSTMTRS\", CreditCardStatementResponse);\n\n\nCreditCardStatementResponse.prototype.getResponseMessageName = function() {\n  return \"credit card statement\";\n};\n\n\n/**\n * The account for the statement.\n *\n * @return {CreditCardAccountDetails} The account for the statement.\n */\nCreditCardStatementResponse.prototype.getAccount = function() {\n  return this.account;\n};\nChildAggregate.add(CreditCardStatementResponse, {name:\"CCACCTFROM\", order: 10, attributeType: CreditCardAccountDetails, readMethod: \"getAccount\", writeMethod: \"setAccount\"});\n\n\n/**\n * The account for the statement.\n *\n * @param {CreditCardAccountDetails} account The account for the statement.\n */\nCreditCardStatementResponse.prototype.setAccount = function(account) {\n  this.account = account;\n};\n\n\n\n\nmodule.exports = CreditCardStatementResponse;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar CreditCardStatementResponse = require(\"./CreditCardStatementResponse\");\nvar TransactionWrappedResponseMessage = require(\"../TransactionWrappedResponseMessage\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\n\n/**\n * @class\n * @augments TransactionWrappedResponseMessage\n */\nfunction CreditCardStatementResponseTransaction () {\n  TransactionWrappedResponseMessage.call(this);\n\n  /**\n   * @name CreditCardStatementResponseTransaction#message\n   * @type CreditCardStatementResponse\n   * @access private\n   */\n  this.message = null;\n}\n\ninherit(CreditCardStatementResponseTransaction, \"extends\", TransactionWrappedResponseMessage);\n\n\nAggregate.add(\"CCSTMTTRNRS\", CreditCardStatementResponseTransaction);\n\n\n/**\n * The message.\n *\n * @return {CreditCardStatementResponse} The message.\n */\nCreditCardStatementResponseTransaction.prototype.getMessage = function() {\n  return this.message;\n};\nChildAggregate.add(CreditCardStatementResponseTransaction, {required: true, order: 30, attributeType: CreditCardStatementResponse, readMethod: \"getMessage\", writeMethod: \"setMessage\"});\n\n\n/**\n * The message.\n *\n * @param {CreditCardStatementResponse} message The message.\n */\nCreditCardStatementResponseTransaction.prototype.setMessage = function(message) {\n  this.message = message;\n};\n\n\n// Inherited.\nCreditCardStatementResponseTransaction.prototype.getWrappedMessage = function() {\n  return this.getMessage();\n};\n\n\n\n\nmodule.exports = CreditCardStatementResponseTransaction;\n","\"use strict\";\n\nmodule.exports = {\n  CreditCardAccountDetails: require(\"./CreditCardAccountDetails\"),\n  CreditCardAccountInfo: require(\"./CreditCardAccountInfo\"),\n  CreditCardRequestMessageSet: require(\"./CreditCardRequestMessageSet\"),\n  CreditCardResponseMessageSet: require(\"./CreditCardResponseMessageSet\"),\n  CreditCardStatementRequest: require(\"./CreditCardStatementRequest\"),\n  CreditCardStatementRequestTransaction: require(\"./CreditCardStatementRequestTransaction\"),\n  CreditCardStatementResponse: require(\"./CreditCardStatementResponse\"),\n  CreditCardStatementResponseTransaction: require(\"./CreditCardStatementResponseTransaction\"),\n};\n","\"use strict\";\n\nmodule.exports = {\n  banking: require(\"./banking/index\"),\n  common: require(\"./common/index\"),\n  creditcard: require(\"./creditcard/index\"),\n  investment: require(\"./investment/index\"),\n  profile: require(\"./profile/index\"),\n  seclist: require(\"./seclist/index\"),\n  signon: require(\"./signon/index\"),\n  signup: require(\"./signup/index\"),\n  tax1099: require(\"./tax1099/index\"),\n\n  ApplicationSecurity: require(\"./ApplicationSecurity\"),\n  MessageSetProfile: require(\"./MessageSetProfile\"),\n  MessageSetType: require(\"./MessageSetType\"),\n  RequestEnvelope: require(\"./RequestEnvelope\"),\n  RequestMessage: require(\"./RequestMessage\"),\n  RequestMessageSet: require(\"./RequestMessageSet\"),\n  ResponseEnvelope: require(\"./ResponseEnvelope\"),\n  ResponseMessage: require(\"./ResponseMessage\"),\n  ResponseMessageSet: require(\"./ResponseMessageSet\"),\n  SignonProfile: require(\"./SignonProfile\"),\n  TransactionWrappedRequestMessage: require(\"./TransactionWrappedRequestMessage\"),\n  TransactionWrappedResponseMessage: require(\"./TransactionWrappedResponseMessage\")\n};\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * Type of investment account.\n *\n * @enum\n * @see \"OFX Spec, Section 13.6.2\"\n */\nvar AccountType = {\n  INDIVIDUAL: \"INDIVIDUAL\",\n  JOINT: \"JOINT\",\n  TRUST: \"TRUST\",\n  CORPORATE: \"CORPORATE\",\n\n  fromOfx: function(/*String*/ ofxVal) {\n    if (\"INDIVIDUAL\" === ofxVal) {\n      return AccountType.INDIVIDUAL;\n    } else if (\"JOINT\" === ofxVal) {\n      return AccountType.JOINT;\n    } else if (\"CORPORATE\" === ofxVal) {\n      return AccountType.CORPORATE;\n    } else if (\"CORPORATE\" === ofxVal) {\n      return AccountType.CORPORATE;\n    } else {\n      return null;\n    }\n  }\n};\n\n\nmodule.exports = AccountType;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * Activation status of an account.\n * See \"Section 13.6.2, OFX Spec\"\n *\n * @enum\n */\nvar ActivationStatus = {\n  ACTIVE: \"ACTIVE\",\n  PENDING: \"PENDING\",\n  AVAILABLE: \"AVAILABLE\",\n\n  fromOfx: function(/*String*/ ofxVal) {\n    if (\"ACTIVE\" === ofxVal) {\n      return ActivationStatus.ACTIVE;\n    } else if (\"PEND\" === ofxVal) {\n      return ActivationStatus.PENDING;\n    } else if (\"AVAIL\" === ofxVal) {\n      return ActivationStatus.AVAILABLE;\n    } else {\n      return null;\n    }\n  }\n}\n;\n\n\nmodule.exports = ActivationStatus;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar AccountDetails = require(\"../../common/AccountDetails\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar Element = require(\"../../../../meta/Element\");\n\n/**\n * Aggregate for the details that identifity a brokerage account.\n *\n * @class\n * @augments AccountDetails\n * @see \"OFX Spec, Section 13.6.1\"\n */\nfunction InvestmentAccountDetails () {\n\n  /**\n   * @name InvestmentAccountDetails#brokerId\n   * @type String\n   * @access private\n   */\n  this.brokerId = null;\n\n  /**\n   * @name InvestmentAccountDetails#accountNumber\n   * @type String\n   * @access private\n   */\n  this.accountNumber = null;\n\n  /**\n   * @name InvestmentAccountDetails#accountKey\n   * @type String\n   * @access private\n   */\n  this.accountKey = null;\n}\n\ninherit(InvestmentAccountDetails, \"implements\", AccountDetails);\n\n\nAggregate.add(\"InvestmentAccountDetails\", InvestmentAccountDetails);\n\n\n/**\n * Gets the broker id.\n *\n * @return {String} the id of the broker\n */\nInvestmentAccountDetails.prototype.getBrokerId = function() {\n  return this.brokerId;\n};\nElement.add(InvestmentAccountDetails, {name: \"BROKERID\", required: true, order: 0, attributeType: String, readMethod: \"getBrokerId\", writeMethod: \"setBrokerId\"});\n\n\n/**\n * Sets the broker id.\n *\n * @param {String} brokerId the id of the broker\n */\nInvestmentAccountDetails.prototype.setBrokerId = function(brokerId) {\n  this.brokerId = brokerId;\n};\n\n\n/**\n * Gets the account number.\n *\n * @return {String} the account number\n */\nInvestmentAccountDetails.prototype.getAccountNumber = function() {\n  return this.accountNumber;\n};\nElement.add(InvestmentAccountDetails, {name: \"ACCTID\", required: true, order: 20, attributeType: String, readMethod: \"getAccountNumber\", writeMethod: \"setAccountNumber\"});\n\n\n/**\n * Sets the account number.\n *\n * @param {String} accountNumber the account number\n */\nInvestmentAccountDetails.prototype.setAccountNumber = function(accountNumber) {\n  this.accountNumber = accountNumber;\n};\n\n\n/**\n * Gets the account key.\n *\n * @return {String} the account key\n */\nInvestmentAccountDetails.prototype.getAccountKey = function() {\n  return this.accountKey;\n};\nElement.add(InvestmentAccountDetails, {name: \"ACCTKEY\", order: 40, attributeType: String, readMethod: \"getAccountKey\", writeMethod: \"setAccountKey\"});\n\n\n/**\n * Sets the account key.\n *\n * @param {String} accountKey the account key\n */\nInvestmentAccountDetails.prototype.setAccountKey = function(accountKey) {\n  this.accountKey = accountKey;\n};\n\n\n\n\nmodule.exports = InvestmentAccountDetails;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar AccountInfo = require(\"../../common/AccountInfo\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../../meta/ChildAggregate\");\nvar Element = require(\"../../../../meta/Element\");\nvar UnitedStatesAccountType = require(\"./UnitedStatesAccountType\");\nvar ActivationStatus = require(\"./ActivationStatus\");\nvar AccountType = require(\"./AccountType\");\nvar InvestmentAccountDetails = require(\"./InvestmentAccountDetails\");\n\n/**\n * Aggregate for the info about a brokerage account.\n *\n * @class\n * @augments AccountInfo\n * @see \"OFX Spec, Section 13.6.2\"\n */\nfunction InvestmentAccountInfo () {\n\n  /**\n   * @name InvestmentAccountInfo#investmentAccount\n   * @type InvestmentAccountDetails\n   * @access private\n   */\n  this.investmentAccount = null;\n\n  /**\n   * @name InvestmentAccountInfo#unitedStatesAccountType\n   * @type String\n   * @access private\n   */\n  this.unitedStatesAccountType = null;\n\n  /**\n   * @name InvestmentAccountInfo#supportsChecking\n   * @type Boolean\n   * @access private\n   */\n  this.supportsChecking = null;\n\n  /**\n   * @name InvestmentAccountInfo#activationStatus\n   * @type String\n   * @access private\n   */\n  this.activationStatus = null;\n\n  /**\n   * @name InvestmentAccountInfo#investmentAccountType\n   * @type String\n   * @access private\n   */\n  this.investmentAccountType = null;\n\n  /**\n   * @name InvestmentAccountInfo#optionLevel\n   * @type String\n   * @access private\n   */\n  this.optionLevel = null;\n}\n\ninherit(InvestmentAccountInfo, \"implements\", AccountInfo);\n\n\nAggregate.add(\"INVACCTINFO\", InvestmentAccountInfo);\n\n\n/**\n * Gets the investment account this information is referencing.\n *\n * @return {InvestmentAccountDetails} the investment account this information is referencing\n */\nInvestmentAccountInfo.prototype.getInvestmentAccount = function() {\n  return this.investmentAccount;\n};\nChildAggregate.add(InvestmentAccountInfo, {name: \"INVACCTFROM\", required: true, order: 0, attributeType: InvestmentAccountDetails, readMethod: \"getInvestmentAccount\", writeMethod: \"setInvestmentAccount\"});\n\n\n/**\n * Sets the investment account this information is referencing. This is a required field\n * according to the OFX spec.\n *\n * @param {InvestmentAccountDetails} investmentAccount the investment account this information is referencing\n */\nInvestmentAccountInfo.prototype.setInvestmentAccount = function(investmentAccount) {\n  this.investmentAccount = investmentAccount;\n};\n\n\n// Inherited.\nInvestmentAccountInfo.prototype.getAccountDetails = function() {\n  return this.getInvestmentAccount();\n};\n\n\n/**\n * Gets the United States account type. This is a required field according to the OFX spec.\n * @see \"OFX Spec, Section 13.6.1\"\n *\n * @return {String} the United States account type\n */\nInvestmentAccountInfo.prototype.getUnitedStatesAccountType = function() {\n  return this.unitedStatesAccountType;\n};\nElement.add(InvestmentAccountInfo, {name: \"USPRODUCTTYPE\", required: true, order: 10, attributeType: String, readMethod: \"getUnitedStatesAccountType\", writeMethod: \"setUnitedStatesAccountType\"});\n\n\n/**\n * Sets United States account type. This is a required field according to the OFX spec.\n * @see \"OFX Spec, Section 13.6.1\"\n *\n * @param {String} unitedStatesAccountType the United States account type\n */\nInvestmentAccountInfo.prototype.setUnitedStatesAccountType = function(unitedStatesAccountType) {\n  this.unitedStatesAccountType = unitedStatesAccountType;\n};\n\n\n/**\n * Gets the United States account type as one of the well-known types.\n *\n * @return {UnitedStatesAccountType} the account type or null if it's not one of the well-known types\n */\nInvestmentAccountInfo.prototype.getUnitedStatesAccountTypeEnum = function() {\n  return UnitedStatesAccountType.fromOfx(this.unitedStatesAccountType);\n};\n\n\n/**\n * Gets whether the account supports checking. This is a required field according to the OFX spec.\n * @see \"OFX Spec, Section 13.6.1\"\n *\n * @return {Boolean} whether the account supports checking\n */\nInvestmentAccountInfo.prototype.getSupportsChecking = function() {\n  return this.supportsChecking;\n};\nElement.add(InvestmentAccountInfo, {name: \"CHECKING\", required: true, order: 20, attributeType: Boolean, readMethod: \"getSupportsChecking\", writeMethod: \"setSupportsChecking\"});\n\n\n/**\n * Sets whether the account supports checking. This is a required field according to the OFX spec.\n * @see \"OFX Spec, Section 13.6.1\"\n *\n * @param {Boolean} supportsChecking whether the account supports checking\n */\nInvestmentAccountInfo.prototype.setSupportsChecking = function(supportsChecking) {\n  this.supportsChecking = supportsChecking;\n};\n\n\n/**\n * Gets the activation status for investment statement download. This is a required field\n * according to the OFX spec.\n *\n * @return {String} the activation status\n */\nInvestmentAccountInfo.prototype.getActivationStatus = function() {\n  return this.activationStatus;\n};\nElement.add(InvestmentAccountInfo, {name: \"SVCSTATUS\", required: true, order: 30, attributeType: String, readMethod: \"getActivationStatus\", writeMethod: \"setActivationStatus\"});\n\n\n/**\n * Sets the activation status for investment statement download. This is a required field\n * according to the OFX spec.\n *\n * @param {String} activationStatus the activation status\n */\nInvestmentAccountInfo.prototype.setActivationStatus = function(activationStatus) {\n  this.activationStatus = activationStatus;\n};\n\n\n/**\n * Gets the activation status as one of the well-known types.\n *\n * @return {ActivationStatus} the activation status or null if it wasn't one of the well known types\n */\nInvestmentAccountInfo.prototype.getActivationStatusEnum = function() {\n  return ActivationStatus.fromOfx(this.getActivationStatus());\n};\n\n\n/**\n * Gets the type of investment account. One of \"INDIVIDUAL\", \"JOINT\", \"TRUST\", or \"CORPORATE\".\n * This is an optional field according to the OFX spec.\n *\n * @return {String} the type of account\n */\nInvestmentAccountInfo.prototype.getInvestmentAccountType = function() {\n  return this.investmentAccountType;\n};\nElement.add(InvestmentAccountInfo, {name: \"INVACCTTYPE\", order: 40, attributeType: String, readMethod: \"getInvestmentAccountType\", writeMethod: \"setInvestmentAccountType\"});\n\n\n/**\n * Sets the type of investment account. One of \"INDIVIDUAL\", \"JOINT\", \"TRUST\", or \"CORPORATE\".\n * This is an optional field according to the OFX spec.\n *\n * @param {String} investmentAccountType the type of account\n */\nInvestmentAccountInfo.prototype.setInvestmentAccountType = function(investmentAccountType) {\n  this.investmentAccountType = investmentAccountType;\n};\n\n\n/**\n * Gets the type of investment account as one of the well-known types.\n *\n * @return {AccountType} the type of investment account or null if it's not one of the well-known types\n */\nInvestmentAccountInfo.prototype.getInvestmentAccountTypeEnum = function() {\n  return AccountType.fromOfx(this.getInvestmentAccountType());\n};\n\n\n/**\n * Gets the description of option trading privileges. * This is an optional field according to\n * the OFX spec.\n *\n * @return {String} the description of option trading privileges.\n */\nInvestmentAccountInfo.prototype.getOptionLevel = function() {\n  return this.optionLevel;\n};\nElement.add(InvestmentAccountInfo, {name: \"OPTIONLEVEL\", order: 50, attributeType: String, readMethod: \"getOptionLevel\", writeMethod: \"setOptionLevel\"});\n\n\n/**\n * Sets the description of option trading privileges. * This is an optional field according to\n * the OFX spec.\n *\n * @param {String} optionLevel the description of option trading privileges.\n */\nInvestmentAccountInfo.prototype.setOptionLevel = function(optionLevel) {\n  this.optionLevel = optionLevel;\n};\n\n\n\n\nmodule.exports = InvestmentAccountInfo;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * Types of well-known sub-accounts.\n * See \"Section 13.9.2.4.2, OFX Spec\"\n *\n * @enum\n */\nvar SubAccountType = {\n  CASH: \"CASH\",\n  MARGIN: \"MARGIN\",\n  SHORT: \"SHORT\",\n  OTHER: \"OTHER\",\n\n  fromOfx: function(/*String*/ ofxVal) {\n    if (\"CASH\" === ofxVal) {\n      return SubAccountType.CASH;\n    } else if (\"MARGIN\" === ofxVal) {\n      return SubAccountType.MARGIN;\n    } else if (\"SHORT\" === ofxVal) {\n      return SubAccountType.SHORT;\n    } else if (\"OTHER\" === ofxVal) {\n      return SubAccountType.OTHER;\n    } else {\n      return null;\n    }\n  }\n};\n\n\nmodule.exports = SubAccountType;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n\n/**\n * @enum\n * @see \"OFX Spec, Section 13.6.2.1\"\n */\nvar UnitedStatesAccountType = {\n\n  /** A 401(k) retirement account */\n  R401K: \"401K\",\n\n  /** A 403(B) retirement account */\n  R403B: \"403B\",\n\n  /** An IRA retirement account */\n  IRA: \"IRA\",\n\n  /** Keough (money purchase/profit sharing) account */\n  KEOUGH: \"KEOUGH\",\n\n  /** Other account type */\n  OTHER: \"OTHER\",\n\n  /** Salary Reduction Employer Pension Plan */\n  SARSEP: \"SARSEP\",\n\n  /** Savings Incentive Match Plan for Employees*/\n  SIMPLE: \"SIMPLE\",\n\n  /** Regular investment account */\n  NORMAL: \"NORMAL\",\n\n  /** Tax Deferred Annuity */\n  TDA: \"TDA\",\n\n  /** Trust (including UTMA) */\n  TRUST: \"TRUST\",\n\n  /** Custodial account */\n  UGMA: \"UGMA\",\n  \n  fromOfx: function(/*String*/ ofxVal) {\n    if (\"401K\" === ofxVal) {\n      return UnitedStatesAccountType.R401K;\n    } else if (\"403B\" === ofxVal) {\n      return UnitedStatesAccountType.R403B;\n    } else if (\"IRA\" === ofxVal) {\n      return UnitedStatesAccountType.IRA;\n    } else if (\"KEOUGH\" === ofxVal) {\n      return UnitedStatesAccountType.KEOUGH;\n    } else if (\"OTHER\" === ofxVal) {\n      return UnitedStatesAccountType.OTHER;\n    } else if (\"SARSEP\" === ofxVal) {\n      return UnitedStatesAccountType.SARSEP;\n    } else if (\"SIMPLE\" === ofxVal) {\n      return UnitedStatesAccountType.SIMPLE;\n    } else if (\"NORMAL\" === ofxVal) {\n      return UnitedStatesAccountType.NORMAL;\n    } else if (\"TDA\" === ofxVal) {\n      return UnitedStatesAccountType.TDA;\n    } else if (\"TRUST\" === ofxVal) {\n      return UnitedStatesAccountType.TRUST;\n    } else if (\"UGMA\" === ofxVal) {\n      return UnitedStatesAccountType.UGMA;\n    } else {\n      return null;\n    }\n  }\n};\n\n\nmodule.exports = UnitedStatesAccountType;\n","\"use strict\";\n\nmodule.exports = {\n  AccountType: require(\"./AccountType\"),\n  ActivationStatus: require(\"./ActivationStatus\"),\n  InvestmentAccountDetails: require(\"./InvestmentAccountDetails\"),\n  InvestmentAccountInfo: require(\"./InvestmentAccountInfo\"),\n  SubAccountType: require(\"./SubAccountType\"),\n  UnitedStatesAccountType: require(\"./UnitedStatesAccountType\"),\n};\n","\"use strict\";\n\nmodule.exports = {\n  accounts: require(\"./accounts/index\"),\n  positions: require(\"./positions/index\"),\n  statements: require(\"./statements/index\"),\n  transactions: require(\"./transactions/index\"),\n};\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar SubAccountType = require(\"../accounts/SubAccountType\");\nvar ChildAggregate = require(\"../../../../meta/ChildAggregate\");\nvar PositionType = require(\"./PositionType\");\nvar Inv401KSource = require(\"./Inv401KSource\");\nvar InvestmentPosition = require(\"./InvestmentPosition\");\n\n/**\n * Base class for the various types of positions.\n * <br>\n * This class exposes a read-only view of the flattened aggregates that are\n * common to all positions as a convenience to application\n * developers who may not find the ofx aggregation model intuitive.\n *\n * @class\n */\nfunction BasePosition () {\n\n  /**\n   * @name BasePosition#investmentPosition\n   * @type InvestmentPosition\n   * @access private\n   */\n  this.investmentPosition = null;\n}\n\n\n\n\n\n/**\n * Gets the investment position child aggregate.\n *\n * @return {InvestmentPosition} the investment position child aggregate\n */\nBasePosition.prototype.getInvestmentPosition = function() {\n  return this.investmentPosition;\n};\nChildAggregate.add(BasePosition, {required: true, order: 10, attributeType: InvestmentPosition, readMethod: \"getInvestmentPosition\", writeMethod: \"setInvestmentPosition\"});\n\n\n/**\n * Sets the investment position child aggregate.\n *\n * @param {InvestmentPosition} investmentPosition the investment position child aggregate\n */\nBasePosition.prototype.setInvestmentPosition = function(investmentPosition) {\n  this.investmentPosition = investmentPosition;\n};\n\n\n/**\n * Gets the security id for the position. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @return {SecurityId} the security id for the position\n */\nBasePosition.prototype.getSecurityId = function() {\n  return this.getInvestmentPosition().getSecurityId();\n};\n\n\n/**\n * Gets the sub-account type. One of \"CASH\", \"MARGIN\", \"SHORT\", \"OTHER\". This is a required field\n * according to the OFX spec.\n * See \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @return {String} the sub-account type\n */\nBasePosition.prototype.getHeldInAccount = function() {\n  return this.getInvestmentPosition().getHeldInAccount();\n};\n\n\n/**\n * Gets the sub-account type as one of the well-known types.\n * See \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @return {SubAccountType} the sub-account type or null if it's not one of the well-known types\n */\nBasePosition.prototype.getHeldInAccountEnum = function() {\n  return SubAccountType.fromOfx(this.getHeldInAccount());\n};\n\n\n/**\n * Gets the position type. One of SHORT or LONG. This is a required field according to the OFX\n * spec.\n * See \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @return {String} the position type\n */\nBasePosition.prototype.getPositionType = function() {\n  return this.getInvestmentPosition().getPositionType();\n};\n\n\n/**\n * Gets the position type as one of the well-known types.\n * See \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @return {PositionType} the position type or null if it's not one of the well-known types\n */\nBasePosition.prototype.getPositionTypeEnum = function() {\n  return PositionType.fromOfx(this.getPositionType());\n};\n\n\n/**\n * Gets the number of units in the position. For stocks, mutual funds, and others, this\n * is the number of shares. For bonds, this is the face value. For options, this is the number of\n * contacts. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @return {Double} the number of units in the position\n */\nBasePosition.prototype.getUnits = function() {\n  return this.getInvestmentPosition().getUnits();\n};\n\n\n/**\n * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n * per contact) price. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @return {Double} the per unit price\n */\nBasePosition.prototype.getUnitPrice = function() {\n  return this.getInvestmentPosition().getUnitPrice();\n};\n\n\n/**\n * Gets the market value of this position. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @return {Double} the market value of the position\n */\nBasePosition.prototype.getMarketValue = function() {\n  return this.getInvestmentPosition().getMarketValue();\n};\n\n\n/**\n * Gets the date and time of the unit price and market value. This is a required field according\n * to the OFX spec.\n * See \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @return {Date} the market value date\n */\nBasePosition.prototype.getMarketValueDate = function() {\n  return this.getInvestmentPosition().getMarketValueDate();\n};\n\n\n/**\n * Gets the currency code of the position. This is an optional field according to the OFX spec.\n * If not present, it's the default currency of the account.\n * See \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @return {String} the currency code of the position or null for the default currency\n */\nBasePosition.prototype.getCurrencyCode = function() {\n  return this.getInvestmentPosition().getCurrencyCode();\n};\n\n\n/**\n * Gets the memo associated with the position. This is an optional field according to the OFX\n * spec.\n * See \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @return {String} the memo\n */\nBasePosition.prototype.getMemo = function() {\n  return this.getInvestmentPosition().getMemo();\n};\n\n\n/**\n * Gets the 401K source for the sale. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n * according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {String} the 401k source\n */\nBasePosition.prototype.get401kSource = function() {\n  return this.getInvestmentPosition().get401kSource();\n};\n\n\n/**\n * Gets the 401k source as one of the well-known types.\n *\n * @return {Inv401KSource} the 401k source or null if it's not one of the well-known types\n */\nBasePosition.prototype.get401kSourceEnum = function() {\n  return Inv401KSource.fromOfx(this.get401kSource());\n};\n\n\n\n\nmodule.exports = BasePosition;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar BasePosition = require(\"./BasePosition\");\n\n/**\n * Represents a debt position.\n * See \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @class\n * @augments BasePosition\n */\nfunction DebtPosition () {\n  BasePosition.call(this);\n}\n\ninherit(DebtPosition, \"extends\", BasePosition);\n\n\nAggregate.add(\"POSDEBT\", DebtPosition);\n\n\n\n\nmodule.exports = DebtPosition;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * Types of 401(k) sources.\n * See \"Section 13.9.2.4.2, OFX Spec\"\n *\n * @enum\n */\nvar Inv401KSource = {\n  PRETAX: \"PRETAX\",\n  AFTER_TAX: \"AFTER_TAX\",\n  MATCH: \"MATCH\",\n  PROFIT_SHARING: \"PROFIT_SHARING\",\n  ROLLOVER: \"ROLLOVER\",\n  OTHER_VEST: \"OTHER_VEST\",\n  OTHER_NONVEST: \"OTHER_NONVEST\",\n  \n  fromOfx: function(/*String*/ ofxVal) {\n    if (\"PRETAX\" === ofxVal) {\n      return Inv401KSource.PRETAX;\n    } else if (\"AFTERTAX\" === ofxVal) {\n      return Inv401KSource.AFTER_TAX;\n    } else if (\"MATCH\" === ofxVal) {\n      return Inv401KSource.MATCH;\n    } else if (\"PROFITSHARING\" === ofxVal) {\n      return Inv401KSource.PROFIT_SHARING;\n    } else if (\"ROLLOVER\" === ofxVal) {\n      return Inv401KSource.ROLLOVER;\n    } else if (\"OTHERVEST\" === ofxVal) {\n      return Inv401KSource.OTHER_VEST;\n    } else if (\"OTHERNONVEST\" === ofxVal) {\n      return Inv401KSource.OTHER_NONVEST;\n    } else {\n      return null;\n    }\n  }\n};\n\n\nmodule.exports = Inv401KSource;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar SubAccountType = require(\"../accounts/SubAccountType\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../../meta/ChildAggregate\");\nvar Element = require(\"../../../../meta/Element\");\nvar SecurityId = require(\"../../seclist/SecurityId\");\nvar PositionType = require(\"./PositionType\");\nvar Inv401KSource = require(\"./Inv401KSource\");\n\n/**\n * Class for the investment position aggregate.\n * See \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @class\n * @augments BasePosition\n */\nfunction InvestmentPosition () {\n\n  /**\n   * @name InvestmentPosition#securityId\n   * @type SecurityId\n   * @access private\n   */\n  this.securityId = null;\n\n  /**\n   * @name InvestmentPosition#heldInAccount\n   * @type String\n   * @access private\n   */\n  this.heldInAccount = null;\n\n  /**\n   * @name InvestmentPosition#positionType\n   * @type String\n   * @access private\n   */\n  this.positionType = null;\n\n  /**\n   * @name InvestmentPosition#units\n   * @type Double\n   * @access private\n   */\n  this.units = null;\n\n  /**\n   * @name InvestmentPosition#unitPrice\n   * @type Double\n   * @access private\n   */\n  this.unitPrice = null;\n\n  /**\n   * @name InvestmentPosition#marketValue\n   * @type Double\n   * @access private\n   */\n  this.marketValue = null;\n\n  /**\n   * @name InvestmentPosition#marketValueDate\n   * @type Date\n   * @access private\n   */\n  this.marketValueDate = null;\n\n  /**\n   * @name InvestmentPosition#currencyCode\n   * @type String\n   * @access private\n   */\n  this.currencyCode = null;\n\n  /**\n   * @name InvestmentPosition#memo\n   * @type String\n   * @access private\n   */\n  this.memo = null;\n\n  /**\n   * @name InvestmentPosition#inv401kSource\n   * @type String\n   * @access private\n   */\n  this.inv401kSource = null;\n}\n\n\n\nAggregate.add(\"INVPOS\", InvestmentPosition);\n\n\n/**\n * Gets the security id for the position. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @return {SecurityId} the security id for the position\n */\nInvestmentPosition.prototype.getSecurityId = function() {\n  return this.securityId;\n};\nChildAggregate.add(InvestmentPosition, {required: true, order: 10, attributeType: SecurityId, readMethod: \"getSecurityId\", writeMethod: \"setSecurityId\"});\n\n\n/**\n * Sets the security id for the position. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @param {SecurityId} securityId the security id for the position\n */\nInvestmentPosition.prototype.setSecurityId = function(securityId) {\n  this.securityId = securityId;\n};\n\n\n/**\n * Gets the sub-account type. One of \"CASH\", \"MARGIN\", \"SHORT\", \"OTHER\". This is a required field\n * according to the OFX spec.\n * See \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @return {String} the sub-account type\n */\nInvestmentPosition.prototype.getHeldInAccount = function() {\n  return this.heldInAccount;\n};\nElement.add(InvestmentPosition, {name: \"HELDINACCT\", required: true, order: 20, attributeType: String, readMethod: \"getHeldInAccount\", writeMethod: \"setHeldInAccount\"});\n\n\n/**\n * Sets the sub-account type. One of \"CASH\", \"MARGIN\", \"SHORT\", \"OTHER\". This is a required field\n * according to the OFX spec.\n * See \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @param {String} heldInAccount the sub-account type\n */\nInvestmentPosition.prototype.setHeldInAccount = function(heldInAccount) {\n  this.heldInAccount = heldInAccount;\n};\n\n\n/**\n * Gets the sub-account type as one of the well-known types.\n * See \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @return {SubAccountType} the sub-account type or null if it's not one of the well-known types\n */\nInvestmentPosition.prototype.getHeldInAccountEnum = function() {\n  return SubAccountType.fromOfx(this.getHeldInAccount());\n};\n\n\n/**\n * Gets the position type. One of SHORT or LONG. This is a required field according to the OFX\n * spec.\n * See \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @return {String} the position type\n */\nInvestmentPosition.prototype.getPositionType = function() {\n  return this.positionType;\n};\nElement.add(InvestmentPosition, {name: \"POSTYPE\", required: true, order: 30, attributeType: String, readMethod: \"getPositionType\", writeMethod: \"setPositionType\"});\n\n\n/**\n * Sets the position type. One of SHORT or LONG. This is a required field according to the OFX\n * spec.\n * See \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @param {String} positionType the position type\n */\nInvestmentPosition.prototype.setPositionType = function(positionType) {\n  this.positionType = positionType;\n};\n\n\n/**\n * Gets the position type as one of the well-known types.\n * See \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @return {PositionType} the position type or null if it's not one of the well-known types\n */\nInvestmentPosition.prototype.getPositionTypeEnum = function() {\n  return PositionType.fromOfx(this.getPositionType());\n};\n\n\n/**\n * Gets the number of units in the position. For stocks, mutual funds, and others, this\n * is the number of shares. For bonds, this is the face value. For options, this is the number of\n * contacts. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @return {Double} the number of units in the position\n */\nInvestmentPosition.prototype.getUnits = function() {\n  return this.units;\n};\nElement.add(InvestmentPosition, {name: \"UNITS\", required: true, order: 40, attributeType: Number, readMethod: \"getUnits\", writeMethod: \"setUnits\"});\n\n\n/**\n * Sets the number of units in the position. For stocks, mutual funds, and others, this\n * is the number of shares. For bonds, this is the face value. For options, this is the number of\n * contacts. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @param {Double} units the number of units in the position\n */\nInvestmentPosition.prototype.setUnits = function(units) {\n  this.units = units;\n};\n\n\n/**\n * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n * per contact) price. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @return {Double} the per unit price\n */\nInvestmentPosition.prototype.getUnitPrice = function() {\n  return this.unitPrice;\n};\nElement.add(InvestmentPosition, {name: \"UNITPRICE\", required: true, order: 50, attributeType: Number, readMethod: \"getUnitPrice\", writeMethod: \"setUnitPrice\"});\n\n\n/**\n * Sets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n * per contact) price. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @param {Double} unitPrice the per unit price\n */\nInvestmentPosition.prototype.setUnitPrice = function(unitPrice) {\n  this.unitPrice = unitPrice;\n};\n\n\n/**\n * Gets the market value of this position. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @return {Double} the market value of the position\n */\nInvestmentPosition.prototype.getMarketValue = function() {\n  return this.marketValue;\n};\nElement.add(InvestmentPosition, {name: \"MKTVAL\", required: true, order: 60, attributeType: Number, readMethod: \"getMarketValue\", writeMethod: \"setMarketValue\"});\n\n\n/**\n * Sets the market value of this position. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @param {Double} marketValue the market value of the position\n */\nInvestmentPosition.prototype.setMarketValue = function(marketValue) {\n  this.marketValue = marketValue;\n};\n\n\n/**\n * Gets the date and time of the unit price and market value. This is a required field according\n * to the OFX spec.\n * See \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @return {Date} the market value date\n */\nInvestmentPosition.prototype.getMarketValueDate = function() {\n  return this.marketValueDate;\n};\nElement.add(InvestmentPosition, {name: \"DTPRICEASOF\", required: true, order: 70, attributeType: Date, readMethod: \"getMarketValueDate\", writeMethod: \"setMarketValueDate\"});\n\n\n/**\n * Sets the date and time of the unit price and market value. This is a required field according\n * to the OFX spec.\n * See \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @param {Date} marketValueDate the market value date\n */\nInvestmentPosition.prototype.setMarketValueDate = function(marketValueDate) {\n  this.marketValueDate = marketValueDate;\n};\n\n\n/**\n * Gets the currency code of the position. This is an optional field according to the OFX spec.\n * If not present, it's the default currency of the account.\n * See \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @return {String} the currency code of the position or null for the default currency\n */\nInvestmentPosition.prototype.getCurrencyCode = function() {\n  return this.currencyCode;\n};\nElement.add(InvestmentPosition, {name: \"CURRENCY\", order: 80, attributeType: String, readMethod: \"getCurrencyCode\", writeMethod: \"setCurrencyCode\"});\n\n\n/**\n * Sets the currency code of the position. This is an optional field according to the OFX spec.\n * If not present, it's the default currency of the account.\n * See \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @param {String} currencyCode the currency code of the position or null for the default currency\n */\nInvestmentPosition.prototype.setCurrencyCode = function(currencyCode) {\n  this.currencyCode = currencyCode;\n};\n\n\n/**\n * Gets the memo associated with the position. This is an optional field according to the OFX\n * spec.\n * See \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @return {String} the memo\n */\nInvestmentPosition.prototype.getMemo = function() {\n  return this.memo;\n};\nElement.add(InvestmentPosition, {name: \"MEMO\", order: 90, attributeType: String, readMethod: \"getMemo\", writeMethod: \"setMemo\"});\n\n\n/**\n * Sets the memo associated with the position. This is an optional field according to the OFX\n * spec.\n * See \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @param {String} memo the memo\n */\nInvestmentPosition.prototype.setMemo = function(memo) {\n  this.memo = memo;\n};\n\n\n/**\n * Gets the 401K source for the sale. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n * according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {String} the 401k source\n */\nInvestmentPosition.prototype.get401kSource = function() {\n  return this.inv401kSource;\n};\nElement.add(InvestmentPosition, {name: \"INV401KSOURCE\", order: 100, attributeType: String, readMethod: \"get401kSource\", writeMethod: \"set401kSource\"});\n\n\n/**\n * Sets the 401K source for the sale. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n * according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {String} inv401kSource the 401k source\n */\nInvestmentPosition.prototype.set401kSource = function(inv401kSource) {\n  this.inv401kSource = inv401kSource;\n};\n\n\n/**\n * Gets the 401k source as one of the well-known types.\n *\n * @return {Inv401KSource} the 401k source or null if it's not one of the well-known types\n */\nInvestmentPosition.prototype.get401kSourceEnum = function() {\n  return Inv401KSource.fromOfx(this.get401kSource());\n};\n\n\n\n\nmodule.exports = InvestmentPosition;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../../meta/ChildAggregate\");\nvar BasePosition = require(\"./BasePosition\");\n\n/**\n * Aggregate for a list of invesment positions.\n * See \"Section 13.9.2.2, OFX Spec\"\n *\n * @class\n */\nfunction InvestmentPositionList () {\n\n  /**\n   * @name InvestmentPositionList#positions\n   * @type BasePosition[]\n   * @access private\n   */\n  this.positions = null;\n}\n\n\n\nAggregate.add(\"INVPOSLIST\", InvestmentPositionList);\n\n\n/**\n * Gets the list of positions\n *\n * @return {BasePosition[]} the list of positions\n */\nInvestmentPositionList.prototype.getPositions = function() {\n  return this.positions;\n};\nChildAggregate.add(InvestmentPositionList, {order: 10, attributeType: Array, collectionEntryType: BasePosition, readMethod: \"getPositions\", writeMethod: \"setPositions\"});\n\n\n/**\n * Sets the list of positions.\n *\n * @param {BasePosition[]} positions the list of positions\n */\nInvestmentPositionList.prototype.setPositions = function(positions) {\n  this.positions = positions;\n};\n\n\n\n\nmodule.exports = InvestmentPositionList;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar Element = require(\"../../../../meta/Element\");\nvar BasePosition = require(\"./BasePosition\");\n\n/**\n * Represents a mutual fund position.\n * See \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @class\n * @augments BasePosition\n */\nfunction MutualFundPosition () {\n  BasePosition.call(this);\n\n  /**\n   * @name MutualFundPosition#unitsStreet\n   * @type Double\n   * @access private\n   */\n  this.unitsStreet = null;\n\n  /**\n   * @name MutualFundPosition#unitsUser\n   * @type Double\n   * @access private\n   */\n  this.unitsUser = null;\n\n  /**\n   * @name MutualFundPosition#reinvestDividends\n   * @type Boolean\n   * @access private\n   */\n  this.reinvestDividends = null;\n\n  /**\n   * @name MutualFundPosition#reinvestCapitalGains\n   * @type Boolean\n   * @access private\n   */\n  this.reinvestCapitalGains = null;\n}\n\ninherit(MutualFundPosition, \"extends\", BasePosition);\n\n\nAggregate.add(\"POSMF\", MutualFundPosition);\n\n\n/**\n * Gets the number of units in the financial insititution's street name.\n *\n * @return {Double} the number of units in the financial insititution's street name.\n */\nMutualFundPosition.prototype.getUnitsStreet = function() {\n  return this.unitsStreet;\n};\nElement.add(MutualFundPosition, {name: \"UNITSSTREET\", order: 20, attributeType: Number, readMethod: \"getUnitsStreet\", writeMethod: \"setUnitsStreet\"});\n\n\n/**\n * Sets the number of units in the financial insititution's street name.\n *\n * @param {Double} unitsStreet the number of units in the financial insititution's street name.\n */\nMutualFundPosition.prototype.setUnitsStreet = function(unitsStreet) {\n  this.unitsStreet = unitsStreet;\n};\n\n\n/**\n * Gets the number of units in the user's name.\n *\n * @return {Double} the number of units in the user's name.\n */\nMutualFundPosition.prototype.getUnitsUser = function() {\n  return this.unitsUser;\n};\nElement.add(MutualFundPosition, {name: \"UNITSUSER\", order: 30, attributeType: Number, readMethod: \"getUnitsUser\", writeMethod: \"setUnitsUser\"});\n\n\n/**\n * Sets the number of units in the user's name.\n *\n * @param {Double} unitsUser the number of units in the user's name.\n */\nMutualFundPosition.prototype.setUnitsUser = function(unitsUser) {\n  this.unitsUser = unitsUser;\n};\n\n\n/**\n * Gets whether dividends are automatically reinvested.\n *\n * @return {Boolean} whether dividends are automatically reinvested\n */\nMutualFundPosition.prototype.getReinvestDividends = function() {\n  return this.reinvestDividends;\n};\nElement.add(MutualFundPosition, {name: \"REINVDIV\", order: 50, attributeType: Boolean, readMethod: \"getReinvestDividends\", writeMethod: \"setReinvestDividends\"});\n\n\n/**\n * Sets whether dividends are automatically reinvested.\n *\n * @param {Boolean} reinvestDividends whether dividends are automatically reinvested\n */\nMutualFundPosition.prototype.setReinvestDividends = function(reinvestDividends) {\n  this.reinvestDividends = reinvestDividends;\n};\n\n\n/**\n * Gets whether capital gains are automatically reinvested.\n *\n * @return {Boolean} whether capital gains are automatically reinvested\n */\nMutualFundPosition.prototype.getReinvestCapitalGains = function() {\n  return this.reinvestCapitalGains;\n};\nElement.add(MutualFundPosition, {name: \"REINVCG\", order: 60, attributeType: Boolean, readMethod: \"getReinvestCapitalGains\", writeMethod: \"setReinvestCapitalGains\"});\n\n\n/**\n * Sets whether capital gains are automatically reinvested.\n *\n * @param {Boolean} reinvestCapitalGains whether capital gains are automatically reinvested\n */\nMutualFundPosition.prototype.setReinvestCapitalGains = function(reinvestCapitalGains) {\n  this.reinvestCapitalGains = reinvestCapitalGains;\n};\n\n\n\n\nmodule.exports = MutualFundPosition;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar Element = require(\"../../../../meta/Element\");\nvar BasePosition = require(\"./BasePosition\");\nvar ShortOptionSecurity = require(\"./ShortOptionSecurity\");\n\n/**\n * Represents an options position.\n * See \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @class\n * @augments BasePosition\n */\nfunction OptionsPosition () {\n  BasePosition.call(this);\n\n  /**\n   * @name OptionsPosition#secured\n   * @type String\n   * @access private\n   */\n  this.secured = null;\n}\n\ninherit(OptionsPosition, \"extends\", BasePosition);\n\n\nAggregate.add(\"POSOPT\", OptionsPosition);\n\n\n/**\n * Gets how the options position is secured (for short positions).\n *\n * @return {String} how the options position is secured\n */\nOptionsPosition.prototype.getSecured = function() {\n  return this.secured;\n};\nElement.add(OptionsPosition, {name: \"SECURED\", order: 20, attributeType: String, readMethod: \"getSecured\", writeMethod: \"setSecured\"});\n\n\n/**\n * Sets how the options position is secured (for short positions).\n *\n * @param {String} secured how the options position is secured\n */\nOptionsPosition.prototype.setSecured = function(secured) {\n  this.secured = secured;\n};\n\n\n/**\n * Gets how the options position is secured as a well-known type.\n *\n * @return {ShortOptionSecurity} how the option position is secured or null if it's not a well-known type\n */\nOptionsPosition.prototype.getSecuredEnum = function() {\n  return ShortOptionSecurity.fromOfx(this.getSecured());\n};\n\n\n\n\nmodule.exports = OptionsPosition;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar BasePosition = require(\"./BasePosition\");\n\n/**\n * Represents other types of positions.\n * See \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @class\n * @augments BasePosition\n */\nfunction OtherPosition () {\n  BasePosition.call(this);\n}\n\ninherit(OtherPosition, \"extends\", BasePosition);\n\n\nAggregate.add(\"POSOTHER\", OtherPosition);\n\n\n\n\nmodule.exports = OtherPosition;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * Type of position.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @enum\n */\nvar PositionType = {\n  LONG: \"LONG\",\n  SHORT: \"SHORT\",\n\n  fromOfx: function(/*String*/ ofxVal) {\n    if (\"LONG\" === ofxVal) {\n      return PositionType.LONG;\n    } else if (\"SHORT\" === ofxVal) {\n      return PositionType.SHORT;\n    } else {\n      return null;\n    }\n  }\n};\n\n\nmodule.exports = PositionType;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\"use strict\";\n\n/**\n * How a short option is secured.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @enum\n */\nvar ShortOptionSecurity = {\n  NAKED: \"NAKED\",\n  COVERED: \"COVERED\",\n\n  fromOfx: function(/*String*/ ofxVal) {\n    if (\"NAKED\" === ofxVal) {\n      return ShortOptionSecurity.NAKED;\n    } else if (\"COVERED\" === ofxVal) {\n      return ShortOptionSecurity.COVERED;\n    } else {\n      return null;\n    }\n  }\n};\n\n\nmodule.exports = ShortOptionSecurity;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar BasePosition = require(\"./BasePosition\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar Element = require(\"../../../../meta/Element\");\n\n/**\n * Represents a stock position.\n * See \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @class\n * @augments BasePosition\n */\nfunction StockPosition () {\n  BasePosition.call(this);\n\n  /**\n   * @name StockPosition#unitsStreet\n   * @type Double\n   * @access private\n   */\n  this.unitsStreet = null;\n\n  /**\n   * @name StockPosition#unitsUser\n   * @type Double\n   * @access private\n   */\n  this.unitsUser = null;\n\n  /**\n   * @name StockPosition#reinvestDividends\n   * @type Boolean\n   * @access private\n   */\n  this.reinvestDividends = null;\n}\n\ninherit(StockPosition, \"extends\", BasePosition);\n\n\nAggregate.add(\"POSSTOCK\", StockPosition);\n\n\n/**\n * Gets the number of units in the financial insititution's street name.\n *\n * @return {Double} the number of units in the financial insititution's street name.\n */\nStockPosition.prototype.getUnitsStreet = function() {\n  return this.unitsStreet;\n};\nElement.add(StockPosition, {name: \"UNITSSTREET\", order: 20, attributeType: Number, readMethod: \"getUnitsStreet\", writeMethod: \"setUnitsStreet\"});\n\n\n/**\n * Sets the number of units in the financial insititution's street name.\n *\n * @param {Double} unitsStreet the number of units in the financial insititution's street name.\n */\nStockPosition.prototype.setUnitsStreet = function(unitsStreet) {\n  this.unitsStreet = unitsStreet;\n};\n\n\n/**\n * Gets the number of units in the user's name.\n *\n * @return {Double} the number of units in the user's name.\n */\nStockPosition.prototype.getUnitsUser = function() {\n  return this.unitsUser;\n};\nElement.add(StockPosition, {name: \"UNITSUSER\", order: 30, attributeType: Number, readMethod: \"getUnitsUser\", writeMethod: \"setUnitsUser\"});\n\n\n/**\n * Sets the number of units in the user's name.\n *\n * @param {Double} unitsUser the number of units in the user's name.\n */\nStockPosition.prototype.setUnitsUser = function(unitsUser) {\n  this.unitsUser = unitsUser;\n};\n\n\n/**\n * Gets whether dividends are automatically reinvested.\n *\n * @return {Boolean} whether dividends are automatically reinvested\n */\nStockPosition.prototype.getReinvestDividends = function() {\n  return this.reinvestDividends;\n};\nElement.add(StockPosition, {name: \"REINVDIV\", order: 40, attributeType: Boolean, readMethod: \"getReinvestDividends\", writeMethod: \"setReinvestDividends\"});\n\n\n/**\n * Sets whether dividends are automatically reinvested.\n *\n * @param {Boolean} reinvestDividends whether dividends are automatically reinvested\n */\nStockPosition.prototype.setReinvestDividends = function(reinvestDividends) {\n  this.reinvestDividends = reinvestDividends;\n};\n\n\n\n\nmodule.exports = StockPosition;\n","\"use strict\";\n\nmodule.exports = {\n  BasePosition: require(\"./BasePosition\"),\n  DebtPosition: require(\"./DebtPosition\"),\n  Inv401KSource: require(\"./Inv401KSource\"),\n  InvestmentPosition: require(\"./InvestmentPosition\"),\n  InvestmentPositionList: require(\"./InvestmentPositionList\"),\n  MutualFundPosition: require(\"./MutualFundPosition\"),\n  OptionsPosition: require(\"./OptionsPosition\"),\n  OtherPosition: require(\"./OtherPosition\"),\n  PositionType: require(\"./PositionType\"),\n  ShortOptionSecurity: require(\"./ShortOptionSecurity\"),\n  StockPosition: require(\"./StockPosition\")\n};\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\"use strict\";\n\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../../meta/ChildAggregate\");\nvar BalanceRecord = require(\"../../common/BalanceRecord\");\n\n/**\n * Aggregate for the investment balance list.\n * See \"Section 13.9.2.7, OFX Spec\"\n *\n * @class\n */\nfunction BalanceList () {\n\n  /**\n   * @name BalanceList#balanceRecords\n   * @type BalanceRecord[]\n   * @access private\n   */\n  this.balanceRecords = null;\n}\n\n\n\nAggregate.add(\"BALLIST\", BalanceList);\n\n\n/**\n * Gets the list of balance records.\n *\n * @return {BalanceRecord[]} the list of balance records.\n */\nBalanceList.prototype.getBalanceRecords = function() {\n  return this.balanceRecords;\n};\nChildAggregate.add(BalanceList, {order: 10, attributeType: Array, collectionEntryType: BalanceRecord, readMethod: \"getBalanceRecords\", writeMethod: \"setBalanceRecords\"});\n\n\n/**\n * Sets the list of balance records.\n *\n * @param {BalanceRecord[]} balanceRecords the list of balance records.\n */\nBalanceList.prototype.setBalanceRecords = function(balanceRecords) {\n  this.balanceRecords = balanceRecords;\n};\n\n\n\n\nmodule.exports = BalanceList;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar Element = require(\"../../../../meta/Element\");\n\n\n/**\n * Aggreate to indicate whether position information is requested as part of the statement\n * See \"Section 13.9.1.2, OFX Spec\"\n *\n * @class\n */\nfunction IncludePosition () {\n\n  /**\n   * @name IncludePosition#sentDownDate\n   * @type Date\n   * @access private\n   */\n  this.sentDownDate = null;\n\n  /**\n   * @name IncludePosition#includePositions\n   * @type Boolean\n   * @access private\n   */\n  this.includePositions = Boolean.TRUE;\n}\n\n\n\nAggregate.add(\"INCPOS\", IncludePosition);\n\n\n/**\n * Gets the date that the position should be sent down for. This is an optional field according\n * to the OFX spec.\n *\n * @return {Date} the date for the position\n */\nIncludePosition.prototype.getDateSentDown = function() {\n  return this.sentDownDate;\n};\nElement.add(IncludePosition, {name: \"DTASOF\", order: 0, attributeType: Date, readMethod: \"getDateSentDown\", writeMethod: \"setDateSentDown\"});\n\n\n/**\n * Sets the date that the position should be sent down for. This is an optional field according\n * to the OFX spec.\n *\n * @param {Date} sentDownDate the date for the position\n */\nIncludePosition.prototype.setDateSentDown = function(sentDownDate) {\n  this.sentDownDate = sentDownDate;\n};\n\n\n/**\n * Gets whether to include positions in the statement download.\n *\n * @return {Boolean} whether to include positions in the statement download\n */\nIncludePosition.prototype.getIncludePositions = function() {\n  return this.includePositions;\n};\nElement.add(IncludePosition, {name: \"INCLUDE\", order: 10, attributeType: Boolean, readMethod: \"getIncludePositions\", writeMethod: \"setIncludePositions\"});\n\n\n/**\n * Sets whether to include positions in the statement download.\n *\n * @param {Boolean} includePositions whether to include positions in the statement download\n */\nIncludePosition.prototype.setIncludePositions = function(includePositions) {\n  this.includePositions = includePositions;\n};\n\n\n\n\nmodule.exports = IncludePosition;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../../meta/ChildAggregate\");\nvar Element = require(\"../../../../meta/Element\");\nvar BalanceList = require(\"./BalanceList\");\n\n/**\n * Aggregate for the investment balance.\n * See \"Section 13.9.2.7, OFX Spec\"\n *\n * @class\n */\nfunction InvestmentBalance () {\n\n  /**\n   * @name InvestmentBalance#availableCash\n   * @type Double\n   * @access private\n   */\n  this.availableCash = null;\n\n  /**\n   * @name InvestmentBalance#marginBalance\n   * @type Double\n   * @access private\n   */\n  this.marginBalance = null;\n\n  /**\n   * @name InvestmentBalance#shortBalance\n   * @type Double\n   * @access private\n   */\n  this.shortBalance = null;\n\n  /**\n   * @name InvestmentBalance#buyingPower\n   * @type Double\n   * @access private\n   */\n  this.buyingPower = null;\n\n  /**\n   * @name InvestmentBalance#balanceList\n   * @type BalanceList\n   * @access private\n   */\n  this.balanceList = null;\n}\n\n\n\nAggregate.add(\"INVBAL\", InvestmentBalance);\n\n\n/**\n * Gets the available cash balance across all sub-accounts, including sweep funds. This is\n * required field according to the OFX spec.\n *\n * @return {Double} the available cash balance\n */\nInvestmentBalance.prototype.getAvailableCash = function() {\n  return this.availableCash;\n};\nElement.add(InvestmentBalance, {name: \"AVAILCASH\", required: true, order: 10, attributeType: Number, readMethod: \"getAvailableCash\", writeMethod: \"setAvailableCash\"});\n\n\n/**\n * Sets the available cash balance across all sub-accounts, including sweep funds. This is\n * required field according to the OFX spec.\n *\n * @param {Double} availableCash the available cash balance\n */\nInvestmentBalance.prototype.setAvailableCash = function(availableCash) {\n  this.availableCash = availableCash;\n};\n\n\n/**\n * Gets the margin account balance. A positive balance indicates a positive cash balance, while\n * a negative balance indicates the customer borrowed funds. This is a required field according\n * to the OFX spec.\n *\n * @return {Double} the margin account balance\n */\nInvestmentBalance.prototype.getMarginBalance = function() {\n  return this.marginBalance;\n};\nElement.add(InvestmentBalance, {name: \"MARGINBALANCE\", required: true, order: 20, attributeType: Number, readMethod: \"getMarginBalance\", writeMethod: \"setMarginBalance\"});\n\n\n/**\n * Sets the margin account balance. A positive balance indicates a positive cash balance, while\n * a negative balance indicates the customer borrowed funds. This is a required field according\n * to the OFX spec.\n *\n * @param {Double} marginBalance the margin account balance\n */\nInvestmentBalance.prototype.setMarginBalance = function(marginBalance) {\n  this.marginBalance = marginBalance;\n};\n\n\n/**\n * Gets the market value of all short positions. This is a positive balance. This is a required\n * field according to the OFX spec.\n *\n * @return {Double} the market value of all short positions\n */\nInvestmentBalance.prototype.getShortBalance = function() {\n  return this.shortBalance;\n};\nElement.add(InvestmentBalance, {name: \"SHORTBALANCE\", required: true, order: 30, attributeType: Number, readMethod: \"getShortBalance\", writeMethod: \"setShortBalance\"});\n\n\n/**\n * Sets the market value of all short positions. This is a positive balance. This is a required\n * field according to the OFX spec.\n *\n * @param {Double} shortBalance the market value of all short positions\n */\nInvestmentBalance.prototype.setShortBalance = function(shortBalance) {\n  this.shortBalance = shortBalance;\n};\n\n\n/**\n * Gets the buying power amount. This is an optional field according to the OFX spec.\n *\n * @return {Double} the buying power\n */\nInvestmentBalance.prototype.getBuyingPower = function() {\n  return this.buyingPower;\n};\nElement.add(InvestmentBalance, {name: \"BUYPOWER\", order: 40, attributeType: Number, readMethod: \"getBuyingPower\", writeMethod: \"setBuyingPower\"});\n\n\n/**\n * Sets the buying power amount. This is an optional field according to the OFX spec.\n *\n * @param {Double} buyingPower the buying power\n */\nInvestmentBalance.prototype.setBuyingPower = function(buyingPower) {\n  this.buyingPower = buyingPower;\n};\n\n\n/**\n * Gets the investment balance list. This is an optional field according to the OFX spec.\n *\n * @return {BalanceList} the investment balance list\n */\nInvestmentBalance.prototype.getBalanceList = function() {\n  return this.balanceList;\n};\nChildAggregate.add(InvestmentBalance, {order: 50, attributeType: BalanceList, readMethod: \"getBalanceList\", writeMethod: \"setBalanceList\"});\n\n\n/**\n * Sets the investment balance list. This is an optional field according to the OFX spec.\n *\n * @param {BalanceList} balanceList the investment balance list\n */\nInvestmentBalance.prototype.setBalanceList = function(balanceList) {\n  this.balanceList = balanceList;\n};\n\n\n\n\nmodule.exports = InvestmentBalance;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar StatementRequest = require(\"../../common/StatementRequest\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../../meta/ChildAggregate\");\nvar Element = require(\"../../../../meta/Element\");\nvar InvestmentAccountDetails = require(\"../accounts/InvestmentAccountDetails\");\nvar IncludePosition = require(\"./IncludePosition\");\n\n/**\n * Aggregate for the investment statement download request.\n * See \"Section 13.9.1.1, OFX Spec\"\n *\n * @class\n * @augments StatementRequest\n */\nfunction InvestmentStatementRequest () {\n  StatementRequest.call(this);\n\n  /**\n   * @name InvestmentStatementRequest#account\n   * @type InvestmentAccountDetails\n   * @access private\n   */\n  this.account = null;\n\n  /**\n   * @name InvestmentStatementRequest#includeOpenOrders\n   * @type Boolean\n   * @access private\n   */\n  this.includeOpenOrders = Boolean.FALSE;\n\n  /**\n   * @name InvestmentStatementRequest#includePosition\n   * @type IncludePosition\n   * @access private\n   */\n  this.includePosition = null;\n\n  /**\n   * @name InvestmentStatementRequest#includeBalance\n   * @type Boolean\n   * @access private\n   */\n  this.includeBalance = Boolean.TRUE;\n}\n\ninherit(InvestmentStatementRequest, \"extends\", StatementRequest);\n\n\nAggregate.add(\"INVSTMTRQ\", InvestmentStatementRequest);\n\n\n/**\n * The account details.\n *\n * @return {InvestmentAccountDetails} The account details.\n */\nInvestmentStatementRequest.prototype.getAccount = function() {\n  return this.account;\n};\nChildAggregate.add(InvestmentStatementRequest, {name: \"INVACCTFROM\", required: true, order: 0, attributeType: InvestmentAccountDetails, readMethod: \"getAccount\", writeMethod: \"setAccount\"});\n\n\n/**\n * The account details.\n *\n * @param {InvestmentAccountDetails} account The account details.\n */\nInvestmentStatementRequest.prototype.setAccount = function(account) {\n  this.account = account;\n};\n\n\n/**\n * Gets whether to include open orders. This is an optional field according to the OFX spec.\n * <br>\n * Note, open orders are not yet implemented.\n *\n * @return {Boolean} whether to include open orders\n */\nInvestmentStatementRequest.prototype.getIncludeOpenOrders = function() {\n  return this.includeOpenOrders;\n};\nElement.add(InvestmentStatementRequest, {name: \"INCOO\", order: 20, attributeType: Boolean, readMethod: \"getIncludeOpenOrders\", writeMethod: \"setIncludeOpenOrders\"});\n\n\n/**\n * Sets whether to include open orders. This is an optional field according to the OFX spec.\n * <br>\n * Note, open orders are not yet implemented.\n *\n * @param {Boolean} includeOpenOrders whether to include open orders\n */\nInvestmentStatementRequest.prototype.setIncludeOpenOrders = function(includeOpenOrders) {\n  this.includeOpenOrders = includeOpenOrders;\n};\n\n\n/**\n * Gets the include position child aggregate. This is a required field according to the OFX spec.\n *\n * @return {IncludePosition} the include position child aggregate\n */\nInvestmentStatementRequest.prototype.getIncludePosition = function() {\n  return this.includePosition;\n};\nChildAggregate.add(InvestmentStatementRequest, {name: \"INCPOS\", required: true, order: 30, attributeType: IncludePosition, readMethod: \"getIncludePosition\", writeMethod: \"setIncludePosition\"});\n\n\n/**\n * Gets the include position child aggregate. This is a required field according to the OFX spec.\n *\n * @param {IncludePosition} includePosition the include position child aggregate\n */\nInvestmentStatementRequest.prototype.setIncludePosition = function(includePosition) {\n  this.includePosition = includePosition;\n};\n\n\n/**\n * Gets whether to include balance info in the response. This is a required field according to\n * the OFX spec.\n *\n * @return {Boolean} whether to include balance info in the response\n */\nInvestmentStatementRequest.prototype.getIncludeBalance = function() {\n  return this.includeBalance;\n};\nElement.add(InvestmentStatementRequest, {name: \"INCBAL\", required: true, order: 40, attributeType: Boolean, readMethod: \"getIncludeBalance\", writeMethod: \"setIncludeBalance\"});\n\n\n/**\n * Sets whether to include balance info in the response. This is a required field according to\n * the OFX spec.\n *\n * @param {Boolean} includeBalance whether to include balance info in the response\n */\nInvestmentStatementRequest.prototype.setIncludeBalance = function(includeBalance) {\n  this.includeBalance = includeBalance;\n};\n\n\n\n\nmodule.exports = InvestmentStatementRequest;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar MessageSetType = require(\"../../MessageSetType\");\nvar RequestMessageSet = require(\"../../RequestMessageSet\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../../meta/ChildAggregate\");\nvar InvestmentStatementRequestTransaction = require(\"./InvestmentStatementRequestTransaction\");\n\n/**\n * Investment statement request message set.\n * See \"Section 13.7.1.2.1, OFX Spec\"\n *\n * @class\n * @augments RequestMessageSet\n */\nfunction InvestmentStatementRequestMessageSet () {\n  RequestMessageSet.call(this);\n\n  /**\n   * @name InvestmentStatementRequestMessageSet#statementRequest\n   * @type InvestmentStatementRequestTransaction\n   * @access private\n   */\n  this.statementRequest = null;\n}\n\ninherit(InvestmentStatementRequestMessageSet, \"extends\", RequestMessageSet);\n\n\nAggregate.add(\"INVSTMTMSGSRQV1\", InvestmentStatementRequestMessageSet);\n\n\nInvestmentStatementRequestMessageSet.prototype.getType = function() {\n  return MessageSetType.investment;\n};\n\n\n/**\n * Gets the statement request.\n *\n * @return {InvestmentStatementRequestTransaction} the request\n */\nInvestmentStatementRequestMessageSet.prototype.getStatementRequest = function() {\n  return this.statementRequest;\n};\nChildAggregate.add(InvestmentStatementRequestMessageSet, {order: 0, attributeType: InvestmentStatementRequestTransaction, readMethod: \"getStatementRequest\", writeMethod: \"setStatementRequest\"});\n\n\n/**\n * Sets the statement request.\n *\n * @param {InvestmentStatementRequestTransaction} statementRequest the request\n */\nInvestmentStatementRequestMessageSet.prototype.setStatementRequest = function(statementRequest) {\n  this.statementRequest = statementRequest;\n};\n\n\n// Inherited.\nInvestmentStatementRequestMessageSet.prototype.getRequestMessages = function() {\n  var requestMessages = [];\n  if (this.getStatementRequest()) {\n    requestMessages.push(this.getStatementRequest());\n  }\n  return requestMessages;\n};\n\n\n\n\nmodule.exports = InvestmentStatementRequestMessageSet;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar InvestmentStatementRequest = require(\"./InvestmentStatementRequest\");\nvar TransactionWrappedRequestMessage = require(\"../../TransactionWrappedRequestMessage\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../../meta/ChildAggregate\");\n\n/**\n * Investment statement transaction request.\n * See \"Section 13.9.1.1, OFX Spec\"\n *\n * @class\n * @augments TransactionWrappedRequestMessage\n */\nfunction InvestmentStatementRequestTransaction () {\n  TransactionWrappedRequestMessage.call(this);\n\n  /**\n   * @name InvestmentStatementRequestTransaction#message\n   * @type InvestmentStatementRequest\n   * @access private\n   */\n  this.message = null;\n}\n\ninherit(InvestmentStatementRequestTransaction, \"extends\", TransactionWrappedRequestMessage);\n\n\nAggregate.add(\"INVSTMTTRNRQ\", InvestmentStatementRequestTransaction);\n\n\n/**\n * Gets the the statement request message.\n *\n * @return {InvestmentStatementRequest} the statement request message.\n */\nInvestmentStatementRequestTransaction.prototype.getMessage = function() {\n  return this.message;\n};\nChildAggregate.add(InvestmentStatementRequestTransaction, {required: true, order: 30, attributeType: InvestmentStatementRequest, readMethod: \"getMessage\", writeMethod: \"setMessage\"});\n\n\n/**\n * Sets the the statement request message.\n *\n * @param {InvestmentStatementRequest} message the statement request message.\n */\nInvestmentStatementRequestTransaction.prototype.setMessage = function(message) {\n  this.message = message;\n};\n\n\n// Inherited.\nInvestmentStatementRequestTransaction.prototype.setWrappedMessage = function(/*InvestmentStatementRequest*/ message) {\n  this.setMessage(message);\n};\n\n\n\n\nmodule.exports = InvestmentStatementRequestTransaction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar StatementResponse = require(\"../../common/StatementResponse\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../../meta/ChildAggregate\");\nvar Element = require(\"../../../../meta/Element\");\nvar InvestmentAccountDetails = require(\"../accounts/InvestmentAccountDetails\");\nvar InvestmentTransactionList = require(\"../transactions/InvestmentTransactionList\");\nvar InvestmentPositionList = require(\"../positions/InvestmentPositionList\");\nvar InvestmentBalance = require(\"./InvestmentBalance\");\n\n\n/**\n * Aggregate for the investment statement download response.\n * See \"Section 13.9.2.2, OFX Spec\"\n *\n * @class\n * @augments StatementResponse\n */\nfunction InvestmentStatementResponse () {\n  StatementResponse.call(this);\n\n  /**\n   * @name InvestmentStatementResponse#dateOfStatement\n   * @type Date\n   * @access private\n   */\n  this.dateOfStatement = null;\n\n  /**\n   * @name InvestmentStatementResponse#account\n   * @type InvestmentAccountDetails\n   * @access private\n   */\n  this.account = null;\n\n  /**\n   * @name InvestmentStatementResponse#transactionList\n   * @type InvestmentTransactionList\n   * @access private\n   */\n  this.transactionList = null;\n\n  /**\n   * @name InvestmentStatementResponse#positionList\n   * @type InvestmentPositionList\n   * @access private\n   */\n  this.positionList = null;\n\n  /**\n   * @name InvestmentStatementResponse#accountBalance\n   * @type InvestmentBalance\n   * @access private\n   */\n  this.accountBalance = null;\n\n  /**\n   * @name InvestmentStatementResponse#securityList\n   * @type SecurityList\n   * @access private\n   */\n  this.securityList = null;\n}\n\ninherit(InvestmentStatementResponse, \"extends\", StatementResponse);\n\n\nAggregate.add(\"INVSTMTRS\", InvestmentStatementResponse);\n\n\n/**\n * Gets the name of the response message.\n *\n * @return {String} the name of the response message\n */\n// @Override\nInvestmentStatementResponse.prototype.getResponseMessageName = function() {\n  return \"investment statement\";\n};\n\n\n/**\n * Gets the date and time for the statement download. This is a required field according to the\n * OFX spec.\n *\n * @return {Date} the date and time for the statement download\n */\nInvestmentStatementResponse.prototype.getDateOfStatement = function() {\n  return this.dateOfStatement;\n};\nElement.add(InvestmentStatementResponse, {name: \"DTASOF\", required: true, order: 60, attributeType: Date, readMethod: \"getDateOfStatement\", writeMethod: \"setDateOfStatement\"});\n\n\n/**\n * Sets the date and time for the statement download. This is a required field according to the\n * OFX spec.\n *\n * @param {Date} dateOfStatement the date and time for the statement download\n */\nInvestmentStatementResponse.prototype.setDateOfStatement = function(dateOfStatement) {\n  this.dateOfStatement = dateOfStatement;\n};\n\n\n/**\n * Gets the account for the statement. This is a required field according to the OFX spec.\n *\n * @return {InvestmentAccountDetails} the account for the statement\n */\nInvestmentStatementResponse.prototype.getAccount = function() {\n  return this.account;\n};\nChildAggregate.add(InvestmentStatementResponse, {name:\"INVACCTFROM\", required: true, order: 10, attributeType: InvestmentAccountDetails, readMethod: \"getAccount\", writeMethod: \"setAccount\"});\n\n\n/**\n * Sets the account for the statement. This is a required field according to the OFX spec.\n *\n * @param {InvestmentAccountDetails} account the account for the statement\n */\nInvestmentStatementResponse.prototype.setAccount = function(account) {\n  this.account = account;\n};\n\n\n/**\n * Gets the transaction list aggregate. This is an optional field according to the OFX spec.\n *\n * @return {InvestmentTransactionList} the transaction list aggregate\n */\nInvestmentStatementResponse.prototype.getInvestmentTransactionList = function() {\n  return this.transactionList;\n};\nChildAggregate.add(InvestmentStatementResponse, {order: 70, attributeType: InvestmentTransactionList, readMethod: \"getInvestmentTransactionList\", writeMethod: \"setInvestmentTransactionList\"});\n\n\n/**\n * Sets the transaction list aggregate. This is an optional field according to the OFX spec.\n *\n * @param {InvestmentTransactionList} transactionList the transaction list aggregate\n */\nInvestmentStatementResponse.prototype.setInvestmentTransactionList = function(transactionList) {\n  this.transactionList = transactionList;\n};\n\n\n/**\n * Gets the position list aggreate. This is an optional field according to the OFX spec.\n *\n * @return {InvestmentPositionList} the position list aggregate\n */\nInvestmentStatementResponse.prototype.getPositionList = function() {\n  return this.positionList;\n};\nChildAggregate.add(InvestmentStatementResponse, {order: 80, attributeType: InvestmentPositionList, readMethod: \"getPositionList\", writeMethod: \"setPositionList\"});\n\n\n/**\n * Sets the position list aggreate. This is an optional field according to the OFX spec.\n *\n * @param {InvestmentPositionList} positionList the position list aggregate\n */\nInvestmentStatementResponse.prototype.setPositionList = function(positionList) {\n  this.positionList = positionList;\n};\n\n\n/**\n * Gets the account balance. This is an optional field according to the OFX spec.\n *\n * @return {InvestmentBalance} the account balance\n */\nInvestmentStatementResponse.prototype.getAccountBalance = function() {\n  return this.accountBalance;\n};\nChildAggregate.add(InvestmentStatementResponse, {order: 90, attributeType: InvestmentBalance, readMethod: \"getAccountBalance\", writeMethod: \"setAccountBalance\"});\n\n\n/**\n * Sets the account balance. This is an optional field according to the OFX spec.\n *\n * @param {InvestmentBalance} accountBalance the account balance\n */\nInvestmentStatementResponse.prototype.setAccountBalance = function(accountBalance) {\n  this.accountBalance = accountBalance;\n};\n\n\n/**\n * Gets the security list aggregate.\n * <br>\n * This is not actually technically part of the investment statement responsr aggregate, but\n * according to Section 13.8.4, OFX spec, this aggregate can appear the overall response and\n * we provide it here for convenience.\n *\n * @return {SecurityList} the security list aggregate\n */\nInvestmentStatementResponse.prototype.getSecurityList = function() {\n  return this.securityList;\n};\n\n\n/**\n * Sets the security list aggregate.\n * <br>\n * This is not actually technically part of the investment statement responsr aggregate, but\n * according to Section 13.8.4, OFX spec, this aggregate can appear the overall response and\n * we provide it here for convenience.\n *\n * @param {SecurityList} securityList the security list aggregate\n */\nInvestmentStatementResponse.prototype.setSecurityList = function(securityList) {\n  this.securityList = securityList;\n};\n\n\n\n\nmodule.exports = InvestmentStatementResponse;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar MessageSetType = require(\"../../MessageSetType\");\nvar ResponseMessageSet = require(\"../../ResponseMessageSet\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../../meta/ChildAggregate\");\nvar InvestmentStatementResponseTransaction = require(\"./InvestmentStatementResponseTransaction\");\n\n/**\n * Investment statement response message set.\n * See \"Section 13.7.1.2.2, OFX Spec\"\n *\n * @class\n * @augments ResponseMessageSet\n */\nfunction InvestmentStatementResponseMessageSet () {\n  ResponseMessageSet.call(this);\n\n  /**\n   * @name InvestmentStatementResponseMessageSet#statementResponses\n   * @type InvestmentStatementResponseTransaction[]\n   * @access private\n   */\n  this.statementResponses = null;\n}\n\ninherit(InvestmentStatementResponseMessageSet, \"extends\", ResponseMessageSet);\n\n\nAggregate.add(\"INVSTMTMSGSRSV1\", InvestmentStatementResponseMessageSet);\n\n\nInvestmentStatementResponseMessageSet.prototype.getType = function() {\n  return MessageSetType.investment;\n};\n\n\n/**\n * Gets the statement response list. Most OFX files have a single statement response.\n *\n * @return {InvestmentStatementResponseTransaction[]} the statement response list\n */\nInvestmentStatementResponseMessageSet.prototype.getStatementResponses = function() {\n  return this.statementResponses;\n};\nChildAggregate.add(InvestmentStatementResponseMessageSet, {order: 0, attributeType: Array, collectionEntryType: InvestmentStatementResponseTransaction, readMethod: \"getStatementResponses\", writeMethod: \"setStatementResponses\"});\n\n\n/**\n * Sets the statement reponse list. Most OFX files have a single statement response.\n *\n * @param {InvestmentStatementResponseTransaction[]} statementResponses the statement response list\n */\nInvestmentStatementResponseMessageSet.prototype.setStatementResponses = function(statementResponses) {\n  this.statementResponses = statementResponses;\n};\n\n\n/**\n * Gets the first statement response. Use getStatementResponses() if you are expecting multiple\n * responses.\n *\n * @return {InvestmentStatementResponseTransaction} the first investment statement response.\n */\nInvestmentStatementResponseMessageSet.prototype.getStatementResponse = function() {\n  return !this.statementResponses || this.statementResponses.length === 0 ? null : this.statementResponses[0];\n};\n\n\n/**\n * Sets the statement response if there is a single response.\n *\n * @param {InvestmentStatementResponseTransaction} statementResponse The statement response.\n */\nInvestmentStatementResponseMessageSet.prototype.setStatementResponse = function(statementResponse) {\n  this.statementResponses = [statementResponse];\n};\n\n\n// Inherited.\nInvestmentStatementResponseMessageSet.prototype.getResponseMessages = function() {\n  return this.statementResponses;\n};\n\n\n\n\nmodule.exports = InvestmentStatementResponseMessageSet;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar TransactionWrappedResponseMessage = require(\"../../TransactionWrappedResponseMessage\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../../meta/ChildAggregate\");\nvar InvestmentStatementResponse = require(\"./InvestmentStatementResponse\");\n\n/**\n * Investment statement transaction response.\n * See \"Section 13.9.2.1, OFX Spec\"\n *\n * @class\n * @augments TransactionWrappedResponseMessage\n */\nfunction InvestmentStatementResponseTransaction () {\n  TransactionWrappedResponseMessage.call(this);\n\n  /**\n   * @name InvestmentStatementResponseTransaction#message\n   * @type InvestmentStatementResponse\n   * @access private\n   */\n  this.message = null;\n}\n\ninherit(InvestmentStatementResponseTransaction, \"extends\", TransactionWrappedResponseMessage);\n\n\nAggregate.add(\"INVSTMTTRNRS\", InvestmentStatementResponseTransaction);\n\n\n/**\n * Gets the the statement response message.\n *\n * @return {InvestmentStatementResponse} the statement response message.\n */\nInvestmentStatementResponseTransaction.prototype.getMessage = function() {\n  return this.message;\n};\nChildAggregate.add(InvestmentStatementResponseTransaction, {required: true, order: 30, attributeType: InvestmentStatementResponse, readMethod: \"getMessage\", writeMethod: \"setMessage\"});\n\n\n/**\n * Sets the the statement response message.\n *\n * @param {InvestmentStatementResponse} message the statement response message.\n */\nInvestmentStatementResponseTransaction.prototype.setMessage = function(message) {\n  this.message = message;\n};\n\n\n// Inherited.\nInvestmentStatementResponseTransaction.prototype.getWrappedMessage = function() {\n  return this.getMessage();\n};\n\n\n\n\nmodule.exports = InvestmentStatementResponseTransaction;\n","\"use strict\";\n\nmodule.exports = {\n  BalanceList: require(\"./BalanceList\"),\n  IncludePosition: require(\"./IncludePosition\"),\n  InvestmentBalance: require(\"./InvestmentBalance\"),\n  InvestmentStatementRequest: require(\"./InvestmentStatementRequest\"),\n  InvestmentStatementRequestMessageSet: require(\"./InvestmentStatementRequestMessageSet\"),\n  InvestmentStatementRequestTransaction: require(\"./InvestmentStatementRequestTransaction\"),\n  InvestmentStatementResponse: require(\"./InvestmentStatementResponse\"),\n  InvestmentStatementResponseMessageSet: require(\"./InvestmentStatementResponseMessageSet\"),\n  InvestmentStatementResponseTransaction: require(\"./InvestmentStatementResponseTransaction\")\n};\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar SubAccountType = require(\"../accounts/SubAccountType\");\nvar ChildAggregate = require(\"../../../../meta/ChildAggregate\");\nvar BaseInvestmentTransaction = require(\"./BaseInvestmentTransaction\");\nvar TransactionWithSecurity = require(\"./TransactionWithSecurity\");\nvar BuyInvestmentTransaction = require(\"./BuyInvestmentTransaction\");\n\n\n/**\n * Base class for all investment transactions for buying securities.\n * <br>\n * This class exposes a read-only view of the flattened aggregates that are\n * common to all buy investment transactions as a convenience to application\n * developers who may not find the ofx aggregation model intuitive.\n *\n * @class\n * @augments BaseInvestmentTransaction\n * @augments TransactionWithSecurity\n */\nfunction BaseBuyInvestmentTransaction (/*TransactionType*/ transactionType) {\n  BaseInvestmentTransaction.call(this, transactionType);\n\n  /**\n   * @name BaseBuyInvestmentTransaction#buyInvestment\n   * @type BuyInvestmentTransaction\n   * @access private\n   */\n  this.buyInvestment = null;\n}\n\ninherit(BaseBuyInvestmentTransaction, \"extends\", BaseInvestmentTransaction);\ninherit(BaseBuyInvestmentTransaction, \"implements\", TransactionWithSecurity);\n\n\n\n/**\n * Gets the buy investment transaction child aggregate.\n *\n * @return {BuyInvestmentTransaction} the buy investment transaction child aggregate\n */\nBaseBuyInvestmentTransaction.prototype.getBuyInvestment = function() {\n  return this.buyInvestment;\n};\nChildAggregate.add(BaseBuyInvestmentTransaction, {order: 10, attributeType: BuyInvestmentTransaction, readMethod: \"getBuyInvestment\", writeMethod: \"setBuyInvestment\"});\n\n\n/**\n * Sets the buy investment transaction child aggregate.\n *\n * @param {BuyInvestmentTransaction} buyInvestment the buy investment transaction child aggregate\n */\nBaseBuyInvestmentTransaction.prototype.setBuyInvestment = function(buyInvestment) {\n  this.buyInvestment = buyInvestment;\n};\n\n\n/**\n * Gets the investment transaction aggregate.\n *\n * @return {InvestmentTransaction} the investment transaction aggregate\n */\n// @Overridden\nBaseBuyInvestmentTransaction.prototype.getInvestmentTransaction = function() {\n  return this.getBuyInvestment().getInvestmentTransaction();\n};\n\n\n/**\n * Gets the id of the security that was bought. This is a required field according to the OFX\n * spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {SecurityId} the security id of the security that was bought\n */\nBaseBuyInvestmentTransaction.prototype.getSecurityId = function() {\n  return this.getBuyInvestment().getSecurityId();\n};\n\n\n/**\n * Gets the number of units of the security that was bought. For security-based actions other\n * than stock splits, this is the quantity bought. For stocks, mutual funds, and others, this\n * is the number of shares. For bonds, this is the face value. For options, this is the number of\n * contacts. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the number of units purchased.\n */\nBaseBuyInvestmentTransaction.prototype.getUnits = function() {\n  return this.getBuyInvestment().getUnits();\n};\n\n\n/**\n * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n * per contact) price. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the per unit price\n */\nBaseBuyInvestmentTransaction.prototype.getUnitPrice = function() {\n  return this.getBuyInvestment().getUnitPrice();\n};\n\n\n/**\n * Gets the portion of the unit price that is attributed to the dealer markup. This is an\n * optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the per unit markeup price\n */\nBaseBuyInvestmentTransaction.prototype.getMarkup = function() {\n  return this.getBuyInvestment().getMarkup();\n};\n\n\n/**\n * Gets the transaction commission for the purchase. This is an optional field according to the\n * OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the transaction commision\n */\nBaseBuyInvestmentTransaction.prototype.getCommission = function() {\n  return this.getBuyInvestment().getCommission();\n};\n\n\n/**\n * Gets the taxes for the purchase. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the transaction taxes\n */\nBaseBuyInvestmentTransaction.prototype.getTaxes = function() {\n  return this.getBuyInvestment().getTaxes();\n};\n\n\n/**\n * Gets the fees for the purchase. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the transaction fees\n */\nBaseBuyInvestmentTransaction.prototype.getFees = function() {\n  return this.getBuyInvestment().getFees();\n};\n\n\n/**\n * Gets the load for the purchase. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the load\n */\nBaseBuyInvestmentTransaction.prototype.getLoad = function() {\n  return this.getBuyInvestment().getLoad();\n};\n\n\n/**\n * Gets the total for the purchase. Should be equal to\n * (units * (unitPrice + markup)) + (commision + fees + load + taxes) according to the OFX\n * spec. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the total\n */\nBaseBuyInvestmentTransaction.prototype.getTotal = function() {\n  return this.getBuyInvestment().getTotal();\n};\n\n\n/**\n * Gets the currency code for the transaction. Only one of currency code or original currency\n * info should be set according to the OFX spec. If neither are set, means the default currency.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {String} the currency code for the transaction\n */\nBaseBuyInvestmentTransaction.prototype.getCurrencyCode = function() {\n  return this.getBuyInvestment().getCurrencyCode();\n};\n\n\n/**\n * Gets the original currency info for the transaction.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {OriginalCurrency} the original currency info for the transaction\n */\nBaseBuyInvestmentTransaction.prototype.getOriginalCurrencyInfo = function() {\n  return this.getBuyInvestment().getOriginalCurrencyInfo();\n};\n\n\n/**\n * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {String} the sub account type\n */\nBaseBuyInvestmentTransaction.prototype.getSubAccountSecurity = function() {\n  return this.getBuyInvestment().getSubAccountSecurity();\n};\n\n\n/**\n * Gets the result of getSubAccountSecurity as one of the well-known types.\n *\n * @return {SubAccountType} the type of null if it wasn't one of the well known types\n */\nBaseBuyInvestmentTransaction.prototype.getSubAccountSecurityEnum = function() {\n  return SubAccountType.fromOfx(this.getSubAccountSecurity());\n};\n\n\n/**\n * Gets the sub account type that the money came from. (e.g. CASH, MARGIN, SHORT, OTHER).\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {String} the sub account fund\n */\nBaseBuyInvestmentTransaction.prototype.getSubAccountFund = function() {\n  return this.getBuyInvestment().getSubAccountFund();\n};\n\n\n/**\n * Gets the result of getSubAccountFund as one of the well-known types.\n *\n * @return {SubAccountType} the type or null if it wasn't one of the well known types.\n */\nBaseBuyInvestmentTransaction.prototype.getSubAccountFundEnum = function() {\n  return SubAccountType.fromOfx(this.getSubAccountFund());\n};\n\n\n\n\nmodule.exports = BaseBuyInvestmentTransaction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * Base class for all investment transactions.\n * <br>\n * This class exposes a read-only view of the flattened aggregates that are\n * common to all investment transactions as a convenience to application\n * developers who may not find the ofx aggregation model intuitive.\n *\n * @class\n */\nfunction BaseInvestmentTransaction (/*TransactionType*/ transactionType) {\n\n  /**\n   * @name BaseInvestmentTransaction#transactionType\n   * @type TransactionType\n   * @access private\n   */\n  this.transactionType = transactionType;\n}\n\n\n\n\n/**\n * Gets the type of transaction.\n *\n * @return {TransactionType} the type of transaction\n */\nBaseInvestmentTransaction.prototype.getTransactionType = function() {\n  return this.transactionType;\n};\n\n\n/**\n * Gets the {@link InvestmentTransaction} aggregate.\n *\n * @return {InvestmentTransaction} the {@link InvestmentTransaction} aggregate\n */\nBaseInvestmentTransaction.prototype.getInvestmentTransaction = function() { throw new Error(\"Not implemented\"); };\n\n/**\n * Gets the unique financial institution assigned transaction id. This is a\n * required field according to the OFX spec.\n * See \"Section 13.9.2.4.1, OFX Spec\"\n *\n * @return {String} the financial institution asssigned transaction id\n */\nBaseInvestmentTransaction.prototype.getTransactionId = function() {\n  return this.getInvestmentTransaction().getTransactionId();\n};\n\n/**\n * Gets the server assigned transaction id. This is an optional field\n * according to the OFX spec.\n * See \"Section 13.9.2.4.1, OFX Spec\"\n *\n * @return {String} the server assigned transaction id\n */\nBaseInvestmentTransaction.prototype.getServerId = function() {\n  return this.getInvestmentTransaction().getServerId();\n};\n\n/**\n * Gets the trade date of the transaction. For stock splits, this is the\n * day of record. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.4.1, OFX Spec\"\n *\n * @return {Date} the trade date\n */\nBaseInvestmentTransaction.prototype.getTradeDate = function() {\n  return this.getInvestmentTransaction().getTradeDate();\n};\n\n/**\n * Gets the settlement date of the transaction. For stock splits, this is the\n * day of of execution. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.1, OFX Spec\"\n *\n * @return {Date} the trade date\n */\nBaseInvestmentTransaction.prototype.getSettlementDate = function() {\n  return this.getInvestmentTransaction().getSettlementDate();\n};\n\n/**\n * For a reveral transaction, gets the financial institution assigned\n * transaction id for the transaction being revesed.\n * See \"Section 13.9.2.4.1, OFX Spec\"\n *\n * @return {String} the transaction id of the transaction being reversed\n */\nBaseInvestmentTransaction.prototype.getReversalTransactionId = function() {\n  return this.getInvestmentTransaction().getReversalTransactionId();\n};\n\n/**\n * Gets the memo associated with the transaction. This is an optional field\n * according to the OFX spec.\n * See \"Section 13.9.2.4.1, OFX Spec\"\n *\n * @return {String} the memo\n */\nBaseInvestmentTransaction.prototype.getMemo = function() {\n  return this.getInvestmentTransaction().getMemo();\n};\n\n\n\n\nmodule.exports = BaseInvestmentTransaction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar ChildAggregate = require(\"../../../../meta/ChildAggregate\");\nvar BaseInvestmentTransaction = require(\"./BaseInvestmentTransaction\");\nvar InvestmentTransaction = require(\"./InvestmentTransaction\");\n\n/**\n * Base class for investment transactions that aren't buys or sales..\n * <br>\n * This class exposes a read-only view of the flattened aggregates that are\n * common to all investment transactions as a convenience to application\n * developers who may not find the ofx aggregation model intuitive.\n *\n * @class\n * @augments BaseInvestmentTransaction\n */\nfunction BaseOtherInvestmentTransaction (/*TransactionType*/ transactionType) {\n  BaseInvestmentTransaction.call(this, transactionType);\n\n  /**\n   * @name BaseOtherInvestmentTransaction#investmentTransaction\n   * @type InvestmentTransaction\n   * @access private\n   */\n  this.investmentTransaction = null;\n}\n\ninherit(BaseOtherInvestmentTransaction, \"extends\", BaseInvestmentTransaction);\n\n\n\n\n/**\n * Gets the {@link InvestmentTransaction} aggregate.\n *\n * @return {InvestmentTransaction} the {@link InvestmentTransaction} aggregate\n */\n// @Override\nBaseOtherInvestmentTransaction.prototype.getInvestmentTransaction = function() {\n  return this.investmentTransaction;\n};\nChildAggregate.add(BaseOtherInvestmentTransaction, {order: 10, attributeType: InvestmentTransaction, readMethod: \"getInvestmentTransaction\", writeMethod: \"setInvestmentTransaction\"});\n\n\n/**\n * Sets the {@link InvestmentTransaction} aggregate.\n *\n * @param {InvestmentTransaction} investmentTransaction the {@link InvestmentTransaction} aggregate\n */\nBaseOtherInvestmentTransaction.prototype.setInvestmentTransaction = function(investmentTransaction) {\n  this.investmentTransaction = investmentTransaction;\n};\n\n\n\n\nmodule.exports = BaseOtherInvestmentTransaction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar Inv401KSource = require(\"../positions/Inv401KSource\");\nvar SubAccountType = require(\"../accounts/SubAccountType\");\nvar ChildAggregate = require(\"../../../../meta/ChildAggregate\");\nvar BaseInvestmentTransaction = require(\"./BaseInvestmentTransaction\");\nvar TransactionWithSecurity = require(\"./TransactionWithSecurity\");\nvar SellInvestmentTransaction = require(\"./SellInvestmentTransaction\");\n\n/**\n * Base class for all investment transactions for selling securities.\n * <br>\n * This class exposes a read-only view of the flattened aggregates that are\n * common to all sell investment transactions as a convenience to application\n * developers who may not find the ofx aggregation model intuitive.\n *\n * @class\n * @augments BaseInvestmentTransaction\n * @augments TransactionWithSecurity\n */\nfunction BaseSellInvestmentTransaction (/*TransactionType*/ transactionType) {\n  BaseInvestmentTransaction.call(this, transactionType);\n\n  /**\n   * @name BaseSellInvestmentTransaction#sellInvestment\n   * @type SellInvestmentTransaction\n   * @access private\n   */\n  this.sellInvestment = null;\n}\n\ninherit(BaseSellInvestmentTransaction, \"extends\", BaseInvestmentTransaction);\ninherit(BaseSellInvestmentTransaction, \"implements\", TransactionWithSecurity);\n\n\n\n/**\n * Gets the sell investment transaction child aggregate.\n *\n * @return {SellInvestmentTransaction} the sell investment transaction child aggregate\n */\n// @Override\nBaseSellInvestmentTransaction.prototype.getSellInvestment = function() {\n  return this.sellInvestment;\n};\nChildAggregate.add(BaseSellInvestmentTransaction, {order: 10, attributeType: SellInvestmentTransaction, readMethod: \"getSellInvestment\", writeMethod: \"setSellInvestment\"});\n\n\n/**\n * Sets the sell investment transaction child aggregate.\n *\n * @param {SellInvestmentTransaction} sellInvestment the sell investment transaction child aggregate\n */\nBaseSellInvestmentTransaction.prototype.setSellInvestment = function(sellInvestment) {\n  this.sellInvestment = sellInvestment;\n};\n\n\n/**\n * Gets the investment transaction aggregate.\n *\n * @return {InvestmentTransaction} the investment transaction aggregate\n */\n// @Overridden\nBaseSellInvestmentTransaction.prototype.getInvestmentTransaction = function() {\n  return this.getSellInvestment().getInvestmentTransaction();\n};\n\n\n/**\n * Gets the id of the security that was sold. This is a required field according to the OFX\n * spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {SecurityId} the security id of the security that was bought\n */\nBaseSellInvestmentTransaction.prototype.getSecurityId = function() {\n  return this.getSellInvestment().getSecurityId();\n};\n\n\n/**\n * Gets the number of units of the security that was sold. For security-based actions other\n * than stock splits, this is the quantity sold. For stocks, mutual funds, and others, this\n * is the number of shares. For bonds, this is the face value. For options, this is the number of\n * contacts. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the number of units purchased.\n */\nBaseSellInvestmentTransaction.prototype.getUnits = function() {\n  return this.getSellInvestment().getUnits();\n};\n\n\n/**\n * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n * per contact) price. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the per unit price\n */\nBaseSellInvestmentTransaction.prototype.getUnitPrice = function() {\n  return this.getSellInvestment().getUnitPrice();\n};\n\n\n/**\n * Gets the portion of the unit price that is attributed to the dealer markdown. This is an\n * optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the per unit markedown price\n */\nBaseSellInvestmentTransaction.prototype.getMarkdown = function() {\n  return this.getSellInvestment().getMarkdown();\n};\n\n\n/**\n * Gets the transaction commission for the sale. This is an optional field according to the\n * OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the transaction commision\n */\nBaseSellInvestmentTransaction.prototype.getCommission = function() {\n  return this.getSellInvestment().getCommission();\n};\n\n\n/**\n * Gets the taxes for the sale. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the transaction taxes\n */\nBaseSellInvestmentTransaction.prototype.getTaxes = function() {\n  return this.getSellInvestment().getTaxes();\n};\n\n\n/**\n * Gets the fees for the sale. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the transaction fees\n */\nBaseSellInvestmentTransaction.prototype.getFees = function() {\n  return this.getSellInvestment().getFees();\n};\n\n\n/**\n * Gets the load for the sale. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the load\n */\nBaseSellInvestmentTransaction.prototype.getLoad = function() {\n  return this.getSellInvestment().getLoad();\n};\n\n\n/**\n * Gets the withholding for the sale. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the withholding\n */\nBaseSellInvestmentTransaction.prototype.getWithholding = function() {\n  return this.getSellInvestment().getWithholding();\n};\n\n\n/**\n * Gets whether the sale was tax exempt. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Boolean} whether the transaction was tax exempt\n */\nBaseSellInvestmentTransaction.prototype.getTaxExempt = function() {\n  return this.getSellInvestment().getTaxExempt();\n};\n\n\n/**\n * Gets the total for the sale. Should be equal to\n * (units * (unitPrice + markdown)) + (commision + fees + load + taxes + penalty + withholding +\n * statewithholding) according to the OFX spec. This is a required field according to the OFX\n * spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the total\n */\nBaseSellInvestmentTransaction.prototype.getTotal = function() {\n  return this.getSellInvestment().getTotal();\n};\n\n\n/**\n * Gets the gain sale. This is aan optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the gain for the sale\n */\nBaseSellInvestmentTransaction.prototype.getGain = function() {\n  return this.getSellInvestment().getGain();\n};\n\n\n/**\n * Gets the currency code for the transaction. Only one of currency code or original currency\n * info should be set according to the OFX spec. If neither are set, means the default currency.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {String} the currency code for the transaction.\n */\nBaseSellInvestmentTransaction.prototype.getCurrencyCode = function() {\n  return this.getSellInvestment().getCurrencyCode();\n};\n\n\n/**\n * Gets the origianl currency info for the transaction.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {OriginalCurrency} the currency info for the transaction.\n */\nBaseSellInvestmentTransaction.prototype.getOriginalCurrencyInfo = function() {\n  return this.getSellInvestment().getOriginalCurrencyInfo();\n};\n\n\n/**\n * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {String} the sub account type\n */\nBaseSellInvestmentTransaction.prototype.getSubAccountSecurity = function() {\n  return this.getSellInvestment().getSubAccountSecurity();\n};\n\n\n/**\n * Gets the result of getSubAccountSecurity as one of the well-known types.\n *\n * @return {SubAccountType} the type of null if it wasn't one of the well known types.\n */\nBaseSellInvestmentTransaction.prototype.getSubAccountSecurityEnum = function() {\n  return SubAccountType.fromOfx(this.getSubAccountSecurity());\n};\n\n\n/**\n * Gets the sub account type that the money went to  (e.g. CASH, MARGIN, SHORT, OTHER).\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {String} the sub account fund\n */\nBaseSellInvestmentTransaction.prototype.getSubAccountFund = function() {\n  return this.getSellInvestment().getSubAccountFund();\n};\n\n\n/**\n * Gets the result of getSubAccountFund as one of the well-known types.\n *\n * @return {SubAccountType} the type of null if it wasn't one of the well known types.\n */\nBaseSellInvestmentTransaction.prototype.getSubAccountFundEnum = function() {\n  return SubAccountType.fromOfx(this.getSubAccountFund());\n};\n\n\n/**\n * Gets the loan id if this transaction was due to a loan or loan repayment on a 401k. This is an\n * optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {String} the loan id\n */\nBaseSellInvestmentTransaction.prototype.getLoadId = function() {\n  return this.getSellInvestment().getLoanId();\n};\n\n\n/**\n * Gets the state withholding for the sale. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the state withholding\n */\nBaseSellInvestmentTransaction.prototype.getStateWithholding = function() {\n  return this.getSellInvestment().getStateWithholding();\n};\n\n\n/**\n * Gets the penalty for the sale. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the state withholding\n */\nBaseSellInvestmentTransaction.prototype.getPenalty = function() {\n  return this.getSellInvestment().getPenalty();\n};\n\n\n/**\n * Gets the 401K source for the sale. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n * according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {String} the 401k source\n */\nBaseSellInvestmentTransaction.prototype.get401kSource = function() {\n  return this.getSellInvestment().get401kSource();\n};\n\n\n/**\n * Gets the 401k source as one of the well-known types.\n *\n * @return {Inv401KSource} the 401k source or null if its not one of the well-known types\n */\nBaseSellInvestmentTransaction.prototype.get401kSourceEnum = function() {\n  return Inv401KSource.fromOfx(this.get401kSource());\n};\n\n\n\n\nmodule.exports = BaseSellInvestmentTransaction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar Element = require(\"../../../../meta/Element\");\nvar BaseBuyInvestmentTransaction = require(\"./BaseBuyInvestmentTransaction\");\nvar TransactionType = require(\"./TransactionType\");\n\n/**\n * Transaction for buying debt (i.e. bonds, CDs, etc.,).\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @class\n * @augments BaseBuyInvestmentTransaction\n */\nfunction BuyDebtTransaction () {\n  BaseBuyInvestmentTransaction.call(this, TransactionType.BUY_DEBT);\n\n  /**\n   * @name BuyDebtTransaction#accruedInterest\n   * @type Double\n   * @access private\n   */\n  this.accruedInterest = null;\n}\n\ninherit(BuyDebtTransaction, \"extends\", BaseBuyInvestmentTransaction);\n\n\nAggregate.add(\"BUYDEBT\", BuyDebtTransaction);\n\n\n\n\n/**\n * Gets the amount of accrued interest on the debt. This is an optional field according to the\n * OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @return {Double} the amount of accrued interest\n */\nBuyDebtTransaction.prototype.getAccruedInterest = function() {\n  return this.accruedInterest;\n};\nElement.add(BuyDebtTransaction, {name: \"ACCRDINT\", order: 20, attributeType: Number, readMethod: \"getAccruedInterest\", writeMethod: \"setAccruedInterest\"});\n\n\n/**\n * Sets the amount of accrued interest on the debt. This is an optional field according to the\n * OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @param {Double} accruedInterest the amount of accrued interest\n */\nBuyDebtTransaction.prototype.setAccruedInterest = function(accruedInterest) {\n  this.accruedInterest = accruedInterest;\n};\n\n\n\n\nmodule.exports = BuyDebtTransaction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar SubAccountType = require(\"../accounts/SubAccountType\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../../meta/ChildAggregate\");\nvar Element = require(\"../../../../meta/Element\");\nvar SecurityId = require(\"../../seclist/SecurityId\");\nvar OriginalCurrency = require(\"./OriginalCurrency\");\nvar InvestmentTransaction = require(\"./InvestmentTransaction\");\n\n/**\n * Buy investment transaction aggregate (\"INVBUY\").\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @class\n */\nfunction BuyInvestmentTransaction () {\n\n  /**\n   * @name BuyInvestmentTransaction#investmentTransaction\n   * @type InvestmentTransaction\n   * @access private\n   */\n  this.investmentTransaction = null;\n\n  /**\n   * @name BuyInvestmentTransaction#securityId\n   * @type SecurityId\n   * @access private\n   */\n  this.securityId = null;\n\n  /**\n   * @name BuyInvestmentTransaction#units\n   * @type Double\n   * @access private\n   */\n  this.units = null;\n\n  /**\n   * @name BuyInvestmentTransaction#unitPrice\n   * @type Double\n   * @access private\n   */\n  this.unitPrice = null;\n\n  /**\n   * @name BuyInvestmentTransaction#markup\n   * @type Double\n   * @access private\n   */\n  this.markup = null;\n\n  /**\n   * @name BuyInvestmentTransaction#commission\n   * @type Double\n   * @access private\n   */\n  this.commission = null;\n\n  /**\n   * @name BuyInvestmentTransaction#taxes\n   * @type Double\n   * @access private\n   */\n  this.taxes = null;\n\n  /**\n   * @name BuyInvestmentTransaction#fees\n   * @type Double\n   * @access private\n   */\n  this.fees = null;\n\n  /**\n   * @name BuyInvestmentTransaction#load\n   * @type Double\n   * @access private\n   */\n  this.load = null;\n\n  /**\n   * @name BuyInvestmentTransaction#total\n   * @type Double\n   * @access private\n   */\n  this.total = null;\n\n  /**\n   * @name BuyInvestmentTransaction#currencyCode\n   * @type String\n   * @access private\n   */\n  this.currencyCode = null;\n\n  /**\n   * @name BuyInvestmentTransaction#originalCurrencyInfo\n   * @type OriginalCurrency\n   * @access private\n   */\n  this.originalCurrencyInfo = null;\n\n  /**\n   * @name BuyInvestmentTransaction#subAccountSecurity\n   * @type String\n   * @access private\n   */\n  this.subAccountSecurity = null;\n\n  /**\n   * @name BuyInvestmentTransaction#subAccountFund\n   * @type String\n   * @access private\n   */\n  this.subAccountFund = null;\n}\n\n\n\nAggregate.add(\"INVBUY\", BuyInvestmentTransaction);\n\n\n/**\n * Gets the investment transaction child aggregate.\n *\n * @return {InvestmentTransaction} the investment transaction child aggregate\n */\nBuyInvestmentTransaction.prototype.getInvestmentTransaction = function() {\n  return this.investmentTransaction;\n};\nChildAggregate.add(BuyInvestmentTransaction, {order: 10, attributeType: InvestmentTransaction, readMethod: \"getInvestmentTransaction\", writeMethod: \"setInvestmentTransaction\"});\n\n\n/**\n * Sets the investment transaction child aggregate.\n *\n * @param {InvestmentTransaction} investmentTransaction the investment transaction child aggregate\n */\nBuyInvestmentTransaction.prototype.setInvestmentTransaction = function(investmentTransaction) {\n  this.investmentTransaction = investmentTransaction;\n};\n\n\n/**\n * Gets the id of the security that was bought. This is a required field according to the OFX\n * spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {SecurityId} the security id of the security that was bought\n */\nBuyInvestmentTransaction.prototype.getSecurityId = function() {\n  return this.securityId;\n};\nChildAggregate.add(BuyInvestmentTransaction, {required: true, order: 20, attributeType: SecurityId, readMethod: \"getSecurityId\", writeMethod: \"setSecurityId\"});\n\n\n/**\n * Sets the id of the security that was bought. This is a required field according to the OFX\n * spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {SecurityId} securityId the security id of the security that was bought\n */\nBuyInvestmentTransaction.prototype.setSecurityId = function(securityId) {\n  this.securityId = securityId;\n};\n\n\n/**\n * Gets the number of units of the security that was bought. For security-based actions other\n * than stock splits, this is the quantity bought. For stocks, mutual funds, and others, this\n * is the number of shares. For bonds, this is the face value. For options, this is the number of\n * contacts. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the number of units purchased.\n */\nBuyInvestmentTransaction.prototype.getUnits = function() {\n  return this.units;\n};\nElement.add(BuyInvestmentTransaction, {name: \"UNITS\", required: true, order: 30, attributeType: Number, readMethod: \"getUnits\", writeMethod: \"setUnits\"});\n\n\n/**\n * Sets the number of units of the security that was bought. For security-based actions other\n * than stock splits, this is the quantity bought. For stocks, mutual funds, and others, this\n * is the number of shares. For bonds, this is the face value. For options, this is the number of\n * contacts. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {Double} units the number of units purchased.\n */\nBuyInvestmentTransaction.prototype.setUnits = function(units) {\n  this.units = units;\n};\n\n\n/**\n * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n * per contact) price. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the per unit price\n */\nBuyInvestmentTransaction.prototype.getUnitPrice = function() {\n  return this.unitPrice;\n};\nElement.add(BuyInvestmentTransaction, {name: \"UNITPRICE\", required: true, order: 40, attributeType: Number, readMethod: \"getUnitPrice\", writeMethod: \"setUnitPrice\"});\n\n\n/**\n * Sets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n * per contact) price. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {Double} unitPrice the per unit price\n */\nBuyInvestmentTransaction.prototype.setUnitPrice = function(unitPrice) {\n  this.unitPrice = unitPrice;\n};\n\n\n/**\n * Gets the portion of the unit price that is attributed to the dealer markup. This is an\n * optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the per unit markeup price\n */\nBuyInvestmentTransaction.prototype.getMarkup = function() {\n  return this.markup;\n};\nElement.add(BuyInvestmentTransaction, {name: \"MARKUP\", order: 50, attributeType: Number, readMethod: \"getMarkup\", writeMethod: \"setMarkup\"});\n\n\n/**\n * Sets the portion of the unit price that is attributed to the dealer markup. This is an\n * optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {Double} markup the per unit markeup price\n */\nBuyInvestmentTransaction.prototype.setMarkup = function(markup) {\n  this.markup = markup;\n};\n\n\n/**\n * Gets the transaction commission for the purchase. This is an optional field according to the\n * OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the transaction commision\n */\nBuyInvestmentTransaction.prototype.getCommission = function() {\n  return this.commission;\n};\nElement.add(BuyInvestmentTransaction, {name: \"COMMISSION\", order: 60, attributeType: Number, readMethod: \"getCommission\", writeMethod: \"setCommission\"});\n\n\n/**\n * Sets the transaction commission for the purchase. This is an optional field according to the\n * OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {Double} commission the transaction commision\n */\nBuyInvestmentTransaction.prototype.setCommission = function(commission) {\n  this.commission = commission;\n};\n\n\n/**\n * Gets the taxes for the purchase. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the transaction taxes\n */\nBuyInvestmentTransaction.prototype.getTaxes = function() {\n  return this.taxes;\n};\nElement.add(BuyInvestmentTransaction, {name: \"TAXES\", order: 70, attributeType: Number, readMethod: \"getTaxes\", writeMethod: \"setTaxes\"});\n\n\n/**\n * Sets the taxes for the purchase. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {Double} taxes the transaction taxes\n */\nBuyInvestmentTransaction.prototype.setTaxes = function(taxes) {\n  this.taxes = taxes;\n};\n\n\n/**\n * Gets the fees for the purchase. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the transaction fees\n */\nBuyInvestmentTransaction.prototype.getFees = function() {\n  return this.fees;\n};\nElement.add(BuyInvestmentTransaction, {name: \"FEES\", order: 80, attributeType: Number, readMethod: \"getFees\", writeMethod: \"setFees\"});\n\n\n/**\n * Sets the fees for the purchase. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {Double} fees the transaction fees\n */\nBuyInvestmentTransaction.prototype.setFees = function(fees) {\n  this.fees = fees;\n};\n\n\n/**\n * Gets the load for the purchase. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the load\n */\nBuyInvestmentTransaction.prototype.getLoad = function() {\n  return this.load;\n};\nElement.add(BuyInvestmentTransaction, {name: \"LOAD\", order: 90, attributeType: Number, readMethod: \"getLoad\", writeMethod: \"setLoad\"});\n\n\n/**\n * Sets the load for the purchase. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {Double} load the load\n */\nBuyInvestmentTransaction.prototype.setLoad = function(load) {\n  this.load = load;\n};\n\n\n/**\n * Gets the total for the purchase. Should be equal to\n * (units * (unitPrice + markup)) + (commision + fees + taxes) according to the OFX\n * spec. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the total\n */\nBuyInvestmentTransaction.prototype.getTotal = function() {\n  return this.total;\n};\nElement.add(BuyInvestmentTransaction, {name: \"TOTAL\", required: true, order: 100, attributeType: Number, readMethod: \"getTotal\", writeMethod: \"setTotal\"});\n\n\n/**\n * Sets the total for the purchase. Should be equal to\n * (units * (unitPrice + markup)) + (commision + fees + taxes) according to the OFX\n * spec. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {Double} total the total\n */\nBuyInvestmentTransaction.prototype.setTotal = function(total) {\n  this.total = total;\n};\n\n\n/**\n * Gets the currency code for the transaction. Only one of currency code or original currency\n * info should be set according to the OFX spec. If neither are set, means the default currency.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {String} the currency code for the transaction.\n */\nBuyInvestmentTransaction.prototype.getCurrencyCode = function() {\n  return this.currencyCode;\n};\nElement.add(BuyInvestmentTransaction, {name: \"CURRENCY\", order: 110, attributeType: String, readMethod: \"getCurrencyCode\", writeMethod: \"setCurrencyCode\"});\n\n\n/**\n * Sets the currency code for the transaction. Only one of currency code or original currency\n * info may be set according to the OFX spec. If neither are set, means the default currency.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {String} currencyCode the currency code for the transaction.\n */\nBuyInvestmentTransaction.prototype.setCurrencyCode = function(currencyCode) {\n  this.currencyCode = currencyCode;\n  this.originalCurrencyInfo = null;\n};\n\n\n/**\n * Gets the original currency info for the transaction.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {OriginalCurrency} the original currency info for the transaction\n */\nBuyInvestmentTransaction.prototype.getOriginalCurrencyInfo = function() {\n  return this.originalCurrencyInfo;\n};\nChildAggregate.add(BuyInvestmentTransaction, {order: 120, attributeType: OriginalCurrency, readMethod: \"getOriginalCurrencyInfo\", writeMethod: \"setOriginalCurrencyInfo\"});\n\n\n/**\n * Sets the original currency info for the transaction\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {OriginalCurrency} originalCurrencyInfo the original currency info for the transaction\n */\nBuyInvestmentTransaction.prototype.setOriginalCurrencyInfo = function(originalCurrencyInfo) {\n  this.originalCurrencyInfo = originalCurrencyInfo;\n  this.currencyCode = null;\n};\n\n\n /**\n * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {String} the sub account type\n */\nBuyInvestmentTransaction.prototype.getSubAccountSecurity = function() {\n  return this.subAccountSecurity;\n};\nElement.add(BuyInvestmentTransaction, {name: \"SUBACCTSEC\", order: 130, attributeType: String, readMethod: \"getSubAccountSecurity\", writeMethod: \"setSubAccountSecurity\"});\n\n\n/**\n  * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n  * See \"Section 13.9.2.4.3, OFX Spec\"\n  *\n  * @param {String} subAccountSecurity the sub account type\n  */\nBuyInvestmentTransaction.prototype.setSubAccountSecurity = function(subAccountSecurity) {\n  this.subAccountSecurity = subAccountSecurity;\n};\n\n\n/**\n * Gets the result of getSubAccountSecurity as one of the well-known types.\n *\n * @return {SubAccountType} the type of null if it wasn't one of the well known types.\n */\nBuyInvestmentTransaction.prototype.getSubAccountSecurityEnum = function() {\n  return SubAccountType.fromOfx(this.getSubAccountSecurity());\n};\n\n\n/**\n * Gets the sub account type that the money came from. (e.g. CASH, MARGIN, SHORT, OTHER).\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {String} the sub account fund\n */\nBuyInvestmentTransaction.prototype.getSubAccountFund = function() {\n  return this.subAccountFund;\n};\nElement.add(BuyInvestmentTransaction, {name: \"SUBACCTFUND\", order: 140, attributeType: String, readMethod: \"getSubAccountFund\", writeMethod: \"setSubAccountFund\"});\n\n\n/**\n * Sets the sub account type that the money came from. (e.g. CASH, MARGIN, SHORT, OTHER).\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {String} subAcctFund the sub account fund\n */\nBuyInvestmentTransaction.prototype.setSubAccountFund = function(subAcctFund) {\n  this.subAccountFund = subAcctFund;\n};\n\n\n/**\n * Gets the result of getSubAccountFund as one of the well-known types.\n *\n * @return {SubAccountType} the type or null if it wasn't one of the well known types.\n */\nBuyInvestmentTransaction.prototype.getSubAccountFundEnum = function() {\n  return SubAccountType.fromOfx(this.getSubAccountFund());\n};\n\n\n\n\nmodule.exports = BuyInvestmentTransaction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar Element = require(\"../../../../meta/Element\");\nvar BaseBuyInvestmentTransaction = require(\"./BaseBuyInvestmentTransaction\");\nvar TransactionType = require(\"./TransactionType\");\nvar BuyType = require(\"./BuyType\");\n\n/**\n * Transaction for buying mutual funds.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @class\n * @augments BaseBuyInvestmentTransaction\n */\nfunction BuyMutualFundTransaction () {\n  BaseBuyInvestmentTransaction.call(this, TransactionType.BUY_MUTUAL_FUND);\n\n  /**\n   * @name BuyMutualFundTransaction#buyType\n   * @type String\n   * @access private\n   */\n  this.buyType = null;\n\n  /**\n   * @name BuyMutualFundTransaction#relatedTransactionId\n   * @type String\n   * @access private\n   */\n  this.relatedTransactionId = null;\n}\n\ninherit(BuyMutualFundTransaction, \"extends\", BaseBuyInvestmentTransaction);\n\n\nAggregate.add(\"BUYMF\", BuyMutualFundTransaction);\n\n\n\n/**\n * Gets the type of purchase (i.e. \"BUY\" or \"BUYTOCOVER\"). This is a required field according to\n * the OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @return {String} the buy type\n */\nBuyMutualFundTransaction.prototype.getBuyType = function() {\n  return this.buyType;\n};\nElement.add(BuyMutualFundTransaction, {name: \"BUYTYPE\", required: true, order: 20, attributeType: String, readMethod: \"getBuyType\", writeMethod: \"setBuyType\"});\n\n\n/**\n * Sets the type of purchase (i.e. \"BUY\" or \"BUYTOCOVER\"). This is a required field according to\n * the OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @param {String} buyType the buy type\n */\nBuyMutualFundTransaction.prototype.setBuyType = function(buyType) {\n  this.buyType = buyType;\n};\n\n\n/**\n * Gets the buy type as one of the well-known types.\n *\n * @return {BuyType} the type of purchase or null if it's not known\n */\nBuyMutualFundTransaction.prototype.getBuyTypeEnum = function() {\n  return BuyType.fromOfx(this.buyType);\n};\n\n\n/**\n * Gets any related transaction id for a mutual fund purchase (e.g. for a mutual fund exchange).\n * This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @return {String} the related transaction id\n */\nBuyMutualFundTransaction.prototype.getRelatedTransactionId = function() {\n  return this.relatedTransactionId;\n};\nElement.add(BuyMutualFundTransaction, {name: \"RELFITID\", order: 30, attributeType: String, readMethod: \"getRelatedTransactionId\", writeMethod: \"setRelatedTransactionId\"});\n\n\n/**\n * Sets any related transaction id for a mutual fund purchase (e.g. for a mutual fund exchange).\n * This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @param {String} relatedTransactionId the related transaction id\n */\nBuyMutualFundTransaction.prototype.setRelatedTransactionId = function(relatedTransactionId) {\n  this.relatedTransactionId = relatedTransactionId;\n};\n\n\n\n\nmodule.exports = BuyMutualFundTransaction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar Element = require(\"../../../../meta/Element\");\nvar TransactionType = require(\"./TransactionType\");\nvar BaseBuyInvestmentTransaction = require(\"./BaseBuyInvestmentTransaction\");\nvar OptionBuyType = require(\"./OptionBuyType\");\n\n/**\n * Transaction for buying options.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @class\n * @augments BaseBuyInvestmentTransaction\n */\nfunction BuyOptionTransaction () {\n  BaseBuyInvestmentTransaction.call(this, TransactionType.BUY_OPTION);\n\n  /**\n   * @name BuyOptionTransaction#optionBuyType\n   * @type String\n   * @access private\n   */\n  this.optionBuyType = null;\n\n  /**\n   * @name BuyOptionTransaction#sharesPerContact\n   * @type Integer\n   * @access private\n   */\n  this.sharesPerContact = null;\n}\n\ninherit(BuyOptionTransaction, \"extends\", BaseBuyInvestmentTransaction);\n\n\nAggregate.add(\"BUYOPT\", BuyOptionTransaction);\n\n\n\n/**\n * Gets the type of option purchase (i.e. \"BUYTOOPEN\" or \"BUYTOCLOSE\"). This is a required field\n * according to the OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @return {String} the option buy type\n */\nBuyOptionTransaction.prototype.getOptionBuyType = function() {\n  return this.optionBuyType;\n};\nElement.add(BuyOptionTransaction, {name: \"OPTBUYTYPE\", required: true, order: 20, attributeType: String, readMethod: \"getOptionBuyType\", writeMethod: \"setOptionBuyType\"});\n\n\n/**\n * Sets the type of option purchase (i.e. \"BUYTOOPEN\" or \"BUYTOCLOSE\"). This is a required field\n * according to the OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @param {String} optionBuyType the option buy type\n */\nBuyOptionTransaction.prototype.setOptionBuyType = function(optionBuyType) {\n  this.optionBuyType = optionBuyType;\n};\n\n\n/**\n * Gets the option buy type as one of the well-known types.\n *\n * @return {OptionBuyType} the type of purchase or null if it's not known\n */\nBuyOptionTransaction.prototype.getOptionBuyTypeEnum = function() {\n  return OptionBuyType.fromOfx(this.optionBuyType);\n};\n\n\n/**\n * Gets the number of shares per contact. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @return {Integer} the number of shares per contact\n */\nBuyOptionTransaction.prototype.getSharesPerContract = function() {\n  return this.sharesPerContact;\n};\nElement.add(BuyOptionTransaction, {name: \"SHPERCTRCT\", required: true, order: 30, attributeType: Number, readMethod: \"getSharesPerContract\", writeMethod: \"setSharesPerContract\"});\n\n\n/**\n * Sets the number of shares per contact. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @param {Integer} sharesPerContact the number of shares per contact\n */\nBuyOptionTransaction.prototype.setSharesPerContract = function(sharesPerContact) {\n  this.sharesPerContact = sharesPerContact;\n};\n\n\n\n\nmodule.exports = BuyOptionTransaction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar BaseBuyInvestmentTransaction = require(\"./BaseBuyInvestmentTransaction\");\nvar TransactionType = require(\"./TransactionType\");\n\n/**\n * Transaction for buying other types of securities.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @class\n * @augments BaseBuyInvestmentTransaction\n */\nfunction BuyOtherTransaction () {\n  BaseBuyInvestmentTransaction.call(this, TransactionType.BUY_OTHER);\n}\n\ninherit(BuyOtherTransaction, \"extends\", BaseBuyInvestmentTransaction);\n\n\nAggregate.add(\"BUYOTHER\", BuyOtherTransaction);\n\n\n\nmodule.exports = BuyOtherTransaction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar Element = require(\"../../../../meta/Element\");\nvar TransactionType = require(\"./TransactionType\");\nvar BaseBuyInvestmentTransaction = require(\"./BaseBuyInvestmentTransaction\");\nvar BuyType = require(\"./BuyType\");\n\n/**\n * Transaction for buying stock.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @class\n * @augments BaseBuyInvestmentTransaction\n */\nfunction BuyStockTransaction () {\n  BaseBuyInvestmentTransaction.call(this, TransactionType.BUY_STOCK);\n\n  /**\n   * @name BuyStockTransaction#buyType\n   * @type String\n   * @access private\n   */\n  this.buyType = null;\n}\n\ninherit(BuyStockTransaction, \"extends\", BaseBuyInvestmentTransaction);\n\n\nAggregate.add(\"BUYSTOCK\", BuyStockTransaction);\n\n\n\n/**\n * Gets the type of stock purchase (i.e. \"BUY\" or \"BUYTOCOVER\"). This is a required field\n * according to the OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @return {String} the buy type\n */\nBuyStockTransaction.prototype.getBuyType = function() {\n  return this.buyType;\n};\nElement.add(BuyStockTransaction, {name: \"BUYTYPE\", required: true, order: 20, attributeType: String, readMethod: \"getBuyType\", writeMethod: \"setBuyType\"});\n\n\n/**\n * Sets the type of stock purchase (i.e. \"BUY\" or \"BUYTOCOVER\"). This is a required field\n * according to the OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @param {String} buyType the buy type\n */\nBuyStockTransaction.prototype.setBuyType = function(buyType) {\n  this.buyType = buyType;\n};\n\n\n/**\n * Gets the buy type as one of the well-known types.\n *\n * @return {BuyType} the type of purchase or null if it's not well known\n */\nBuyStockTransaction.prototype.getBuyTypeEnum = function() {\n  return BuyType.fromOfx(this.buyType);\n};\n\n\n\n\nmodule.exports = BuyStockTransaction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * Type of purchase for stocks and mutual funds.\n * See \"Section 13.9.2.4.2, OFX Spec\"\n *\n * @enum\n */\nvar BuyType = {\n  BUY: \"BUY\",\n  BUY_TO_COVER: \"BUYTOCOVER\",\n\n  fromOfx: function(/*String*/ ofxVal) {\n    if (\"BUY\" === ofxVal) {\n      return BuyType.BUY;\n    } else if (\"BUYTOCOVER\" === ofxVal) {\n      return BuyType.BUY_TO_COVER;\n    } else {\n      return null;\n    }\n  }\n};\n\n\nmodule.exports = BuyType;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * Type of action for closing a stock option.\n * See \"Section 13.9.2.4.2, OFX Spec\"\n *\n * @enum\n */\nvar CloseOptionAction = {\n  EXERCISE: \"EXERCISE\",\n  ASSIGN: \"ASSIGN\",\n  EXPIRE: \"EXPIRE\",\n\n  fromOfx: function(/*String*/ ofxVal) {\n    if (\"EXERCISE\" === ofxVal) {\n      return CloseOptionAction.EXERCISE;\n    } else if (\"ASSIGN\" === ofxVal) {\n      return CloseOptionAction.ASSIGN;\n    } else if (\"EXPIRE\" === ofxVal) {\n      return CloseOptionAction.EXPIRE;\n    } else {\n      return null;\n    }\n  }\n};\n\n\nmodule.exports = CloseOptionAction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar SubAccountType = require(\"../accounts/SubAccountType\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../../meta/ChildAggregate\");\nvar Element = require(\"../../../../meta/Element\");\nvar BaseOtherInvestmentTransaction = require(\"./BaseOtherInvestmentTransaction\");\nvar TransactionWithSecurity = require(\"./TransactionWithSecurity\");\nvar TransactionType = require(\"./TransactionType\");\nvar CloseOptionAction = require(\"./CloseOptionAction\");\nvar SecurityId = require(\"../../seclist/SecurityId\");\n\n\n/**\n * Transaction for closing an option position due to expiration, exercise, or assignment.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @class\n * @augments BaseOtherInvestmentTransaction\n * @augments TransactionWithSecurity\n */\nfunction CloseOptionTransaction () {\n  BaseOtherInvestmentTransaction.call(this, TransactionType.CLOSE_OPTION);\n  \n  /**\n   * @name CloseOptionTransaction#securityId\n   * @type SecurityId\n   * @access private\n   */\n  this.securityId = null;\n\n  /**\n   * @name CloseOptionTransaction#optionAction\n   * @type String\n   * @access private\n   */\n  this.optionAction = null;\n\n  /**\n   * @name CloseOptionTransaction#units\n   * @type Double\n   * @access private\n   */\n  this.units = null;\n\n  /**\n   * @name CloseOptionTransaction#sharesPerContact\n   * @type Integer\n   * @access private\n   */\n  this.sharesPerContact = null;\n\n  /**\n   * @name CloseOptionTransaction#subAccountSecurity\n   * @type String\n   * @access private\n   */\n  this.subAccountSecurity = null;\n\n  /**\n   * @name CloseOptionTransaction#relatedTransactionId\n   * @type String\n   * @access private\n   */\n  this.relatedTransactionId = null;\n\n  /**\n   * @name CloseOptionTransaction#gain\n   * @type Double\n   * @access private\n   */\n  this.gain = null;\n}\n\ninherit(CloseOptionTransaction, \"extends\", BaseOtherInvestmentTransaction);\ninherit(CloseOptionTransaction, \"implements\", TransactionWithSecurity);\n\n\nAggregate.add(\"CLOSUREOPT\", CloseOptionTransaction);\n\n\n\n\n/**\n * Gets the security id of the option.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @return {SecurityId} the security id of the option\n */\nCloseOptionTransaction.prototype.getSecurityId = function() {\n  return this.securityId;\n};\nChildAggregate.add(CloseOptionTransaction, {order: 20, attributeType: SecurityId, readMethod: \"getSecurityId\", writeMethod: \"setSecurityId\"});\n\n\n/**\n * Sets the security id of the option.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @param {SecurityId} securityId the security id of the option\n */\nCloseOptionTransaction.prototype.setSecurityId = function(securityId) {\n  this.securityId = securityId;\n};\n\n\n/**\n * Gets the action being performed (i.e. \"EXERCISE\", \"ASSIGN\", \"EXPIRE\" This is a required field\n * according to the OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @return {String} the option action\n */\nCloseOptionTransaction.prototype.getOptionAction = function() {\n  return this.optionAction;\n};\nElement.add(CloseOptionTransaction, {name: \"OPTACTION\", required: true, order: 30, attributeType: String, readMethod: \"getOptionAction\", writeMethod: \"setOptionAction\"});\n\n\n/**\n * Sets the action being performed (i.e. \"EXERCISE\", \"ASSIGN\", \"EXPIRE\" This is a required field\n * according to the OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @param {String} optionAction the option action\n */\nCloseOptionTransaction.prototype.setOptionAction = function(optionAction) {\n  this.optionAction = optionAction;\n};\n\n\n/**\n * Gets the action as one of the well-known types.\n *\n * @return {CloseOptionAction} the type of close or null if it's not a well-known type\n */\nCloseOptionTransaction.prototype.getOptionActionEnum = function() {\n  return CloseOptionAction.fromOfx(this.getOptionAction());\n};\n\n\n/**\n * Gets the number of units of the option that were closed. This is a required field according\n * to the OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @return {Double} the number of units closed\n */\nCloseOptionTransaction.prototype.getUnits = function() {\n  return this.units;\n};\nElement.add(CloseOptionTransaction, {name: \"UNITS\", required: true, order: 40, attributeType: Number, readMethod: \"getUnits\", writeMethod: \"setUnits\"});\n\n\n/**\n * Sets the number of units of the option that were closed. This is a required field according\n * to the OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @param {Double} units the number of units closed\n */\nCloseOptionTransaction.prototype.setUnits = function(units) {\n  this.units = units;\n};\n\n\n/**\n * Gets the number of shares per contact. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @return {Integer} the number of shares per contact\n */\nCloseOptionTransaction.prototype.getSharesPerContact = function() {\n  return this.sharesPerContact;\n};\nElement.add(CloseOptionTransaction, {name: \"SHPERCTRCT\", required: true, order: 50, attributeType: Number, readMethod: \"getSharesPerContact\", writeMethod: \"setSharesPerContact\"});\n\n\n/**\n * Sets the number of shares per contact. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @param {Integer} sharesPerContact the number of shares per contact\n */\nCloseOptionTransaction.prototype.setSharesPerContact = function(sharesPerContact) {\n  this.sharesPerContact = sharesPerContact;\n};\n\n\n/**\n * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @return {String} the sub account type\n */\nCloseOptionTransaction.prototype.getSubAccountSecurity = function() {\n  return this.subAccountSecurity;\n};\nElement.add(CloseOptionTransaction, {name: \"SUBACCTSEC\", required: true, order: 60, attributeType: String, readMethod: \"getSubAccountSecurity\", writeMethod: \"setSubAccountSecurity\"});\n\n\n/**\n * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @param {String} subAccountSecurity the sub account type\n */\nCloseOptionTransaction.prototype.setSubAccountSecurity = function(subAccountSecurity) {\n  this.subAccountSecurity = subAccountSecurity;\n};\n\n\n/**\n * Gets the result of getSubAccountFund as one of the well-known types.\n *\n * @return {SubAccountType} the type of null if it wasn't one of the well known types\n */\nCloseOptionTransaction.prototype.getSubAccountSecurityEnum = function() {\n  return SubAccountType.fromOfx(this.getSubAccountSecurity());\n};\n\n\n/**\n * Gets the related transaction id for the related buy or sell corresponding to the\n * EXERCISE or ASSIGN action. This is a required field according to the OFX spec if the\n * action or EXERCISE or ASSIGN.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @return {String} the related transaction id\n */\nCloseOptionTransaction.prototype.getRelatedTransactionId = function() {\n  return this.relatedTransactionId;\n};\nElement.add(CloseOptionTransaction, {name: \"RELFITID\", order: 70, attributeType: String, readMethod: \"getRelatedTransactionId\", writeMethod: \"setRelatedTransactionId\"});\n\n\n/**\n * Sets the related transaction id for the related buy or sell corresponding to the\n * EXERCISE or ASSIGN action. This is a required field according to the OFX spec if the\n * action or EXERCISE or ASSIGN.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @param {String} relatedTransactionId the related transaction id\n */\nCloseOptionTransaction.prototype.setRelatedTransactionId = function(relatedTransactionId) {\n  this.relatedTransactionId = relatedTransactionId;\n};\n\n\n/**\n * Gets the gain related to the transaction. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @return {Double} the gain related to the transaction\n */\nCloseOptionTransaction.prototype.getGain = function() {\n  return this.gain;\n};\nElement.add(CloseOptionTransaction, {name: \"GAIN\", order: 80, attributeType: Number, readMethod: \"getGain\", writeMethod: \"setGain\"});\n\n\n/**\n * Sets the gain related to the transaction. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @param {Double} gain the gain related to the transaction\n */\nCloseOptionTransaction.prototype.setGain = function(gain) {\n  this.gain = gain;\n};\n\n\n\n\nmodule.exports = CloseOptionTransaction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar SubAccountType = require(\"../accounts/SubAccountType\");\nvar Inv401KSource = require(\"../positions/Inv401KSource\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../../meta/ChildAggregate\");\nvar Element = require(\"../../../../meta/Element\");\nvar BaseOtherInvestmentTransaction = require(\"./BaseOtherInvestmentTransaction\");\nvar TransactionWithSecurity = require(\"./TransactionWithSecurity\");\nvar TransactionType = require(\"./TransactionType\");\nvar IncomeType = require(\"./IncomeType\");\nvar SecurityId = require(\"../../seclist/SecurityId\");\nvar OriginalCurrency = require(\"./OriginalCurrency\");\n\n/**\n * Transaction for investment income that is realized as cash into the investment account.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @class\n * @augments BaseOtherInvestmentTransaction\n * @augments TransactionWithSecurity\n */\nfunction IncomeTransaction () {\n  BaseOtherInvestmentTransaction.call(this, TransactionType.INCOME);\n\n  /**\n   * @name IncomeTransaction#securityId\n   * @type SecurityId\n   * @access private\n   */\n  this.securityId = null;\n\n  /**\n   * @name IncomeTransaction#incomeType\n   * @type String\n   * @access private\n   */\n  this.incomeType = null;\n\n  /**\n   * @name IncomeTransaction#total\n   * @type Double\n   * @access private\n   */\n  this.total = null;\n\n  /**\n   * @name IncomeTransaction#subAccountSecurity\n   * @type String\n   * @access private\n   */\n  this.subAccountSecurity = null;\n\n  /**\n   * @name IncomeTransaction#subAccountFund\n   * @type String\n   * @access private\n   */\n  this.subAccountFund = null;\n\n  /**\n   * @name IncomeTransaction#taxExempt\n   * @type Boolean\n   * @access private\n   */\n  this.taxExempt = null;\n\n  /**\n   * @name IncomeTransaction#withholding\n   * @type Double\n   * @access private\n   */\n  this.withholding = null;\n\n  /**\n   * @name IncomeTransaction#currencyCode\n   * @type String\n   * @access private\n   */\n  this.currencyCode = null;\n\n  /**\n   * @name IncomeTransaction#originalCurrencyInfo\n   * @type OriginalCurrency\n   * @access private\n   */\n  this.originalCurrencyInfo = null;\n\n  /**\n   * @name IncomeTransaction#inv401kSource\n   * @type String\n   * @access private\n   */\n  this.inv401kSource = null;\n}\n\ninherit(IncomeTransaction, \"extends\", BaseOtherInvestmentTransaction);\ninherit(IncomeTransaction, \"implements\", TransactionWithSecurity);\n\n\nAggregate.add(\"INCOME\", IncomeTransaction);\n\n\n\n/**\n * Gets the id of the security that the income was for. This is a required field according to the\n * OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @return {SecurityId} the security id of the security that the income was for\n */\nIncomeTransaction.prototype.getSecurityId = function() {\n  return this.securityId;\n};\nChildAggregate.add(IncomeTransaction, {required: true, order: 20, attributeType: SecurityId, readMethod: \"getSecurityId\", writeMethod: \"setSecurityId\"});\n\n\n/**\n * Sets the id of the security that the income was for. This is a required field according to the\n * OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @param {SecurityId} securityId the security id of the security that the income was for\n */\nIncomeTransaction.prototype.setSecurityId = function(securityId) {\n  this.securityId = securityId;\n};\n\n\n/**\n * Gets the type of income. One of \"CGLONG\" (long term capital gains), \"CGSHORT\" (short term\n * capital gains), \"DIV\" (dividend), INTEREST, or MISC>\n * See \"Section 13.9.2.4.4, OFX Spec\" This is a required field according to the OFX spec.\n *\n * @return {String} the type of income\n */\nIncomeTransaction.prototype.getIncomeType = function() {\n  return this.incomeType;\n};\nElement.add(IncomeTransaction, {name: \"INCOMETYPE\", required: true, order: 30, attributeType: String, readMethod: \"getIncomeType\", writeMethod: \"setIncomeType\"});\n\n\n/**\n * Sets the type of income. One of \"CGLONG\" (long term capital gains), \"CGSHORT\" (short term\n * capital gains), \"DIV\" (dividend), INTEREST, or MISC>\n * See \"Section 13.9.2.4.4, OFX Spec\" This is a required field according to the OFX spec.\n *\n * @param {String} incomeType the type of income\n */\nIncomeTransaction.prototype.setIncomeType = function(incomeType) {\n  this.incomeType = incomeType;\n};\n\n\n/**\n * Gets the income type as one of the well-known types.\n *\n * @return {IncomeType} the income type or null if it's not well known\n */\nIncomeTransaction.prototype.getIncomeTypeEnum = function() {\n  return IncomeType.fromOfx(this.getIncomeType());\n};\n\n\n/**\n * Gets the total income received.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @return {Double} the total\n */\nIncomeTransaction.prototype.getTotal = function() {\n  return this.total;\n};\nElement.add(IncomeTransaction, {name: \"TOTAL\", required: true, order: 40, attributeType: Number, readMethod: \"getTotal\", writeMethod: \"setTotal\"});\n\n\n/**\n * Sets the total income received.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @param {Double} total the total\n */\nIncomeTransaction.prototype.setTotal = function(total) {\n  this.total = total;\n};\n\n\n/**\n * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {String} the sub account type\n */\nIncomeTransaction.prototype.getSubAccountSecurity = function() {\n  return this.subAccountSecurity;\n};\nElement.add(IncomeTransaction, {name: \"SUBACCTSEC\", order: 50, attributeType: String, readMethod: \"getSubAccountSecurity\", writeMethod: \"setSubAccountSecurity\"});\n\n\n/**\n * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {String} subAcctSec the sub account type\n */\nIncomeTransaction.prototype.setSubAccountSecurity = function(subAcctSec) {\n  this.subAccountSecurity = subAcctSec;\n};\n\n\n/**\n * Gets the result of getSubAccountSecurity as one of the well-known types.\n *\n * @return {SubAccountType} the type of null if it wasn't one of the well known types.\n */\nIncomeTransaction.prototype.getSubAccountSecurityEnum = function() {\n  return SubAccountType.fromOfx(this.getSubAccountSecurity());\n};\n\n\n/**\n * Gets the sub account type that the security is from (e.g. CASH, MARGIN, SHORT, OTHER).\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {String} the sub account fund for the transaction\n */\nIncomeTransaction.prototype.getSubAccountFund = function() {\n  return this.subAccountFund;\n};\nElement.add(IncomeTransaction, {name: \"SUBACCTFUND\", order: 60, attributeType: String, readMethod: \"getSubAccountFund\", writeMethod: \"setSubAccountFund\"});\n\n\n/**\n * Sets the sub account type that the security is from (e.g. CASH, MARGIN, SHORT, OTHER).\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {String} subAcctFund the sub account fund for the transaction\n */\nIncomeTransaction.prototype.setSubAccountFund = function(subAcctFund) {\n  this.subAccountFund = subAcctFund;\n};\n\n\n/**\n * Gets the result of getSubAccountFund as one of the well-known types.\n *\n * @return {SubAccountType} the type of null if it wasn't one of the well known types\n */\nIncomeTransaction.prototype.getSubAccountFundEnum = function() {\n  return SubAccountType.fromOfx(this.getSubAccountFund());\n};\n\n\n/**\n * Gets whether the income was tax exempt. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Boolean} whether the transaction was tax exempt\n */\nIncomeTransaction.prototype.getTaxExempt = function() {\n  return this.taxExempt;\n};\nElement.add(IncomeTransaction, {name: \"TAXEXEMPT\", order: 70, attributeType: Boolean, readMethod: \"getTaxExempt\", writeMethod: \"setTaxExempt\"});\n\n\n/**\n * Sets whether the income was tax exempt. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {Boolean} taxExempt whether the transaction was tax exempt\n */\nIncomeTransaction.prototype.setTaxExempt = function(taxExempt) {\n  this.taxExempt = taxExempt;\n};\n\n\n/**\n * Gets the withholding for the income. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the withholding\n */\nIncomeTransaction.prototype.getWithholding = function() {\n  return this.withholding;\n};\nElement.add(IncomeTransaction, {name: \"WITHHOLDING\", order: 80, attributeType: Number, readMethod: \"getWithholding\", writeMethod: \"setWithholding\"});\n\n\n/**\n * Sets the withholding for the income. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {Double} withholding the withholding\n */\nIncomeTransaction.prototype.setWithholding = function(withholding) {\n  this.withholding = withholding;\n};\n\n\n/**\n * Gets the currency code for the transaction. Only one of currency code or original currency\n * info should be set according to the OFX spec. If neither are set, means the default currency.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {String} the currency code for the transaction\n */\nIncomeTransaction.prototype.getCurrencyCode = function() {\n  return this.currencyCode;\n};\nElement.add(IncomeTransaction, {name: \"CURRENCY\", order: 90, attributeType: String, readMethod: \"getCurrencyCode\", writeMethod: \"setCurrencyCode\"});\n\n\n/**\n * Sets the currency code for the transaction. Only one of currency code or original currency\n * info should be set according to the OFX spec. If neither are set, means the default currency.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {String} currencyCode the currency code for the transaction\n */\nIncomeTransaction.prototype.setCurrencyCode = function(currencyCode) {\n  this.currencyCode = currencyCode;\n  this.originalCurrencyInfo = null;\n};\n\n\n/**\n * Gets the original currency info for the transaction.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {OriginalCurrency} the currency info for the transaction\n */\nIncomeTransaction.prototype.getOriginalCurrencyInfo = function() {\n  return this.originalCurrencyInfo;\n};\nChildAggregate.add(IncomeTransaction, {order: 120, attributeType: OriginalCurrency, readMethod: \"getOriginalCurrencyInfo\", writeMethod: \"setOriginalCurrencyInfo\"});\n\n\n/**\n * Sets the original currency info for the transaction.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {OriginalCurrency} originalCurrencyInfo the currency info for the transaction\n */\nIncomeTransaction.prototype.setOriginalCurrencyInfo = function(originalCurrencyInfo) {\n  this.originalCurrencyInfo = originalCurrencyInfo;\n  this.currencyCode = null;\n};\n\n\n/**\n * Gets the 401K source for the sale. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n * according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {String} the state withholding\n */\nIncomeTransaction.prototype.get401kSource = function() {\n  return this.inv401kSource;\n};\nElement.add(IncomeTransaction, {name: \"INV401KSOURCE\", order: 110, attributeType: String, readMethod: \"get401kSource\", writeMethod: \"set401kSource\"});\n\n\n/**\n * Sets the 401K source for the sale. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n * according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {String} inv401kSource the state withholding\n */\nIncomeTransaction.prototype.set401kSource = function(inv401kSource) {\n  this.inv401kSource = inv401kSource;\n};\n\n\n/**\n * Gets the 401(k) source as one of the well-known types.\n *\n * @return {Inv401KSource} the type of close or null if it's not well known.\n */\nIncomeTransaction.prototype.get401kSourceEnum = function() {\n  return Inv401KSource.fromOfx(this.get401kSource());\n};\n\n\n\n\nmodule.exports = IncomeTransaction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * Type of income.\n * See \"Section 13.9.2.4.2, OFX Spec\"\n *\n * @enum\n */\nvar IncomeType = {\n  LONG_TERM_CAP_GAINS: \"CGLONG\",\n  SHORT_TERM_CAP_GAINS: \"CGSHORT\",\n  DIVIDEND: \"DIV\",\n  INTEREST: \"INTEREST\",\n  MISC: \"MISC\",\n\n  fromOfx: function(/*String*/ ofxVal) {\n    if (\"CGLONG\" === ofxVal) {\n      return IncomeType.LONG_TERM_CAP_GAINS;\n    } else if (\"CGSHORT\" === ofxVal) {\n      return IncomeType.SHORT_TERM_CAP_GAINS;\n    } else if (\"DIV\" === ofxVal) {\n      return IncomeType.DIVIDEND;\n    } else if (\"INTEREST\" === ofxVal) {\n      return IncomeType.INTEREST;\n    } else if (\"MISC\" === ofxVal) {\n      return IncomeType.MISC;\n    } else {\n      return null;\n    }\n  }\n};\n\n\nmodule.exports = IncomeType;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar SubAccountType = require(\"../accounts/SubAccountType\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../../meta/ChildAggregate\");\nvar Element = require(\"../../../../meta/Element\");\nvar Transaction = require(\"../../common/Transaction\");\n\n/**\n * Bank transactions that are part of an investment account statement. Wraps a {@link Transaction}.\n * See \"Section 13.9.2.3, OFX Spec\"\n *\n * @class\n */\nfunction InvestmentBankTransaction () {\n\n  /**\n   * @name InvestmentBankTransaction#transaction\n   * @type Transaction\n   * @access private\n   */\n  this.transaction = null;\n\n  /**\n   * @name InvestmentBankTransaction#subAccountFund\n   * @type String\n   * @access private\n   */\n  this.subAccountFund = null;\n}\n\n\n\nAggregate.add(\"INVBANKTRAN\", InvestmentBankTransaction);\n\n\n/**\n * Gets the wrapped transaction aggregate.\n * @return {Transaction} the wrapped transaction\n */\nInvestmentBankTransaction.prototype.getTransaction = function() {\n  return this.transaction;\n};\nChildAggregate.add(InvestmentBankTransaction, {order: 10, attributeType: Transaction, readMethod: \"getTransaction\", writeMethod: \"setTransaction\"});\n\n\n/**\n * Sets the wrapped transaction aggregate.\n * @param {Transaction} transaction the wrapped transaction\n */\nInvestmentBankTransaction.prototype.setTransaction = function(transaction) {\n  this.transaction = transaction;\n};\n\n\n/**\n * Gets the sub account type that the security is from (e.g. CASH, MARGIN, SHORT, OTHER).\n * See \"Section 13.9.2.4.2, OFX Spec\"\n *\n * @return {String} the sub account fund for the transaction\n */\nInvestmentBankTransaction.prototype.getSubAccountFund = function() {\n  return this.subAccountFund;\n};\nElement.add(InvestmentBankTransaction, {name: \"SUBACCTFUND\", required: true, order: 20, attributeType: String, readMethod: \"getSubAccountFund\", writeMethod: \"setSubAccountFund\"});\n\n\n/**\n * Sets the sub account type that the security is from (e.g. CASH, MARGIN, SHORT, OTHER).\n * See \"Section 13.9.2.4.2, OFX Spec\"\n *\n * @param {String} subAccountFund the sub account fund for the transaction\n */\nInvestmentBankTransaction.prototype.setSubAccountFund = function(subAccountFund) {\n  this.subAccountFund = subAccountFund;\n};\n\n\n/**\n * Gets the result of getSubAccountFund as one of the well-known types.\n *\n * @return {SubAccountType} the type of null if it wasn't one of the well known types\n */\nInvestmentBankTransaction.prototype.getSubAccountFundEnum = function() {\n  return SubAccountType.fromOfx(this.getSubAccountFund());\n};\n\n\n\n\nmodule.exports = InvestmentBankTransaction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar SubAccountType = require(\"../accounts/SubAccountType\");\nvar Inv401KSource = require(\"../positions/Inv401KSource\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../../meta/ChildAggregate\");\nvar Element = require(\"../../../../meta/Element\");\nvar BaseOtherInvestmentTransaction = require(\"./BaseOtherInvestmentTransaction\");\nvar TransactionType = require(\"./TransactionType\");\nvar SecurityId = require(\"../../seclist/SecurityId\");\nvar OriginalCurrency = require(\"./OriginalCurrency\");\n\n/**\n * Transaction for an investment expense\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @class\n * @augments BaseOtherInvestmentTransaction\n */\nfunction InvestmentExpenseTransaction () {\n  BaseOtherInvestmentTransaction.call(this, TransactionType.INVESTMENT_EXPENSE);\n\n  /**\n   * @name InvestmentExpenseTransaction#securityId\n   * @type SecurityId\n   * @access private\n   */\n  this.securityId = null;\n\n  /**\n   * @name InvestmentExpenseTransaction#total\n   * @type Double\n   * @access private\n   */\n  this.total = null;\n\n  /**\n   * @name InvestmentExpenseTransaction#subAccountSecurity\n   * @type String\n   * @access private\n   */\n  this.subAccountSecurity = null;\n\n  /**\n   * @name InvestmentExpenseTransaction#subAccountFund\n   * @type String\n   * @access private\n   */\n  this.subAccountFund = null;\n\n  /**\n   * @name InvestmentExpenseTransaction#currencyCode\n   * @type String\n   * @access private\n   */\n  this.currencyCode = null;\n\n  /**\n   * @name InvestmentExpenseTransaction#originalCurrencyInfo\n   * @type OriginalCurrency\n   * @access private\n   */\n  this.originalCurrencyInfo = null;\n\n  /**\n   * @name InvestmentExpenseTransaction#inv401kSource\n   * @type String\n   * @access private\n   */\n  this.inv401kSource = null;\n}\n\ninherit(InvestmentExpenseTransaction, \"extends\", BaseOtherInvestmentTransaction);\n\n\nAggregate.add(\"INVEXPENSE\", InvestmentExpenseTransaction);\n\n\n\n/**\n * Gets the id of the security for the expense. This is a required field according to the OFX\n * spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {SecurityId} the security id of the security for the expsense\n */\nInvestmentExpenseTransaction.prototype.getSecurityId = function() {\n  return this.securityId;\n};\nChildAggregate.add(InvestmentExpenseTransaction, {required: true, order: 20, attributeType: SecurityId, readMethod: \"getSecurityId\", writeMethod: \"setSecurityId\"});\n\n\n/**\n * Sets the id of the security for the expense. This is a required field according to the OFX\n * spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {SecurityId} securityId the security id of the security for the expsense\n */\nInvestmentExpenseTransaction.prototype.setSecurityId = function(securityId) {\n  this.securityId = securityId;\n};\n\n\n/**\n * Gets the total for the expense.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the total\n */\nInvestmentExpenseTransaction.prototype.getTotal = function() {\n  return this.total;\n};\nElement.add(InvestmentExpenseTransaction, {name: \"TOTAL\", required: true, order: 30, attributeType: Number, readMethod: \"getTotal\", writeMethod: \"setTotal\"});\n\n\n/**\n * Sets the total for the expense.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {Double} total the total\n */\nInvestmentExpenseTransaction.prototype.setTotal = function(total) {\n  this.total = total;\n};\n\n\n/**\n * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {String} the sub account type\n */\nInvestmentExpenseTransaction.prototype.getSubAccountSecurity = function() {\n  return this.subAccountSecurity;\n};\nElement.add(InvestmentExpenseTransaction, {name: \"SUBACCTSEC\", order: 40, attributeType: String, readMethod: \"getSubAccountSecurity\", writeMethod: \"setSubAccountSecurity\"});\n\n\n/**\n * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {String} subAccountSecurity the sub account type\n */\nInvestmentExpenseTransaction.prototype.setSubAccountSecurity = function(subAccountSecurity) {\n  this.subAccountSecurity = subAccountSecurity;\n};\n\n\n/**\n * Gets the result of getSubAccountSecurity as one of the well-known types.\n *\n * @return {SubAccountType} the type of null if it wasn't one of the well known types.\n */\nInvestmentExpenseTransaction.prototype.getSubAccountSecurityEnum = function() {\n  return SubAccountType.fromOfx(this.getSubAccountSecurity());\n};\n\n\n/**\n * Gets the sub account type for the fund. (e.g. CASH, MARGIN, SHORT, OTHER).\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {String} the sub account fund\n */\nInvestmentExpenseTransaction.prototype.getSubAccountFund = function() {\n  return this.subAccountFund;\n};\nElement.add(InvestmentExpenseTransaction, {name: \"SUBACCTFUND\", order: 50, attributeType: String, readMethod: \"getSubAccountFund\", writeMethod: \"setSubAccountFund\"});\n\n\n/**\n * Sets the sub account type for the fund. (e.g. CASH, MARGIN, SHORT, OTHER).\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {String} subAccountFund the sub account fund\n */\nInvestmentExpenseTransaction.prototype.setSubAccountFund = function(subAccountFund) {\n  this.subAccountFund = subAccountFund;\n};\n\n\n/**\n * Gets the result of getSubAccountFund as one of the well-known types.\n *\n * @return {SubAccountType} the type of null if it wasn't one of the well known types\n */\nInvestmentExpenseTransaction.prototype.getSubAccountFundEnum = function() {\n  return SubAccountType.fromOfx(this.getSubAccountFund());\n};\n\n\n/**\n * Gets the currency code for the transaction. Only one of currency code or original currency\n * code should be set according to the OFX spec. If neither are set, means the default currency.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {String} the currency code for the transaction\n */\nInvestmentExpenseTransaction.prototype.getCurrencyCode = function() {\n  return this.currencyCode;\n};\nElement.add(InvestmentExpenseTransaction, {name: \"CURRENCY\", order: 60, attributeType: String, readMethod: \"getCurrencyCode\", writeMethod: \"setCurrencyCode\"});\n\n\n/**\n * sets the currency code for the transaction. Only one of currency code or original currency\n * code should be set according to the OFX spec. If neither are set, means the default currency.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {String} currencyCode the currency code for the transaction\n */\nInvestmentExpenseTransaction.prototype.setCurrencyCode = function(currencyCode) {\n  this.currencyCode = currencyCode;\n  this.originalCurrencyInfo = null;\n};\n\n\n/**\n * Gets the original currency info for the transaction.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {OriginalCurrency} the original currency info for the transaction\n */\nInvestmentExpenseTransaction.prototype.getOriginalCurrencyInfo = function() {\n  return this.originalCurrencyInfo;\n};\nElement.add(InvestmentExpenseTransaction, {name: \"ORIGCURRENCY\", order: 70, attributeType: OriginalCurrency, readMethod: \"getOriginalCurrencyInfo\", writeMethod: \"setOriginalCurrencyInfo\"});\n\n\n/**\n * Sets the original currency info for the transaction.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {OriginalCurrency} originalCurrencyInfo the original currency info for the transaction\n */\nInvestmentExpenseTransaction.prototype.setOriginalCurrencyInfo = function(originalCurrencyInfo) {\n  this.originalCurrencyInfo = originalCurrencyInfo;\n  this.currencyCode = null;\n};\n\n\n/**\n * Gets the 401K source for the transaction. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n * according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {String} the 401k source\n */\nInvestmentExpenseTransaction.prototype.get401kSource = function() {\n  return this.inv401kSource;\n};\nElement.add(InvestmentExpenseTransaction, {name: \"INV401KSOURCE\", order: 180, attributeType: String, readMethod: \"get401kSource\", writeMethod: \"set401kSource\"});\n\n\n/**\n * Sets the 401K source for the transaction. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n * according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {String} inv401kSource the 401k source\n */\nInvestmentExpenseTransaction.prototype.set401kSource = function(inv401kSource) {\n  this.inv401kSource = inv401kSource;\n};\n\n\n/**\n * Gets the 401k source as one of the well-known types.\n *\n * @return {Inv401KSource} the 401k source or null if its not one of the well-known types\n */\nInvestmentExpenseTransaction.prototype.get401kSourceEnum = function() {\n  return Inv401KSource.fromOfx(this.get401kSource());\n};\n\n\n\n\nmodule.exports = InvestmentExpenseTransaction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar Element = require(\"../../../../meta/Element\");\n\n/**\n * Investment transaction aggregate (\"INVTRAN\").\n * See \"Section 13.9.2.4.1, OFX Spec\"\n *\n * @class\n */\nfunction InvestmentTransaction () {\n\n  /**\n   * @name InvestmentTransaction#transactionId\n   * @type String\n   * @access private\n   */\n  this.transactionId = null;\n\n  /**\n   * @name InvestmentTransaction#serverId\n   * @type String\n   * @access private\n   */\n  this.serverId = null;\n\n  /**\n   * @name InvestmentTransaction#tradeDate\n   * @type Date\n   * @access private\n   */\n  this.tradeDate = null;\n\n  /**\n   * @name InvestmentTransaction#settlementDate\n   * @type Date\n   * @access private\n   */\n  this.settlementDate = null;\n\n  /**\n   * @name InvestmentTransaction#reversalTransactionId\n   * @type String\n   * @access private\n   */\n  this.reversalTransactionId = null;\n\n  /**\n   * @name InvestmentTransaction#memo\n   * @type String\n   * @access private\n   */\n  this.memo = null;\n}\n\n\n\nAggregate.add(\"INVTRAN\", InvestmentTransaction);\n\n\n/**\n * Gets the unique financial institution assigned transaction id. This is a\n * required field according to the OFX spec.\n * See \"Section 13.9.2.4.1, OFX Spec\"\n *\n * @return {String} the financial institution asssigned transaction id\n */\nInvestmentTransaction.prototype.getTransactionId = function() {\n  return this.transactionId;\n};\nElement.add(InvestmentTransaction, {name: \"FITID\", required: true, order: 0, attributeType: String, readMethod: \"getTransactionId\", writeMethod: \"setTransactionId\"});\n\n\n/**\n * Sets the unique financial institution assigned transaction id. This is a\n * required field according to the OFX spec.\n * See \"Section 13.9.2.4.1, OFX Spec\"\n *\n * @param {String} transactionId the financial institution asssigned transaction id\n */\nInvestmentTransaction.prototype.setTransactionId = function(transactionId) {\n  this.transactionId = transactionId;\n};\n\n\n/**\n * Gets the server assigned transaction id. This is an optional field\n * according to the OFX spec.\n * See \"Section 13.9.2.4.1, OFX Spec\"\n *\n * @return {String} the server assigned transaction id\n */\nInvestmentTransaction.prototype.getServerId = function() {\n  return this.serverId;\n};\nElement.add(InvestmentTransaction, {name: \"SRVRTID\", order: 10, attributeType: String, readMethod: \"getServerId\", writeMethod: \"setServerId\"});\n\n\n/**\n * Sets the server assigned transaction id. This is an optional field\n * according to the OFX spec.\n * See \"Section 13.9.2.4.1, OFX Spec\"\n *\n * @param {String} serverId the server assigned transaction id\n */\nInvestmentTransaction.prototype.setServerId = function(serverId) {\n  this.serverId = serverId;\n};\n\n\n/**\n * Gets the trade date of the transaction. For stock splits, this is the\n * day of record. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.4.1, OFX Spec\"\n *\n * @return {Date} the trade date\n */\nInvestmentTransaction.prototype.getTradeDate = function() {\n  return this.tradeDate;\n};\nElement.add(InvestmentTransaction, {name: \"DTTRADE\", required: true, order: 20, attributeType: Date, readMethod: \"getTradeDate\", writeMethod: \"setTradeDate\"});\n\n\n/**\n * Sets the trade date of the transaction. For stock splits, this is the\n * day of record. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.4.1, OFX Spec\"\n *\n * @param {Date} tradeDate the trade date\n */\nInvestmentTransaction.prototype.setTradeDate = function(tradeDate) {\n  this.tradeDate = tradeDate;\n};\n\n\n/**\n * Gets the settlement date of the transaction. For stock splits, this is the\n * day of of execution. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.1, OFX Spec\"\n *\n * @return {Date} the trade date\n */\nInvestmentTransaction.prototype.getSettlementDate = function() {\n  return this.settlementDate;\n};\nElement.add(InvestmentTransaction, {name: \"DTSETTLE\", order: 30, attributeType: Date, readMethod: \"getSettlementDate\", writeMethod: \"setSettlementDate\"});\n\n\n/**\n * Sets the settlement date of the transaction. For stock splits, this is the\n * day of of execution. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.1, OFX Spec\"\n *\n * @param {Date} settlementDate the trade date\n */\nInvestmentTransaction.prototype.setSettlementDate = function(settlementDate) {\n  this.settlementDate = settlementDate;\n};\n\n\n/**\n * For a reveral transaction, gets the financial institution assigned\n * transaction id for the transaction being revesed.\n * See \"Section 13.9.2.4.1, OFX Spec\"\n *\n * @return {String} the transaction id of the transaction being reversed\n */\nInvestmentTransaction.prototype.getReversalTransactionId = function() {\n  return this.reversalTransactionId;\n};\nElement.add(InvestmentTransaction, {name: \"REVERSALFITID\", order: 40, attributeType: String, readMethod: \"getReversalTransactionId\", writeMethod: \"setReversalTransactionId\"});\n\n\n/**\n * For a reveral transaction, gets the financial institution assigned\n * transaction id for the transaction being revesed.\n * See \"Section 13.9.2.4.1, OFX Spec\"\n *\n * @param {String} reversalTransactionId the transaction id of the transaction being reversed\n */\nInvestmentTransaction.prototype.setReversalTransactionId = function(reversalTransactionId) {\n  this.reversalTransactionId = reversalTransactionId;\n};\n\n\n/**\n * Gets the memo associated with the transaction. This is an optional field\n * according to the OFX spec.\n * See \"Section 13.9.2.4.1, OFX Spec\"\n *\n * @return {String} the memo\n */\nInvestmentTransaction.prototype.getMemo = function() {\n  return this.memo;\n};\nElement.add(InvestmentTransaction, {name: \"MEMO\", order: 50, attributeType: String, readMethod: \"getMemo\", writeMethod: \"setMemo\"});\n\n\n/**\n * Sets the memo associated with the transaction. This is an optional field\n * according to the OFX spec.\n * See \"Section 13.9.2.4.1, OFX Spec\"\n *\n * @param {String} memo the memo\n */\nInvestmentTransaction.prototype.setMemo = function(memo) {\n  this.memo = memo;\n};\n\n\n\n\nmodule.exports = InvestmentTransaction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../../meta/ChildAggregate\");\nvar Element = require(\"../../../../meta/Element\");\nvar BaseInvestmentTransaction = require(\"./BaseInvestmentTransaction\");\nvar InvestmentBankTransaction = require(\"./InvestmentBankTransaction\");\n\n/**\n * The transaction list aggregate.\n * See \"Section 13.9.1.2, OFX Spec\"\n *\n * @class\n */\nfunction InvestmentTransactionList () {\n\n  /**\n   * @name InvestmentTransactionList#start\n   * @type Date\n   * @access private\n   */\n  this.start = null;\n\n  /**\n   * @name InvestmentTransactionList#end\n   * @type Date\n   * @access private\n   */\n  this.end = null;\n\n  /**\n   * @name InvestmentTransactionList#transactions\n   * @type BaseInvestmentTransaction[]\n   * @access private\n   */\n  this.transactions = null;\n\n  /**\n   * @name InvestmentTransactionList#bankTransactions\n   * @type InvestmentBankTransaction[]\n   * @access private\n   */\n  this.bankTransactions = null;\n}\n\n\n\nAggregate.add(\"INVTRANLIST\", InvestmentTransactionList);\n\n\n/**\n * Gets the start date. This is a required field according to the OFX spec.\n *\n * @return {Date} The start date\n */\nInvestmentTransactionList.prototype.getStart = function() {\n  return this.start;\n};\nElement.add(InvestmentTransactionList, {name: \"DTSTART\", required: true, order: 0, attributeType: Date, readMethod: \"getStart\", writeMethod: \"setStart\"});\n\n\n/**\n * Sets the start date. This is a required field according to the OFX spec.\n *\n * @param {Date} start The start date\n */\nInvestmentTransactionList.prototype.setStart = function(start) {\n  this.start = start;\n};\n\n\n/**\n * Gets the end date. This is a required field according to the OFX spec.\n *\n * @return {Date} he end date\n */\nInvestmentTransactionList.prototype.getEnd = function() {\n  return this.end;\n};\nElement.add(InvestmentTransactionList, {name: \"DTEND\", required: true, order: 10, attributeType: Date, readMethod: \"getEnd\", writeMethod: \"setEnd\"});\n\n\n/**\n * Sets the end date. This is a required field according to the OFX spec.\n *\n * @param {Date} end the end date\n */\nInvestmentTransactionList.prototype.setEnd = function(end) {\n  this.end = end;\n};\n\n\n/**\n * Gets the investment transaction list. This is a heterogenous list of different types of\n * transactions returned in the order the brokerage provides them.\n *\n * @return {BaseInvestmentTransaction[]} the investment transaction list\n */\nInvestmentTransactionList.prototype.getInvestmentTransactions = function() {\n  return this.transactions;\n};\nChildAggregate.add(InvestmentTransactionList, {order: 20, attributeType: Array, collectionEntryType: BaseInvestmentTransaction, readMethod: \"getInvestmentTransactions\", writeMethod: \"setInvestmentTransactions\"});\n\n\n/**\n * Sets the investment transaction list. This is a heterogenous list of different types of\n * transactions returned in the order the brokerage provides them.\n *\n * @param {BaseInvestmentTransaction[]} transactions the investment transaction list\n */\nInvestmentTransactionList.prototype.setInvestmentTransactions = function(transactions) {\n  this.transactions = transactions;\n};\n\n\n/**\n * Gets the bank transaction list.\n *\n * @return {InvestmentBankTransaction[]} the bank transaction list\n */\nInvestmentTransactionList.prototype.getBankTransactions = function() {\n  return this.bankTransactions;\n};\nChildAggregate.add(InvestmentTransactionList, {order: 30, attributeType: Array, collectionEntryType: InvestmentBankTransaction, readMethod: \"getBankTransactions\", writeMethod: \"setBankTransactions\"});\n\n\n/**\n * Sets the bank transaction list.\n *\n * @param {InvestmentBankTransaction[]} bankTransactions the bank transaction list\n */\nInvestmentTransactionList.prototype.setBankTransactions = function(bankTransactions) {\n  this.bankTransactions = bankTransactions;\n};\n\n\n\n\nmodule.exports = InvestmentTransactionList;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar SubAccountType = require(\"../../../../domain/data/investment/accounts/SubAccountType\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar Element = require(\"../../../../meta/Element\");\nvar BaseOtherInvestmentTransaction = require(\"./BaseOtherInvestmentTransaction\");\nvar TransactionType = require(\"./TransactionType\");\n\n/**\n * Transaction for journal fund transactions between sub-accounts within the same investment\n * account.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @class\n * @augments BaseOtherInvestmentTransaction\n */\nfunction JournalFundTransaction () {\n  BaseOtherInvestmentTransaction.call(this, TransactionType.JOURNAL_FUND);\n\n  /**\n   * @name JournalFundTransaction#subAccountFrom\n   * @type String\n   * @access private\n   */\n  this.subAccountFrom = null;\n\n  /**\n   * @name JournalFundTransaction#subAccountTo\n   * @type String\n   * @access private\n   */\n  this.subAccountTo = null;\n\n  /**\n   * @name JournalFundTransaction#total\n   * @type Double\n   * @access private\n   */\n  this.total = null;\n}\n\ninherit(JournalFundTransaction, \"extends\", BaseOtherInvestmentTransaction);\n\n\nAggregate.add(\"JRNLFUND\", JournalFundTransaction);\n\n\n\n/**\n * Gets the sub account type the transer is from (e.g. CASH, MARGIN, SHORT, OTHER).\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @return {String} the sub account type\n */\nJournalFundTransaction.prototype.getFromSubAccountFund = function() {\n  return this.subAccountFrom;\n};\nElement.add(JournalFundTransaction, {name: \"SUBACCTFROM\", order: 20, attributeType: String, readMethod: \"getFromSubAccountFund\", writeMethod: \"setFromSubAccountFund\"});\n\n\n/**\n * Sets the sub account type the transer is from (e.g. CASH, MARGIN, SHORT, OTHER).\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @param {String} subAccountFrom the sub account type\n */\nJournalFundTransaction.prototype.setFromSubAccountFund = function(subAccountFrom) {\n  this.subAccountFrom = subAccountFrom;\n};\n\n\n/**\n * Gets the result of getFromSubAccountFund as one of the well-known types.\n *\n * @return {SubAccountType} the type of null if it wasn't one of the well known types.\n */\nJournalFundTransaction.prototype.getFromSubAccountFundEnum = function() {\n  return SubAccountType.fromOfx(this.getFromSubAccountFund());\n};\n\n\n/**\n * Gets the sub account type that the transfer is to (e.g. CASH, MARGIN, SHORT, OTHER).\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @return {String} the sub account fund\n */\nJournalFundTransaction.prototype.getToSubAccountFund = function() {\n  return this.subAccountTo;\n};\nElement.add(JournalFundTransaction, {name: \"SUBACCTTO\", order: 30, attributeType: String, readMethod: \"getToSubAccountFund\", writeMethod: \"setToSubAccountFund\"});\n\n\n/**\n * Sets the sub account type that the transfer is to (e.g. CASH, MARGIN, SHORT, OTHER).\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @param {String} subAccountTo the sub account fund\n */\nJournalFundTransaction.prototype.setToSubAccountFund = function(subAccountTo) {\n  this.subAccountTo = subAccountTo;\n};\n\n\n/**\n * Gets the result of getToSubAccountFund as one of the well-known types.\n *\n * @return {SubAccountType} the type of null if it wasn't one of the well known types.\n */\nJournalFundTransaction.prototype.getToSubAccountFundEnum = function() {\n  return SubAccountType.fromOfx(this.getToSubAccountFund());\n};\n\n\n/**\n * Gets the total for the transaction.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @return {Double} the total\n */\nJournalFundTransaction.prototype.getTotal = function() {\n  return this.total;\n};\nElement.add(JournalFundTransaction, {name: \"TOTAL\", order: 40, attributeType: Number, readMethod: \"getTotal\", writeMethod: \"setTotal\"});\n\n\n/**\n * Sets the total for the transaction.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @param {Double} total the total\n */\nJournalFundTransaction.prototype.setTotal = function(total) {\n  this.total = total;\n};\n\n\n\n\nmodule.exports = JournalFundTransaction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar SubAccountType = require(\"../accounts/SubAccountType\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../../meta/ChildAggregate\");\nvar Element = require(\"../../../../meta/Element\");\nvar BaseOtherInvestmentTransaction = require(\"./BaseOtherInvestmentTransaction\");\nvar TransactionWithSecurity = require(\"./TransactionWithSecurity\");\nvar TransactionType = require(\"./TransactionType\");\nvar SecurityId = require(\"../../seclist/SecurityId\");\n\n/**\n * Transaction for journal security transactions between sub-accounts within the same investment\n * account.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @class\n * @augments BaseOtherInvestmentTransaction\n * @augments TransactionWithSecurity\n */\nfunction JournalSecurityTransaction () {\n  BaseOtherInvestmentTransaction.call(this, TransactionType.JOURNAL_SECURITY);\n\n  /**\n   * @name JournalSecurityTransaction#securityId\n   * @type SecurityId\n   * @access private\n   */\n  this.securityId = null;\n\n  /**\n   * @name JournalSecurityTransaction#subAccountFrom\n   * @type String\n   * @access private\n   */\n  this.subAccountFrom = null;\n\n  /**\n   * @name JournalSecurityTransaction#subAccountTo\n   * @type String\n   * @access private\n   */\n  this.subAccountTo = null;\n\n  /**\n   * @name JournalSecurityTransaction#total\n   * @type Double\n   * @access private\n   */\n  this.total = null;\n}\n\ninherit(JournalSecurityTransaction, \"extends\", BaseOtherInvestmentTransaction);\ninherit(JournalSecurityTransaction, \"implements\", TransactionWithSecurity);\n\n\nAggregate.add(\"JRNLSEC\", JournalSecurityTransaction);\n\n\n\n/**\n * Gets the id of the security that was transferred. This is a required field according to the OFX\n * spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {SecurityId} the security id of the security that was bought\n */\nJournalSecurityTransaction.prototype.getSecurityId = function() {\n  return this.securityId;\n};\nChildAggregate.add(JournalSecurityTransaction, {required: true, order: 20, attributeType: SecurityId, readMethod: \"getSecurityId\", writeMethod: \"setSecurityId\"});\n\n\n/**\n * Sets the id of the security that was transferred. This is a required field according to the OFX\n * spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {SecurityId} securityId the security id of the security that was bought\n */\nJournalSecurityTransaction.prototype.setSecurityId = function(securityId) {\n  this.securityId = securityId;\n};\n\n\n/**\n * Gets the sub account type the transer is from (e.g. CASH, MARGIN, SHORT, OTHER).\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @return {String} the sub account type\n */\nJournalSecurityTransaction.prototype.getFromSubAccountFund = function() {\n  return this.subAccountFrom;\n};\nElement.add(JournalSecurityTransaction, {name: \"SUBACCTFROM\", order: 30, attributeType: String, readMethod: \"getFromSubAccountFund\", writeMethod: \"setFromSubAccountFund\"});\n\n\n/**\n * Sets the sub account type the transer is from (e.g. CASH, MARGIN, SHORT, OTHER).\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @param {String} subAccountFrom the sub account type\n */\nJournalSecurityTransaction.prototype.setFromSubAccountFund = function(subAccountFrom) {\n  this.subAccountFrom = subAccountFrom;\n};\n\n\n/**\n * Gets the result of getFromSubAccountFund as one of the well-known types.\n *\n * @return {SubAccountType} the type of null if it wasn't one of the well known types.\n */\nJournalSecurityTransaction.prototype.getFromSubAccountFundEnum = function() {\n  return SubAccountType.fromOfx(this.getFromSubAccountFund());\n};\n\n\n/**\n * Gets the sub account type that the transfer is to (e.g. CASH, MARGIN, SHORT, OTHER).\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @return {String} the sub account fund\n */\nJournalSecurityTransaction.prototype.getToSubAccountFund = function() {\n  return this.subAccountTo;\n};\nElement.add(JournalSecurityTransaction, {name: \"SUBACCTTO\", order: 40, attributeType: String, readMethod: \"getToSubAccountFund\", writeMethod: \"setToSubAccountFund\"});\n\n\n/**\n * sets the sub account type that the transfer is to (e.g. CASH, MARGIN, SHORT, OTHER).\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @param {String} subAccountTo the sub account fund\n */\nJournalSecurityTransaction.prototype.setToSubAccountFund = function(subAccountTo) {\n  this.subAccountTo = subAccountTo;\n};\n\n\n/**\n * Gets the result of getToSubAccountFund as one of the well-known types.\n *\n * @return {SubAccountType} the type of null if it wasn't one of the well known types.\n */\nJournalSecurityTransaction.prototype.getToSubAccountFundEnum = function() {\n  return SubAccountType.fromOfx(this.getToSubAccountFund());\n};\n\n\n/**\n * Gets the total for the transaction.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @return {Double} the total\n */\nJournalSecurityTransaction.prototype.getTotal = function() {\n  return this.total;\n};\nElement.add(JournalSecurityTransaction, {name: \"TOTAL\", order: 50, attributeType: Number, readMethod: \"getTotal\", writeMethod: \"setTotal\"});\n\n\n/**\n * Sets the total for the transaction.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @param {Double} total the total\n */\nJournalSecurityTransaction.prototype.setTotal = function(total) {\n  this.total = total;\n};\n\n\n\n\nmodule.exports = JournalSecurityTransaction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar SubAccountType = require(\"../accounts/SubAccountType\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar Element = require(\"../../../../meta/Element\");\nvar BaseOtherInvestmentTransaction = require(\"./BaseOtherInvestmentTransaction\");\nvar TransactionType = require(\"./TransactionType\");\nvar OriginalCurrency = require(\"./OriginalCurrency\");\n\n/**\n * Transaction for journal security transactions between sub-accounts within the same investment\n * account.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @class\n * @augments BaseOtherInvestmentTransaction\n */\nfunction MarginInterestTransaction () {\n  BaseOtherInvestmentTransaction.call(this, TransactionType.MARGIN_INTEREST);\n\n  /**\n   * @name MarginInterestTransaction#total\n   * @type Double\n   * @access private\n   */\n  this.total = null;\n\n  /**\n   * @name MarginInterestTransaction#subAccountFund\n   * @type String\n   * @access private\n   */\n  this.subAccountFund = null;\n\n  /**\n   * @name MarginInterestTransaction#currencyCode\n   * @type String\n   * @access private\n   */\n  this.currencyCode = null;\n\n  /**\n   * @name MarginInterestTransaction#originalCurrencyInfo\n   * @type OriginalCurrency\n   * @access private\n   */\n  this.originalCurrencyInfo = null;\n}\n\ninherit(MarginInterestTransaction, \"extends\", BaseOtherInvestmentTransaction);\n\n\nAggregate.add(\"MARGININTEREST\", MarginInterestTransaction);\n\n\n/**\n * Gets the sub account type the margin interest affects (e.g. CASH, MARGIN, SHORT, OTHER).\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @return {String} the sub account type\n */\nMarginInterestTransaction.prototype.getSubAccountFund = function() {\n  return this.subAccountFund;\n};\nElement.add(MarginInterestTransaction, {name: \"SUBACCTFUND\", order: 30, attributeType: String, readMethod: \"getSubAccountFund\", writeMethod: \"setSubAccountFund\"});\n\n\n/**\n * Sets the sub account type the margin interest affects (e.g. CASH, MARGIN, SHORT, OTHER).\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @param {String} subAccountFund the sub account type\n */\nMarginInterestTransaction.prototype.setSubAccountFund = function(subAccountFund) {\n  this.subAccountFund = subAccountFund;\n};\n\n\n/**\n * Gets the result of getSubAccountFund as one of the well-known types.\n *\n * @return {SubAccountType} the type of null if it wasn't one of the well known types.\n */\nMarginInterestTransaction.prototype.getSubAccountFundEnum = function() {\n  var type = this.getSubAccountFund();\n  return type ? SubAccountType.valueOf(type) : null;\n};\n\n\n/**\n * Gets the total for the transaction.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @return {Double} the total\n */\nMarginInterestTransaction.prototype.getTotal = function() {\n  return this.total;\n};\nElement.add(MarginInterestTransaction, {name: \"TOTAL\", order: 40, attributeType: Number, readMethod: \"getTotal\", writeMethod: \"setTotal\"});\n\n\n/**\n * Sets the total for the transaction.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @param {Double} total the total\n */\nMarginInterestTransaction.prototype.setTotal = function(total) {\n  this.total = total;\n};\n\n\n/**\n * Gets the currency code for the transaction. Only one of currency code or original currency\n * info should be set according to the OFX spec. If neither are set, means the default currency.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {String} the currency code for the transaction.\n */\nMarginInterestTransaction.prototype.getCurrencyCode = function() {\n  return this.currencyCode;\n};\nElement.add(MarginInterestTransaction, {name: \"CURRENCY\", order: 110, attributeType: String, readMethod: \"getCurrencyCode\", writeMethod: \"setCurrencyCode\"});\n\n\n/**\n * Sets the currency code for the transaction. Only one of currency code or original currency\n * info should be set according to the OFX spec. If neither are set, means the default currency.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {String} currencyCode the currency code for the transaction.\n */\nMarginInterestTransaction.prototype.setCurrencyCode = function(currencyCode) {\n  this.currencyCode = currencyCode;\n  this.originalCurrencyInfo = null;\n};\n\n\n/**\n * Gets the original currency info for the transaction.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {OriginalCurrency} the original currency info for the transaction.\n */\nMarginInterestTransaction.prototype.getOriginalCurrencyInfo = function() {\n  return this.originalCurrencyInfo;\n};\nElement.add(MarginInterestTransaction, {name: \"ORIGCURRENCY\", order: 120, attributeType: OriginalCurrency, readMethod: \"getOriginalCurrencyInfo\", writeMethod: \"setOriginalCurrencyInfo\"});\n\n\n/**\n * Sets the original currency info for the transaction.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {OriginalCurrency} originalCurrency the original currency info for the transaction.\n */\nMarginInterestTransaction.prototype.SetOriginalCurrency = function(originalCurrency) {\n  this.originalCurrencyInfo = originalCurrency;\n  this.currencyCode = null;\n};\n\n\n\n\nmodule.exports = MarginInterestTransaction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * Type of purchase for options.\n * See \"Section 13.9.2.4.2, OFX Spec\"\n *\n * @enum\n */\nvar OptionBuyType = {\n  BUY_TO_OPEN: \"BUYTOOPEN\",\n  BUY_TO_CLOSE: \"BUYTOCLOSE\",\n\n  fromOfx: function(/*String*/ ofxVal) {\n    if (\"BUYTOOPEN\" === ofxVal) {\n      return OptionBuyType.BUY_TO_OPEN;\n    } else if (\"BUYTOCLOSE\" === ofxVal) {\n      return OptionBuyType.BUY_TO_CLOSE;\n    } else {\n      return null;\n    }\n  }\n};\n\n\nmodule.exports = OptionBuyType;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * Type of sale for options.\n * See \"Section 13.9.2.4.2, OFX Spec\"\n *\n * @enum\n */\nvar OptionSellType = {\n  SELL_TO_CLOSE: \"SELLTOOPEN\",\n  SELL_TO_OPEN: \"SELLTOCLOSE\",\n\n  fromOfx: function(/*String*/ ofxVal) {\n    if (\"SELLTOOPEN\" === ofxVal) {\n      return OptionSellType.SELL_TO_OPEN;\n    } else if (\"SELLTOCLOSE\" === ofxVal) {\n      return OptionSellType.SELL_TO_CLOSE;\n    } else {\n      return null;\n    }\n  }\n};\n\n\nmodule.exports = OptionSellType;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar Element = require(\"../../../../meta/Element\");\n\n/**\n * Original currency aggregate (\"ORIGCURRENCY\"). For investment transactions in other currencies,\n * the financial institution can report the transaction as converted into the default currency\n * and then include this child aggregate to report what the original currency was and what the\n * rate of conversion was.\n * See \"Section 5.2, OFX Spec\"\n *\n * @class\n */\nfunction OriginalCurrency () {\n\n  /**\n   * @name OriginalCurrency#currencyRate\n   * @type double\n   * @access private\n   */\n  this.currencyRate = null;\n\n  /**\n   * @name OriginalCurrency#currencyCode\n   * @type String\n   * @access private\n   */\n  this.currencyCode = null;\n}\n\n\n\nAggregate.add(\"ORIGCURRENCY\", OriginalCurrency);\n\n\n/**\n * Gets the rate of currency conversion. This is the ratio of \"CURDEF\" (the default currency in\n * the transaction response) to \"CURSYM\" (the original currency code below).\n *\n * @return {double} the currency rate\n */\nOriginalCurrency.prototype.getCurrencyRate = function() {\n  return this.currencyRate;\n};\nElement.add(OriginalCurrency, {name: \"CURRATE\", required: true, order: 10, attributeType: Number, readMethod: \"getCurrencyRate\", writeMethod: \"setCurrencyRate\"});\n\n\n/**\n * Sets the rate of currency conversion. This is the ratio of \"CURDEF\" (the default currency in\n * the transaction response) to \"CURSYM\" (the original currency code below).\n *\n * @param {double} currencyRate the currency rate\n */\nOriginalCurrency.prototype.setCurrencyRate = function(currencyRate) {\n  this.currencyRate = currencyRate;\n};\n\n\n/**\n * Gets the ISO-4217 3-letter currency identifier of the original currency.\n * @see java.util.Currency#getCurrencyCode()\n *\n * @return {String} the currency code\n */\nOriginalCurrency.prototype.getCurrencyCode = function() {\n  return this.currencyCode;\n};\nElement.add(OriginalCurrency, {name: \"CURSYM\", required: true, order: 20, attributeType: String, readMethod: \"getCurrencyCode\", writeMethod: \"setCurrencyCode\"});\n\n\n/**\n * Sets the ISO-4217 3-letter currency identifier of the original currency.\n * @see java.util.Currency#getCurrencyCode()\n *\n * @param {String} currencyCode the currency code\n */\nOriginalCurrency.prototype.setCurrencyCode = function(currencyCode) {\n  this.currencyCode = currencyCode;\n};\n\n\n\n\nmodule.exports = OriginalCurrency;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar SubAccountType = require(\"../accounts/SubAccountType\");\nvar Inv401KSource = require(\"../positions/Inv401KSource\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../../meta/ChildAggregate\");\nvar Element = require(\"../../../../meta/Element\");\nvar BaseOtherInvestmentTransaction = require(\"./BaseOtherInvestmentTransaction\");\nvar TransactionType = require(\"./TransactionType\");\nvar TransactionWithSecurity = require(\"./TransactionWithSecurity\");\nvar IncomeType = require(\"./IncomeType\");\nvar OriginalCurrency = require(\"./OriginalCurrency\");\nvar SecurityId = require(\"../../seclist/SecurityId\");\n\n/**\n * Transaction for reinvestment transactions.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @class\n * @augments BaseOtherInvestmentTransaction\n * @augments TransactionWithSecurity\n */\nfunction ReinvestIncomeTransaction () {\n  BaseOtherInvestmentTransaction.call(this, TransactionType.REINVEST_INCOME);\n\n  /**\n   * @name ReinvestIncomeTransaction#securityId\n   * @type SecurityId\n   * @access private\n   */\n  this.securityId = null;\n\n  /**\n   * @name ReinvestIncomeTransaction#incomeType\n   * @type String\n   * @access private\n   */\n  this.incomeType = null;\n\n  /**\n   * @name ReinvestIncomeTransaction#total\n   * @type Double\n   * @access private\n   */\n  this.total = null;\n\n  /**\n   * @name ReinvestIncomeTransaction#subAccountSecurity\n   * @type String\n   * @access private\n   */\n  this.subAccountSecurity = null;\n\n  /**\n   * @name ReinvestIncomeTransaction#units\n   * @type Double\n   * @access private\n   */\n  this.units = null;\n\n  /**\n   * @name ReinvestIncomeTransaction#unitPrice\n   * @type Double\n   * @access private\n   */\n  this.unitPrice = null;\n\n  /**\n   * @name ReinvestIncomeTransaction#commission\n   * @type Double\n   * @access private\n   */\n  this.commission = null;\n\n  /**\n   * @name ReinvestIncomeTransaction#taxes\n   * @type Double\n   * @access private\n   */\n  this.taxes = null;\n\n  /**\n   * @name ReinvestIncomeTransaction#fees\n   * @type Double\n   * @access private\n   */\n  this.fees = null;\n\n  /**\n   * @name ReinvestIncomeTransaction#load\n   * @type Double\n   * @access private\n   */\n  this.load = null;\n\n  /**\n   * @name ReinvestIncomeTransaction#taxExempt\n   * @type Boolean\n   * @access private\n   */\n  this.taxExempt = null;\n\n  /**\n   * @name ReinvestIncomeTransaction#currencyCode\n   * @type String\n   * @access private\n   */\n  this.currencyCode = null;\n\n  /**\n   * @name ReinvestIncomeTransaction#originalCurrencyInfo\n   * @type OriginalCurrency\n   * @access private\n   */\n  this.originalCurrencyInfo = null;\n\n  /**\n   * @name ReinvestIncomeTransaction#inv401kSource\n   * @type String\n   * @access private\n   */\n  this.inv401kSource = null;\n}\n\ninherit(ReinvestIncomeTransaction, \"extends\", BaseOtherInvestmentTransaction);\ninherit(ReinvestIncomeTransaction, \"implements\", TransactionWithSecurity);\n\n\nAggregate.add(\"REINVEST\", ReinvestIncomeTransaction);\n\n\n/**\n * Gets the id of the security that was reinvested in. This is a required field according to the\n * OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {SecurityId} the security id of the security that was reinvested in\n */\nReinvestIncomeTransaction.prototype.getSecurityId = function() {\n  return this.securityId;\n};\nChildAggregate.add(ReinvestIncomeTransaction, {required: true, order: 20, attributeType: SecurityId, readMethod: \"getSecurityId\", writeMethod: \"setSecurityId\"});\n\n\n/**\n * Sets the id of the security that was reinvested in. This is a required field according to the\n * OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {SecurityId} securityId the security id of the security that was reinvested in\n */\nReinvestIncomeTransaction.prototype.setSecurityId = function(securityId) {\n  this.securityId = securityId;\n};\n\n\n/**\n * Gets the type of income. One of \"CGLONG\" (long term capital gains), \"CGSHORT\" (short term\n * capital gains), \"DIV\" (dividend), INTEREST, or MISC. This is a required field according to the\n * OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\" This is a required field according to the OFX spec.\n *\n * @return {String} the type of income\n */\nReinvestIncomeTransaction.prototype.getIncomeType = function() {\n  return this.incomeType;\n};\nElement.add(ReinvestIncomeTransaction, {name: \"INCOMETYPE\", required: true, order: 30, attributeType: String, readMethod: \"getIncomeType\", writeMethod: \"setIncomeType\"});\n\n\n/**\n * Sets the type of income. One of \"CGLONG\" (long term capital gains), \"CGSHORT\" (short term\n * capital gains), \"DIV\" (dividend), INTEREST, or MISC. This is a required field according to the\n * OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\" This is a required field according to the OFX spec.\n *\n * @param {String} incomeType the type of income\n */\nReinvestIncomeTransaction.prototype.setIncomeType = function(incomeType) {\n  this.incomeType = incomeType;\n};\n\n\n/**\n * Gets the type of income as one of the well-known types.\n *\n * @return {IncomeType} the income type or null if it's not one of the well-known types\n */\nReinvestIncomeTransaction.prototype.getIncomeTypeEnum = function() {\n  return IncomeType.fromOfx(this.getIncomeType());\n};\n\n\n/**\n * Gets the total income received. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @return {Double} the total\n */\nReinvestIncomeTransaction.prototype.getTotal = function() {\n  return this.total;\n};\nElement.add(ReinvestIncomeTransaction, {name: \"TOTAL\", required: true, order: 40, attributeType: Number, readMethod: \"getTotal\", writeMethod: \"setTotal\"});\n\n\n/**\n * Sets the total income received. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @param {Double} total the total\n */\nReinvestIncomeTransaction.prototype.setTotal = function(total) {\n  this.total = total;\n};\n\n\n/**\n * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER). This is a\n * required field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {String} the sub account type\n */\nReinvestIncomeTransaction.prototype.getSubAccountSecurity = function() {\n  return this.subAccountSecurity;\n};\nElement.add(ReinvestIncomeTransaction, {name: \"SUBACCTSEC\", order: 50, attributeType: String, readMethod: \"getSubAccountSecurity\", writeMethod: \"setSubAccountSecurity\"});\n\n\n/**\n * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER). This is a\n * required field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {String} subAccountSecurity the sub account type\n */\nReinvestIncomeTransaction.prototype.setSubAccountSecurity = function(subAccountSecurity) {\n  this.subAccountSecurity = subAccountSecurity;\n};\n\n\n/**\n * Gets the result of getSubAccountSecurity as one of the well-known types.\n *\n * @return {SubAccountType} the type of null if it wasn't one of the well known types\n */\nReinvestIncomeTransaction.prototype.getSubAccountSecurityEnum = function() {\n  return SubAccountType.fromOfx(this.getSubAccountSecurity());\n};\n\n\n/**\n * Gets the number of units of the security that was reinvested in. This is a required field\n * according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the number of units purchased\n */\nReinvestIncomeTransaction.prototype.getUnits = function() {\n  return this.units;\n};\nElement.add(ReinvestIncomeTransaction, {name: \"UNITS\", required: true, order: 60, attributeType: Number, readMethod: \"getUnits\", writeMethod: \"setUnits\"});\n\n\n/**\n * Sets the number of units of the security that was reinvested in. This is a required field\n * according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {Double} units the number of units purchased\n */\nReinvestIncomeTransaction.prototype.setUnits = function(units) {\n  this.units = units;\n};\n\n\n/**\n * Gets the price per commonly-quoted unit. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the per unit price\n */\nReinvestIncomeTransaction.prototype.getUnitPrice = function() {\n  return this.unitPrice;\n};\nElement.add(ReinvestIncomeTransaction, {name: \"UNITPRICE\", required: true, order: 70, attributeType: Number, readMethod: \"getUnitPrice\", writeMethod: \"setUnitPrice\"});\n\n\n/**\n * Sets the price per commonly-quoted unit. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {Double} unitPrice the per unit price\n */\nReinvestIncomeTransaction.prototype.setUnitPrice = function(unitPrice) {\n  this.unitPrice = unitPrice;\n};\n\n\n/**\n * Gets the transaction commission for the reinvestment. This is an optional field according to\n * the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the transaction commision\n */\nReinvestIncomeTransaction.prototype.getCommission = function() {\n  return this.commission;\n};\nElement.add(ReinvestIncomeTransaction, {name: \"COMMISSION\", order: 80, attributeType: Number, readMethod: \"getCommission\", writeMethod: \"setCommission\"});\n\n\n/**\n * Sets the transaction commission for the reinvestment. This is an optional field according to\n * the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {Double} commission the transaction commision\n */\nReinvestIncomeTransaction.prototype.setCommission = function(commission) {\n  this.commission = commission;\n};\n\n\n/**\n * Gets the taxes for the reinvestment. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the transaction taxes\n */\nReinvestIncomeTransaction.prototype.getTaxes = function() {\n  return this.taxes;\n};\nElement.add(ReinvestIncomeTransaction, {name: \"TAXES\", order: 90, attributeType: Number, readMethod: \"getTaxes\", writeMethod: \"setTaxes\"});\n\n\n/**\n * Sets the taxes for the reinvestment. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {Double} taxes the transaction taxes\n */\nReinvestIncomeTransaction.prototype.setTaxes = function(taxes) {\n  this.taxes = taxes;\n};\n\n\n/**\n * Gets the fees for the reinvestment. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the transaction fees\n */\nReinvestIncomeTransaction.prototype.getFees = function() {\n  return this.fees;\n};\nElement.add(ReinvestIncomeTransaction, {name: \"FEES\", order: 100, attributeType: Number, readMethod: \"getFees\", writeMethod: \"setFees\"});\n\n\n/**\n * Sets the fees for the reinvestment. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {Double} fees the transaction fees\n */\nReinvestIncomeTransaction.prototype.setFees = function(fees) {\n  this.fees = fees;\n};\n\n\n/**\n * Gets the load for the reinvestment. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the load\n */\nReinvestIncomeTransaction.prototype.getLoad = function() {\n  return this.load;\n};\nElement.add(ReinvestIncomeTransaction, {name: \"LOAD\", order: 110, attributeType: Number, readMethod: \"getLoad\", writeMethod: \"setLoad\"});\n\n\n/**\n * Sets the load for the reinvestment. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {Double} load the load\n */\nReinvestIncomeTransaction.prototype.setLoad = function(load) {\n  this.load = load;\n};\n\n\n/**\n * Gets whether the income was tax exempt. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Boolean} whether the transaction was tax exempt\n */\nReinvestIncomeTransaction.prototype.getTaxExempt = function() {\n  return this.taxExempt;\n};\nElement.add(ReinvestIncomeTransaction, {name: \"TAXEXEMPT\", order: 120, attributeType: Boolean, readMethod: \"getTaxExempt\", writeMethod: \"setTaxExempt\"});\n\n\n/**\n * Sets whether the income was tax exempt. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {Boolean} taxExempt whether the transaction was tax exempt\n */\nReinvestIncomeTransaction.prototype.setTaxExempt = function(taxExempt) {\n  this.taxExempt = taxExempt;\n};\n\n\n/**\n * Gets the currency code for the transaction. Only one of currency code or original currency\n * info should be set according to the OFX spec. If neither are set, means the default currency.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {String} the currency code for the transaction\n */\nReinvestIncomeTransaction.prototype.getCurrencyCode = function() {\n  return this.currencyCode;\n};\nElement.add(ReinvestIncomeTransaction, {name: \"CURRENCY\", order: 130, attributeType: String, readMethod: \"getCurrencyCode\", writeMethod: \"setCurrencyCode\"});\n\n\n/**\n * Sets the currency code for the transaction. Only one of currency code or original currency\n * info should be set according to the OFX spec. If neither are set, means the default currency.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {String} currencyCode the currency code for the transaction\n */\nReinvestIncomeTransaction.prototype.setCurrencyCode = function(currencyCode) {\n  this.currencyCode = currencyCode;\n  this.originalCurrencyInfo = null;\n};\n\n\n/**\n * Gets the original currency info for the transaction.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {OriginalCurrency} the original currency info for the transaction.\n */\nReinvestIncomeTransaction.prototype.getOriginalCurrencyInfo = function() {\n  return this.originalCurrencyInfo;\n};\nElement.add(ReinvestIncomeTransaction, {name: \"ORIGCURRENCY\", order: 140, attributeType: OriginalCurrency, readMethod: \"getOriginalCurrencyInfo\", writeMethod: \"setOriginalCurrencyInfo\"});\n\n\n/**\n * Sets the original currency info for the transaction.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {OriginalCurrency} originalCurrencyInfo the original currency info for the transaction.\n */\nReinvestIncomeTransaction.prototype.setOriginalCurrencyInfo = function(originalCurrencyInfo) {\n  this.originalCurrencyInfo = originalCurrencyInfo;\n  this.currencyCode = null;\n};\n\n\n/**\n * Gets the 401K source for the reinvestment. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n * according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {String} the state withholding\n */\nReinvestIncomeTransaction.prototype.get401kSource = function() {\n  return this.inv401kSource;\n};\nElement.add(ReinvestIncomeTransaction, {name: \"INV401KSOURCE\", order: 150, attributeType: String, readMethod: \"get401kSource\", writeMethod: \"set401kSource\"});\n\n\n/**\n * Sets the 401K source for the reinvestment. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n * according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {String} inv401kSource the state withholding\n */\nReinvestIncomeTransaction.prototype.set401kSource = function(inv401kSource) {\n  this.inv401kSource = inv401kSource;\n};\n\n\n/**\n * Gets the 401(k) source as one of the well-known types.\n *\n * @return {Inv401KSource} the type of close or null if it's not well known\n */\nReinvestIncomeTransaction.prototype.get401kSourceEnum = function() {\n  return Inv401KSource.fromOfx(this.get401kSource());\n};\n\n\n\n\nmodule.exports = ReinvestIncomeTransaction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\"use strict\";\n\n/**\n * Related option transaction type.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @enum\n */\nvar RelatedOptionType = {\n  SPREAD: \"SPREAD\",\n  STRADDLE: \"STRADDLE\",\n  NONE: \"NONE\",\n  OTHER: \"OTHER\",\n\n  fromOfx: function(/*String*/ ofxVal) {\n    if (\"SPREAD\" === ofxVal) {\n      return RelatedOptionType.SPREAD;\n    } else if (\"STRADDLE\" === ofxVal) {\n      return RelatedOptionType.STRADDLE;\n    } else if (\"NONE\" === ofxVal) {\n      return RelatedOptionType.NONE;\n    } else if (\"OTHER\" === ofxVal) {\n      return RelatedOptionType.OTHER;\n    } else {\n      return null;\n    }\n  }\n};\n\n\nmodule.exports = RelatedOptionType;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar SubAccountType = require(\"../accounts/SubAccountType\");\nvar Inv401KSource = require(\"../positions/Inv401KSource\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../../meta/ChildAggregate\");\nvar Element = require(\"../../../../meta/Element\");\nvar SecurityId = require(\"../../seclist/SecurityId\");\nvar BaseOtherInvestmentTransaction = require(\"./BaseOtherInvestmentTransaction\");\nvar TransactionWithSecurity = require(\"./TransactionWithSecurity\");\nvar TransactionType = require(\"./TransactionType\");\nvar OriginalCurrency = require(\"./OriginalCurrency\");\n\n/**\n * Transaction for return of capital transactions.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @class\n * @augments BaseOtherInvestmentTransaction\n * @augments TransactionWithSecurity\n */\nfunction ReturnOfCapitalTransaction () {\n  BaseOtherInvestmentTransaction.call(this, TransactionType.RETURN_OF_CAPITAL);\n\n  /**\n   * @name ReturnOfCapitalTransaction#securityId\n   * @type SecurityId\n   * @access private\n   */\n  this.securityId = null;\n\n  /**\n   * @name ReturnOfCapitalTransaction#total\n   * @type Double\n   * @access private\n   */\n  this.total = null;\n\n  /**\n   * @name ReturnOfCapitalTransaction#subAccountSecurity\n   * @type String\n   * @access private\n   */\n  this.subAccountSecurity = null;\n\n  /**\n   * @name ReturnOfCapitalTransaction#subAccountFund\n   * @type String\n   * @access private\n   */\n  this.subAccountFund = null;\n\n  /**\n   * @name ReturnOfCapitalTransaction#currencyCode\n   * @type String\n   * @access private\n   */\n  this.currencyCode = null;\n\n  /**\n   * @name ReturnOfCapitalTransaction#originalCurrencyInfo\n   * @type OriginalCurrency\n   * @access private\n   */\n  this.originalCurrencyInfo = null;\n\n  /**\n   * @name ReturnOfCapitalTransaction#inv401kSource\n   * @type String\n   * @access private\n   */\n  this.inv401kSource = null;\n}\n\ninherit(ReturnOfCapitalTransaction, \"extends\", BaseOtherInvestmentTransaction);\ninherit(ReturnOfCapitalTransaction, \"implements\", TransactionWithSecurity);\n\n\nAggregate.add(\"RETOFCAP\", ReturnOfCapitalTransaction);\n\n\n/**\n * Gets the id of the security that capital was returned from. This is a required field according\n * to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {SecurityId} the security id of the security that capital was returned from\n */\nReturnOfCapitalTransaction.prototype.getSecurityId = function() {\n  return this.securityId;\n};\nChildAggregate.add(ReturnOfCapitalTransaction, {required: true, order: 20, attributeType: SecurityId, readMethod: \"getSecurityId\", writeMethod: \"setSecurityId\"});\n\n\n/**\n * Sets the id of the security that capital was returned from. This is a required field according\n * to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {SecurityId} securityId the security id of the security that capital was returned from\n */\nReturnOfCapitalTransaction.prototype.setSecurityId = function(securityId) {\n  this.securityId = securityId;\n};\n\n\n/**\n * Gets the total amount of capital returned. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @return {Double} the total\n */\nReturnOfCapitalTransaction.prototype.getTotal = function() {\n  return this.total;\n};\nElement.add(ReturnOfCapitalTransaction, {name: \"TOTAL\", required: true, order: 40, attributeType: Number, readMethod: \"getTotal\", writeMethod: \"setTotal\"});\n\n\n/**\n * Sets the total amount of capital returned. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @param {Double} total the total\n */\nReturnOfCapitalTransaction.prototype.setTotal = function(total) {\n  this.total = total;\n};\n\n\n/**\n * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER). This is a\n * required field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {String} the sub account type\n */\nReturnOfCapitalTransaction.prototype.getSubAccountSecurity = function() {\n  return this.subAccountSecurity;\n};\nElement.add(ReturnOfCapitalTransaction, {name: \"SUBACCTSEC\", order: 50, attributeType: String, readMethod: \"getSubAccountSecurity\", writeMethod: \"setSubAccountSecurity\"});\n\n\n/**\n * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER). This is a\n * required field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {String} subAccountSecurity the sub account type\n */\nReturnOfCapitalTransaction.prototype.setSubAccountSecurity = function(subAccountSecurity) {\n  this.subAccountSecurity = subAccountSecurity;\n};\n\n\n/**\n * Gets the result of getSubAccountSecurity as one of the well-known types.\n *\n * @return {SubAccountType} the type of null if it wasn't one of the well known types.\n */\nReturnOfCapitalTransaction.prototype.getSubAccountSecurityEnum = function() {\n  return SubAccountType.fromOfx(this.getSubAccountSecurity());\n};\n\n\n/**\n * Gets the sub account type that the transaction affects.\n * (e.g. CASH, MARGIN, SHORT, OTHER). This is a required field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {String} the sub account fund\n */\nReturnOfCapitalTransaction.prototype.getSubAccountFund = function() {\n  return this.subAccountFund;\n};\nElement.add(ReturnOfCapitalTransaction, {name: \"SUBACCTFUND\", order: 140, attributeType: String, readMethod: \"getSubAccountFund\", writeMethod: \"setSubAccountFund\"});\n\n\n/**\n * Sets the sub account type that the transaction affects.\n * (e.g. CASH, MARGIN, SHORT, OTHER). This is a required field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {String} subAccountFund the sub account fund\n */\nReturnOfCapitalTransaction.prototype.setSubAccountFund = function(subAccountFund) {\n  this.subAccountFund = subAccountFund;\n};\n\n\n/**\n * Gets the result of getSubAccountFund as one of the well-known types.\n *\n * @return {SubAccountType} the type of null if it wasn't one of the well known types\n */\nReturnOfCapitalTransaction.prototype.getSubAccountFundEnum = function() {\n  return SubAccountType.fromOfx(this.getSubAccountFund());\n};\n\n\n/**\n * Gets the currency code for the transaction. Only one of currency code or original currency\n * info should be set according to the OFX spec. If neither are set, means the default currency.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {String} the currency code for the transaction\n */\nReturnOfCapitalTransaction.prototype.getCurrencyCode = function() {\n  return this.currencyCode;\n};\nElement.add(ReturnOfCapitalTransaction, {name: \"CURRENCY\", order: 110, attributeType: String, readMethod: \"getCurrencyCode\", writeMethod: \"setCurrencyCode\"});\n\n\n/**\n * Sets the currency code for the transaction. Only one of currency code or original currency\n * info should be set according to the OFX spec. If neither are set, means the default currency.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {String} currencyCode the currency code for the transaction\n */\nReturnOfCapitalTransaction.prototype.setCurrencyCode = function(currencyCode) {\n  this.currencyCode = currencyCode;\n  this.originalCurrencyInfo = null;\n};\n\n\n/**\n * Gets the original currency info for the transaction.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {OriginalCurrency} the currency code for the transaction.\n */\nReturnOfCapitalTransaction.prototype.getOriginalCurrencyInfo = function() {\n  return this.originalCurrencyInfo;\n};\nElement.add(ReturnOfCapitalTransaction, {name: \"ORIGCURRENCY\", order: 120, attributeType: OriginalCurrency, readMethod: \"getOriginalCurrencyInfo\", writeMethod: \"setOriginalCurrencyInfo\"});\n\n\n/**\n * Sets the original currency info for the transaction.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {OriginalCurrency} originalCurrencyInfo the currency code for the transaction.\n */\nReturnOfCapitalTransaction.prototype.setOriginalCurrencyInfo = function(originalCurrencyInfo) {\n  this.originalCurrencyInfo = originalCurrencyInfo;\n  this.currencyCode = null;\n};\n\n\n/**\n * Gets the 401K source for the reinvestment. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n * according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {String} the state withholding\n */\nReturnOfCapitalTransaction.prototype.get401kSource = function() {\n  return this.inv401kSource;\n};\nElement.add(ReturnOfCapitalTransaction, {name: \"INV401KSOURCE\", order: 180, attributeType: String, readMethod: \"get401kSource\", writeMethod: \"set401kSource\"});\n\n\n/**\n * Sets the 401K source for the reinvestment. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n * according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {String} inv401kSource the state withholding\n */\nReturnOfCapitalTransaction.prototype.set401kSource = function(inv401kSource) {\n  this.inv401kSource = inv401kSource;\n};\n\n\n/**\n * Gets the 401(k) source as one of the well-known types.\n *\n * @return {Inv401KSource} the type of close or null if it's not well known.\n */\nReturnOfCapitalTransaction.prototype.get401kSourceEnum = function() {\n  return Inv401KSource.fromOfx(this.get401kSource());\n};\n\n\n\n\nmodule.exports = ReturnOfCapitalTransaction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * Reason debt was sold.\n * See \"Section 13.9.2.4.2, OFX Spec\"\n *\n * @enum\n */\nvar SellDebtReason = {\n  CALL: \"CALL\",\n  SELL: \"SELL\",\n  MATURITY: \"MATURITY\",\n\n  fromOfx: function(/*String*/ ofxVal) {\n    if (\"CALL\" === ofxVal) {\n      return SellDebtReason.CALL;\n    } else if (\"SELL\" === ofxVal) {\n      return SellDebtReason.SELL;\n    } else if (\"MATURITY\" === ofxVal) {\n      return SellDebtReason.MATURITY;\n    } else {\n      return null;\n    }\n  }\n};\n\n\nmodule.exports = SellDebtReason;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar Element = require(\"../../../../meta/Element\");\nvar BaseSellInvestmentTransaction = require(\"./BaseSellInvestmentTransaction\");\nvar TransactionType = require(\"./TransactionType\");\nvar SellDebtReason = require(\"./SellDebtReason\");\n\n/**\n * Transaction for selling debt (i.e. bonds, CDs, etc.,).\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @class\n * @augments BaseSellInvestmentTransaction\n */\nfunction SellDebtTransaction () {\n  BaseSellInvestmentTransaction.call(this, TransactionType.SELL_DEBT);\n\n  /**\n   * @name SellDebtTransaction#sellReason\n   * @type String\n   * @access private\n   */\n  this.sellReason = null;\n\n  /**\n   * @name SellDebtTransaction#accruedInterest\n   * @type Double\n   * @access private\n   */\n  this.accruedInterest = null;\n}\n\ninherit(SellDebtTransaction, \"extends\", BaseSellInvestmentTransaction);\n\n\nAggregate.add(\"SELLDEBT\", SellDebtTransaction);\n\n\n/**\n * Gets the reason for the sale. One of \"CALL\" (the debt was called), \"SELL\" (the debt was sold),\n * \"MATURITY\" (the debt reached maturity).\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @return {String} The reason for the sale\n */\nSellDebtTransaction.prototype.getSellReason = function() {\n  return this.sellReason;\n};\nElement.add(SellDebtTransaction, {name: \"SELLREASON\", order: 30, attributeType: String, readMethod: \"getSellReason\", writeMethod: \"setSellReason\"});\n\n\n/**\n * Sets the reason for the sale. One of \"CALL\" (the debt was called), \"SELL\" (the debt was sold),\n * \"MATURITY\" (the debt reached maturity).\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @param {String} sellReason The reason for the sale\n */\nSellDebtTransaction.prototype.setSellReason = function(sellReason) {\n  this.sellReason = sellReason;\n};\n\n\n/**\n * Gets the sell reason as one of the well-known types.\n *\n * @return {SellDebtReason} the sell reason or null if it's not well known\n */\nSellDebtTransaction.prototype.getSellReasonEnum = function() {\n  return SellDebtReason.fromOfx(this.getSellReason());\n};\n\n\n/**\n * Gets the amount of accrued interest on the debt. This is an optional field according to the\n * OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @return {Double} the amount of accrued interest\n */\nSellDebtTransaction.prototype.getAccruedInterest = function() {\n  return this.accruedInterest;\n};\nElement.add(SellDebtTransaction, {name: \"ACCRDINT\", order: 40, attributeType: Number, readMethod: \"getAccruedInterest\", writeMethod: \"setAccruedInterest\"});\n\n\n/**\n * Sets the amount of accrued interest on the debt. This is an optional field according to the\n * OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @param {Double} accruedInterest the amount of accrued interest\n */\nSellDebtTransaction.prototype.setAccruedInterest = function(accruedInterest) {\n  this.accruedInterest = accruedInterest;\n};\n\n\n\n\nmodule.exports = SellDebtTransaction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar SubAccountType = require(\"../accounts/SubAccountType\");\nvar Inv401KSource = require(\"../positions/Inv401KSource\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../../meta/ChildAggregate\");\nvar Element = require(\"../../../../meta/Element\");\nvar SecurityId = require(\"../../seclist/SecurityId\");\nvar OriginalCurrency = require(\"./OriginalCurrency\");\nvar InvestmentTransaction = require(\"./InvestmentTransaction\");\n\n/**\n * Sell investment transaction aggregate (\"INVSELL\").\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @class\n */\nfunction SellInvestmentTransaction () {\n\n  /**\n   * @name SellInvestmentTransaction#investmentTransaction\n   * @type InvestmentTransaction\n   * @access private\n   */\n  this.investmentTransaction = null;\n\n  /**\n   * @name SellInvestmentTransaction#securityId\n   * @type SecurityId\n   * @access private\n   */\n  this.securityId = null;\n\n  /**\n   * @name SellInvestmentTransaction#units\n   * @type Double\n   * @access private\n   */\n  this.units = null;\n\n  /**\n   * @name SellInvestmentTransaction#unitPrice\n   * @type Double\n   * @access private\n   */\n  this.unitPrice = null;\n\n  /**\n   * @name SellInvestmentTransaction#markdown\n   * @type Double\n   * @access private\n   */\n  this.markdown = null;\n\n  /**\n   * @name SellInvestmentTransaction#commission\n   * @type Double\n   * @access private\n   */\n  this.commission = null;\n\n  /**\n   * @name SellInvestmentTransaction#taxes\n   * @type Double\n   * @access private\n   */\n  this.taxes = null;\n\n  /**\n   * @name SellInvestmentTransaction#fees\n   * @type Double\n   * @access private\n   */\n  this.fees = null;\n\n  /**\n   * @name SellInvestmentTransaction#load\n   * @type Double\n   * @access private\n   */\n  this.load = null;\n\n  /**\n   * @name SellInvestmentTransaction#withholding\n   * @type Double\n   * @access private\n   */\n  this.withholding = null;\n\n  /**\n   * @name SellInvestmentTransaction#taxExempt\n   * @type Boolean\n   * @access private\n   */\n  this.taxExempt = null;\n\n  /**\n   * @name SellInvestmentTransaction#total\n   * @type Double\n   * @access private\n   */\n  this.total = null;\n\n  /**\n   * @name SellInvestmentTransaction#gain\n   * @type Double\n   * @access private\n   */\n  this.gain = null;\n\n  /**\n   * @name SellInvestmentTransaction#currencyCode\n   * @type String\n   * @access private\n   */\n  this.currencyCode = null;\n\n  /**\n   * @name SellInvestmentTransaction#originalCurrencyInfo\n   * @type OriginalCurrency\n   * @access private\n   */\n  this.originalCurrencyInfo = null;\n\n  /**\n   * @name SellInvestmentTransaction#subAccountSecurity\n   * @type String\n   * @access private\n   */\n  this.subAccountSecurity = null;\n\n  /**\n   * @name SellInvestmentTransaction#subAccountFund\n   * @type String\n   * @access private\n   */\n  this.subAccountFund = null;\n\n  /**\n   * @name SellInvestmentTransaction#loanId\n   * @type String\n   * @access private\n   */\n  this.loanId = null;\n\n  /**\n   * @name SellInvestmentTransaction#stateWithholding\n   * @type Double\n   * @access private\n   */\n  this.stateWithholding = null;\n\n  /**\n   * @name SellInvestmentTransaction#penalty\n   * @type Double\n   * @access private\n   */\n  this.penalty = null;\n\n  /**\n   * @name SellInvestmentTransaction#inv401kSource\n   * @type String\n   * @access private\n   */\n  this.inv401kSource = null;\n}\n\n\n\nAggregate.add(\"INVSELL\", SellInvestmentTransaction);\n\n\n/**\n * Gets the investment transaction child aggregate.\n *\n * @return {InvestmentTransaction} the investment transaction child aggregate\n */\nSellInvestmentTransaction.prototype.getInvestmentTransaction = function() {\n  return this.investmentTransaction;\n};\nChildAggregate.add(SellInvestmentTransaction, {order: 10, attributeType: InvestmentTransaction, readMethod: \"getInvestmentTransaction\", writeMethod: \"setInvestmentTransaction\"});\n\n\n/**\n * Sets the investment transaction child aggregate.\n *\n * @param {InvestmentTransaction} investmentTransaction the investment transaction child aggregate\n */\nSellInvestmentTransaction.prototype.setInvestmentTransaction = function(investmentTransaction) {\n  this.investmentTransaction = investmentTransaction;\n};\n\n\n/**\n * Gets the id of the security that was sold. This is a required field according to the OFX\n * spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {SecurityId} the security id of the security that was sold\n */\nSellInvestmentTransaction.prototype.getSecurityId = function() {\n  return this.securityId;\n};\nChildAggregate.add(SellInvestmentTransaction, {required: true, order: 20, attributeType: SecurityId, readMethod: \"getSecurityId\", writeMethod: \"setSecurityId\"});\n\n\n/**\n * Sets the id of the security that was sold. This is a required field according to the OFX\n * spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {SecurityId} securityId the security id of the security that was sold\n */\nSellInvestmentTransaction.prototype.setSecurityId = function(securityId) {\n  this.securityId = securityId;\n};\n\n\n/**\n * Gets the number of units of the security that was sold. For security-based actions other\n * than stock splits, this is the quantity sold. For stocks, mutual funds, and others, this\n * is the number of shares. For bonds, this is the face value. For options, this is the number of\n * contacts. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the number of units sold\n */\nSellInvestmentTransaction.prototype.getUnits = function() {\n  return this.units;\n};\nElement.add(SellInvestmentTransaction, {name: \"UNITS\", required: true, order: 30, attributeType: Number, readMethod: \"getUnits\", writeMethod: \"setUnits\"});\n\n\n/**\n * Sets the number of units of the security that was sold. For security-based actions other\n * than stock splits, this is the quantity sold. For stocks, mutual funds, and others, this\n * is the number of shares. For bonds, this is the face value. For options, this is the number of\n * contacts. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {Double} units the number of units sold\n */\nSellInvestmentTransaction.prototype.setUnits = function(units) {\n  this.units = units;\n};\n\n\n/**\n * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n * per contact) price. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the per unit price\n */\nSellInvestmentTransaction.prototype.getUnitPrice = function() {\n  return this.unitPrice;\n};\nElement.add(SellInvestmentTransaction, {name: \"UNITPRICE\", required: true, order: 40, attributeType: Number, readMethod: \"getUnitPrice\", writeMethod: \"setUnitPrice\"});\n\n\n/**\n * Sets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n * per contact) price. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {Double} unitPrice the per unit price\n */\nSellInvestmentTransaction.prototype.setUnitPrice = function(unitPrice) {\n  this.unitPrice = unitPrice;\n};\n\n\n/**\n * Gets the portion of the unit price that is attributed to the dealer markdown. This is an\n * optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the per unit markedown price\n */\nSellInvestmentTransaction.prototype.getMarkdown = function() {\n  return this.markdown;\n};\nElement.add(SellInvestmentTransaction, {name: \"MARKDOWN\", order: 50, attributeType: Number, readMethod: \"getMarkdown\", writeMethod: \"setMarkdown\"});\n\n\n/**\n * Sets the portion of the unit price that is attributed to the dealer markdown. This is an\n * optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {Double} markdown the per unit markedown price\n */\nSellInvestmentTransaction.prototype.setMarkdown = function(markdown) {\n  this.markdown = markdown;\n};\n\n\n/**\n * Gets the transaction commission for the sale. This is an optional field according to the\n * OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the transaction commision\n */\nSellInvestmentTransaction.prototype.getCommission = function() {\n  return this.commission;\n};\nElement.add(SellInvestmentTransaction, {name: \"COMMISSION\", order: 60, attributeType: Number, readMethod: \"getCommission\", writeMethod: \"setCommission\"});\n\n\n/**\n * Sets the transaction commission for the sale. This is an optional field according to the\n * OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {Double} commission the transaction commision\n */\nSellInvestmentTransaction.prototype.setCommission = function(commission) {\n  this.commission = commission;\n};\n\n\n/**\n * Gets the taxes for the sale. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the transaction taxes\n */\nSellInvestmentTransaction.prototype.getTaxes = function() {\n  return this.taxes;\n};\nElement.add(SellInvestmentTransaction, {name: \"TAXES\", order: 70, attributeType: Number, readMethod: \"getTaxes\", writeMethod: \"setTaxes\"});\n\n\n/**\n * Sets the taxes for the sale. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {Double} taxes the transaction taxes\n */\nSellInvestmentTransaction.prototype.setTaxes = function(taxes) {\n  this.taxes = taxes;\n};\n\n\n/**\n * Gets the fees for the sale. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the transaction fees\n */\nSellInvestmentTransaction.prototype.getFees = function() {\n  return this.fees;\n};\nElement.add(SellInvestmentTransaction, {name: \"FEES\", order: 80, attributeType: Number, readMethod: \"getFees\", writeMethod: \"setFees\"});\n\n\n/**\n * Sets the fees for the sale. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {Double} fees the transaction fees\n */\nSellInvestmentTransaction.prototype.setFees = function(fees) {\n  this.fees = fees;\n};\n\n\n/**\n * Gets the load for the sale. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the load\n */\nSellInvestmentTransaction.prototype.getLoad = function() {\n  return this.load;\n};\nElement.add(SellInvestmentTransaction, {name: \"LOAD\", order: 90, attributeType: Number, readMethod: \"getLoad\", writeMethod: \"setLoad\"});\n\n\n/**\n * Sets the load for the sale. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {Double} load the load\n */\nSellInvestmentTransaction.prototype.setLoad = function(load) {\n  this.load = load;\n};\n\n\n/**\n * Gets the withholding for the sale. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the withholding\n */\nSellInvestmentTransaction.prototype.getWithholding = function() {\n  return this.withholding;\n};\nElement.add(SellInvestmentTransaction, {name: \"WITHHOLDING\", order: 93, attributeType: Number, readMethod: \"getWithholding\", writeMethod: \"setWithholding\"});\n\n\n/**\n * Sets the withholding for the sale. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {Double} withholding the withholding\n */\nSellInvestmentTransaction.prototype.setWithholding = function(withholding) {\n  this.withholding = withholding;\n};\n\n\n/**\n * Gets whether the sale was tax exempt. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Boolean} whether the transaction was tax exempt\n */\nSellInvestmentTransaction.prototype.getTaxExempt = function() {\n  return this.taxExempt;\n};\nElement.add(SellInvestmentTransaction, {name: \"TAXEXEMPT\", order: 97, attributeType: Boolean, readMethod: \"getTaxExempt\", writeMethod: \"setTaxExempt\"});\n\n\n/**\n * Sets whether the sale was tax exempt. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {Boolean} taxExempt whether the transaction was tax exempt\n */\nSellInvestmentTransaction.prototype.setTaxExempt = function(taxExempt) {\n  this.taxExempt = taxExempt;\n};\n\n\n/**\n * Gets the total for the sale. Should be equal to\n * (units * (unitPrice + markdown)) + (commision + fees + load + taxes + penalty + withholding +\n * statewithholding) according to the OFX spec. This is a required field according to the OFX\n * spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the total\n */\nSellInvestmentTransaction.prototype.getTotal = function() {\n  return this.total;\n};\nElement.add(SellInvestmentTransaction, {name: \"TOTAL\", required: true, order: 100, attributeType: Number, readMethod: \"getTotal\", writeMethod: \"setTotal\"});\n\n\n/**\n * Sets the total for the sale. Should be equal to\n * (units * (unitPrice + markdown)) + (commision + fees + load + taxes + penalty + withholding +\n * statewithholding) according to the OFX spec. This is a required field according to the OFX\n * spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {Double} total the total\n */\nSellInvestmentTransaction.prototype.setTotal = function(total) {\n  this.total = total;\n};\n\n\n/**\n * Gets the gain sale. This is aan optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the gain for the sale\n */\nSellInvestmentTransaction.prototype.getGain = function() {\n  return this.gain;\n};\nElement.add(SellInvestmentTransaction, {name: \"GAIN\", order: 105, attributeType: Number, readMethod: \"getGain\", writeMethod: \"setGain\"});\n\n\n/**\n * Sets the gain sale. This is aan optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {Double} gain the gain for the sale\n */\nSellInvestmentTransaction.prototype.setGain = function(gain) {\n  this.gain = gain;\n};\n\n\n/**\n * Gets the currency code for the transaction. Only one of currency code or original currency\n * code should be set according to the OFX spec. If neither are set, means the default currency.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {String} the currency code for the transaction\n */\nSellInvestmentTransaction.prototype.getCurrencyCode = function() {\n  return this.currencyCode;\n};\nElement.add(SellInvestmentTransaction, {name: \"CURRENCY\", order: 110, attributeType: String, readMethod: \"getCurrencyCode\", writeMethod: \"setCurrencyCode\"});\n\n\n/**\n * sets the currency code for the transaction. Only one of currency code or original currency\n * code should be set according to the OFX spec. If neither are set, means the default currency.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {String} currencyCode the currency code for the transaction\n */\nSellInvestmentTransaction.prototype.setCurrencyCode = function(currencyCode) {\n  this.currencyCode = currencyCode;\n  this.originalCurrencyInfo = null;\n};\n\n\n/**\n * Gets the original currency info for the transaction.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {OriginalCurrency} the original currency info for the transaction\n */\nSellInvestmentTransaction.prototype.getOriginalCurrencyInfo = function() {\n  return this.originalCurrencyInfo;\n};\nElement.add(SellInvestmentTransaction, {name: \"ORIGCURRENCY\", order: 120, attributeType: OriginalCurrency, readMethod: \"getOriginalCurrencyInfo\", writeMethod: \"setOriginalCurrencyInfo\"});\n\n\n/**\n * Sets the original currency info for the transaction.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {OriginalCurrency} originalCurrencyInfo the original currency info for the transaction\n */\nSellInvestmentTransaction.prototype.setOriginalCurrencyInfo = function(originalCurrencyInfo) {\n  this.originalCurrencyInfo = originalCurrencyInfo;\n  this.currencyCode = null;\n};\n\n\n/**\n * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {String} the sub account type\n */\nSellInvestmentTransaction.prototype.getSubAccountSecurity = function() {\n  return this.subAccountSecurity;\n};\nElement.add(SellInvestmentTransaction, {name: \"SUBACCTSEC\", order: 130, attributeType: String, readMethod: \"getSubAccountSecurity\", writeMethod: \"setSubAccountSecurity\"});\n\n\n/**\n * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {String} subAccountSecurity the sub account type\n */\nSellInvestmentTransaction.prototype.setSubAccountSecurity = function(subAccountSecurity) {\n  this.subAccountSecurity = subAccountSecurity;\n};\n\n\n/**\n * Gets the result of getSubAccountSecurity as one of the well-known types.\n *\n * @return {SubAccountType} the type of null if it wasn't one of the well known types.\n */\nSellInvestmentTransaction.prototype.getSubAccountSecurityEnum = function() {\n  return SubAccountType.fromOfx(this.getSubAccountSecurity());\n};\n\n\n/**\n * Gets the sub account type that the security is being transfered from\n * (e.g. CASH, MARGIN, SHORT, OTHER).\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {String} the sub account fund\n */\nSellInvestmentTransaction.prototype.getSubAccountFund = function() {\n  return this.subAccountFund;\n};\nElement.add(SellInvestmentTransaction, {name: \"SUBACCTFUND\", order: 140, attributeType: String, readMethod: \"getSubAccountFund\", writeMethod: \"setSubAccountFund\"});\n\n\n/**\n * Sets the sub account type that the security is being transfered from\n * (e.g. CASH, MARGIN, SHORT, OTHER).\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {String} subAccountFund the sub account fund\n */\nSellInvestmentTransaction.prototype.setSubAccountFund = function(subAccountFund) {\n  this.subAccountFund = subAccountFund;\n};\n\n\n/**\n * Gets the result of getSubAccountFund as one of the well-known types.\n *\n * @return {SubAccountType} the type of null if it wasn't one of the well known types\n */\nSellInvestmentTransaction.prototype.getSubAccountFundEnum = function() {\n  return SubAccountType.fromOfx(this.getSubAccountFund());\n};\n\n\n/**\n * Gets the loan id if this transaction was due to a loan or loan repayment on a 401k. This is an\n * optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {String} the loan id\n */\nSellInvestmentTransaction.prototype.getLoanId = function() {\n  return this.loanId;\n};\nElement.add(SellInvestmentTransaction, {name: \"LOANID\", order: 150, attributeType: String, readMethod: \"getLoanId\", writeMethod: \"setLoanId\"});\n\n\n/**\n * Sets the loan id if this transaction was due to a loan or loan repayment on a 401k. This is an\n * optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {String} loanId the loan id\n */\nSellInvestmentTransaction.prototype.setLoanId = function(loanId) {\n  this.loanId = loanId;\n};\n\n\n/**\n * Gets the state withholding for the sale. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the state withholding\n */\nSellInvestmentTransaction.prototype.getStateWithholding = function() {\n  return this.stateWithholding;\n};\nElement.add(SellInvestmentTransaction, {name: \"STATEWITHHOLDING\", order: 160, attributeType: Number, readMethod: \"getStateWithholding\", writeMethod: \"setStateWithholding\"});\n\n\n/**\n * Sets the state withholding for the sale. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {Double} stateWithholding the state withholding\n */\nSellInvestmentTransaction.prototype.setStateWithholding = function(stateWithholding) {\n  this.stateWithholding = stateWithholding;\n};\n\n\n/**\n * Gets the penalty for the sale. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the state withholding\n */\nSellInvestmentTransaction.prototype.getPenalty = function() {\n  return this.penalty;\n};\nElement.add(SellInvestmentTransaction, {name: \"PENALTY\", order: 170, attributeType: Number, readMethod: \"getPenalty\", writeMethod: \"setPenalty\"});\n\n\n/**\n * Sets the penalty for the sale. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {Double} penalty the state withholding\n */\nSellInvestmentTransaction.prototype.setPenalty = function(penalty) {\n  this.penalty = penalty;\n};\n\n\n/**\n * Gets the 401K source for the sale. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n * according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {String} the 401k source\n */\nSellInvestmentTransaction.prototype.get401kSource = function() {\n  return this.inv401kSource;\n};\nElement.add(SellInvestmentTransaction, {name: \"INV401KSOURCE\", order: 180, attributeType: String, readMethod: \"get401kSource\", writeMethod: \"set401kSource\"});\n\n\n/**\n * Sets the 401K source for the sale. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n * according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {String} inv401kSource the 401k source\n */\nSellInvestmentTransaction.prototype.set401kSource = function(inv401kSource) {\n  this.inv401kSource = inv401kSource;\n};\n\n\n/**\n * Gets the 401k source as one of the well-known types.\n *\n * @return {Inv401KSource} the 401k source or null if its not one of the well-known types\n */\nSellInvestmentTransaction.prototype.get401kSourceEnum = function() {\n  return Inv401KSource.fromOfx(this.get401kSource());\n};\n\n\n\n\nmodule.exports = SellInvestmentTransaction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar Element = require(\"../../../../meta/Element\");\nvar BaseSellInvestmentTransaction = require(\"./BaseSellInvestmentTransaction\");\nvar TransactionType = require(\"./TransactionType\");\nvar SellType = require(\"./SellType\");\n\n/**\n * Transaction for selling mutual fund.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @class\n * @augments BaseSellInvestmentTransaction\n */\nfunction SellMutualFundTransaction () {\n  BaseSellInvestmentTransaction.call(this, TransactionType.SELL_MUTUAL_FUND);\n\n  /**\n   * @name SellMutualFundTransaction#sellType\n   * @type String\n   * @access private\n   */\n  this.sellType = null;\n\n  /**\n   * @name SellMutualFundTransaction#averageCostBasis\n   * @type Double\n   * @access private\n   */\n  this.averageCostBasis = null;\n\n  /**\n   * @name SellMutualFundTransaction#relatedTransactionId\n   * @type String\n   * @access private\n   */\n  this.relatedTransactionId = null;\n}\n\ninherit(SellMutualFundTransaction, \"extends\", BaseSellInvestmentTransaction);\n\n\nAggregate.add(\"SELLMF\", SellMutualFundTransaction);\n\n\n/**\n * Gets the type of sale. One of \"SELL\" or \"SELLSHORT\".\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @return {String} The type of sale\n */\nSellMutualFundTransaction.prototype.getSellType = function() {\n  return this.sellType;\n};\nElement.add(SellMutualFundTransaction, {name: \"SELLTYPE\", order: 20, attributeType: String, readMethod: \"getSellType\", writeMethod: \"setSellType\"});\n\n\n/**\n * Sets the type of sale. One of \"SELL\" or \"SELLSHORT\".\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @param {String} sellType The type of sale\n */\nSellMutualFundTransaction.prototype.setSellType = function(sellType) {\n  this.sellType = sellType;\n};\n\n\n/**\n * Gets the sell type as one of the well-known types.\n *\n * @return {SellType} the type of sale or null if it's not known.\n */\nSellMutualFundTransaction.prototype.getSellTypeEnum = function() {\n  return SellType.fromOfx(this.sellType);\n};\n\n\n/**\n * Gets the average cost basis of the sale.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @return {Double} The average cost basis of the sale\n */\nSellMutualFundTransaction.prototype.getAverageCostBasis = function() {\n  return this.averageCostBasis;\n};\nElement.add(SellMutualFundTransaction, {name: \"AVGCOSTBASIS\", order: 30, attributeType: Number, readMethod: \"getAverageCostBasis\", writeMethod: \"setAverageCostBasis\"});\n\n\n/**\n * Sets the average cost basis of the sale.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @param {Double} averageCostBasis The average cost basis of the sale\n */\nSellMutualFundTransaction.prototype.setAverageCostBasis = function(averageCostBasis) {\n  this.averageCostBasis = averageCostBasis;\n};\n\n\n/**\n * Gets any related transaction id for a mutual fund sale (e.g. for a mutual fund exchange).\n * This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @return {String} the related transaction id\n */\nSellMutualFundTransaction.prototype.getRelatedTransactionId = function() {\n  return this.relatedTransactionId;\n};\nElement.add(SellMutualFundTransaction, {name: \"RELFITID\", order: 40, attributeType: String, readMethod: \"getRelatedTransactionId\", writeMethod: \"setRelatedTransactionId\"});\n\n\n/**\n * Sets any related transaction id for a mutual fund sale (e.g. for a mutual fund exchange).\n * This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @param {String} relatedTransactionId the related transaction id\n */\nSellMutualFundTransaction.prototype.setRelatedTransactionId = function(relatedTransactionId) {\n  this.relatedTransactionId = relatedTransactionId;\n};\n\n\n\n\nmodule.exports = SellMutualFundTransaction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar ShortOptionSecurity = require(\"../positions/ShortOptionSecurity\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar Element = require(\"../../../../meta/Element\");\nvar BaseSellInvestmentTransaction = require(\"./BaseSellInvestmentTransaction\");\nvar TransactionType = require(\"./TransactionType\");\nvar OptionSellType = require(\"./OptionSellType\");\nvar RelatedOptionType = require(\"./RelatedOptionType\");\n\n/**\n * Transaction for selling options.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @class\n * @augments BaseSellInvestmentTransaction\n */\nfunction SellOptionTransaction () {\n  BaseSellInvestmentTransaction.call(this, TransactionType.SELL_OPTION);\n\n  /**\n   * @name SellOptionTransaction#optionSellType\n   * @type String\n   * @access private\n   */\n  this.optionSellType = null;\n\n  /**\n   * @name SellOptionTransaction#sharesPerContact\n   * @type Integer\n   * @access private\n   */\n  this.sharesPerContact = null;\n\n  /**\n   * @name SellOptionTransaction#relatedTransactionId\n   * @type String\n   * @access private\n   */\n  this.relatedTransactionId = null;\n\n  /**\n   * @name SellOptionTransaction#relatedType\n   * @type String\n   * @access private\n   */\n  this.relatedType = null;\n\n  /**\n   * @name SellOptionTransaction#secured\n   * @type String\n   * @access private\n   */\n  this.secured = null;\n}\n\ninherit(SellOptionTransaction, \"extends\", BaseSellInvestmentTransaction);\n\n\nAggregate.add(\"SELLOPT\", SellOptionTransaction);\n\n\n/**\n * Gets the type of option sale (i.e. \"SELLTOCLOSE\" or \"SELLTOOPEN\"). This is a required field\n * according to the OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @return {String} the option sell type\n */\nSellOptionTransaction.prototype.getOptionSellType = function() {\n  return this.optionSellType;\n};\nElement.add(SellOptionTransaction, {name: \"OPTSELLTYPE\", required: true, order: 20, attributeType: String, readMethod: \"getOptionSellType\", writeMethod: \"setOptionSellType\"});\n\n\n/**\n * Sets the type of option sale (i.e. \"SELLTOCLOSE\" or \"SELLTOOPEN\"). This is a required field\n * according to the OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @param {String} optionSellType the option sell type\n */\nSellOptionTransaction.prototype.setOptionSellType = function(optionSellType) {\n  this.optionSellType = optionSellType;\n};\n\n\n/**\n * Gets the option sell type as one of the well-known types.\n *\n * @return {OptionSellType} the type of sale or null if it's not known.\n */\nSellOptionTransaction.prototype.getOptionSellTypeEnum = function() {\n  return OptionSellType.fromOfx(this.optionSellType);\n};\n\n\n/**\n * Gets the number of shares per contact. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @return {Integer} the number of shares per contact\n */\nSellOptionTransaction.prototype.getSharesPerContact = function() {\n  return this.sharesPerContact;\n};\nElement.add(SellOptionTransaction, {name: \"SHPERCTRCT\", required: true, order: 30, attributeType: Number, readMethod: \"getSharesPerContact\", writeMethod: \"setSharesPerContact\"});\n\n\n/**\n * Sets the number of shares per contact. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @param {Integer} sharesPerContact the number of shares per contact\n */\nSellOptionTransaction.prototype.setSharesPerContact = function(sharesPerContact) {\n  this.sharesPerContact = sharesPerContact;\n};\n\n\n/**\n * Gets a related transaction for the option sale for complex option transactions. This\n * is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @return {String} The related transaction id\n */\nSellOptionTransaction.prototype.getRelatedTransactionId = function() {\n  return this.relatedTransactionId;\n};\nElement.add(SellOptionTransaction, {name: \"RELFITID\", order: 40, attributeType: String, readMethod: \"getRelatedTransactionId\", writeMethod: \"setRelatedTransactionId\"});\n\n\n/**\n * Sets a related transaction for the option sale for complex option transactions. This\n * is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @param {String} relatedTransactionId The related transaction id\n */\nSellOptionTransaction.prototype.setRelatedTransactionId = function(relatedTransactionId) {\n  this.relatedTransactionId = relatedTransactionId;\n};\n\n\n/**\n * Gets the type for the related transaction. One of \"SPREAD\", \"STRADDLE\", \"NONE\", \"OTHER\". This\n * is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @return {String} The related tansaction type\n */\nSellOptionTransaction.prototype.getRelatedType = function() {\n  return this.relatedType;\n};\nElement.add(SellOptionTransaction, {name: \"RELTYPE\", order: 50, attributeType: String, readMethod: \"getRelatedType\", writeMethod: \"setRelatedType\"});\n\n\n/**\n * Sets the type for the related transaction. One of \"SPREAD\", \"STRADDLE\", \"NONE\", \"OTHER\". This\n * is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @param {String} relatedType The related tansaction type\n */\nSellOptionTransaction.prototype.setRelatedType = function(relatedType) {\n  this.relatedType = relatedType;\n};\n\n\n/**\n * Gets the related transaction as one of the well-known types.\n *\n * @return {RelatedOptionType} the related tansaction type or null if it's not well known\n */\nSellOptionTransaction.prototype.getRelatedTypeEnum = function() {\n  return RelatedOptionType.fromOfx(this.getRelatedType());\n};\n\n\n/**\n * Gets how the option sale is secured. One of \"NAKED\" or \"COVERED\". This is an optional field\n * according to the OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @return {String} how the option sale is secured\n */\nSellOptionTransaction.prototype.getSecured = function() {\n  return this.secured;\n};\nElement.add(SellOptionTransaction, {name: \"SECURED\", order: 60, attributeType: String, readMethod: \"getSecured\", writeMethod: \"setSecured\"});\n\n\n/**\n * Sets how the option sale is secured. One of \"NAKED\" or \"COVERED\". This is an optional field\n * according to the OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @param {String} secured how the option sale is secured\n */\nSellOptionTransaction.prototype.setSecured = function(secured) {\n  this.secured = secured;\n};\n\n\n/**\n * Gets how the option sale is secured as one of the well-known types.\n *\n * @return {ShortOptionSecurity} the type indicating how the option is secured or null if it's not well known.\n */\nSellOptionTransaction.prototype.getSecuredEnum = function() {\n  return  ShortOptionSecurity.fromOfx(this.getSecured());\n};\n\n\n\n\nmodule.exports = SellOptionTransaction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar BaseSellInvestmentTransaction = require(\"./BaseSellInvestmentTransaction\");\nvar TransactionType = require(\"./TransactionType\");\n\n/**\n * Transaction for buying other types of securities.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @class\n * @augments BaseSellInvestmentTransaction\n */\nfunction SellOtherTransaction () {\n  BaseSellInvestmentTransaction.call(this, TransactionType.SELL_OTHER);\n}\n\ninherit(SellOtherTransaction, \"extends\", BaseSellInvestmentTransaction);\n\n\nAggregate.add(\"SELLOTHER\", SellOtherTransaction);\n\n\nmodule.exports = SellOtherTransaction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar Element = require(\"../../../../meta/Element\");\nvar BaseSellInvestmentTransaction = require(\"./BaseSellInvestmentTransaction\");\nvar TransactionType = require(\"./TransactionType\");\nvar SellType = require(\"./SellType\");\n\n/**\n * Transaction for selling stock.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @class\n * @augments BaseSellInvestmentTransaction\n */\nfunction SellStockTransaction () {\n  BaseSellInvestmentTransaction.call(this, TransactionType.SELL_STOCK);\n\n  /**\n   * @name SellStockTransaction#sellType\n   * @type String\n   * @access private\n   */\n  this.sellType = null;\n}\n\ninherit(SellStockTransaction, \"extends\", BaseSellInvestmentTransaction);\n\n\nAggregate.add(\"SELLSTOCK\", SellStockTransaction);\n\n\n/**\n * Gets the type of stock sale (i.e. \"SELL\" or \"SELLSHORT\"). This is a required field\n * according to the OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @return {String} the sell type\n */\nSellStockTransaction.prototype.getSellType = function() {\n  return this.sellType;\n};\nElement.add(SellStockTransaction, {name: \"SELLTYPE\", required: true, order: 20, attributeType: String, readMethod: \"getSellType\", writeMethod: \"setSellType\"});\n\n\n/**\n * Sets the type of stock sale (i.e. \"SELL\" or \"SELLSHORT\"). This is a required field\n * according to the OFX spec.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @param {String} sellType the sell type\n */\nSellStockTransaction.prototype.setSellType = function(sellType) {\n  this.sellType = sellType;\n};\n\n\n/**\n * Gets the sell type as one of the well-known types.\n *\n * @return {SellType} the type of sale or null if it's not known\n */\nSellStockTransaction.prototype.getSellTypeEnum = function() {\n  return SellType.fromOfx(this.sellType);\n};\n\n\n\n\nmodule.exports = SellStockTransaction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * Type of sale for stocks and mutual funds.\n *\n * @enum\n */\nvar SellType = {\n  SELL: \"SELL\",\n  SELL_SHORT: \"SELLSHORT\",\n\n  fromOfx: function(/*String*/ ofxVal) {\n    if (\"SELL\" === ofxVal) {\n      return SellType.SELL;\n    } else if (\"SELLSHORT\" === ofxVal) {\n      return SellType.SELL_SHORT;\n    } else {\n      return null;\n    }\n  }\n};\n\n\nmodule.exports = SellType;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar SubAccountType = require(\"../accounts/SubAccountType\");\nvar Inv401KSource = require(\"../positions/Inv401KSource\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../../meta/ChildAggregate\");\nvar Element = require(\"../../../../meta/Element\");\nvar BaseOtherInvestmentTransaction = require(\"./BaseOtherInvestmentTransaction\");\nvar TransactionType = require(\"./TransactionType\");\nvar SecurityId = require(\"../../seclist/SecurityId\");\nvar OriginalCurrency = require(\"./OriginalCurrency\");\n\n/**\n * Transaction for a stock split.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @class\n * @augments BaseOtherInvestmentTransaction\n */\nfunction SplitTransaction () {\n  BaseOtherInvestmentTransaction.call(this, TransactionType.SPLIT);\n\n  /**\n   * @name SplitTransaction#securityId\n   * @type SecurityId\n   * @access private\n   */\n  this.securityId = null;\n\n  /**\n   * @name SplitTransaction#subAccountSecurity\n   * @type String\n   * @access private\n   */\n  this.subAccountSecurity = null;\n\n  /**\n   * @name SplitTransaction#oldUnits\n   * @type Double\n   * @access private\n   */\n  this.oldUnits = null;\n\n  /**\n   * @name SplitTransaction#newUnits\n   * @type Double\n   * @access private\n   */\n  this.newUnits = null;\n\n  /**\n   * @name SplitTransaction#numerator\n   * @type Double\n   * @access private\n   */\n  this.numerator = null;\n\n  /**\n   * @name SplitTransaction#denominator\n   * @type Double\n   * @access private\n   */\n  this.denominator = null;\n\n  /**\n   * @name SplitTransaction#currencyCode\n   * @type String\n   * @access private\n   */\n  this.currencyCode = null;\n\n  /**\n   * @name SplitTransaction#originalCurrencyInfo\n   * @type OriginalCurrency\n   * @access private\n   */\n  this.originalCurrencyInfo = null;\n\n  /**\n   * @name SplitTransaction#cashForFractionalUnits\n   * @type Double\n   * @access private\n   */\n  this.cashForFractionalUnits = null;\n\n  /**\n   * @name SplitTransaction#subAccountFund\n   * @type String\n   * @access private\n   */\n  this.subAccountFund = null;\n\n  /**\n   * @name SplitTransaction#inv401kSource\n   * @type String\n   * @access private\n   */\n  this.inv401kSource = null;\n}\n\ninherit(SplitTransaction, \"extends\", BaseOtherInvestmentTransaction);\n\n\nAggregate.add(\"SPLIT\", SplitTransaction);\n\n\n/**\n * Gets the id of the security for the split. This is a required field according to the OFX\n * spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {SecurityId} the security id of the security for the expsense\n */\nSplitTransaction.prototype.getSecurityId = function() {\n  return this.securityId;\n};\nChildAggregate.add(SplitTransaction, {required: true, order: 20, attributeType: SecurityId, readMethod: \"getSecurityId\", writeMethod: \"setSecurityId\"});\n\n\n/**\n * Sets the id of the security for the split. This is a required field according to the OFX\n * spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {SecurityId} securityId the security id of the security for the expsense\n */\nSplitTransaction.prototype.setSecurityId = function(securityId) {\n  this.securityId = securityId;\n};\n\n\n/**\n * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER). This is a\n * required field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {String} the sub account type\n */\nSplitTransaction.prototype.getSubAccountSecurity = function() {\n  return this.subAccountSecurity;\n};\nElement.add(SplitTransaction, {name: \"SUBACCTSEC\", order: 30, attributeType: String, readMethod: \"getSubAccountSecurity\", writeMethod: \"setSubAccountSecurity\"});\n\n\n/**\n * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER). This is a\n * required field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {String} subAccountSecurity the sub account type\n */\nSplitTransaction.prototype.setSubAccountSecurity = function(subAccountSecurity) {\n  this.subAccountSecurity = subAccountSecurity;\n};\n\n\n/**\n * Gets the result of getSubAccountSecurity as one of the well-known types.\n *\n * @return {SubAccountType} the type of null if it wasn't one of the well known types.\n */\nSplitTransaction.prototype.getSubAccountSecurityEnum = function() {\n  return SubAccountType.fromOfx(this.getSubAccountSecurity());\n};\n\n\n/**\n * Gets the old number of units for the split. This is a required field according to the OFX\n * spec.\n *\n * @return {Double} the old number of units.\n */\nSplitTransaction.prototype.getOldUnits = function() {\n  return this.oldUnits;\n};\nElement.add(SplitTransaction, {name: \"OLDUNITS\", order: 40, attributeType: Number, readMethod: \"getOldUnits\", writeMethod: \"setOldUnits\"});\n\n\n/**\n * Sets the old number of units for the split. This is a  equired field according to the OFX\n * spec.\n *\n * @param {Double} oldUnits the old number of units.\n */\nSplitTransaction.prototype.setOldUnits = function(oldUnits) {\n  this.oldUnits = oldUnits;\n};\n\n\n/**\n * Gets the new number of units for the split. This is a required field according to the OFX\n * spec.\n *\n * @return {Double} the new number of units.\n */\nSplitTransaction.prototype.getNewUnits = function() {\n  return this.newUnits;\n};\nElement.add(SplitTransaction, {name: \"NEWUNITS\", order: 50, attributeType: Number, readMethod: \"getNewUnits\", writeMethod: \"setNewUnits\"});\n\n\n/**\n * Sets the new number of units for the split. This is a required field according to the OFX\n * spec.\n *\n * @param {Double} newUnits the new number of units.\n */\nSplitTransaction.prototype.setNewUnits = function(newUnits) {\n  this.newUnits = newUnits;\n};\n\n\n/**\n * Gets the numerator for the split ratio. This is a required field according to the OFX spec.\n *\n * @return {Double} the numerator for the split ratio\n */\nSplitTransaction.prototype.getNumerator = function() {\n  return this.numerator;\n};\nElement.add(SplitTransaction, {name: \"NUMERATOR\", order: 60, attributeType: Number, readMethod: \"getNumerator\", writeMethod: \"setNumerator\"});\n\n\n/**\n * Sets the numerator for the split ratio. This is a required field according to the OFX spec.\n *\n * @param {Double} numerator the numerator for the split ratio\n */\nSplitTransaction.prototype.setNumerator = function(numerator) {\n  this.numerator = numerator;\n};\n\n\n/**\n * Gets the denominator for the split ratio. This is a required field according to the OFX spec.\n *\n * @return {Double} the numerator for the split ratio\n */\nSplitTransaction.prototype.getDenominator = function() {\n  return this.denominator;\n};\nElement.add(SplitTransaction, {name: \"DENOMINATOR\", order: 70, attributeType: Number, readMethod: \"getDenominator\", writeMethod: \"setDenominator\"});\n\n\n/**\n * Sets the denominator for the split ratio. This is a required field according to the OFX spec.\n *\n * @param {Double} denominator the numerator for the split ratio\n */\nSplitTransaction.prototype.setDenominator = function(denominator) {\n  this.denominator = denominator;\n};\n\n\n/**\n * Gets the currency code for the transaction. Only one of currency code or original currency\n * code should be set according to the OFX spec. If neither are set, means the default currency.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {String} the currency code for the transaction\n */\nSplitTransaction.prototype.getCurrencyCode = function() {\n  return this.currencyCode;\n};\nElement.add(SplitTransaction, {name: \"CURRENCY\", order: 80, attributeType: String, readMethod: \"getCurrencyCode\", writeMethod: \"setCurrencyCode\"});\n\n\n/**\n * sets the currency code for the transaction. Only one of currency code or original currency\n * code should be set according to the OFX spec. If neither are set, means the default currency.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {void} the currency code for the transaction\n */\nSplitTransaction.prototype.setCurrencyCode = function(/*String*/ currencyCode) {\n  this.currencyCode = currencyCode;\n  this.originalCurrencyInfo = null;\n};\n\n\n/**\n * Gets the original currency info for the transaction.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {OriginalCurrency} the original currency info for the transaction\n */\nSplitTransaction.prototype.getOriginalCurrencyInfo = function() {\n  return this.originalCurrencyInfo;\n};\nElement.add(SplitTransaction, {name: \"ORIGCURRENCY\", order: 90, attributeType: OriginalCurrency, readMethod: \"getOriginalCurrencyInfo\", writeMethod: \"setOriginalCurrencyInfo\"});\n\n\n/**\n * Sets the original currency info for the transaction.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {void} the original currency info for the transaction\n */\nSplitTransaction.prototype.setOriginalCurrencyInfo = function(/*OriginalCurrency*/ originalCurrencyInfo) {\n  this.originalCurrencyInfo = originalCurrencyInfo;\n  this.currencyCode = null;\n};\n\n\n/**\n * Gets the cash for fractional units.\n *\n * @return {Double} the cash for fractional units\n */\nSplitTransaction.prototype.getCashForFractionalUnits = function() {\n  return this.cashForFractionalUnits;\n};\nElement.add(SplitTransaction, {name: \"FRACCASH\", order: 100, attributeType: Number, readMethod: \"getCashForFractionalUnits\", writeMethod: \"setCashForFractionalUnits\"});\n\n\n/**\n * Sets the cash for fractional units.\n *\n * @param {Double} cashForFractionalUnits the cash for fractional units\n */\nSplitTransaction.prototype.setCashForFractionalUnits = function(cashForFractionalUnits) {\n  this.cashForFractionalUnits = cashForFractionalUnits;\n};\n\n\n/**\n * Gets the sub account type for the fund. (e.g. CASH, MARGIN, SHORT, OTHER).\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {String} the sub account fund\n */\nSplitTransaction.prototype.getSubAccountFund = function() {\n  return this.subAccountFund;\n};\nElement.add(SplitTransaction, {name: \"SUBACCTFUND\", order: 110, attributeType: String, readMethod: \"getSubAccountFund\", writeMethod: \"setSubAccountFund\"});\n\n\n/**\n * Sets the sub account type for the fund. (e.g. CASH, MARGIN, SHORT, OTHER).\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {String} subAccountFund the sub account fund\n */\nSplitTransaction.prototype.setSubAccountFund = function(subAccountFund) {\n  this.subAccountFund = subAccountFund;\n};\n\n\n/**\n * Gets the result of getSubAccountFund as one of the well-known types.\n *\n * @return {SubAccountType} the type of null if it wasn't one of the well known types\n */\nSplitTransaction.prototype.getSubAccountFundEnum = function() {\n  return SubAccountType.fromOfx(this.getSubAccountFund());\n};\n\n\n/**\n * Gets the 401K source for the transaction. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n * according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {String} the 401k source\n */\nSplitTransaction.prototype.get401kSource = function() {\n  return this.inv401kSource;\n};\nElement.add(SplitTransaction, {name: \"INV401KSOURCE\", order: 120, attributeType: String, readMethod: \"get401kSource\", writeMethod: \"set401kSource\"});\n\n\n/**\n * Sets the 401K source for the transaction. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n * according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {String} inv401kSource the 401k source\n */\nSplitTransaction.prototype.set401kSource = function(inv401kSource) {\n  this.inv401kSource = inv401kSource;\n};\n\n\n/**\n * Gets the 401k source as one of the well-known types.\n *\n * @return {Inv401KSource} the 401k source or null if its not one of the well-known types\n */\nSplitTransaction.prototype.get401kSourceEnum = function() {\n  return Inv401KSource.fromOfx(this.get401kSource());\n};\n\n\n\n\nmodule.exports = SplitTransaction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * Type of investment transaction.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @enum\n */\nvar TransactionType = {\n\n  BUY_DEBT: \"BUY_DEBT\",\n  BUY_MUTUAL_FUND: \"BUY_MUTUAL_FUND\",\n  BUY_OPTION: \"BUY_OPTION\",\n  BUY_OTHER: \"BUY_OTHER\",\n  BUY_STOCK: \"BUY_STOCK\",\n  CLOSE_OPTION: \"CLOSE_OPTION\",\n  INCOME: \"INCOME\",\n  INVESTMENT_EXPENSE: \"INVESTMENT_EXPENSE\",\n  JOURNAL_FUND: \"JOURNAL_FUND\",\n  JOURNAL_SECURITY: \"JOURNAL_SECURITY\",\n  MARGIN_INTEREST: \"MARGIN_INTEREST\",\n  REINVEST_INCOME: \"REINVEST_INCOME\",\n  RETURN_OF_CAPITAL: \"RETURN_OF_CAPITAL\",\n  SELL_DEBT: \"SELL_DEBT\",\n  SELL_MUTUAL_FUND: \"SELL_MUTUAL_FUND\",\n  SELL_OPTION: \"SELL_OPTION\",\n  SELL_OTHER: \"SELL_OTHER\",\n  SELL_STOCK: \"SELL_STOCK\",\n  SPLIT: \"SPLIT\",\n  TRANSFER: \"TRANSFER\",\n};\n\n\nmodule.exports = TransactionType;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * Interface for transactions that have a security associated with them.\n *\n * @class\n */\nfunction TransactionWithSecurity() {\n}\n\n/**\n * Gets the security for the transaction.\n *\n * @return {SecurityId} the security id for the transaction\n */\nTransactionWithSecurity.prototype.getSecurityId = function() { throw new Error(\"not implemented\"); };\n\n\nmodule.exports = TransactionWithSecurity;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * Type of transfer.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @enum\n */\nvar TransferAction = {\n  IN: \"IN\",\n  OUT: \"OUT\",\n\n  fromOfx: function(/*String*/ ofxVal) {\n    if (\"IN\" === ofxVal) {\n      return TransferAction.IN;\n    } else if (\"OUT\" === ofxVal) {\n      return TransferAction.OUT;\n    } else {\n      return null;\n    }\n  }\n};\n\n\nmodule.exports = TransferAction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar SubAccountType = require(\"../accounts/SubAccountType\");\nvar Inv401KSource = require(\"../positions/Inv401KSource\");\nvar PositionType = require(\"../positions/PositionType\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../../meta/ChildAggregate\");\nvar Element = require(\"../../../../meta/Element\");\nvar BaseOtherInvestmentTransaction = require(\"./BaseOtherInvestmentTransaction\");\nvar TransactionType = require(\"./TransactionType\");\nvar TransferAction = require(\"./TransferAction\");\nvar SecurityId = require(\"../../seclist/SecurityId\");\n\n/**\n * Transaction for transfers.\n * See \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @class\n * @augments BaseOtherInvestmentTransaction\n */\nfunction TransferInvestmentTransaction () {\n  // TODO (jonp) -- INVACCTFROM\n  BaseOtherInvestmentTransaction.call(this, TransactionType.TRANSFER);\n\n  /**\n   * @name TransferInvestmentTransaction#securityId\n   * @type SecurityId\n   * @access private\n   */\n  this.securityId = null;\n\n  /**\n   * @name TransferInvestmentTransaction#subAccountSecurity\n   * @type String\n   * @access private\n   */\n  this.subAccountSecurity = null;\n\n  /**\n   * @name TransferInvestmentTransaction#units\n   * @type Double\n   * @access private\n   */\n  this.units = null;\n\n  /**\n   * @name TransferInvestmentTransaction#transferAction\n   * @type String\n   * @access private\n   */\n  this.transferAction = null;\n\n  /**\n   * @name TransferInvestmentTransaction#positionType\n   * @type String\n   * @access private\n   */\n  this.positionType = null;\n\n  /**\n   * @name TransferInvestmentTransaction#averageCostBasis\n   * @type Double\n   * @access private\n   */\n  this.averageCostBasis = null;\n\n  /**\n   * @name TransferInvestmentTransaction#unitPrice\n   * @type Double\n   * @access private\n   */\n  this.unitPrice = null;\n\n  /**\n   * @name TransferInvestmentTransaction#purchaseDate\n   * @type Date\n   * @access private\n   */\n  this.purchaseDate = null;\n\n  /**\n   * @name TransferInvestmentTransaction#inv401kSource\n   * @type String\n   * @access private\n   */\n  this.inv401kSource = null;\n}\n\ninherit(TransferInvestmentTransaction, \"extends\", BaseOtherInvestmentTransaction);\n\n\nAggregate.add(\"TRANSFER\", TransferInvestmentTransaction);\n\n\n/**\n * Gets the id of the security that was transferred. This is a required field according to the OFX\n * spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {SecurityId} the security id of the security that was transferred\n */\nTransferInvestmentTransaction.prototype.getSecurityId = function() {\n  return this.securityId;\n};\nChildAggregate.add(TransferInvestmentTransaction, {required: true, order: 20, attributeType: SecurityId, readMethod: \"getSecurityId\", writeMethod: \"setSecurityId\"});\n\n\n/**\n * Sets the id of the security that was transferred. This is a required field according to the OFX\n * spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {SecurityId} securityId the security id of the security that was transferred\n */\nTransferInvestmentTransaction.prototype.setSecurityId = function(securityId) {\n  this.securityId = securityId;\n};\n\n\n/**\n  * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n  * See \"Section 13.9.2.4.3, OFX Spec\"\n  *\n  * @return {String} the sub account type\n  */\nTransferInvestmentTransaction.prototype.getSubAccountSecurity = function() {\n  return this.subAccountSecurity;\n};\nElement.add(TransferInvestmentTransaction, {name: \"SUBACCTSEC\", order: 30, attributeType: String, readMethod: \"getSubAccountSecurity\", writeMethod: \"setSubAccountSecurity\"});\n\n\n/**\n  * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n  * See \"Section 13.9.2.4.3, OFX Spec\"\n  *\n  * @param {String} subAccountSecurity the sub account type\n  */\nTransferInvestmentTransaction.prototype.setSubAccountSecurity = function(subAccountSecurity) {\n   this.subAccountSecurity = subAccountSecurity;\n };\n\n\n/**\n * Gets the result of getSubAccountSecurity as one of the well-known types.\n *\n * @return {SubAccountType} the type of null if it wasn't one of the well known types.\n */\nTransferInvestmentTransaction.prototype.getSubAccountSecurityEnum = function() {\n  return SubAccountType.fromOfx(this.getSubAccountSecurity());\n};\n\n\n/**\n * Gets the number of units of the security that was transferred. For security-based actions other\n * than stock splits, this is the quantity bought. For stocks, mutual funds, and others, this\n * is the number of shares. For bonds, this is the face value. For options, this is the number of\n * contacts. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the number of units transferred\n */\nTransferInvestmentTransaction.prototype.getUnits = function() {\n  return this.units;\n};\nElement.add(TransferInvestmentTransaction, {name: \"UNITS\", required: true, order: 40, attributeType: Number, readMethod: \"getUnits\", writeMethod: \"setUnits\"});\n\n\n/**\n * Sets the number of units of the security that was transferred. For security-based actions other\n * than stock splits, this is the quantity bought. For stocks, mutual funds, and others, this\n * is the number of shares. For bonds, this is the face value. For options, this is the number of\n * contacts. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {Double} units the number of units transferred\n */\nTransferInvestmentTransaction.prototype.setUnits = function(units) {\n  this.units = units;\n};\n\n\n/**\n * Gets the type of transfer. One of \"IN\" or \"OUT\". This is a required field according to the\n * OFX spec.\n *\n * @return {String} the type of transfer\n */\nTransferInvestmentTransaction.prototype.getTransferAction = function() {\n  return this.transferAction;\n};\nElement.add(TransferInvestmentTransaction, {name: \"TFERACTION\", required: true, order: 50, attributeType: String, readMethod: \"getTransferAction\", writeMethod: \"setTransferAction\"});\n\n\n/**\n * Sets the type of transfer. One of \"IN\" or \"OUT\". This is a required field according to the\n * OFX spec.\n *\n * @param {String} transferAction the type of transfer\n */\nTransferInvestmentTransaction.prototype.setTransferAction = function(transferAction) {\n  this.transferAction = transferAction;\n};\n\n\n/**\n * Gets the transfer action as one of the well-known types.\n *\n * @return {TransferAction} the type of transfer or null if it's not well known\n */\nTransferInvestmentTransaction.prototype.getTransferActionEnum = function() {\n  return TransferAction.fromOfx(this.getTransferAction());\n};\n\n\n/**\n * Gets the type of position. One of \"LONG\" or \"SHORT\". This is a required field according to the\n * OFX spec.\n *\n * @return {String} the position type\n */\nTransferInvestmentTransaction.prototype.getPositionType = function() {\n  return this.positionType;\n};\nElement.add(TransferInvestmentTransaction, {name: \"POSTYPE\", required: true, order: 60, attributeType: String, readMethod: \"getPositionType\", writeMethod: \"setPositionType\"});\n\n\n/**\n * Sets the type of position. One of \"LONG\" or \"SHORT\". This is a required field according to the\n * OFX spec.\n *\n * @param {String} positionType the position type\n */\nTransferInvestmentTransaction.prototype.setPositionType = function(positionType) {\n  this.positionType = positionType;\n};\n\n\n/**\n * Gets the position type as one of the well-known types.\n *\n * @return {PositionType} the position type or null if it's not well known\n */\nTransferInvestmentTransaction.prototype.getPositionTypeEnum = function() {\n  return PositionType.fromOfx(this.getPositionType());\n};\n\n\n/**\n * Gets the average cost basis for the securities being transfered. This is an optional field\n * according to the ofx spec.\n *\n * @return {Double} the average cost basis\n */\nTransferInvestmentTransaction.prototype.getAverageCostBasis = function() {\n  return this.averageCostBasis;\n};\nElement.add(TransferInvestmentTransaction, {name: \"AVGCOSTBASIS\", order: 70, attributeType: Number, readMethod: \"getAverageCostBasis\", writeMethod: \"setAverageCostBasis\"});\n\n\n/**\n * Sets the average cost basis for the securities being transfered. This is an optional field\n * according to the ofx spec.\n *\n * @param {Double} averageCostBasis the average cost basis\n */\nTransferInvestmentTransaction.prototype.setAverageCostBasis = function(averageCostBasis) {\n  this.averageCostBasis = averageCostBasis;\n};\n\n\n/**\n * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n * per contact) price. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the per unit price\n */\nTransferInvestmentTransaction.prototype.getUnitPrice = function() {\n  return this.unitPrice;\n};\nElement.add(TransferInvestmentTransaction, {name: \"UNITPRICE\", required: true, order: 80, attributeType: Number, readMethod: \"getUnitPrice\", writeMethod: \"setUnitPrice\"});\n\n\n/**\n * Sets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n * per contact) price. This is a required field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {Double} unitPrice the per unit price\n */\nTransferInvestmentTransaction.prototype.setUnitPrice = function(unitPrice) {\n  this.unitPrice = unitPrice;\n};\n\n\n/**\n * Gets the original date of purchase for the securities. This is an optional field according to\n * the ofx spec.\n *\n * @return {Date} the original date of purchase\n */\nTransferInvestmentTransaction.prototype.getPurchaseDate = function() {\n  return this.purchaseDate;\n};\nElement.add(TransferInvestmentTransaction, {name: \"DTPURCHASE\", order: 90, attributeType: Date, readMethod: \"getPurchaseDate\", writeMethod: \"setPurchaseDate\"});\n\n\n/**\n * Sets the original date of purchase for the securities. This is an optional field according to\n * the ofx spec.\n *\n * @param {Date} purchaseDate the original date of purchase\n */\nTransferInvestmentTransaction.prototype.setPurchaseDate = function(purchaseDate) {\n  this.purchaseDate = purchaseDate;\n};\n\n\n/**\n * Gets the 401K source for the transfer. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n * according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {String} the state withholding\n */\nTransferInvestmentTransaction.prototype.get401kSource = function() {\n  return this.inv401kSource;\n};\nElement.add(TransferInvestmentTransaction, {name: \"INV401KSOURCE\", order: 100, attributeType: String, readMethod: \"get401kSource\", writeMethod: \"set401kSource\"});\n\n\n/**\n * Sets the 401K source for the transfer. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n * according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {String} inv401kSource the state withholding\n */\nTransferInvestmentTransaction.prototype.set401kSource = function(inv401kSource) {\n  this.inv401kSource = inv401kSource;\n};\n\n\n/**\n * Gets the 401(k) source as one of the well-known types.\n *\n * @return {Inv401KSource} the type of close or null if it's not well known.\n */\nTransferInvestmentTransaction.prototype.get401kSourceEnum = function() {\n  return Inv401KSource.fromOfx(this.get401kSource());\n};\n\n\n\n\nmodule.exports = TransferInvestmentTransaction;\n","\"use strict\";\n\nmodule.exports = {\n  BaseBuyInvestmentTransaction: require(\"./BaseBuyInvestmentTransaction\"),\n  BaseInvestmentTransaction: require(\"./BaseInvestmentTransaction\"),\n  BaseOtherInvestmentTransaction: require(\"./BaseOtherInvestmentTransaction\"),\n  BaseSellInvestmentTransaction: require(\"./BaseSellInvestmentTransaction\"),\n  BuyDebtTransaction: require(\"./BuyDebtTransaction\"),\n  BuyInvestmentTransaction: require(\"./BuyInvestmentTransaction\"),\n  BuyMutualFundTransaction: require(\"./BuyMutualFundTransaction\"),\n  BuyOptionTransaction: require(\"./BuyOptionTransaction\"),\n  BuyOtherTransaction: require(\"./BuyOtherTransaction\"),\n  BuyStockTransaction: require(\"./BuyStockTransaction\"),\n  BuyType: require(\"./BuyType\"),\n  CloseOptionAction: require(\"./CloseOptionAction\"),\n  CloseOptionTransaction: require(\"./CloseOptionTransaction\"),\n  IncomeTransaction: require(\"./IncomeTransaction\"),\n  IncomeType: require(\"./IncomeType\"),\n  InvestmentBankTransaction: require(\"./InvestmentBankTransaction\"),\n  InvestmentExpenseTransaction: require(\"./InvestmentExpenseTransaction\"),\n  InvestmentTransaction: require(\"./InvestmentTransaction\"),\n  InvestmentTransactionList: require(\"./InvestmentTransactionList\"),\n  JournalFundTransaction: require(\"./JournalFundTransaction\"),\n  JournalSecurityTransaction: require(\"./JournalSecurityTransaction\"),\n  MarginInterestTransaction: require(\"./MarginInterestTransaction\"),\n  OptionBuyType: require(\"./OptionBuyType\"),\n  OptionSellType: require(\"./OptionSellType\"),\n  OriginalCurrency: require(\"./OriginalCurrency\"),\n  ReinvestIncomeTransaction: require(\"./ReinvestIncomeTransaction\"),\n  RelatedOptionType: require(\"./RelatedOptionType\"),\n  ReturnOfCapitalTransaction: require(\"./ReturnOfCapitalTransaction\"),\n  SellDebtReason: require(\"./SellDebtReason\"),\n  SellDebtTransaction: require(\"./SellDebtTransaction\"),\n  SellInvestmentTransaction: require(\"./SellInvestmentTransaction\"),\n  SellMutualFundTransaction: require(\"./SellMutualFundTransaction\"),\n  SellOptionTransaction: require(\"./SellOptionTransaction\"),\n  SellOtherTransaction: require(\"./SellOtherTransaction\"),\n  SellStockTransaction: require(\"./SellStockTransaction\"),\n  SellType: require(\"./SellType\"),\n  SplitTransaction: require(\"./SplitTransaction\"),\n  TransactionType: require(\"./TransactionType\"),\n  TransactionWithSecurity: require(\"./TransactionWithSecurity\"),\n  TransferAction: require(\"./TransferAction\"),\n  TransferInvestmentTransaction: require(\"./TransferInvestmentTransaction\"),\n};\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar VersionSpecificMessageSetInfo = require(\"./VersionSpecificMessageSetInfo\");\n\n/**\n * Information about a message set.\n *\n * @class\n * See \"Section 7.2.1, OFX Spec\"\n */\nfunction AbstractMessageSetInfo () {\n\n  /**\n   * @name AbstractMessageSetInfo#versionSpecificInformationList\n   * @type VersionSpecificMessageSetInfo[]\n   * @access private\n   */\n  this.versionSpecificInformationList = null;\n}\n\n\n\n\n\n/**\n * List of information about a message set for each version supported.\n *\n * @return {VersionSpecificMessageSetInfo[]} List of information about a message set for each version supported.\n */\nAbstractMessageSetInfo.prototype.getVersionSpecificInformationList = function() {\n  return this.versionSpecificInformationList;\n};\nChildAggregate.add(AbstractMessageSetInfo, {order: 0, attributeType: Array, collectionEntryType: VersionSpecificMessageSetInfo, readMethod: \"getVersionSpecificInformationList\", writeMethod: \"setVersionSpecificInformationList\"});\n\n\n/**\n * List of information about a message set for each version supported.\n *\n * @param {VersionSpecificMessageSetInfo[]} versionSpecificInformationList List of information about a message set for each version supported.\n */\nAbstractMessageSetInfo.prototype.setVersionSpecificInformationList = function(versionSpecificInformationList) {\n  this.versionSpecificInformationList = versionSpecificInformationList;\n};\n\n\n\n\nmodule.exports = AbstractMessageSetInfo;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * @enum\n * See \"Section 7.2.2, OFX Spec\"\n */\nvar CharacterType = {\n\n  ALPHAONLY: \"ALPHAONLY\",\n\n  NUMERICONLY: \"NUMERICONLY\",\n\n  ALPHAORNUMERIC: \"ALPHAORNUMERIC\",\n\n  ALPHAANDNUMERIC: \"ALPHAANDNUMERIC\"\n};\n\n\nmodule.exports = CharacterType;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * @enum\n * See \"Section 7.1.5, OFX Spec\"\n */\nvar ClientRoutingCapability = {\n\n  NONE: \"NONE\",\n\n  SERVICE: \"SERVICE\",\n\n  MESSAGE_SET: \"MSGSET\",\n};\n\n\nmodule.exports = ClientRoutingCapability;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar Element = require(\"../../../meta/Element\");\nvar ApplicationSecurity = require(\"../ApplicationSecurity\");\nvar SynchronizationCapability = require(\"./SynchronizationCapability\");\n\n/**\n * Core information about a specific version of a specific message set.\n *\n * @class\n * See \"Section 7.2.1, OFX Spec\"\n */\nfunction CoreMessageSetInfo () {\n\n  /**\n   * @name CoreMessageSetInfo#version\n   * @type String\n   * @access private\n   */\n  this.version = \"1\";\n\n  /**\n   * @name CoreMessageSetInfo#serviceProviderName\n   * @type String\n   * @access private\n   */\n  this.serviceProviderName = null;\n\n  /**\n   * @name CoreMessageSetInfo#url\n   * @type String\n   * @access private\n   */\n  this.url = null;\n\n  /**\n   * @name CoreMessageSetInfo#security\n   * @type ApplicationSecurity\n   * @access private\n   */\n  this.security = null;\n\n  /**\n   * @name CoreMessageSetInfo#sslRequired\n   * @type Boolean\n   * @access private\n   */\n  this.sslRequired = null;\n\n  /**\n   * @name CoreMessageSetInfo#realm\n   * @type String\n   * @access private\n   */\n  this.realm = null;\n\n  /**\n   * @name CoreMessageSetInfo#language\n   * @type String\n   * @access private\n   */\n  this.language = \"eng\";\n\n  /**\n   * @name CoreMessageSetInfo#syncCapability\n   * @type SynchronizationCapability\n   * @access private\n   */\n  this.syncCapability = null;\n\n  /**\n   * @name CoreMessageSetInfo#fileBasedErrorRecoverySupport\n   * @type Boolean\n   * @access private\n   */\n  this.fileBasedErrorRecoverySupport = null;\n\n  /**\n   * @name CoreMessageSetInfo#timeout\n   * @type Integer\n   * @access private\n   */\n  this.timeout = null;\n}\n\n\n\nAggregate.add(\"MSGSETCORE\", CoreMessageSetInfo);\n\n\n/**\n * Version of the message set.\n *\n * @return {String} The version of the message set.\n */\nCoreMessageSetInfo.prototype.getVersion = function() {\n  return this.version;\n};\nElement.add(CoreMessageSetInfo, {name: \"VER\", required: true, order: 0, attributeType: String, readMethod: \"getVersion\", writeMethod: \"setVersion\"});\n\n\n/**\n * The version of the message set.\n *\n * @param {String} version The version of the message set.\n */\nCoreMessageSetInfo.prototype.setVersion = function(version) {\n  this.version = version;\n};\n\n\n/**\n * The name of the service provider (sometimes the message set processing is outsourced).\n *\n * @return {String} The name of the service provider (sometimes the message set processing is outsourced).\n */\nCoreMessageSetInfo.prototype.getServiceProviderName = function() {\n  return this.serviceProviderName;\n};\nElement.add(CoreMessageSetInfo, {name: \"SPNAME\", order: 10, attributeType: String, readMethod: \"getServiceProviderName\", writeMethod: \"setServiceProviderName\"});\n\n\n/**\n * The name of the service provider (sometimes the message set processing is outsourced).\n *\n * @param {String} serviceProviderName The name of the service provider (sometimes the message set processing is outsourced).\n */\nCoreMessageSetInfo.prototype.setServiceProviderName = function(serviceProviderName) {\n  this.serviceProviderName = serviceProviderName;\n};\n\n\n/**\n * The URL at which the message set is processed.\n *\n * @return {String} The URL at which the message set is processed.\n */\nCoreMessageSetInfo.prototype.getUrl = function() {\n  return this.url;\n};\nElement.add(CoreMessageSetInfo, {name: \"URL\", required: true, order: 20, attributeType: String, readMethod: \"getUrl\", writeMethod: \"setUrl\"});\n\n\n/**\n * The URL at which the message set is processed.\n *\n * @param {String} url The URL at which the message set is processed.\n */\nCoreMessageSetInfo.prototype.setUrl = function(url) {\n  this.url = url;\n};\n\n\n/**\n * The application-level security required for this message set.\n *\n * @return {ApplicationSecurity} The application-level security required for this message set.\n */\nCoreMessageSetInfo.prototype.getSecurity = function() {\n  return this.security;\n};\nElement.add(CoreMessageSetInfo, {name: \"OFXSEC\", required: true, order: 30, attributeType: ApplicationSecurity, readMethod: \"getSecurity\", writeMethod: \"setSecurity\"});\n\n\n/**\n * The application-level security required for this message set.\n *\n * @param {ApplicationSecurity} security The application-level security required for this message set.\n */\nCoreMessageSetInfo.prototype.setSecurity = function(security) {\n  this.security = security;\n};\n\n\n/**\n * Whether transport-level security is required for this message set.\n *\n * @return {Boolean} Whether transport-level security is required for this message set.\n */\nCoreMessageSetInfo.prototype.getSslRequired = function() {\n  return this.sslRequired;\n};\nElement.add(CoreMessageSetInfo, {name: \"TRANSPSEC\", required: true, order: 40, attributeType: Boolean, readMethod: \"getSslRequired\", writeMethod: \"setSslRequired\"});\n\n\n/**\n * Whether transport-level security is required for this message set.\n *\n * @param {Boolean} sslRequired Whether transport-level security is required for this message set.\n */\nCoreMessageSetInfo.prototype.setSslRequired = function(sslRequired) {\n  this.sslRequired = sslRequired;\n};\n\n\n/**\n * The sign-on realm.\n *\n * @return {String} The sign-on realm.\n */\nCoreMessageSetInfo.prototype.getRealm = function() {\n  return this.realm;\n};\nElement.add(CoreMessageSetInfo, {name: \"SIGNONREALM\", required: true, order: 50, attributeType: String, readMethod: \"getRealm\", writeMethod: \"setRealm\"});\n\n\n/**\n * The sign-on realm.\n *\n * @param {String} realm The sign-on realm.\n */\nCoreMessageSetInfo.prototype.setRealm = function(realm) {\n  this.realm = realm;\n};\n\n\n/**\n * The language.\n *\n * @return {String} The language.\n * @see java.util.Locale#getISO3Language()\n */\nCoreMessageSetInfo.prototype.getLanguage = function() {\n  return this.language;\n};\nElement.add(CoreMessageSetInfo, {name: \"LANGUAGE\", required: true, order: 60, attributeType: String, readMethod: \"getLanguage\", writeMethod: \"setLanguage\"});\n\n\n/**\n * The language.\n *\n * @param {String} language The language.\n */\nCoreMessageSetInfo.prototype.setLanguage = function(language) {\n  this.language = language;\n};\n\n\n/**\n * The synchronization capability for this message set.\n *\n * @return {SynchronizationCapability} The synchronization capability for this message set.\n */\nCoreMessageSetInfo.prototype.getSyncCapability = function() {\n  return this.syncCapability;\n};\nElement.add(CoreMessageSetInfo, {name: \"SYNCMODE\", required: true, order: 70, attributeType: SynchronizationCapability, readMethod: \"getSyncCapability\", writeMethod: \"setSyncCapability\"});\n\n\n/**\n * The synchronization capability for this message set.\n *\n * @param {SynchronizationCapability} syncCapability The synchronization capability for this message set.\n */\nCoreMessageSetInfo.prototype.setSyncCapability = function(syncCapability) {\n  this.syncCapability = syncCapability;\n};\n\n\n/**\n * Whether there exists support for resposne-file based error recovery.\n *\n * @return {Boolean} Whether there exists support for resposne-file based error recovery.\n */\nCoreMessageSetInfo.prototype.getFileBasedErrorRecoverySupport = function() {\n  return this.fileBasedErrorRecoverySupport;\n};\nElement.add(CoreMessageSetInfo, {name: \"RESPFILEER\", required: true, order: 80, attributeType: Boolean, readMethod: \"getFileBasedErrorRecoverySupport\", writeMethod: \"setFileBasedErrorRecoverySupport\"});\n\n\n/**\n * Whether there exists support for resposne-file based error recovery.\n *\n * @param {Boolean} fileBasedErrorRecoverySupport Whether there exists support for resposne-file based error recovery.\n */\nCoreMessageSetInfo.prototype.setFileBasedErrorRecoverySupport = function(fileBasedErrorRecoverySupport) {\n  this.fileBasedErrorRecoverySupport = fileBasedErrorRecoverySupport;\n};\n\n\n/**\n * Gets the \"INTU.TIMEOUT\" field. There's no public documentation of this field but E*TRADE sends\n * it. It likely is some type of timeout in seconds.\n *\n * @return {Integer} the \"INTU.TIMEOUT\" property\n */\nCoreMessageSetInfo.prototype.getIntuTimeout = function() {\n  return this.timeout;\n};\nElement.add(CoreMessageSetInfo, {name: \"INTU.TIMEOUT\", order: 90, attributeType: Number, readMethod: \"getIntuTimeout\", writeMethod: \"setIntuTimeout\"});\n\n\n/**\n * Sets the \"INTU.TIMEOUT\" field. There's no public documentation of this field but E*TRADE sends\n * it. It likely is some type of timeout in seconds.\n *\n * @param {Integer} timeout the \"INTU.TIMEOUT\" property\n */\nCoreMessageSetInfo.prototype.setIntuTimeout = function(timeout) {\n  this.timeout = timeout;\n};\n\n\n\n\nmodule.exports = CoreMessageSetInfo;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar AbstractMessageSetInfo = require(\"./AbstractMessageSetInfo\");\n\n/**\n * @class\n * See \"Section 7.2, OFX Spec\"\n */\nfunction MessageSetInfoList () {\n\n  /**\n   * @name MessageSetInfoList#informationList\n   * @type AbstractMessageSetInfo[]\n   * @access private\n   */\n  this.informationList = null;\n}\n\n\n\nAggregate.add(\"MSGSETLIST\", MessageSetInfoList);\n\n\n/**\n * The list of information for each message set.\n *\n * @return {AbstractMessageSetInfo[]} The list of information for each message set.\n */\nMessageSetInfoList.prototype.getInformationList = function() {\n  return this.informationList;\n};\nChildAggregate.add(MessageSetInfoList, {order: 0, attributeType: Array, collectionEntryType: AbstractMessageSetInfo, readMethod: \"getInformationList\", writeMethod: \"setInformationList\"});\n\n\n/**\n * The list of information for each message set.\n *\n * @param {AbstractMessageSetInfo[]} informationList The list of information for each message set.\n */\nMessageSetInfoList.prototype.setInformationList = function(informationList) {\n  this.informationList = informationList;\n};\n\n\n\n\nmodule.exports = MessageSetInfoList;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar RequestMessage = require(\"../RequestMessage\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar Element = require(\"../../../meta/Element\");\nvar ClientRoutingCapability = require(\"./ClientRoutingCapability\");\n\n/**\n * @class\n * See \"Section 7.1.5, OFX Spec\"\n */\nfunction ProfileRequest () {\n  RequestMessage.call(this);\n\n  /**\n   * Note: I don't know why, but ClientRoutingCapability.NONE causes the request to be rejected by my bank\n   * @name ProfileRequest#routingCapability\n   * @type ClientRoutingCapability\n   * @access private\n   */\n  this.routingCapability = ClientRoutingCapability.MESSAGE_SET;\n\n  /**\n   * @name ProfileRequest#profileLastUpdated\n   * @type Date\n   * @access private\n   */\n  this.profileLastUpdated = null;\n}\n\ninherit(ProfileRequest, \"extends\", RequestMessage);\n\n\nAggregate.add(\"PROFRQ\", ProfileRequest);\n\n\n/**\n * The client routing capability.\n *\n * @return {ClientRoutingCapability} The client routing capability.\n */\nProfileRequest.prototype.getRoutingCapability = function() {\n  return this.routingCapability;\n};\nElement.add(ProfileRequest, {name: \"CLIENTROUTING\", order: 0, attributeType: ClientRoutingCapability, readMethod: \"getRoutingCapability\", writeMethod: \"setRoutingCapability\"});\n\n\n/**\n * The client routing capability.\n *\n * @param {ClientRoutingCapability} routingCapability The client routing capability.\n */\nProfileRequest.prototype.setRoutingCapability = function(routingCapability) {\n  this.routingCapability = routingCapability;\n};\n\n\n/**\n * The date the profile was last updated.\n *\n * @return {Date} The date the profile was last updated.\n */\nProfileRequest.prototype.getProfileLastUpdated = function() {\n  return this.profileLastUpdated;\n};\nElement.add(ProfileRequest, {name: \"DTPROFUP\", order: 10, attributeType: Date, readMethod: \"getProfileLastUpdated\", writeMethod: \"setProfileLastUpdated\"});\n\n\n/**\n * The date the profile was last updated.\n *\n * @param {Date} profileLastUpdated The date the profile was last updated.\n */\nProfileRequest.prototype.setProfileLastUpdated = function(profileLastUpdated) {\n  this.profileLastUpdated = profileLastUpdated;\n};\n\n\n\n\nmodule.exports = ProfileRequest;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar MessageSetType = require(\"../MessageSetType\");\nvar RequestMessageSet = require(\"../RequestMessageSet\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar ProfileRequestTransaction = require(\"./ProfileRequestTransaction\");\n\n/**\n * @class\n * @augments RequestMessageSet\n * See \"Section 7 OFX Spec\"\n */\nfunction ProfileRequestMessageSet () {\n  RequestMessageSet.call(this);\n\n  /**\n   * @name ProfileRequestMessageSet#profileRequest\n   * @type ProfileRequestTransaction\n   * @access private\n   */\n  this.profileRequest = null;\n}\n\ninherit(ProfileRequestMessageSet, \"extends\", RequestMessageSet);\n\n\nAggregate.add(\"PROFMSGSRQV1\", ProfileRequestMessageSet);\n\n\nProfileRequestMessageSet.prototype.getType = function() {\n  return MessageSetType.profile;\n};\n\n\n/**\n * The profile request.\n *\n * @return {ProfileRequestTransaction} The profile request.\n */\nProfileRequestMessageSet.prototype.getProfileRequest = function() {\n  return this.profileRequest;\n};\nChildAggregate.add(ProfileRequestMessageSet, {required: true, order: 0, attributeType: ProfileRequestTransaction, readMethod: \"getProfileRequest\", writeMethod: \"setProfileRequest\"});\n\n\n/**\n * The profile request.\n *\n * @param {ProfileRequestTransaction} profileRequest The profile request.\n */\nProfileRequestMessageSet.prototype.setProfileRequest = function(profileRequest) {\n  this.profileRequest = profileRequest;\n};\n\n\n// Inherited.\nProfileRequestMessageSet.prototype.getRequestMessages = function() {\n  var requestMessages = [];\n  if (this.getProfileRequest()) {\n    requestMessages.push(this.getProfileRequest());\n  }\n  return requestMessages;\n};\n\n\n\n\nmodule.exports = ProfileRequestMessageSet;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar TransactionWrappedRequestMessage = require(\"../TransactionWrappedRequestMessage\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ProfileRequest = require(\"./ProfileRequest\");\n\n/**\n * @class\n * @augments TransactionWrappedRequestMessage\n */\nfunction ProfileRequestTransaction () {\n  TransactionWrappedRequestMessage.call(this);\n\n  /**\n   * @name ProfileRequestTransaction#message\n   * @type ProfileRequest\n   * @access private\n   */\n  this.message = null;\n}\n\ninherit(ProfileRequestTransaction, \"extends\", TransactionWrappedRequestMessage);\n\n\nAggregate.add(\"PROFTRNRQ\", ProfileRequestTransaction);\n\n\n/**\n * The wrapped message.\n *\n * @return {ProfileRequest} The wrapped message.\n */\nProfileRequestTransaction.prototype.getMessage = function() {\n  return this.message;\n};\nChildAggregate.add(ProfileRequestTransaction, {required: true, order: 30, attributeType: ProfileRequest, readMethod: \"getMessage\", writeMethod: \"setMessage\"});\n\n\n/**\n * The wrapped message.\n *\n * @param {ProfileRequest} message The wrapped message.\n */\nProfileRequestTransaction.prototype.setMessage = function(message) {\n  this.message = message;\n};\n\n\n// Inherited.\nProfileRequestTransaction.prototype.setWrappedMessage = function(/*ProfileRequest*/ message) {\n  this.setMessage(message);\n};\n\n\n\n\nmodule.exports = ProfileRequestTransaction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar ResponseMessage = require(\"../ResponseMessage\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar Element = require(\"../../../meta/Element\");\nvar FinancialInstitutionProfile = require(\"../../../client/FinancialInstitutionProfile\");\nvar MessageSetInfoList = require(\"./MessageSetInfoList\");\nvar SignonInfoList = require(\"./SignonInfoList\");\n\n/**\n * @class\n * @augments ResponseMessage\n * @augments FinancialInstitutionProfile\n * See \"Section 7.2 OFX Spec\"\n */\nfunction ProfileResponse () {\n  ResponseMessage.call(this);\n\n  /**\n   * @name ProfileResponse#messageSetList\n   * @type MessageSetInfoList\n   * @access private\n   */\n  this.messageSetList = null;\n\n  /**\n   * @name ProfileResponse#signonInfoList\n   * @type SignonInfoList\n   * @access private\n   */\n  this.signonInfoList = null;\n\n  /**\n   * @name ProfileResponse#timestamp\n   * @type Date\n   * @access private\n   */\n  this.timestamp = null;\n\n  /**\n   * @name ProfileResponse#financialInstitutionName\n   * @type String\n   * @access private\n   */\n  this.financialInstitutionName = null;\n\n  /**\n   * @name ProfileResponse#address1\n   * @type String\n   * @access private\n   */\n  this.address1 = null;\n\n  /**\n   * @name ProfileResponse#address2\n   * @type String\n   * @access private\n   */\n  this.address2 = null;\n\n  /**\n   * @name ProfileResponse#address3\n   * @type String\n   * @access private\n   */\n  this.address3 = null;\n\n  /**\n   * @name ProfileResponse#city\n   * @type String\n   * @access private\n   */\n  this.city = null;\n\n  /**\n   * @name ProfileResponse#state\n   * @type String\n   * @access private\n   */\n  this.state = null;\n\n  /**\n   * @name ProfileResponse#zip\n   * @type String\n   * @access private\n   */\n  this.zip = null;\n\n  /**\n   * @name ProfileResponse#country\n   * @type String\n   * @access private\n   */\n  this.country = null;\n\n  /**\n   * @name ProfileResponse#customerServicePhone\n   * @type String\n   * @access private\n   */\n  this.customerServicePhone = null;\n\n  /**\n   * @name ProfileResponse#technicalSupportPhone\n   * @type String\n   * @access private\n   */\n  this.technicalSupportPhone = null;\n\n  /**\n   * @name ProfileResponse#fax\n   * @type String\n   * @access private\n   */\n  this.fax = null;\n\n  /**\n   * @name ProfileResponse#siteURL\n   * @type String\n   * @access private\n   */\n  this.siteURL = null;\n\n  /**\n   * @name ProfileResponse#email\n   * @type String\n   * @access private\n   */\n  this.email = null;\n}\n\ninherit(ProfileResponse, \"extends\", ResponseMessage);\ninherit(ProfileResponse, \"implements\", FinancialInstitutionProfile);\n\n\nAggregate.add(\"PROFRS\", ProfileResponse);\n\n\n/**\n * List of message set information.\n * @return {MessageSetInfoList} List of message set information.\n */\nProfileResponse.prototype.getMessageSetList = function() {\n  return this.messageSetList;\n};\nChildAggregate.add(ProfileResponse, {order: 0, attributeType: MessageSetInfoList, readMethod: \"getMessageSetList\", writeMethod: \"setMessageSetList\"});\n\n\n/**\n * List of message set information.\n *\n * @param {MessageSetInfoList} messageSetList List of message set information.\n */\nProfileResponse.prototype.setMessageSetList = function(messageSetList) {\n  this.messageSetList = messageSetList;\n};\n\n\n/**\n * List of signon information.\n *\n * @return {SignonInfoList} List of signon information.\n */\nProfileResponse.prototype.getSignonInfoList = function() {\n  return this.signonInfoList;\n};\nChildAggregate.add(ProfileResponse, {order: 10, attributeType: SignonInfoList, readMethod: \"getSignonInfoList\", writeMethod: \"setSignonInfoList\"});\n\n\n/**\n * List of signon information.\n *\n * @param {SignonInfoList} signonInfoList List of signon information.\n */\nProfileResponse.prototype.setSignonInfoList = function(signonInfoList) {\n  this.signonInfoList = signonInfoList;\n};\n\n\n// Inherited.\nProfileResponse.prototype.getResponseMessageName = function() {\n  return \"profile\";\n};\n\n\n// Inherited.\nProfileResponse.prototype.getLastUpdated = function() {\n  return this.getTimestamp();\n};\n\n\n/**\n * The timestamp of this profile update.\n *\n * @return {Date} The timestamp of this profile update.\n */\nProfileResponse.prototype.getTimestamp = function() {\n  return this.timestamp;\n};\nElement.add(ProfileResponse, {name: \"DTPROFUP\", order: 20, attributeType: Date, readMethod: \"getTimestamp\", writeMethod: \"setTimestamp\"});\n\n\n/**\n * The timestamp of this profile update.\n *\n * @param {Date} timestamp The timestamp of this profile update.\n */\nProfileResponse.prototype.setTimestamp = function(timestamp) {\n  this.timestamp = timestamp;\n};\n\n\n/**\n * The name of the financial institution.\n *\n * @return {String} The name of the financial institution.\n */\nProfileResponse.prototype.getFinancialInstitutionName = function() {\n  return this.financialInstitutionName;\n};\nElement.add(ProfileResponse, {name: \"FINAME\", order: 30, attributeType: String, readMethod: \"getFinancialInstitutionName\", writeMethod: \"setFinancialInstitutionName\"});\n\n\n/**\n * The name of the financial institution.\n *\n * @param {String} financialInstitutionName The name of the financial institution.\n */\nProfileResponse.prototype.setFinancialInstitutionName = function(financialInstitutionName) {\n  this.financialInstitutionName = financialInstitutionName;\n};\n\n\n/**\n * The address of the financial institution.\n *\n * @return {String} The address of the financial institution.\n */\nProfileResponse.prototype.getAddress1 = function() {\n  return this.address1;\n};\nElement.add(ProfileResponse, {name: \"ADDR1\", required: true, order: 40, attributeType: String, readMethod: \"getAddress1\", writeMethod: \"setAddress1\"});\n\n\n/**\n * The address of the financial institution.\n *\n * @param {String} address1 The address of the financial institution.\n */\nProfileResponse.prototype.setAddress1 = function(address1) {\n  this.address1 = address1;\n};\n\n\n/**\n * The address of the financial institution.\n *\n * @return {String} The address of the financial institution.\n */\nProfileResponse.prototype.getAddress2 = function() {\n  return this.address2;\n};\nElement.add(ProfileResponse, {name: \"ADDR2\", order: 50, attributeType: String, readMethod: \"getAddress2\", writeMethod: \"setAddress2\"});\n\n\n/**\n * The address of the financial institution.\n *\n * @param {String} address2 The address of the financial institution.\n */\nProfileResponse.prototype.setAddress2 = function(address2) {\n  this.address2 = address2;\n};\n\n\n/**\n * The address of the financial institution.\n *\n * @return {String} The address of the financial institution.\n */\nProfileResponse.prototype.getAddress3 = function() {\n  return this.address3;\n};\nElement.add(ProfileResponse, {name: \"ADDR3\", order: 60, attributeType: String, readMethod: \"getAddress3\", writeMethod: \"setAddress3\"});\n\n\n/**\n * The address of the financial institution.\n *\n * @param {String} address3 The address of the financial institution.\n */\nProfileResponse.prototype.setAddress3 = function(address3) {\n  this.address3 = address3;\n};\n\n\n/**\n * The city of the financial institution.\n *\n * @return {String} The city of the financial institution.\n */\nProfileResponse.prototype.getCity = function() {\n  return this.city;\n};\nElement.add(ProfileResponse, {name: \"CITY\", required: true, order: 70, attributeType: String, readMethod: \"getCity\", writeMethod: \"setCity\"});\n\n\n/**\n * The city of the financial institution.\n *\n * @param {String} city The city of the financial institution.\n */\nProfileResponse.prototype.setCity = function(city) {\n  this.city = city;\n};\n\n\n/**\n * The state of this financial institution.\n *\n * @return {String} The state of this financial institution.\n */\nProfileResponse.prototype.getState = function() {\n  return this.state;\n};\nElement.add(ProfileResponse, {name: \"STATE\", required: true, order: 80, attributeType: String, readMethod: \"getState\", writeMethod: \"setState\"});\n\n\n/**\n * The state of this financial institution.\n *\n * @param {String} state The state of this financial institution.\n */\nProfileResponse.prototype.setState = function(state) {\n  this.state = state;\n};\n\n\n/**\n * The postal code of this financial institution.\n *\n * @return {String} The postal code of this financial institution.\n */\nProfileResponse.prototype.getZip = function() {\n  return this.zip;\n};\nElement.add(ProfileResponse, {name: \"POSTALCODE\", required: true, order: 90, attributeType: String, readMethod: \"getZip\", writeMethod: \"setZip\"});\n\n\n/**\n * The postal code of this financial institution.\n *\n * @param {String} zip The postal code of this financial institution.\n */\nProfileResponse.prototype.setZip = function(zip) {\n  this.zip = zip;\n};\n\n\n/**\n * The country code for this financial institution.\n *\n * @return {String} The country code for this financial institution.\n * @see java.util.Locale#getISO3Country()\n */\nProfileResponse.prototype.getCountry = function() {\n  return this.country;\n};\nElement.add(ProfileResponse, {name: \"COUNTRY\", required: true, order: 100, attributeType: String, readMethod: \"getCountry\", writeMethod: \"setCountry\"});\n\n\n/**\n * The country code for this financial institution.\n *\n * @param {String} country The country code for this financial institution.\n */\nProfileResponse.prototype.setCountry = function(country) {\n  this.country = country;\n};\n\n\n/**\n * The phone number to customer service.\n *\n * @return {String} The phone number to customer service.\n */\nProfileResponse.prototype.getCustomerServicePhone = function() {\n  return this.customerServicePhone;\n};\nElement.add(ProfileResponse, {name: \"CSPHONE\", order: 110, attributeType: String, readMethod: \"getCustomerServicePhone\", writeMethod: \"setCustomerServicePhone\"});\n\n\n/**\n * The phone number to customer service.\n *\n * @param {String} customerServicePhone The phone number to customer service.\n */\nProfileResponse.prototype.setCustomerServicePhone = function(customerServicePhone) {\n  this.customerServicePhone = customerServicePhone;\n};\n\n\n/**\n * The phone number to tech support.\n *\n * @return {String} The phone number to tech support.\n */\nProfileResponse.prototype.getTechnicalSupportPhone = function() {\n  return this.technicalSupportPhone;\n};\nElement.add(ProfileResponse, {name: \"TSPHONE\", order: 120, attributeType: String, readMethod: \"getTechnicalSupportPhone\", writeMethod: \"setTechnicalSupportPhone\"});\n\n\n/**\n * The phone number to tech support.\n *\n * @param {String} technicalSupportPhone The phone number to tech support.\n */\nProfileResponse.prototype.setTechnicalSupportPhone = function(technicalSupportPhone) {\n  this.technicalSupportPhone = technicalSupportPhone;\n};\n\n\n/**\n * The fax number.\n *\n * @return {String} The fax number.\n */\nProfileResponse.prototype.getFax = function() {\n  return this.fax;\n};\nElement.add(ProfileResponse, {name: \"FAXPHONE\", order: 130, attributeType: String, readMethod: \"getFax\", writeMethod: \"setFax\"});\n\n\n/**\n * The fax number.\n *\n * @param {String} fax The fax number.\n */\nProfileResponse.prototype.setFax = function(fax) {\n  this.fax = fax;\n};\n\n\n/**\n * URL for the financial institution.\n *\n * @return {String} URL for the financial institution.\n */\nProfileResponse.prototype.getSiteURL = function() {\n  return this.siteURL;\n};\nElement.add(ProfileResponse, {name: \"URL\", order: 140, attributeType: String, readMethod: \"getSiteURL\", writeMethod: \"setSiteURL\"});\n\n\n/**\n * URL for the financial institution.\n *\n * @param {String} siteURL URL for the financial institution.\n */\nProfileResponse.prototype.setSiteURL = function(siteURL) {\n  this.siteURL = siteURL;\n};\n\n\n/**\n * The email for this FI\n *\n * @return {String} The email for this FI\n */\nProfileResponse.prototype.getEmail = function() {\n  return this.email;\n};\nElement.add(ProfileResponse, {name: \"EMAIL\", order: 150, attributeType: String, readMethod: \"getEmail\", writeMethod: \"setEmail\"});\n\n\n/**\n * The email for this FI\n *\n * @param {String} email The email for this FI\n */\nProfileResponse.prototype.setEmail = function(email) {\n  this.email = email;\n};\n\n\n/**\n * Get all the profiles of the specified type.\n *\n * @param {MessageSetType} type The type.\n * @return {MessageSetProfile[]} The profiles.\n */\nProfileResponse.prototype.getProfiles = function(type) {\n  var profiles = [];\n  if (this.getMessageSetList() && this.getMessageSetList().getInformationList()) {\n    var informationList = this.getMessageSetList().getInformationList();\n    for (var informationListIdx=0; informationListIdx<informationList.length; informationListIdx++) {\n      var info = informationList[informationListIdx];\n      if (info.getVersionSpecificInformationList()) {\n        var versionSpecificInformationList = info.getVersionSpecificInformationList();\n        for (var versionSpecificInformationListIdx=0; versionSpecificInformationListIdx<versionSpecificInformationList.length; versionSpecificInformationListIdx++) {\n          var versionSpecificInfo = versionSpecificInformationList[versionSpecificInformationListIdx];\n          if (versionSpecificInfo.getMessageSetType() == type) {\n            profiles.push(versionSpecificInfo);\n          }\n        }\n      }\n    }\n  }\n  return profiles;\n};\n\n\nProfileResponse.prototype.getMessageSetProfile = function(/*MessageSetType*/ type, /*String*/ version) {\n  var profiles = this.getProfiles(type);\n  if (version) {\n    for (var i=0; i<profiles.length; i++) {\n      var profile = profiles[i];\n      if (!version) {\n        if (!profile.getVersion()) {\n          return profile;\n        }\n      }\n      else if (version === profile.getVersion()) {\n        return profile;\n      }\n    }\n  } else {\n    if (profiles.length > 1) {\n      throw new Error(\"More than one profile of type \" + type);\n    }\n    else if (profiles.length === 0) {\n      return null;\n    }\n    else {\n      return profiles[0];\n    }\n  }\n  \n  return null;\n};\n\n\nProfileResponse.prototype.getSignonProfile = function(/*MessageSetProfile*/ messageSet) {\n  if (this.getSignonInfoList() && this.getSignonInfoList().getInfoList()) {\n    var infoList = this.getSignonInfoList().getInfoList();\n    for (var infoListIdx=0; infoListIdx<infoList.length; infoListIdx++) {\n      var signonInfo = infoList[infoListIdx];\n      if (!messageSet.getRealm()) {\n        if (!signonInfo.getRealm()) {\n          return signonInfo;\n        }\n      }\n      else if (messageSet.getRealm() === signonInfo.getRealm()) {\n        return signonInfo;\n      }\n    }\n  }\n  return null;\n};\n\n\n\n\nmodule.exports = ProfileResponse;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar MessageSetType = require(\"../MessageSetType\");\nvar ResponseMessageSet = require(\"../ResponseMessageSet\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ProfileResponseTransaction = require(\"./ProfileResponseTransaction\");\n\n/**\n * @class\n * @augments ResponseMessageSet\n * See \"Section 7 OFX Spec\"\n */\nfunction ProfileResponseMessageSet () {\n  ResponseMessageSet.call(this);\n\n  /**\n   * @name ProfileResponseMessageSet#profileResponse\n   * @type ProfileResponseTransaction\n   * @access private\n   */\n  this.profileResponse = null;\n}\n\ninherit(ProfileResponseMessageSet, \"extends\", ResponseMessageSet);\n\n\nAggregate.add(\"PROFMSGSRSV1\", ProfileResponseMessageSet);\n\n\nProfileResponseMessageSet.prototype.getType = function() {\n  return MessageSetType.profile;\n};\n\n\n/**\n * The profile response.\n *\n * @return {ProfileResponseTransaction} The profile response.\n */\nProfileResponseMessageSet.prototype.getProfileResponse = function() {\n  return this.profileResponse;\n};\nChildAggregate.add(ProfileResponseMessageSet, {required: true, order: 0, attributeType: ProfileResponseTransaction, readMethod: \"getProfileResponse\", writeMethod: \"setProfileResponse\"});\n\n\n/**\n * The profile response.\n *\n * @param {ProfileResponseTransaction} profileResponse The profile response.\n */\nProfileResponseMessageSet.prototype.setProfileResponse = function(profileResponse) {\n  this.profileResponse = profileResponse;\n};\n\n\n// Inherited.\nProfileResponseMessageSet.prototype.getResponseMessages = function() {\n  var messages = [];\n\n  if (this.getProfileResponse()) {\n    messages.push(this.getProfileResponse());\n  }\n\n  return messages;\n};\n\n\n\n\nmodule.exports = ProfileResponseMessageSet;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar TransactionWrappedResponseMessage = require(\"../TransactionWrappedResponseMessage\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ProfileResponse = require(\"./ProfileResponse\");\n\n/**\n * @class\n * @augments TransactionWrappedResponseMessage\n */\nfunction ProfileResponseTransaction () {\n  TransactionWrappedResponseMessage.call(this);\n\n  /**\n   * @name ProfileResponseTransaction#message\n   * @type ProfileResponse\n   * @access private\n   */\n  this.message = null;\n}\n\ninherit(ProfileResponseTransaction, \"extends\", TransactionWrappedResponseMessage);\n\n\nAggregate.add(\"PROFTRNRS\", ProfileResponseTransaction);\n\n\n/**\n * The message.\n *\n * @return {ProfileResponse} The message.\n */\nProfileResponseTransaction.prototype.getMessage = function() {\n  return this.message;\n};\nChildAggregate.add(ProfileResponseTransaction, {required: true, order: 30, attributeType: ProfileResponse, readMethod: \"getMessage\", writeMethod: \"setMessage\"});\n\n\n/**\n * The message.\n *\n * @param {ProfileResponse} message The message.\n */\nProfileResponseTransaction.prototype.setMessage = function(message) {\n  this.message = message;\n};\n\n\n// Inherited.\nProfileResponseTransaction.prototype.getWrappedMessage = function() {\n  return this.getMessage();\n};\n\n\n\n\nmodule.exports = ProfileResponseTransaction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar Element = require(\"../../../meta/Element\");\nvar SignonProfile = require(\"../SignonProfile\");\nvar CharacterType = require(\"./CharacterType\");\n\n/**\n * Sign-on information\n *\n * @class\n * @augments SignonProfile\n * See \"Section 7.2.2, OFX Spec\"\n */\nfunction SignonInfo () {\n\n  /**\n   * @name SignonInfo#realm\n   * @type String\n   * @access private\n   */\n  this.realm = null;\n\n  /**\n   * @name SignonInfo#minPasswordCharacters\n   * @type Integer\n   * @access private\n   */\n  this.minPasswordCharacters = null;\n\n  /**\n   * @name SignonInfo#maxPasswordCharacters\n   * @type Integer\n   * @access private\n   */\n  this.maxPasswordCharacters = null;\n\n  /**\n   * @name SignonInfo#passwordCharacterType\n   * @type CharacterType\n   * @access private\n   */\n  this.passwordCharacterType = null;\n\n  /**\n   * @name SignonInfo#passwordCaseSensitive\n   * @type Boolean\n   * @access private\n   */\n  this.passwordCaseSensitive = true;\n\n  /**\n   * @name SignonInfo#passwordSpecialCharsAllowed\n   * @type Boolean\n   * @access private\n   */\n  this.passwordSpecialCharsAllowed = true;\n\n  /**\n   * @name SignonInfo#passwordSpacesAllowed\n   * @type Boolean\n   * @access private\n   */\n  this.passwordSpacesAllowed = true;\n\n  /**\n   * @name SignonInfo#changePasswordSupported\n   * @type Boolean\n   * @access private\n   */\n  this.changePasswordSupported = null;\n\n  /**\n   * @name SignonInfo#changePasswordFirstRequired\n   * @type Boolean\n   * @access private\n   */\n  this.changePasswordFirstRequired = null;\n\n  /**\n   * @name SignonInfo#additionalCredientialsLabel1\n   * @type String\n   * @access private\n   */\n  this.additionalCredientialsLabel1 = null;\n\n  /**\n   * @name SignonInfo#additionalCredientialsLabel2\n   * @type String\n   * @access private\n   */\n  this.additionalCredientialsLabel2 = null;\n\n  /**\n   * @name SignonInfo#clientUIDRequired\n   * @type Boolean\n   * @access private\n   */\n  this.clientUIDRequired = null;\n\n  /**\n   * @name SignonInfo#authTokenRequiredForFirstSignon\n   * @type Boolean\n   * @access private\n   */\n  this.authTokenRequiredForFirstSignon = null;\n\n  /**\n   * @name SignonInfo#authTokenLabel\n   * @type String\n   * @access private\n   */\n  this.authTokenLabel = null;\n\n  /**\n   * @name SignonInfo#authTokenInfoURL\n   * @type String\n   * @access private\n   */\n  this.authTokenInfoURL = null;\n\n  /**\n   * @name SignonInfo#mfaSupported\n   * @type Boolean\n   * @access private\n   */\n  this.mfaSupported = null;\n\n  /**\n   * @name SignonInfo#mfaChallengeRequiredForFirstSignon\n   * @type Boolean\n   * @access private\n   */\n  this.mfaChallengeRequiredForFirstSignon = null;\n}\n\ninherit(SignonInfo, \"implements\", SignonProfile);\n\n\nAggregate.add(\"SIGNONINFO\", SignonInfo);\n\n\n/**\n * The name of the sign-on realm.\n *\n * @return {String} The name of the sign-on realm.\n */\nSignonInfo.prototype.getRealm = function() {\n  return this.realm;\n};\nElement.add(SignonInfo, {name: \"SIGNONREALM\", required: true, order: 0, attributeType: String, readMethod: \"getRealm\", writeMethod: \"setRealm\"});\n\n\n/**\n * The name of the sign-on realm.\n *\n * @param {String} realm The name of the sign-on realm.\n */\nSignonInfo.prototype.setRealm = function(realm) {\n  this.realm = realm;\n};\n\n\n/**\n * The minimum number of password characters.\n *\n * @return {Integer} The minimum number of password characters.\n */\nSignonInfo.prototype.getMinPasswordCharacters = function() {\n  return this.minPasswordCharacters;\n};\nElement.add(SignonInfo, {name: \"MIN\", required: true, order: 10, attributeType: Number, readMethod: \"getMinPasswordCharacters\", writeMethod: \"setMinPasswordCharacters\"});\n\n\n/**\n * The minimum number of password characters.\n *\n * @param {Integer} minPasswordCharacters The minimum number of password characters.\n */\nSignonInfo.prototype.setMinPasswordCharacters = function(minPasswordCharacters) {\n  this.minPasswordCharacters = minPasswordCharacters;\n};\n\n\n/**\n * The maximum number of password characters.\n *\n * @return {Integer} The maximum number of password characters.\n */\nSignonInfo.prototype.getMaxPasswordCharacters = function() {\n  return this.maxPasswordCharacters;\n};\nElement.add(SignonInfo, {name: \"MAX\", required: true, order: 20, attributeType: Number, readMethod: \"getMaxPasswordCharacters\", writeMethod: \"setMaxPasswordCharacters\"});\n\n\n/**\n * The maximum number of password characters.\n *\n * @param {Integer} maxPasswordCharacters The maximum number of password characters.\n */\nSignonInfo.prototype.setMaxPasswordCharacters = function(maxPasswordCharacters) {\n  this.maxPasswordCharacters = maxPasswordCharacters;\n};\n\n\n/**\n * The type of password characters supported.\n *\n * @return {CharacterType} The type of password characters supported.\n */\nSignonInfo.prototype.getPasswordCharacterType = function() {\n  return this.passwordCharacterType;\n};\nElement.add(SignonInfo, {name: \"CHARTYPE\", required: true, order: 30, attributeType: CharacterType, readMethod: \"getPasswordCharacterType\", writeMethod: \"setPasswordCharacterType\"});\n\n\n/**\n * The type of password characters supported.\n *\n * @param {CharacterType} passwordCharacterType The type of password characters supported.\n */\nSignonInfo.prototype.setPasswordCharacterType = function(passwordCharacterType) {\n  this.passwordCharacterType = passwordCharacterType;\n};\n\n\n/**\n * Whether the password is case-sensitive.\n *\n * @return {Boolean} Whether the password is case-sensitive.\n */\nSignonInfo.prototype.getPasswordCaseSensitive = function() {\n  return this.passwordCaseSensitive;\n};\nElement.add(SignonInfo, {name: \"CASESEN\", required: true, order: 40, attributeType: Boolean, readMethod: \"getPasswordCaseSensitive\", writeMethod: \"setPasswordCaseSensitive\"});\n\n\n/**\n * Whether the password is case-sensitive.\n *\n * @param {Boolean} passwordCaseSensitive Whether the password is case-sensitive.\n */\nSignonInfo.prototype.setPasswordCaseSensitive = function(passwordCaseSensitive) {\n  this.passwordCaseSensitive = passwordCaseSensitive;\n};\n\n\n/**\n * Whether special characters are allowed in the password.\n *\n * @return {Boolean} Whether special characters are allowed in the password.\n */\nSignonInfo.prototype.getPasswordSpecialCharsAllowed = function() {\n  return this.passwordSpecialCharsAllowed;\n};\nElement.add(SignonInfo, {name: \"SPECIAL\", required: true, order: 50, attributeType: Boolean, readMethod: \"getPasswordSpecialCharsAllowed\", writeMethod: \"setPasswordSpecialCharsAllowed\"});\n\n\n/**\n * Whether special characters are allowed in the password.\n *\n * @param {Boolean} passwordSpecialCharsAllowed Whether special characters are allowed in the password.\n */\nSignonInfo.prototype.setPasswordSpecialCharsAllowed = function(passwordSpecialCharsAllowed) {\n  this.passwordSpecialCharsAllowed = passwordSpecialCharsAllowed;\n};\n\n\n/**\n * Whether spaces are allowed in the password.\n *\n * @return {Boolean} Whether spaces are allowed in the password.\n */\nSignonInfo.prototype.getPasswordSpacesAllowed = function() {\n  return this.passwordSpacesAllowed;\n};\nElement.add(SignonInfo, {name: \"SPACES\", required: true, order: 60, attributeType: Boolean, readMethod: \"getPasswordSpacesAllowed\", writeMethod: \"setPasswordSpacesAllowed\"});\n\n\n/**\n * Whether spaces are allowed in the password.\n *\n * @param {Boolean} passwordSpacesAllowed Whether spaces are allowed in the password.\n */\nSignonInfo.prototype.setPasswordSpacesAllowed = function(passwordSpacesAllowed) {\n  this.passwordSpacesAllowed = passwordSpacesAllowed;\n};\n\n\n/**\n * Whether the server can process a password change request for this realm.\n *\n * @return {Boolean} Whether the server can process a password change request for this realm.\n */\nSignonInfo.prototype.getChangePasswordSupported = function() {\n  return this.changePasswordSupported;\n};\nElement.add(SignonInfo, {name: \"PINCH\", required: true, order: 70, attributeType: Boolean, readMethod: \"getChangePasswordSupported\", writeMethod: \"setChangePasswordSupported\"});\n\n\n/**\n * Whether the server can process a password change request for this realm.\n *\n * @param {Boolean} changePasswordSupported Whether the server can process a password change request for this realm.\n */\nSignonInfo.prototype.setChangePasswordSupported = function(changePasswordSupported) {\n  this.changePasswordSupported = changePasswordSupported;\n};\n\n\n/**\n * Whether the server requires the user to change their password as part of their first signon.\n *\n * @return {Boolean} Whether the server requires the user to change their password as part of their first signon.\n */\nSignonInfo.prototype.getChangePasswordFirstRequired = function() {\n  return this.changePasswordFirstRequired;\n};\nElement.add(SignonInfo, {name: \"CHGPINFIRST\", required: true, order: 80, attributeType: Boolean, readMethod: \"getChangePasswordFirstRequired\", writeMethod: \"setChangePasswordFirstRequired\"});\n\n\n/**\n * Whether the server requires the user to change their password as part of their first signon.\n *\n * @param {Boolean} changePasswordFirstRequired Whether the server requires the user to change their password as part of their first signon.\n */\nSignonInfo.prototype.setChangePasswordFirstRequired = function(changePasswordFirstRequired) {\n  this.changePasswordFirstRequired = changePasswordFirstRequired;\n};\n\n\n/**\n * Label for a set of additional credentials that the user must supply.\n *\n * @return {String} Label for a set of additional credentials that the user must supply.\n */\nSignonInfo.prototype.getAdditionalCredientialsLabel1 = function() {\n  return this.additionalCredientialsLabel1;\n};\nElement.add(SignonInfo, {name: \"USERCRED1LABEL\", order: 90, attributeType: String, readMethod: \"getAdditionalCredientialsLabel1\", writeMethod: \"setAdditionalCredientialsLabel1\"});\n\n\n/**\n * Label for a set of additional credentials that the user must supply.\n *\n * @param {String} additionalCredientialsLabel1 Label for a set of additional credentials that the user must supply.\n */\nSignonInfo.prototype.setAdditionalCredientialsLabel1 = function(additionalCredientialsLabel1) {\n  this.additionalCredientialsLabel1 = additionalCredientialsLabel1;\n};\n\n\n/**\n * Label for a set of additional credentials that the user must supply.\n *\n * @return {String} Label for a set of additional credentials that the user must supply.\n */\nSignonInfo.prototype.getAdditionalCredientialsLabel2 = function() {\n  return this.additionalCredientialsLabel2;\n};\nElement.add(SignonInfo, {name: \"USERCRED2LABEL\", order: 100, attributeType: String, readMethod: \"getAdditionalCredientialsLabel2\", writeMethod: \"setAdditionalCredientialsLabel2\"});\n\n\n/**\n * Label for a set of additional credentials that the user must supply.\n *\n * @param {String} additionalCredientialsLabel2 Label for a set of additional credentials that the user must supply.\n */\nSignonInfo.prototype.setAdditionalCredientialsLabel2 = function(additionalCredientialsLabel2) {\n  this.additionalCredientialsLabel2 = additionalCredientialsLabel2;\n};\n\n\n/**\n * Whether a client UID is required for teh sign-on.\n *\n * @return {Boolean} Whether a client UID is required for teh sign-on.\n */\nSignonInfo.prototype.getClientUIDRequired = function() {\n  return this.clientUIDRequired;\n};\nElement.add(SignonInfo, {name: \"CLIENTUIDREQ\", order: 110, attributeType: Boolean, readMethod: \"getClientUIDRequired\", writeMethod: \"setClientUIDRequired\"});\n\n\n/**\n * Whether a client UID is required for teh sign-on.\n *\n * @param {Boolean} clientUIDRequired Whether a client UID is required for teh sign-on.\n */\nSignonInfo.prototype.setClientUIDRequired = function(clientUIDRequired) {\n  this.clientUIDRequired = clientUIDRequired;\n};\n\n\n/**\n * Whether an auth token is required for the sign-on.\n *\n * @return {Boolean} Whether an auth token is required for the sign-on.\n */\nSignonInfo.prototype.getAuthTokenRequiredForFirstSignon = function() {\n  return this.authTokenRequiredForFirstSignon;\n};\nElement.add(SignonInfo, {name: \"AUTHTOKENFIRST\", order: 120, attributeType: Boolean, readMethod: \"getAuthTokenRequiredForFirstSignon\", writeMethod: \"setAuthTokenRequiredForFirstSignon\"});\n\n\n/**\n * Whether an auth token is required for the sign-on.\n *\n * @param {Boolean} authTokenRequiredForFirstSignon\n *         Whether an auth token is required for the sign-on.\n */\nSignonInfo.prototype.setAuthTokenRequiredForFirstSignon = function(authTokenRequiredForFirstSignon) {\n  this.authTokenRequiredForFirstSignon = authTokenRequiredForFirstSignon;\n};\n\n\n/**\n * The label of the auth token.\n *\n * @return {String} The label of the auth token.\n */\nSignonInfo.prototype.getAuthTokenLabel = function() {\n  return this.authTokenLabel;\n};\nElement.add(SignonInfo, {name: \"AUTHTOKENLABEL\", order: 130, attributeType: String, readMethod: \"getAuthTokenLabel\", writeMethod: \"setAuthTokenLabel\"});\n\n\n/**\n * The label of the auth token.\n *\n * @param {String} authTokenLabel The label of the auth token.\n */\nSignonInfo.prototype.setAuthTokenLabel = function(authTokenLabel) {\n  this.authTokenLabel = authTokenLabel;\n};\n\n\n/**\n * The URL for the auth token information.\n *\n * @return {String} The URL for the auth token information.\n */\nSignonInfo.prototype.getAuthTokenInfoURL = function() {\n  return this.authTokenInfoURL;\n};\nElement.add(SignonInfo, {name: \"AUTHTOKENINFOURL\", order: 140, attributeType: String, readMethod: \"getAuthTokenInfoURL\", writeMethod: \"setAuthTokenInfoURL\"});\n\n\n/**\n * The URL for the auth token information.\n *\n * @param {String} authTokenInfoURL The URL for the auth token information.\n */\nSignonInfo.prototype.setAuthTokenInfoURL = function(authTokenInfoURL) {\n  this.authTokenInfoURL = authTokenInfoURL;\n};\n\n\n/**\n * Whether MFA is supported.\n *\n * @return {Boolean} Whether MFA is supported.\n */\nSignonInfo.prototype.getMfaSupported = function() {\n  return this.mfaSupported;\n};\nElement.add(SignonInfo, {name: \"MFACHALLENGESUPT\", order: 150, attributeType: Boolean, readMethod: \"getMfaSupported\", writeMethod: \"setMfaSupported\"});\n\n\n/**\n * Whether MFA is supported.\n *\n * @param {Boolean} mfaSupported Whether MFA is supported.\n */\nSignonInfo.prototype.setMfaSupported = function(mfaSupported) {\n  this.mfaSupported = mfaSupported;\n};\n\n\n/**\n * Whether an MFA challenge request is required for the first sign-on into this realm.\n *\n * @return {Boolean} Whether an MFA challenge request is required for the first sign-on into this realm.\n */\nSignonInfo.prototype.getMfaChallengeRequiredForFirstSignon = function() {\n  return this.mfaChallengeRequiredForFirstSignon;\n};\nElement.add(SignonInfo, {name: \"MFACHALLENGEFIRST\", order: 160, attributeType: Boolean, readMethod: \"getMfaChallengeRequiredForFirstSignon\", writeMethod: \"setMfaChallengeRequiredForFirstSignon\"});\n\n\n/**\n * Whether an MFA challenge request is required for the first sign-on into this realm.\n *\n * @param {Boolean} mfaChallengeRequiredForFirstSignon\n *         Whether an MFA challenge request is required for the first sign-on into this realm.\n */\nSignonInfo.prototype.setMfaChallengeRequiredForFirstSignon = function(mfaChallengeRequiredForFirstSignon) {\n  this.mfaChallengeRequiredForFirstSignon = mfaChallengeRequiredForFirstSignon;\n};\n\n\n\n\nmodule.exports = SignonInfo;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar SignonInfo = require(\"./SignonInfo\");\n\n/**\n * List of signon information.\n *\n * @class\n * See \"Section 7.2.2, OFX Spec\"\n */\nfunction SignonInfoList () {\n\n  /**\n   * @name SignonInfoList#infoList\n   * @type SignonInfo[]\n   * @access private\n   */\n  this.infoList = null;\n}\n\n\n\nAggregate.add(\"SIGNONINFOLIST\", SignonInfoList);\n\n\n/**\n * List of sign-on information.\n *\n * @return {SignonInfo[]} List of sign-on information.\n */\nSignonInfoList.prototype.getInfoList = function() {\n  return this.infoList;\n};\nChildAggregate.add(SignonInfoList, {order: 0, attributeType: Array, collectionEntryType: SignonInfo, readMethod: \"getInfoList\", writeMethod: \"setInfoList\"});\n\n\n/**\n * List of sign-on information.\n *\n * @param {SignonInfo[]} infoList List of sign-on information.\n */\nSignonInfoList.prototype.setInfoList = function(infoList) {\n  this.infoList = infoList;\n};\n\n\n\n\nmodule.exports = SignonInfoList;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * @enum\n * See \"Section 7.2.1, OFX Spec\"\n */\nvar SynchronizationCapability = {\n\n  FULL: \"FULL\",\n\n  LITE: \"LITE\"\n};\n\n\nmodule.exports = SynchronizationCapability;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar MessageSetProfile = require(\"../MessageSetProfile\");\nvar CoreMessageSetInfo = require(\"./CoreMessageSetInfo\");\n\n/**\n * Information specific to a version of a message set.\n *\n * @class\n * See \"Section 7.2.1, OFX Spec\"\n */\nfunction VersionSpecificMessageSetInfo () {\n\n  /**\n   * @name VersionSpecificMessageSetInfo#core\n   * @type CoreMessageSetInfo\n   * @access private\n   */\n  this.core = null;\n}\n\ninherit(VersionSpecificMessageSetInfo, \"implements\", MessageSetProfile);\n\n\n\n\n/**\n * The information core.\n *\n * @return {CoreMessageSetInfo} The information core.\n */\nVersionSpecificMessageSetInfo.prototype.getCore = function() {\n  return this.core;\n};\nChildAggregate.add(VersionSpecificMessageSetInfo, {order: 0, attributeType: CoreMessageSetInfo, readMethod: \"getCore\", writeMethod: \"setCore\"});\n\n\n/**\n * The information core.\n *\n * @param {CoreMessageSetInfo} core The information core.\n */\nVersionSpecificMessageSetInfo.prototype.setCore = function(core) {\n  this.core = core;\n};\n\n\n/**\n * The message set type.\n *\n * @return {MessageSetType} The message set type.\n */\nVersionSpecificMessageSetInfo.prototype.getMessageSetType = function() { throw new Error(\"not implemented\"); };\n\nVersionSpecificMessageSetInfo.prototype.getVersion = function() {\n  return this.core ? this.core.getVersion() : null;\n};\n\nVersionSpecificMessageSetInfo.prototype.getServiceProviderName = function() {\n  return this.core ? this.core.getServiceProviderName() : null;\n};\n\nVersionSpecificMessageSetInfo.prototype.getUrl = function() {\n  return this.core ? this.core.getUrl() : null;\n};\n\nVersionSpecificMessageSetInfo.prototype.getSecurity = function() {\n  return this.core ? this.core.getSecurity() : null;\n};\n\nVersionSpecificMessageSetInfo.prototype.isSslRequired = function() {\n  return this.core && this.core.getSslRequired() ? this.core.getSslRequired() : true;\n};\n\nVersionSpecificMessageSetInfo.prototype.getRealm = function() {\n  return this.core ? this.core.getRealm() : null;\n};\n\nVersionSpecificMessageSetInfo.prototype.getLanguage = function() {\n  return this.core ? this.core.getLanguage() : null;\n};\n\nVersionSpecificMessageSetInfo.prototype.getSyncCapability = function() {\n  return this.core ? this.core.getSyncCapability() : null;\n};\n\nVersionSpecificMessageSetInfo.prototype.hasFileBasedErrorRecoverySupport = function() {\n  return this.core && this.core.getFileBasedErrorRecoverySupport() ? this.core.getFileBasedErrorRecoverySupport() : false;\n};\n\n\n\n\nmodule.exports = VersionSpecificMessageSetInfo;\n","\"use strict\";\n\nmodule.exports = {\n  info: require(\"./info/index\"),\n  AbstractMessageSetInfo: require(\"./AbstractMessageSetInfo\"),\n  CharacterType: require(\"./CharacterType\"),\n  ClientRoutingCapability: require(\"./ClientRoutingCapability\"),\n  CoreMessageSetInfo: require(\"./CoreMessageSetInfo\"),\n  MessageSetInfoList: require(\"./MessageSetInfoList\"),\n  ProfileRequest: require(\"./ProfileRequest\"),\n  ProfileRequestMessageSet: require(\"./ProfileRequestMessageSet\"),\n  ProfileRequestTransaction: require(\"./ProfileRequestTransaction\"),\n  ProfileResponse: require(\"./ProfileResponse\"),\n  ProfileResponseMessageSet: require(\"./ProfileResponseMessageSet\"),\n  ProfileResponseTransaction: require(\"./ProfileResponseTransaction\"),\n  SignonInfo: require(\"./SignonInfo\"),\n  SignonInfoList: require(\"./SignonInfoList\"),\n  SynchronizationCapability: require(\"./SynchronizationCapability\"),\n  VersionSpecificMessageSetInfo: require(\"./VersionSpecificMessageSetInfo\"),\n};\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar AbstractMessageSetInfo = require(\"../../profile/AbstractMessageSetInfo\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../../meta/ChildAggregate\");\nvar BankingV1MessageSetInfo = require(\"./BankingV1MessageSetInfo\");\n\n/**\n * @class\n * @augments AbstractMessageSetInfo\n */\nfunction BankingMessageSetInfo () {\n  AbstractMessageSetInfo.call(this);\n\n  /**\n   * @name BankingMessageSetInfo#version1Info\n   * @type BankingV1MessageSetInfo\n   * @access private\n   */\n  this.version1Info = null;\n}\n\ninherit(BankingMessageSetInfo, \"extends\", AbstractMessageSetInfo);\n\n\nAggregate.add(\"BANKMSGSET\", BankingMessageSetInfo);\n\n\nBankingMessageSetInfo.prototype.getVersion1Info = function() {\n  return this.version1Info;\n};\nChildAggregate.add(BankingMessageSetInfo, {order: 0, attributeType: BankingV1MessageSetInfo, readMethod: \"getVersion1Info\", writeMethod: \"setVersion1Info\"});\n\n\nBankingMessageSetInfo.prototype.setVersion1Info = function(/*BankingV1MessageSetInfo*/ version1Info) {\n  this.version1Info = version1Info;\n};\n\n\n\n\nmodule.exports = BankingMessageSetInfo;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar VersionSpecificMessageSetInfo = require(\"../VersionSpecificMessageSetInfo\");\nvar MessageSetType = require(\"../../MessageSetType\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../../meta/ChildAggregate\");\nvar Element = require(\"../../../../meta/Element\");\nvar AccountType = require(\"../../banking/AccountType\");\nvar TransferProfile = require(\"./common/TransferProfile\");\nvar StopCheckProfile = require(\"./banking/StopCheckProfile\");\nvar EmailProfile = require(\"./banking/EmailProfile\");\nvar ImageProfile = require(\"./common/ImageProfile\");\n\n/**\n * Banking Message Set Profile\n * @class\n * @augments VersionSpecificMessageSetInfo\n * See \"Section 11.13.2.1 OFX Spec\"\n */\nfunction BankingV1MessageSetInfo () {\n  VersionSpecificMessageSetInfo.call(this);\n\n  /**\n   * @name BankingV1MessageSetInfo#invalidAccountTypes\n   * @type AccountType[]\n   * @access private\n   */\n  this.invalidAccountTypes = null;\n\n  /**\n   * @name BankingV1MessageSetInfo#closingAvail\n   * @type Boolean\n   * @access private\n   */\n  this.closingAvail = null;\n\n  /**\n   * @name BankingV1MessageSetInfo#transferProfile\n   * @type TransferProfile\n   * @access private\n   */\n  this.transferProfile = null;\n\n  /**\n   * @name BankingV1MessageSetInfo#stopCheckProfile\n   * @type StopCheckProfile\n   * @access private\n   */\n  this.stopCheckProfile = null;\n\n  /**\n   * @name BankingV1MessageSetInfo#emailProfile\n   * @type EmailProfile\n   * @access private\n   */\n  this.emailProfile = null;\n\n  /**\n   * @name BankingV1MessageSetInfo#imageProfile\n   * @type ImageProfile\n   * @access private\n   */\n  this.imageProfile = null;\n}\n\ninherit(BankingV1MessageSetInfo, \"extends\", VersionSpecificMessageSetInfo);\n\n\nAggregate.add(\"BANKMSGSETV1\", BankingV1MessageSetInfo);\n\n\nBankingV1MessageSetInfo.prototype.getMessageSetType = function() {\n  return MessageSetType.banking;\n};\n\n\n/**\n * The invalidAccountTypes list.\n *\n * @return {AccountType[]} The invalidAccountTypes list.\n */\nBankingV1MessageSetInfo.prototype.getInvalidAccountTypes = function() {\n  return this.invalidAccountTypes;\n};\nChildAggregate.add(BankingV1MessageSetInfo, {order: 10, attributeType: Array, collectionEntryType: AccountType, readMethod: \"getInvalidAccountTypes\", writeMethod: \"setInvalidAccountTypes\"});\n\n\n/**\n * The invalidAccountTypes list.\n *\n * @param {AccountType[]} invalidAccountTypes The invalidAccountTypes list.\n */\nBankingV1MessageSetInfo.prototype.setInvalidAccountTypes = function(invalidAccountTypes) {\n  this.invalidAccountTypes = invalidAccountTypes;\n};\n\n\n/**\n * Gets whether closing statement information is available\n *\n * @return {Boolean} whether closing statement information is available\n */\nBankingV1MessageSetInfo.prototype.getClosingAvail = function() {\n  return this.closingAvail;\n};\nElement.add(BankingV1MessageSetInfo, {name: \"CLOSINGAVAIL\", required: true, order: 20, attributeType: Boolean, readMethod: \"getClosingAvail\", writeMethod: \"setClosingAvail\"});\n\n\n/**\n * Sets whether closing statement information is available\n *\n * @param {Boolean} closingAvail whether closing statement information is available\n */\nBankingV1MessageSetInfo.prototype.setClosingAvail = function(closingAvail) {\n  this.closingAvail = closingAvail;\n};\n\n\nBankingV1MessageSetInfo.prototype.getTransferProfile = function() {\n  return this.transferProfile;\n};\nChildAggregate.add(BankingV1MessageSetInfo, {name: \"XFERPROF\", order: 30, attributeType: TransferProfile, readMethod: \"getTransferProfile\", writeMethod: \"setTransferProfile\"});\n\n\nBankingV1MessageSetInfo.prototype.setTransferProfile = function(/*TransferProfile*/ transferProfile) {\n  this.transferProfile = transferProfile;\n};\n\n\nBankingV1MessageSetInfo.prototype.getStopCheckProfile = function() {\n  return this.stopCheckProfile;\n};\nChildAggregate.add(BankingV1MessageSetInfo, {name: \"STPCKPROF\", order: 40, attributeType: StopCheckProfile, readMethod: \"getStopCheckProfile\", writeMethod: \"setStopCheckProfile\"});\n\n\nBankingV1MessageSetInfo.prototype.setStopCheckProfile = function(/*StopCheckProfile*/ stopCheckProfile) {\n  this.stopCheckProfile = stopCheckProfile;\n};\n\n\nBankingV1MessageSetInfo.prototype.getEmailProfile = function() {\n  return this.emailProfile;\n};\nChildAggregate.add(BankingV1MessageSetInfo, {name: \"EMAILPROF\", required: true, order: 50, attributeType: EmailProfile, readMethod: \"getEmailProfile\", writeMethod: \"setEmailProfile\"});\n\n\nBankingV1MessageSetInfo.prototype.setEmailProfile = function(/*EmailProfile*/ emailProfile) {\n  this.emailProfile = emailProfile;\n};\n\n\nBankingV1MessageSetInfo.prototype.getImageProfile = function() {\n  return this.imageProfile;\n};\nChildAggregate.add(BankingV1MessageSetInfo, {name: \"IMAGEPROF\", order: 60, attributeType: ImageProfile, readMethod: \"getImageProfile\", writeMethod: \"setImageProfile\"});\n\n\nBankingV1MessageSetInfo.prototype.setImageProfile = function(/*ImageProfile*/ imageProfile) {\n  this.imageProfile = imageProfile;\n};\n\n\n\n\nmodule.exports = BankingV1MessageSetInfo;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar AbstractMessageSetInfo = require(\"../../profile/AbstractMessageSetInfo\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../../meta/ChildAggregate\");\nvar BillpayV1MessageSetInfo = require(\"./BillpayV1MessageSetInfo\");\n\n/**\n * @class\n * @augments AbstractMessageSetInfo\n */\nfunction BillpayMessageSetInfo () {\n  AbstractMessageSetInfo.call(this);\n\n  /**\n   * @name BillpayMessageSetInfo#version1Info\n   * @type BillpayV1MessageSetInfo\n   * @access private\n   */\n  this.version1Info = null;\n}\n\ninherit(BillpayMessageSetInfo, \"extends\", AbstractMessageSetInfo);\n\n\nAggregate.add(\"BILLPAYMSGSET\", BillpayMessageSetInfo);\n\n\nBillpayMessageSetInfo.prototype.getVersion1Info = function() {\n  return this.version1Info;\n};\nChildAggregate.add(BillpayMessageSetInfo, {order: 0, attributeType: BillpayV1MessageSetInfo, readMethod: \"getVersion1Info\", writeMethod: \"setVersion1Info\"});\n\n\nBillpayMessageSetInfo.prototype.setVersion1Info = function(/*BillpayV1MessageSetInfo*/ version1Info) {\n  this.version1Info = version1Info;\n};\n\n\n\n\nmodule.exports = BillpayMessageSetInfo;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar VersionSpecificMessageSetInfo = require(\"../../profile/VersionSpecificMessageSetInfo\");\nvar MessageSetType = require(\"../../MessageSetType\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar Element = require(\"../../../../meta/Element\");\nvar ProcessorDayOff = require(\"../../common/ProcessorDayOff\");\n\n/**\n * BillPay Message Set Profile\n * @class\n * @augments VersionSpecificMessageSetInfo\n * See \"Section 12.11.2 OFX Spec\"\n */\nfunction BillpayV1MessageSetInfo () {\n  VersionSpecificMessageSetInfo.call(this);\n\n  /**\n   * @name BillpayV1MessageSetInfo#daysWith\n   * @type Integer\n   * @access private\n   */\n  this.daysWith = null;\n\n  /**\n   * @name BillpayV1MessageSetInfo#defaultDaysToPay\n   * @type Integer\n   * @access private\n   */\n  this.defaultDaysToPay = null;\n\n  /**\n   * @name BillpayV1MessageSetInfo#transferDaysWith\n   * @type Integer\n   * @access private\n   */\n  this.transferDaysWith = null;\n\n  /**\n   * @name BillpayV1MessageSetInfo#transferDefaultDaysToPay\n   * @type Integer\n   * @access private\n   */\n  this.transferDefaultDaysToPay = null;\n\n  /**\n   * @name BillpayV1MessageSetInfo#processorDaysOff\n   * @type ProcessorDayOff[]\n   * @access private\n   */\n  this.processorDaysOff = null;\n\n  /**\n   * @name BillpayV1MessageSetInfo#processorEndTime\n   * @type String\n   * @access private\n   */\n  this.processorEndTime = null;\n\n  /**\n   * @name BillpayV1MessageSetInfo#modelWindow\n   * @type Integer\n   * @access private\n   */\n  this.modelWindow = null;\n\n  /**\n   * @name BillpayV1MessageSetInfo#postProcessorWindow\n   * @type Integer\n   * @access private\n   */\n  this.postProcessorWindow = null;\n\n  /**\n   * @name BillpayV1MessageSetInfo#supportsStatusUpdateViaPaymentModificationResponse\n   * @type Boolean\n   * @access private\n   */\n  this.supportsStatusUpdateViaPaymentModificationResponse = null;\n\n  /**\n   * @name BillpayV1MessageSetInfo#supportsPaymentByAddress\n   * @type Boolean\n   * @access private\n   */\n  this.supportsPaymentByAddress = null;\n\n  /**\n   * @name BillpayV1MessageSetInfo#supportsPaymentByTransfer\n   * @type Boolean\n   * @access private\n   */\n  this.supportsPaymentByTransfer = null;\n\n  /**\n   * @name BillpayV1MessageSetInfo#supportsPaymentByPayeeId\n   * @type Boolean\n   * @access private\n   */\n  this.supportsPaymentByPayeeId = null;\n\n  /**\n   * @name BillpayV1MessageSetInfo#userCanAddPayee\n   * @type Boolean\n   * @access private\n   */\n  this.userCanAddPayee = null;\n\n  /**\n   * @name BillpayV1MessageSetInfo#supportsExtendedPayment\n   * @type Boolean\n   * @access private\n   */\n  this.supportsExtendedPayment = null;\n\n  /**\n   * @name BillpayV1MessageSetInfo#canModifyPayments\n   * @type Boolean\n   * @access private\n   */\n  this.canModifyPayments = null;\n\n  /**\n   * @name BillpayV1MessageSetInfo#canModifyModels\n   * @type Boolean\n   * @access private\n   */\n  this.canModifyModels = null;\n\n  /**\n   * @name BillpayV1MessageSetInfo#supportsDifferentFirstPayment\n   * @type Boolean\n   * @access private\n   */\n  this.supportsDifferentFirstPayment = null;\n\n  /**\n   * @name BillpayV1MessageSetInfo#supportsDifferentLastPayment\n   * @type Boolean\n   * @access private\n   */\n  this.supportsDifferentLastPayment = null;\n\n  /**\n   * @name BillpayV1MessageSetInfo#supportsBillPresentmentContext\n   * @type Boolean\n   * @access private\n   */\n  this.supportsBillPresentmentContext = null;\n}\n\ninherit(BillpayV1MessageSetInfo, \"extends\", VersionSpecificMessageSetInfo);\n\n\nAggregate.add(\"BILLPAYMSGSETV1\", BillpayV1MessageSetInfo);\n\n\nBillpayV1MessageSetInfo.prototype.getMessageSetType = function() {\n  return MessageSetType.payments;\n};\n\n\nBillpayV1MessageSetInfo.prototype.getDaysWith = function() {\n  return this.daysWith;\n};\nElement.add(BillpayV1MessageSetInfo, {name: \"DAYSWITH\", required: true, order: 10, attributeType: Number, readMethod: \"getDaysWith\", writeMethod: \"setDaysWith\"});\n\n\nBillpayV1MessageSetInfo.prototype.setDaysWith = function(/*Integer*/ daysWith) {\n  this.daysWith = daysWith;\n};\n\n\nBillpayV1MessageSetInfo.prototype.getDefaultDaysToPay = function() {\n  return this.defaultDaysToPay;\n};\nElement.add(BillpayV1MessageSetInfo, {name: \"DFLTDAYSTOPAY\", required: true, order: 20, attributeType: Number, readMethod: \"getDefaultDaysToPay\", writeMethod: \"setDefaultDaysToPay\"});\n\n\nBillpayV1MessageSetInfo.prototype.setDefaultDaysToPay = function(/*Integer*/ defaultDaysToPay) {\n  this.defaultDaysToPay = defaultDaysToPay;\n};\n\n\nBillpayV1MessageSetInfo.prototype.getTransferDaysWith = function() {\n  return this.transferDaysWith;\n};\nElement.add(BillpayV1MessageSetInfo, {name: \"XFERDAYSWITH\", required: true, order: 30, attributeType: Number, readMethod: \"getTransferDaysWith\", writeMethod: \"setTransferDaysWith\"});\n\n\nBillpayV1MessageSetInfo.prototype.setTransferDaysWith = function(/*Integer*/ transferDaysWith) {\n  this.transferDaysWith = transferDaysWith;\n};\n\n\nBillpayV1MessageSetInfo.prototype.getTransferDefaultDaysToPay = function() {\n  return this.transferDefaultDaysToPay;\n};\nElement.add(BillpayV1MessageSetInfo, {name: \"XFERDFLTDAYSTOPAY\", required: true, order: 40, attributeType: Number, readMethod: \"getTransferDefaultDaysToPay\", writeMethod: \"setTransferDefaultDaysToPay\"});\n\n\nBillpayV1MessageSetInfo.prototype.setTransferDefaultDaysToPay = function(/*Integer*/ transferDefaultDaysToPay) {\n  this.transferDefaultDaysToPay = transferDefaultDaysToPay;\n};\n\n\nBillpayV1MessageSetInfo.prototype.getProcessorDaysOff = function() {\n  return this.processorDaysOff;\n};\nElement.add(BillpayV1MessageSetInfo, {name: \"PROCDAYSOFF\", order: 50, attributeType: Array, collectionEntryType: ProcessorDayOff, readMethod: \"getProcessorDaysOff\", writeMethod: \"setProcessorDaysOff\"});\n\n\nBillpayV1MessageSetInfo.prototype.setProcessorDaysOff = function(/*ProcessorDayOff[]*/ processorDaysOff) {\n  this.processorDaysOff = processorDaysOff;\n};\n\n\nBillpayV1MessageSetInfo.prototype.getProcessorEndTime = function() {\n  return this.processorEndTime;\n};\nElement.add(BillpayV1MessageSetInfo, {name: \"PROCENDTM\", required: true, order: 60, attributeType: String, readMethod: \"getProcessorEndTime\", writeMethod: \"setProcessorEndTime\"});\n\n\nBillpayV1MessageSetInfo.prototype.setProcessorEndTime = function(/*String*/ processorEndTime) {\n  this.processorEndTime = processorEndTime;\n};\n\n\nBillpayV1MessageSetInfo.prototype.getModelWindow = function() {\n  return this.modelWindow;\n};\nElement.add(BillpayV1MessageSetInfo, {name: \"MODELWND\", required: true, order: 70, attributeType: Number, readMethod: \"getModelWindow\", writeMethod: \"setModelWindow\"});\n\n\nBillpayV1MessageSetInfo.prototype.setModelWindow = function(/*Integer*/ modelWindow) {\n  this.modelWindow = modelWindow;\n};\n\n\nBillpayV1MessageSetInfo.prototype.getPostProcessorWindow = function() {\n  return this.postProcessorWindow;\n};\nElement.add(BillpayV1MessageSetInfo, {name: \"POSTPROCWND\", required: true, order: 80, attributeType: Number, readMethod: \"getPostProcessorWindow\", writeMethod: \"setPostProcessorWindow\"});\n\n\nBillpayV1MessageSetInfo.prototype.setPostProcessorWindow = function(/*Integer*/ postProcessorWindow) {\n  this.postProcessorWindow = postProcessorWindow;\n};\n\n\nBillpayV1MessageSetInfo.prototype.getSupportsStatusUpdateViaPaymentModificationResponse = function() {\n  return this.supportsStatusUpdateViaPaymentModificationResponse;\n};\nElement.add(BillpayV1MessageSetInfo, {name: \"STSVIAMODS\", required: true, order: 90, attributeType: Boolean, readMethod: \"getSupportsStatusUpdateViaPaymentModificationResponse\", writeMethod: \"setSupportsStatusUpdateViaPaymentModificationResponse\"});\n\n\nBillpayV1MessageSetInfo.prototype.setSupportsStatusUpdateViaPaymentModificationResponse = function(/*Boolean*/ supportsStatusUpdateViaPaymentModificationResponse) {\n  this.supportsStatusUpdateViaPaymentModificationResponse = supportsStatusUpdateViaPaymentModificationResponse;\n};\n\n\nBillpayV1MessageSetInfo.prototype.getSupportsPaymentByAddress = function() {\n  return this.supportsPaymentByAddress;\n};\nElement.add(BillpayV1MessageSetInfo, {name: \"PMTBYADDR\", required: true, order: 100, attributeType: Boolean, readMethod: \"getSupportsPaymentByAddress\", writeMethod: \"setSupportsPaymentByAddress\"});\n\n\nBillpayV1MessageSetInfo.prototype.setSupportsPaymentByAddress = function(/*Boolean*/ supportsPaymentByAddress) {\n  this.supportsPaymentByAddress = supportsPaymentByAddress;\n};\n\n\nBillpayV1MessageSetInfo.prototype.getSupportsPaymentByTransfer = function() {\n  return this.supportsPaymentByTransfer;\n};\nElement.add(BillpayV1MessageSetInfo, {name: \"PMTBYXFER\", required: true, order: 110, attributeType: Boolean, readMethod: \"getSupportsPaymentByTransfer\", writeMethod: \"setSupportsPaymentByTransfer\"});\n\n\nBillpayV1MessageSetInfo.prototype.setSupportsPaymentByTransfer = function(/*Boolean*/ supportsPaymentByTransfer) {\n  this.supportsPaymentByTransfer = supportsPaymentByTransfer;\n};\n\n\nBillpayV1MessageSetInfo.prototype.getSupportsPaymentByPayeeId = function() {\n  return this.supportsPaymentByPayeeId;\n};\nElement.add(BillpayV1MessageSetInfo, {name: \"PMTBYPAYEEID\", required: true, order: 120, attributeType: Boolean, readMethod: \"getSupportsPaymentByPayeeId\", writeMethod: \"setSupportsPaymentByPayeeId\"});\n\n\nBillpayV1MessageSetInfo.prototype.setSupportsPaymentByPayeeId = function(/*Boolean*/ supportsPaymentByPayeeId) {\n  this.supportsPaymentByPayeeId = supportsPaymentByPayeeId;\n};\n\n\nBillpayV1MessageSetInfo.prototype.getUserCanAddPayee = function() {\n  return this.userCanAddPayee;\n};\nElement.add(BillpayV1MessageSetInfo, {name: \"CANADDPAYEE\", required: true, order: 130, attributeType: Boolean, readMethod: \"getUserCanAddPayee\", writeMethod: \"setUserCanAddPayee\"});\n\n\nBillpayV1MessageSetInfo.prototype.setUserCanAddPayee = function(/*Boolean*/ userCanAddPayee) {\n  this.userCanAddPayee = userCanAddPayee;\n};\n\n\nBillpayV1MessageSetInfo.prototype.getSupportsExtendedPayment = function() {\n  return this.supportsExtendedPayment;\n};\nElement.add(BillpayV1MessageSetInfo, {name: \"HASEXTDPMT\", required: true, order: 140, attributeType: Boolean, readMethod: \"getSupportsExtendedPayment\", writeMethod: \"setSupportsExtendedPayment\"});\n\n\nBillpayV1MessageSetInfo.prototype.setSupportsExtendedPayment = function(/*Boolean*/ supportsExtendedPayment) {\n  this.supportsExtendedPayment = supportsExtendedPayment;\n};\n\n\nBillpayV1MessageSetInfo.prototype.getCanModifyPayments = function() {\n  return this.canModifyPayments;\n};\nElement.add(BillpayV1MessageSetInfo, {name: \"CANMODPMTS\", required: true, order: 150, attributeType: Boolean, readMethod: \"getCanModifyPayments\", writeMethod: \"setCanModifyPayments\"});\n\n\nBillpayV1MessageSetInfo.prototype.setCanModifyPayments = function(/*Boolean*/ canModifyPayments) {\n  this.canModifyPayments = canModifyPayments;\n};\n\n\nBillpayV1MessageSetInfo.prototype.getCanModifyModels = function() {\n  return this.canModifyModels;\n};\nElement.add(BillpayV1MessageSetInfo, {name: \"CANMODMDLS\", required: true, order: 160, attributeType: Boolean, readMethod: \"getCanModifyModels\", writeMethod: \"setCanModifyModels\"});\n\n\nBillpayV1MessageSetInfo.prototype.setCanModifyModels = function(/*Boolean*/ canModifyModels) {\n  this.canModifyModels = canModifyModels;\n};\n\n\nBillpayV1MessageSetInfo.prototype.getSupportsDifferentFirstPayment = function() {\n  return this.supportsDifferentFirstPayment;\n};\nElement.add(BillpayV1MessageSetInfo, {name: \"DIFFFIRSTPMT\", required: true, order: 170, attributeType: Boolean, readMethod: \"getSupportsDifferentFirstPayment\", writeMethod: \"setSupportsDifferentFirstPayment\"});\n\n\nBillpayV1MessageSetInfo.prototype.setSupportsDifferentFirstPayment = function(/*Boolean*/ supportsDifferentFirstPayment) {\n  this.supportsDifferentFirstPayment = supportsDifferentFirstPayment;\n};\n\n\nBillpayV1MessageSetInfo.prototype.getSupportsDifferentLastPayment = function() {\n  return this.supportsDifferentLastPayment;\n};\nElement.add(BillpayV1MessageSetInfo, {name: \"DIFFLASTPMT\", required: true, order: 180, attributeType: Boolean, readMethod: \"getSupportsDifferentLastPayment\", writeMethod: \"setSupportsDifferentLastPayment\"});\n\n\nBillpayV1MessageSetInfo.prototype.setSupportsDifferentLastPayment = function(/*Boolean*/ supportsDifferentLastPayment) {\n  this.supportsDifferentLastPayment = supportsDifferentLastPayment;\n};\n\n\nBillpayV1MessageSetInfo.prototype.getSupportsBillPresentmentContext = function() {\n  return this.supportsBillPresentmentContext;\n};\nElement.add(BillpayV1MessageSetInfo, {name: \"BILLPUBCONTEXT\", order: 190, attributeType: Boolean, readMethod: \"getSupportsBillPresentmentContext\", writeMethod: \"setSupportsBillPresentmentContext\"});\n\n\nBillpayV1MessageSetInfo.prototype.setSupportsBillPresentmentContext = function(/*Boolean*/ supportsBillPresentmentContext) {\n  this.supportsBillPresentmentContext = supportsBillPresentmentContext;\n};\n\n\n\n\nmodule.exports = BillpayV1MessageSetInfo;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar AbstractMessageSetInfo = require(\"../../profile/AbstractMessageSetInfo\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../../meta/ChildAggregate\");\nvar CreditCardV1MessageSetInfo = require(\"./CreditCardV1MessageSetInfo\");\n\n/**\n * @class\n * @augments AbstractMessageSetInfo\n */\nfunction CreditCardMessageSetInfo () {\n  AbstractMessageSetInfo.call(this);\n\n  /**\n   * @name CreditCardMessageSetInfo#version1Info\n   * @type CreditCardV1MessageSetInfo\n   * @access private\n   */\n  this.version1Info = null;\n}\n\ninherit(CreditCardMessageSetInfo, \"extends\", AbstractMessageSetInfo);\n\n\nAggregate.add(\"CREDITCARDMSGSET\", CreditCardMessageSetInfo);\n\n\nCreditCardMessageSetInfo.prototype.getVersion1Info = function() {\n  return this.version1Info;\n};\nChildAggregate.add(CreditCardMessageSetInfo, {order: 0, attributeType: CreditCardV1MessageSetInfo, readMethod: \"getVersion1Info\", writeMethod: \"setVersion1Info\"});\n\n\nCreditCardMessageSetInfo.prototype.setVersion1Info = function(/*CreditCardV1MessageSetInfo*/ version1Info) {\n  this.version1Info = version1Info;\n};\n\n\n\n\nmodule.exports = CreditCardMessageSetInfo;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar VersionSpecificMessageSetInfo = require(\"../../profile/VersionSpecificMessageSetInfo\");\nvar MessageSetType = require(\"../../MessageSetType\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../../meta/ChildAggregate\");\nvar Element = require(\"../../../../meta/Element\");\nvar ImageProfile = require(\"./common/ImageProfile\");\n\n/**\n * Credit Card Message Set Profile\n * @class\n * @augments VersionSpecificMessageSetInfo\n * See \"Section 11.13.3 OFX Spec\"\n */\nfunction CreditCardV1MessageSetInfo () {\n  VersionSpecificMessageSetInfo.call(this);\n\n  /**\n   * @name CreditCardV1MessageSetInfo#closingAvail\n   * @type Boolean\n   * @access private\n   */\n  this.closingAvail = null;\n\n  /**\n   * @name CreditCardV1MessageSetInfo#imageProfile\n   * @type ImageProfile\n   * @access private\n   */\n  this.imageProfile = null;\n}\n\ninherit(CreditCardV1MessageSetInfo, \"extends\", VersionSpecificMessageSetInfo);\n\n\nAggregate.add(\"CREDITCARDMSGSETV1\", CreditCardV1MessageSetInfo);\n\n\nCreditCardV1MessageSetInfo.prototype.getMessageSetType = function() {\n  return MessageSetType.creditcard;\n};\n\n\n/**\n * Closing statement information available\n * @return {Boolean} Boolean\n */\nCreditCardV1MessageSetInfo.prototype.getClosingAvail = function() {\n  return this.closingAvail;\n};\nElement.add(CreditCardV1MessageSetInfo, {name: \"CLOSINGAVAIL\", required: true, order: 20, attributeType: Boolean, readMethod: \"getClosingAvail\", writeMethod: \"setClosingAvail\"});\n\n\nCreditCardV1MessageSetInfo.prototype.setClosingAvail = function(/*Boolean*/ closingAvail) {\n  this.closingAvail = closingAvail;\n};\n\n\n/**\n * Image profile (if supported)\n * @return {ImageProfile} ImageProfile\n */\nCreditCardV1MessageSetInfo.prototype.getImageProfile = function() {\n  return this.imageProfile;\n};\nChildAggregate.add(CreditCardV1MessageSetInfo, {name: \"IMAGEPROF\", order: 10, attributeType: ImageProfile, readMethod: \"getImageProfile\", writeMethod: \"setImageProfile\"});\n\n\nCreditCardV1MessageSetInfo.prototype.setImageProfile = function(/*ImageProfile*/ imageProfile) {\n  this.imageProfile = imageProfile;\n};\n\n\n\n\nmodule.exports = CreditCardV1MessageSetInfo;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar AbstractMessageSetInfo = require(\"../../profile/AbstractMessageSetInfo\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../../meta/ChildAggregate\");\nvar EmailV1MessageSetInfo = require(\"./EmailV1MessageSetInfo\");\n\n/**\n * @class\n * @augments AbstractMessageSetInfo\n */\nfunction EmailMessageSetInfo () {\n  AbstractMessageSetInfo.call(this);\n\n  /**\n   * @name EmailMessageSetInfo#version1Info\n   * @type EmailV1MessageSetInfo\n   * @access private\n   */\n  this.version1Info = null;\n}\n\ninherit(EmailMessageSetInfo, \"extends\", AbstractMessageSetInfo);\n\n\nAggregate.add(\"EMAILMSGSET\", EmailMessageSetInfo);\n\n\nEmailMessageSetInfo.prototype.getVersion1Info = function() {\n  return this.version1Info;\n};\nChildAggregate.add(EmailMessageSetInfo, {order: 0, attributeType: EmailV1MessageSetInfo, readMethod: \"getVersion1Info\", writeMethod: \"setVersion1Info\"});\n\n\nEmailMessageSetInfo.prototype.setVersion1Info = function(/*EmailV1MessageSetInfo*/ version1Info) {\n  this.version1Info = version1Info;\n};\n\n\n\n\nmodule.exports = EmailMessageSetInfo;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar VersionSpecificMessageSetInfo = require(\"../../profile/VersionSpecificMessageSetInfo\");\nvar MessageSetType = require(\"../../MessageSetType\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar Element = require(\"../../../../meta/Element\");\n\n/**\n * Email Message Set Profile Information\n * @class\n * @augments VersionSpecificMessageSetInfo\n * See \"Section 9.4.2 OFX Spec\"\n */\nfunction EmailV1MessageSetInfo () {\n  VersionSpecificMessageSetInfo.call(this);\n\n  /**\n   * @name EmailV1MessageSetInfo#supportsMail\n   * @type Boolean\n   * @access private\n   */\n  this.supportsMail = null;\n\n  /**\n   * @name EmailV1MessageSetInfo#supportsMimeType\n   * @type Boolean\n   * @access private\n   */\n  this.supportsMimeType = null;\n}\n\ninherit(EmailV1MessageSetInfo, \"extends\", VersionSpecificMessageSetInfo);\n\n\nAggregate.add(\"EMAILMSGSETV1\", EmailV1MessageSetInfo);\n\n\nEmailV1MessageSetInfo.prototype.getMessageSetType = function() {\n  return MessageSetType.email;\n};\n\n\n/**\n * Y if server supports <MAILRQ> request.\n * N if server supports only the <MAILSYNCRQ> request.\n * @return {Boolean} Boolean\n */\nEmailV1MessageSetInfo.prototype.getSupportsMail = function() {\n  return this.supportsMail;\n};\nElement.add(EmailV1MessageSetInfo, {name: \"MAILSUP\", required: true, order: 10, attributeType: Boolean, readMethod: \"getSupportsMail\", writeMethod: \"setSupportsMail\"});\n\n\nEmailV1MessageSetInfo.prototype.setSupportsMail = function(/*Boolean*/ supportsMail) {\n  this.supportsMail = supportsMail;\n};\n\n\n/**\n * Y if server supports get MIME message\n * @return {Boolean} Boolean\n */\nEmailV1MessageSetInfo.prototype.getSupportsMimeType = function() {\n  return this.supportsMimeType;\n};\nElement.add(EmailV1MessageSetInfo, {name: \"GETMIMESUP\", required: true, order: 20, attributeType: Boolean, readMethod: \"getSupportsMimeType\", writeMethod: \"setSupportsMimeType\"});\n\n\nEmailV1MessageSetInfo.prototype.setSupportsMimeType = function(/*Boolean*/ supportsMimeType) {\n  this.supportsMimeType = supportsMimeType;\n};\n\n\n\n\nmodule.exports = EmailV1MessageSetInfo;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar AbstractMessageSetInfo = require(\"../../profile/AbstractMessageSetInfo\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../../meta/ChildAggregate\");\nvar InterbankTransferV1MessageSetInfo = require(\"./InterbankTransferV1MessageSetInfo\");\n\n/**\n * @class\n * @augments AbstractMessageSetInfo\n */\nfunction InterbankTransferMessageSetInfo () {\n  AbstractMessageSetInfo.call(this);\n\n  /**\n   * @name InterbankTransferMessageSetInfo#version1Info\n   * @type InterbankTransferV1MessageSetInfo\n   * @access private\n   */\n  this.version1Info = null;\n}\n\ninherit(InterbankTransferMessageSetInfo, \"extends\", AbstractMessageSetInfo);\n\n\nAggregate.add(\"INTERXFERMSGSET\", InterbankTransferMessageSetInfo);\n\n\nInterbankTransferMessageSetInfo.prototype.getVersion1Info = function() {\n  return this.version1Info;\n};\nChildAggregate.add(InterbankTransferMessageSetInfo, {order: 0, attributeType: InterbankTransferV1MessageSetInfo, readMethod: \"getVersion1Info\", writeMethod: \"setVersion1Info\"});\n\n\nInterbankTransferMessageSetInfo.prototype.setVersion1Info = function(/*InterbankTransferV1MessageSetInfo*/ version1Info) {\n  this.version1Info = version1Info;\n};\n\n\n\n\nmodule.exports = InterbankTransferMessageSetInfo;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar VersionSpecificMessageSetInfo = require(\"../../profile/VersionSpecificMessageSetInfo\");\nvar MessageSetType = require(\"../../MessageSetType\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../../meta/ChildAggregate\");\nvar Element = require(\"../../../../meta/Element\");\nvar TransferProfile = require(\"./common/TransferProfile\");\n\n/**\n * Interbank Funds Transfer Message Set Profile\n * @class\n * @augments VersionSpecificMessageSetInfo\n * See \"Section 11.13.4 OFX Spec\"\n */\nfunction InterbankTransferV1MessageSetInfo () {\n  VersionSpecificMessageSetInfo.call(this);\n\n  /**\n   * @name InterbankTransferV1MessageSetInfo#transferProfile\n   * @type TransferProfile\n   * @access private\n   */\n  this.transferProfile = null;\n\n  /**\n   * @name InterbankTransferV1MessageSetInfo#supportsBillPay\n   * @type Boolean\n   * @access private\n   */\n  this.supportsBillPay = null;\n\n  /**\n   * @name InterbankTransferV1MessageSetInfo#cancelWindow\n   * @type Integer\n   * @access private\n   */\n  this.cancelWindow = null;\n\n  /**\n   * @name InterbankTransferV1MessageSetInfo#domesticInterbankTransferFee\n   * @type Double\n   * @access private\n   */\n  this.domesticInterbankTransferFee = null;\n\n  /**\n   * @name InterbankTransferV1MessageSetInfo#internationalInterbankTransferFee\n   * @type Double\n   * @access private\n   */\n  this.internationalInterbankTransferFee = null;\n}\n\ninherit(InterbankTransferV1MessageSetInfo, \"extends\", VersionSpecificMessageSetInfo);\n\n\nAggregate.add(\"INTERXFERMSGSETV1\", InterbankTransferV1MessageSetInfo);\n\n\nInterbankTransferV1MessageSetInfo.prototype.getMessageSetType = function() {\n  return MessageSetType.interbank_transfer;\n};\n\n\nInterbankTransferV1MessageSetInfo.prototype.getTransferProfile = function() {\n  return this.transferProfile;\n};\nChildAggregate.add(InterbankTransferV1MessageSetInfo, {name: \"XFERPROF\", required: true, order: 10, attributeType: TransferProfile, readMethod: \"getTransferProfile\", writeMethod: \"setTransferProfile\"});\n\n\nInterbankTransferV1MessageSetInfo.prototype.setTransferProfile = function(/*TransferProfile*/ transferProfile) {\n  this.transferProfile = transferProfile;\n};\n\n\nInterbankTransferV1MessageSetInfo.prototype.getSupportsBillPay = function() {\n  return this.supportsBillPay;\n};\nElement.add(InterbankTransferV1MessageSetInfo, {name: \"CANBILLPAY\", required: true, order: 20, attributeType: Boolean, readMethod: \"getSupportsBillPay\", writeMethod: \"setSupportsBillPay\"});\n\n\nInterbankTransferV1MessageSetInfo.prototype.setSupportsBillPay = function(/*Boolean*/ supportsBillPay) {\n  this.supportsBillPay = supportsBillPay;\n};\n\n\nInterbankTransferV1MessageSetInfo.prototype.getCancelWindow = function() {\n  return this.cancelWindow;\n};\nElement.add(InterbankTransferV1MessageSetInfo, {name: \"CANCELWND\", required: true, order: 30, attributeType: Number, readMethod: \"getCancelWindow\", writeMethod: \"setCancelWindow\"});\n\n\nInterbankTransferV1MessageSetInfo.prototype.setCancelWindow = function(/*Integer*/ cancelWindow) {\n  this.cancelWindow = cancelWindow;\n};\n\n\nInterbankTransferV1MessageSetInfo.prototype.getDomesticInterbankTransferFee = function() {\n  return this.domesticInterbankTransferFee;\n};\nElement.add(InterbankTransferV1MessageSetInfo, {name: \"DOMXFERFEE\", required: true, order: 40, attributeType: Number, readMethod: \"getDomesticInterbankTransferFee\", writeMethod: \"setDomesticInterbankTransferFee\"});\n\n\nInterbankTransferV1MessageSetInfo.prototype.setDomesticInterbankTransferFee = function(/*Double*/ domesticInterbankTransferFee) {\n  this.domesticInterbankTransferFee = domesticInterbankTransferFee;\n};\n\n\nInterbankTransferV1MessageSetInfo.prototype.getInternationalInterbankTransferFee = function() {\n  return this.internationalInterbankTransferFee;\n};\nElement.add(InterbankTransferV1MessageSetInfo, {name: \"INTLXFERFEE\", required: true, order: 50, attributeType: Number, readMethod: \"getInternationalInterbankTransferFee\", writeMethod: \"setInternationalInterbankTransferFee\"});\n\n\nInterbankTransferV1MessageSetInfo.prototype.setInternationalInterbankTransferFee = function(/*Double*/ internationalInterbankTransferFee) {\n  this.internationalInterbankTransferFee = internationalInterbankTransferFee;\n};\n\n\n\n\nmodule.exports = InterbankTransferV1MessageSetInfo;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar AbstractMessageSetInfo = require(\"../../profile/AbstractMessageSetInfo\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../../meta/ChildAggregate\");\nvar InvestmentV1MessageSetInfo = require(\"./InvestmentV1MessageSetInfo\");\n\n/**\n * @class\n * @augments AbstractMessageSetInfo\n */\nfunction InvestmentMessageSetInfo () {\n  AbstractMessageSetInfo.call(this);\n\n  /**\n   * @name InvestmentMessageSetInfo#version1Info\n   * @type InvestmentV1MessageSetInfo\n   * @access private\n   */\n  this.version1Info = null;\n}\n\ninherit(InvestmentMessageSetInfo, \"extends\", AbstractMessageSetInfo);\n\n\nAggregate.add(\"INVSTMTMSGSET\", InvestmentMessageSetInfo);\n\n\nInvestmentMessageSetInfo.prototype.getVersion1Info = function() {\n  return this.version1Info;\n};\nChildAggregate.add(InvestmentMessageSetInfo, {order: 0, attributeType: InvestmentV1MessageSetInfo, readMethod: \"getVersion1Info\", writeMethod: \"setVersion1Info\"});\n\n\nInvestmentMessageSetInfo.prototype.setVersion1Info = function(/*InvestmentV1MessageSetInfo*/ version1Info) {\n  this.version1Info = version1Info;\n};\n\n\n\n\nmodule.exports = InvestmentMessageSetInfo;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar VersionSpecificMessageSetInfo = require(\"../../profile/VersionSpecificMessageSetInfo\");\nvar MessageSetType = require(\"../../MessageSetType\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar Element = require(\"../../../../meta/Element\");\n\n/**\n * See \"Section 13.7.1.1, OFX Spec\"\n *\n * @class\n */\nfunction InvestmentV1MessageSetInfo () {\n  VersionSpecificMessageSetInfo.call(this);\n\n  /**\n   * @name InvestmentV1MessageSetInfo#supportsStatementsDownload\n   * @type Boolean\n   * @access private\n   */\n  this.supportsStatementsDownload = null;\n\n  /**\n   * @name InvestmentV1MessageSetInfo#supportsOpenOrdersDownload\n   * @type Boolean\n   * @access private\n   */\n  this.supportsOpenOrdersDownload = null;\n\n  /**\n   * @name InvestmentV1MessageSetInfo#supportsPositionsDownload\n   * @type Boolean\n   * @access private\n   */\n  this.supportsPositionsDownload = null;\n\n  /**\n   * @name InvestmentV1MessageSetInfo#supportsBalanceDownload\n   * @type Boolean\n   * @access private\n   */\n  this.supportsBalanceDownload = null;\n\n  /**\n   * @name InvestmentV1MessageSetInfo#supportsEmail\n   * @type Boolean\n   * @access private\n   */\n  this.supportsEmail = null;\n\n  /**\n   * @name InvestmentV1MessageSetInfo#supports401kInformation\n   * @type Boolean\n   * @access private\n   */\n  this.supports401kInformation = null;\n\n  /**\n   * @name InvestmentV1MessageSetInfo#supportsClosingStatements\n   * @type Boolean\n   * @access private\n   */\n  this.supportsClosingStatements = null;\n}\n\ninherit(InvestmentV1MessageSetInfo, \"extends\", VersionSpecificMessageSetInfo);\n\n\nAggregate.add(\"INVSTMTMSGSETV1\", InvestmentV1MessageSetInfo);\n\n\nInvestmentV1MessageSetInfo.prototype.getMessageSetType = function() {\n  return MessageSetType.investment;\n};\n\n\nInvestmentV1MessageSetInfo.prototype.getSupportsStatementsDownload = function() {\n  return this.supportsStatementsDownload;\n};\nElement.add(InvestmentV1MessageSetInfo, {name: \"TRANDNLD\", required:true, order: 10, attributeType: Boolean, readMethod: \"getSupportsStatementsDownload\", writeMethod: \"setSupportsStatementsDownload\"});\n\n\nInvestmentV1MessageSetInfo.prototype.setSupportsStatementsDownload = function(/*Boolean*/ supportsStatementsDownload) {\n  this.supportsStatementsDownload = supportsStatementsDownload;\n};\n\n\nInvestmentV1MessageSetInfo.prototype.getSupportsOpenOrdersDownload = function() {\n  return this.supportsOpenOrdersDownload;\n};\nElement.add(InvestmentV1MessageSetInfo, {name: \"OODNLD\", required:true, order: 20, attributeType: Boolean, readMethod: \"getSupportsOpenOrdersDownload\", writeMethod: \"setSupportsOpenOrdersDownload\"});\n\n\nInvestmentV1MessageSetInfo.prototype.setSupportsOpenOrdersDownload = function(/*Boolean*/ supportsOpenOrdersDownload) {\n  this.supportsOpenOrdersDownload = supportsOpenOrdersDownload;\n};\n\n\nInvestmentV1MessageSetInfo.prototype.getSupportsPositionsDownload = function() {\n  return this.supportsPositionsDownload;\n};\nElement.add(InvestmentV1MessageSetInfo, {name: \"POSDNLD\", required:true, order: 30, attributeType: Boolean, readMethod: \"getSupportsPositionsDownload\", writeMethod: \"setSupportsPositionsDownload\"});\n\n\nInvestmentV1MessageSetInfo.prototype.setSupportsPositionsDownload = function(/*Boolean*/ supportsPositionsDownload) {\n  this.supportsPositionsDownload = supportsPositionsDownload;\n};\n\n\nInvestmentV1MessageSetInfo.prototype.getSupportsBalanceDownload = function() {\n  return this.supportsBalanceDownload;\n};\nElement.add(InvestmentV1MessageSetInfo, {name: \"BALDNLD\", required:true, order: 40, attributeType: Boolean, readMethod: \"getSupportsBalanceDownload\", writeMethod: \"setSupportsBalanceDownload\"});\n\n\nInvestmentV1MessageSetInfo.prototype.setSupportsBalanceDownload = function(/*Boolean*/ supportsBalanceDownload) {\n  this.supportsBalanceDownload = supportsBalanceDownload;\n};\n\n\nInvestmentV1MessageSetInfo.prototype.getSupportsEmail = function() {\n  return this.supportsEmail;\n};\nElement.add(InvestmentV1MessageSetInfo, {name: \"CANEMAIL\", required:true, order: 50, attributeType: Boolean, readMethod: \"getSupportsEmail\", writeMethod: \"setSupportsEmail\"});\n\n\nInvestmentV1MessageSetInfo.prototype.setSupportsEmail = function(/*Boolean*/ supportsEmail) {\n  this.supportsEmail = supportsEmail;\n};\n\n\nInvestmentV1MessageSetInfo.prototype.getSupports401kInformation = function() {\n  return this.supports401kInformation;\n};\nElement.add(InvestmentV1MessageSetInfo, {name: \"INV401KDNLD\", order: 60, attributeType: Boolean, readMethod: \"getSupports401kInformation\", writeMethod: \"setSupports401kInformation\"});\n\n\nInvestmentV1MessageSetInfo.prototype.setSupports401kInformation = function(/*Boolean*/ supports401kInformation) {\n  this.supports401kInformation = supports401kInformation;\n};\n\n\nInvestmentV1MessageSetInfo.prototype.getSupportsClosingStatements = function() {\n  return this.supportsClosingStatements;\n};\nElement.add(InvestmentV1MessageSetInfo, {name: \"CLOSINGAVAIL\", order: 70, attributeType: Boolean, readMethod: \"getSupportsClosingStatements\", writeMethod: \"setSupportsClosingStatements\"});\n\n\nInvestmentV1MessageSetInfo.prototype.setSupportsClosingStatements = function(/*Boolean*/ supportsClosingStatements) {\n  this.supportsClosingStatements = supportsClosingStatements;\n};\n\n\n\n\nmodule.exports = InvestmentV1MessageSetInfo;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar AbstractMessageSetInfo = require(\"../../profile/AbstractMessageSetInfo\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../../meta/ChildAggregate\");\nvar ProfileV1MessageSetInfo = require(\"./ProfileV1MessageSetInfo\");\n\n/**\n * @class\n * @augments AbstractMessageSetInfo\n */\nfunction ProfileMessageSetInfo () {\n  AbstractMessageSetInfo.call(this);\n\n  /**\n   * @name ProfileMessageSetInfo#version1Info\n   * @type ProfileV1MessageSetInfo\n   * @access private\n   */\n  this.version1Info = null;\n}\n\ninherit(ProfileMessageSetInfo, \"extends\", AbstractMessageSetInfo);\n\n\nAggregate.add(\"PROFMSGSET\", ProfileMessageSetInfo);\n\n\nProfileMessageSetInfo.prototype.getVersion1Info = function() {\n  return this.version1Info;\n};\nChildAggregate.add(ProfileMessageSetInfo, {order: 0, attributeType: ProfileV1MessageSetInfo, readMethod: \"getVersion1Info\", writeMethod: \"setVersion1Info\"});\n\n\nProfileMessageSetInfo.prototype.setVersion1Info = function(/*ProfileV1MessageSetInfo*/ version1Info) {\n  this.version1Info = version1Info;\n};\n\n\n\n\nmodule.exports = ProfileMessageSetInfo;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar VersionSpecificMessageSetInfo = require(\"../../profile/VersionSpecificMessageSetInfo\");\nvar MessageSetType = require(\"../../MessageSetType\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\n\n/**\n * @class\n * @augments VersionSpecificMessageSetInfo\n */\nfunction ProfileV1MessageSetInfo () {\n  VersionSpecificMessageSetInfo.call(this);\n}\n\ninherit(ProfileV1MessageSetInfo, \"extends\", VersionSpecificMessageSetInfo);\n\n\nAggregate.add(\"PROFMSGSETV1\", ProfileV1MessageSetInfo);\n\n\nProfileV1MessageSetInfo.prototype.getMessageSetType = function() {\n  return MessageSetType.profile;\n};\n\n\n\n\nmodule.exports = ProfileV1MessageSetInfo;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar AbstractMessageSetInfo = require(\"../../profile/AbstractMessageSetInfo\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../../meta/ChildAggregate\");\nvar SecurityListV1MessageSetInfo = require(\"./SecurityListV1MessageSetInfo\");\n\n/**\n * @class\n * @augments AbstractMessageSetInfo\n */\nfunction SecurityListMessageSetInfo () {\n  AbstractMessageSetInfo.call(this);\n\n  /**\n   * @name SecurityListMessageSetInfo#version1Info\n   * @type SecurityListV1MessageSetInfo\n   * @access private\n   */\n  this.version1Info = null;\n}\n\ninherit(SecurityListMessageSetInfo, \"extends\", AbstractMessageSetInfo);\n\n\nAggregate.add(\"SECLISTMSGSET\", SecurityListMessageSetInfo);\n\n\nSecurityListMessageSetInfo.prototype.getVersion1Info = function() {\n  return this.version1Info;\n};\nChildAggregate.add(SecurityListMessageSetInfo, {order: 0, attributeType: SecurityListV1MessageSetInfo, readMethod: \"getVersion1Info\", writeMethod: \"setVersion1Info\"});\n\n\nSecurityListMessageSetInfo.prototype.setVersion1Info = function(/*SecurityListV1MessageSetInfo*/ version1Info) {\n  this.version1Info = version1Info;\n};\n\n\n\n\nmodule.exports = SecurityListMessageSetInfo;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar VersionSpecificMessageSetInfo = require(\"../../profile/VersionSpecificMessageSetInfo\");\nvar MessageSetType = require(\"../../MessageSetType\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar Element = require(\"../../../../meta/Element\");\n\n/**\n * See \"Section 13.7.2.1, OFX Spec\"\n *\n * @class\n * @augments VersionSpecificMessageSetInfo\n */\nfunction SecurityListV1MessageSetInfo () {\n  VersionSpecificMessageSetInfo.call(this);\n\n  /**\n   * @name SecurityListV1MessageSetInfo#supportsSecurityListDownload\n   * @type Boolean\n   * @access private\n   */\n  this.supportsSecurityListDownload = null;\n}\n\ninherit(SecurityListV1MessageSetInfo, \"extends\", VersionSpecificMessageSetInfo);\n\n\nAggregate.add(\"SECLISTMSGSETV1\", SecurityListV1MessageSetInfo);\n\n\nSecurityListV1MessageSetInfo.prototype.getMessageSetType = function() {\n  return MessageSetType.investment_security;\n};\n\n\nSecurityListV1MessageSetInfo.prototype.getSupportsSecurityListDownload = function() {\n  return this.supportsSecurityListDownload;\n};\nElement.add(SecurityListV1MessageSetInfo, {name: \"SECLISTRQDNLD\", required:true, order: 10, attributeType: Boolean, readMethod: \"getSupportsSecurityListDownload\", writeMethod: \"setSupportsSecurityListDownload\"});\n\n\nSecurityListV1MessageSetInfo.prototype.setSupportsSecurityListDownload = function(/*Boolean*/ supportsSecurityListDownload) {\n  this.supportsSecurityListDownload = supportsSecurityListDownload;\n};\n\n\n\n\nmodule.exports = SecurityListV1MessageSetInfo;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar AbstractMessageSetInfo = require(\"../../profile/AbstractMessageSetInfo\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../../meta/ChildAggregate\");\nvar SignOnV1MessageSetInfo = require(\"./SignOnV1MessageSetInfo\");\n\n/**\n * @class\n * @augments AbstractMessageSetInfo\n */\nfunction SignOnMessageSetInfo () {\n  AbstractMessageSetInfo.call(this);\n\n  /**\n   * @name SignOnMessageSetInfo#version1Info\n   * @type SignOnV1MessageSetInfo\n   * @access private\n   */\n  this.version1Info = null;\n}\n\ninherit(SignOnMessageSetInfo, \"extends\", AbstractMessageSetInfo);\n\n\nAggregate.add(\"SIGNONMSGSET\", SignOnMessageSetInfo);\n\n\nSignOnMessageSetInfo.prototype.getVersion1Info = function() {\n  return this.version1Info;\n};\nChildAggregate.add(SignOnMessageSetInfo, {order: 0, attributeType: SignOnV1MessageSetInfo, readMethod: \"getVersion1Info\", writeMethod: \"setVersion1Info\"});\n\n\nSignOnMessageSetInfo.prototype.setVersion1Info = function(/*SignOnV1MessageSetInfo*/ version1Info) {\n  this.version1Info = version1Info;\n};\n\n\n\n\nmodule.exports = SignOnMessageSetInfo;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar MessageSetType = require(\"../../MessageSetType\");\nvar VersionSpecificMessageSetInfo = require(\"../../profile/VersionSpecificMessageSetInfo\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\n\n/**\n * @class\n * @augments VersionSpecificMessageSetInfo\n */\nfunction SignOnV1MessageSetInfo () {\n  VersionSpecificMessageSetInfo.call(this);\n}\n\ninherit(SignOnV1MessageSetInfo, \"extends\", VersionSpecificMessageSetInfo);\n\n\nAggregate.add(\"SIGNONMSGSETV1\", SignOnV1MessageSetInfo);\n\n\nSignOnV1MessageSetInfo.prototype.getMessageSetType = function() {\n  return MessageSetType.signon;\n};\n\n\n\n\nmodule.exports = SignOnV1MessageSetInfo;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar AbstractMessageSetInfo = require(\"../../profile/AbstractMessageSetInfo\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../../meta/ChildAggregate\");\nvar SignupV1MessageSetInfo = require(\"./SignupV1MessageSetInfo\");\n\n/**\n * @class\n * @augments AbstractMessageSetInfo\n */\nfunction SignupMessageSetInfo () {\n  AbstractMessageSetInfo.call(this);\n\n  /**\n   * @name SignupMessageSetInfo#version1Info\n   * @type SignupV1MessageSetInfo\n   * @access private\n   */\n  this.version1Info = null;\n}\n\ninherit(SignupMessageSetInfo, \"extends\", AbstractMessageSetInfo);\n\n\nAggregate.add(\"SIGNUPMSGSET\", SignupMessageSetInfo);\n\n\nSignupMessageSetInfo.prototype.getVersion1Info = function() {\n  return this.version1Info;\n};\nChildAggregate.add(SignupMessageSetInfo, {order: 0, attributeType: SignupV1MessageSetInfo, readMethod: \"getVersion1Info\", writeMethod: \"setVersion1Info\"});\n\n\nSignupMessageSetInfo.prototype.setVersion1Info = function(/*SignupV1MessageSetInfo*/ version1Info) {\n  this.version1Info = version1Info;\n};\n\n\n\n\nmodule.exports = SignupMessageSetInfo;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar VersionSpecificMessageSetInfo = require(\"../../profile/VersionSpecificMessageSetInfo\");\nvar MessageSetType = require(\"../../MessageSetType\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../../meta/ChildAggregate\");\nvar Element = require(\"../../../../meta/Element\");\nvar ClientEnrollment = require(\"./signup/ClientEnrollment\");\nvar WebEnrollment = require(\"./signup/WebEnrollment\");\nvar OtherEnrollment = require(\"./signup/OtherEnrollment\");\n\n/**\n * Servers use the Signup Message Set Profile Information to define how enrollment should proceed.\n *\n * This aggregate should contain 1 Enrollment option among <CLIENTENROLL>, <WEBENROLL>, or <OTHERENROLL>.\n * todo: review how best to enforce this constraint\n *\n * @class\n * @augments VersionSpecificMessageSetInfo\n * See \"Section 8.8 OFX Spec\"\n */\nfunction SignupV1MessageSetInfo () {\n  VersionSpecificMessageSetInfo.call(this);\n\n  /**\n   * @name SignupV1MessageSetInfo#clientEnrollment\n   * @type ClientEnrollment\n   * @access private\n   */\n  this.clientEnrollment = null;\n\n  /**\n   * @name SignupV1MessageSetInfo#webEnrollment\n   * @type WebEnrollment\n   * @access private\n   */\n  this.webEnrollment = null;\n\n  /**\n   * @name SignupV1MessageSetInfo#otherEnrollment\n   * @type OtherEnrollment\n   * @access private\n   */\n  this.otherEnrollment = null;\n\n  /**\n   * @name SignupV1MessageSetInfo#supportsClientUserInfoChanges\n   * @type Boolean\n   * @access private\n   */\n  this.supportsClientUserInfoChanges = null;\n\n  /**\n   * @name SignupV1MessageSetInfo#supportsAvailableAccounts\n   * @type Boolean\n   * @access private\n   */\n  this.supportsAvailableAccounts = null;\n\n  /**\n   * @name SignupV1MessageSetInfo#supportsClientServiceActivationRequests\n   * @type Boolean\n   * @access private\n   */\n  this.supportsClientServiceActivationRequests = null;\n}\n\ninherit(SignupV1MessageSetInfo, \"extends\", VersionSpecificMessageSetInfo);\n\n\nAggregate.add(\"SIGNUPMSGSETV1\", SignupV1MessageSetInfo);\n\n\nSignupV1MessageSetInfo.prototype.getMessageSetType = function() {\n  return MessageSetType.signup;\n};\n\n\nSignupV1MessageSetInfo.prototype.getClientEnrollment = function() {\n  return this.clientEnrollment;\n};\nChildAggregate.add(SignupV1MessageSetInfo, {name: \"CLIENTENROLL\", order: 10, attributeType: ClientEnrollment, readMethod: \"getClientEnrollment\", writeMethod: \"setClientEnrollment\"});\n\n\nSignupV1MessageSetInfo.prototype.setClientEnrollment = function(/*ClientEnrollment*/ clientEnrollment) {\n  this.clientEnrollment = clientEnrollment;\n};\n\n\nSignupV1MessageSetInfo.prototype.getWebEnrollment = function() {\n  return this.webEnrollment;\n};\nChildAggregate.add(SignupV1MessageSetInfo, {name: \"WEBENROLL\", order: 20, attributeType: WebEnrollment, readMethod: \"getWebEnrollment\", writeMethod: \"setWebEnrollment\"});\n\n\nSignupV1MessageSetInfo.prototype.setWebEnrollment = function(/*WebEnrollment*/ webEnrollment) {\n  this.webEnrollment = webEnrollment;\n};\n\n\nSignupV1MessageSetInfo.prototype.getOtherEnrollment = function() {\n  return this.otherEnrollment;\n};\nChildAggregate.add(SignupV1MessageSetInfo, {name: \"OTHERENROLL\", order: 30, attributeType: OtherEnrollment, readMethod: \"getOtherEnrollment\", writeMethod: \"setOtherEnrollment\"});\n\n\nSignupV1MessageSetInfo.prototype.setOtherEnrollment = function(/*OtherEnrollment*/ otherEnrollment) {\n  this.otherEnrollment = otherEnrollment;\n};\n\n\n/**\n * Y if server supports client-based user information changes,\n * @return {Boolean} Boolean\n */\nSignupV1MessageSetInfo.prototype.getSupportsClientUserInfoChanges = function() {\n  return this.supportsClientUserInfoChanges;\n};\nElement.add(SignupV1MessageSetInfo, {name: \"CHGUSERINFO\", required: true, order: 40, attributeType: Boolean, readMethod: \"getSupportsClientUserInfoChanges\", writeMethod: \"setSupportsClientUserInfoChanges\"});\n\n\nSignupV1MessageSetInfo.prototype.setSupportsClientUserInfoChanges = function(/*Boolean*/ supportsClientUserInfoChanges) {\n  this.supportsClientUserInfoChanges = supportsClientUserInfoChanges;\n};\n\n\n/**\n * Y if server can provide information on accounts with SVCSTATUS available,\n * N means client should expect to ask user for specific account information\n * @return {Boolean} Boolean\n */\nSignupV1MessageSetInfo.prototype.getSupportsAvailableAccounts = function() {\n  return this.supportsAvailableAccounts;\n};\nElement.add(SignupV1MessageSetInfo, {name: \"AVAILACCTS\", required: true, order: 50, attributeType: Boolean, readMethod: \"getSupportsAvailableAccounts\", writeMethod: \"setSupportsAvailableAccounts\"});\n\n\nSignupV1MessageSetInfo.prototype.setSupportsAvailableAccounts = function(/*Boolean*/ supportsAvailableAccounts) {\n  this.supportsAvailableAccounts = supportsAvailableAccounts;\n};\n\n\n/**\n * Y if server allows clients to make service activation requests (<ACCTRQ>),\n * N if server will only advise clients via synchronization of service additions,\n * changes, or deletions.\n * @return {Boolean} Boolean\n */\nSignupV1MessageSetInfo.prototype.getSupportsClientServiceActivationRequests = function() {\n  return this.supportsClientServiceActivationRequests;\n};\nElement.add(SignupV1MessageSetInfo, {name: \"CLIENTACTREQ\", required: true, order: 60, attributeType: Boolean, readMethod: \"getSupportsClientServiceActivationRequests\", writeMethod: \"setSupportsClientServiceActivationRequests\"});\n\n\nSignupV1MessageSetInfo.prototype.setSupportsClientServiceActivationRequests = function(/*Boolean*/ supportsClientServiceActivationRequests) {\n  this.supportsClientServiceActivationRequests = supportsClientServiceActivationRequests;\n};\n\n\n\n\nmodule.exports = SignupV1MessageSetInfo;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar AbstractMessageSetInfo = require(\"../../profile/AbstractMessageSetInfo\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../../meta/ChildAggregate\");\nvar WireTransferV1MessageSetInfo = require(\"./WireTransferV1MessageSetInfo\");\n\n/**\n * @class\n * @augments AbstractMessageSetInfo\n */\nfunction WireTransferMessageSetInfo () {\n  AbstractMessageSetInfo.call(this);\n\n  /**\n   * @name WireTransferMessageSetInfo#version1Info\n   * @type WireTransferV1MessageSetInfo\n   * @access private\n   */\n  this.version1Info = null;\n}\n\ninherit(WireTransferMessageSetInfo, \"extends\", AbstractMessageSetInfo);\n\n\nAggregate.add(\"WIREXFERMSGSET\", WireTransferMessageSetInfo);\n\n\nWireTransferMessageSetInfo.prototype.getVersion1Info = function() {\n  return this.version1Info;\n};\nChildAggregate.add(WireTransferMessageSetInfo, {order: 0, attributeType: WireTransferV1MessageSetInfo, readMethod: \"getVersion1Info\", writeMethod: \"setVersion1Info\"});\n\n\nWireTransferMessageSetInfo.prototype.setVersion1Info = function(/*WireTransferV1MessageSetInfo*/ version1Info) {\n  this.version1Info = version1Info;\n};\n\n\n\n\nmodule.exports = WireTransferMessageSetInfo;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../../util/inherit\");\n\nvar VersionSpecificMessageSetInfo = require(\"../../profile/VersionSpecificMessageSetInfo\");\nvar MessageSetType = require(\"../../MessageSetType\");\nvar Aggregate = require(\"../../../../meta/Aggregate\");\nvar Element = require(\"../../../../meta/Element\");\nvar ProcessorDayOff = require(\"../../common/ProcessorDayOff\");\n\n/**\n * Wire Transfer Message Set Profile\n * @class\n * @augments VersionSpecificMessageSetInfo\n * See \"Section 11.13.5 OFX Spec\"\n */\nfunction WireTransferV1MessageSetInfo () {\n  VersionSpecificMessageSetInfo.call(this);\n\n  /**\n   * @name WireTransferV1MessageSetInfo#processorDaysOff\n   * @type ProcessorDayOff[]\n   * @access private\n   */\n  this.processorDaysOff = null;\n\n  /**\n   * @name WireTransferV1MessageSetInfo#processEndTime\n   * @type String\n   * @access private\n   */\n  this.processEndTime = null;\n\n  /**\n   * @name WireTransferV1MessageSetInfo#supportsScheduledTransfers\n   * @type Boolean\n   * @access private\n   */\n  this.supportsScheduledTransfers = null;\n\n  /**\n   * @name WireTransferV1MessageSetInfo#domesticWireTransferFee\n   * @type Double\n   * @access private\n   */\n  this.domesticWireTransferFee = null;\n\n  /**\n   * @name WireTransferV1MessageSetInfo#internationalWireTransferFee\n   * @type Double\n   * @access private\n   */\n  this.internationalWireTransferFee = null;\n}\n\ninherit(WireTransferV1MessageSetInfo, \"extends\", VersionSpecificMessageSetInfo);\n\n\nAggregate.add(\"WIREXFERMSGSETV1\", WireTransferV1MessageSetInfo);\n\n\nWireTransferV1MessageSetInfo.prototype.getMessageSetType = function() {\n  return MessageSetType.wire_transfer;\n};\n\n\nWireTransferV1MessageSetInfo.prototype.getProcessorDaysOff = function() {\n  return this.processorDaysOff;\n};\nElement.add(WireTransferV1MessageSetInfo, {name: \"PROCDAYSOFF\", order: 10, attributeType: Array, collectionEntryType: ProcessorDayOff, readMethod: \"getProcessorDaysOff\", writeMethod: \"setProcessorDaysOff\"});\n\n\nWireTransferV1MessageSetInfo.prototype.setProcessorDaysOff = function(/*ProcessorDayOff[]*/ processorDaysOff) {\n  this.processorDaysOff = processorDaysOff;\n};\n\n\nWireTransferV1MessageSetInfo.prototype.getProcessEndTime = function() {\n  return this.processEndTime;\n};\nElement.add(WireTransferV1MessageSetInfo, {name: \"PROCENDTM\", required: true, order: 20, attributeType: String, readMethod: \"getProcessEndTime\", writeMethod: \"setProcessEndTime\"});\n\n\nWireTransferV1MessageSetInfo.prototype.setProcessEndTime = function(/*String*/ processEndTime) {\n  this.processEndTime = processEndTime;\n};\n\n\nWireTransferV1MessageSetInfo.prototype.getSupportsScheduledTransfers = function() {\n  return this.supportsScheduledTransfers;\n};\nElement.add(WireTransferV1MessageSetInfo, {name: \"CANSCHED\", required: true, order: 30, attributeType: Boolean, readMethod: \"getSupportsScheduledTransfers\", writeMethod: \"setSupportsScheduledTransfers\"});\n\n\nWireTransferV1MessageSetInfo.prototype.setSupportsScheduledTransfers = function(/*Boolean*/ supportsScheduledTransfers) {\n  this.supportsScheduledTransfers = supportsScheduledTransfers;\n};\n\n\nWireTransferV1MessageSetInfo.prototype.getDomesticWireTransferFee = function() {\n  return this.domesticWireTransferFee;\n};\nElement.add(WireTransferV1MessageSetInfo, {name: \"DOMXFERFEE\", required: true, order: 40, attributeType: Number, readMethod: \"getDomesticWireTransferFee\", writeMethod: \"setDomesticWireTransferFee\"});\n\n\nWireTransferV1MessageSetInfo.prototype.setDomesticWireTransferFee = function(/*Double*/ domesticWireTransferFee) {\n  this.domesticWireTransferFee = domesticWireTransferFee;\n};\n\n\nWireTransferV1MessageSetInfo.prototype.getInternationalWireTransferFee = function() {\n  return this.internationalWireTransferFee;\n};\nElement.add(WireTransferV1MessageSetInfo, {name: \"INTLXFERFEE\", required: true, order: 50, attributeType: Number, readMethod: \"getInternationalWireTransferFee\", writeMethod: \"setInternationalWireTransferFee\"});\n\n\nWireTransferV1MessageSetInfo.prototype.setInternationalWireTransferFee = function(/*Double*/ internationalWireTransferFee) {\n  this.internationalWireTransferFee = internationalWireTransferFee;\n};\n\n\n\n\nmodule.exports = WireTransferV1MessageSetInfo;\n","/*\n * Copyright 2012 TheStash\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar Aggregate = require(\"../../../../../meta/Aggregate\");\nvar Element = require(\"../../../../../meta/Element\");\n\n/**\n * Email Profile\n * @class\n * See \"Section 11.13.2.3 OFX Spec\"\n */\nfunction EmailProfile () {\n\n  /**\n   * @name EmailProfile#canEmail\n   * @type Boolean\n   * @access private\n   */\n  this.canEmail = null;\n\n  /**\n   * @name EmailProfile#canNotify\n   * @type Boolean\n   * @access private\n   */\n  this.canNotify = null;\n}\n\n\n\nAggregate.add(\"EMAILPROF\", EmailProfile);\n\n\nEmailProfile.prototype.getCanEmail = function() {\n  return this.canEmail;\n};\nElement.add(EmailProfile, {name: \"CANEMAIL\", required: true, order: 10, attributeType: Boolean, readMethod: \"getCanEmail\", writeMethod: \"setCanEmail\"});\n\n\nEmailProfile.prototype.setCanEmail = function(/*Boolean*/ canEmail) {\n  this.canEmail = canEmail;\n};\n\n\nEmailProfile.prototype.getCanNotify = function() {\n  return this.canNotify;\n};\nElement.add(EmailProfile, {name: \"CANNOTIFY\", required: true, order: 20, attributeType: Boolean, readMethod: \"getCanNotify\", writeMethod: \"setCanNotify\"});\n\n\nEmailProfile.prototype.setCanNotify = function(/*Boolean*/ canNotify) {\n  this.canNotify = canNotify;\n};\n\n\n\n\nmodule.exports = EmailProfile;\n","/*\n * Copyright 2012 TheStash\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar Aggregate = require(\"../../../../../meta/Aggregate\");\nvar Element = require(\"../../../../../meta/Element\");\nvar ProcessorDayOff = require(\"../../../common/ProcessorDayOff\");\n\n/**\n * Stop Check Profile\n * @class\n * See \"Section 11.13.2.3 OFX Spec\"\n */\nfunction StopCheckProfile () {\n\n  /**\n   * @name StopCheckProfile#processorDaysOff\n   * @type ProcessorDayOff[]\n   * @access private\n   */\n  this.processorDaysOff = null;\n\n  /**\n   * @name StopCheckProfile#processEndTime\n   * @type String\n   * @access private\n   */\n  this.processEndTime = null;\n\n  /**\n   * @name StopCheckProfile#canUseRange\n   * @type Boolean\n   * @access private\n   */\n  this.canUseRange = null;\n\n  /**\n   * @name StopCheckProfile#canUseDescription\n   * @type Boolean\n   * @access private\n   */\n  this.canUseDescription = null;\n\n  /**\n   * @name StopCheckProfile#stopCheckFee\n   * @type Double\n   * @access private\n   */\n  this.stopCheckFee = null;\n}\n\n\n\nAggregate.add(\"STPCHKPROF\", StopCheckProfile);\n\n\n/**\n * Days of week that no processing occurs: MONDAY, TUESDAY, WEDNESDAY, THURSDAY,\n * FRIDAY, SATURDAY, or SUNDAY. 0 or more <PROCDAYSOFF> can be sent.\n * @return {ProcessorDayOff[]} List of days during the week that no processing occurs.\n */\nStopCheckProfile.prototype.getProcessorDaysOff = function() {\n  return this.processorDaysOff;\n};\nElement.add(StopCheckProfile, {name: \"PROCDAYSOFF\", order: 0, attributeType: Array, collectionEntryType: ProcessorDayOff, readMethod: \"getProcessorDaysOff\", writeMethod: \"setProcessorDaysOff\"});\n\n\nStopCheckProfile.prototype.setProcessorDaysOff = function(/*ProcessorDayOff[]*/ processorDaysOff) {\n  this.processorDaysOff = processorDaysOff;\n};\n\n\n/**\n * Gets time of day that day's processing ends.\n *\n * Time formatted as \"HHMMSS.XXX[gmt offset[:tz name]]\",\n * the milliseconds and time zone are still optional, and default to GMT.\n * See \"Section 3.2.8.3 OFX Spec\"\n * @return {String} Time String formatted as \"HHMMSS.XXX[gmt offset[:tz name]]\"\n */\nStopCheckProfile.prototype.getProcessEndTime = function() {\n  return this.processEndTime;\n};\nElement.add(StopCheckProfile, {name: \"PROCENDTM\", required: true, order: 10, attributeType: String, readMethod: \"getProcessEndTime\", writeMethod: \"setProcessEndTime\"});\n\n\n/**\n * Sets the time of day that day's processing ends.\n *\n * Time formatted as \"HHMMSS.XXX[gmt offset[:tz name]]\",\n * the milliseconds and time zone are still optional, and default to GMT.\n\n * See \"Section 3.2.8.3 OFX Spec\"\n * @param {String} processEndTime formatted as \"HHMMSS.XXX[gmt offset[:tz name]]\"\n */\nStopCheckProfile.prototype.setProcessEndTime = function(processEndTime) {\n  this.processEndTime = processEndTime;\n};\n\n\nStopCheckProfile.prototype.getCanUseRange = function() {\n  return this.canUseRange;\n};\nElement.add(StopCheckProfile, {name: \"CANUSERANGE\", required: true, order: 20, attributeType: Boolean, readMethod: \"getCanUseRange\", writeMethod: \"setCanUseRange\"});\n\n\nStopCheckProfile.prototype.setCanUseRange = function(/*Boolean*/ canUseRange) {\n  this.canUseRange = canUseRange;\n};\n\n\nStopCheckProfile.prototype.getCanUseDescription = function() {\n  return this.canUseDescription;\n};\nElement.add(StopCheckProfile, {name: \"CANUSEDESC\", required: true, order: 30, attributeType: Boolean, readMethod: \"getCanUseDescription\", writeMethod: \"setCanUseDescription\"});\n\n\nStopCheckProfile.prototype.setCanUseDescription = function(/*Boolean*/ canUseDescription) {\n  this.canUseDescription = canUseDescription;\n};\n\n\nStopCheckProfile.prototype.getStopCheckFee = function() {\n  return this.stopCheckFee;\n};\nElement.add(StopCheckProfile, {name: \"STPCHKFEE\", required: true, order: 40, attributeType: Number, readMethod: \"getStopCheckFee\", writeMethod: \"setStopCheckFee\"});\n\n\nStopCheckProfile.prototype.setStopCheckFee = function(/*Double*/ stopCheckFee) {\n  this.stopCheckFee = stopCheckFee;\n};\n\n\n\n\nmodule.exports = StopCheckProfile;\n","\"use strict\";\n\nmodule.exports = {\n  EmailProfile: require(\"./EmailProfile\"),\n  StopCheckProfile: require(\"./StopCheckProfile\"),\n};\n","/*\n * Copyright 2012 TheStash\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar Aggregate = require(\"../../../../../meta/Aggregate\");\nvar Element = require(\"../../../../../meta/Element\");\n\n/**\n * Image Profile\n * @class\n * See \"Section 3.1.6.2 OFX Spec\"\n */\nfunction ImageProfile () {\n\n  /**\n   * @name ImageProfile#closingImageAvailable\n   * @type Boolean\n   * @access private\n   */\n  this.closingImageAvailable = null;\n\n  /**\n   * @name ImageProfile#transactionImageAvailable\n   * @type Boolean\n   * @access private\n   */\n  this.transactionImageAvailable = null;\n}\n\n\n\nAggregate.add(\"IMAGEPROF\", ImageProfile);\n\n\nImageProfile.prototype.getClosingImageAvailable = function() {\n  return this.closingImageAvailable;\n};\nElement.add(ImageProfile, {name: \"CLOSINGIMGAVAIL\", required: true, order: 10, attributeType: Boolean, readMethod: \"getClosingImageAvailable\", writeMethod: \"setClosingImageAvailable\"});\n\n\nImageProfile.prototype.setClosingImageAvailable = function(/*Boolean*/ closingImageAvailable) {\n  this.closingImageAvailable = closingImageAvailable;\n};\n\n\nImageProfile.prototype.getTransactionImageAvailable = function() {\n  return this.transactionImageAvailable;\n};\nElement.add(ImageProfile, {name: \"TRANIMGAVAIL\", required: true, order: 20, attributeType: Boolean, readMethod: \"getTransactionImageAvailable\", writeMethod: \"setTransactionImageAvailable\"});\n\n\nImageProfile.prototype.setTransactionImageAvailable = function(/*Boolean*/ transactionImageAvailable) {\n  this.transactionImageAvailable = transactionImageAvailable;\n};\n\n\n\n\nmodule.exports = ImageProfile;\n","/*\n * Copyright 2012 TheStash\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar Aggregate = require(\"../../../../../meta/Aggregate\");\nvar Element = require(\"../../../../../meta/Element\");\nvar ProcessorDayOff = require(\"../../../common/ProcessorDayOff\");\n\n/**\n * Funds Transfer Profile\n * @class\n * See \"Section 11.13.2.2 OFX Spec\"\n */\nfunction TransferProfile () {\n\n  /**\n   * @name TransferProfile#processorDaysOff\n   * @type ProcessorDayOff[]\n   * @access private\n   */\n  this.processorDaysOff = null;\n\n  /**\n   * @name TransferProfile#processEndTime\n   * @type String\n   * @access private\n   */\n  this.processEndTime = null;\n\n  /**\n   * @name TransferProfile#supportsScheduledTransfers\n   * @type Boolean\n   * @access private\n   */\n  this.supportsScheduledTransfers = null;\n\n  /**\n   * @name TransferProfile#supportsRecurringTransfers\n   * @type Boolean\n   * @access private\n   */\n  this.supportsRecurringTransfers = null;\n\n  /**\n   * @name TransferProfile#supportsLoanTransfers\n   * @type Boolean\n   * @access private\n   */\n  this.supportsLoanTransfers = null;\n\n  /**\n   * @name TransferProfile#supportsScheduledLoanTransfers\n   * @type Boolean\n   * @access private\n   */\n  this.supportsScheduledLoanTransfers = null;\n\n  /**\n   * @name TransferProfile#supportsRecurringLoanTransfers\n   * @type Boolean\n   * @access private\n   */\n  this.supportsRecurringLoanTransfers = null;\n\n  /**\n   * @name TransferProfile#supportsTransferModification\n   * @type Boolean\n   * @access private\n   */\n  this.supportsTransferModification = null;\n\n  /**\n   * @name TransferProfile#supportsModelModification\n   * @type Boolean\n   * @access private\n   */\n  this.supportsModelModification = null;\n\n  /**\n   * @name TransferProfile#modelWindow\n   * @type Integer\n   * @access private\n   */\n  this.modelWindow = null;\n\n  /**\n   * @name TransferProfile#withdrawnDays\n   * @type Integer\n   * @access private\n   */\n  this.withdrawnDays = null;\n\n  /**\n   * @name TransferProfile#defaultDaysToPay\n   * @type Integer\n   * @access private\n   */\n  this.defaultDaysToPay = null;\n}\n\n\n\nAggregate.add(\"XFERPROF\", TransferProfile);\n\n\n/**\n * Days of week that no processing occurs: MONDAY, TUESDAY, WEDNESDAY, THURSDAY,\n * FRIDAY, SATURDAY, or SUNDAY. 0 or more <PROCDAYSOFF> can be sent.\n * @return {ProcessorDayOff[]} List of days during the week that no processing occurs.\n */\nTransferProfile.prototype.getProcessorDaysOff = function() {\n  return this.processorDaysOff;\n};\nElement.add(TransferProfile, {name: \"PROCDAYSOFF\", order: 0, attributeType: Array, collectionEntryType: ProcessorDayOff, readMethod: \"getProcessorDaysOff\", writeMethod: \"setProcessorDaysOff\"});\n\n\nTransferProfile.prototype.setProcessorDaysOff = function(/*ProcessorDayOff[]*/ processorDaysOff) {\n  this.processorDaysOff = processorDaysOff;\n};\n\n\n/**\n * Gets time of day that day's processing ends.\n *\n * Time formatted as \"HHMMSS.XXX[gmt offset[:tz name]]\",\n * the milliseconds and time zone are still optional, and default to GMT.\n * See \"Section 3.2.8.3 OFX Spec\"\n * @return {String} Time String formatted as \"HHMMSS.XXX[gmt offset[:tz name]]\"\n */\nTransferProfile.prototype.getProcessEndTime = function() {\n  return this.processEndTime;\n};\nElement.add(TransferProfile, {name: \"PROCENDTM\", required: true, order: 10, attributeType: String, readMethod: \"getProcessEndTime\", writeMethod: \"setProcessEndTime\"});\n\n\n/**\n * Sets the time of day that day's processing ends.\n *\n * Time formatted as \"HHMMSS.XXX[gmt offset[:tz name]]\",\n * the milliseconds and time zone are still optional, and default to GMT.\n\n * See \"Section 3.2.8.3 OFX Spec\"\n * @param {String} processEndTime formatted as \"HHMMSS.XXX[gmt offset[:tz name]]\"\n */\nTransferProfile.prototype.setProcessEndTime = function(processEndTime) {\n  this.processEndTime = processEndTime;\n};\n\n\nTransferProfile.prototype.getSupportsScheduledTransfers = function() {\n  return this.supportsScheduledTransfers;\n};\nElement.add(TransferProfile, {name: \"CANSCHED\", required: true, order: 20, attributeType: Boolean, readMethod: \"getSupportsScheduledTransfers\", writeMethod: \"setSupportsScheduledTransfers\"});\n\n\nTransferProfile.prototype.setSupportsScheduledTransfers = function(/*Boolean*/ supportsScheduledTransfers) {\n  this.supportsScheduledTransfers = supportsScheduledTransfers;\n};\n\n\n/**\n * Requires <CANSCHED>\n * @return {Boolean} Boolean whether supports recurring transfers\n */\nTransferProfile.prototype.getSupportsRecurringTransfers = function() {\n  return this.supportsRecurringTransfers;\n};\nElement.add(TransferProfile, {name: \"CANRECUR\", required: true, order: 30, attributeType: Boolean, readMethod: \"getSupportsRecurringTransfers\", writeMethod: \"setSupportsRecurringTransfers\"});\n\n\nTransferProfile.prototype.setSupportsRecurringTransfers = function(/*Boolean*/ supportsRecurringTransfers) {\n  this.supportsRecurringTransfers = supportsRecurringTransfers;\n};\n\n\n/**\n * <CANLOAN>Y must be present for transfers to involve loans\n * @return {Boolean} Boolean whether supports loan transfers\n */\nTransferProfile.prototype.getSupportsLoanTransfers = function() {\n  return this.supportsLoanTransfers;\n};\nElement.add(TransferProfile, {name: \"CANLOAN\", order: 40, attributeType: Boolean, readMethod: \"getSupportsLoanTransfers\", writeMethod: \"setSupportsLoanTransfers\"});\n\n\nTransferProfile.prototype.setSupportsLoanTransfers = function(/*Boolean*/ supportsLoanTransfers) {\n  this.supportsLoanTransfers = supportsLoanTransfers;\n};\n\n\nTransferProfile.prototype.getSupportsScheduledLoanTransfers = function() {\n  return this.supportsScheduledLoanTransfers;\n};\nElement.add(TransferProfile, {name: \"CANSCHEDLOAN\", order: 50, attributeType: Boolean, readMethod: \"getSupportsScheduledLoanTransfers\", writeMethod: \"setSupportsScheduledLoanTransfers\"});\n\n\nTransferProfile.prototype.setSupportsScheduledLoanTransfers = function(/*Boolean*/ supportsScheduledLoanTransfers) {\n  this.supportsScheduledLoanTransfers = supportsScheduledLoanTransfers;\n};\n\n\nTransferProfile.prototype.getSupportsRecurringLoanTransfers = function() {\n  return this.supportsRecurringLoanTransfers;\n};\nElement.add(TransferProfile, {name: \"CANRECURLOAN\", order: 60, attributeType: Boolean, readMethod: \"getSupportsRecurringLoanTransfers\", writeMethod: \"setSupportsRecurringLoanTransfers\"});\n\n\nTransferProfile.prototype.setSupportsRecurringLoanTransfers = function(/*Boolean*/ supportsRecurringLoanTransfers) {\n  this.supportsRecurringLoanTransfers = supportsRecurringLoanTransfers;\n};\n\n\nTransferProfile.prototype.getSupportsTransferModification = function() {\n  return this.supportsTransferModification;\n};\nElement.add(TransferProfile, {name: \"CANMODXFERS\", required: true, order: 70, attributeType: Boolean, readMethod: \"getSupportsTransferModification\", writeMethod: \"setSupportsTransferModification\"});\n\n\nTransferProfile.prototype.setSupportsTransferModification = function(/*Boolean*/ supportsTransferModification) {\n  this.supportsTransferModification = supportsTransferModification;\n};\n\n\nTransferProfile.prototype.getSupportsModelModification = function() {\n  return this.supportsModelModification;\n};\nElement.add(TransferProfile, {name: \"CANMODMDLS\", required: true, order: 80, attributeType: Boolean, readMethod: \"getSupportsModelModification\", writeMethod: \"setSupportsModelModification\"});\n\n\nTransferProfile.prototype.setSupportsModelModification = function(/*Boolean*/ supportsModelModification) {\n  this.supportsModelModification = supportsModelModification;\n};\n\n\n/**\n * Model window\n * the number of days before a recurring transaction is scheduled to be processed that it is\n * instantiated on the system\n * @return {Integer} Integer number of days before a recurring transaction is scheduled to be processed that it is instantiated on the system\n */\nTransferProfile.prototype.getModelWindow = function() {\n  return this.modelWindow;\n};\nElement.add(TransferProfile, {name: \"MODELWND\", required: true, order: 90, attributeType: Number, readMethod: \"getModelWindow\", writeMethod: \"setModelWindow\"});\n\n\nTransferProfile.prototype.setModelWindow = function(/*Integer*/ modelWindow) {\n  this.modelWindow = modelWindow;\n};\n\n\n/**\n * Number of days before processing date that funds are withdrawn\n * @return {Integer} Integer number of days before processing date that funds are withdrawn\n */\nTransferProfile.prototype.getWithdrawnDays = function() {\n  return this.withdrawnDays;\n};\nElement.add(TransferProfile, {name: \"DAYSWITH\", required: true, order: 100, attributeType: Number, readMethod: \"getWithdrawnDays\", writeMethod: \"setWithdrawnDays\"});\n\n\nTransferProfile.prototype.setWithdrawnDays = function(/*Integer*/ withdrawnDays) {\n  this.withdrawnDays = withdrawnDays;\n};\n\n\n/**\n * Default number of days to pay\n * @return {Integer} Integer Default number of days to pay\n */\nTransferProfile.prototype.getDefaultDaysToPay = function() {\n  return this.defaultDaysToPay;\n};\nElement.add(TransferProfile, {name: \"DFLTDAYSTOPAY\", required: true, order: 110, attributeType: Number, readMethod: \"getDefaultDaysToPay\", writeMethod: \"setDefaultDaysToPay\"});\n\n\nTransferProfile.prototype.setDefaultDaysToPay = function(/*Integer*/ defaultDaysToPay) {\n  this.defaultDaysToPay = defaultDaysToPay;\n};\n\n\n\n\nmodule.exports = TransferProfile;\n","\"use strict\";\n\nmodule.exports = {\n  ImageProfile: require(\"./ImageProfile\"),\n  TransferProfile: require(\"./TransferProfile\")\n};\n","\"use strict\";\n\nmodule.exports = {\n  banking: require(\"./banking/index\"),\n  common: require(\"./common/index\"),\n  signup: require(\"./signup/index\"),\n\n  BankingMessageSetInfo: require(\"./BankingMessageSetInfo\"),\n  BankingV1MessageSetInfo: require(\"./BankingV1MessageSetInfo\"),\n  BillpayMessageSetInfo: require(\"./BillpayMessageSetInfo\"),\n  BillpayV1MessageSetInfo: require(\"./BillpayV1MessageSetInfo\"),\n  CreditCardMessageSetInfo: require(\"./CreditCardMessageSetInfo\"),\n  CreditCardV1MessageSetInfo: require(\"./CreditCardV1MessageSetInfo\"),\n  EmailMessageSetInfo: require(\"./EmailMessageSetInfo\"),\n  EmailV1MessageSetInfo: require(\"./EmailV1MessageSetInfo\"),\n  InterbankTransferMessageSetInfo: require(\"./InterbankTransferMessageSetInfo\"),\n  InterbankTransferV1MessageSetInfo: require(\"./InterbankTransferV1MessageSetInfo\"),\n  InvestmentMessageSetInfo: require(\"./InvestmentMessageSetInfo\"),\n  InvestmentV1MessageSetInfo: require(\"./InvestmentV1MessageSetInfo\"),\n  ProfileMessageSetInfo: require(\"./ProfileMessageSetInfo\"),\n  ProfileV1MessageSetInfo: require(\"./ProfileV1MessageSetInfo\"),\n  SecurityListMessageSetInfo: require(\"./SecurityListMessageSetInfo\"),\n  SecurityListV1MessageSetInfo: require(\"./SecurityListV1MessageSetInfo\"),\n  SignOnMessageSetInfo: require(\"./SignOnMessageSetInfo\"),\n  SignOnV1MessageSetInfo: require(\"./SignOnV1MessageSetInfo\"),\n  SignupMessageSetInfo: require(\"./SignupMessageSetInfo\"),\n  SignupV1MessageSetInfo: require(\"./SignupV1MessageSetInfo\"),\n  WireTransferMessageSetInfo: require(\"./WireTransferMessageSetInfo\"),\n  WireTransferV1MessageSetInfo: require(\"./WireTransferV1MessageSetInfo\"),\n};\n","/*\n * Copyright 2012 TheStash\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar Aggregate = require(\"../../../../../meta/Aggregate\");\nvar Element = require(\"../../../../../meta/Element\");\n\n/**\n * Client Enrollment option, contains indicator as to whether the account number is required as part of enrollment\n * @class\n * See \"Section 8.8 OFX Spec\"\n */\nfunction ClientEnrollment () {\n\n  /**\n   * @name ClientEnrollment#accountRequired\n   * @type Boolean\n   * @access private\n   */\n  this.accountRequired = null;\n}\n\n\n\nAggregate.add(\"CLIENTENROLL\", ClientEnrollment);\n\n\n/**\n * Y if account number is required as part of enrollment\n * @return {Boolean} Boolean\n */\nClientEnrollment.prototype.getAccountRequired = function() {\n  return this.accountRequired;\n};\nElement.add(ClientEnrollment, {name: \"ACCTREQUIRED\", required: true, order: 0, attributeType: Boolean, readMethod: \"getAccountRequired\", writeMethod: \"setAccountRequired\"});\n\n\nClientEnrollment.prototype.setAccountRequired = function(/*Boolean*/ accountRequired) {\n  this.accountRequired = accountRequired;\n};\n\n\n\n\nmodule.exports = ClientEnrollment;\n","/*\n * Copyright 2012 TheStash\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar Aggregate = require(\"../../../../../meta/Aggregate\");\nvar Element = require(\"../../../../../meta/Element\");\n\n/**\n * Other Enrollment option containing a text message directing users to some other method (such as a phone call)\n * @class\n * See \"Section 8.8 OFX Spec\"\n */\n\nfunction OtherEnrollment () {\n\n  /**\n   * @name OtherEnrollment#message\n   * @type String\n   * @access private\n   */\n  this.message = null;\n}\n\n\n\nAggregate.add(\"OTHERENROLL\", OtherEnrollment);\n\n\n/**\n * Message to consumer about what to do next (for example, a phone number),\n * @return {String} String\n */\nOtherEnrollment.prototype.getMessage = function() {\n  return this.message;\n};\nElement.add(OtherEnrollment, {name: \"MESSAGE\", required: true, order: 0, attributeType: String, readMethod: \"getMessage\", writeMethod: \"setMessage\"});\n\n\nOtherEnrollment.prototype.setMessage = function(/*String*/ message) {\n  this.message = message;\n};\n\n\n\n\nmodule.exports = OtherEnrollment;\n","/*\n * Copyright 2012 TheStash\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar Aggregate = require(\"../../../../../meta/Aggregate\");\nvar Element = require(\"../../../../../meta/Element\");\n\n/**\n * Web Enrollment option containing URL to direct user for web based enrollment, if supported.\n * @class\n * See \"Section 8.8 OFX Spec\"\n */\nfunction WebEnrollment () {\n\n  /**\n   * @name WebEnrollment#url\n   * @type String\n   * @access private\n   */\n  this.url = null;\n}\n\n\n\nAggregate.add(\"WEBENROLL\", WebEnrollment);\n\n\n/**\n * URL to start enrollment process\n * @return {String} String\n */\nWebEnrollment.prototype.getUrl = function() {\n  return this.url;\n};\nElement.add(WebEnrollment, {name: \"URL\", required: true, order: 0, attributeType: String, readMethod: \"getUrl\", writeMethod: \"setUrl\"});\n\n\nWebEnrollment.prototype.setUrl = function(/*String*/ url) {\n  this.url = url;\n};\n\n\n\n\nmodule.exports = WebEnrollment;\n","\"use strict\";\n\nmodule.exports = {\n  ClientEnrollment: require(\"./ClientEnrollment\"),\n  OtherEnrollment: require(\"./OtherEnrollment\"),\n  WebEnrollment: require(\"./WebEnrollment\"),\n};\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\"use strict\";\n\n/**\n * Asset class for debt.\n * See \"Section 13.8.5.7, OFX Spec\"\n *\n * @enum\n */\nvar AssetClass = {\n  /**\n   * Government or corporate bonds issued in the United States.\n   */\n  DOMESTIC_BOND: \"DOMESTICBOND\",\n\n  /**\n   * Government or corporate bonds issued in foreign countries or the United States.\n   */\n  INTL_BOND: \"INTLBOND\",\n\n  /**\n   * Stocks for US companies with market caps of $2B or more.\n   */\n  LARGE_STOCK: \"LARGESTOCK\",\n\n  /**\n   * Stocks for US companies with market caps of ~$100M to $2B.\n   */\n  SMALL_STOCK: \"SMALLSTOCK\",\n\n  /**\n   * Publicallt traded stocks for companies based in foreign countries.\n   */\n  INTL_STOCK: \"INTLSTOCK\",\n\n  /**\n   * Stable, short-term investments which provide income that rises and falls with short-term\n   * interest rates.\n   */\n  MONEY_MARKET: \"MONEYMARKET\",\n\n  /**\n   * Investments which do not fit into any of the other types.\n   */\n  OTHER: \"OTHER\",\n\n  fromOfx: function(/*String*/ ofxVal) {\n    if (\"DOMESTICBOND\" === ofxVal) {\n      return AssetClass.DOMESTIC_BOND;\n    } else if (\"INTLBOND\" === ofxVal) {\n      return AssetClass.INTL_BOND;\n    } else if (\"LARGESTOCK\" === ofxVal) {\n      return AssetClass.LARGE_STOCK;\n    } else if (\"SMALLSTOCK\" === ofxVal) {\n      return AssetClass.SMALL_STOCK;\n    } else if (\"INTLSTOCK\" === ofxVal) {\n      return AssetClass.INTL_STOCK;\n    } else if (\"MONEYMARKET\" === ofxVal) {\n      return AssetClass.MONEY_MARKET;\n    } else if (\"OTHER\" === ofxVal) {\n      return AssetClass.OTHER;\n    } else {\n      return null;\n    }\n  }\n};\n\n\nmodule.exports = AssetClass;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar SecurityInfo = require(\"./SecurityInfo\");\n\n/**\n * Base class for info about the various types of securities.\n * See \"Section 13.8.5.1, OFX Spec\"\n * <br>\n * This class exposes a read-only view of the flattened aggregates that are\n * common to all security info as a convenience to application\n * developers who may not find the ofx aggregation model intuitive.\n *\n * @class\n */\nfunction BaseSecurityInfo () {\n\n  /**\n   * @name BaseSecurityInfo#securityInfo\n   * @type SecurityInfo\n   * @access private\n   */\n  this.securityInfo = null;\n}\n\n\n\n\n\n/**\n * Gets the security info aggregate.\n *\n * @return {SecurityInfo} the security info aggregate.\n */\nBaseSecurityInfo.prototype.getSecurityInfo = function() {\n  return this.securityInfo;\n};\nChildAggregate.add(BaseSecurityInfo, {required: true, order: 10, attributeType: SecurityInfo, readMethod: \"getSecurityInfo\", writeMethod: \"setSecurityInfo\"});\n\n\n/**\n * Sets the security info aggregate.\n *\n * @param {SecurityInfo} securityInfo the security info aggregate.\n */\nBaseSecurityInfo.prototype.setSecurityInfo = function(securityInfo) {\n  this.securityInfo = securityInfo;\n};\n\n\n/**\n * Gets the unique security id for the security. This is a required field according to the OFX\n * spec.\n *\n * @return {SecurityId} the security id\n */\nBaseSecurityInfo.prototype.getSecurityId = function() {\n  return this.getSecurityInfo().getSecurityId();\n};\n\n\n/**\n * Gets the full name of the security. This is a required field according to the OFX spec.\n *\n * @return {String} the full name of the security.\n */\nBaseSecurityInfo.prototype.getSecurityName = function() {\n  return this.getSecurityInfo().getSecurityName();\n};\n\n\n/**\n * Gets the ticker symbol for the security. This is an optional field according to the OFX spec.\n *\n * @return {String} the ticket symbol or null if there's no ticker symbol\n */\nBaseSecurityInfo.prototype.getTickerSymbol = function() {\n  return this.getSecurityInfo().getTickerSymbol();\n};\n\n\n/**\n * Gets the FI ID number for the security. This is an optional field according to the OFX spec.\n *\n * @return {String} the FI ID number for the security\n */\nBaseSecurityInfo.prototype.getFiId = function() {\n  return this.getSecurityInfo().getFiId();\n};\n\n\n/**\n * Gets the rating of the security. This is an optional field according to the OFX spec.\n *\n * @return {String} the rating\n */\nBaseSecurityInfo.prototype.getRating = function() {\n  return this.getSecurityInfo().getRating();\n};\n\n\n/**\n * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n * per contact) price. This is a noptional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the per unit price\n */\nBaseSecurityInfo.prototype.getUnitPrice = function() {\n  return this.getSecurityInfo().getUnitPrice();\n};\n\n\n/**\n * Gets the date as-of for the unit price. This is an optional field according to the OFX spec.\n *\n * @return {Date} the date as-of for the unit price\n */\nBaseSecurityInfo.prototype.getUnitPriceAsOfDate = function() {\n  return this.getSecurityInfo().getUnitPriceAsOfDate();\n};\n\n\n/**\n * Gets the overriding currency code for the security. If not set, implies the default currency.\n * This is an optional field according to the OFX spec.\n *\n * @return {String} the overriding currency code or null to mean the default currency\n */\nBaseSecurityInfo.prototype.getCurrencyCode = function() {\n  return this.getSecurityInfo().getCurrencyCode();\n};\n\n\n/**\n * Gets any memo associated with the security. This is an optional field according to the OFX\n * spec.\n *\n * @return {String} the memo\n */\nBaseSecurityInfo.prototype.getMemo = function() {\n  return this.getSecurityInfo().getMemo();\n};\n\n\n\n\nmodule.exports = BaseSecurityInfo;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * Call type for debt.\n * See \"Section 13.8.5.2, OFX Spec\"\n *\n * @enum\n */\nvar CallType = {\n  CALL: \"CALL\",\n  PUT: \"PUT\",\n  PREFUND: \"PREFUND\",\n  MATURITY: \"MATURITY\",\n\n  fromOfx: function(/*String*/ ofxVal) {\n    if (\"CALL\" === ofxVal) {\n      return CallType.CALL;\n    } else if (\"PUT\" === ofxVal) {\n      return CallType.PUT;\n    } else if (\"PREFUND\" === ofxVal) {\n      return CallType.PREFUND;\n    } else if (\"MATURITY\" === ofxVal) {\n      return CallType.MATURITY;\n    } else {\n      return null;\n    }\n  }\n};\n\n\nmodule.exports = CallType;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * Coupon freqency for debt.\n * See \"Section 13.8.5.2, OFX Spec\"\n *\n * @enum\n */\nvar CouponFrequency = {\n  MONTHLY: \"MONTHLY\",\n  QUARTERLY: \"QUARTERLY\",\n  SEMIANNUAL: \"SEMIANNUAL\",\n  ANNUAL: \"ANNUAL\",\n  OTHER: \"OTHER\",\n\n  fromOfx: function(/*String*/ ofxVal) {\n    if (\"MONTHLY\" === ofxVal) {\n      return CouponFrequency.MONTHLY;\n    } else if (\"QUARTERLY\" === ofxVal) {\n      return CouponFrequency.QUARTERLY;\n    } else if (\"SEMIANNUAL\" === ofxVal) {\n      return CouponFrequency.SEMIANNUAL;\n    } else if (\"ANNUAL\" === ofxVal) {\n      return CouponFrequency.ANNUAL;\n    } else if (\"OTHER\" === ofxVal) {\n      return CouponFrequency.OTHER;\n    } else {\n      return null;\n    }\n  }\n};\n\n\nmodule.exports = CouponFrequency;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * The class of debt.\n * See \"Section 13.8.5.2, OFX Spec\"\n *\n * @enum\n */\nvar DebtClass = {\n  TREASURY: \"TREASURY\",\n  MUNICIPAL: \"MUNICIPAL\",\n  CORPORATE: \"CORPORATE\",\n  OTHER: \"OTHER\",\n\n  fromOfx: function(/*String*/ ofxVal) {\n    if (\"TREASURY\" === ofxVal) {\n      return DebtClass.TREASURY;\n    } else if (\"MUNICIPAL\" === ofxVal) {\n      return DebtClass.MUNICIPAL;\n    } else if (\"CORPORATE\" === ofxVal) {\n      return DebtClass.CORPORATE;\n    } else if (\"OTHER\" === ofxVal) {\n      return DebtClass.OTHER;\n    } else {\n      return null;\n    }\n  }\n};\n\n\nmodule.exports = DebtClass;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar Element = require(\"../../../meta/Element\");\nvar BaseSecurityInfo = require(\"./BaseSecurityInfo\");\nvar DebtType = require(\"./DebtType\");\nvar DebtClass = require(\"./DebtClass\");\nvar CouponFrequency = require(\"./CouponFrequency\");\nvar CallType = require(\"./CallType\");\nvar AssetClass = require(\"./AssetClass\");\n\n/**\n * Info about a debt security.\n * See \"Section 13.8.5.2, OFX Spec\"\n *\n * @class\n * @augments BaseSecurityInfo\n */\nfunction DebtSecurityInfo () {\n  BaseSecurityInfo.call(this);\n\n  /**\n   * @name DebtSecurityInfo#parValue\n   * @type Double\n   * @access private\n   */\n  this.parValue = null;\n\n  /**\n   * @name DebtSecurityInfo#debtType\n   * @type String\n   * @access private\n   */\n  this.debtType = null;\n\n  /**\n   * @name DebtSecurityInfo#debtClass\n   * @type String\n   * @access private\n   */\n  this.debtClass = null;\n\n  /**\n   * @name DebtSecurityInfo#couponRate\n   * @type Double\n   * @access private\n   */\n  this.couponRate = null;\n\n  /**\n   * @name DebtSecurityInfo#nextMaturityDate\n   * @type Date\n   * @access private\n   */\n  this.nextMaturityDate = null;\n\n  /**\n   * @name DebtSecurityInfo#couponFrequency\n   * @type String\n   * @access private\n   */\n  this.couponFrequency = null;\n\n  /**\n   * @name DebtSecurityInfo#callPrice\n   * @type Double\n   * @access private\n   */\n  this.callPrice = null;\n\n  /**\n   * @name DebtSecurityInfo#yieldToCall\n   * @type Double\n   * @access private\n   */\n  this.yieldToCall = null;\n\n  /**\n   * @name DebtSecurityInfo#nextCallDate\n   * @type Date\n   * @access private\n   */\n  this.nextCallDate = null;\n\n  /**\n   * @name DebtSecurityInfo#callType\n   * @type String\n   * @access private\n   */\n  this.callType = null;\n\n  /**\n   * @name DebtSecurityInfo#yieldToMaturity\n   * @type Double\n   * @access private\n   */\n  this.yieldToMaturity = null;\n\n  /**\n   * @name DebtSecurityInfo#debtMaturityDate\n   * @type Date\n   * @access private\n   */\n  this.debtMaturityDate = null;\n\n  /**\n   * @name DebtSecurityInfo#assetClass\n   * @type String\n   * @access private\n   */\n  this.assetClass = null;\n\n  /**\n   * @name DebtSecurityInfo#fiAssetClass\n   * @type String\n   * @access private\n   */\n  this.fiAssetClass = null;\n}\n\ninherit(DebtSecurityInfo, \"extends\", BaseSecurityInfo);\n\n\nAggregate.add(\"DEBTINFO\", DebtSecurityInfo);\n\n\n/**\n * Gets the par value of the debt. This is a required field according to the OFX spec.\n *\n * @return {Double} the par value of the debt\n */\nDebtSecurityInfo.prototype.getParValue = function() {\n  return this.parValue;\n};\nElement.add(DebtSecurityInfo, {name: \"PARVALUE\", required:true, order: 20, attributeType: Number, readMethod: \"getParValue\", writeMethod: \"setParValue\"});\n\n\n/**\n * Sets the par value of the debt. This is a required field according to the OFX spec.\n *\n * @param {Double} parValue the par value of the debt\n */\nDebtSecurityInfo.prototype.setParValue = function(parValue) {\n  this.parValue = parValue;\n};\n\n\n/**\n * Gets the type of debt. One of \"COUPON\" or \"ZERO\". This is a required field according to the\n * OFX spec.\n *\n * @return {String} the type of debt\n */\nDebtSecurityInfo.prototype.getDebtType = function() {\n  return this.debtType;\n};\nElement.add(DebtSecurityInfo, {name: \"DEBTTYPE\", required:true, order: 30, attributeType: String, readMethod: \"getDebtType\", writeMethod: \"setDebtType\"});\n\n\n/**\n * Sets the type of debt. One of \"COUPON\" or \"ZERO\". This is a required field according to the\n * OFX spec.\n *\n * @param {String} debtType the type of debt\n */\nDebtSecurityInfo.prototype.setDebtType = function(debtType) {\n  this.debtType = debtType;\n};\n\n\n/**\n * Gets the type of debt as one of the well-known types.\n *\n * @return {DebtType} the type of debt or null if it's not one of the well-known types\n */\nDebtSecurityInfo.prototype.getDebtTypeEnum = function() {\n  return DebtType.fromOfx(this.getDebtType());\n};\n\n\n/**\n * Gets the class of debt. One of \"TREASURY\", \"MUNICIPAL\", \"CORPORATE\", or \"OTHER\".\n * This is an optional field according to the OFX spec.\n *\n * @return {String} the class of debt\n */\nDebtSecurityInfo.prototype.getDebtClass = function() {\n  return this.debtClass;\n};\nElement.add(DebtSecurityInfo, {name: \"DEBTCLASS\", order: 40, attributeType: String, readMethod: \"getDebtClass\", writeMethod: \"setDebtClass\"});\n\n\n/**\n * Sets the class of debt. One of \"TREASURY\", \"MUNICIPAL\", \"CORPORATE\", or \"OTHER\".\n * This is an optional field according to the OFX spec.\n *\n * @param {String} debtClass the class of debt\n */\nDebtSecurityInfo.prototype.setDebtClass = function(debtClass) {\n  this.debtClass = debtClass;\n};\n\n\n/**\n * Gets the class of debt as one of the well-known types.\n *\n * @return {DebtClass} the class of debt or null if it's not one of the well-known types\n */\nDebtSecurityInfo.prototype.getDebtClassEnum = function() {\n  return DebtClass.fromOfx(this.debtClass);\n};\n\n\n/**\n * Gets the coupon rate of the debt for the next closest call date.\n * This is an optional field according to the OFX spec.\n *\n * @return {Double} the coupon rate\n */\nDebtSecurityInfo.prototype.getCouponRate = function() {\n  return this.couponRate;\n};\nElement.add(DebtSecurityInfo, {name: \"COUPONRT\", order: 50, attributeType: Number, readMethod: \"getCouponRate\", writeMethod: \"setCouponRate\"});\n\n\n/**\n * Sets the coupon rate of the debt for the next closest call date.\n * This is an optional field according to the OFX spec.\n *\n * @param {Double} couponRate the coupon rate\n */\nDebtSecurityInfo.prototype.setCouponRate = function(couponRate) {\n  this.couponRate = couponRate;\n};\n\n\n/**\n * Gets the next maturity date for the next coupon.\n * This is an optional field according to the OFX spec.\n *\n * @return {Date} the maturity date for the next coupon\n */\nDebtSecurityInfo.prototype.getNextMaturityDate = function() {\n  return this.nextMaturityDate;\n};\nElement.add(DebtSecurityInfo, {name: \"DTCOUPON\", order: 60, attributeType: Date, readMethod: \"getNextMaturityDate\", writeMethod: \"setNextMaturityDate\"});\n\n\n/**\n * Sets the next maturity date for the next coupon.\n * This is an optional field according to the OFX spec.\n *\n * @param {Date} nextMaturityDate the maturity date for the next coupon.\n */\nDebtSecurityInfo.prototype.setNextMaturityDate = function(nextMaturityDate) {\n  this.nextMaturityDate = nextMaturityDate;\n};\n\n\n/**\n * Gets the coupon frequency. One of \"MONTHLY\", \"QUARTERLY\", \"SEMIANNUAL\", \"ANNUAL\", or \"OTHER\".\n * This is an optional field according to the OFX spec.\n *\n * @return {String} the coupon frequency\n */\nDebtSecurityInfo.prototype.getCouponFrequency = function() {\n  return this.couponFrequency;\n};\nElement.add(DebtSecurityInfo, {name: \"COUPONFREQ\", order: 70, attributeType: String, readMethod: \"getCouponFrequency\", writeMethod: \"setCouponFrequency\"});\n\n\n/**\n * Sets the coupon frequency. One of \"MONTHLY\", \"QUARTERLY\", \"SEMIANNUAL\", \"ANNUAL\", or \"OTHER\".\n * This is an optional field according to the OFX spec.\n *\n * @param {String} couponFrequency the coupon frequency\n */\nDebtSecurityInfo.prototype.setCouponFrequency = function(couponFrequency) {\n  this.couponFrequency = couponFrequency;\n};\n\n\n/**\n * Gets the coupon frequency as one of the well-known types.\n *\n * @return {CouponFrequency} the coupon frequency or null if it's not one of the well-known types\n */\nDebtSecurityInfo.prototype.getCouponFrequencyEnum = function() {\n  return CouponFrequency.fromOfx(this.getCouponFrequency());\n};\n\n\n/**\n * Gets the bond price. This is an optional field according to the OFX spec.\n *\n * @return {Double} the bond price\n */\nDebtSecurityInfo.prototype.getCallPrice = function() {\n  return this.callPrice;\n};\nElement.add(DebtSecurityInfo, {name: \"CALLPRICE\", order: 80, attributeType: Number, readMethod: \"getCallPrice\", writeMethod: \"setCallPrice\"});\n\n\n/**\n * Sets the bond price. This is an optional field according to the OFX spec.\n *\n * @param {Double} callPrice the bond price\n */\nDebtSecurityInfo.prototype.setCallPrice = function(callPrice) {\n  this.callPrice = callPrice;\n};\n\n\n/**\n * Gets the yield to call as a rate. This is an optional field according to the OFX spec.\n *\n * @return {Double} the yield to call rate\n */\nDebtSecurityInfo.prototype.getYieldToCall = function() {\n  return this.yieldToCall;\n};\nElement.add(DebtSecurityInfo, {name: \"YIELDTOCALL\", order: 90, attributeType: Number, readMethod: \"getYieldToCall\", writeMethod: \"setYieldToCall\"});\n\n\n/**\n * Sets the yield to call as a rate. This is an optional field according to the OFX spec.\n *\n * @param {Double} yieldToCall the yield to call rate\n */\nDebtSecurityInfo.prototype.setYieldToCall = function(yieldToCall) {\n  this.yieldToCall = yieldToCall;\n};\n\n\n/**\n * Gets the next call date. This is an optional field according to the OFX spec.\n *\n * @return {Date} the next call date.\n */\nDebtSecurityInfo.prototype.getNextCallDate = function() {\n  return this.nextCallDate;\n};\nElement.add(DebtSecurityInfo, {name: \"DTCALL\", order: 100, attributeType: Date, readMethod: \"getNextCallDate\", writeMethod: \"setNextCallDate\"});\n\n\n/**\n * Sets the next call date. This is an optional field according to the OFX spec.\n *\n * @param {Date} nextCallDate the next call date.\n */\nDebtSecurityInfo.prototype.setNextCallDate = function(nextCallDate) {\n  this.nextCallDate = nextCallDate;\n};\n\n\n/**\n * Gets the type of call.\n *\n * @return {String} the type of call\n */\nDebtSecurityInfo.prototype.getCallType = function() {\n  return this.callType;\n};\nElement.add(DebtSecurityInfo, {name: \"CALLTYPE\", order: 110, attributeType: String, readMethod: \"getCallType\", writeMethod: \"setCallType\"});\n\n\n/**\n * Sets the type of call.\n *\n * @param {String} callType the type of call\n */\nDebtSecurityInfo.prototype.setCallType = function(callType) {\n  this.callType = callType;\n};\n\n\n/**\n * Gets the type of call as one of the well-known types.\n *\n * @return {CallType} the type of call or null if it's not one of the well-known types\n */\nDebtSecurityInfo.prototype.getCallTypeEnum = function() {\n  return CallType.fromOfx(this.getCallType());\n};\n\n\n/**\n * Gets the yield to maturity as a rate. This is an optional field according to the OFX spec.\n *\n * @return {Double} the yield to call rate\n */\nDebtSecurityInfo.prototype.getYieldToMaturity = function() {\n  return this.yieldToMaturity;\n};\nElement.add(DebtSecurityInfo, {name: \"YIELDTOMAT\", order: 120, attributeType: Number, readMethod: \"getYieldToMaturity\", writeMethod: \"setYieldToMaturity\"});\n\n\n/**\n * Sets the yield to maturity as a rate. This is an optional field according to the OFX spec.\n *\n * @param {Double} yieldToMaturity the yield to call rate\n */\nDebtSecurityInfo.prototype.setYieldToMaturity = function(yieldToMaturity) {\n  this.yieldToMaturity = yieldToMaturity;\n};\n\n\n/**\n * Gets the date when the debt matures. This is an optional field according to the OFX spec.\n *\n * @return {Date} the date when the debt matures\n */\nDebtSecurityInfo.prototype.getDebtMaturityDate = function() {\n  return this.debtMaturityDate;\n};\nElement.add(DebtSecurityInfo, {name: \"DTMAT\", order: 130, attributeType: Date, readMethod: \"getDebtMaturityDate\", writeMethod: \"setDebtMaturityDate\"});\n\n\n/**\n * Sets the date when the debt matures. This is an optional field according to the OFX spec.\n *\n * @param {Date} debtMaturityDate the date when the debt matures\n */\nDebtSecurityInfo.prototype.setDebtMaturityDate = function(debtMaturityDate) {\n  this.debtMaturityDate = debtMaturityDate;\n};\n\n\n/**\n * Gets the asset class of the debt. This is an optional field according to the OFX spec.\n *\n * @return {String} the asset class of the debt\n */\nDebtSecurityInfo.prototype.getAssetClass = function() {\n  return this.assetClass;\n};\nElement.add(DebtSecurityInfo, {name: \"ASSETCLASS\", order: 140, attributeType: String, readMethod: \"getAssetClass\", writeMethod: \"setAssetClass\"});\n\n\n/**\n * Sets the asset class of the debt. This is an optional field according to the OFX spec.\n *\n * @param {String} assetClass the asset class of the debt\n */\nDebtSecurityInfo.prototype.setAssetClass = function(assetClass) {\n  this.assetClass = assetClass;\n};\n\n\n/**\n * Gets the assert class as one of the well-known types.\n *\n * @return {AssetClass} the asset class or null if it's not one of the well-known types\n */\nDebtSecurityInfo.prototype.getAssetClassEnum = function() {\n  return AssetClass.fromOfx(this.getAssetClass());\n};\n\n\n/**\n * Gets the FI-defined asset class of the debt. This is an optional field according to the OFX\n * spec.\n *\n * @return {String} the FI-defined asset class of the debt\n */\nDebtSecurityInfo.prototype.getFiAssetClass = function() {\n  return this.fiAssetClass;\n};\nElement.add(DebtSecurityInfo, {name: \"FIASSETCLASS\", order: 150, attributeType: String, readMethod: \"getFiAssetClass\", writeMethod: \"setFiAssetClass\"});\n\n\n/**\n * Sets the FI-defined asset class of the debt. This is an optional field according to the OFX\n * spec.\n *\n * @param {String} fiAssetClass the FI-defined asset class of the debt\n */\nDebtSecurityInfo.prototype.setFiAssetClass = function(fiAssetClass) {\n  this.fiAssetClass = fiAssetClass;\n};\n\n\n\n\nmodule.exports = DebtSecurityInfo;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * The type of debt.\n * See \"Section 13.8.5.2, OFX Spec\"\n *\n * @class\n */\nvar DebtType = {\n  COUPON: 0,\n  ZERO: 1,\n\n  fromOfx: function(/*String*/ ofxVal) {\n    if (\"COUPON\" === ofxVal) {\n      return DebtType.COUPON;\n    } else if (\"ZERO\" === ofxVal) {\n      return DebtType.ZERO;\n    } else {\n      return null;\n    }\n  }\n};\n\n\nmodule.exports = DebtType;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar Element = require(\"../../../meta/Element\");\nvar BaseSecurityInfo = require(\"./BaseSecurityInfo\");\nvar MutualFundType = require(\"./MutualFundType\");\n\n/**\n * Info about a mutual fund security.\n * See \"Section 13.8.5.3, OFX Spec\"\n *\n * @class\n * @augments BaseSecurityInfo\n */\nfunction MutualFundSecurityInfo () {\n  BaseSecurityInfo.call(this);\n\n  /**\n   * @name MutualFundSecurityInfo#mfType\n   * @type String\n   * @access private\n   */\n  this.mfType = null;\n\n  /**\n   * @name MutualFundSecurityInfo#yield\n   * @type Double\n   * @access private\n   */\n  this.yield = null;\n\n  /**\n   * @name MutualFundSecurityInfo#dateYieldAsOf\n   * @type Date\n   * @access private\n   */\n  this.dateYieldAsOf = null;\n}\n\ninherit(MutualFundSecurityInfo, \"extends\", BaseSecurityInfo);\n\n\nAggregate.add(\"MFINFO\", MutualFundSecurityInfo);\n\n\n/**\n * Gets the mutual fund type. One of \"OPENEND\", \"CLOSEEND\", or \"OTHER\". This is an optional field\n * according to the OFX spec.\n *\n * @return {String} the mutual fund type\n */\nMutualFundSecurityInfo.prototype.getType = function() {\n  return this.mfType;\n};\nElement.add(MutualFundSecurityInfo, {name: \"MFTYPE\", order: 20, attributeType: String, readMethod: \"getType\", writeMethod: \"setType\"});\n\n\n/**\n * Sets the mutual fund type. One of \"OPENEND\", \"CLOSEEND\", or \"OTHER\". This is an optional field\n * according to the OFX spec.\n *\n * @param {String} mfType the mutual fund type\n */\nMutualFundSecurityInfo.prototype.setType = function(mfType) {\n  this.mfType = mfType;\n};\n\n\n/**\n * Gets the mutual fund type as one of the well-known types.\n *\n * @return {MutualFundType} the mutual fund type or null if it's not one of the well-known types\n */\nMutualFundSecurityInfo.prototype.getTypeEnum = function() {\n  return MutualFundType.fromOfx(this.getType());\n};\n\n\n/**\n * Gets the yield as a rate. This is an optional field according to the OFX spec.\n *\n * @return {Double} the yield as a rate\n */\nMutualFundSecurityInfo.prototype.getYield = function() {\n  return this.yield;\n};\nElement.add(MutualFundSecurityInfo, {name: \"YIELD\", order: 30, attributeType: Number, readMethod: \"getYield\", writeMethod: \"setYield\"});\n\n\n/**\n * Sets the yield as a rate. This is an optional field according to the OFX spec.\n *\n * @param {Double} yield the yield as a rate\n */\nMutualFundSecurityInfo.prototype.setYield = function(yield_) {\n  this.yield = yield_;\n};\n\n\n/**\n * Gets the as-of date for the yield. This is an optional field according to the OFX spec.\n *\n * @return {Date} the as-of date for the yield\n */\nMutualFundSecurityInfo.prototype.getDateYieldAsOf = function() {\n  return this.dateYieldAsOf;\n};\nElement.add(MutualFundSecurityInfo, {name: \"DTYIELDASOF\", order: 40, attributeType: Date, readMethod: \"getDateYieldAsOf\", writeMethod: \"setDateYieldAsOf\"});\n\n\n/**\n * Sets the as-of date for the yield. This is an optional field according to the OFX spec.\n *\n * @param {Date} dateYieldAsOf the as-of date for the yield\n */\nMutualFundSecurityInfo.prototype.setDateYieldAsOf = function(dateYieldAsOf) {\n  this.dateYieldAsOf = dateYieldAsOf;\n};\n\n\n\n\nmodule.exports = MutualFundSecurityInfo;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * The type of mutual fund.\n * See \"Section 13.8.5.2, OFX Spec\"\n *\n * @enum\n */\nvar MutualFundType = {\n  OPEN_END: \"OPENEND\",\n  CLOSE_END: \"CLOSEEND\",\n  OTHER: \"OTHER\",\n\n  fromOfx: function(/*String*/ ofxVal) {\n    if (\"OPENEND\" === ofxVal) {\n      return MutualFundType.OPEN_END;\n    } else if (\"CLOSEEND\" === ofxVal) {\n      return MutualFundType.CLOSE_END;\n    } else if (\"OTHER\" === ofxVal) {\n      return MutualFundType.OTHER;\n    } else {\n      return null;\n    }\n  }\n};\n\n\nmodule.exports = MutualFundType;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar Element = require(\"../../../meta/Element\");\nvar SecurityId = require(\"./SecurityId\");\nvar BaseSecurityInfo = require(\"./BaseSecurityInfo\");\nvar OptionType = require(\"./OptionType\");\nvar AssetClass = require(\"./AssetClass\");\n\n/**\n * Info about an option security.\n * See \"Section 13.8.5.4, OFX Spec\"\n *\n * @class\n * @augments BaseSecurityInfo\n */\nfunction OptionSecurityInfo () {\n  BaseSecurityInfo.call(this);\n\n  /**\n   * @name OptionSecurityInfo#optionType\n   * @type String\n   * @access private\n   */\n  this.optionType = null;\n\n  /**\n   * @name OptionSecurityInfo#strikePrice\n   * @type Double\n   * @access private\n   */\n  this.strikePrice = null;\n\n  /**\n   * @name OptionSecurityInfo#expirationDate\n   * @type Date\n   * @access private\n   */\n  this.expirationDate = null;\n\n  /**\n   * @name OptionSecurityInfo#sharesPerContact\n   * @type Integer\n   * @access private\n   */\n  this.sharesPerContact = null;\n\n  /**\n   * @name OptionSecurityInfo#underlyingSecurity\n   * @type SecurityId\n   * @access private\n   */\n  this.underlyingSecurity = null;\n\n  /**\n   * @name OptionSecurityInfo#assetClass\n   * @type String\n   * @access private\n   */\n  this.assetClass = null;\n\n  /**\n   * @name OptionSecurityInfo#fiAssetClass\n   * @type String\n   * @access private\n   */\n  this.fiAssetClass = null;\n}\n\ninherit(OptionSecurityInfo, \"extends\", BaseSecurityInfo);\n\n\nAggregate.add(\"OPTINFO\", OptionSecurityInfo);\n\n\n/**\n * Gets the type of option. One of \"PUT\" or \"CALL\". This is a required field according to the\n * OFX spec.\n *\n * @return {String} the option type\n */\nOptionSecurityInfo.prototype.getOptionType = function() {\n  return this.optionType;\n};\nElement.add(OptionSecurityInfo, {name: \"OPTTYPE\", order: 20, attributeType: String, readMethod: \"getOptionType\", writeMethod: \"setOptionType\"});\n\n\n/**\n * Sets the type of option. One of \"PUT\" or \"CALL\". This is a required field according to the\n * OFX spec.\n *\n * @param {String} optionType the option type\n */\nOptionSecurityInfo.prototype.setOptionType = function(optionType) {\n  this.optionType = optionType;\n};\n\n\n/**\n * Gets the option type as a well-known enum value.\n *\n * @return {OptionType} the option type or null if it's not one of the well-known types\n */\nOptionSecurityInfo.prototype.getOptionTypeEnum = function() {\n  return OptionType.fromOfx(this.getOptionType());\n};\n\n\n/**\n * Gets the strike price of the option. This is a required field according to the OFX spec.\n *\n * @return {Double} the option strike price\n */\nOptionSecurityInfo.prototype.getStrikePrice = function() {\n  return this.strikePrice;\n};\nElement.add(OptionSecurityInfo, {name: \"STRIKEPRICE\", order: 30, attributeType: Number, readMethod: \"getStrikePrice\", writeMethod: \"setStrikePrice\"});\n\n\n/**\n * Sets the strike price of the option. This is a required field according to the OFX spec.\n *\n * @param {Double} strikePrice the option strike price\n */\nOptionSecurityInfo.prototype.setStrikePrice = function(strikePrice) {\n  this.strikePrice = strikePrice;\n};\n\n\n/**\n * Gets the expiration date of the option. This is a required field according to the OFX spec.\n *\n * @return {Date} the expiration date of the option\n */\nOptionSecurityInfo.prototype.getExpirationDate = function() {\n  return this.expirationDate;\n};\nElement.add(OptionSecurityInfo, {name: \"DTEXPIRE\", order: 40, attributeType: Date, readMethod: \"getExpirationDate\", writeMethod: \"setExpirationDate\"});\n\n\n/**\n * Sets the expiration date of the option. This is a required field according to the OFX spec.\n *\n * @param {Date} expirationDate the expiration date of the option\n */\nOptionSecurityInfo.prototype.setExpirationDate = function(expirationDate) {\n  this.expirationDate = expirationDate;\n};\n\n\n/**\n * Gets the number of shares per option contact. This is a required field according to the OFX\n * spec.\n *\n * @return {Integer} the number of shares per option contact\n */\nOptionSecurityInfo.prototype.getSharesPerContact = function() {\n  return this.sharesPerContact;\n};\nElement.add(OptionSecurityInfo, {name: \"SHPERCTRCT\", order: 50, attributeType: Number, readMethod: \"getSharesPerContact\", writeMethod: \"setSharesPerContact\"});\n\n\n/**\n * Sets the number of shares per option contact. This is a required field according to the OFX\n * spec.\n *\n * @param {Integer} sharesPerContact the number of shares per option contact\n */\nOptionSecurityInfo.prototype.setSharesPerContact = function(sharesPerContact) {\n  this.sharesPerContact = sharesPerContact;\n};\n\n\n/**\n * Gets the security id of the underling security. This is an optional field according to the OFX\n * spec.\n *\n * @return {SecurityId} the security id of the underlying security\n */\nOptionSecurityInfo.prototype.getUnderlyingSecurity = function() {\n  return this.underlyingSecurity;\n};\nElement.add(OptionSecurityInfo, {name: \"SECID\", order: 60, attributeType: SecurityId, readMethod: \"getUnderlyingSecurity\", writeMethod: \"setUnderlyingSecurity\"});\n\n\n/**\n * Sets the security id of the underling security. This is an optional field according to the OFX\n * spec.\n *\n * @param {SecurityId} underlyingSecurity the security id of the underlying security\n */\nOptionSecurityInfo.prototype.setUnderlyingSecurity = function(underlyingSecurity) {\n  this.underlyingSecurity = underlyingSecurity;\n};\n\n\n/**\n * Gets the asset class of the option. This is an optional field according to the OFX spec.\n *\n * @return {String} the asset class of the option\n */\nOptionSecurityInfo.prototype.getAssetClass = function() {\n  return this.assetClass;\n};\nElement.add(OptionSecurityInfo, {name: \"ASSETCLASS\", order: 70, attributeType: String, readMethod: \"getAssetClass\", writeMethod: \"setAssetClass\"});\n\n\n/**\n * Sets the asset class of the option. This is an optional field according to the OFX spec.\n *\n * @param {String} assetClass the asset class of the option\n */\nOptionSecurityInfo.prototype.setAssetClass = function(assetClass) {\n  this.assetClass = assetClass;\n};\n\n\n/**\n * Gets the assert class as one of the well-known types.\n *\n * @return {AssetClass} the asset class or null if it's not one of the well-known types\n */\nOptionSecurityInfo.prototype.getAssetClassEnum = function() {\n  return AssetClass.fromOfx(this.getAssetClass());\n};\n\n\n/**\n * Gets the FI-defined asset class of the option. This is an optional field according to the OFX\n * spec.\n *\n * @return {String} the FI-defined asset class of the option\n */\nOptionSecurityInfo.prototype.getFiAssetClass = function() {\n  return this.fiAssetClass;\n};\nElement.add(OptionSecurityInfo, {name: \"FIASSETCLASS\", order: 80, attributeType: String, readMethod: \"getFiAssetClass\", writeMethod: \"setFiAssetClass\"});\n\n\n/**\n * Sets the FI-defined asset class of the option. This is an optional field according to the OFX\n * spec.\n *\n * @param {String} fiAssetClass the FI-defined asset class of the option\n */\nOptionSecurityInfo.prototype.setFiAssetClass = function(fiAssetClass) {\n  this.fiAssetClass = fiAssetClass;\n};\n\n\n\n\nmodule.exports = OptionSecurityInfo;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * Type of option.\n * See \"Section 13.8.5.4, OFX Spec\"\n *\n * @enum\n */\nvar OptionType = {\n  PUT: \"PUT\",\n  CALL: \"CALL\",\n\n  fromOfx: function(/*String*/ ofxVal) {\n    if (\"PUT\" === ofxVal) {\n      return OptionType.PUT;\n    } else if (\"CALL\" === ofxVal) {\n      return OptionType.CALL;\n    } else {\n      return null;\n    }\n  }\n};\n\n\nmodule.exports = OptionType;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar Element = require(\"../../../meta/Element\");\nvar BaseSecurityInfo = require(\"./BaseSecurityInfo\");\nvar AssetClass = require(\"./AssetClass\");\n\n/**\n * Info about any other type of security.\n * See \"Section 13.8.5.5, OFX Spec\"\n *\n * @class\n * @augments BaseSecurityInfo\n */\nfunction OtherSecurityInfo () {\n  BaseSecurityInfo.call(this);\n\n  /**\n   * @name OtherSecurityInfo#typeDesc\n   * @type String\n   * @access private\n   */\n  this.typeDesc = null;\n\n  /**\n   * @name OtherSecurityInfo#assetClass\n   * @type String\n   * @access private\n   */\n  this.assetClass = null;\n\n  /**\n   * @name OtherSecurityInfo#fiAssetClass\n   * @type String\n   * @access private\n   */\n  this.fiAssetClass = null;\n}\n\ninherit(OtherSecurityInfo, \"extends\", BaseSecurityInfo);\n\n\nAggregate.add(\"OTHERINFO\", OtherSecurityInfo);\n\n\n/**\n * Gets a description of the type of security. This is an optional field according to the OFX\n * spec.\n *\n * @return {String} the description of the security\n */\nOtherSecurityInfo.prototype.getTypeDesc = function() {\n  return this.typeDesc;\n};\nElement.add(OtherSecurityInfo, {name: \"TYPEDESC\", order: 20, attributeType: String, readMethod: \"getTypeDesc\", writeMethod: \"setTypeDesc\"});\n\n\n/**\n * Sets a description of the type of security. This is an optional field according to the OFX\n * spec.\n *\n * @param {String} typeDesc the description of the security\n */\nOtherSecurityInfo.prototype.setTypeDesc = function(typeDesc) {\n  this.typeDesc = typeDesc;\n};\n\n\n/**\n * Gets the asset class of the option. This is an optional field according to the OFX spec.\n *\n * @return {String} the asset class of the debt\n */\nOtherSecurityInfo.prototype.getAssetClass = function() {\n  return this.assetClass;\n};\nElement.add(OtherSecurityInfo, {name: \"ASSETCLASS\", order: 30, attributeType: String, readMethod: \"getAssetClass\", writeMethod: \"setAssetClass\"});\n\n\n/**\n * Sets the asset class of the debt. This is an optional field according to the OFX spec.\n *\n * @param {String} assetClass the asset class of the debt\n */\nOtherSecurityInfo.prototype.setAssetClass = function(assetClass) {\n  this.assetClass = assetClass;\n};\n\n\n/**\n * Gets the assert class as one of the well-known types.\n *\n * @return {AssetClass} the asset class or null if it's not one of the well-known types\n */\nOtherSecurityInfo.prototype.getAssetClassEnum = function() {\n  return AssetClass.fromOfx(this.getAssetClass());\n};\n\n\n/**\n * Gets the FI-defined asset class of the debt. This is an optional field according to the OFX\n * spec.\n *\n * @return {String} the FI-defined asset class of the debt\n */\nOtherSecurityInfo.prototype.getFiAssetClass = function() {\n  return this.fiAssetClass;\n};\nElement.add(OtherSecurityInfo, {name: \"FIASSETCLASS\", order: 40, attributeType: String, readMethod: \"getFiAssetClass\", writeMethod: \"setFiAssetClass\"});\n\n\n/**\n * Sets the FI-defined asset class of the debt. This is an optional field according to the OFX\n * spec.\n *\n * @param {String} fiAssetClass the FI-defined asset class of the debt\n */\nOtherSecurityInfo.prototype.setFiAssetClass = function(fiAssetClass) {\n  this.fiAssetClass = fiAssetClass;\n};\n\n\n\n\nmodule.exports = OtherSecurityInfo;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar Element = require(\"../../../meta/Element\");\n\n/**\n * Identifier for a security.\n * See \"Section 13.8.1, OFX Spec\"\n *\n * @class\n */\nfunction SecurityId () {\n\n  /**\n   * @name SecurityId#uniqueId\n   * @type String\n   * @access private\n   */\n  this.uniqueId = null;\n\n  /**\n   * @name SecurityId#uniqueIdType\n   * @type String\n   * @access private\n   */\n  this.uniqueIdType = null;\n}\n\n\n\nAggregate.add(\"SECID\", SecurityId);\n\n\n/**\n * Gets the unique id for the security. This is a required field according to the OFX spec.\n *\n * @return {String} the unique id\n */\nSecurityId.prototype.getUniqueId = function() {\n  return this.uniqueId;\n};\nElement.add(SecurityId, {name: \"UNIQUEID\", required: true, order: 10, attributeType: String, readMethod: \"getUniqueId\", writeMethod: \"setUniqueId\"});\n\n\n/**\n * Sets the unique id for the security. This is a required field according to the OFX spec.\n *\n * @param {String} uniqueId the unique id\n */\nSecurityId.prototype.setUniqueId = function(uniqueId) {\n  this.uniqueId = uniqueId;\n};\n\n\n/**\n * Gets the type of unique id.\n *\n * @return {String} the type of unique id\n */\nSecurityId.prototype.getUniqueIdType = function() {\n  return this.uniqueIdType;\n};\nElement.add(SecurityId, {name: \"UNIQUEIDTYPE\", required: true, order: 20, attributeType: String, readMethod: \"getUniqueIdType\", writeMethod: \"setUniqueIdType\"});\n\n\n/**\n * Sets the type of unique id.\n *\n * @param {String} uniqueIdType the type of unique id\n */\nSecurityId.prototype.setUniqueIdType = function(uniqueIdType) {\n  this.uniqueIdType = uniqueIdType;\n};\n\n\n\n\nmodule.exports = SecurityId;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar Element = require(\"../../../meta/Element\");\nvar SecurityId = require(\"./SecurityId\");\n\n\n/**\n * Info about a security.\n * See \"Section 13.8.5.1, OFX Spec\"\n *\n * @class\n */\nfunction SecurityInfo () {\n\n  /**\n   * @name SecurityInfo#securityId\n   * @type SecurityId\n   * @access private\n   */\n  this.securityId = null;\n\n  /**\n   * @name SecurityInfo#securityName\n   * @type String\n   * @access private\n   */\n  this.securityName = null;\n\n  /**\n   * @name SecurityInfo#tickerSymbol\n   * @type String\n   * @access private\n   */\n  this.tickerSymbol = null;\n\n  /**\n   * @name SecurityInfo#fiId\n   * @type String\n   * @access private\n   */\n  this.fiId = null;\n\n  /**\n   * @name SecurityInfo#rating\n   * @type String\n   * @access private\n   */\n  this.rating = null;\n\n  /**\n   * @name SecurityInfo#unitPrice\n   * @type Double\n   * @access private\n   */\n  this.unitPrice = null;\n\n  /**\n   * @name SecurityInfo#marketValueDate\n   * @type Date\n   * @access private\n   */\n  this.marketValueDate = null;\n\n  /**\n   * @name SecurityInfo#currencyCode\n   * @type String\n   * @access private\n   */\n  this.currencyCode = null;\n\n  /**\n   * @name SecurityInfo#memo\n   * @type String\n   * @access private\n   */\n  this.memo = null;\n}\n\n\n\nAggregate.add(\"SECINFO\", SecurityInfo);\n\n\n/**\n * Gets the unique security id for the security. This is a required field according to the OFX\n * spec.\n *\n * @return {SecurityId} the security id\n */\nSecurityInfo.prototype.getSecurityId = function() {\n  return this.securityId;\n};\nChildAggregate.add(SecurityInfo, {required: true, order: 10, attributeType: SecurityId, readMethod: \"getSecurityId\", writeMethod: \"setSecurityId\"});\n\n\n/**\n * Sets the unique security id for the security. This is a required field according to the OFX\n * spec.\n *\n * @param {SecurityId} securityId the security id\n */\nSecurityInfo.prototype.setSecurityId = function(securityId) {\n  this.securityId = securityId;\n};\n\n\n/**\n * Gets the full name of the security. This is a required field according to the OFX spec.\n *\n * @return {String} the full name of the security\n */\nSecurityInfo.prototype.getSecurityName = function() {\n  return this.securityName;\n};\nElement.add(SecurityInfo, {name: \"SECNAME\", required: true, order: 20, attributeType: String, readMethod: \"getSecurityName\", writeMethod: \"setSecurityName\"});\n\n\n/**\n * Sets the full name of the security. This is a required field according to the OFX spec.\n *\n * @param {String} securityName the full name of the security\n */\nSecurityInfo.prototype.setSecurityName = function(securityName) {\n  this.securityName = securityName;\n};\n\n\n/**\n * Gets the ticker symbol for the security. This is an optional field according to the OFX spec.\n *\n * @return {String} the ticket symbol or null if there's no ticker symbol\n */\nSecurityInfo.prototype.getTickerSymbol = function() {\n  return this.tickerSymbol;\n};\nElement.add(SecurityInfo, {name: \"TICKER\", order: 30, attributeType: String, readMethod: \"getTickerSymbol\", writeMethod: \"setTickerSymbol\"});\n\n\n/**\n * Sets the ticker symbol for the security. This is an optional field according to the OFX spec.\n *\n * @param {String} tickerSymbol the ticket symbol or null if there's no ticker symbol\n */\nSecurityInfo.prototype.setTickerSymbol = function(tickerSymbol) {\n  this.tickerSymbol = tickerSymbol;\n};\n\n\n/**\n * Gets the FI ID number for the security. This is an optional field according to the OFX spec.\n *\n * @return {String} the FI ID number for the security\n */\nSecurityInfo.prototype.getFiId = function() {\n  return this.fiId;\n};\nElement.add(SecurityInfo, {name: \"FIID\", order: 40, attributeType: String, readMethod: \"getFiId\", writeMethod: \"setFiId\"});\n\n\n/**\n * Sets the FI ID number for the security. This is an optional field according to the OFX spec.\n *\n * @param {String} fiId the FI ID number for the security\n */\nSecurityInfo.prototype.setFiId = function(fiId) {\n  this.fiId = fiId;\n};\n\n\n/**\n * Gets the rating of the security. This is an optional field according to the OFX spec.\n *\n * @return {String} the rating\n */\nSecurityInfo.prototype.getRating = function() {\n  return this.rating;\n};\nElement.add(SecurityInfo, {name: \"RATING\", order: 50, attributeType: String, readMethod: \"getRating\", writeMethod: \"setRating\"});\n\n\n/**\n * Sets the rating of the security. This is an optional field according to the OFX spec.\n *\n * @param {String} rating the rating\n */\nSecurityInfo.prototype.setRating = function(rating) {\n  this.rating = rating;\n};\n\n\n/**\n * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n * per contact) price. This is a noptional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @return {Double} the per unit price\n */\nSecurityInfo.prototype.getUnitPrice = function() {\n  return this.unitPrice;\n};\nElement.add(SecurityInfo, {name: \"UNITPRICE\", order: 60, attributeType: Number, readMethod: \"getUnitPrice\", writeMethod: \"setUnitPrice\"});\n\n\n/**\n * Sets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n * per contact) price. This is an optional field according to the OFX spec.\n * See \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @param {Double} unitPrice the per unit price\n */\nSecurityInfo.prototype.setUnitPrice = function(unitPrice) {\n  this.unitPrice = unitPrice;\n};\n\n\n/**\n * Gets the date as-of for the unit price. This is an optional field according to the OFX spec.\n *\n * @return {Date} the date as-of for the unit price\n */\nSecurityInfo.prototype.getUnitPriceAsOfDate = function() {\n  return this.marketValueDate;\n};\nElement.add(SecurityInfo, {name: \"DTASOF\", order: 70, attributeType: Date, readMethod: \"getUnitPriceAsOfDate\", writeMethod: \"setUnitPriceAsOfDate\"});\n\n\n/**\n * Sets the date as-of for the unit price. This is an optional field according to the OFX spec.\n *\n * param marketValueDate the date as-of for the unit price\n */\nSecurityInfo.prototype.setUnitPriceAsOfDate = function(/*Date*/ marketValueDate) {\n  this.marketValueDate = marketValueDate;\n};\n\n\n/**\n * Gets the overriding currency code for the security. If not set, implies the default currency.\n * This is an optional field according to the OFX spec.\n *\n * @return {String} the overriding currency code or null to mean the default currency\n */\nSecurityInfo.prototype.getCurrencyCode = function() {\n  return this.currencyCode;\n};\nElement.add(SecurityInfo, {name: \"CURRENCY\", order: 80, attributeType: String, readMethod: \"getCurrencyCode\", writeMethod: \"setCurrencyCode\"});\n\n\n/**\n * Sets the overriding currency code for the security. If not set, implies the default currency.\n * This is an optional field according to the OFX spec.\n *\n * @param {String} currencyCode the overriding currency code or null to mean the default currency\n */\nSecurityInfo.prototype.setCurrencyCode = function(currencyCode) {\n  this.currencyCode = currencyCode;\n};\n\n\n/**\n * Gets any memo associated with the security. This is an optional field according to the OFX\n * spec.\n *\n * @return {String} the memo\n */\nSecurityInfo.prototype.getMemo = function() {\n  return this.memo;\n};\nElement.add(SecurityInfo, {name: \"MEMO\", order: 90, attributeType: String, readMethod: \"getMemo\", writeMethod: \"setMemo\"});\n\n\n/**\n * Sets any memo associated with the security. This is an optional field according to the OFX\n * spec.\n *\n * @param {String} memo the memo\n */\nSecurityInfo.prototype.setMemo = function(memo) {\n  this.memo = memo;\n};\n\n\n\n\nmodule.exports = SecurityInfo;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar BaseSecurityInfo = require(\"./BaseSecurityInfo\");\n\n/**\n * Aggregate for a list of securities.\n * See \"Section 13.8.4, OFX Spec\"\n *\n * @class\n */\nfunction SecurityList () {\n\n  /**\n   * @name SecurityList#securityInfos\n   * @type BaseSecurityInfo[]\n   * @access private\n   */\n  this.securityInfos = null;\n}\n\n\n\nAggregate.add(\"SECLIST\", SecurityList);\n\n\nSecurityList.prototype.getSecurityInfos = function() {\n  return this.securityInfos;\n};\nChildAggregate.add(SecurityList, {order: 10, attributeType: Array, collectionEntryType: BaseSecurityInfo, readMethod: \"getSecurityInfos\", writeMethod: \"setSecurityInfos\"});\n\n\nSecurityList.prototype.setSecurityInfos = function(/*BaseSecurityInfo[]*/ securityInfos) {\n  this.securityInfos = securityInfos;\n};\n\n\n\n\nmodule.exports = SecurityList;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar RequestMessage = require(\"../RequestMessage\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar SecurityRequest = require(\"./SecurityRequest\");\n\n/**\n * Request aggregate for the security list.\n * See \"Section 13.8.2.2, OFX Spec\"\n *\n * @class\n */\nfunction SecurityListRequest () {\n  RequestMessage.call(this);\n\n  /**\n   * @name SecurityListRequest#securityRequests\n   * @type SecurityRequest[]\n   * @access private\n   */\n  this.securityRequests = null;\n}\n\ninherit(SecurityListRequest, \"extends\", RequestMessage);\n\n\nAggregate.add(\"SECLISTRQ\", SecurityListRequest);\n\n\nSecurityListRequest.prototype.getSecurityRequests = function() {\n  return this.securityRequests;\n};\nChildAggregate.add(SecurityListRequest, {required: true, order: 10, attributeType: Array, collectionEntryType: SecurityRequest, readMethod: \"getSecurityRequests\", writeMethod: \"setSecurityRequests\"});\n\n\nSecurityListRequest.prototype.setSecurityRequests = function(/*SecurityRequest[]*/ securityRequests) {\n  this.securityRequests = securityRequests;\n};\n\n\n\n\nmodule.exports = SecurityListRequest;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar MessageSetType = require(\"../MessageSetType\");\nvar RequestMessageSet = require(\"../RequestMessageSet\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar SecurityListRequestTransaction = require(\"./SecurityListRequestTransaction\");\n\n/**\n * Security list request message set.\n * See \"Section 13.7.2.2.1, OFX Spec\"\n *\n * @class\n * @augments RequestMessageSet\n */\nfunction SecurityListRequestMessageSet () {\n  RequestMessageSet.call(this);\n\n  /**\n   * @name SecurityListRequestMessageSet#securityListRequest\n   * @type SecurityListRequestTransaction\n   * @access private\n   */\n  this.securityListRequest = null;\n}\n\ninherit(SecurityListRequestMessageSet, \"extends\", RequestMessageSet);\n\n\nAggregate.add(\"SECLISTMSGSRQV1\", SecurityListRequestMessageSet);\n\n\nSecurityListRequestMessageSet.prototype.getType = function() {\n  return MessageSetType.investment;\n};\n\n\n/**\n * Gets the security list request.\n *\n * @return {SecurityListRequestTransaction} the request\n */\nSecurityListRequestMessageSet.prototype.getSecurityListRequest = function() {\n  return this.securityListRequest;\n};\nChildAggregate.add(SecurityListRequestMessageSet, {order: 0, attributeType: SecurityListRequestTransaction, readMethod: \"getSecurityListRequest\", writeMethod: \"setSecurityListRequest\"});\n\n\n/**\n * Sets the security list request.\n *\n * @param {SecurityListRequestTransaction} statementRequest the request\n */\nSecurityListRequestMessageSet.prototype.setSecurityListRequest = function(statementRequest) {\n  this.securityListRequest = statementRequest;\n};\n\n\n// Inherited.\nSecurityListRequestMessageSet.prototype.getRequestMessages = function() {\n  var requestMessages = [];\n  if (this.getSecurityListRequest()) {\n    requestMessages.push(this.getSecurityListRequest());\n  }\n  return requestMessages;\n};\n\n\n\n\nmodule.exports = SecurityListRequestMessageSet;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar TransactionWrappedRequestMessage = require(\"../TransactionWrappedRequestMessage\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar SecurityListRequest = require(\"./SecurityListRequest\");\n\n/**\n * Security list transaction request.\n * See \"Section 13.8.2.1, OFX Spec\"\n *\n * @class\n * @augments TransactionWrappedRequestMessage\n */\nfunction SecurityListRequestTransaction () {\n  TransactionWrappedRequestMessage.call(this);\n\n  /**\n   * @name SecurityListRequestTransaction#message\n   * @type SecurityListRequest\n   * @access private\n   */\n  this.message = null;\n}\n\ninherit(SecurityListRequestTransaction, \"extends\", TransactionWrappedRequestMessage);\n\n\nAggregate.add(\"SECLISTTRNRQ\", SecurityListRequestTransaction);\n\n\n/**\n * The message.\n *\n * @return {SecurityListRequest} The message.\n */\nSecurityListRequestTransaction.prototype.getMessage = function() {\n  return this.message;\n};\nChildAggregate.add(SecurityListRequestTransaction, {required: true, order: 30, attributeType: SecurityListRequest, readMethod: \"getMessage\", writeMethod: \"setMessage\"});\n\n\n/**\n * The message.\n *\n * @param {SecurityListRequest} message The message.\n *\n */\nSecurityListRequestTransaction.prototype.setMessage = function(message) {\n  this.message = message;\n};\n\n\n// Inherited.\nSecurityListRequestTransaction.prototype.setWrappedMessage = function(/*SecurityListRequest*/ message) {\n  this.setMessage(message);\n};\n\n\n\n\nmodule.exports = SecurityListRequestTransaction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar ResponseMessage = require(\"../ResponseMessage\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\n\n/**\n * Security list response. This is an empty aggregate. The actual security information is included\n * in the \"SECLIST\" aggregate.\n * See \"Section 13.8.3, OFX Spec\"\n *\n * @class\n * @augments ResponseMessage\n */\nfunction SecurityListResponse () {\n  ResponseMessage.call(this);\n}\n\ninherit(SecurityListResponse, \"extends\", ResponseMessage);\n\n\nAggregate.add(\"SECLISTRS\", SecurityListResponse);\n\n\nSecurityListResponse.prototype.getResponseMessageName = function() {\n  return \"security list\";\n};\n\n\n\n\nmodule.exports = SecurityListResponse;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar MessageSetType = require(\"../MessageSetType\");\nvar ResponseMessageSet = require(\"../ResponseMessageSet\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar SecurityListResponseTransaction = require(\"./SecurityListResponseTransaction\");\nvar SecurityList = require(\"./SecurityList\");\n\n/**\n * @class\n * @augments ResponseMessageSet\n */\nfunction SecurityListResponseMessageSet () {\n  ResponseMessageSet.call(this);\n\n  /**\n   * @name SecurityListResponseMessageSet#securityListResponse\n   * @type SecurityListResponseTransaction\n   * @access private\n   */\n  this.securityListResponse = null;\n\n  /**\n   * @name SecurityListResponseMessageSet#securityList\n   * @type SecurityList\n   * @access private\n   */\n  this.securityList = null;\n}\n\ninherit(SecurityListResponseMessageSet, \"extends\", ResponseMessageSet);\n\n\nAggregate.add(\"SECLISTMSGSRSV1\", SecurityListResponseMessageSet);\n\n\nSecurityListResponseMessageSet.prototype.getType = function() {\n  return MessageSetType.investment_security;\n};\n\n\n/**\n * The security list response list transaction.\n *\n * Most OFX files have a single security response.\n *\n * @return {SecurityListResponseTransaction} The security list response list.\n */\nSecurityListResponseMessageSet.prototype.getSecurityListResponse = function() {\n  return this.securityListResponse;\n};\nChildAggregate.add(SecurityListResponseMessageSet, {order: 0, attributeType: SecurityListResponseTransaction, readMethod: \"getSecurityListResponse\", writeMethod: \"setSecurityListResponse\"});\n\n\n/**\n * The security list response.\n *\n * @param {SecurityListResponseTransaction} securityListResponse The security list response.\n */\nSecurityListResponseMessageSet.prototype.setSecurityListResponse = function(securityListResponse) {\n  this.securityListResponse = securityListResponse;\n};\n\n\nSecurityListResponseMessageSet.prototype.getSecurityList = function() {\n  return this.securityList;\n};\nChildAggregate.add(SecurityListResponseMessageSet, {order: 10, attributeType: SecurityList, readMethod: \"getSecurityList\", writeMethod: \"setSecurityList\"});\n\n\nSecurityListResponseMessageSet.prototype.setSecurityList = function(/*SecurityList*/ securityList) {\n  this.securityList = securityList;\n};\n\n\n// Inherited.\nSecurityListResponseMessageSet.prototype.getResponseMessages = function() {\n  var ret = [];\n  ret.push(this.securityListResponse);\n  return ret;\n};\n\n\n\n\nmodule.exports = SecurityListResponseMessageSet;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar TransactionWrappedResponseMessage = require(\"../TransactionWrappedResponseMessage\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar SecurityListResponse = require(\"./SecurityListResponse\");\n\n/**\n * Security list transaction response.\n * See \"Section 13.8.3.1, OFX Spec\"\n *\n * @class\n * @augments TransactionWrappedResponseMessage\n */\nfunction SecurityListResponseTransaction () {\n  TransactionWrappedResponseMessage.call(this);\n\n  /**\n   * @name SecurityListResponseTransaction#message\n   * @type SecurityListResponse\n   * @access private\n   */\n  this.message = null;\n}\n\ninherit(SecurityListResponseTransaction, \"extends\", TransactionWrappedResponseMessage);\n\n\nAggregate.add(\"SECLISTTRNRS\", SecurityListResponseTransaction);\n\n\n/**\n * The message.\n *\n * @return {SecurityListResponse} The message.\n */\nSecurityListResponseTransaction.prototype.getMessage = function() {\n  return this.message;\n};\nChildAggregate.add(SecurityListResponseTransaction, {required: true, order: 30, attributeType: SecurityListResponse, readMethod: \"getMessage\", writeMethod: \"setMessage\"});\n\n\n/**\n * The message.\n *\n * @param {SecurityListResponse} message The message.\n */\nSecurityListResponseTransaction.prototype.setMessage = function(message) {\n  this.message = message;\n};\n\n\n// Inherited.\nSecurityListResponseTransaction.prototype.getWrappedMessage = function() {\n  return this.getMessage();\n};\n\n\n\n\nmodule.exports = SecurityListResponseTransaction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar Element = require(\"../../../meta/Element\");\nvar SecurityId = require(\"./SecurityId\");\n\n/**\n * Security request aggregate.\n * See \"Section 13.8.2.2, OFX Spec\"\n *\n * @class\n */\nfunction SecurityRequest () {\n\n  /**\n   * @name SecurityRequest#securityId\n   * @type SecurityId\n   * @access private\n   */\n  this.securityId = null;\n\n  /**\n   * @name SecurityRequest#tickerSymbol\n   * @type String\n   * @access private\n   */\n  this.tickerSymbol = null;\n\n  /**\n   * @name SecurityRequest#fiId\n   * @type String\n   * @access private\n   */\n  this.fiId = null;\n}\n\n\n\nAggregate.add(\"SECRQ\", SecurityRequest);\n\n\nSecurityRequest.prototype.getSecurityId = function() {\n  return this.securityId;\n};\nElement.add(SecurityRequest, {name: \"SECID\", order: 10, attributeType: SecurityId, readMethod: \"getSecurityId\", writeMethod: \"setSecurityId\"});\n\n\nSecurityRequest.prototype.setSecurityId = function(/*SecurityId*/ securityId) {\n  this.securityId = securityId;\n  this.tickerSymbol = null;\n  this.fiId = null;\n};\n\n\nSecurityRequest.prototype.getTickerSymbol = function() {\n  return this.tickerSymbol;\n};\nElement.add(SecurityRequest, {name: \"TICKER\", order: 20, attributeType: String, readMethod: \"getTickerSymbol\", writeMethod: \"setTickerSymbol\"});\n\n\nSecurityRequest.prototype.setTickerSymbol = function(/*String*/ tickerSymbol) {\n  this.tickerSymbol = tickerSymbol;\n  this.securityId = null;\n  this.fiId = null;\n};\n\n\nSecurityRequest.prototype.getFiId = function() {\n  return this.fiId;\n};\nElement.add(SecurityRequest, {name: \"FIID\", order: 30, attributeType: String, readMethod: \"getFiId\", writeMethod: \"setFiId\"});\n\n\nSecurityRequest.prototype.setFiId = function(/*String*/ fiId) {\n  this.fiId = fiId;\n  this.securityId = null;\n  this.tickerSymbol = null;\n};\n\n\n\n\nmodule.exports = SecurityRequest;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar Element = require(\"../../../meta/Element\");\nvar BaseSecurityInfo = require(\"./BaseSecurityInfo\");\nvar StockType = require(\"./StockType\");\nvar AssetClass = require(\"./AssetClass\");\n\n/**\n * Info about a stock security.\n * See \"Section 13.8.5.6, OFX Spec\"\n *\n * @class\n * @augments BaseSecurityInfo\n */\nfunction StockSecurityInfo () {\n  BaseSecurityInfo.call(this);\n\n  /**\n   * @name StockSecurityInfo#stockType\n   * @type String\n   * @access private\n   */\n  this.stockType = null;\n\n  /**\n   * @name StockSecurityInfo#yield\n   * @type Double\n   * @access private\n   */\n  this.yield = null;\n\n  /**\n   * @name StockSecurityInfo#dateYieldAsOf\n   * @type Date\n   * @access private\n   */\n  this.dateYieldAsOf = null;\n\n  /**\n   * @name StockSecurityInfo#assetClass\n   * @type String\n   * @access private\n   */\n  this.assetClass = null;\n\n  /**\n   * @name StockSecurityInfo#fiAssetClass\n   * @type String\n   * @access private\n   */\n  this.fiAssetClass = null;\n}\n\ninherit(StockSecurityInfo, \"extends\", BaseSecurityInfo);\n\n\nAggregate.add(\"STOCKINFO\", StockSecurityInfo);\n\n\n/**\n * Gets the type of stock. One of \"COMMON\", \"PREFERRED\", \"CONVERTIBLE\", or \"OTHER\". This is an\n * optional field according to the OFX spec.\n *\n * @return {String} the type of stock\n */\nStockSecurityInfo.prototype.getType = function() {\n  return this.stockType;\n};\nElement.add(StockSecurityInfo, {name: \"STOCKTYPE\", order: 20, attributeType: String, readMethod: \"getType\", writeMethod: \"setType\"});\n\n\n/**\n * Sets the type of stock. One of \"COMMON\", \"PREFERRED\", \"CONVERTIBLE\", or \"OTHER\". This is an\n * optional field according to the OFX spec.\n *\n * @param {String} stockType the type of stock\n */\nStockSecurityInfo.prototype.setType = function(stockType) {\n  this.stockType = stockType;\n};\n\n\n/**\n * Gets the type of stock as one of the well-known types.\n *\n * @return {StockType} the type of stock or null if it's not one of the well-known types\n */\nStockSecurityInfo.prototype.getTypeEnum = function() {\n  return StockType.fromOfx(this.getType());\n};\n\n\n/**\n * Gets the current yield reported as the dividend expressed as a portion of the current stock\n * price, a rate. This is an optional field according to the OFX spec.\n *\n * @return {Double} the dividend yield\n */\nStockSecurityInfo.prototype.getYield = function() {\n  return this.yield;\n};\nElement.add(StockSecurityInfo, {name: \"YIELD\", order: 30, attributeType: Number, readMethod: \"getYield\", writeMethod: \"setYield\"});\n\n\n/**\n * Sets the current yield reported as the dividend expressed as a portion of the current stock\n * price, a rate. This is an optional field according to the OFX spec.\n *\n * @param {Double} yield the dividend yield\n */\nStockSecurityInfo.prototype.setYield = function(yield_) {\n  this.yield = yield_;\n};\n\n\n/**\n * Gets the as-of date for the yield. This is an optional field according to the OFX spec.\n *\n * @return {Date} the as-of date for the yield\n */\nStockSecurityInfo.prototype.getDateYieldAsOf = function() {\n  return this.dateYieldAsOf;\n};\nElement.add(StockSecurityInfo, {name: \"DTYIELDASOF\", order: 40, attributeType: Date, readMethod: \"getDateYieldAsOf\", writeMethod: \"setDateYieldAsOf\"});\n\n\n/**\n * Sets the as-of date for the yield. This is an optional field according to the OFX spec.\n *\n * @param {Date} dateYieldAsOf the as-of date for the yield\n */\nStockSecurityInfo.prototype.setDateYieldAsOf = function(dateYieldAsOf) {\n  this.dateYieldAsOf = dateYieldAsOf;\n};\n\n\n/**\n * Gets the asset class of the stock. This is an optional field according to the OFX spec.\n *\n * @return {String} the asset class of the stock\n */\nStockSecurityInfo.prototype.getAssetClass = function() {\n  return this.assetClass;\n};\nElement.add(StockSecurityInfo, {name: \"ASSETCLASS\", order: 50, attributeType: String, readMethod: \"getAssetClass\", writeMethod: \"setAssetClass\"});\n\n\n/**\n * Sets the asset class of the stock. This is an optional field according to the OFX spec.\n *\n * @param {String} assetClass the asset class of the stock\n */\nStockSecurityInfo.prototype.setAssetClass = function(assetClass) {\n  this.assetClass = assetClass;\n};\n\n\n/**\n * Gets the assert class as one of the well-known types.\n *\n * @return {AssetClass} the asset class or null if it's not one of the well-known types\n */\nStockSecurityInfo.prototype.getAssetClassEnum = function() {\n  return AssetClass.fromOfx(this.getAssetClass());\n};\n\n\n/**\n * Gets the FI-defined asset class of the stock. This is an optional field according to the OFX\n * spec.\n *\n * @return {String} the FI-defined asset class of the stock\n */\nStockSecurityInfo.prototype.getFiAssetClass = function() {\n  return this.fiAssetClass;\n};\nElement.add(StockSecurityInfo, {name: \"FIASSETCLASS\", order: 60, attributeType: String, readMethod: \"getFiAssetClass\", writeMethod: \"setFiAssetClass\"});\n\n\n/**\n * Sets the FI-defined asset class of the stock. This is an optional field according to the OFX\n * spec.\n *\n * @param {String} fiAssetClass the FI-defined asset class of the stock\n */\nStockSecurityInfo.prototype.setFiAssetClass = function(fiAssetClass) {\n  this.fiAssetClass = fiAssetClass;\n};\n\n\n\n\nmodule.exports = StockSecurityInfo;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * The type of debt.\n * See \"Section 13.8.5.6, OFX Spec\"\n *\n * @enum\n */\nvar StockType = {\n  COMMON: \"COMMON\",\n  PREFERRED: \"PREFERRED\",\n  CONVERTIBLE: \"CONVERTIBLE\",\n  OTHER: \"OTHER\",\n\n  fromOfx: function(/*String*/ ofxVal) {\n    if (\"COMMON\" === ofxVal) {\n      return StockType.COMMON;\n    } else if (\"PREFERRED\" === ofxVal) {\n      return StockType.PREFERRED;\n    } else if (\"CONVERTIBLE\" === ofxVal) {\n      return StockType.CONVERTIBLE;\n    } else if (\"OTHER\" === ofxVal) {\n      return StockType.OTHER;\n    } else {\n      return null;\n    }\n  }\n};\n\n\nmodule.exports = StockType;\n","\"use strict\";\n\nmodule.exports = {\n  AssetClass: require(\"./AssetClass\"),\n  BaseSecurityInfo: require(\"./BaseSecurityInfo\"),\n  CallType: require(\"./CallType\"),\n  CouponFrequency: require(\"./CouponFrequency\"),\n  DebtClass: require(\"./DebtClass\"),\n  DebtSecurityInfo: require(\"./DebtSecurityInfo\"),\n  DebtType: require(\"./DebtType\"),\n  MutualFundSecurityInfo: require(\"./MutualFundSecurityInfo\"),\n  MutualFundType: require(\"./MutualFundType\"),\n  OptionSecurityInfo: require(\"./OptionSecurityInfo\"),\n  OptionType: require(\"./OptionType\"),\n  OtherSecurityInfo: require(\"./OtherSecurityInfo\"),\n  SecurityId: require(\"./SecurityId\"),\n  SecurityInfo: require(\"./SecurityInfo\"),\n  SecurityList: require(\"./SecurityList\"),\n  SecurityListRequest: require(\"./SecurityListRequest\"),\n  SecurityListRequestMessageSet: require(\"./SecurityListRequestMessageSet\"),\n  SecurityListRequestTransaction: require(\"./SecurityListRequestTransaction\"),\n  SecurityListResponse: require(\"./SecurityListResponse\"),\n  SecurityListResponseMessageSet: require(\"./SecurityListResponseMessageSet\"),\n  SecurityListResponseTransaction: require(\"./SecurityListResponseTransaction\"),\n  SecurityRequest: require(\"./SecurityRequest\"),\n  StockSecurityInfo: require(\"./StockSecurityInfo\"),\n  StockType: require(\"./StockType\"),\n};\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar Element = require(\"../../../meta/Element\");\n\n/**\n * @class\n */\nfunction FinancialInstitution () {\n\n  /**\n   * @name FinancialInstitution#id\n   * @type String\n   * @access private\n   */\n  this.id = null;\n\n  /**\n   * @name FinancialInstitution#organization\n   * @type String\n   * @access private\n   */\n  this.organization = null;\n}\n\n\n\nAggregate.add(\"FI\", FinancialInstitution);\n\n\n/**\n * The organization.\n *\n * @return {String} The organization.\n */\nFinancialInstitution.prototype.getOrganization = function() {\n  return this.organization;\n};\nElement.add(FinancialInstitution, {name: \"ORG\", required: true, order: 0, attributeType: String, readMethod: \"getOrganization\", writeMethod: \"setOrganization\"});\n\n\n/**\n * The organization.\n *\n * @param {String} organization The organization.\n */\nFinancialInstitution.prototype.setOrganization = function(organization) {\n  this.organization = organization;\n};\n\n\n\n/**\n * Financial institution id.\n *\n * @return {String} Financial institution id.\n */\nFinancialInstitution.prototype.getId = function() {\n  return this.id;\n};\nElement.add(FinancialInstitution, {name: \"FID\", order: 10, attributeType: String, readMethod: \"getId\", writeMethod: \"setId\"});\n\n\n/**\n * Financial institution id.\n *\n * @param {String} id Financial institution id.\n */\nFinancialInstitution.prototype.setId = function(id) {\n  this.id = id;\n};\n\n\n\nmodule.exports = FinancialInstitution;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar RequestMessage = require(\"../RequestMessage\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar Element = require(\"../../../meta/Element\");\n\n/**\n * Request to change a user password.\n *\n * @class\n * See \"Section 2.5.2.1, OFX Spec.\"\n */\nfunction PasswordChangeRequest () {\n  RequestMessage.call(this);\n\n  /**\n   * @name PasswordChangeRequest#userId\n   * @type String\n   * @access private\n   */\n  this.userId = null;\n\n  /**\n   * @name PasswordChangeRequest#newPassword\n   * @type String\n   * @access private\n   */\n  this.newPassword = null;\n}\n\ninherit(PasswordChangeRequest, \"extends\", RequestMessage);\n\n\nAggregate.add(\"PINCHRQ\", PasswordChangeRequest);\n\n\n/**\n * The id of the user changing password.\n *\n * @return {String} The id of the user changing password.\n */\nPasswordChangeRequest.prototype.getUserId = function() {\n  return this.userId;\n};\nElement.add(PasswordChangeRequest, {name: \"USERID\", required: true, order: 0, attributeType: String, readMethod: \"getUserId\", writeMethod: \"setUserId\"});\n\n\n/**\n * The id of the user changing password.\n *\n * @param {String} userId The id of the user changing password.\n */\nPasswordChangeRequest.prototype.setUserId = function(userId) {\n  this.userId = userId;\n};\n\n\n/**\n * The new password.\n *\n * @return {String} The new password.\n */\nPasswordChangeRequest.prototype.getNewPassword = function() {\n  return this.newPassword;\n};\nElement.add(PasswordChangeRequest, {name: \"NEWUSERPASS\", required: true, order: 10, attributeType: String, readMethod: \"getNewPassword\", writeMethod: \"setNewPassword\"});\n\n\n/**\n * The new password.\n *\n * @param {String} newPassword The new password.\n */\nPasswordChangeRequest.prototype.setNewPassword = function(newPassword) {\n  this.newPassword = newPassword;\n};\n\n\n\n\nmodule.exports = PasswordChangeRequest;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar TransactionWrappedRequestMessage = require(\"../TransactionWrappedRequestMessage\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar PasswordChangeRequest = require(\"./PasswordChangeRequest\");\n\n/**\n * @class\n * @augments TransactionWrappedRequestMessage\n */\nfunction PasswordChangeRequestTransaction () {\n  TransactionWrappedRequestMessage.call(this);\n\n  /**\n   * @name PasswordChangeRequestTransaction#message\n   * @type PasswordChangeRequest\n   * @access private\n   */\n  this.message = null;\n}\n\ninherit(PasswordChangeRequestTransaction, \"extends\", TransactionWrappedRequestMessage);\n\n\nAggregate.add(\"PINCHTRNRQ\", PasswordChangeRequestTransaction);\n\n\n/**\n * The wrapped message.\n *\n * @return {PasswordChangeRequest} The wrapped message.\n */\nPasswordChangeRequestTransaction.prototype.getMessage = function() {\n  return this.message;\n};\nChildAggregate.add(PasswordChangeRequestTransaction, {required: true, order: 30, attributeType: PasswordChangeRequest, readMethod: \"getMessage\", writeMethod: \"setMessage\"});\n\n\n/**\n * The wrapped message.\n *\n * @param {PasswordChangeRequest} message The wrapped message.\n */\nPasswordChangeRequestTransaction.prototype.setMessage = function(message) {\n  this.message = message;\n};\n\n\n// Inherited.\nPasswordChangeRequestTransaction.prototype.setWrappedMessage = function(/*PasswordChangeRequest*/ message) {\n  this.setMessage(message);\n};\n\n\n\n\nmodule.exports = PasswordChangeRequestTransaction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar ResponseMessage = require(\"../ResponseMessage\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar Element = require(\"../../../meta/Element\");\n\n/**\n * Response to a change a user password request.\n *\n * @class\n * @augments ResponseMessage\n * See \"Section 2.5.2.2, OFX Spec.\"\n */\nfunction PasswordChangeResponse () {\n  ResponseMessage.call(this);\n\n  /**\n   * @name PasswordChangeResponse#userId\n   * @type String\n   * @access private\n   */\n  this.userId = null;\n\n  /**\n   * @name PasswordChangeResponse#changeTimestamp\n   * @type Date\n   * @access private\n   */\n  this.changeTimestamp = null;\n}\n\ninherit(PasswordChangeResponse, \"extends\", ResponseMessage);\n\n\nAggregate.add(\"PINCHRQ\", PasswordChangeResponse);\n\n\n/**\n * The id of the user changing password.\n *\n * @return {String} The id of the user changing password.\n */\nPasswordChangeResponse.prototype.getUserId = function() {\n  return this.userId;\n};\nElement.add(PasswordChangeResponse, {name: \"USERID\", required: true, order: 0, attributeType: String, readMethod: \"getUserId\", writeMethod: \"setUserId\"});\n\n\n// Inherited.\nPasswordChangeResponse.prototype.getResponseMessageName = function() {\n  return \"password change\";\n};\n\n\n/**\n * The id of the user changing password.\n *\n * @param {String} userId The id of the user changing password.\n */\nPasswordChangeResponse.prototype.setUserId = function(userId) {\n  this.userId = userId;\n};\n\n\n/**\n * The timestamp of the password change.\n *\n * @return {Date} The timestamp of the password change.\n */\nPasswordChangeResponse.prototype.getChangeTimestamp = function() {\n  return this.changeTimestamp;\n};\nElement.add(PasswordChangeResponse, {name: \"DTCHANGED\", order: 10, attributeType: Date, readMethod: \"getChangeTimestamp\", writeMethod: \"setChangeTimestamp\"});\n\n\n/**\n * The timestamp of the password change.\n *\n * @param {Date} changeTimestamp The timestamp of the password change.\n */\nPasswordChangeResponse.prototype.setChangeTimestamp = function(changeTimestamp) {\n  this.changeTimestamp = changeTimestamp;\n};\n\n\n\n\nmodule.exports = PasswordChangeResponse;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar TransactionWrappedResponseMessage = require(\"../TransactionWrappedResponseMessage\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar PasswordChangeResponse = require(\"./PasswordChangeResponse\");\n\n/**\n * @class\n * @augments TransactionWrappedResponseMessage\n */\nfunction PasswordChangeResponseTransaction () {\n  TransactionWrappedResponseMessage.call(this);\n\n  /**\n   * @name PasswordChangeResponseTransaction#message\n   * @type PasswordChangeResponse\n   * @access private\n   */\n  this.message = null;\n}\n\ninherit(PasswordChangeResponseTransaction, \"extends\", TransactionWrappedResponseMessage);\n\n\nAggregate.add(\"PINCHTRNRS\", PasswordChangeResponseTransaction);\n\n\n/**\n * The message.\n *\n * @return {PasswordChangeResponse} The message.\n */\nPasswordChangeResponseTransaction.prototype.getMessage = function() {\n  return this.message;\n};\nChildAggregate.add(PasswordChangeResponseTransaction, {required: true, order: 30, attributeType: PasswordChangeResponse, readMethod: \"getMessage\", writeMethod: \"setMessage\"});\n\n\n/**\n * The message.\n *\n * @param {PasswordChangeResponse} message The message.\n */\nPasswordChangeResponseTransaction.prototype.setMessage = function(message) {\n  this.message = message;\n};\n\n\n// Inherited.\nPasswordChangeResponseTransaction.prototype.getWrappedMessage = function() {\n  return this.getMessage();\n};\n\n\n\n\nmodule.exports = PasswordChangeResponseTransaction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar Element = require(\"../../../meta/Element\");\nvar RequestMessage = require(\"../RequestMessage\");\nvar FinancialInstitution = require(\"./FinancialInstitution\");\n\n/**\n * Sign-on request\n *\n * @class\n * @augments RequestMessage\n * See \"Section 2.5.1.2, OFX Spec.\"\n */\nfunction SignonRequest () {\n  RequestMessage.call(this);\n\n  /**\n   * @name SignonRequest#timestamp\n   * @type Date\n   * @access private\n   */\n  this.timestamp = null;\n\n  /**\n   * @name SignonRequest#userId\n   * @type String\n   * @access private\n   */\n  this.userId = null;\n\n  /**\n   * @name SignonRequest#password\n   * @type String\n   * @access private\n   */\n  this.password = null;\n\n  /**\n   * @name SignonRequest#userKey\n   * @type String\n   * @access private\n   */\n  this.userKey = null;\n\n  /**\n   * @name SignonRequest#generateUserKey\n   * @type Boolean\n   * @access private\n   */\n  this.generateUserKey = null;\n\n  /**\n   * @name SignonRequest#language\n   * @type String\n   * @access private\n   */\n  this.language = \"ENG\";\n\n  /**\n   * @name SignonRequest#financialInstitution\n   * @type FinancialInstitution\n   * @access private\n   */\n  this.financialInstitution = null;\n\n  /**\n   * @name SignonRequest#sessionId\n   * @type String\n   * @access private\n   */\n  this.sessionId = null;\n\n  /**\n   * @name SignonRequest#applicationId\n   * @type String\n   * @access private\n   */\n  this.applicationId = \"Money\";\n\n  /**\n   * @name SignonRequest#applicationVersion\n   * @type String\n   * @access private\n   */\n  this.applicationVersion = \"1600\";\n\n  /**\n   * @name SignonRequest#clientUID\n   * @type String\n   * @access private\n   */\n  this.clientUID = null;\n\n  /**\n   * @name SignonRequest#additionalCredentials1\n   * @type String\n   * @access private\n   */\n  this.additionalCredentials1 = null;\n\n  /**\n   * @name SignonRequest#additionalCredentials2\n   * @type String\n   * @access private\n   */\n  this.additionalCredentials2 = null;\n\n  /**\n   * @name SignonRequest#authToken\n   * @type String\n   * @access private\n   */\n  this.authToken = null;\n\n  /**\n   * @name SignonRequest#accessKey\n   * @type String\n   * @access private\n   */\n  this.accessKey = null;\n}\n\ninherit(SignonRequest, \"extends\", RequestMessage);\n\n\nAggregate.add(\"SONRQ\", SignonRequest);\n\n\n\n/**\n * @name SignonRequest.ANONYMOUS_USER\n * @type String\n */\nSignonRequest.ANONYMOUS_USER = \"anonymous00000000000000000000000\";\n\n\n/**\n * The date and time of the request.\n *\n * @return {Date} The date and time of the request.\n */\nSignonRequest.prototype.getTimestamp = function() {\n  return this.timestamp;\n};\nElement.add(SignonRequest, {name: \"DTCLIENT\", required: true, order: 0, attributeType: Date, readMethod: \"getTimestamp\", writeMethod: \"setTimestamp\"});\n\n\n/**\n * The date and time of the request.\n *\n * @param {Date} timestamp The date and time of the request.\n */\nSignonRequest.prototype.setTimestamp = function(timestamp) {\n  this.timestamp = timestamp;\n};\n\n\n/**\n * The user id.\n *\n * @return {String} The user id.\n */\nSignonRequest.prototype.getUserId = function() {\n  return this.userId;\n};\nElement.add(SignonRequest, {name: \"USERID\", order: 10, attributeType: String, readMethod: \"getUserId\", writeMethod: \"setUserId\"});\n\n\n/**\n * The user id.\n *\n * @param {String} userId The user id.\n */\nSignonRequest.prototype.setUserId = function(userId) {\n  this.userId = userId;\n};\n\n\n/**\n * The password.\n *\n * @return {String} The password.\n */\nSignonRequest.prototype.getPassword = function() {\n  return this.password;\n};\nElement.add(SignonRequest, {name: \"USERPASS\", order: 20, attributeType: String, readMethod: \"getPassword\", writeMethod: \"setPassword\"});\n\n\n/**\n * The password.\n *\n * @param {String} password The password.\n */\nSignonRequest.prototype.setPassword = function(password) {\n  this.password = password;\n};\n\n\n/**\n * The user key provided by the server so as not to require further username/password authentication.\n *\n * @return {String} The user key provided by the server so as not to require further username/password authentication.\n */\nSignonRequest.prototype.getUserKey = function() {\n  return this.userKey;\n};\nElement.add(SignonRequest, {name: \"USERKEY\", order: 30, attributeType: String, readMethod: \"getUserKey\", writeMethod: \"setUserKey\"});\n\n\n/**\n * The user key provided by the server so as not to require further username/password authentication.\n *\n * @param {String} userKey The user key provided by the server so as not to require further username/password authentication.\n */\nSignonRequest.prototype.setUserKey = function(userKey) {\n  this.userKey = userKey;\n};\n\n\n/**\n * Whether to request the server to generate a user key.\n *\n * @return {Boolean} Whether to request the server to generate a user key.\n */\nSignonRequest.prototype.getGenerateUserKey = function() {\n  return this.generateUserKey;\n};\nElement.add(SignonRequest, {name: \"GENUSERKEY\", order: 40, attributeType: Boolean, readMethod: \"getGenerateUserKey\", writeMethod: \"setGenerateUserKey\"});\n\n\n/**\n * Whether to request the server to generate a user key.\n *\n * @param {Boolean} generateUserKey Whether to request the server to generate a user key.\n */\nSignonRequest.prototype.setGenerateUserKey = function(generateUserKey) {\n  this.generateUserKey = generateUserKey;\n};\n\n\n/**\n * The three-letter langauge code.\n *\n * @return {String} The three-letter langauge code.\n * @see java.util.Locale#getISO3Language()\n */\nSignonRequest.prototype.getLanguage = function() {\n  return this.language;\n};\nElement.add(SignonRequest, {name: \"LANGUAGE\", required: true, order: 50, attributeType: String, readMethod: \"getLanguage\", writeMethod: \"setLanguage\"});\n\n\n/**\n * The three-letter langauge code.\n *\n * @param {String} language The three-letter langauge code.\n */\nSignonRequest.prototype.setLanguage = function(language) {\n  this.language = language;\n};\n\n\n/**\n * The financial institution.\n *\n * @return {FinancialInstitution} The financial institution.\n */\nSignonRequest.prototype.getFinancialInstitution = function() {\n  return this.financialInstitution;\n};\nChildAggregate.add(SignonRequest, {order: 60, attributeType: FinancialInstitution, readMethod: \"getFinancialInstitution\", writeMethod: \"setFinancialInstitution\"});\n\n\n/**\n * The financial institution.\n *\n * @param {FinancialInstitution} financialInstitution The financial institution.\n */\nSignonRequest.prototype.setFinancialInstitution = function(financialInstitution) {\n  this.financialInstitution = financialInstitution;\n};\n\n\n/**\n * The server-supplied session id.\n *\n * @return {String} The server-supplied session id.\n */\nSignonRequest.prototype.getSessionId = function() {\n  return this.sessionId;\n};\nElement.add(SignonRequest, {name: \"SESSCOOKIE\", order: 70, attributeType: String, readMethod: \"getSessionId\", writeMethod: \"setSessionId\"});\n\n\n/**\n * The server-supplied session id.\n *\n * @param {String} sessionId The server-supplied session id.\n */\nSignonRequest.prototype.setSessionId = function(sessionId) {\n  this.sessionId = sessionId;\n};\n\n\n/**\n * The application id.\n *\n * @return {String} The application id.\n */\nSignonRequest.prototype.getApplicationId = function() {\n  return this.applicationId;\n};\nElement.add(SignonRequest, {name: \"APPID\", required: true, order: 80, attributeType: String, readMethod: \"getApplicationId\", writeMethod: \"setApplicationId\"});\n\n\n/**\n * The application id.\n *\n * @param {String} applicationId The application id.\n */\nSignonRequest.prototype.setApplicationId = function(applicationId) {\n  this.applicationId = applicationId;\n};\n\n\n/**\n * The application version.\n *\n * @return {String} The application version.\n */\nSignonRequest.prototype.getApplicationVersion = function() {\n  return this.applicationVersion;\n};\nElement.add(SignonRequest, {name: \"APPVER\", required: true, order: 90, attributeType: String, readMethod: \"getApplicationVersion\", writeMethod: \"setApplicationVersion\"});\n\n\n/**\n * The application version.\n *\n * @param {String} applicationVersion The application version.\n */\nSignonRequest.prototype.setApplicationVersion = function(applicationVersion) {\n  this.applicationVersion = applicationVersion;\n};\n\n\n/**\n * The client-supplied UID.\n *\n * @return {String} The client-supplied UID.\n */\nSignonRequest.prototype.getClientUID = function() {\n  return this.clientUID;\n};\nElement.add(SignonRequest, {name: \"CLIENTUID\", order: 100, attributeType: String, readMethod: \"getClientUID\", writeMethod: \"setClientUID\"});\n\n\n/**\n * The client-supplied UID.\n *\n * @param {String} clientUID The client-supplied UID.\n */\nSignonRequest.prototype.setClientUID = function(clientUID) {\n  this.clientUID = clientUID;\n};\n\n\n/**\n * Any additional credentials.\n *\n * @return {String} Any additional credentials.\n */\nSignonRequest.prototype.getAdditionalCredentials1 = function() {\n  return this.additionalCredentials1;\n};\nElement.add(SignonRequest, {name: \"USERCRED1\", order: 110, attributeType: String, readMethod: \"getAdditionalCredentials1\", writeMethod: \"setAdditionalCredentials1\"});\n\n\n/**\n * Any additional credentials.\n *\n * @param {String} additionalCredentials1 Any additional credentials.\n */\nSignonRequest.prototype.setAdditionalCredentials1 = function(additionalCredentials1) {\n  this.additionalCredentials1 = additionalCredentials1;\n};\n\n\n/**\n * Any additional credentials.\n *\n * @return {String} Any additional credentials.\n */\nSignonRequest.prototype.getAdditionalCredentials2 = function() {\n  return this.additionalCredentials2;\n};\nElement.add(SignonRequest, {name: \"USERCRED2\", order: 120, attributeType: String, readMethod: \"getAdditionalCredentials2\", writeMethod: \"setAdditionalCredentials2\"});\n\n\n/**\n * Any additional credentials.\n *\n * @param {String} additionalCredentials2 Any additional credentials.\n */\nSignonRequest.prototype.setAdditionalCredentials2 = function(additionalCredentials2) {\n  this.additionalCredentials2 = additionalCredentials2;\n};\n\n\n/**\n * The authentication token.\n *\n * @return {String} The authentication token.\n */\nSignonRequest.prototype.getAuthToken = function() {\n  return this.authToken;\n};\nElement.add(SignonRequest, {name: \"AUTHTOKEN\", order: 130, attributeType: String, readMethod: \"getAuthToken\", writeMethod: \"setAuthToken\"});\n\n\n/**\n * The authentication token.\n *\n * @param {String} authToken The authentication token.\n */\nSignonRequest.prototype.setAuthToken = function(authToken) {\n  this.authToken = authToken;\n};\n\n\n/**\n * The access key.\n *\n * @return {String} The access key.\n */\nSignonRequest.prototype.getAccessKey = function() {\n  return this.accessKey;\n};\nElement.add(SignonRequest, {name: \"ACCESSKEY\", order: 140, attributeType: String, readMethod: \"getAccessKey\", writeMethod: \"setAccessKey\"});\n\n\n/**\n * The access key.\n *\n * @param {String} accessKey The access key.\n */\nSignonRequest.prototype.setAccessKey = function(accessKey) {\n  this.accessKey = accessKey;\n};\n\n\n\n\nmodule.exports = SignonRequest;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar MessageSetType = require(\"../MessageSetType\");\nvar RequestMessageSet = require(\"../RequestMessageSet\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar SignonRequest = require(\"./SignonRequest\");\nvar PasswordChangeRequestTransaction = require(\"./PasswordChangeRequestTransaction\");\n\n/**\n * The sign-on request message set.\n *\n * @class\n * @augments RequestMessageSet\n * See \"Section 2.5, OFX Spec.\"\n */\nfunction SignonRequestMessageSet () {\n  RequestMessageSet.call(this);\n\n  /**\n   * @name SignonRequestMessageSet#signonRequest\n   * @type SignonRequest\n   * @access private\n   */\n  this.signonRequest = null;\n\n  /**\n   * @name SignonRequestMessageSet#passwordChangeRequest\n   * @type PasswordChangeRequestTransaction\n   * @access private\n   */\n  this.passwordChangeRequest = null;\n}\n\ninherit(SignonRequestMessageSet, \"extends\", RequestMessageSet);\n\n\nAggregate.add(\"SIGNONMSGSRQV1\", SignonRequestMessageSet);\n\n\nSignonRequestMessageSet.prototype.getType = function() {\n  return MessageSetType.signon;\n};\n\n\n/**\n * The message for this message set.\n *\n * @return {SignonRequest} The message for this message set.\n */\nSignonRequestMessageSet.prototype.getSignonRequest = function() {\n  return this.signonRequest;\n};\nChildAggregate.add(SignonRequestMessageSet, {required: true, order: 0, attributeType: SignonRequest, readMethod: \"getSignonRequest\", writeMethod: \"setSignonRequest\"});\n\n\n/**\n * The message for this message set.\n *\n * @param {SignonRequest} signonRequest The message for this message set.\n */\nSignonRequestMessageSet.prototype.setSignonRequest = function(signonRequest) {\n  this.signonRequest = signonRequest;\n};\n\n\n/**\n * The password change request.\n *\n * @return {PasswordChangeRequestTransaction} The password change request.\n */\nSignonRequestMessageSet.prototype.getPasswordChangeRequest = function() {\n  return this.passwordChangeRequest;\n};\nChildAggregate.add(SignonRequestMessageSet, {order: 10, attributeType: PasswordChangeRequestTransaction, readMethod: \"getPasswordChangeRequest\", writeMethod: \"setPasswordChangeRequest\"});\n\n\n/**\n * The password change request.\n *\n * @param {PasswordChangeRequestTransaction} passwordChangeRequest The password change request.\n */\nSignonRequestMessageSet.prototype.setPasswordChangeRequest = function(passwordChangeRequest) {\n  this.passwordChangeRequest = passwordChangeRequest;\n};\n\n\n//todo: challenge request/response\n// Inherited.\nSignonRequestMessageSet.prototype.getRequestMessages = function() {\n  var requestMessages = [];\n\n  if (this.getSignonRequest()) {\n    requestMessages.push(this.getSignonRequest());\n  }\n\n  if (this.getPasswordChangeRequest()) {\n    requestMessages.this(this.getPasswordChangeRequest());\n  }\n\n  return requestMessages;\n};\n\n\n\n\nmodule.exports = SignonRequestMessageSet;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar StatusHolder = require(\"../common/StatusHolder\");\nvar ResponseMessage = require(\"../ResponseMessage\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar Element = require(\"../../../meta/Element\");\nvar Status = require(\"../common/Status\");\nvar FinancialInstitution = require(\"./FinancialInstitution\");\n\n/**\n * The signon response message.\n *\n * @class\n * @augments ResponseMessage\n * @augments StatusHolder\n * See \"Section 2.5.1.2, OFX Spec.\"\n */\nfunction SignonResponse () {\n  ResponseMessage.call(this);\n\n  /**\n   * @name SignonResponse#status\n   * @type Status\n   * @access private\n   */\n  this.status = null;\n\n  /**\n   * @name SignonResponse#timestamp\n   * @type Date\n   * @access private\n   */\n  this.timestamp = null;\n\n  /**\n   * @name SignonResponse#userKey\n   * @type String\n   * @access private\n   */\n  this.userKey = null;\n\n  /**\n   * @name SignonResponse#userKeyExpiration\n   * @type Date\n   * @access private\n   */\n  this.userKeyExpiration = null;\n\n  /**\n   * @name SignonResponse#language\n   * @type String\n   * @access private\n   */\n  this.language = \"eng\";\n\n  /**\n   * @name SignonResponse#profileLastUpdated\n   * @type Date\n   * @access private\n   */\n  this.profileLastUpdated = null;\n\n  /**\n   * @name SignonResponse#accountLastUpdated\n   * @type Date\n   * @access private\n   */\n  this.accountLastUpdated = null;\n\n  /**\n   * @name SignonResponse#financialInstitution\n   * @type FinancialInstitution\n   * @access private\n   */\n  this.financialInstitution = null;\n\n  /**\n   * @name SignonResponse#sessionId\n   * @type String\n   * @access private\n   */\n  this.sessionId = null;\n\n  /**\n   * @name SignonResponse#accessKey\n   * @type String\n   * @access private\n   */\n  this.accessKey = null;\n}\n\ninherit(SignonResponse, \"extends\", ResponseMessage);\ninherit(SignonResponse, \"implements\", StatusHolder);\n\n\nAggregate.add(\"SONRS\", SignonResponse);\n\n\nSignonResponse.prototype.getResponseMessageName = function() {\n  return \"signon\";\n};\n\n\nSignonResponse.prototype.getStatusHolderName = function() {\n  return this.getResponseMessageName();\n};\n\n\n/**\n * The signon response status.\n *\n * @return {Status} The signon response status.\n */\nSignonResponse.prototype.getStatus = function() {\n  return this.status;\n};\nChildAggregate.add(SignonResponse, {required: true, order: 0, attributeType: Status, readMethod: \"getStatus\", writeMethod: \"setStatus\"});\n\n\n/**\n * The signon response status.\n *\n * @param {Status} status The signon response status.\n */\nSignonResponse.prototype.setStatus = function(status) {\n  this.status = status;\n};\n\n\n/**\n * The timestamp of this response.\n *\n * @return {Date} The timestamp of this response.\n */\nSignonResponse.prototype.getTimestamp = function() {\n  return this.timestamp;\n};\nElement.add(SignonResponse, {name: \"DTSERVER\", required: true, order: 10, attributeType: Date, readMethod: \"getTimestamp\", writeMethod: \"setTimestamp\"});\n\n\n/**\n * The timestamp of this response.\n *\n * @param {Date} timestamp The timestamp of this response.\n */\nSignonResponse.prototype.setTimestamp = function(timestamp) {\n  this.timestamp = timestamp;\n};\n\n\n/**\n * The userkey that can be used instead of the username/password.\n *\n * @return {String} The userkey that can be used instead of the username/password.\n */\nSignonResponse.prototype.getUserKey = function() {\n  return this.userKey;\n};\nElement.add(SignonResponse, {name: \"USERKEY\", order: 20, attributeType: String, readMethod: \"getUserKey\", writeMethod: \"setUserKey\"});\n\n\n/**\n * The userkey that can be used instead of the username/password.\n *\n * @param {String} userKey The userkey that can be used instead of the username/password.\n */\nSignonResponse.prototype.setUserKey = function(userKey) {\n  this.userKey = userKey;\n};\n\n\n/**\n * The date/time of the expiration of the user key.\n *\n * @return {Date} The date/time of the expiration of the user key.\n */\nSignonResponse.prototype.getUserKeyExpiration = function() {\n  return this.userKeyExpiration;\n};\nElement.add(SignonResponse, {name: \"TSKEYEXPIRE\", order: 30, attributeType: Date, readMethod: \"getUserKeyExpiration\", writeMethod: \"setUserKeyExpiration\"});\n\n\n/**\n * The date/time of the expiration of the user key.\n *\n * @param {Date} userKeyExpiration The date/time of the expiration of the user key.\n */\nSignonResponse.prototype.setUserKeyExpiration = function(userKeyExpiration) {\n  this.userKeyExpiration = userKeyExpiration;\n};\n\n\n/**\n * The three-letter langauge code.\n *\n * @return {String} The three-letter langauge code.\n * @see java.util.Locale#getISO3Language()\n */\nSignonResponse.prototype.getLanguage = function() {\n  return this.language;\n};\nElement.add(SignonResponse, {name: \"LANGUAGE\", required: true, order: 40, attributeType: String, readMethod: \"getLanguage\", writeMethod: \"setLanguage\"});\n\n\n/**\n * The three-letter langauge code.\n *\n * @param {String} language The three-letter langauge code.\n */\nSignonResponse.prototype.setLanguage = function(language) {\n  this.language = language;\n};\n\n\n/**\n * The date/time that the FI profile was last updated.\n *\n * @return {Date} The date/time that the FI profile was last updated.\n */\nSignonResponse.prototype.getProfileLastUpdated = function() {\n  return this.profileLastUpdated;\n};\nElement.add(SignonResponse, {name: \"DTPROFUP\", order: 50, attributeType: Date, readMethod: \"getProfileLastUpdated\", writeMethod: \"setProfileLastUpdated\"});\n\n\n/**\n * The date/time that the FI profile was last updated.\n *\n * @param {Date} profileLastUpdated The date/time that the FI profile was last updated.\n */\nSignonResponse.prototype.setProfileLastUpdated = function(profileLastUpdated) {\n  this.profileLastUpdated = profileLastUpdated;\n};\n\n\n/**\n * The date/time that the user's account information was updated.\n *\n * @return {Date} The date/time that the user's account information was updated.\n */\nSignonResponse.prototype.getAccountLastUpdated = function() {\n  return this.accountLastUpdated;\n};\nElement.add(SignonResponse, {name: \"DTACCTUP\", order: 60, attributeType: Date, readMethod: \"getAccountLastUpdated\", writeMethod: \"setAccountLastUpdated\"});\n\n\n/**\n * The date/time that the user's account information was updated.\n *\n * @param {Date} accountLastUpdated The date/time that the user's account information was updated.\n */\nSignonResponse.prototype.setAccountLastUpdated = function(accountLastUpdated) {\n  this.accountLastUpdated = accountLastUpdated;\n};\n\n\n/**\n * The financial instutution identity information.\n *\n * @return {FinancialInstitution} The financial instutution identity information.\n */\nSignonResponse.prototype.getFinancialInstitution = function() {\n  return this.financialInstitution;\n};\nChildAggregate.add(SignonResponse, {order: 70, attributeType: FinancialInstitution, readMethod: \"getFinancialInstitution\", writeMethod: \"setFinancialInstitution\"});\n\n\n/**\n * The financial instutution identity information.\n *\n * @param {FinancialInstitution} financialInstitution The financial instutution identity information.\n */\nSignonResponse.prototype.setFinancialInstitution = function(financialInstitution) {\n  this.financialInstitution = financialInstitution;\n};\n\n\n/**\n * The session id for the client.\n *\n * @return {String} The session id for the client.\n */\nSignonResponse.prototype.getSessionId = function() {\n  return this.sessionId;\n};\nElement.add(SignonResponse, {name: \"SESSCOOKIE\", order: 80, attributeType: String, readMethod: \"getSessionId\", writeMethod: \"setSessionId\"});\n\n\n/**\n * The session id for the client.\n *\n * @param {String} sessionId The session id for the client.\n */\nSignonResponse.prototype.setSessionId = function(sessionId) {\n  this.sessionId = sessionId;\n};\n\n\n/**\n * The access key that the client should return in the next sign-on requuest.\n *\n * @return {String} The access key that the client should return in the next sign-on requuest.\n */\nSignonResponse.prototype.getAccessKey = function() {\n  return this.accessKey;\n};\nElement.add(SignonResponse, {name: \"ACCESSKEY\", order: 90, attributeType: String, readMethod: \"getAccessKey\", writeMethod: \"setAccessKey\"});\n\n\n/**\n * The access key that the client should return in the next sign-on requuest.\n *\n * @param {String} accessKey The access key that the client should return in the next sign-on requuest.\n */\nSignonResponse.prototype.setAccessKey = function(accessKey) {\n  this.accessKey = accessKey;\n};\n\n\n\n\nmodule.exports = SignonResponse;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar MessageSetType = require(\"../MessageSetType\");\nvar ResponseMessageSet = require(\"../ResponseMessageSet\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar SignonResponse = require(\"./SignonResponse\");\nvar PasswordChangeResponseTransaction = require(\"./PasswordChangeResponseTransaction\");\n\n/**\n * The sign-on response message set.\n *\n * @class\n * @augments ResponseMessageSet\n * See \"Section 2.5, OFX Spec.\"\n */\nfunction SignonResponseMessageSet () {\n  ResponseMessageSet.call(this);\n\n  /**\n   * @name SignonResponseMessageSet#signonResponse\n   * @type SignonResponse\n   * @access private\n   */\n  this.signonResponse = null;\n\n  /**\n   * @name SignonResponseMessageSet#passwordChangeResponse\n   * @type PasswordChangeResponseTransaction\n   * @access private\n   */\n  this.passwordChangeResponse = null;\n}\n\ninherit(SignonResponseMessageSet, \"extends\", ResponseMessageSet);\n\n\nAggregate.add(\"SIGNONMSGSRSV1\", SignonResponseMessageSet);\n\n\nSignonResponseMessageSet.prototype.getType = function() {\n  return MessageSetType.signon;\n};\n\n\n/**\n * The message for this message set.\n *\n * @return {SignonResponse} The message for this message set.\n */\nSignonResponseMessageSet.prototype.getSignonResponse = function() {\n  return this.signonResponse;\n};\nChildAggregate.add(SignonResponseMessageSet, {order: 0, attributeType: SignonResponse, readMethod: \"getSignonResponse\", writeMethod: \"setSignonResponse\"});\n\n\n/**\n * The message for this message set.\n *\n * @param {SignonResponse} signonResponse The message for this message set.\n */\nSignonResponseMessageSet.prototype.setSignonResponse = function(signonResponse) {\n  this.signonResponse = signonResponse;\n};\n\n\n/**\n * The password change response.\n *\n * @return {PasswordChangeResponseTransaction} The password change response.\n */\nSignonResponseMessageSet.prototype.getPasswordChangeResponse = function() {\n  return this.passwordChangeResponse;\n};\nChildAggregate.add(SignonResponseMessageSet, {order: 10, attributeType: PasswordChangeResponseTransaction, readMethod: \"getPasswordChangeResponse\", writeMethod: \"setPasswordChangeResponse\"});\n\n\n/**\n * The password change response.\n *\n * @param {PasswordChangeResponseTransaction} passwordChangeResponse The password change response.\n */\nSignonResponseMessageSet.prototype.setPasswordChangeResponse = function(passwordChangeResponse) {\n  this.passwordChangeResponse = passwordChangeResponse;\n};\n\n\n//todo: challenge request/response\n// Inherited.\nSignonResponseMessageSet.prototype.getResponseMessages = function() {\n  var messages = [];\n\n  if (this.getSignonResponse()) {\n    messages.push(this.getSignonResponse());\n  }\n\n  return messages;\n};\n\n\n\n\nmodule.exports = SignonResponseMessageSet;\n","\"use strict\";\n\nmodule.exports = {\n  FinancialInstitution: require(\"./FinancialInstitution\"),\n  PasswordChangeRequest: require(\"./PasswordChangeRequest\"),\n  PasswordChangeRequestTransaction: require(\"./PasswordChangeRequestTransaction\"),\n  PasswordChangeResponse: require(\"./PasswordChangeResponse\"),\n  PasswordChangeResponseTransaction: require(\"./PasswordChangeResponseTransaction\"),\n  SignonRequest: require(\"./SignonRequest\"),\n  SignonRequestMessageSet: require(\"./SignonRequestMessageSet\"),\n  SignonResponse: require(\"./SignonResponse\"),\n  SignonResponseMessageSet: require(\"./SignonResponseMessageSet\"),\n};\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar RequestMessage = require(\"../RequestMessage\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar Element = require(\"../../../meta/Element\");\n\n/**\n * @class\n * @augments RequestMessage\n */\nfunction AccountInfoRequest () {\n  RequestMessage.call(this);\n\n  /**\n   * @name AccountInfoRequest#lastUpdated\n   * @type Date\n   * @access private\n   */\n  this.lastUpdated = new Date(0);\n}\n\ninherit(AccountInfoRequest, \"extends\", RequestMessage);\n\n\nAggregate.add(\"ACCTINFORQ\", AccountInfoRequest);\n\n\n/**\n * When the account info was last updated.\n *\n * @return {Date} When the account info was last updated.\n */\nAccountInfoRequest.prototype.getLastUpdated = function() {\n  return this.lastUpdated;\n};\nElement.add(AccountInfoRequest, {name: \"DTACCTUP\", required: true, order: 0, attributeType: Date, readMethod: \"getLastUpdated\", writeMethod: \"setLastUpdated\"});\n\n\n/**\n * When the account info was last updated.\n *\n * @param {Date} lastUpdated When the account info was last updated.\n */\nAccountInfoRequest.prototype.setLastUpdated = function(lastUpdated) {\n  this.lastUpdated = lastUpdated;\n};\n\n\n\n\nmodule.exports = AccountInfoRequest;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar TransactionWrappedRequestMessage = require(\"../TransactionWrappedRequestMessage\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar AccountInfoRequest = require(\"./AccountInfoRequest\");\n\n/**\n * @class\n * @augments TransactionWrappedRequestMessage\n */\nfunction AccountInfoRequestTransaction () {\n  TransactionWrappedRequestMessage.call(this);\n\n  /**\n   * @name AccountInfoRequestTransaction#message\n   * @type AccountInfoRequest\n   * @access private\n   */\n  this.message = null;\n}\n\ninherit(AccountInfoRequestTransaction, \"extends\", TransactionWrappedRequestMessage);\n\n\nAggregate.add(\"ACCTINFOTRNRQ\", AccountInfoRequestTransaction);\n\n\n/**\n * The wrapped message.\n *\n * @return {AccountInfoRequest} The wrapped message.\n */\nAccountInfoRequestTransaction.prototype.getMessage = function() {\n  return this.message;\n};\nChildAggregate.add(AccountInfoRequestTransaction, {required: true, order: 30, attributeType: AccountInfoRequest, readMethod: \"getMessage\", writeMethod: \"setMessage\"});\n\n\n/**\n * The wrapped message.\n *\n * @param {AccountInfoRequest} message The wrapped message.\n */\nAccountInfoRequestTransaction.prototype.setMessage = function(message) {\n  this.message = message;\n};\n\n\n// Inherited.\nAccountInfoRequestTransaction.prototype.setWrappedMessage = function(/*AccountInfoRequest*/ message) {\n  this.setMessage(message);\n};\n\n\n\n\nmodule.exports = AccountInfoRequestTransaction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\nvar AccountProfile = require(\"./AccountProfile\");\nvar ResponseMessage = require(\"../ResponseMessage\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar Element = require(\"../../../meta/Element\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\n\n/**\n * @class\n * @augments ResponseMessage\n */\nfunction AccountInfoResponse () {\n  ResponseMessage.call(this);\n\n  /**\n   * @name AccountInfoResponse#lastUpdated\n   * @type Date\n   * @access private\n   */\n  this.lastUpdated = new Date(0);\n\n  /**\n   * @name AccountInfoResponse#accounts\n   * @type AccountProfile[]\n   * @access private\n   */\n  this.accounts = null;\n}\n\ninherit(AccountInfoResponse, \"extends\", ResponseMessage);\n\n\nAggregate.add(\"ACCTINFORS\", AccountInfoResponse);\n\n\nAccountInfoResponse.prototype.getResponseMessageName = function() {\n  return \"account info\";\n};\n\n\n/**\n * When the account info was last updated.\n *\n * @return {Date} When the account info was last updated.\n */\nAccountInfoResponse.prototype.getLastUpdated = function() {\n  return this.lastUpdated;\n};\nElement.add(AccountInfoResponse, {name: \"DTACCTUP\", required: true, order: 0, attributeType: Date, readMethod: \"getLastUpdated\", writeMethod: \"setLastUpdated\"});\n\n\n/**\n * When the account info was last updated.\n *\n * @param {Date} lastUpdated When the account info was last updated.\n */\nAccountInfoResponse.prototype.setLastUpdated = function(lastUpdated) {\n  this.lastUpdated = lastUpdated;\n};\n\n\n/**\n * The accounts.\n *\n * @return {AccountProfile[]} The accounts.\n */\nAccountInfoResponse.prototype.getAccounts = function() {\n  return this.accounts;\n};\nChildAggregate.add(AccountInfoResponse, {order: 10, attributeType: Array, collectionEntryType: AccountProfile, readMethod: \"getAccounts\", writeMethod: \"setAccounts\"});\n\n\n/**\n * The accounts.\n *\n * @param {AccountProfile[]} accounts The accounts.\n */\nAccountInfoResponse.prototype.setAccounts = function(accounts) {\n  this.accounts = accounts;\n};\n\n\n\n\nmodule.exports = AccountInfoResponse;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar TransactionWrappedResponseMessage = require(\"../TransactionWrappedResponseMessage\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar AccountInfoResponse = require(\"./AccountInfoResponse\");\n\n/**\n * @class\n * @augments TransactionWrappedResponseMessage\n */\nfunction AccountInfoResponseTransaction () {\n  TransactionWrappedResponseMessage.call(this);\n\n  /**\n   * @name AccountInfoResponseTransaction#message\n   * @type AccountInfoResponse\n   * @access private\n   */\n  this.message = null;\n}\n\ninherit(AccountInfoResponseTransaction, \"extends\", TransactionWrappedResponseMessage);\n\n\nAggregate.add(\"ACCTINFOTRNRS\", AccountInfoResponseTransaction);\n\n\n/**\n * The wrapped message.\n *\n * @return {AccountInfoResponse} The wrapped message.\n */\nAccountInfoResponseTransaction.prototype.getMessage = function() {\n  return this.message;\n};\nChildAggregate.add(AccountInfoResponseTransaction, {required: true, order: 30, attributeType: AccountInfoResponse, readMethod: \"getMessage\", writeMethod: \"setMessage\"});\n\n\n/**\n * The wrapped message.\n *\n * @param {AccountInfoResponse} message The wrapped message.\n */\nAccountInfoResponseTransaction.prototype.setMessage = function(message) {\n  this.message = message;\n};\n\n\n// Inherited.\nAccountInfoResponseTransaction.prototype.getWrappedMessage = function() {\n  return this.getMessage();\n};\n\n\n\n\nmodule.exports = AccountInfoResponseTransaction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar InvestmentAccountInfo = require(\"../investment/accounts/InvestmentAccountInfo\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar Element = require(\"../../../meta/Element\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar BankAccountInfo = require(\"../banking/BankAccountInfo\");\nvar CreditCardAccountInfo = require(\"../creditcard/CreditCardAccountInfo\");\n\n/**\n * @class\n */\nfunction AccountProfile () {\n\n  /**\n   * @name AccountProfile#description\n   * @type String\n   * @access private\n   */\n  this.description = null;\n\n  /**\n   * @name AccountProfile#phone\n   * @type String\n   * @access private\n   */\n  this.phone = null;\n\n  /**\n   * @name AccountProfile#bankSpecifics\n   * @type BankAccountInfo\n   * @access private\n   */\n  this.bankSpecifics = null;\n\n  /**\n   * @name AccountProfile#creditCardSpecifics\n   * @type CreditCardAccountInfo\n   * @access private\n   */\n  this.creditCardSpecifics = null;\n\n  /**\n   * @name AccountProfile#investSpecifics\n   * @type InvestmentAccountInfo\n   * @access private\n   */\n  this.investSpecifics = null;\n}\n\n\n\nAggregate.add(\"ACCTINFO\", AccountProfile);\n\n\n/**\n * Description of the account.\n *\n * @return {String} The description of the account.\n */\nAccountProfile.prototype.getDescription = function() {\n  return this.description;\n};\nElement.add(AccountProfile, {name: \"DESC\", order: 0, attributeType: String, readMethod: \"getDescription\", writeMethod: \"setDescription\"});\n\n\n/**\n * The description of the account.\n *\n * @param {String} description The description of the account.\n */\nAccountProfile.prototype.setDescription = function(description) {\n  this.description = description;\n};\n\n\n/**\n * Phone number for the account.\n *\n * @return {String} Phone number for the account.\n */\nAccountProfile.prototype.getPhone = function() {\n  return this.phone;\n};\nElement.add(AccountProfile, {name: \"PHONE\", order: 10, attributeType: String, readMethod: \"getPhone\", writeMethod: \"setPhone\"});\n\n\n/**\n * Phone number for the account.\n *\n * @param {String} phone Phone number for the account.\n */\nAccountProfile.prototype.setPhone = function(phone) {\n  this.phone = phone;\n};\n\n\n/**\n * Account specifics.\n *\n * @return {net.sf.ofx4j.domain.data.common.AccountInfo} Account specifics.\n */\nAccountProfile.prototype.getSpecifics = function() {\n  if (this.getBankSpecifics() && this.getCreditCardSpecifics()) {\n    throw new Error(\"Only one account specifics aggregate can be set at a time.\");\n  }\n  else if (this.getBankSpecifics()) {\n    return this.getBankSpecifics();\n  } else if (this.getInvestmentSpecifics()) {\n    return this.getInvestmentSpecifics();\n  }\n  else {\n    return this.getCreditCardSpecifics();\n  }\n};\n\n\n/**\n * Account specifics.\n *\n * @param {net.sf.ofx4j.domain.data.common.AccountInfo} specifics Account specifics.\n */\nAccountProfile.prototype.setSpecifics = function(specifics) {\n  if (specifics instanceof BankAccountInfo) {\n    this.setBankSpecifics(specifics);\n  }\n  else if (specifics instanceof CreditCardAccountInfo) {\n    this.setCreditCardSpecifics(specifics);\n  } else if (specifics instanceof InvestmentAccountInfo) {\n    this.setInvestmentSpecifics(specifics);\n  }\n  else {\n    throw new Error(\"Unknown specifics type: \" + specifics);\n  }\n};\n\n\n/**\n * Bank-specific info.\n *\n * @return {BankAccountInfo} Bank-specific info.\n */\nAccountProfile.prototype.getBankSpecifics = function() {\n  return this.bankSpecifics;\n};\nChildAggregate.add(AccountProfile, {order: 20, attributeType: BankAccountInfo, readMethod: \"getBankSpecifics\", writeMethod: \"setBankSpecifics\"});\n\n\n/**\n * Bank-specific info.\n *\n * @param {BankAccountInfo} bankSpecifics Bank-specific info.\n */\nAccountProfile.prototype.setBankSpecifics = function(bankSpecifics) {\n  this.creditCardSpecifics = null;\n  this.investSpecifics = null;\n  this.bankSpecifics = bankSpecifics;\n};\n\n\n/**\n * Credit-card account info.\n *\n * @return {CreditCardAccountInfo} Credit-card account info.\n */\nAccountProfile.prototype.getCreditCardSpecifics = function() {\n  return this.creditCardSpecifics;\n};\nChildAggregate.add(AccountProfile, {order: 30, attributeType: CreditCardAccountInfo, readMethod: \"getCreditCardSpecifics\", writeMethod: \"setCreditCardSpecifics\"});\n\n\n/**\n * Credit-card account info.\n *\n * @param {CreditCardAccountInfo} creditCardSpecifics Credit-card account info.\n */\nAccountProfile.prototype.setCreditCardSpecifics = function(creditCardSpecifics) {\n  this.bankSpecifics = null;\n  this.investSpecifics = null;\n  this.creditCardSpecifics = creditCardSpecifics;\n};\n\n\n/**\n * Investment account info.\n *\n * @return {InvestmentAccountInfo} Investment account info.\n */\nAccountProfile.prototype.getInvestmentSpecifics = function() {\n  return this.investSpecifics;\n};\nChildAggregate.add(AccountProfile, {order: 40, attributeType: InvestmentAccountInfo, readMethod: \"getInvestmentSpecifics\", writeMethod: \"setInvestmentSpecifics\"});\n\n\n/**\n * Investment account info.\n *\n * @param {InvestmentAccountInfo} investSpecifics Investment account info.\n */\nAccountProfile.prototype.setInvestmentSpecifics = function(investSpecifics) {\n  this.bankSpecifics = null;\n  this.creditCardSpecifics = null;\n  this.investSpecifics = investSpecifics;\n};\n\n\n\n\nmodule.exports = AccountProfile;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar RequestMessageSet = require(\"../RequestMessageSet\");\nvar MessageSetType = require(\"../MessageSetType\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar AccountInfoRequestTransaction = require(\"./AccountInfoRequestTransaction\");\n\n/**\n * @class\n * @augments RequestMessageSet\n */\nfunction SignupRequestMessageSet () {\n  RequestMessageSet.call(this);\n\n  /**\n   * @name SignupRequestMessageSet#accountInfoRequest\n   * @type AccountInfoRequestTransaction\n   * @access private\n   */\n  this.accountInfoRequest = null;\n}\n\ninherit(SignupRequestMessageSet, \"extends\", RequestMessageSet);\n\n\nAggregate.add(\"SIGNUPMSGSRQV1\", SignupRequestMessageSet);\n\n\nSignupRequestMessageSet.prototype.getType = function() {\n  return MessageSetType.signup;\n};\n\n\n/**\n * The account info request.\n *\n * @return {AccountInfoRequestTransaction} The account info request.\n */\nSignupRequestMessageSet.prototype.getAccountInfoRequest = function() {\n  return this.accountInfoRequest;\n};\nChildAggregate.add(SignupRequestMessageSet, {order: 0, attributeType: AccountInfoRequestTransaction, readMethod: \"getAccountInfoRequest\", writeMethod: \"setAccountInfoRequest\"});\n\n\n/**\n * The account info request.\n *\n * @param {AccountInfoRequestTransaction} accountInfoRequest The account info request.\n */\nSignupRequestMessageSet.prototype.setAccountInfoRequest = function(accountInfoRequest) {\n  this.accountInfoRequest = accountInfoRequest;\n};\n\n\n/**\n * The request messages.\n *\n * @return {RequestMessage[]} The request messages.\n */\nSignupRequestMessageSet.prototype.getRequestMessages = function() {\n  var messages = [];\n\n  if (this.getAccountInfoRequest()) {\n    messages.push(this.getAccountInfoRequest());\n  }\n  \n  return messages;\n};\n\n\n\n\nmodule.exports = SignupRequestMessageSet;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar ResponseMessageSet = require(\"../ResponseMessageSet\");\nvar MessageSetType = require(\"../MessageSetType\");\nvar AccountInfoResponseTransaction = require(\"./AccountInfoResponseTransaction\");\n\n/**\n * @class\n * @augments ResponseMessageSet\n */\nfunction SignupResponseMessageSet () {\n  ResponseMessageSet.call(this);\n\n  /**\n   * @name SignupResponseMessageSet#accountInfoResponse\n   * @type AccountInfoResponseTransaction\n   * @access private\n   */\n  this.accountInfoResponse = null;\n}\n\ninherit(SignupResponseMessageSet, \"extends\", ResponseMessageSet);\n\n\nAggregate.add(\"SIGNUPMSGSRSV1\", SignupResponseMessageSet);\n\n\nSignupResponseMessageSet.prototype.getType = function() {\n  return MessageSetType.signup;\n};\n\n\n/**\n * The account info response.\n *\n * @return {AccountInfoResponseTransaction} The account info response.\n */\nSignupResponseMessageSet.prototype.getAccountInfoResponse = function() {\n  return this.accountInfoResponse;\n};\nChildAggregate.add(SignupResponseMessageSet, {order: 0, attributeType: AccountInfoResponseTransaction, readMethod: \"getAccountInfoResponse\", writeMethod: \"setAccountInfoResponse\"});\n\n\n/**\n * The account info response.\n *\n * @param {AccountInfoResponseTransaction} accountInfoResponse The account info response.\n */\nSignupResponseMessageSet.prototype.setAccountInfoResponse = function(accountInfoResponse) {\n  this.accountInfoResponse = accountInfoResponse;\n};\n\n\n/**\n * The response messages.\n *\n * @return {ResponseMessage[]} The response messages.\n */\nSignupResponseMessageSet.prototype.getResponseMessages = function() {\n  var messages = [];\n\n  if (this.getAccountInfoResponse()) {\n    messages.push(this.getAccountInfoResponse());\n  }\n\n  return messages;\n};\n\n\n\n\nmodule.exports = SignupResponseMessageSet;\n","\"use strict\";\n\nmodule.exports = {\n  AccountInfoRequest: require(\"./AccountInfoRequest\"),\n  AccountInfoRequestTransaction: require(\"./AccountInfoRequestTransaction\"),\n  AccountInfoResponse: require(\"./AccountInfoResponse\"),\n  AccountInfoResponseTransaction: require(\"./AccountInfoResponseTransaction\"),\n  AccountProfile: require(\"./AccountProfile\"),\n  SignupRequestMessageSet: require(\"./SignupRequestMessageSet\"),\n  SignupResponseMessageSet: require(\"./SignupResponseMessageSet\"),\n};\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\"use strict\";\n\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar Element = require(\"../../../meta/Element\");\nvar ProcDet = require(\"./ProcDet\");\n\n/**\n * @class\n */\nfunction ExtDBInfo () {\n\n  /**\n   * @name ExtDBInfo#procDet\n   * @type ProcDet[]\n   * @access private\n   */\n  this.procDet = null;\n\n  /**\n   * @name ExtDBInfo#teInterest\n   * @type String\n   * @access private\n   */\n  this.teInterest = null;\n\n  /**\n   * @name ExtDBInfo#pabInterest\n   * @type String\n   * @access private\n   */\n  this.pabInterest = null;\n\n  /**\n   * @name ExtDBInfo#teIntDividend\n   * @type String\n   * @access private\n   */\n  this.teIntDividend = null;\n\n  /**\n   * @name ExtDBInfo#pabDividend\n   * @type String\n   * @access private\n   */\n  this.pabDividend = null;\n}\n\n\n\nAggregate.add(\"EXTDBINFO_V100\", ExtDBInfo);\n\n\n/**\n * @return {ProcDet[]} the procDet\n */\nExtDBInfo.prototype.getProcDet = function() {\n  return this.procDet;\n};\nChildAggregate.add(ExtDBInfo, {required:false, order: 0, attributeType: Array, collectionEntryType: ProcDet, readMethod: \"getProcDet\", writeMethod: \"setProcDet\"});\n\n\n/**\n * @param {ProcDet[]} procDet the procDet to set\n */\nExtDBInfo.prototype.setProcDet = function(procDet) {\n  this.procDet = procDet;\n};\n\n\n/**\n * @return {String} the teInterest\n */\nExtDBInfo.prototype.getTeInterest = function() {\n  return this.teInterest;\n};\nElement.add(ExtDBInfo, {name: \"TEINTEREST\",required: false , order: 1, attributeType: String, readMethod: \"getTeInterest\", writeMethod: \"setTeInterest\"});\n\n\n/**\n * @param {String} teInterest the teInterest to set\n */\nExtDBInfo.prototype.setTeInterest = function(teInterest) {\n  this.teInterest = teInterest;\n};\n\n\n/**\n * @return {String} the pabInterest\n */\nExtDBInfo.prototype.getPabInterest = function() {\n  return this.pabInterest;\n};\nElement.add(ExtDBInfo, {name: \"PABINTEREST\",required: false , order: 2, attributeType: String, readMethod: \"getPabInterest\", writeMethod: \"setPabInterest\"});\n\n\n/**\n * @param {String} pabInterest the pabInterest to set\n */\nExtDBInfo.prototype.setPabInterest = function(pabInterest) {\n  this.pabInterest = pabInterest;\n};\n\n\n/**\n * @return {String} the teIntDividend\n */\nExtDBInfo.prototype.getTeIntDividend = function() {\n  return this.teIntDividend;\n};\nElement.add(ExtDBInfo, {name: \"TEINTDIVIDEND\",required: false , order: 3, attributeType: String, readMethod: \"getTeIntDividend\", writeMethod: \"setTeIntDividend\"});\n\n\n/**\n * @param {String} teIntDividend the teIntDividend to set\n */\nExtDBInfo.prototype.setTeIntDividend = function(teIntDividend) {\n  this.teIntDividend = teIntDividend;\n};\n\n\n/**\n * @return {String} the pabDividend\n */\nExtDBInfo.prototype.getPabDividend = function() {\n  return this.pabDividend;\n};\nElement.add(ExtDBInfo, {name: \"PABDIVIDEND\",required: false , order: 4, attributeType: String, readMethod: \"getPabDividend\", writeMethod: \"setPabDividend\"});\n\n\n/**\n * @param {String} pabDividend the pabDividend to set\n */\nExtDBInfo.prototype.setPabDividend = function(pabDividend) {\n  this.pabDividend = pabDividend;\n};\n\n\n\n\nmodule.exports = ExtDBInfo;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\"use strict\";\n\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar Element = require(\"../../../meta/Element\");\n\n/**\n * @class\n */\nfunction PayerAddress () {\n\n  /**\n   * @name PayerAddress#payerName1\n   * @type String\n   * @access private\n   */\n  this.payerName1 = null;\n\n  /**\n   * @name PayerAddress#payerName2\n   * @type String\n   * @access private\n   */\n  this.payerName2 = null;\n\n  /**\n   * @name PayerAddress#address1\n   * @type String\n   * @access private\n   */\n  this.address1 = null;\n\n  /**\n   * @name PayerAddress#address2\n   * @type String\n   * @access private\n   */\n  this.address2 = null;\n\n  /**\n   * @name PayerAddress#city\n   * @type String\n   * @access private\n   */\n  this.city = null;\n\n  /**\n   * @name PayerAddress#state\n   * @type String\n   * @access private\n   */\n  this.state = null;\n\n  /**\n   * @name PayerAddress#postalCode\n   * @type String\n   * @access private\n   */\n  this.postalCode = null;\n\n  /**\n   * @name PayerAddress#phone\n   * @type String\n   * @access private\n   */\n  this.phone = null;\n}\n\n\n\nAggregate.add(\"PAYERADDR\", PayerAddress);\n\n\n/**\n * @return {String} the payerName1\n */\nPayerAddress.prototype.getPayerName1 = function() {\n  return this.payerName1;\n};\nElement.add(PayerAddress, {name: \"PAYERNAME1\",required: true , order: 0, attributeType: String, readMethod: \"getPayerName1\", writeMethod: \"setPayerName1\"});\n\n\n/**\n * @param {String} payerName1 the payerName1 to set\n */\nPayerAddress.prototype.setPayerName1 = function(payerName1) {\n  this.payerName1 = payerName1;\n};\n\n\n/**\n * @return {String} the payerName2\n */\nPayerAddress.prototype.getPayerName2 = function() {\n  return this.payerName2;\n};\nElement.add(PayerAddress, {name: \"PAYERNAME2\",required: false , order: 1, attributeType: String, readMethod: \"getPayerName2\", writeMethod: \"setPayerName2\"});\n\n\n/**\n * @param {String} payerName2 the payerName2 to set\n */\nPayerAddress.prototype.setPayerName2 = function(payerName2) {\n  this.payerName2 = payerName2;\n};\n\n\n/**\n * @return {String} the address1\n */\nPayerAddress.prototype.getAddress1 = function() {\n  return this.address1;\n};\nElement.add(PayerAddress, {name: \"ADDR1\",required: true , order: 2, attributeType: String, readMethod: \"getAddress1\", writeMethod: \"setAddress1\"});\n\n\n/**\n * @param {String} address1 the address1 to set\n */\nPayerAddress.prototype.setAddress1 = function(address1) {\n  this.address1 = address1;\n};\n\n\n/**\n * @return {String} the address2\n */\nPayerAddress.prototype.getAddress2 = function() {\n  return this.address2;\n};\nElement.add(PayerAddress, {name: \"ADDR2\",required: true , order: 3, attributeType: String, readMethod: \"getAddress2\", writeMethod: \"setAddress2\"});\n\n\n/**\n * @param {String} address2 the address2 to set\n */\nPayerAddress.prototype.setAddress2 = function(address2) {\n  this.address2 = address2;\n};\n\n\n/**\n * @return {String} the city\n */\nPayerAddress.prototype.getCity = function() {\n  return this.city;\n};\nElement.add(PayerAddress, {name: \"CITY\",required: true , order: 4, attributeType: String, readMethod: \"getCity\", writeMethod: \"setCity\"});\n\n\n/**\n * @param {String} city the city to set\n */\nPayerAddress.prototype.setCity = function(city) {\n  this.city = city;\n};\n\n\n/**\n * @return {String} the state\n */\nPayerAddress.prototype.getState = function() {\n  return this.state;\n};\nElement.add(PayerAddress, {name: \"STATE\",required: true , order: 5, attributeType: String, readMethod: \"getState\", writeMethod: \"setState\"});\n\n\n/**\n * @param {String} state the state to set\n */\nPayerAddress.prototype.setState = function(state) {\n  this.state = state;\n};\n\n\n/**\n * @return {String} the postalCode\n */\nPayerAddress.prototype.getPostalCode = function() {\n  return this.postalCode;\n};\nElement.add(PayerAddress, {name: \"POSTALCODE\",required: true , order: 6, attributeType: String, readMethod: \"getPostalCode\", writeMethod: \"setPostalCode\"});\n\n\n/**\n * @param {String} postalCode the postalCode to set\n */\nPayerAddress.prototype.setPostalCode = function(postalCode) {\n  this.postalCode = postalCode;\n};\n\n\n/**\n * @return {String} the phone\n */\nPayerAddress.prototype.getPhone = function() {\n  return this.phone;\n};\nElement.add(PayerAddress, {name: \"PHONE\",required: false , order: 7, attributeType: String, readMethod: \"getPhone\", writeMethod: \"setPhone\"});\n\n\n/**\n * @param {String} phone the phone to set\n */\nPayerAddress.prototype.setPhone = function(phone) {\n  this.phone = phone;\n};\n\n\n\n\nmodule.exports = PayerAddress;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\"use strict\";\n\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar Element = require(\"../../../meta/Element\");\n\n/**\n * @class\n */\nfunction ProcDet () {\n\n  /**\n   * @name ProcDet#dtAqd\n   * @type String\n   * @access private\n   */\n  this.dtAqd = null;\n\n  /**\n   * @name ProcDet#dtSale\n   * @type String\n   * @access private\n   */\n  this.dtSale = null;\n\n  /**\n   * @name ProcDet#secName\n   * @type String\n   * @access private\n   */\n  this.secName = null;\n\n  /**\n   * @name ProcDet#costBasis\n   * @type String\n   * @access private\n   */\n  this.costBasis = null;\n\n  /**\n   * @name ProcDet#saleSpr\n   * @type String\n   * @access private\n   */\n  this.saleSpr = null;\n\n  /**\n   * @name ProcDet#longShort\n   * @type String\n   * @access private\n   */\n  this.longShort = null;\n\n  /**\n   * @name ProcDet#wasDisAllowed\n   * @type String\n   * @access private\n   */\n  this.wasDisAllowed = null;\n\n  /**\n   * @name ProcDet#noncoveredSec\n   * @type String\n   * @access private\n   */\n  this.noncoveredSec = null;\n\n  /**\n   * @name ProcDet#basisNotshown\n   * @type String\n   * @access private\n   */\n  this.basisNotshown = null;\n}\n\n\n\nAggregate.add(\"PROCDET_V100\", ProcDet);\n\n\n/**\n * @return {String} the dtAqd\n */\nProcDet.prototype.getDtAqd = function() {\n  return this.dtAqd;\n};\nElement.add(ProcDet, {name: \"DTAQD\", required: false, order: 0, attributeType: String, readMethod: \"getDtAqd\", writeMethod: \"setDtAqd\"});\n\n\n/**\n * @param {String} dtAqd the dtAqd to set\n */\nProcDet.prototype.setDtAqd = function(dtAqd) {\n  this.dtAqd = dtAqd;\n};\n\n\n/**\n * @return {String} the dtSale\n */\nProcDet.prototype.getDtSale = function() {\n  return this.dtSale;\n};\nElement.add(ProcDet, {name: \"DTSALE\", required: false, order: 2, attributeType: String, readMethod: \"getDtSale\", writeMethod: \"setDtSale\"});\n\n\n/**\n * @param {String} dtSale the dtSale to set\n */\nProcDet.prototype.setDtSale = function(dtSale) {\n  this.dtSale = dtSale;\n};\n\n\n/**\n * @return {String} the secName\n */\nProcDet.prototype.getSecName = function() {\n  return this.secName;\n};\nElement.add(ProcDet, {name: \"SECNAME\", required: false, order: 3, attributeType: String, readMethod: \"getSecName\", writeMethod: \"setSecName\"});\n\n\n/**\n * @param {String} secName the secName to set\n */\nProcDet.prototype.setSecName = function(secName) {\n  this.secName = secName;\n};\n\n\n/**\n * @return {String} the costBasis\n */\nProcDet.prototype.getCostBasis = function() {\n  return this.costBasis;\n};\nElement.add(ProcDet, {name: \"COSTBASIS\", required: false, order: 4, attributeType: String, readMethod: \"getCostBasis\", writeMethod: \"setCostBasis\"});\n\n\n/**\n * @param {String} costBasis the costBasis to set\n */\nProcDet.prototype.setCostBasis = function(costBasis) {\n  this.costBasis = costBasis;\n};\n\n\n/**\n * @return {String} the saleSpr\n */\nProcDet.prototype.getSaleSpr = function() {\n  return this.saleSpr;\n};\nElement.add(ProcDet, {name: \"SALESPR\", required: false, order: 5, attributeType: String, readMethod: \"getSaleSpr\", writeMethod: \"setSaleSpr\"});\n\n\n/**\n * @param {String} saleSpr the saleSpr to set\n */\nProcDet.prototype.setSaleSpr = function(saleSpr) {\n  this.saleSpr = saleSpr;\n};\n\n\n/**\n * @return {String} the longShort\n */\nProcDet.prototype.getLongShort = function() {\n  return this.longShort;\n};\nElement.add(ProcDet, {name: \"LONGSHORT\", required: false, order: 6, attributeType: String, readMethod: \"getLongShort\", writeMethod: \"setLongShort\"});\n\n\n/**\n * @param {String} longShort the longShort to set\n */\nProcDet.prototype.setLongShort = function(longShort) {\n  this.longShort = longShort;\n};\n\n\n/**\n * @return {String} the wasDisAllowed\n */\nProcDet.prototype.getWasDisAllowed = function() {\n  return this.wasDisAllowed;\n};\nElement.add(ProcDet, {name: \"WASHSALELOSSDISALLOWED\", required: false, order: 7, attributeType: String, readMethod: \"getWasDisAllowed\", writeMethod: \"setWasDisAllowed\"});\n\n\n/**\n * @param {String} wasDisAllowed the wasDisAllowed to set\n */\nProcDet.prototype.setWasDisAllowed = function(wasDisAllowed) {\n  this.wasDisAllowed = wasDisAllowed;\n};\n\n\n/**\n * @return {String} the noncoveredSec\n */\nProcDet.prototype.getNoncoveredSec = function() {\n  return this.noncoveredSec;\n};\nElement.add(ProcDet, {name: \"NONCOVEREDSECURITY\", required: false, order: 8, attributeType: String, readMethod: \"getNoncoveredSec\", writeMethod: \"setNoncoveredSec\"});\n\n\n/**\n * @param {String} noncoveredSec the noncoveredSec to set\n */\nProcDet.prototype.setNoncoveredSec = function(noncoveredSec) {\n  this.noncoveredSec = noncoveredSec;\n};\n\n\n/**\n * @return {String} the basisNotshown\n */\nProcDet.prototype.getBasisNotshown = function() {\n  return this.basisNotshown;\n};\nElement.add(ProcDet, {name: \"BASISNOTSHOWN\", required: false, order: 9, attributeType: String, readMethod: \"getBasisNotshown\", writeMethod: \"setBasisNotshown\"});\n\n\n/**\n * @param {String} basisNotshown the basisNotshown to set\n */\nProcDet.prototype.setBasisNotshown = function(basisNotshown) {\n  this.basisNotshown = basisNotshown;\n};\n\n\n\n\nmodule.exports = ProcDet;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\"use strict\";\n\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar Element = require(\"../../../meta/Element\");\n\n/**\n * @class\n */\nfunction RecAddress () {\n\n  /**\n   * @name RecAddress#recName1\n   * @type String\n   * @access private\n   */\n  this.recName1 = null;\n\n  /**\n   * @name RecAddress#recName2\n   * @type String\n   * @access private\n   */\n  this.recName2 = null;\n\n  /**\n   * @name RecAddress#address1\n   * @type String\n   * @access private\n   */\n  this.address1 = null;\n\n  /**\n   * @name RecAddress#address2\n   * @type String\n   * @access private\n   */\n  this.address2 = null;\n\n  /**\n   * @name RecAddress#city\n   * @type String\n   * @access private\n   */\n  this.city = null;\n\n  /**\n   * @name RecAddress#state\n   * @type String\n   * @access private\n   */\n  this.state = null;\n\n  /**\n   * @name RecAddress#postalCode\n   * @type String\n   * @access private\n   */\n  this.postalCode = null;\n\n  /**\n   * @name RecAddress#phone\n   * @type String\n   * @access private\n   */\n  this.phone = null;\n}\n\n\n\nAggregate.add(\"RECADDR\", RecAddress);\n\n\n/**\n * @return {String} the recName1\n */\nRecAddress.prototype.getRecName1 = function() {\n  return this.recName1;\n};\nElement.add(RecAddress, {name: \"RECNAME1\",required: true , order: 0, attributeType: String, readMethod: \"getRecName1\", writeMethod: \"setRecName1\"});\n\n\n/**\n * @param {String} recName1 the recName1 to set\n */\nRecAddress.prototype.setRecName1 = function(recName1) {\n  this.recName1 = recName1;\n};\n\n\n/**\n * @return {String} the recName2\n */\nRecAddress.prototype.getRecName2 = function() {\n  return this.recName2;\n};\nElement.add(RecAddress, {name: \"RECNAME2\",required: false , order: 1, attributeType: String, readMethod: \"getRecName2\", writeMethod: \"setRecName2\"});\n\n\n/**\n * @param {String} recName2 the recName2 to set\n */\nRecAddress.prototype.setRecName2 = function(recName2) {\n  this.recName2 = recName2;\n};\n\n\n/**\n * @return {String} the address1\n */\nRecAddress.prototype.getAddress1 = function() {\n  return this.address1;\n};\nElement.add(RecAddress, {name: \"ADDR1\",required: true , order: 2, attributeType: String, readMethod: \"getAddress1\", writeMethod: \"setAddress1\"});\n\n\n/**\n * @param {String} address1 the address1 to set\n */\nRecAddress.prototype.setAddress1 = function(address1) {\n  this.address1 = address1;\n};\n\n\n/**\n * @return {String} the address2\n */\nRecAddress.prototype.getAddress2 = function() {\n  return this.address2;\n};\nElement.add(RecAddress, {name: \"ADDR2\",required: true , order: 3, attributeType: String, readMethod: \"getAddress2\", writeMethod: \"setAddress2\"});\n\n\n/**\n * @param {String} address2 the address2 to set\n */\nRecAddress.prototype.setAddress2 = function(address2) {\n  this.address2 = address2;\n};\n\n\n/**\n * @return {String} the city\n */\nRecAddress.prototype.getCity = function() {\n  return this.city;\n};\nElement.add(RecAddress, {name: \"CITY\",required: true , order: 4, attributeType: String, readMethod: \"getCity\", writeMethod: \"setCity\"});\n\n\n/**\n * @param {String} city the city to set\n */\nRecAddress.prototype.setCity = function(city) {\n  this.city = city;\n};\n\n\n/**\n * @return {String} the state\n */\nRecAddress.prototype.getState = function() {\n  return this.state;\n};\nElement.add(RecAddress, {name: \"STATE\",required: true , order: 5, attributeType: String, readMethod: \"getState\", writeMethod: \"setState\"});\n\n\n/**\n * @param {String} state the state to set\n */\nRecAddress.prototype.setState = function(state) {\n  this.state = state;\n};\n\n\n/**\n * @return {String} the postalCode\n */\nRecAddress.prototype.getPostalCode = function() {\n  return this.postalCode;\n};\nElement.add(RecAddress, {name: \"POSTALCODE\",required: true , order: 6, attributeType: String, readMethod: \"getPostalCode\", writeMethod: \"setPostalCode\"});\n\n\n/**\n * @param {String} postalCode the postalCode to set\n */\nRecAddress.prototype.setPostalCode = function(postalCode) {\n  this.postalCode = postalCode;\n};\n\n\n/**\n * @return {String} the phone\n */\nRecAddress.prototype.getPhone = function() {\n  return this.phone;\n};\nElement.add(RecAddress, {name: \"PHONE\",required: false , order: 7, attributeType: String, readMethod: \"getPhone\", writeMethod: \"setPhone\"});\n\n\n/**\n * @param {String} phone the phone to set\n */\nRecAddress.prototype.setPhone = function(phone) {\n  this.phone = phone;\n};\n\n\n\n\nmodule.exports = RecAddress;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\"use strict\";\n\nvar PayerAddress = require(\"./PayerAddress\");\nvar RecAddress = require(\"./RecAddress\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar Element = require(\"../../../meta/Element\");\nvar ExtDBInfo = require(\"./ExtDBInfo\");\n\n/**\n * @class\n */\nfunction Tax1099B () {\n\n  /**\n   * @name Tax1099B#srvrtId\n   * @type String\n   * @access private\n   */\n  this.srvrtId = null;\n\n  /**\n   * @name Tax1099B#taxYear\n   * @type String\n   * @access private\n   */\n  this.taxYear = null;\n\n  /**\n   * @name Tax1099B#extDBInfo\n   * @type ExtDBInfo\n   * @access private\n   */\n  this.extDBInfo = null;\n\n  /**\n   * @name Tax1099B#payerAddress\n   * @type PayerAddress\n   * @access private\n   */\n  this.payerAddress = null;\n\n  /**\n   * @name Tax1099B#payerId\n   * @type String\n   * @access private\n   */\n  this.payerId = null;\n\n  /**\n   * @name Tax1099B#recAddress\n   * @type RecAddress\n   * @access private\n   */\n  this.recAddress = null;\n\n  /**\n   * @name Tax1099B#recId\n   * @type String\n   * @access private\n   */\n  this.recId = null;\n\n  /**\n   * @name Tax1099B#recAcct\n   * @type String\n   * @access private\n   */\n  this.recAcct = null;\n}\n\n\n\nAggregate.add(\"TAX1099B_V100\", Tax1099B);\n\n\nTax1099B.prototype.getSrvrtId = function() {\n  return this.srvrtId;\n};\nElement.add(Tax1099B, {name: \"SRVRTID\",required: true , order: 0, attributeType: String, readMethod: \"getSrvrtId\", writeMethod: \"setSrvrtId\"});\n\n\nTax1099B.prototype.setSrvrtId = function(/*String*/ srvrtId) {\n  this.srvrtId = srvrtId;\n};\n\n\nTax1099B.prototype.getTaxYear = function() {\n  return this.taxYear;\n};\nElement.add(Tax1099B, {name: \"TAXYEAR\", required: true, order: 1, attributeType: String, readMethod: \"getTaxYear\", writeMethod: \"setTaxYear\"});\n\n\nTax1099B.prototype.setTaxYear = function(/*String*/ taxYear) {\n  this.taxYear = taxYear;\n};\n\n\n/**\n * @return {ExtDBInfo} the extDBInfo\n */\nTax1099B.prototype.getExtDBInfo = function() {\n  return this.extDBInfo;\n};\nChildAggregate.add(Tax1099B, {required:true, order: 2, attributeType: ExtDBInfo, readMethod: \"getExtDBInfo\", writeMethod: \"setExtDBInfo\"});\n\n\n/**\n * @param {ExtDBInfo} extDBInfo the extDBInfo to set\n */\nTax1099B.prototype.setExtDBInfo = function(extDBInfo) {\n  this.extDBInfo = extDBInfo;\n};\n\n\n/**\n * @return {PayerAddress} the payerAddress\n */\nTax1099B.prototype.getPayerAddress = function() {\n  return this.payerAddress;\n};\nChildAggregate.add(Tax1099B, {required:true, order: 3, attributeType: PayerAddress, readMethod: \"getPayerAddress\", writeMethod: \"setPayerAddress\"});\n\n\n/**\n * @param {PayerAddress} payerAddress the payerAddress to set\n */\nTax1099B.prototype.setPayerAddress = function(payerAddress) {\n  this.payerAddress = payerAddress;\n};\n\n\n/**\n * @return {String} the payerId\n */\nTax1099B.prototype.getPayerId = function() {\n  return this.payerId;\n};\nElement.add(Tax1099B, {name: \"PAYERID\", required: true, order: 4, attributeType: String, readMethod: \"getPayerId\", writeMethod: \"setPayerId\"});\n\n\n/**\n * @param {String} payerId the payerId to set\n */\nTax1099B.prototype.setPayerId = function(payerId) {\n  this.payerId = payerId;\n};\n\n\n/**\n * @return {RecAddress} the recAddress\n */\nTax1099B.prototype.getRecAddress = function() {\n  return this.recAddress;\n};\nChildAggregate.add(Tax1099B, {required:true, order: 5, attributeType: RecAddress, readMethod: \"getRecAddress\", writeMethod: \"setRecAddress\"});\n\n\n/**\n * @param {RecAddress} recAddress the recAddress to set\n */\nTax1099B.prototype.setRecAddress = function(recAddress) {\n  this.recAddress = recAddress;\n};\n\n\n/**\n * @return {String} the recId\n */\nTax1099B.prototype.getRecId = function() {\n  return this.recId;\n};\nElement.add(Tax1099B, {name: \"RECID\", required: true, order: 6, attributeType: String, readMethod: \"getRecId\", writeMethod: \"setRecId\"});\n\n\n/**\n * @param {String} recId the recId to set\n */\nTax1099B.prototype.setRecId = function(recId) {\n  this.recId = recId;\n};\n\n\n/**\n * @return {String} the recAcct\n */\nTax1099B.prototype.getRecAcct = function() {\n  return this.recAcct;\n};\nElement.add(Tax1099B, {name: \"RECACCT\", required: true, order: 7, attributeType: String, readMethod: \"getRecAcct\", writeMethod: \"setRecAcct\"});\n\n\n/**\n * @param {String} recAcct the recAcct to set\n */\nTax1099B.prototype.setRecAcct = function(recAcct) {\n  this.recAcct = recAcct;\n};\n\n\n\n\nmodule.exports = Tax1099B;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\"use strict\";\n\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar Element = require(\"../../../meta/Element\");\nvar PayerAddress = require(\"./PayerAddress\");\nvar RecAddress = require(\"./RecAddress\");\n\n/**\n * @class\n */\nfunction Tax1099DIV () {\n\n  /**\n   * @name Tax1099DIV#srvrtId\n   * @type String\n   * @access private\n   */\n  this.srvrtId = null;\n\n  /**\n   * @name Tax1099DIV#taxYear\n   * @type String\n   * @access private\n   */\n  this.taxYear = null;\n\n  /**\n   * @name Tax1099DIV#ordDiv\n   * @type String\n   * @access private\n   */\n  this.ordDiv = null;\n\n  /**\n   * @name Tax1099DIV#qualifiedDiv\n   * @type String\n   * @access private\n   */\n  this.qualifiedDiv = null;\n\n  /**\n   * @name Tax1099DIV#totCapGain\n   * @type String\n   * @access private\n   */\n  this.totCapGain = null;\n\n  /**\n   * @name Tax1099DIV#p28Gain\n   * @type String\n   * @access private\n   */\n  this.p28Gain = null;\n\n  /**\n   * @name Tax1099DIV#unrecSec1250\n   * @type String\n   * @access private\n   */\n  this.unrecSec1250 = null;\n\n  /**\n   * @name Tax1099DIV#sec1202\n   * @type String\n   * @access private\n   */\n  this.sec1202 = null;\n\n  /**\n   * @name Tax1099DIV#nonTaxDist\n   * @type String\n   * @access private\n   */\n  this.nonTaxDist = null;\n\n  /**\n   * @name Tax1099DIV#fedTaxWh\n   * @type String\n   * @access private\n   */\n  this.fedTaxWh = null;\n\n  /**\n   * @name Tax1099DIV#investExp\n   * @type String\n   * @access private\n   */\n  this.investExp = null;\n\n  /**\n   * @name Tax1099DIV#forTaxPd\n   * @type String\n   * @access private\n   */\n  this.forTaxPd = null;\n\n  /**\n   * @name Tax1099DIV#cashLiq\n   * @type String\n   * @access private\n   */\n  this.cashLiq = null;\n\n  /**\n   * @name Tax1099DIV#nonCashLiq\n   * @type String\n   * @access private\n   */\n  this.nonCashLiq = null;\n\n  /**\n   * @name Tax1099DIV#payerAddress\n   * @type PayerAddress\n   * @access private\n   */\n  this.payerAddress = null;\n\n  /**\n   * @name Tax1099DIV#payerId\n   * @type String\n   * @access private\n   */\n  this.payerId = null;\n\n  /**\n   * @name Tax1099DIV#recAddress\n   * @type RecAddress\n   * @access private\n   */\n  this.recAddress = null;\n\n  /**\n   * @name Tax1099DIV#recId\n   * @type String\n   * @access private\n   */\n  this.recId = null;\n\n  /**\n   * @name Tax1099DIV#recAcct\n   * @type String\n   * @access private\n   */\n  this.recAcct = null;\n}\n\n\n\nAggregate.add(\"TAX1099DIV_V100\", Tax1099DIV);\n\n\nTax1099DIV.prototype.getSrvrtId = function() {\n  return this.srvrtId;\n};\nElement.add(Tax1099DIV, {name: \"SRVRTID\",required: false , order: 0, attributeType: String, readMethod: \"getSrvrtId\", writeMethod: \"setSrvrtId\"});\n\n\nTax1099DIV.prototype.setSrvrtId = function(/*String*/ srvrtId) {\n  this.srvrtId = srvrtId;\n};\n\n\nTax1099DIV.prototype.getTaxYear = function() {\n  return this.taxYear;\n};\nElement.add(Tax1099DIV, {name: \"TAXYEAR\", required: false, order: 1, attributeType: String, readMethod: \"getTaxYear\", writeMethod: \"setTaxYear\"});\n\n\nTax1099DIV.prototype.setTaxYear = function(/*String*/ taxYear) {\n  this.taxYear = taxYear;\n};\n\n\n/**\n * @return {String} the ordDiv\n */\nTax1099DIV.prototype.getOrdDiv = function() {\n  return this.ordDiv;\n};\nElement.add(Tax1099DIV, {name: \"ORDDIV\", required: false, order: 2, attributeType: String, readMethod: \"getOrdDiv\", writeMethod: \"setOrdDiv\"});\n\n\n/**\n * @param {String} ordDiv the ordDiv to set\n */\nTax1099DIV.prototype.setOrdDiv = function(ordDiv) {\n  this.ordDiv = ordDiv;\n};\n\n\n/**\n * @return {String} the qualifiedDiv\n */\nTax1099DIV.prototype.getQualifiedDiv = function() {\n  return this.qualifiedDiv;\n};\nElement.add(Tax1099DIV, {name: \"QUALIFIEDDIV\", required: false, order: 3, attributeType: String, readMethod: \"getQualifiedDiv\", writeMethod: \"setQualifiedDiv\"});\n\n\n/**\n * @param {String} qualifiedDiv the qualifiedDiv to set\n */\nTax1099DIV.prototype.setQualifiedDiv = function(qualifiedDiv) {\n  this.qualifiedDiv = qualifiedDiv;\n};\n\n\n/**\n * @return {String} the totCapGain\n */\nTax1099DIV.prototype.getTotCapGain = function() {\n  return this.totCapGain;\n};\nElement.add(Tax1099DIV, {name: \"TOTCAPGAIN\", required: false, order: 4, attributeType: String, readMethod: \"getTotCapGain\", writeMethod: \"setTotCapGain\"});\n\n\n/**\n * @param {String} totCapGain the totCapGain to set\n */\nTax1099DIV.prototype.setTotCapGain = function(totCapGain) {\n  this.totCapGain = totCapGain;\n};\n\n\n/**\n * @return {String} the p28Gain\n */\nTax1099DIV.prototype.getP28Gain = function() {\n  return this.p28Gain;\n};\nElement.add(Tax1099DIV, {name: \"P28GAIN\", required: false, order: 5, attributeType: String, readMethod: \"getP28Gain\", writeMethod: \"setP28Gain\"});\n\n\n/**\n * @param {String} p28Gain the p28Gain to set\n */\nTax1099DIV.prototype.setP28Gain = function(p28Gain) {\n  this.p28Gain = p28Gain;\n};\n\n\n/**\n * @return {String} the unrecSec1250\n */\nTax1099DIV.prototype.getUnrecSec1250 = function() {\n  return this.unrecSec1250;\n};\nElement.add(Tax1099DIV, {name: \"UNRECSEC1250\", required: false, order: 6, attributeType: String, readMethod: \"getUnrecSec1250\", writeMethod: \"setUnrecSec1250\"});\n\n\n/**\n * @param {String} unrecSec1250 the unrecSec1250 to set\n */\nTax1099DIV.prototype.setUnrecSec1250 = function(unrecSec1250) {\n  this.unrecSec1250 = unrecSec1250;\n};\n\n\n/**\n * @return {String} the sec1202\n */\nTax1099DIV.prototype.getSec1202 = function() {\n  return this.sec1202;\n};\nElement.add(Tax1099DIV, {name: \"SEC1202\", required: false, order: 7, attributeType: String, readMethod: \"getSec1202\", writeMethod: \"setSec1202\"});\n\n\n/**\n * @param {String} sec1202 the sec1202 to set\n */\nTax1099DIV.prototype.setSec1202 = function(sec1202) {\n  this.sec1202 = sec1202;\n};\n\n\n/**\n * @return {String} the nonTaxDist\n */\nTax1099DIV.prototype.getNonTaxDist = function() {\n  return this.nonTaxDist;\n};\nElement.add(Tax1099DIV, {name: \"NONTAXDIST\", required: false, order: 8, attributeType: String, readMethod: \"getNonTaxDist\", writeMethod: \"setNonTaxDist\"});\n\n\n/**\n * @param {String} nonTaxDist the nonTaxDist to set\n */\nTax1099DIV.prototype.setNonTaxDist = function(nonTaxDist) {\n  this.nonTaxDist = nonTaxDist;\n};\n\n\n/**\n * @return {String} the fedTaxWh\n */\nTax1099DIV.prototype.getFedTaxWh = function() {\n  return this.fedTaxWh;\n};\nElement.add(Tax1099DIV, {name: \"FEDTAXWH\", required: false, order: 9, attributeType: String, readMethod: \"getFedTaxWh\", writeMethod: \"setFedTaxWh\"});\n\n\n/**\n * @param {String} fedTaxWh the fedTaxWh to set\n */\nTax1099DIV.prototype.setFedTaxWh = function(fedTaxWh) {\n  this.fedTaxWh = fedTaxWh;\n};\n\n\n/**\n * @return {String} the investExp\n */\nTax1099DIV.prototype.getInvestExp = function() {\n  return this.investExp;\n};\nElement.add(Tax1099DIV, {name: \"INVESTEXP\", required: false, order: 10, attributeType: String, readMethod: \"getInvestExp\", writeMethod: \"setInvestExp\"});\n\n\n/**\n * @param {String} investExp the investExp to set\n */\nTax1099DIV.prototype.setInvestExp = function(investExp) {\n  this.investExp = investExp;\n};\n\n\n/**\n * @return {String} the forTaxPd\n */\nTax1099DIV.prototype.getForTaxPd = function() {\n  return this.forTaxPd;\n};\nElement.add(Tax1099DIV, {name: \"FORTAXPD\", required: false, order: 11, attributeType: String, readMethod: \"getForTaxPd\", writeMethod: \"setForTaxPd\"});\n\n\n/**\n * @param {String} forTaxPd the forTaxPd to set\n */\nTax1099DIV.prototype.setForTaxPd = function(forTaxPd) {\n  this.forTaxPd = forTaxPd;\n};\n\n\n/**\n * @return {String} the cashLiq\n */\nTax1099DIV.prototype.getCashLiq = function() {\n  return this.cashLiq;\n};\nElement.add(Tax1099DIV, {name: \"CASHLIQ\", required: false, order: 12, attributeType: String, readMethod: \"getCashLiq\", writeMethod: \"setCashLiq\"});\n\n\n/**\n * @param {String} cashLiq the cashLiq to set\n */\nTax1099DIV.prototype.setCashLiq = function(cashLiq) {\n  this.cashLiq = cashLiq;\n};\n\n\n/**\n * @return {String} the nonCashLiq\n */\nTax1099DIV.prototype.getNonCashLiq = function() {\n  return this.nonCashLiq;\n};\nElement.add(Tax1099DIV, {name: \"NONCASHLIQ\", required: false, order: 13, attributeType: String, readMethod: \"getNonCashLiq\", writeMethod: \"setNonCashLiq\"});\n\n\n/**\n * @param {String} nonCashLiq the nonCashLiq to set\n */\nTax1099DIV.prototype.setNonCashLiq = function(nonCashLiq) {\n  this.nonCashLiq = nonCashLiq;\n};\n\n\n/**\n * @return {PayerAddress} the payerAddress\n */\nTax1099DIV.prototype.getPayerAddress = function() {\n  return this.payerAddress;\n};\nChildAggregate.add(Tax1099DIV, {required:true, order: 14, attributeType: PayerAddress, readMethod: \"getPayerAddress\", writeMethod: \"setPayerAddress\"});\n\n\n/**\n * @param {PayerAddress} payerAddress the payerAddress to set\n */\nTax1099DIV.prototype.setPayerAddress = function(payerAddress) {\n  this.payerAddress = payerAddress;\n};\n\n\n/**\n * @return {String} the payerId\n */\nTax1099DIV.prototype.getPayerId = function() {\n  return this.payerId;\n};\nElement.add(Tax1099DIV, {name: \"PAYERID\", required: true, order: 15, attributeType: String, readMethod: \"getPayerId\", writeMethod: \"setPayerId\"});\n\n\n/**\n * @param {String} payerId the payerId to set\n */\nTax1099DIV.prototype.setPayerId = function(payerId) {\n  this.payerId = payerId;\n};\n\n\n/**\n * @return {RecAddress} the recAddress\n */\nTax1099DIV.prototype.getRecAddress = function() {\n  return this.recAddress;\n};\nChildAggregate.add(Tax1099DIV, {required:true, order: 16, attributeType: RecAddress, readMethod: \"getRecAddress\", writeMethod: \"setRecAddress\"});\n\n\n/**\n * @param {RecAddress} recAddress the recAddress to set\n */\nTax1099DIV.prototype.setRecAddress = function(recAddress) {\n  this.recAddress = recAddress;\n};\n\n\n/**\n * @return {String} the recId\n */\nTax1099DIV.prototype.getRecId = function() {\n  return this.recId;\n};\nElement.add(Tax1099DIV, {name: \"RECID\", required: true, order: 17, attributeType: String, readMethod: \"getRecId\", writeMethod: \"setRecId\"});\n\n\n/**\n * @param {String} recId the recId to set\n */\nTax1099DIV.prototype.setRecId = function(recId) {\n  this.recId = recId;\n};\n\n\n/**\n * @return {String} the recAcct\n */\nTax1099DIV.prototype.getRecAcct = function() {\n  return this.recAcct;\n};\nElement.add(Tax1099DIV, {name: \"RECACCT\", required: true, order: 18, attributeType: String, readMethod: \"getRecAcct\", writeMethod: \"setRecAcct\"});\n\n\n/**\n * @param {String} recAcct the recAcct to set\n */\nTax1099DIV.prototype.setRecAcct = function(recAcct) {\n  this.recAcct = recAcct;\n};\n\n\n\n\nmodule.exports = Tax1099DIV;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\"use strict\";\n\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar Element = require(\"../../../meta/Element\");\nvar PayerAddress = require(\"./PayerAddress\");\nvar RecAddress = require(\"./RecAddress\");\n\n/**\n * @class\n */\nfunction Tax1099INT () {\n\n  /**\n   * @name Tax1099INT#srvrtId\n   * @type String\n   * @access private\n   */\n  this.srvrtId = null;\n\n  /**\n   * @name Tax1099INT#taxYear\n   * @type String\n   * @access private\n   */\n  this.taxYear = null;\n\n  /**\n   * @name Tax1099INT#intIncome\n   * @type String\n   * @access private\n   */\n  this.intIncome = null;\n\n  /**\n   * @name Tax1099INT#erlWithPen\n   * @type String\n   * @access private\n   */\n  this.erlWithPen = null;\n\n  /**\n   * @name Tax1099INT#intUsbndtrs\n   * @type String\n   * @access private\n   */\n  this.intUsbndtrs = null;\n\n  /**\n   * @name Tax1099INT#fedTaxWh\n   * @type String\n   * @access private\n   */\n  this.fedTaxWh = null;\n\n  /**\n   * @name Tax1099INT#investExp\n   * @type String\n   * @access private\n   */\n  this.investExp = null;\n\n  /**\n   * @name Tax1099INT#forTaxPd\n   * @type String\n   * @access private\n   */\n  this.forTaxPd = null;\n\n  /**\n   * @name Tax1099INT#payerAddress\n   * @type PayerAddress\n   * @access private\n   */\n  this.payerAddress = null;\n\n  /**\n   * @name Tax1099INT#payerId\n   * @type String\n   * @access private\n   */\n  this.payerId = null;\n\n  /**\n   * @name Tax1099INT#recAddress\n   * @type RecAddress\n   * @access private\n   */\n  this.recAddress = null;\n\n  /**\n   * @name Tax1099INT#recId\n   * @type String\n   * @access private\n   */\n  this.recId = null;\n\n  /**\n   * @name Tax1099INT#recAcct\n   * @type String\n   * @access private\n   */\n  this.recAcct = null;\n\n  /**\n   * @name Tax1099INT#taxExemptInt\n   * @type String\n   * @access private\n   */\n  this.taxExemptInt = null;\n\n  /**\n   * @name Tax1099INT#specifiedPabInt\n   * @type String\n   * @access private\n   */\n  this.specifiedPabInt = null;\n}\n\n\n\nAggregate.add(\"TAX1099INT_V100\", Tax1099INT);\n\n\nTax1099INT.prototype.getSrvrtId = function() {\n  return this.srvrtId;\n};\nElement.add(Tax1099INT, {name: \"SRVRTID\",required: true , order: 0, attributeType: String, readMethod: \"getSrvrtId\", writeMethod: \"setSrvrtId\"});\n\n\nTax1099INT.prototype.setSrvrtId = function(/*String*/ srvrtId) {\n  this.srvrtId = srvrtId;\n};\n\n\nTax1099INT.prototype.getTaxYear = function() {\n  return this.taxYear;\n};\nElement.add(Tax1099INT, {name: \"TAXYEAR\", required: true, order: 1, attributeType: String, readMethod: \"getTaxYear\", writeMethod: \"setTaxYear\"});\n\n\nTax1099INT.prototype.setTaxYear = function(/*String*/ taxYear) {\n  this.taxYear = taxYear;\n};\n\n\n/**\n * @return {String} the intIncome\n */\nTax1099INT.prototype.getIntIncome = function() {\n  return this.intIncome;\n};\nElement.add(Tax1099INT, {name: \"INTINCOME\",required: false , order: 2, attributeType: String, readMethod: \"getIntIncome\", writeMethod: \"setIntIncome\"});\n\n\n/**\n * @param {String} intIncome the intIncome to set\n */\nTax1099INT.prototype.setIntIncome = function(intIncome) {\n  this.intIncome = intIncome;\n};\n\n\n/**\n * @return {String} the erlWithPen\n */\nTax1099INT.prototype.getErlWithPen = function() {\n  return this.erlWithPen;\n};\nElement.add(Tax1099INT, {name: \"ERLWITHPEN\",required: false , order: 3, attributeType: String, readMethod: \"getErlWithPen\", writeMethod: \"setErlWithPen\"});\n\n\n/**\n * @param {String} erlWithPen the erlWithPen to set\n */\nTax1099INT.prototype.setErlWithPen = function(erlWithPen) {\n  this.erlWithPen = erlWithPen;\n};\n\n\n/**\n * @return {String} the intUsbndtrs\n */\nTax1099INT.prototype.getIntUsbndtrs = function() {\n  return this.intUsbndtrs;\n};\nElement.add(Tax1099INT, {name: \"INTUSBNDTRS\",required: false , order: 4, attributeType: String, readMethod: \"getIntUsbndtrs\", writeMethod: \"setIntUsbndtrs\"});\n\n\n/**\n * @param {String} intUsbndtrs the intUsbndtrs to set\n */\nTax1099INT.prototype.setIntUsbndtrs = function(intUsbndtrs) {\n  this.intUsbndtrs = intUsbndtrs;\n};\n\n\n/**\n * @return {String} the fedTaxWh\n */\nTax1099INT.prototype.getFedTaxWh = function() {\n  return this.fedTaxWh;\n};\nElement.add(Tax1099INT, {name: \"FEDTAXWH\", required: false, order: 5, attributeType: String, readMethod: \"getFedTaxWh\", writeMethod: \"setFedTaxWh\"});\n\n\n/**\n * @param {String} fedTaxWh the fedTaxWh to set\n */\nTax1099INT.prototype.setFedTaxWh = function(fedTaxWh) {\n  this.fedTaxWh = fedTaxWh;\n};\n\n\n/**\n * @return {String} the investExp\n */\nTax1099INT.prototype.getInvestExp = function() {\n  return this.investExp;\n};\nElement.add(Tax1099INT, {name: \"INVESTEXP\", required: false, order: 6, attributeType: String, readMethod: \"getInvestExp\", writeMethod: \"setInvestExp\"});\n\n\n/**\n * @param {String} investExp the investExp to set\n */\nTax1099INT.prototype.setInvestExp = function(investExp) {\n  this.investExp = investExp;\n};\n\n\n/**\n * @return {String} the forTaxPd\n */\nTax1099INT.prototype.getForTaxPd = function() {\n  return this.forTaxPd;\n};\nElement.add(Tax1099INT, {name: \"FORTAXPD\", required: false, order: 7, attributeType: String, readMethod: \"getForTaxPd\", writeMethod: \"setForTaxPd\"});\n\n\n/**\n * @param {String} forTaxPd the forTaxPd to set\n */\nTax1099INT.prototype.setForTaxPd = function(forTaxPd) {\n  this.forTaxPd = forTaxPd;\n};\n\n\n/**\n * @return {PayerAddress} the payerAddress\n */\nTax1099INT.prototype.getPayerAddress = function() {\n  return this.payerAddress;\n};\nChildAggregate.add(Tax1099INT, {required:true, order: 8, attributeType: PayerAddress, readMethod: \"getPayerAddress\", writeMethod: \"setPayerAddress\"});\n\n\n/**\n * @param {PayerAddress} payerAddress the payerAddress to set\n */\nTax1099INT.prototype.setPayerAddress = function(payerAddress) {\n  this.payerAddress = payerAddress;\n};\n\n\n/**\n * @return {String} the payerId\n */\nTax1099INT.prototype.getPayerId = function() {\n  return this.payerId;\n};\nElement.add(Tax1099INT, {name: \"PAYERID\", required: true, order: 9, attributeType: String, readMethod: \"getPayerId\", writeMethod: \"setPayerId\"});\n\n\n/**\n * @param {String} payerId the payerId to set\n */\nTax1099INT.prototype.setPayerId = function(payerId) {\n  this.payerId = payerId;\n};\n\n\n/**\n * @return {RecAddress} the recAddress\n */\nTax1099INT.prototype.getRecAddress = function() {\n  return this.recAddress;\n};\nChildAggregate.add(Tax1099INT, {required:true, order: 10, attributeType: RecAddress, readMethod: \"getRecAddress\", writeMethod: \"setRecAddress\"});\n\n\n/**\n * @param {RecAddress} recAddress the recAddress to set\n */\nTax1099INT.prototype.setRecAddress = function(recAddress) {\n  this.recAddress = recAddress;\n};\n\n\n/**\n * @return {String} the recId\n */\nTax1099INT.prototype.getRecId = function() {\n  return this.recId;\n};\nElement.add(Tax1099INT, {name: \"RECID\", required: true, order: 11, attributeType: String, readMethod: \"getRecId\", writeMethod: \"setRecId\"});\n\n\n/**\n * @param {String} recId the recId to set\n */\nTax1099INT.prototype.setRecId = function(recId) {\n  this.recId = recId;\n};\n\n\n/**\n * @return {String} the recAcct\n */\nTax1099INT.prototype.getRecAcct = function() {\n  return this.recAcct;\n};\nElement.add(Tax1099INT, {name: \"RECACCT\", required: true, order: 12, attributeType: String, readMethod: \"getRecAcct\", writeMethod: \"setRecAcct\"});\n\n\n/**\n * @param {String} recAcct the recAcct to set\n */\nTax1099INT.prototype.setRecAcct = function(recAcct) {\n  this.recAcct = recAcct;\n};\n\n\n/**\n * @return {String} the taxExemptInt\n */\nTax1099INT.prototype.getTaxExemptInt = function() {\n  return this.taxExemptInt;\n};\nElement.add(Tax1099INT, {name: \"TAXEXEMPTINT\", required: false, order: 13, attributeType: String, readMethod: \"getTaxExemptInt\", writeMethod: \"setTaxExemptInt\"});\n\n\n/**\n * @param {String} taxExemptInt the taxExemptInt to set\n */\nTax1099INT.prototype.setTaxExemptInt = function(taxExemptInt) {\n  this.taxExemptInt = taxExemptInt;\n};\n\n\n/**\n * @return {String} the specifiedPabInt\n */\nTax1099INT.prototype.getSpecifiedPabInt = function() {\n  return this.specifiedPabInt;\n};\nElement.add(Tax1099INT, {name: \"SPECIFIEDPABINT\", required: false, order: 14, attributeType: String, readMethod: \"getSpecifiedPabInt\", writeMethod: \"setSpecifiedPabInt\"});\n\n\n/**\n * @param {String} specifiedPabInt the specifiedPabInt to set\n */\nTax1099INT.prototype.setSpecifiedPabInt = function(specifiedPabInt) {\n  this.specifiedPabInt = specifiedPabInt;\n};\n\n\n\n\nmodule.exports = Tax1099INT;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\"use strict\";\n\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar Element = require(\"../../../meta/Element\");\nvar PayerAddress = require(\"./PayerAddress\");\nvar RecAddress = require(\"./RecAddress\");\n\n/**\n * @class\n */\nfunction Tax1099MISC () {\n\n  /**\n   * @name Tax1099MISC#srvrtId\n   * @type String\n   * @access private\n   */\n  this.srvrtId = null;\n\n  /**\n   * @name Tax1099MISC#taxYear\n   * @type String\n   * @access private\n   */\n  this.taxYear = null;\n\n  /**\n   * @name Tax1099MISC#royalties\n   * @type String\n   * @access private\n   */\n  this.royalties = null;\n\n  /**\n   * @name Tax1099MISC#otherIncome\n   * @type String\n   * @access private\n   */\n  this.otherIncome = null;\n\n  /**\n   * @name Tax1099MISC#fedTaxWh\n   * @type String\n   * @access private\n   */\n  this.fedTaxWh = null;\n\n  /**\n   * @name Tax1099MISC#subPmts\n   * @type String\n   * @access private\n   */\n  this.subPmts = null;\n\n  /**\n   * @name Tax1099MISC#payerAddress\n   * @type PayerAddress\n   * @access private\n   */\n  this.payerAddress = null;\n\n  /**\n   * @name Tax1099MISC#payerId\n   * @type String\n   * @access private\n   */\n  this.payerId = null;\n\n  /**\n   * @name Tax1099MISC#recAddress\n   * @type RecAddress\n   * @access private\n   */\n  this.recAddress = null;\n\n  /**\n   * @name Tax1099MISC#recId\n   * @type String\n   * @access private\n   */\n  this.recId = null;\n\n  /**\n   * @name Tax1099MISC#recAcct\n   * @type String\n   * @access private\n   */\n  this.recAcct = null;\n}\n\n\n\nAggregate.add(\"TAX1099MISC_V100\", Tax1099MISC);\n\n\nTax1099MISC.prototype.getSrvrtId = function() {\n  return this.srvrtId;\n};\nElement.add(Tax1099MISC, {name: \"SRVRTID\",required: true , order: 0, attributeType: String, readMethod: \"getSrvrtId\", writeMethod: \"setSrvrtId\"});\n\n\nTax1099MISC.prototype.setSrvrtId = function(/*String*/ srvrtId) {\n  this.srvrtId = srvrtId;\n};\n\n\nTax1099MISC.prototype.getTaxYear = function() {\n  return this.taxYear;\n};\nElement.add(Tax1099MISC, {name: \"TAXYEAR\", required: true, order: 1, attributeType: String, readMethod: \"getTaxYear\", writeMethod: \"setTaxYear\"});\n\n\nTax1099MISC.prototype.setTaxYear = function(/*String*/ taxYear) {\n  this.taxYear = taxYear;\n};\n\n\n/**\n * @return {String} the royalties\n */\nTax1099MISC.prototype.getRoyalties = function() {\n  return this.royalties;\n};\nElement.add(Tax1099MISC, {name: \"ROYALTIES\",required: false , order: 2, attributeType: String, readMethod: \"getRoyalties\", writeMethod: \"setRoyalties\"});\n\n\n/**\n * @param {String} royalties the royalties to set\n */\nTax1099MISC.prototype.setRoyalties = function(royalties) {\n  this.royalties = royalties;\n};\n\n\n/**\n * @return {String} the otherIncome\n */\nTax1099MISC.prototype.getOtherIncome = function() {\n  return this.otherIncome;\n};\nElement.add(Tax1099MISC, {name: \"OTHERINCOME\",required: false , order: 3, attributeType: String, readMethod: \"getOtherIncome\", writeMethod: \"setOtherIncome\"});\n\n\n/**\n * @param {String} otherIncome the otherIncome to set\n */\nTax1099MISC.prototype.setOtherIncome = function(otherIncome) {\n  this.otherIncome = otherIncome;\n};\n\n\n/**\n * @return {String} the fedTaxWh\n */\nTax1099MISC.prototype.getFedTaxWh = function() {\n  return this.fedTaxWh;\n};\nElement.add(Tax1099MISC, {name: \"FEDTAXWH\",required: false , order: 4, attributeType: String, readMethod: \"getFedTaxWh\", writeMethod: \"setFedTaxWh\"});\n\n\n/**\n * @param {String} fedTaxWh the fedTaxWh to set\n */\nTax1099MISC.prototype.setFedTaxWh = function(fedTaxWh) {\n  this.fedTaxWh = fedTaxWh;\n};\n\n\n/**\n * @return {String} the subPmts\n */\nTax1099MISC.prototype.getSubPmts = function() {\n  return this.subPmts;\n};\nElement.add(Tax1099MISC, {name: \"SUBPMTS\",required: false , order: 5, attributeType: String, readMethod: \"getSubPmts\", writeMethod: \"setSubPmts\"});\n\n\n/**\n * @param {String} subPmts the subPmts to set\n */\nTax1099MISC.prototype.setSubPmts = function(subPmts) {\n  this.subPmts = subPmts;\n};\n\n\n/**\n * @return {PayerAddress} the payerAddress\n */\nTax1099MISC.prototype.getPayerAddress = function() {\n  return this.payerAddress;\n};\nChildAggregate.add(Tax1099MISC, {required:true, order: 6, attributeType: PayerAddress, readMethod: \"getPayerAddress\", writeMethod: \"setPayerAddress\"});\n\n\n/**\n * @param {PayerAddress} payerAddress the payerAddress to set\n */\nTax1099MISC.prototype.setPayerAddress = function(payerAddress) {\n  this.payerAddress = payerAddress;\n};\n\n\n/**\n * @return {String} the payerId\n */\nTax1099MISC.prototype.getPayerId = function() {\n  return this.payerId;\n};\nElement.add(Tax1099MISC, {name: \"PAYERID\", required: true, order: 7, attributeType: String, readMethod: \"getPayerId\", writeMethod: \"setPayerId\"});\n\n\n/**\n * @param {String} payerId the payerId to set\n */\nTax1099MISC.prototype.setPayerId = function(payerId) {\n  this.payerId = payerId;\n};\n\n\n/**\n * @return {RecAddress} the recAddress\n */\nTax1099MISC.prototype.getRecAddress = function() {\n  return this.recAddress;\n};\nChildAggregate.add(Tax1099MISC, {required:true, order: 8, attributeType: RecAddress, readMethod: \"getRecAddress\", writeMethod: \"setRecAddress\"});\n\n\n/**\n * @param {RecAddress} recAddress the recAddress to set\n */\nTax1099MISC.prototype.setRecAddress = function(recAddress) {\n  this.recAddress = recAddress;\n};\n\n\n/**\n * @return {String} the recId\n */\nTax1099MISC.prototype.getRecId = function() {\n  return this.recId;\n};\nElement.add(Tax1099MISC, {name: \"RECID\", required: true, order: 9, attributeType: String, readMethod: \"getRecId\", writeMethod: \"setRecId\"});\n\n\n/**\n * @param {String} recId the recId to set\n */\nTax1099MISC.prototype.setRecId = function(recId) {\n  this.recId = recId;\n};\n\n\n/**\n * @return {String} the recAcct\n */\nTax1099MISC.prototype.getRecAcct = function() {\n  return this.recAcct;\n};\nElement.add(Tax1099MISC, {name: \"RECACCT\", required: true, order: 10, attributeType: String, readMethod: \"getRecAcct\", writeMethod: \"setRecAcct\"});\n\n\n/**\n * @param {String} recAcct the recAcct to set\n */\nTax1099MISC.prototype.setRecAcct = function(recAcct) {\n  this.recAcct = recAcct;\n};\n\n\n\n\nmodule.exports = Tax1099MISC;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\"use strict\";\n\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar Element = require(\"../../../meta/Element\");\nvar PayerAddress = require(\"./PayerAddress\");\nvar RecAddress = require(\"./RecAddress\");\n\n/**\n * @class\n */\nfunction Tax1099OID () {\n\n  /**\n   * @name Tax1099OID#srvrtId\n   * @type String\n   * @access private\n   */\n  this.srvrtId = null;\n\n  /**\n   * @name Tax1099OID#taxYear\n   * @type String\n   * @access private\n   */\n  this.taxYear = null;\n\n  /**\n   * @name Tax1099OID#originalDisc\n   * @type String\n   * @access private\n   */\n  this.originalDisc = null;\n\n  /**\n   * @name Tax1099OID#otherPerInt\n   * @type String\n   * @access private\n   */\n  this.otherPerInt = null;\n\n  /**\n   * @name Tax1099OID#erlWithPen\n   * @type String\n   * @access private\n   */\n  this.erlWithPen = null;\n\n  /**\n   * @name Tax1099OID#fedTaxWh\n   * @type String\n   * @access private\n   */\n  this.fedTaxWh = null;\n\n  /**\n   * @name Tax1099OID#desc\n   * @type String\n   * @access private\n   */\n  this.desc = null;\n\n  /**\n   * @name Tax1099OID#oidOnUstres\n   * @type String\n   * @access private\n   */\n  this.oidOnUstres = null;\n\n  /**\n   * @name Tax1099OID#investExp\n   * @type String\n   * @access private\n   */\n  this.investExp = null;\n\n  /**\n   * @name Tax1099OID#payerAddress\n   * @type PayerAddress\n   * @access private\n   */\n  this.payerAddress = null;\n\n  /**\n   * @name Tax1099OID#payerId\n   * @type String\n   * @access private\n   */\n  this.payerId = null;\n\n  /**\n   * @name Tax1099OID#recAddress\n   * @type RecAddress\n   * @access private\n   */\n  this.recAddress = null;\n\n  /**\n   * @name Tax1099OID#recId\n   * @type String\n   * @access private\n   */\n  this.recId = null;\n\n  /**\n   * @name Tax1099OID#recAcct\n   * @type String\n   * @access private\n   */\n  this.recAcct = null;\n}\n\n\n\nAggregate.add(\"TAX1099OID_V100\", Tax1099OID);\n\n\nTax1099OID.prototype.getSrvrtId = function() {\n  return this.srvrtId;\n};\nElement.add(Tax1099OID, {name: \"SRVRTID\",required: true , order: 0, attributeType: String, readMethod: \"getSrvrtId\", writeMethod: \"setSrvrtId\"});\n\n\nTax1099OID.prototype.setSrvrtId = function(/*String*/ srvrtId) {\n  this.srvrtId = srvrtId;\n};\n\n\nTax1099OID.prototype.getTaxYear = function() {\n  return this.taxYear;\n};\nElement.add(Tax1099OID, {name: \"TAXYEAR\", required: true, order: 1, attributeType: String, readMethod: \"getTaxYear\", writeMethod: \"setTaxYear\"});\n\n\nTax1099OID.prototype.setTaxYear = function(/*String*/ taxYear) {\n  this.taxYear = taxYear;\n};\n\n\n/**\n * @return {String} the originalDisc\n */\nTax1099OID.prototype.getOriginalDisc = function() {\n  return this.originalDisc;\n};\nElement.add(Tax1099OID, {name: \"ORIGISDISC\", required: false, order: 2, attributeType: String, readMethod: \"getOriginalDisc\", writeMethod: \"setOriginalDisc\"});\n\n\n/**\n * @param {String} originalDisc the originalDisc to set\n */\nTax1099OID.prototype.setOriginalDisc = function(originalDisc) {\n  this.originalDisc = originalDisc;\n};\n\n\n/**\n * @return {String} the otherPerInt\n */\nTax1099OID.prototype.getOtherPerInt = function() {\n  return this.otherPerInt;\n};\nElement.add(Tax1099OID, {name: \"OTHERPERINT\", required: false, order: 3, attributeType: String, readMethod: \"getOtherPerInt\", writeMethod: \"setOtherPerInt\"});\n\n\n/**\n * @param {String} otherPerInt the otherPerInt to set\n */\nTax1099OID.prototype.setOtherPerInt = function(otherPerInt) {\n  this.otherPerInt = otherPerInt;\n};\n\n\n/**\n * @return {String} the erlWithPen\n */\nTax1099OID.prototype.getErlWithPen = function() {\n  return this.erlWithPen;\n};\nElement.add(Tax1099OID, {name: \"ERLWITHPEN\", required: false, order: 4, attributeType: String, readMethod: \"getErlWithPen\", writeMethod: \"setErlWithPen\"});\n\n\n/**\n * @param {String} erlWithPen the erlWithPen to set\n */\nTax1099OID.prototype.setErlWithPen = function(erlWithPen) {\n  this.erlWithPen = erlWithPen;\n};\n\n\n/**\n * @return {String} the fedTaxWh\n */\nTax1099OID.prototype.getFedTaxWh = function() {\n  return this.fedTaxWh;\n};\nElement.add(Tax1099OID, {name: \"FEDTAXWH\", required: false, order: 5, attributeType: String, readMethod: \"getFedTaxWh\", writeMethod: \"setFedTaxWh\"});\n\n\n/**\n * @param {String} fedTaxWh the fedTaxWh to set\n */\nTax1099OID.prototype.setFedTaxWh = function(fedTaxWh) {\n  this.fedTaxWh = fedTaxWh;\n};\n\n\n/**\n * @return {String} the desc\n */\nTax1099OID.prototype.getDesc = function() {\n  return this.desc;\n};\nElement.add(Tax1099OID, {name: \"DESCRIPTION\", required: true, order: 6, attributeType: String, readMethod: \"getDesc\", writeMethod: \"setDesc\"});\n\n\n/**\n * @param {String} desc the desc to set\n */\nTax1099OID.prototype.setDesc = function(desc) {\n  this.desc = desc;\n};\n\n\n/**\n * @return {String} the oidOnUstres\n */\nTax1099OID.prototype.getOidOnUstres = function() {\n  return this.oidOnUstres;\n};\nElement.add(Tax1099OID, {name: \"OIDONUSTRES\", required: false, order: 7, attributeType: String, readMethod: \"getOidOnUstres\", writeMethod: \"setOidOnUstres\"});\n\n\n/**\n * @param {String} oidOnUstres the oidOnUstres to set\n */\nTax1099OID.prototype.setOidOnUstres = function(oidOnUstres) {\n  this.oidOnUstres = oidOnUstres;\n};\n\n\n/**\n * @return {String} the investExp\n */\nTax1099OID.prototype.getInvestExp = function() {\n  return this.investExp;\n};\nElement.add(Tax1099OID, {name: \"INVESTEXP\", required: false, order: 8, attributeType: String, readMethod: \"getInvestExp\", writeMethod: \"setInvestExp\"});\n\n\n/**\n * @param {String} investExp the investExp to set\n */\nTax1099OID.prototype.setInvestExp = function(investExp) {\n  this.investExp = investExp;\n};\n\n\n/**\n * @return {PayerAddress} the payerAddress\n */\nTax1099OID.prototype.getPayerAddress = function() {\n  return this.payerAddress;\n};\nChildAggregate.add(Tax1099OID, {required:true, order: 9, attributeType: PayerAddress, readMethod: \"getPayerAddress\", writeMethod: \"setPayerAddress\"});\n\n\n/**\n * @param {PayerAddress} payerAddress the payerAddress to set\n */\nTax1099OID.prototype.setPayerAddress = function(payerAddress) {\n  this.payerAddress = payerAddress;\n};\n\n\n/**\n * @return {String} the payerId\n */\nTax1099OID.prototype.getPayerId = function() {\n  return this.payerId;\n};\nElement.add(Tax1099OID, {name: \"PAYERID\", required: true, order: 10, attributeType: String, readMethod: \"getPayerId\", writeMethod: \"setPayerId\"});\n\n\n/**\n * @param {String} payerId the payerId to set\n */\nTax1099OID.prototype.setPayerId = function(payerId) {\n  this.payerId = payerId;\n};\n\n\n/**\n * @return {RecAddress} the recAddress\n */\nTax1099OID.prototype.getRecAddress = function() {\n  return this.recAddress;\n};\nChildAggregate.add(Tax1099OID, {required:true, order: 11, attributeType: RecAddress, readMethod: \"getRecAddress\", writeMethod: \"setRecAddress\"});\n\n\n/**\n * @param {RecAddress} recAddress the recAddress to set\n */\nTax1099OID.prototype.setRecAddress = function(recAddress) {\n  this.recAddress = recAddress;\n};\n\n\n/**\n * @return {String} the recId\n */\nTax1099OID.prototype.getRecId = function() {\n  return this.recId;\n};\nElement.add(Tax1099OID, {name: \"RECID\", required: true, order: 12, attributeType: String, readMethod: \"getRecId\", writeMethod: \"setRecId\"});\n\n\n/**\n * @param {String} recId the recId to set\n */\nTax1099OID.prototype.setRecId = function(recId) {\n  this.recId = recId;\n};\n\n\n/**\n * @return {String} the recAcct\n */\nTax1099OID.prototype.getRecAcct = function() {\n  return this.recAcct;\n};\nElement.add(Tax1099OID, {name: \"RECACCT\", required: true, order: 13, attributeType: String, readMethod: \"getRecAcct\", writeMethod: \"setRecAcct\"});\n\n\n/**\n * @param {String} recAcct the recAcct to set\n */\nTax1099OID.prototype.setRecAcct = function(recAcct) {\n  this.recAcct = recAcct;\n};\n\n\n\n\nmodule.exports = Tax1099OID;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\"use strict\";\n\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar Element = require(\"../../../meta/Element\");\nvar PayerAddress = require(\"./PayerAddress\");\nvar RecAddress = require(\"./RecAddress\");\n\n/**\n * @class\n */\nfunction Tax1099R () {\n\n  /**\n   * @name Tax1099R#srvrtId\n   * @type String\n   * @access private\n   */\n  this.srvrtId = null;\n\n  /**\n   * @name Tax1099R#taxYear\n   * @type String\n   * @access private\n   */\n  this.taxYear = null;\n\n  /**\n   * @name Tax1099R#grossDist\n   * @type String\n   * @access private\n   */\n  this.grossDist = null;\n\n  /**\n   * @name Tax1099R#taxAmt\n   * @type String\n   * @access private\n   */\n  this.taxAmt = null;\n\n  /**\n   * @name Tax1099R#taxAmtNd\n   * @type String\n   * @access private\n   */\n  this.taxAmtNd = null;\n\n  /**\n   * @name Tax1099R#capGain\n   * @type String\n   * @access private\n   */\n  this.capGain = null;\n\n  /**\n   * @name Tax1099R#fedTaxWh\n   * @type String\n   * @access private\n   */\n  this.fedTaxWh = null;\n\n  /**\n   * @name Tax1099R#empContins\n   * @type String\n   * @access private\n   */\n  this.empContins = null;\n\n  /**\n   * @name Tax1099R#netUnapEmp\n   * @type String\n   * @access private\n   */\n  this.netUnapEmp = null;\n\n  /**\n   * @name Tax1099R#distCode\n   * @type String\n   * @access private\n   */\n  this.distCode = null;\n\n  /**\n   * @name Tax1099R#iraSepSimp\n   * @type String\n   * @access private\n   */\n  this.iraSepSimp = null;\n\n  /**\n   * @name Tax1099R#annCtrctDist\n   * @type String\n   * @access private\n   */\n  this.annCtrctDist = null;\n\n  /**\n   * @name Tax1099R#totEmpCount\n   * @type String\n   * @access private\n   */\n  this.totEmpCount = null;\n\n  /**\n   * @name Tax1099R#payerAddress\n   * @type PayerAddress\n   * @access private\n   */\n  this.payerAddress = null;\n\n  /**\n   * @name Tax1099R#payerId\n   * @type String\n   * @access private\n   */\n  this.payerId = null;\n\n  /**\n   * @name Tax1099R#recAddress\n   * @type RecAddress\n   * @access private\n   */\n  this.recAddress = null;\n\n  /**\n   * @name Tax1099R#recId\n   * @type String\n   * @access private\n   */\n  this.recId = null;\n\n  /**\n   * @name Tax1099R#recAcct\n   * @type String\n   * @access private\n   */\n  this.recAcct = null;\n}\n\n\n\nAggregate.add(\"TAX1099R_V100\", Tax1099R);\n\n\nTax1099R.prototype.getSrvrtId = function() {\n  return this.srvrtId;\n};\nElement.add(Tax1099R, {name: \"SRVRTID\",required: true , order: 0, attributeType: String, readMethod: \"getSrvrtId\", writeMethod: \"setSrvrtId\"});\n\n\nTax1099R.prototype.setSrvrtId = function(/*String*/ srvrtId) {\n  this.srvrtId = srvrtId;\n};\n\n\nTax1099R.prototype.getTaxYear = function() {\n  return this.taxYear;\n};\nElement.add(Tax1099R, {name: \"TAXYEAR\", required: true, order: 1, attributeType: String, readMethod: \"getTaxYear\", writeMethod: \"setTaxYear\"});\n\n\nTax1099R.prototype.setTaxYear = function(/*String*/ taxYear) {\n  this.taxYear = taxYear;\n};\n\n\n/**\n * @return {String} the grossDist\n */\nTax1099R.prototype.getGrossDist = function() {\n  return this.grossDist;\n};\nElement.add(Tax1099R, {name: \"GROSSDIST\", required: true, order: 2, attributeType: String, readMethod: \"getGrossDist\", writeMethod: \"setGrossDist\"});\n\n\n/**\n * @param {String} grossDist the grossDist to set\n */\nTax1099R.prototype.setGrossDist = function(grossDist) {\n  this.grossDist = grossDist;\n};\n\n\n/**\n * @return {String} the taxAmt\n */\nTax1099R.prototype.getTaxAmt = function() {\n  return this.taxAmt;\n};\nElement.add(Tax1099R, {name: \"TAXAMT\", required: false, order: 3, attributeType: String, readMethod: \"getTaxAmt\", writeMethod: \"setTaxAmt\"});\n\n\n/**\n * @param {String} taxAmt the taxAmt to set\n */\nTax1099R.prototype.setTaxAmt = function(taxAmt) {\n  this.taxAmt = taxAmt;\n};\n\n\n/**\n * @return {String} the taxAmtNd\n */\nTax1099R.prototype.getTaxAmtNd = function() {\n  return this.taxAmtNd;\n};\nElement.add(Tax1099R, {name: \"TAXAMTND\", required: false, order: 4, attributeType: String, readMethod: \"getTaxAmtNd\", writeMethod: \"setTaxAmtNd\"});\n\n\n/**\n * @param {String} taxAmtNd the taxAmtNd to set\n */\nTax1099R.prototype.setTaxAmtNd = function(taxAmtNd) {\n  this.taxAmtNd = taxAmtNd;\n};\n\n\n/**\n * @return {String} the capGain\n */\nTax1099R.prototype.getCapGain = function() {\n  return this.capGain;\n};\nElement.add(Tax1099R, {name: \"CAPGAIN\", required: false, order: 5, attributeType: String, readMethod: \"getCapGain\", writeMethod: \"setCapGain\"});\n\n\n/**\n * @param {String} capGain the capGain to set\n */\nTax1099R.prototype.setCapGain = function(capGain) {\n  this.capGain = capGain;\n};\n\n\n/**\n * @return {String} the fedTaxWh\n */\nTax1099R.prototype.getFedTaxWh = function() {\n  return this.fedTaxWh;\n};\nElement.add(Tax1099R, {name: \"FEDTAXWH\", required: false, order: 6, attributeType: String, readMethod: \"getFedTaxWh\", writeMethod: \"setFedTaxWh\"});\n\n\n/**\n * @param {String} fedTaxWh the fedTaxWh to set\n */\nTax1099R.prototype.setFedTaxWh = function(fedTaxWh) {\n  this.fedTaxWh = fedTaxWh;\n};\n\n\n/**\n * @return {String} the empContins\n */\nTax1099R.prototype.getEmpContins = function() {\n  return this.empContins;\n};\nElement.add(Tax1099R, {name: \"EMPCONTINS\", required: false, order: 7, attributeType: String, readMethod: \"getEmpContins\", writeMethod: \"setEmpContins\"});\n\n\n/**\n * @param {String} empContins the empContins to set\n */\nTax1099R.prototype.setEmpContins = function(empContins) {\n  this.empContins = empContins;\n};\n\n\n/**\n * @return {String} the netUnapEmp\n */\nTax1099R.prototype.getNetUnapEmp = function() {\n  return this.netUnapEmp;\n};\nElement.add(Tax1099R, {name: \"NETUNAPEMP\", required: false, order: 8, attributeType: String, readMethod: \"getNetUnapEmp\", writeMethod: \"setNetUnapEmp\"});\n\n\n/**\n * @param {String} netUnapEmp the netUnapEmp to set\n */\nTax1099R.prototype.setNetUnapEmp = function(netUnapEmp) {\n  this.netUnapEmp = netUnapEmp;\n};\n\n\n/**\n * @return {String} the distCode\n */\nTax1099R.prototype.getDistCode = function() {\n  return this.distCode;\n};\nElement.add(Tax1099R, {name: \"DISTCODE\", required: true, order: 9, attributeType: String, readMethod: \"getDistCode\", writeMethod: \"setDistCode\"});\n\n\n/**\n * @param {String} distCode the distCode to set\n */\nTax1099R.prototype.setDistCode = function(distCode) {\n  this.distCode = distCode;\n};\n\n\n/**\n * @return {String} the iraSepSimp\n */\nTax1099R.prototype.getIraSepSimp = function() {\n  return this.iraSepSimp;\n};\nElement.add(Tax1099R, {name: \"IRASEPSIMP\", required: true, order: 10, attributeType: String, readMethod: \"getIraSepSimp\", writeMethod: \"setIraSepSimp\"});\n\n\n/**\n * @param {String} iraSepSimp the iraSepSimp to set\n */\nTax1099R.prototype.setIraSepSimp = function(iraSepSimp) {\n  this.iraSepSimp = iraSepSimp;\n};\n\n\n/**\n * @return {String} the annCtrctDist\n */\nTax1099R.prototype.getAnnCtrctDist = function() {\n  return this.annCtrctDist;\n};\nElement.add(Tax1099R, {name: \"ANNCTRCTDIST\", required: false, order: 11, attributeType: String, readMethod: \"getAnnCtrctDist\", writeMethod: \"setAnnCtrctDist\"});\n\n\n/**\n * @param {String} annCtrctDist the annCtrctDist to set\n */\nTax1099R.prototype.setAnnCtrctDist = function(annCtrctDist) {\n  this.annCtrctDist = annCtrctDist;\n};\n\n\n/**\n * @return {String} the totEmpCount\n */\nTax1099R.prototype.getTotEmpCount = function() {\n  return this.totEmpCount;\n};\nElement.add(Tax1099R, {name: \"TOTEMPCONT\", required: false, order: 12, attributeType: String, readMethod: \"getTotEmpCount\", writeMethod: \"setTotEmpCount\"});\n\n\n/**\n * @param {String} totEmpCount the totEmpCount to set\n */\nTax1099R.prototype.setTotEmpCount = function(totEmpCount) {\n  this.totEmpCount = totEmpCount;\n};\n\n\n/**\n * @return {PayerAddress} the payerAddress\n */\nTax1099R.prototype.getPayerAddress = function() {\n  return this.payerAddress;\n};\nChildAggregate.add(Tax1099R, {required:true, order: 13, attributeType: PayerAddress, readMethod: \"getPayerAddress\", writeMethod: \"setPayerAddress\"});\n\n\n/**\n * @param {PayerAddress} payerAddress the payerAddress to set\n */\nTax1099R.prototype.setPayerAddress = function(payerAddress) {\n  this.payerAddress = payerAddress;\n};\n\n\n/**\n * @return {String} the payerId\n */\nTax1099R.prototype.getPayerId = function() {\n  return this.payerId;\n};\nElement.add(Tax1099R, {name: \"PAYERID\", required: true, order: 14, attributeType: String, readMethod: \"getPayerId\", writeMethod: \"setPayerId\"});\n\n\n/**\n * @param {String} payerId the payerId to set\n */\nTax1099R.prototype.setPayerId = function(payerId) {\n  this.payerId = payerId;\n};\n\n\n/**\n * @return {RecAddress} the recAddress\n */\nTax1099R.prototype.getRecAddress = function() {\n  return this.recAddress;\n};\nChildAggregate.add(Tax1099R, {required:true, order: 15, attributeType: RecAddress, readMethod: \"getRecAddress\", writeMethod: \"setRecAddress\"});\n\n\n/**\n * @param {RecAddress} recAddress the recAddress to set\n */\nTax1099R.prototype.setRecAddress = function(recAddress) {\n  this.recAddress = recAddress;\n};\n\n\n/**\n * @return {String} the recId\n */\nTax1099R.prototype.getRecId = function() {\n  return this.recId;\n};\nElement.add(Tax1099R, {name: \"RECID\", required: true, order: 16, attributeType: String, readMethod: \"getRecId\", writeMethod: \"setRecId\"});\n\n\n/**\n * @param {String} recId the recId to set\n */\nTax1099R.prototype.setRecId = function(recId) {\n  this.recId = recId;\n};\n\n\n/**\n * @return {String} the recAcct\n */\nTax1099R.prototype.getRecAcct = function() {\n  return this.recAcct;\n};\nElement.add(Tax1099R, {name: \"RECACCT\", required: true, order: 17, attributeType: String, readMethod: \"getRecAcct\", writeMethod: \"setRecAcct\"});\n\n\n/**\n * @param {String} recAcct the recAcct to set\n */\nTax1099R.prototype.setRecAcct = function(recAcct) {\n  this.recAcct = recAcct;\n};\n\n\n\n\nmodule.exports = Tax1099R;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar T1099Request = require(\"../common/T1099Request\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar Element = require(\"../../../meta/Element\");\n\n/**\n * @class\n * @augments T1099Request\n */\nfunction Tax1099Request () {\n  T1099Request.call(this);\n\n  /**\n   * @name Tax1099Request#taxYear\n   * @type String\n   * @access private\n   */\n  this.taxYear = null;\n}\n\ninherit(Tax1099Request, \"extends\", T1099Request);\n\n\nAggregate.add(\"TAX1099RQ\", Tax1099Request);\n\n\nTax1099Request.prototype.getTaxYear = function() {\n  return this.taxYear;\n};\nElement.add(Tax1099Request, {name: \"TAXYEAR\", required: true, order: 0, attributeType: String, readMethod: \"getTaxYear\", writeMethod: \"setTaxYear\"});\n\n\nTax1099Request.prototype.setTaxYear = function(/*String*/ taxYear) {\n  this.taxYear = taxYear;\n};\n\n\n\n\nmodule.exports = Tax1099Request;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar MessageSetType = require(\"../MessageSetType\");\nvar RequestMessageSet = require(\"../RequestMessageSet\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar Tax1099RequestTransaction = require(\"./Tax1099RequestTransaction\");\n\n/**\n * @class\n * @augments RequestMessageSet\n */\nfunction Tax1099RequestMessageSet () {\n  RequestMessageSet.call(this);\n\n  /**\n   * @name Tax1099RequestMessageSet#taxRequestTransaction\n   * @type Tax1099RequestTransaction\n   * @access private\n   */\n  this.taxRequestTransaction = null;\n}\n\ninherit(Tax1099RequestMessageSet, \"extends\", RequestMessageSet);\n\n\nAggregate.add(\"TAX1099MSGSRQV1\", Tax1099RequestMessageSet);\n\n\nTax1099RequestMessageSet.prototype.getType = function() {\n  return MessageSetType.tax1099;\n};\n\n\n/**\n * The statement request.\n *\n * @return {Tax1099RequestTransaction} The statement request.\n */\nTax1099RequestMessageSet.prototype.getTaxRequestTransaction = function() {\n  return this.taxRequestTransaction;\n};\nChildAggregate.add(Tax1099RequestMessageSet, {order: 0, attributeType: Tax1099RequestTransaction, readMethod: \"getTaxRequestTransaction\", writeMethod: \"setTaxRequestTransaction\"});\n\n\n/**\n * The statement request.\n *\n * @param {Tax1099RequestTransaction} taxRequestTransaction The statement request.\n */\nTax1099RequestMessageSet.prototype.setTaxRequestTransaction = function(taxRequestTransaction) {\n  this.taxRequestTransaction = taxRequestTransaction;\n};\n\n\n// Inherited.\nTax1099RequestMessageSet.prototype.getRequestMessages = function() {\n  var requestMessages = [];\n  if (this.getTaxRequestTransaction()) {\n    requestMessages.push(this.getTaxRequestTransaction());\n  }\n  return requestMessages;\n};\n\n\n\n\nmodule.exports = Tax1099RequestMessageSet;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar TransactionWrappedRequestMessage = require(\"../TransactionWrappedRequestMessage\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar Tax1099Request = require(\"./Tax1099Request\");\n\n/**\n * @class\n * @augments TransactionWrappedRequestMessage\n */\nfunction Tax1099RequestTransaction () {\n  TransactionWrappedRequestMessage.call(this);\n\n  /**\n   * @name Tax1099RequestTransaction#tax1099Request\n   * @type Tax1099Request\n   * @access private\n   */\n  this.tax1099Request = null;\n}\n\ninherit(Tax1099RequestTransaction, \"extends\", TransactionWrappedRequestMessage);\n\n\nAggregate.add(\"TAX1099TRNRQ\", Tax1099RequestTransaction);\n\n\n/**\n * The tax1099Request.\n *\n * @return {Tax1099Request} The tax1099Request.\n */\nTax1099RequestTransaction.prototype.getTax1099Request = function() {\n  return this.tax1099Request;\n};\nChildAggregate.add(Tax1099RequestTransaction, {required: true, order: 30, attributeType: Tax1099Request, readMethod: \"getTax1099Request\", writeMethod: \"setTax1099Request\"});\n\n\n/**\n * The tax1099Request.\n *\n * @param {Tax1099Request} tax1099Request The message.\n *\n */\nTax1099RequestTransaction.prototype.setTax1099Request = function(tax1099Request) {\n  this.tax1099Request = tax1099Request;\n};\n\n\n// Inherited.\nTax1099RequestTransaction.prototype.setWrappedMessage = function(/*Tax1099Request*/ tax1099Request) {\n  this.setTax1099Request(tax1099Request);\n};\n\n\n\n\nmodule.exports = Tax1099RequestTransaction;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar T1099Response = require(\"../common/T1099Response\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar Tax1099DIV = require(\"./Tax1099DIV\");\nvar Tax1099INT = require(\"./Tax1099INT\");\nvar Tax1099R = require(\"./Tax1099R\");\nvar Tax1099B = require(\"./Tax1099B\");\nvar Tax1099MISC = require(\"./Tax1099MISC\");\nvar Tax1099OID = require(\"./Tax1099OID\");\n\n/**\n * @class\n * @augments T1099Response\n */\nfunction Tax1099Response () {\n  T1099Response.call(this);\n\n  /**\n   * @name Tax1099Response#tax1099div\n   * @type Tax1099DIV\n   * @access private\n   */\n  this.tax1099div = null;\n\n  /**\n   * @name Tax1099Response#lstTax1099DIV\n   * @type Tax1099DIV[]\n   * @access private\n   */\n  this.lstTax1099DIV = null;\n\n  /**\n   * @name Tax1099Response#lstTax1099INT\n   * @type Tax1099INT[]\n   * @access private\n   */\n  this.lstTax1099INT = null;\n\n  /**\n   * @name Tax1099Response#lstTax1099R\n   * @type Tax1099R[]\n   * @access private\n   */\n  this.lstTax1099R = null;\n\n  /**\n   * @name Tax1099Response#lstTax1099B\n   * @type Tax1099B[]\n   * @access private\n   */\n  this.lstTax1099B = null;\n\n  /**\n   * @name Tax1099Response#lstTax1099MISC\n   * @type Tax1099MISC[]\n   * @access private\n   */\n  this.lstTax1099MISC = null;\n\n  /**\n   * @name Tax1099Response#lstTax1099OID\n   * @type Tax1099OID[]\n   * @access private\n   */\n  this.lstTax1099OID = null;\n}\n\ninherit(Tax1099Response, \"extends\", T1099Response);\n\n\nAggregate.add(\"TAX1099RS\", Tax1099Response);\n\n\n/**\n * @return {Tax1099DIV[]} the lstTax1099DIV\n */\nTax1099Response.prototype.getLstTax1099DIV = function() {\n  return this.lstTax1099DIV;\n};\nChildAggregate.add(Tax1099Response, {required: false, order: 0, attributeType: Array, collectionEntryType: Tax1099DIV, readMethod: \"getLstTax1099DIV\", writeMethod: \"setLstTax1099DIV\"});\n\n\n/**\n * @param {Tax1099DIV[]} lstTax1099DIV\n *            the lstTax1099DIV to set\n */\nTax1099Response.prototype.setLstTax1099DIV = function(lstTax1099DIV) {\n  this.lstTax1099DIV = lstTax1099DIV;\n};\n\n\nTax1099Response.prototype.getResponseMessageName = function() {\n  return \"1099 Tax details\";\n};\n\n\n/**\n * @return {Tax1099INT[]} the lstTax1099INT\n */\nTax1099Response.prototype.getLstTax1099INT = function() {\n  return this.lstTax1099INT;\n};\nChildAggregate.add(Tax1099Response, {required: false, order: 1, attributeType: Array, collectionEntryType: Tax1099INT, readMethod: \"getLstTax1099INT\", writeMethod: \"setLstTax1099INT\"});\n\n\n/**\n * @param {Tax1099INT[]} lstTax1099INT the lstTax1099INT to set\n */\nTax1099Response.prototype.setLstTax1099INT = function(lstTax1099INT) {\n  this.lstTax1099INT = lstTax1099INT;\n};\n\n\n/**\n * @return {Tax1099R[]} the lstTax1099R\n */\nTax1099Response.prototype.getLstTax1099R = function() {\n  return this.lstTax1099R;\n};\nChildAggregate.add(Tax1099Response, {required: false, order: 2, attributeType: Array, collectionEntryType: Tax1099R, readMethod: \"getLstTax1099R\", writeMethod: \"setLstTax1099R\"});\n\n\n/**\n * @param {Tax1099R[]} lstTax1099R the lstTax1099R to set\n */\nTax1099Response.prototype.setLstTax1099R = function(lstTax1099R) {\n  this.lstTax1099R = lstTax1099R;\n};\n\n\n/**\n * @return {Tax1099B[]} the lstTax1099B\n */\nTax1099Response.prototype.getLstTax1099B = function() {\n  return this.lstTax1099B;\n};\nChildAggregate.add(Tax1099Response, {required: false, order: 3, attributeType: Array, collectionEntryType: Tax1099B, readMethod: \"getLstTax1099B\", writeMethod: \"setLstTax1099B\"});\n\n\n/**\n * @param {Tax1099B[]} lstTax1099B the lstTax1099B to set\n */\nTax1099Response.prototype.setLstTax1099B = function(lstTax1099B) {\n  this.lstTax1099B = lstTax1099B;\n};\n\n\n/**\n * @return {Tax1099MISC[]} the lstTax1099MISC\n */\nTax1099Response.prototype.getLstTax1099MISC = function() {\n  return this.lstTax1099MISC;\n};\nChildAggregate.add(Tax1099Response, {required: false, order: 4, attributeType: Array, collectionEntryType: Tax1099MISC, readMethod: \"getLstTax1099MISC\", writeMethod: \"setLstTax1099MISC\"});\n\n\n/**\n * @param {Tax1099MISC[]} lstTax1099MISC the lstTax1099MISC to set\n */\nTax1099Response.prototype.setLstTax1099MISC = function(lstTax1099MISC) {\n  this.lstTax1099MISC = lstTax1099MISC;\n};\n\n\n/**\n * @return {Tax1099OID[]} the lstTax1099OID\n */\nTax1099Response.prototype.getLstTax1099OID = function() {\n  return this.lstTax1099OID;\n};\nChildAggregate.add(Tax1099Response, {required: false, order:5, attributeType: Array, collectionEntryType: Tax1099OID, readMethod: \"getLstTax1099OID\", writeMethod: \"setLstTax1099OID\"});\n\n\n/**\n * @param {Tax1099OID[]} lstTax1099OID the lstTax1099OID to set\n */\nTax1099Response.prototype.setLstTax1099OID = function(lstTax1099OID) {\n  this.lstTax1099OID = lstTax1099OID;\n};\n\n\n\n\nmodule.exports = Tax1099Response;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar MessageSetType = require(\"../MessageSetType\");\nvar ResponseMessageSet = require(\"../ResponseMessageSet\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar Tax1099ResponseTransaction = require(\"./Tax1099ResponseTransaction\");\n\n/**\n * @class\n * @augments ResponseMessageSet\n */\nfunction Tax1099ResponseMessageSet () {\n  ResponseMessageSet.call(this);\n\n  /**\n   * @name Tax1099ResponseMessageSet#taxResponseTransaction\n   * @type Tax1099ResponseTransaction[]\n   * @access private\n   */\n  this.taxResponseTransaction = null;\n}\n\ninherit(Tax1099ResponseMessageSet, \"extends\", ResponseMessageSet);\n\n\nAggregate.add(\"TAX1099MSGSRSV1\", Tax1099ResponseMessageSet);\n\n\nTax1099ResponseMessageSet.prototype.getType = function() {\n  return MessageSetType.tax1099;\n};\n\n\n/**\n * The taxResponseTransaction list.\n *\n * Most OFX files have a single statement response, except MT2OFX\n * which outputs OFX with multiple statement responses\n * in a single banking response message set.\n *\n * @return {Tax1099ResponseTransaction[]} The taxResponseTransaction list.\n */\nTax1099ResponseMessageSet.prototype.getTaxResponseTransaction = function() {\n  return this.taxResponseTransaction;\n};\nChildAggregate.add(Tax1099ResponseMessageSet, {order: 0, attributeType: Array, collectionEntryType: Tax1099ResponseTransaction, readMethod: \"getTaxResponseTransaction\", writeMethod: \"setTaxResponseTransaction\"});\n\n\n/**\n * The taxResponseTransaction.\n *\n * @param {Tax1099ResponseTransaction[]} taxResponseTransaction The statement responses.\n */\nTax1099ResponseMessageSet.prototype.setTaxResponseTransaction = function(taxResponseTransaction) {\n  if (taxResponseTransaction instanceof Array) {\n    this.taxResponseTransaction = taxResponseTransaction;\n  } else {\n    this.taxResponseTransaction = [taxResponseTransaction];\n  }\n};\n\n\n// Inherited.\nTax1099ResponseMessageSet.prototype.getResponseMessages = function() {\n  return this.taxResponseTransaction;\n};\n\n\n/**\n * The first statement response.\n *\n * @return {Tax1099ResponseTransaction} the first bank statement response.\n * @deprecated Use getStatementResponses() because sometimes there are multiple responses\n */\nTax1099ResponseMessageSet.prototype.getStatementResponse = function() {\n  return !this.taxResponseTransaction || this.taxResponseTransaction.length === 0 ? null : this.taxResponseTransaction.get(0);\n};\n\n\nmodule.exports = Tax1099ResponseMessageSet;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\"use strict\";\n\nvar inherit = require(\"../../../util/inherit\");\n\nvar TransactionWrappedResponseMessage = require(\"../TransactionWrappedResponseMessage\");\nvar Aggregate = require(\"../../../meta/Aggregate\");\nvar ChildAggregate = require(\"../../../meta/ChildAggregate\");\nvar Tax1099Response = require(\"./Tax1099Response\");\n\n/**\n * @class\n * @augments TransactionWrappedResponseMessage\n */\nfunction Tax1099ResponseTransaction () {\n  TransactionWrappedResponseMessage.call(this);\n\n  /**\n   * @name Tax1099ResponseTransaction#tax1099Response\n   * @type Tax1099Response\n   * @access private\n   */\n  this.tax1099Response = null;\n}\n\ninherit(Tax1099ResponseTransaction, \"extends\", TransactionWrappedResponseMessage);\n\n\nAggregate.add(\"TAX1099TRNRS\", Tax1099ResponseTransaction);\n\n\n/**\n * The tax1099Response.\n *\n * @return {Tax1099Response} The tax1099Response.\n */\nTax1099ResponseTransaction.prototype.getTax1099Response = function() {\n  return this.tax1099Response;\n};\nChildAggregate.add(Tax1099ResponseTransaction, {required:false, order: 2, attributeType: Tax1099Response, readMethod: \"getTax1099Response\", writeMethod: \"setTax1099Response\"});\n\n\n/**\n * The tax1099Response.\n *\n * @param {Tax1099Response} tax1099Response The message.\n */\nTax1099ResponseTransaction.prototype.setTax1099Response = function(tax1099Response) {\n  this.tax1099Response = tax1099Response;\n};\n\n\n// Inherited.\nTax1099ResponseTransaction.prototype.getWrappedMessage = function() {\n  return this.getTax1099Response();\n};\n\n\n\n\nmodule.exports = Tax1099ResponseTransaction;\n","\"use strict\";\n\nmodule.exports = {\n  ExtDBInfo: require(\"./ExtDBInfo\"),\n  PayerAddress: require(\"./PayerAddress\"),\n  ProcDet: require(\"./ProcDet\"),\n  RecAddress: require(\"./RecAddress\"),\n  Tax1099B: require(\"./Tax1099B\"),\n  Tax1099DIV: require(\"./Tax1099DIV\"),\n  Tax1099INT: require(\"./Tax1099INT\"),\n  Tax1099MISC: require(\"./Tax1099MISC\"),\n  Tax1099OID: require(\"./Tax1099OID\"),\n  Tax1099R: require(\"./Tax1099R\"),\n  Tax1099Request: require(\"./Tax1099Request\"),\n  Tax1099RequestMessageSet: require(\"./Tax1099RequestMessageSet\"),\n  Tax1099RequestTransaction: require(\"./Tax1099RequestTransaction\"),\n  Tax1099Response: require(\"./Tax1099Response\"),\n  Tax1099ResponseMessageSet: require(\"./Tax1099ResponseMessageSet\"),\n  Tax1099ResponseTransaction: require(\"./Tax1099ResponseTransaction\"),\n};\n","\"use strict\";\n\nmodule.exports = {\n  data: require(\"./data/index\"),\n};\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * A generic descriptor for an attribute of an OFX aggregate.\n *\n * @class\n */\nfunction AggregateAttribute(type, info) {\n\n  /**\n   * @name AggregateAttribute#readMethod\n   * @type Method\n   * @access private\n   */\n  this.readMethod = null;\n\n  /**\n   * @name AggregateAttribute#writeMethod\n   * @type Method\n   * @access private\n   */\n  this.writeMethod = null;\n\n  /**\n   * @name AggregateAttribute#attributeType\n   * @type Class\n   * @access private\n   */\n  this.attributeType = null;\n\n  /**\n   * @name AggregateAttribute#collectionEntryType\n   * @type Class\n   * @access private\n   */\n  this.collectionEntryType = null;\n\n  /**\n   * @name AggregateAttribute#name\n   * @type String\n   * @access private\n   */\n  this.name = null;\n\n  /**\n   * @name AggregateAttribute#order\n   * @type int\n   * @access private\n   */\n  this.order = null;\n\n  /**\n   * @name AggregateAttribute#required\n   * @type boolean\n   * @access private\n   */\n  this.required = null;\n\n  /**\n   * @name AggregateAttribute#type\n   * @type Type\n   * @access private\n   */\n  this.type = type;\n\n  /**\n   * @name AggregateAttribute#toString_\n   * @type String\n   * @access private\n   */\n  this.toString_ = null;\n\n  /**\n   * @name AggregateAttribute#collection\n   * @type boolean\n   * @access private\n   */\n  this.collection = false;\n  \n  switch(type) {\n    case AggregateAttribute.Type.CHILD_AGGREGATE:\n      this.AggregateAttributeForChildAggregate(info);\n      break;\n      \n    case AggregateAttribute.Type.ELEMENT:\n      this.AggregateAttributeForElement(info);\n      break;\n      \n    default:\n      throw new Error(\"illegal invocation\");\n  }\n}\n\n\nvar Type = AggregateAttribute.Type = {\n  CHILD_AGGREGATE: 0,\n  ELEMENT: 1\n};\n\n\nAggregateAttribute.prototype.AggregateAttributeForElement = function(elementInfo) {\n  this.readMethod = elementInfo.readMethod;\n  this.writeMethod = elementInfo.writeMethod;\n  if (!this.readMethod) {\n    throw new Error(\"Illegal property '\" + elementInfo.name + \"' for aggregate: no read method.\");\n  }\n  else if (!this.writeMethod) {\n    throw new Error(\"Illegal property '\" + elementInfo.name + \"' for aggregate: no write method.\");\n  }\n\n  this.attributeType = elementInfo.attributeType;\n  this.collectionEntryType = null;\n  this.name = elementInfo.name;\n  this.order = elementInfo.order;\n  this.required = elementInfo.required;\n  this.type = Type.ELEMENT;\n  this.toString_ = \"Element '\" + this.name + \"'\";\n  this.collection = false;\n\n  //todo: validate known/supported element types here?\n};\n\n\nAggregateAttribute.prototype.AggregateAttributeForChildAggregate = function(childAggregate) {\n  this.readMethod = childAggregate.readMethod;\n  this.writeMethod = childAggregate.writeMethod;\n  if (!this.readMethod) {\n    throw new Error(\"Illegal property '\" + childAggregate.name + \"' for aggregate: no read method.\");\n  }\n  else if (!this.writeMethod) {\n    throw new Error(\"Illegal property '\" + childAggregate.name + \"' for aggregate: no write method.\");\n  }\n\n  this.attributeType = childAggregate.attributeType;\n  this.collection = false;\n  if (childAggregate.collectionEntryType) {\n    this.collection = true;\n    this.name = null;\n    this.collectionEntryType = childAggregate.collectionEntryType;\n  }\n  else if (\"##not_specified##\" === childAggregate.name) {\n    var AggregateIntrospector = require(\"./AggregateIntrospector\");\n    var aggregateInfo = AggregateIntrospector.getAggregateInfo(childAggregate.attributeType);\n    if (!aggregateInfo) {\n      throw new Error(\"Illegal child aggregate type '\" + childAggregate.attributeType + \"': no aggregate information available.\");\n    }\n\n    this.name = aggregateInfo.getName();\n    if (\"##not_specified##\" === this.name) {\n      throw new Error(\"Illegal child aggregate type '\" + childAggregate.attributeType + \"': a child aggregate name must be specified.\");\n    }\n    this.collectionEntryType = null;\n  }\n  else {\n    this.name = childAggregate.name;\n    this.collectionEntryType = null;\n  }\n\n  this.order = childAggregate.order;\n  this.required = childAggregate.required;\n  this.type = Type.CHILD_AGGREGATE;\n  this.toString_ = \"ChildAggregate '\" + this.name + \"'\";\n};\n\n\nAggregateAttribute.prototype.get = function(/*Object*/ instance) {\n  var readMethod = instance[this.readMethod];\n  return readMethod.call(instance);\n};\n\n\nAggregateAttribute.prototype.set = function(/*Object*/ value, /*Object*/ instance) {\n  if (this.collection) {\n    var collection = this.get(instance);\n    if (!collection) {\n      collection = [];\n    }\n    collection.push(value);\n    value = collection;\n  }\n\n  var writeMethod = instance[this.writeMethod];\n  writeMethod.call(instance, value);\n};\n\n\nAggregateAttribute.prototype.getAttributeType = function() {\n  return this.attributeType;\n};\n\n\nAggregateAttribute.prototype.getCollectionEntryType = function() {\n  return this.collectionEntryType;\n};\n\n\nAggregateAttribute.prototype.getName = function() {\n  return this.name;\n};\n\n\nAggregateAttribute.prototype.isRequired = function() {\n  return this.required;\n};\n\n\nAggregateAttribute.prototype.getOrder = function() {\n  return this.order;\n};\n\n\nAggregateAttribute.prototype.getType = function() {\n  return this.type;\n};\n\n\nAggregateAttribute.prototype.compareTo = function(/*AggregateAttribute*/ other) {\n  return this.order - other.order;\n};\n\n\nAggregateAttribute.prototype.isCollection = function() {\n  return this.collection;\n};\n\n\n// @Override\nAggregateAttribute.prototype.toString = function() {\n  return this.toString_;\n};\n\n\n\n\nmodule.exports = AggregateAttribute;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = null;\nvar AggregateAttribute = require(\"./AggregateAttribute\");\n\n\n/**\n * Holder for meta information about an aggregate class.\n *\n * @class\n */\nfunction AggregateInfo(name, clazz) {\n  \n  /**\n   * @name AggregateInfo#clazz\n   * @type Class\n   * @access private\n   */\n  this.clazz = clazz;\n\n  /**\n   * @name AggregateInfo#name\n   * @type String\n   * @access private\n   */\n  this.name = name;\n\n  /**\n   * @name AggregateInfo#attributes\n   * @type AggregateAttribute[]\n   * @access private\n   */\n  this.attributes = [];\n\n  /**\n   * @name AggregateInfo#headers\n   * @type object\n   */\n  this.headers = {};\n}\n\n\nAggregateInfo.prototype.addChildAggregate = function(childAggregateInfo) {\n  var attribute = new AggregateAttribute(AggregateAttribute.Type.CHILD_AGGREGATE, childAggregateInfo);\n  this.attributes.push(attribute);\n};\n\nAggregateInfo.prototype.addElement = function(elementInfo) {\n  var attribute = new AggregateAttribute(AggregateAttribute.Type.ELEMENT, elementInfo);\n  this.attributes.push(attribute);\n};\n\nAggregateInfo.prototype.addHeader = function(options) {\n  console.assert(options.name);\n  this.headers[options.name] = options;\n};\n\n\n/**\n * The name of the aggregate.\n *\n * @return {String} The name of the aggregate.\n */\nAggregateInfo.prototype.getName = function() {\n  return this.name;\n};\n\n\n/**\n * The name of the aggregate.\n *\n * @param {String} value The name of the aggregate.\n */\nAggregateInfo.prototype.setName = function(value) {\n  this.name = value;\n};\n\n\n/**\n * The attributes.\n *\n * @return {AggregateAttribute[]} The attributes.\n */\nAggregateInfo.prototype.getAttributes = function() {\n  return this.attributes;\n};\n\n\n\n/**\n * Get the attribute by the specified name.\n *\n * @param {String} name The name of the attribute.\n * @param {int} orderHint The order at which the attribute should come after in case there are more than one candidates.\n * @param {Class} [assignableTo=null] The class this attribute must be assignable to\n * @return {AggregateAttribute} The attribute by the specified name,\n * or if there are more than one by that name,\n * the first one after the specified order,\n * or if there are none then the first collection that\n * comes after the order hint, or the latest if there\n * are none that come after the order hint, or null.\n */\nAggregateInfo.prototype.getAttribute = function(name, orderHint, assignableTo) {\n  if(!inherit) {\n    inherit = require(\"../util/inherit\");\n  }\n  var candidates = [];\n  var collectionBucket = null;\n  for (var attributeIdx=0; attributeIdx<this.attributes.length; attributeIdx++) {\n    var attribute = this.attributes[attributeIdx];\n    if (name === attribute.getName()) {\n      candidates.push(attribute);\n    }\n    else if (attribute.isCollection()) {\n      if (assignableTo) {\n        // Verify it's the right generic type.\n        var entryType = attribute.getCollectionEntryType();\n        if (entryType && !inherit.isAssignableFrom(entryType, assignableTo)) {\n          // Collection is of wrong type.\n          continue;\n        }\n      }\n      if (!collectionBucket || collectionBucket.getOrder() < orderHint) {\n        //the default is the first collection that comes after the order hint, or the latest if there are none that come after the order hint.\n        collectionBucket = attribute;\n      }\n    }\n  }\n\n  if (candidates.length > 0) {\n    if (candidates.length === 1) {\n      return candidates[0];\n    }\n    else {\n      for (var candidateIdx=0; candidateIdx<candidates.length; candidateIdx++) {\n        var candidate = candidates[candidateIdx];\n        if (candidate.getOrder() >= orderHint) {\n          return candidate;\n        }\n      }\n    }\n  }\n\n  return collectionBucket;\n};\n\n\n/**\n * Whether this aggregate has headers.\n *\n * @return {boolean} Whether this aggregate has headers.\n */\nAggregateInfo.prototype.hasHeaders = function() {\n  return Object.keys(this.headers).length > 0;\n};\n\n\nAggregateInfo.prototype.getMethod = function(header, name) {\n  console.assert(header[name]);\n  var fcn = this.clazz.prototype[header[name]];\n  console.assert(fcn && (typeof(fcn) === \"function\"));\n  return fcn;\n};\n\n/**\n * Get the headers defined by the specific aggregate instance.\n *\n * @param {Object} instance The aggregate instance.\n * @return {Object} The headers.\n */\nAggregateInfo.prototype.getHeaders = function(instance) {\n  var headers = {};\n  for (var name in this.headers) {\n    var header = this.headers[name];\n    var readMethod = this.getMethod(header, \"readMethod\");\n    var headerValue = readMethod.call(instance);\n    headers[header.name] = headerValue;\n  }\n  return headers;\n};\n\n\n/**\n * The type of the specified header.\n *\n * @param {String} name The header name.\n * @return {Class} The header type, or null if no header by the specified name exists.\n */\nAggregateInfo.prototype.getHeaderType = function(name) {\n  if (this.headers[name]) {\n    var header = this.headers[name];\n    return header.attributeType;\n  }\n  return null;\n};\n\n\n/**\n * Set the header value for the specified instance.\n *\n * @param {Object} instance The instance.\n * @param {String} name     The name of the header.\n * @param {Object} value    the value of the header.\n */\nAggregateInfo.prototype.setHeader = function(instance, name, value) {\n  if (this.headers[name]) {\n    var header = this.headers[name];\n    var writeMethod = this.getMethod(header, \"writeMethod\");\n    writeMethod.call(instance, value);\n  }\n};\n\n\n\n\nmodule.exports = AggregateInfo;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar AggregateInfo = require(\"./AggregateInfo\");\nvar clone = require(\"clone\");\n\nvar AGGREGATE_CLASSES_BY_NAME = {};\nvar placeholderName = \"##PLACEHOLDER##\";\n\n/**\n * Introspector for aggregate information.\n *\n * @class\n */\nvar AggregateIntrospector = {};\n\nAggregateIntrospector.AGGREGATE_CLASSES_BY_NAME = AGGREGATE_CLASSES_BY_NAME;\nAggregateIntrospector.placeholderName = placeholderName;\n\n/**\n * Get the aggregate meta information for the specified class.\n *\n * @param clazz the aggregate class.\n * @return {AggregateInfo} The aggregate meta information, or null if the class isn't an aggregate.\n */\nAggregateIntrospector.getAggregateInfo = function(clazz) {\n  return clazz.Aggregate;\n};\n\n/**\n * Find the aggregate class by name.\n *\n * @param {String} aggregateName The name of the aggregate.\n * @return The aggregate class.\n */\nAggregateIntrospector.findAggregateByName = function(aggregateName) {\n  return AGGREGATE_CLASSES_BY_NAME[aggregateName];\n};\n\n\n/**\n * Add parent's aggregate data to child\n *\n * @param clazz the child class\n * @return parent the parent class\n */\nAggregateIntrospector.extend = function(clazz, parent) {\n  var parentAggregate = AggregateIntrospector.getAggregateInfo(parent);\n  if(parentAggregate) {\n    clazz.Aggregate = clone(parentAggregate);\n    clazz.Aggregate.setName(AggregateIntrospector.placeholderName);\n  }\n};\n\n\nAggregateIntrospector.getAggregateName = function(clazz) {\n  if(!clazz.Aggregate || clazz.Aggregate.getName() === AggregateIntrospector.placeholderName) {\n    return null;\n  } else {\n    return clazz.Aggregate.getName();\n  }\n};\n\n\nAggregateIntrospector.addAggregate = function(name, clazz) {\n//  console.assert(!(name in AGGREGATE_CLASSES_BY_NAME));\n  AGGREGATE_CLASSES_BY_NAME[name] = clazz;\n  \n  if(clazz.Aggregate) {\n    console.assert(clazz.Aggregate.getName() === AggregateIntrospector.placeholderName);\n    clazz.Aggregate.setName(name);\n  } else {\n    clazz.Aggregate = new AggregateInfo(name, clazz);\n  }\n};\n\n\nAggregateIntrospector.addChildAggregate = function(clazz, options) {\n  var aggregateInfo = AggregateIntrospector.getAggregateInfo(clazz);\n  if(!aggregateInfo) {\n    aggregateInfo = clazz.Aggregate = new AggregateInfo(AggregateIntrospector.placeholderName, clazz);\n  }\n  console.assert(aggregateInfo);\n  if(aggregateInfo) {\n    aggregateInfo.addChildAggregate(options);\n  }\n};\n\n\nAggregateIntrospector.addElement = function(clazz, options) {\n  var aggregateInfo = AggregateIntrospector.getAggregateInfo(clazz);\n  if(!aggregateInfo) {\n    aggregateInfo = clazz.Aggregate = new AggregateInfo(AggregateIntrospector.placeholderName, clazz);\n  }\n  console.assert(aggregateInfo);\n  if(aggregateInfo) {\n    aggregateInfo.addElement(options);\n  }\n};\n\nAggregateIntrospector.addHeader = function(clazz, options) {\n  var aggregateInfo = AggregateIntrospector.getAggregateInfo(clazz);\n  if(!aggregateInfo) {\n    aggregateInfo = clazz.Aggregate = new AggregateInfo(AggregateIntrospector.placeholderName, clazz);\n  }\n  console.assert(aggregateInfo);\n  if(aggregateInfo) {\n    aggregateInfo.addHeader(options);\n  }\n};\n\n\nmodule.exports = AggregateIntrospector;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar AggregateIntrospector = require(\"./AggregateIntrospector\");\nvar DefaultStringConversion = require(\"./DefaultStringConversion\");\nvar AggregateAttribute = require(\"./AggregateAttribute\");\n\n/**\n * Marshaller for aggregate objects.\n *\n * @class\n */\nfunction AggregateMarshaller () {\n  /**\n   * @name AggregateMarshaller#conversion\n   * @type StringConversion\n   * @access private\n   */\n  this.conversion = new DefaultStringConversion();\n}\n\n\n/**\n * Marshal the specified aggregate object.\n *\n * @param {Object} aggregate The aggregate to marshal.\n * @param {OFXWriter} writer    The writer.\n */\nAggregateMarshaller.prototype.marshal = function(aggregate, writer) {\n  var aggregateInfo = AggregateIntrospector.getAggregateInfo(aggregate.constructor);\n  if (!aggregateInfo) {\n    throw new Error(\"Unable to marshal object: no aggregate metadata found.\");\n  }\n\n  if (aggregateInfo.hasHeaders()) {\n    var headerValues = aggregateInfo.getHeaders(aggregate);\n    var convertedValues = {};\n    for (var header in headerValues) {\n      convertedValues[header] = this.getConversion().toString(headerValues[header]);\n    }\n    writer.writeHeaders(convertedValues);\n  }\n\n  writer.writeStartAggregate(aggregateInfo.getName());\n  var aggregateAttributes = aggregateInfo.getAttributes();\n  this.writeAggregateAttributes(aggregate, writer, aggregateAttributes);\n  writer.writeEndAggregate(aggregateInfo.getName());\n};\n\n\n/**\n * Write the aggregate attributes for the specified aggregate.\n *\n * @param {Object} aggregate           The aggregate.\n * @param {OFXWriter} writer              The writer.\n * @param {Object} aggregateAttributes The aggregate attributes.\n */\nAggregateMarshaller.prototype.writeAggregateAttributes = function(aggregate, writer, /*AggregateAttribute[]*/ aggregateAttributes) {\n  for (var i=0; i<aggregateAttributes.length; i++) {\n    var aggregateAttribute = aggregateAttributes[i];\n    var childValue = aggregateAttribute.get(aggregate);\n    if (childValue) {\n      switch (aggregateAttribute.getType()) {\n        case AggregateAttribute.Type.CHILD_AGGREGATE:\n          var childValues;\n          if (childValue instanceof Array) {\n            childValues = childValue;\n          }\n          else {\n            childValues = [childValue];\n          }\n\n          for (var childValueIdx=0; childValueIdx<childValues.length; childValueIdx++) {\n            var value = childValues[childValueIdx];\n            var aggregateInfo = AggregateIntrospector.getAggregateInfo(value.constructor);\n            if (!aggregateInfo) {\n              throw new Error(\"Unable to marshal object of type \" + value.constructor.name + \" (no aggregate metadata found).\");\n            }\n\n            var attributeName = aggregateAttribute.getName();\n            if (aggregateAttribute.isCollection()) {\n              attributeName = aggregateInfo.getName();\n            }\n            \n            writer.writeStartAggregate(attributeName);\n            this.writeAggregateAttributes(value, writer, aggregateInfo.getAttributes());\n            writer.writeEndAggregate(attributeName);\n          }\n          break;\n        case AggregateAttribute.Type.ELEMENT:\n          /*jshint -W004*/\n          var value = this.getConversion().toString(childValue);\n          if ((value) && (\"\" !== value.trim())) {\n            writer.writeElement(aggregateAttribute.getName(), value);\n          }\n          break;\n        default:\n          throw new Error(\"Unknown aggregate attribute type: \" + aggregateAttribute.getType());\n      }\n    }\n    else if (aggregateAttribute.isRequired()) {\n      throw new Error(\"Required \" + aggregateAttribute.toString() + \" is null or empty.\");\n    }\n  }\n};\n\n\n/**\n * The conversion.\n *\n * @return {StringConversion} The conversion.\n */\nAggregateMarshaller.prototype.getConversion = function() {\n  return this.conversion;\n};\n\n\n/**\n * The conversion.\n *\n * @param {StringConversion} conversion The conversion.\n */\nAggregateMarshaller.prototype.setConversion = function(conversion) {\n  this.conversion = conversion;\n};\n\n\n\n\nmodule.exports = AggregateMarshaller;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../util/inherit\");\nvar Stack = require(\"../util/stack\");\nvar AggregateIntrospector = require(\"./AggregateIntrospector\");\nvar OFXHandler = require(\"./OFXHandler\");\nvar AggregateAttribute = require(\"./AggregateAttribute\");\nvar LOG = require(\"../util/log\");\n\nfunction AggregateInfoHolder() {\n\n  /**\n   * @name AggregateInfoHolder#aggregate\n   * @type Object\n   */\n  this.aggregate = null;\n\n  /**\n   * @name AggregateInfoHolder#info\n   * @type AggregateInfo\n   */\n  this.info = null;\n\n  /**\n   * @name AggregateInfoHolder#aggregateName\n   * @type String\n   */\n  this.aggregateName = null;\n\n  /**\n   * @name AggregateInfoHolder#currentAttributeIndex\n   * @type int\n   */\n  this.currentAttributeIndex = 0;\n\n  switch(arguments.length) {\n    case 1:\n      var ignoredAggregateName = arguments[0];\n      this.aggregate = null;\n      this.info = null;\n      this.aggregateName = ignoredAggregateName;\n      break;\n      \n    case 3:\n      var aggregate = arguments[0],\n          info = arguments[1],\n          aggregateName = arguments[2];\n      this.aggregateName = aggregateName;\n      this.aggregate = aggregate;\n      this.info = info;\n      break;\n  }\n}\n\n\n/**\n * @returns boolean\n */\nAggregateInfoHolder.prototype.isBeingSkipped = function() {\n  return !this.aggregate || !this.info;\n};\n\n/**\n * @param {String} aggregateName\n * @returns boolean\n */\nAggregateInfoHolder.prototype.isSkipping = function(aggregateName) {\n  return this.isBeingSkipped() && aggregateName === this.aggregateName;\n};\n\n\n\n/**\n * Content handler that manages the aggregate using a stack-based implementation.\n * @param {Object} root\n * @param {StringConversion} conversion\n *\n * @class\n */\nfunction AggregateStackContentHandler(root, conversion) {\n  /**\n   * @name AggregateStackContentHandler#stack\n   * @type Stack<AggregateInfoHolder>\n   * @access private\n   */\n  this.stack = new Stack();\n\n  /**\n   * @name AggregateStackContentHandler#conversion\n   * @type StringConversion\n   * @access private\n   */\n  this.conversion = conversion;\n\n  /**\n   * @name AggregateStackContentHandler#parsingRoot\n   * @type boolean\n   * @access private\n   */\n  this.parsingRoot = false;\n\n  var aggregateInfo = AggregateIntrospector.getAggregateInfo(root.constructor);\n  if (!aggregateInfo) {\n    throw new Error(\"Unable to marshal object of type '\" + root.constructor.name + \"' (no aggregate metadata found).\");\n  }\n\n  this.stack.push(new AggregateInfoHolder(root, aggregateInfo, aggregateInfo.getName()));\n}\n\ninherit(AggregateStackContentHandler, 'implements', OFXHandler);\n\n\n\n/**\n * @param {String} name\n * @param {String} value\n */\nAggregateStackContentHandler.prototype.onHeader = function(name, value) {\n  var headerType = this.stack.peek().info.getHeaderType(name);\n  if (headerType) {\n    this.stack.peek().info.setHeader(this.stack.peek().aggregate, name, this.conversion.fromString(headerType, value));\n  }\n};\n\n/**\n * @param {String} name\n * @param {String} value\n */\nAggregateStackContentHandler.prototype.onElement = function(name, value) {\n  if (!this.stack.peek().isBeingSkipped()) {\n    var attribute = this.stack.peek().info.getAttribute(name, this.stack.peek().currentAttributeIndex);\n    if (attribute && attribute.getType() === AggregateAttribute.Type.ELEMENT) {\n      try {\n        attribute.set(this.conversion.fromString(attribute.getAttributeType(), value), this.stack.peek().aggregate);\n      }\n      catch (e) {\n        console.log(\"Unable to set \" + attribute.toString(), e);\n      }\n      this.stack.peek().currentAttributeIndex = attribute.getOrder();\n    }\n    else {\n      console.log(\"Element \" + name + \" is not supported on aggregate \" + this.stack.peek().info.getName() + \" at index \" + this.stack.peek().currentAttributeIndex);\n    }\n  }\n};\n\n/**\n * @param {String} aggregateName\n */\nAggregateStackContentHandler.prototype.startAggregate = function(aggregateName) {\n  if (this.stack.peek().isBeingSkipped()) {\n    this.stack.push(new AggregateInfoHolder(aggregateName));\n  }\n  else if (!this.parsingRoot) {\n    if (aggregateName !== this.stack.peek().info.getName()) {\n      throw new Error(\"Unexpected root element: \" + aggregateName);\n    }\n\n    this.parsingRoot = true;\n  }\n  else {\n    var infoHolder;\n\n    var attribute = this.stack.peek().info.getAttribute(aggregateName, this.stack.peek().currentAttributeIndex);\n    if (attribute) {\n      if (attribute.getType() == AggregateAttribute.Type.CHILD_AGGREGATE) {\n        var aggregateType;\n        if (attribute.isCollection()) {\n          aggregateType = AggregateIntrospector.findAggregateByName(aggregateName);\n        }\n        else {\n          aggregateType = attribute.getAttributeType();\n        }\n\n        if (aggregateType) {\n          var aggregateInfo = AggregateIntrospector.getAggregateInfo(aggregateType);\n          if (!aggregateInfo) {\n            throw new Error(\"Unable to locate aggregate info for type \" + aggregateType.getName());\n          }\n\n          /*jshint -W055*/\n          var aggregate = new aggregateType();\n          infoHolder = new AggregateInfoHolder(aggregate, aggregateInfo, aggregateName);\n        }\n        else {\n          if (LOG.warning) {\n            console.log(\"Child aggregate \" + aggregateName + \" is not supported on aggregate \" + this.stack.peek().info.getName() + \": name not assigned a type.\");\n          }\n\n          //element not supported.  push a skipping aggregate on the stack.\n          infoHolder = new AggregateInfoHolder(aggregateName);\n        }\n\n        this.stack.peek().currentAttributeIndex = attribute.getOrder();\n      }\n      else {\n        if (LOG.warning) {\n          console.log(\"Child aggregate \" + aggregateName + \" is not supported on aggregate \" + this.stack.peek().info.getName() + \": no child aggregate, but there does exist an element by that name.\");\n        }\n\n        //child aggregate not supported.  push a skipping aggregate on the stack.\n        infoHolder = new AggregateInfoHolder(aggregateName);\n      }\n    }\n    else {\n      if (LOG.warning) {\n        console.log(\"Child aggregate \" + aggregateName + \" is not supported on aggregate \" + this.stack.peek().info.getName() + \": no attributes found by that name after index \" + this.stack.peek().currentAttributeIndex);\n      }\n\n      //child aggregate not supported.  push a skipping aggregate on the stack.\n      infoHolder = new AggregateInfoHolder(aggregateName);\n    }\n\n    this.stack.push(infoHolder);\n  }\n};\n\n/**\n * @param {String} aggregateName\n */\nAggregateStackContentHandler.prototype.endAggregate = function(aggregateName) {\n  var infoHolder = this.stack.pop();\n  if (aggregateName !== infoHolder.aggregateName) {\n    throw new Error(\"Unexpected end aggregate \" + aggregateName + \". (Perhaps \" +\n      infoHolder.aggregateName + \" is an element with an empty value, making it impossible to parse.)\");\n  }\n\n  if (!this.stack.isEmpty()) {\n    if (!infoHolder.isSkipping(aggregateName)) {\n      //we're not skipping the top aggregate, so process it.\n      var attribute = this.stack.peek().info.getAttribute(\n          aggregateName, this.stack.peek().currentAttributeIndex, infoHolder.aggregate.constructor);\n      try {\n        if (attribute) {\n          attribute.set(infoHolder.aggregate, this.stack.peek().aggregate);\n        } else {\n          if (LOG.warning) {\n            console.log(\"Child aggregate \" + aggregateName + \" is not supported on aggregate \" + this.stack.peek().info.getName() + \": no attributes found by that name after index \" + this.stack.peek().currentAttributeIndex);\n          }\n        }\n      }\n      catch (e) {\n        console.log(\"Unable to set \" + attribute.toString(), e);\n      }\n      if(attribute) {\n        this.stack.peek().currentAttributeIndex = attribute.getOrder();\n      }\n    }\n  }\n  else {\n    //ended the root element.\n  }\n};\n\n\nmodule.exports = AggregateStackContentHandler;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n//var NanoXMLOFXReader = require(\"io/nanoxml/NanoXMLOFXReader\");\nvar DefaultStringConversion = require(\"./DefaultStringConversion\");\nvar AggregateStackContentHandler = require(\"./AggregateStackContentHandler\");\nvar BaseOFXReader = require(\"./BaseOFXReader\");\n\n/**\n * Unmarshaller for aggregate objects.\n * \n * @class\n */\nfunction AggregateUnmarshaller (clazz) {\n  console.assert(clazz);\n\n  /**\n   * @name AggregateUnmarshaller#clazz\n   * @type Class\n   * @access private\n   */\n  this.clazz = clazz;\n\n  /**\n   * @name AggregateUnmarshaller#conversion\n   * @type StringConversion\n   * @access private\n   */\n  this.conversion = new DefaultStringConversion();\n}\n\n\n\nAggregateUnmarshaller.prototype.unmarshal = function(/*Reader*/ reader) {\n  var aggregate = new this.clazz();\n  var ofxReader = this.newReader();\n  ofxReader.setContentHandler(new AggregateStackContentHandler(aggregate, this.getConversion()));\n  ofxReader.parse(reader);\n  return aggregate;\n};\n\n\n/**\n * New OFX reader.\n *\n * @return {OFXReader} new OFX reader.\n */\nAggregateUnmarshaller.prototype.newReader = function() {\n  return new BaseOFXReader/*NanoXMLOFXReader*/();\n};\n\n\n/**\n * The conversion.\n *\n * @return {StringConversion} The conversion.\n */\nAggregateUnmarshaller.prototype.getConversion = function() {\n  return this.conversion;\n};\n\n\n/**\n * The conversion.\n *\n * @param {StringConversion} conversion The conversion.\n */\nAggregateUnmarshaller.prototype.setConversion = function(conversion) {\n  this.conversion = conversion;\n};\n\n\n\n\nmodule.exports = AggregateUnmarshaller;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../util/inherit\");\nvar DefaultHandler = require(\"./DefaultHandler\");\nvar OFXReader = require(\"./OFXReader\");\nvar OFXV2ContentHandler = require(\"./OFXV2ContentHandler\");\nvar StringReader = require(\"../util/StringReader\");\nvar LOG = require(\"../util/log\");\nvar sax = require(\"sax\");\n\n\n/**\n * @type RegExp\n */\nvar OFX_2_PROCESSING_INSTRUCTION_PATTERN = /<\\\\?OFX ([^\\\\?]+)\\\\?>/;\n\n\n/**\n * Base class for an OFX reader.  Parses the headers and determines whether we're parsing an\n * OFX v2 or OFX v1 element.  For OFX v2, uses a standard SAX library.\n *\n * @class\n */\nfunction BaseOFXReader () {\n  /**\n   * @name BaseOFXReader#contentHandler\n   * @type OFXHandler\n   * @access private\n   */\n  this.contentHandler = new DefaultHandler();\n}\n\ninherit(BaseOFXReader, \"implements\", OFXReader);\n\n\n\n\n/**\n * The content handler.\n *\n * @return {OFXHandler} The content handler.\n */\nBaseOFXReader.prototype.getContentHandler = function() {\n  return this.contentHandler;\n};\n\n\n/**\n * The content handler.\n *\n * @param {OFXHandler} handler The content handler.\n */\nBaseOFXReader.prototype.setContentHandler = function(handler) {\n  this.contentHandler = handler;\n};\n\n\nfunction arraysEqual(a1, a2) {\n  if(a1.length !== a2.length) {\n    return false;\n  }\n  for(var i=0; i<a1.length; i++) {\n    if(a1[i] !== a2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Parse the text, including the headers.\n *\n * @param {String} text The text to parse.\n */\nBaseOFXReader.prototype.parse = function(text) {\n  var header = \"\";\n  var reader = new StringReader(text);\n  var firstElementStart = this.getFirstElementStart();\n  var buffer = new Array(firstElementStart.length);\n  reader.mark(firstElementStart.length);\n  var ch = reader.read(buffer);\n  while ((ch != -1) && (!arraysEqual(buffer, firstElementStart))) {\n    if (!this.contains(buffer, '<')) {\n      //if the buffer contains a '<', then we might already have marked the beginning.\n      reader.mark(firstElementStart.length);\n    }\n    ch = reader.read();\n    var shifted = this.shiftAndAppend(buffer, ch);\n    header += shifted;\n  }\n\n  if (ch == -1) {\n    throw new Error(\"Invalid OFX: no root <OFX> element!\");\n  }\n  else {\n    var matches = OFX_2_PROCESSING_INSTRUCTION_PATTERN.exec(header);\n    if (matches) {\n      if (LOG.parse) {\n        console.log(\"Processing OFX 2 header...\");\n      }\n      this.processOFXv2Headers(matches[1]);\n      reader.reset();\n      this.parseV2FromFirstElement(reader.remainder());\n    }\n    else {\n      if (LOG.parse) {\n        console.log(\"Processing OFX 1 headers...\");\n      }\n      this.processOFXv1Headers(header);\n      reader.reset();\n      this.parseV1FromFirstElement(reader.remainder());\n    }\n  }\n};\n\n\n/**\n * The first characters of the first OFX element, '<', 'O', 'F', 'X'\n *\n * @return {} The first characters of the OFX element.\n */\nBaseOFXReader.prototype.getFirstElementStart = function() {\n  return [ '<', 'O', 'F', 'X' ];\n};\n\n\n/**\n * Whether the specified buffer contains the specified character.\n *\n * @param {} buffer The buffer.\n * @param {} c The character to search for.\n * @return {boolean} Whether the specified buffer contains the specified character.\n */\nBaseOFXReader.prototype.contains = function(buffer, /*char*/ c) {\n  for (var i=0; i<buffer.length; i++) {\n    var ch = buffer[i];\n    if (ch === c) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\nBaseOFXReader.prototype.shiftAndAppend = function(buffer, /*char*/ c) {\n  var shifted = buffer[0];\n  for (var i = 0; i + 1 < buffer.length; i++) {\n    buffer[i] = buffer[i + 1];\n  }\n  buffer[buffer.length - 1] = c;\n  return shifted;\n};\n\n\n/**\n * Parse an OFX version 1 stream from the first OFX element (defined by the {@link BaseOFXReader#getFirstElementStart() first element characters}).\n *\n * @param {Reader} reader The reader.\n */\nBaseOFXReader.prototype.parseV1FromFirstElement = function(text) {\n  var strict = false;\n  var parser = sax.parser(strict);\n  var handler = new OFXV2ContentHandler(this.getContentHandler());\n  handler.install(parser);\n  parser.write(text);\n};\n\n\n/**\n * Parse an OFX version 2 stream from the first OFX element (defined by the {@link BaseOFXReader#getFirstElementStart() first element characters}).\n *\n * @param {string} text The text.\n */\nBaseOFXReader.prototype.parseV2FromFirstElement = function(text) {\n  var strict = true;\n  var parser = sax.parser(strict);\n  var handler = new OFXV2ContentHandler(this.getContentHandler());\n  handler.install(parser);\n  parser.write(text);\n};\n\n/**\n * Process the given characters as OFX version 1 headers.\n *\n * @param {String} chars The characters to process.\n */\nBaseOFXReader.prototype.processOFXv1Headers = function(chars) {\n  var lines = chars.split(/(\\n|\\r\\n)/);\n  for(var i=0; i<lines.length; i++) {\n    var line = lines[i];\n    var colonIndex = line.indexOf(':');\n    if (colonIndex >= 0) {\n      var name = line.substring(0, colonIndex);\n      var value = line.length > colonIndex ? line.substring(colonIndex + 1) : \"\";\n      this.contentHandler.onHeader(name, value);\n    }\n  }\n};\n\n/**\n * Process the given characters as OFX version 2 headers.\n *\n * @param {String} chars The characters to process.\n */\nBaseOFXReader.prototype.processOFXv2Headers = function(chars) {\n  var nameValuePairs = chars.split(\"\\\\s+\");\n  for (var nameValuePair in nameValuePairs) {\n    var equalsIndex = nameValuePair.indexOf('=');\n    if (equalsIndex >= 0) {\n      var name = nameValuePair.substring(0, equalsIndex);\n      var value = nameValuePair.length > equalsIndex ? nameValuePair.substring(equalsIndex + 1) : \"\";\n      value = value.replace('\"', ' ');\n      value = value.replace('\\'', ' ');\n      value = value.trim();\n      this.contentHandler.onHeader(name, value);\n    }\n  }\n};\n\n\n\n\nmodule.exports = BaseOFXReader;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../util/inherit\");\nvar OFXHandler = require(\"./OFXHandler\");\n\n/**\n * Default (no-op) implementation of an OFX handler.\n *\n * @class\n */\nfunction DefaultHandler () {\n}\n\ninherit(DefaultHandler, \"implements\", OFXHandler);\n\n\n\n\nDefaultHandler.prototype.onHeader = function(/*name, value*/) {\n};\n\n\nDefaultHandler.prototype.onElement = function(/*name, value*/) {\n};\n\n\nDefaultHandler.prototype.startAggregate = function(/*aggregateName*/) {\n};\n\n\nDefaultHandler.prototype.endAggregate = function(/*aggregateName*/) {\n};\n\n\n\n\nmodule.exports = DefaultHandler;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../util/inherit\");\n\nvar Status = require(\"../domain/data/common/Status\");\nvar StatusCode = require(\"../domain/data/common/StatusCode\");\nvar UnknownStatusCode = require(\"../domain/data/common/UnknownStatusCode\");\nvar StringConversion = require(\"./StringConversion\");\n\n/**\n * Utility class for conversion to/from OFX strings.\n *\n * @class\n */\nfunction DefaultStringConversion () {\n}\n\n\ninherit(DefaultStringConversion, \"implements\", StringConversion);\n\n\nDefaultStringConversion.prototype.toString = function(/*Object*/ value) {\n  if (!value) {\n    return null;\n  }\n  else if (value instanceof Boolean) {\n    return value ? \"Y\" : \"N\";\n  }\n  else if (value instanceof Date) {\n    return this.formatDate(value);\n  }\n  else if (typeof value === \"number\") {\n    return value + \"\";\n  }\n  else {\n    return value;\n  }\n};\n\n\nDefaultStringConversion.prototype.fromString = function(/*Class<E>*/ clazz, /*String*/ value) {\n  if (!value) {\n    return null;\n  }\n  else if (typeof clazz === \"object\") {\n    // enum\n    console.assert(value in clazz);\n    if(value in clazz) {\n      return clazz[value];\n    }\n  }\n  else if (inherit.isAssignableFrom(StatusCode, clazz)) {\n    var code = value;\n    var statusCode = Status.KnownCode.fromCode(code);\n    if (!statusCode) {\n      statusCode = new UnknownStatusCode(code, \"Unknown status code.\", Status.Severity.ERROR);\n    }\n    \n    return statusCode;\n  }\n  else if (inherit.isAssignableFrom(Boolean, clazz)) {\n    return \"Y\" === value.toUpperCase();\n  }\n  else if (inherit.isAssignableFrom(Date, clazz)) {\n    return this.parseDate(value);\n  }\n  return value;\n};\n\n\n/**\n * Parses a date according to OFX.\n *\n * @param {String} value The value of the date.\n * @return {Date} The date value.\n */\nDefaultStringConversion.prototype.parseDate = function(value) {\n  var year = parseInt(value.substr(0, 4));\n  var month = parseInt(value.substr(4, 2)) - 1; // javascript month numbers are zero-based\n  var day = parseInt(value.substr(6, 2));\n  var hour = parseInt(value.substr(8, 2));\n  var minute = parseInt(value.substr(10, 2));\n  var second = parseInt(value.substr(12, 2));\n  var milli = parseInt(value.substr(15, 3));\n\n  // add timezone offset\n  var bracket = value.indexOf(\"[\");\n  if(bracket != -1) {\n    var close = value.indexOf(\":\");\n    if(close === -1) {\n      close = value.indexOf(\"]\");\n    }\n    var gmtOffset = value.substring(bracket+1, close);\n    hour -= 1.0 * gmtOffset;\n  }\n  \n  // create date as UTC\n  return new Date(Date.UTC(year, month, day, hour, minute, second, milli));\n};\n\n\n/**\n * Pad a number with leading zeroes until it is of <tt>size</tt> length\n *\n * @param {int} num number\n * @param {int} size number of digits in final number\n * @return {string} padded number\n */\nfunction pad(num, size) {\n  var s = num+\"\";\n  while (s.length < size) {\n    s = \"0\" + s;\n  }\n  return s;\n}\n\n/**\n * Pad a number with trailing zeroes until it is of <tt>size</tt> length.\n * Intended for numbers after a decimal point to get a fixed number of decimals\n *\n * @param {int} num number\n * @param {int} size number of digits in final number\n * @return {string} padded number\n */\nfunction dpad(num, size) {\n  var s = num+\"\";\n  while (s.length < size) {\n    s = s + \"0\";\n  }\n  return s;\n}\n\n/**\n * Format the date according to the OFX spec.\n *\n * @param {Date} date The date.\n * @return {String} The date format.\n */\nDefaultStringConversion.prototype.formatDate = function(date) {\n  var gmt = new Date(date.valueOf() + date.getTimezoneOffset() * 60000);\n  return pad(gmt.getFullYear(), 4) +\n    pad(gmt.getMonth() + 1, 2) +\n    pad(gmt.getDay(), 2) +\n    pad(gmt.getHours(), 2) +\n    pad(gmt.getMinutes(), 2) +\n    pad(gmt.getSeconds(), 2) +\n    \".\" +\n    dpad(gmt.getMilliseconds(), 3);\n};\n\n\n\n\nmodule.exports = DefaultStringConversion;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n\n/**\n * An OFX aggregate is just an aggregate of name-value pairs that identify the elements and element values of the aggregate.\n * The element values can strings or another (sub)aggregate.  The implementation of a\n *\n * @class\n */\nfunction OFXAggregate() {\n}\n\n/**\n * The name of the OFX aggregate.\n *\n * @return {String} The name of the aggregate.\n */\nOFXAggregate.prototype.getName = function() { throw new Error(\"not implemented\"); };\n\n/**\n * Whether this aggregate contains the specified element.\n *\n * @param {String} elementName The name of the element.\n * @return {boolean} Whether this aggregate contains the specified element.\n */\nOFXAggregate.prototype.containsElement = function(/*elementName*/) { throw new Error(\"not implemented\"); };\n\n/**\n * The element names of this aggregate.\n *\n * @return {String[]} The element names of this aggregate.\n */\nOFXAggregate.prototype.elementNames = function() { throw new Error(\"not implemented\"); };\n\n/**\n * The value of the element.  This will be either a string or another OFXAggregate.\n *\n * @param {String} elementName The name of the element.\n * @return {Object} The value of the specified element.\n */\nOFXAggregate.prototype.getElementValue = function(/*elementName*/) { throw new Error(\"not implemented\"); };\n\n\nmodule.exports = OFXAggregate;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * Handler for events during OFX parsing.\n *\n * @class\n */\nfunction OFXHandler() {\n}\n\n/**\n * Handler an OFX header.\n *\n * @param {String} name The name of the header.\n * @param {String} value The value of the header.\n */\nOFXHandler.prototype.onHeader = function(/*name, value*/) { throw new Error(\"not implemented\"); };\n\n/**\n * Handle a new OFX element.\n *\n * @param {String} name The name of the element.\n * @param {String} value The value of the element.\n */\nOFXHandler.prototype.onElement = function(/*name, value*/) { throw new Error(\"not implemented\"); };\n\n/**\n * Handle the start of a new OFX aggregate.\n *\n * @param {String} aggregateName The name of the aggregate.\n */\nOFXHandler.prototype.startAggregate = function(/*aggregateName*/) { throw new Error(\"not implemented\"); };\n\n/**\n * Handle the end of an OFX aggregate.\n *\n * @param {String} aggregateName The aggregate name.\n */\nOFXHandler.prototype.endAggregate = function(/*aggregateName*/) { throw new Error(\"not implemented\"); };\n\n\nmodule.exports = OFXHandler;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * An event during OFX parsing.\n *\n * @class\n */\nfunction OFXParseEvent (/*Type*/ eventType, /*String*/ eventValue) {\n\n  /**\n   * @name OFXParseEvent#eventType\n   * @type Type\n   * @access private\n   */\n  this.eventType = eventType;\n\n  /**\n   * @name OFXParseEvent#eventValue\n   * @type String\n   * @access private\n   */\n  this.eventValue = eventValue;\n}\n\n\n\n\n\nOFXParseEvent.Type = {\n\n  CHARACTERS: 0,\n\n  ELEMENT: 1\n};\n\n\nOFXParseEvent.prototype.getEventType = function() {\n  return this.eventType;\n};\n\n\nOFXParseEvent.prototype.getEventValue = function() {\n  return this.eventValue;\n};\n\n\n\n\nmodule.exports = OFXParseEvent;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * Basic interface for reading an OFX document.\n *\n * @class\n */\nfunction OFXReader() {\n}\n\n/**\n * Set the handler for this OFX reader.\n *\n * @param {OFXHandler} handler The handler.\n */\nOFXReader.prototype.setContentHandler = function(/*handler*/) { throw new Error(\"not implemented\"); };\n\n/**\n * Parse a stream.\n *\n * @param {string} text The stream or reader to parse.\n */\nOFXReader.prototype.parse = function(/*text*/) { throw new Error(\"not implemented\"); };\n\n\nmodule.exports = OFXReader;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar Stack = require(\"../util/stack\");\nvar OFXParseEvent = require(\"./OFXParseEvent\");\nvar LOG = require(\"../util/log\");\n\n\n/**\n * @class\n * @param {sax.parser} parser\n * @param {OFXHandler} ofxHandler\n */\nfunction OFXV2ContentHandler(ofxHandler) {\n  if (!ofxHandler) {\n    throw new Error(\"An OFX handler must be supplied.\");\n  }\n  \n  /**\n   * @name OFXV2ContentHandler#eventStack\n   * @type Stack<OFXParseEvent>\n   * @access private\n   */\n  this.eventStack = new Stack();\n\n  /**\n   * @name OFXV2ContentHandler#ofxHandler\n   * @type OFXHandler\n   * @access private\n   */\n  this.ofxHandler = ofxHandler;\n\n  /**\n   * @name OFXV2ContentHandler#startedEvents\n   * @type OFXParseEvent[]\n   * @access private\n   */\n  this.startedEvents = [];\n}\n\n\n\nOFXV2ContentHandler.prototype.install = function(parser) {\n  var self = this;\n  parser.ontext = function(value) { self.ontext(value); };\n  parser.onopentag = function(params) { self.onopentag(params); };\n  parser.onclosetag = function(name) { self.onclosetag(name); };\n};\n\n\n\n// @Override\nOFXV2ContentHandler.prototype.onopentag = function(params) {\n  var qName = params.name;\n\n  if (LOG.parse) {\n    console.log(\"START ELEMENT: \" + qName);\n  }\n\n  if ((!this.eventStack.isEmpty()) && (this.eventStack.peek().getEventType() == OFXParseEvent.Type.ELEMENT) && (!this.isAlreadyStarted(this.eventStack.peek()))) {\n    var eventValue = this.eventStack.peek().getEventValue();\n    if (LOG.parse) {\n      console.log(\"Element \" + qName + \" is starting aggregate \" + eventValue);\n    }\n\n    //the last element started was not ended; we are assuming we've started a new aggregate.\n    this.ofxHandler.startAggregate(eventValue);\n    this.startedEvents.push(this.eventStack.peek());\n  }\n\n  this.eventStack.push(new OFXParseEvent(OFXParseEvent.Type.ELEMENT, qName));\n};\n\n\n/**\n * Whether the specified element aggregate has already been started.\n *\n * @param {OFXParseEvent} event The event containing the start.\n * @return {boolean} Whether the specified element aggregate has already been started.\n */\nOFXV2ContentHandler.prototype.isAlreadyStarted = function(event) {\n  return this.startedEvents.indexOf(event) != -1;\n};\n\n\n// @Override\nOFXV2ContentHandler.prototype.onclosetag = function(qName) {\n  if (LOG.parse) {\n    console.log(\"END ELEMENT: \" + qName);\n  }\n\n  var eventToFinish = this.eventStack.pop();\n  if (eventToFinish.getEventType() == OFXParseEvent.Type.CHARACTERS) {\n    var chars = eventToFinish.getEventValue().trim();\n\n    if (this.eventStack.isEmpty()) {\n      throw new Error(\"Illegal character data outside main OFX root element: \\\"\" + chars + \"\\\".\");\n    }\n    else {\n      var elementEvent = this.eventStack.pop();\n      if (elementEvent.getEventType() != OFXParseEvent.Type.ELEMENT) {\n        throw new Error(\"Illegal OFX event before characters \\\"\" + chars + \"\\\" (\" + elementEvent.getEventType() + \")!\");\n      }\n      else {\n        var value = elementEvent.getEventValue();\n        if (LOG.parse) {\n          console.log(\"Element \" + value + \" processed with value \" + chars);\n        }\n        this.ofxHandler.onElement(value, chars);\n      }\n    }\n  }\n  else if (eventToFinish.getEventType() == OFXParseEvent.Type.ELEMENT) {\n    //we're ending an aggregate (no character data on the stack).\n    if (qName === eventToFinish.getEventValue()) {\n      //the last element on the stack is ours; we're ending an OFX aggregate.\n      /*jshint -W004*/\n      var value = eventToFinish.getEventValue();\n      if (LOG.parse) {\n        console.log(\"Ending aggregate \" + value);\n      }\n      this.ofxHandler.endAggregate(value);\n      var i = this.startedEvents.indexOf(eventToFinish);\n      console.assert(i !== -1);\n      if (i > -1) {\n        this.startedEvents.splice(i, 1);\n      }\n    }\n    else {\n      throw new Error(\"Unexpected end tag: \" + eventToFinish.getEventValue());\n    }\n  }\n  else {\n    throw new Error(\"Illegal OFX event: \" + eventToFinish.getEventType());\n  }\n};\n\n\n// @Override\nOFXV2ContentHandler.prototype.ontext = function(value) {\n  if (value.trim().length > 0) {\n    var event;\n    if ((!this.eventStack.isEmpty()) && (this.eventStack.peek().getEventType() == OFXParseEvent.Type.CHARACTERS)) {\n      //append the characters...\n      event = new OFXParseEvent(OFXParseEvent.Type.CHARACTERS, this.eventStack.pop().getEventValue() + value);\n    }\n    else {\n      event = new OFXParseEvent(OFXParseEvent.Type.CHARACTERS, value);\n    }\n    this.eventStack.push(event);\n  }\n};\n\n\n\n\nmodule.exports = OFXV2ContentHandler;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * @class\n */\nfunction OFXWriter() {\n}\n\n/**\n * Write the specified headers.\n *\n * @param {} headers The headers to be written.\n */\nOFXWriter.prototype.writeHeaders = function(/*headers*/) { throw new Error(\"not implemented\"); };\n\n/**\n * Write the start of a new aggregate.\n *\n * @param {String} aggregateName The aggregate name.\n */\nOFXWriter.prototype.writeStartAggregate = function(/*aggregateName*/) { throw new Error(\"not implemented\"); };\n\n/**\n * Write an element to the current aggregate.\n *\n * @param {String} name The name of the element.\n * @param {String} value The value of the element.\n */\nOFXWriter.prototype.writeElement = function(/*name, value*/) { throw new Error(\"not implemented\"); };\n\n/**\n * Write the end of an aggregate.\n *\n * @param {String} aggregateName The aggregate name.\n * @throws IllegalArgumentException If the specified aggregate hasn't been started.\n */\nOFXWriter.prototype.writeEndAggregate = function(/*aggregateName*/) { throw new Error(\"not implemented\"); };\n\n/**\n * Close this OFX writer.\n */\nOFXWriter.prototype.close = function() { throw new Error(\"not implemented\"); };\n\n\nmodule.exports = OFXWriter;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * Interface for converting to/from OFX strings.\n *\n * @class\n */\nfunction StringConversion() {\n}\n\n/**\n * Convert the specified object to a string.\n *\n * @param {Object} value The value to convert to a string.\n * @return {String} The string.\n */\nStringConversion.prototype.toString = function(/*value*/) { throw new Error(\"not implemented\"); };\n\n/**\n * Convert the specified value to an object of the specified type.\n *\n * @param {Class<E>} clazz The class.\n * @param {String} value The value.\n * @return {E} The converted value.\n * @throws OFXSyntaxException If there was something wrong with the syntax of the string.\n */\nStringConversion.prototype.fromString = function(/*clazz, value*/) { throw new Error(\"not implemented\"); };\n\n\nmodule.exports = StringConversion;\n","\"use strict\";\n\nmodule.exports = {\n  AggregateAttribute: require(\"./AggregateAttribute\"),\n  AggregateInfo: require(\"./AggregateInfo\"),\n  AggregateIntrospector: require(\"./AggregateIntrospector\"),\n  AggregateMarshaller: require(\"./AggregateMarshaller\"),\n  AggregateStackContentHandler: require(\"./AggregateStackContentHandler\"),\n  AggregateUnmarshaller: require(\"./AggregateUnmarshaller\"),\n  BaseOFXReader: require(\"./BaseOFXReader\"),\n  DefaultHandler: require(\"./DefaultHandler\"),\n  DefaultStringConversion: require(\"./DefaultStringConversion\"),\n  OFXAggregate: require(\"./OFXAggregate\"),\n  OFXHandler: require(\"./OFXHandler\"),\n  OFXParseEvent: require(\"./OFXParseEvent\"),\n  OFXReader: require(\"./OFXReader\"),\n  OFXV2ContentHandler: require(\"./OFXV2ContentHandler\"),\n  OFXWriter: require(\"./OFXWriter\"),\n  StringConversion: require(\"./StringConversion\"),\n  \n  v1: {\n    OFXV1Writer: require(\"./v1/OFXV1Writer\"),\n  },\n  v2: {\n    OFXV2Writer: require(\"./v2/OFXV2Writer\"),\n  },\n};\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../util/inherit\");\nvar OutputStreamWriter = require(\"../../util/OutputStreamWriter\");\nvar OFXWriter = require(\"../OFXWriter\");\n\n/**\n * OFX writer to SGML, suitable for OFX versions < 2.0.\n *\n * @class\n */\nfunction OFXV1Writer (/*Uint8Array*/ out) {\n\n  /**\n   * @name OFXV1Writer#LINE_SEPARATOR\n   * @type String\n   */\n  this.LINE_SEPARATOR = \"\\r\\n\";\n\n  /**\n   * @name OFXV1Writer#headersWritten\n   * @type boolean\n   * @access protected\n   */\n  this.headersWritten = false;\n\n  /**\n   * @name OFXV1Writer#writer\n   * @type OutputStreamWriter\n   * @access protected\n   */\n  this.writer = this.newWriter(out);\n\n  /**\n   * @name OFXV1Writer#writeAttributesOnNewLine\n   * @type boolean\n   * @access private\n   */\n  this.writeAttributesOnNewLine = false;\n}\n\ninherit(OFXV1Writer, \"implements\", OFXWriter);\n\n\n\nOFXV1Writer.prototype.newWriter = function(/*OutputStream*/ out) {\n  return new OutputStreamWriter(out, \"ISO-8859-1\");\n};\n\n\nOFXV1Writer.prototype.writeHeaders = function(/*object*/ headers) {\n  if (this.headersWritten) {\n    throw new Error(\"Headers have already been written!\");\n  }\n\n  //write out the 1.0 headers\n  this.println(\"OFXHEADER:100\");\n  this.println(\"DATA:OFXSGML\");\n  this.println(\"VERSION:102\");\n\n  this.print(\"SECURITY:\");\n  var security = headers[\"SECURITY\"];\n  if (!security) {\n    security = \"NONE\";\n  }\n  this.println(security);\n  this.println(\"ENCODING:USASCII\"); //too many ofx v1 servers don't read unicode...\n  this.println(\"CHARSET:1252\"); //windows-compatible.\n  this.println(\"COMPRESSION:NONE\");\n  this.print(\"OLDFILEUID:\");\n  var olduid = headers[\"OLDFILEUID\"];\n  if (!olduid) {\n    olduid = \"NONE\";\n  }\n  this.println(olduid);\n  this.print(\"NEWFILEUID:\");\n  var uid = headers[\"NEWFILEUID\"];\n  if (!uid) {\n    uid = \"NONE\";\n  }\n  this.println(uid);\n  this.println();\n\n  this.headersWritten = true;\n};\n\n\nOFXV1Writer.prototype.writeStartAggregate = function(/*String*/ aggregateName) {\n  this.print('<');\n  this.print(aggregateName);\n  this.print('>');\n  if (this.isWriteAttributesOnNewLine()) {\n    this.println();\n  }\n};\n\n\nOFXV1Writer.prototype.writeElement = function(/*String*/ name, /*String*/ value) {\n  if (!value) {\n    throw new Error(\"Illegal element value for element '\" + name + \"' (value must not be null or empty).\");\n  }\n\n  //todo: optimize performance of the character escaping\n  if (value.indexOf('&') >= 0) {\n    value = value.replace(\"&\", \"&amp;\");\n  }\n\n  if (value.indexOf('<') >= 0) {\n    value = value.replace(\"<\", \"&lt;\");\n  }\n\n  if (value.indexOf('>') >= 0) {\n    value = value.replace(\">\", \"&gt;\");\n  }\n  \n  this.print('<');\n  this.print(name);\n  this.print('>');\n  this.print(value);\n  if (this.isWriteAttributesOnNewLine()) {\n    this.println();\n  }\n};\n\n\nOFXV1Writer.prototype.writeEndAggregate = function(/*String*/ aggregateName) {\n  this.print(\"</\");\n  this.print(aggregateName);\n  this.print('>');\n  if (this.isWriteAttributesOnNewLine()) {\n    this.println();\n  }\n};\n\n\nOFXV1Writer.prototype.isWriteAttributesOnNewLine = function() {\n  return this.writeAttributesOnNewLine;\n};\n\n\nOFXV1Writer.prototype.setWriteAttributesOnNewLine = function(/*boolean*/ writeAttributesOnNewLine) {\n  this.writeAttributesOnNewLine = writeAttributesOnNewLine;\n};\n\n\nOFXV1Writer.prototype.close = function() {\n  this.flush();\n  this.writer.write(this.LINE_SEPARATOR); // ensure newline at end of request\n  this.writer.close();\n};\n\n\nOFXV1Writer.prototype.flush = function() {\n  this.writer.flush();\n};\n\n\nOFXV1Writer.prototype.println = function(/*String*/ line) {\n  if(line !== undefined && line !== null) {\n    this.print(line);\n  }\n  this.writer.write(this.LINE_SEPARATOR);\n};\n\n\nOFXV1Writer.prototype.print = function(/*String*/ line) {\n  this.writer.write(!line ? \"null\" : line);\n};\n\n\n\nmodule.exports = OFXV1Writer;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar inherit = require(\"../../util/inherit\");\n\nvar OFXV1Writer = require(\"../v1/OFXV1Writer\");\nvar OutputStreamWriter = require(\"../../util/OutputStreamWriter\");\n\n/**\n * OFX writer to XML, suitable for OFX version 2.0.\n *\n * @class\n */\nfunction OFXV2Writer () {\n  OFXV1Writer.call(this);\n}\n\ninherit(OFXV2Writer, \"extends\", OFXV1Writer);\n\n\n\n// @Override\nOFXV2Writer.prototype.newWriter = function(/*OutputStream*/ out) {\n  return new OutputStreamWriter(out, \"UTF-8\");\n};\n\n\nOFXV2Writer.prototype.writeHeaders = function(/*object*/ headers) {\n  if (this.headersWritten) {\n    throw new Error(\"Headers have already been written!\");\n  }\n\n  //write out the XML PI\n  this.print(\"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\" ?>\");\n  var security = headers.get(\"SECURITY\");\n  if (!security) {\n    security = \"NONE\";\n  }\n  var olduid = headers.get(\"OLDFILEUID\");\n  if (!olduid) {\n    olduid = \"NONE\";\n  }\n  // println(olduid);\n  var uid = headers.get(\"NEWFILEUID\");\n  if (!uid) {\n    uid = \"NONE\";\n  }\n\n  this.print(\"<?OFX OFXHEADER=\\\"200\\\" VERSION=\\\"202\\\" SECURITY=\\\"\" + security + \"\\\" OLDFILEUID=\\\"\" + olduid + \"\\\" NEWFILEUID=\\\"\" + uid + \"\\\"?>\");\n  this.headersWritten = true;\n};\n\n\nOFXV2Writer.prototype.writeElement = function(/*String*/ name, /*String*/ value) {\n  OFXV1Writer.prototype.writeElement.call(this, name, value);\n  this.print(\"</\");\n  this.print(name);\n  this.print('>');\n};\n\n\n// @Override\nOFXV2Writer.prototype.isWriteAttributesOnNewLine = function() {\n  return false;\n};\n\n\n\n\nmodule.exports = OFXV2Writer;\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar AggregateIntrospector = require(\"../io/AggregateIntrospector\");\n\nvar Aggregate = {};\n\nAggregate.add = function(name, clazz) {\n  AggregateIntrospector.addAggregate(name, clazz);\n};\n\nmodule.exports = Aggregate;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar AggregateIntrospector = require(\"../io/AggregateIntrospector\");\n\nvar ChildAggregate = {};\n\nChildAggregate.add = function(clazz, options) {\n  options.name = options.name || \"##not_specified##\";\n  AggregateIntrospector.addChildAggregate(clazz, options);\n};\n\nmodule.exports = ChildAggregate;\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar AggregateIntrospector = require(\"../io/AggregateIntrospector\");\n\nvar Element = {};\n\nElement.add = function(clazz, options) {\n  AggregateIntrospector.addElement(clazz, options);\n};\n\nmodule.exports = Element;\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar AggregateIntrospector = require(\"../io/AggregateIntrospector\");\n\nvar Header = {};\n\nHeader.add = function(clazz, options) {\n  AggregateIntrospector.addHeader(clazz, options);\n};\n\nmodule.exports = Header;\n","\"use strict\";\n\nmodule.exports = {\n  Aggregate: require('./Aggregate'),\n  ChildAggregate: require('./ChildAggregate'),\n  Element: require('./Element'),\n  Header: require('./Header'),\n};\n","\"use strict\";\n\nfunction OutputStreamWriter(/*array*/ out, /*string*/ encoding) {\n  this.out = out;\n  this.encoding = encoding;\n}\n\n\nOutputStreamWriter.prototype.flush = function() {\n};\n\n\nOutputStreamWriter.prototype.close = function() {\n};\n\n\nOutputStreamWriter.prototype.write = function(data) {\n  Array.prototype.push.apply(this.out, data.split(''));\n};\n\n\n\nmodule.exports = OutputStreamWriter;\n","\"use strict\";\n\nfunction StringReader(text) {\n  this._text = text;\n  this._cursor = 0;\n  this._mark = 0;\n}\n\nStringReader.prototype.read = function() {\n  if(this._cursor >= this._text.length) {\n    return -1;\n  } else {\n    if(arguments.length === 0) {\n      return this.readChar();\n    } else {\n      var cbuf = arguments[0];\n      var offset = arguments[1] || 0;\n      var length = arguments[2] || cbuf.length;\n      length = Math.min(length, this._text.length - this._cursor);\n      for(var i=0; i<length; i++) {\n        cbuf[offset + i] = this.readChar();\n      }\n      return length;\n    }\n  }\n};\n\n\nStringReader.prototype.readChar = function() {\n  console.assert(this._cursor < this._text.length);\n  var ch = this._text[this._cursor];\n  this._cursor++;\n  return ch;\n};\n\n\nStringReader.prototype.close = function() {\n  this._text = null;\n  this._cursor = null;\n  this._mark = null;\n};\n\n\nStringReader.prototype.mark = function(/*readLimit*/) {\n  this._mark = this._cursor;\n};\n\n\nStringReader.prototype.reset = function() {\n  this._cursor = this._mark;\n};\n\n\nStringReader.prototype.remainder = function() {\n  return this._text.substring(this._cursor);\n};\n\n\nmodule.exports = StringReader;\n","\"use strict\";\n\nmodule.exports = {\n  inherit: require(\"./inherit\"),\n  log: require(\"./log\"),\n  OutputStreamWriter: require(\"./OutputStreamWriter\"),\n  stack: require(\"./stack\"),\n  StringReader: require(\"./StringReader\"),\n};\n","\"use strict\";\n\nvar inherits = require(\"inherits\");\n\n\nvar AggregateIntrospector = require(\"../io/AggregateIntrospector\");\n\nfunction inherit(child, type, parent) {\n  switch(type) {\n    case 'extends':\n      inherits(child, parent);\n//      child.prototype = Object.create(parent);\n//      child.prototype.constructor = child;\n      \n      AggregateIntrospector.extend(child, parent);\n      break;\n      \n    case 'implements':\n      inherits(child, parent);\n      break;\n      \n    default:\n      throw new Error(\"unknown inheritance type\");\n  }\n}\n\n\ninherit.isAssignableFrom = function(entryType, assignableTo) {\n  return (assignableTo === entryType) ||\n    ((typeof entryType === \"function\") && (assignableTo.prototype instanceof entryType));\n};\n\n\nmodule.exports = inherit;\n","\n\nmodule.exports = {\n  /**\n   * recoverable but possibly problematic messages\n   */\n  warning: true,\n  \n  /**\n   * informational status messages\n   */\n  info: false,\n  \n  /**\n   * full text of messages sent & received\n   */\n  network: false,\n  \n  /**\n   * detailed ofx parsing status messages\n   */\n  parse: false,\n};\n","\"use strict\";\n\nfunction Stack() {\n  this.values = [];\n}\n\n\nStack.prototype.push = function() {\n  return Array.prototype.push.apply(this.values, arguments);\n};\n\n\nStack.prototype.pop = function() {\n  return Array.prototype.pop.apply(this.values, arguments);\n};\n\n\nStack.prototype.peek = function() {\n  if(this.values.length === 0) {\n    return null;\n  } else {\n    return this.values[this.values.length - 1];\n  }\n};\n\n\nStack.prototype.isEmpty = function() {\n  return this.values.length === 0;\n};\n\nmodule.exports = Stack;\n"],"sourceRoot":"/source/"}