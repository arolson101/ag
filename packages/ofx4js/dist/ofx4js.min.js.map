{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///dist/ofx4js.min.js","webpack:///webpack/bootstrap 8adf99d6825af88581d0","webpack:///../../OFXException.ts","webpack:///../../OFXRuntimeException.ts","webpack:///../../meta/Aggregate.ts","webpack:///../../meta/PropertyDescriptor.ts","webpack:///../../meta/ChildAggregate.ts","webpack:///../../meta/Header.ts","webpack:///../../meta/Element.ts","webpack:///../../log/Log.ts","webpack:///../../collections/SortedSet.ts","webpack:///../../io/AggregateAttribute.ts","webpack:///../../io/AggregateInfo.ts","webpack:///../../io/AggregateIntrospector.ts","webpack:///../../meta/Aggregate_Add.ts","webpack:///../../meta/Element_add.ts","webpack:///../../domain/data/common/StatusCode.ts","webpack:///../../domain/data/common/Status.ts","webpack:///../../OFXStatusException.ts","webpack:///../../OFXTransactionException.ts","webpack:///../../UnsupportedOFXSecurityTypeException.ts","webpack:///../../domain/data/common/BalanceInfo.ts","webpack:///../../meta/ChildAggregate_add.ts","webpack:///../../domain/data/banking/AccountType.ts","webpack:///../../domain/data/banking/BankAccountDetails.ts","webpack:///../../domain/data/creditcard/CreditCardAccountDetails.ts","webpack:///../../domain/data/common/CorrectionAction.ts","webpack:///../../domain/data/common/Currency.ts","webpack:///../../domain/data/common/Payee.ts","webpack:///../../domain/data/common/TransactionType.ts","webpack:///../../domain/data/common/Transaction.ts","webpack:///../../domain/data/common/TransactionList.ts","webpack:///../../domain/data/investment/accounts/InvestmentAccountDetails.ts","webpack:///../../domain/data/investment/accounts/AccountType.ts","webpack:///../../domain/data/investment/accounts/ActivationStatus.ts","webpack:///../../domain/data/investment/accounts/UnitedStatesAccountType.ts","webpack:///../../domain/data/investment/accounts/InvestmentAccountInfo.ts","webpack:///../../domain/data/common/AccountStatus.ts","webpack:///../../domain/data/banking/BankAccountInfo.ts","webpack:///../../domain/data/creditcard/CreditCardAccountInfo.ts","webpack:///../../domain/data/signup/AccountProfile.ts","webpack:///../../domain/data/profile/SynchronizationCapability.ts","webpack:///../../domain/data/ApplicationSecurity.ts","webpack:///../../domain/data/MessageSetType.ts","webpack:///../../domain/data/profile/CharacterType.ts","webpack:///../../domain/data/ResponseMessage.ts","webpack:///../../domain/data/common/StatementResponse.ts","webpack:///../../domain/data/investment/accounts/SubAccountType.ts","webpack:///../../domain/data/seclist/SecurityId.ts","webpack:///../../domain/data/investment/positions/InvestmentPosition.ts","webpack:///../../domain/data/investment/positions/Inv401KSource.ts","webpack:///../../domain/data/investment/positions/PositionType.ts","webpack:///../../domain/data/investment/positions/BasePosition.ts","webpack:///../../domain/data/investment/positions/InvestmentPositionList.ts","webpack:///../../domain/data/seclist/SecurityInfo.ts","webpack:///../../domain/data/seclist/BaseSecurityInfo.ts","webpack:///../../domain/data/seclist/SecurityList.ts","webpack:///../../domain/data/seclist/SecurityListResponse.ts","webpack:///../../domain/data/investment/transactions/TransactionType.ts","webpack:///../../domain/data/investment/transactions/BaseInvestmentTransaction.ts","webpack:///../../domain/data/investment/transactions/InvestmentTransaction.ts","webpack:///../../domain/data/investment/transactions/BaseOtherInvestmentTransaction.ts","webpack:///../../domain/data/investment/transactions/InvestmentBankTransaction.ts","webpack:///../../domain/data/investment/transactions/InvestmentTransactionList.ts","webpack:///../../domain/data/common/BalanceRecord.ts","webpack:///../../domain/data/investment/statements/BalanceList.ts","webpack:///../../domain/data/investment/statements/InvestmentBalance.ts","webpack:///../../domain/data/investment/statements/InvestmentStatementResponse.ts","webpack:///../../domain/data/seclist/SecurityRequest.ts","webpack:///../../client/NoOFXResponseException.ts","webpack:///../../client/context/DefaultApplicationContext.ts","webpack:///../../client/context/OFXApplicationContextHolder.ts","webpack:///../../domain/data/RequestMessage.ts","webpack:///../../domain/data/common/StatementRange.ts","webpack:///../../domain/data/common/StatementRequest.ts","webpack:///../../domain/data/ResponseMessageSet.ts","webpack:///../../domain/data/common/StatusHolder.ts","webpack:///../../domain/data/TransactionWrappedResponseMessage.ts","webpack:///../../domain/data/banking/BankStatementResponse.ts","webpack:///../../domain/data/banking/BankStatementResponseTransaction.ts","webpack:///../../domain/data/banking/BankingResponseMessageSet.ts","webpack:///../../domain/data/banking/BankStatementRequest.ts","webpack:///../../domain/data/RequestMessageSet.ts","webpack:///../../domain/data/TransactionWrappedRequestMessage.ts","webpack:///../../domain/data/banking/BankStatementRequestTransaction.ts","webpack:///../../domain/data/banking/BankingRequestMessageSet.ts","webpack:///../../client/impl/BaseAccountImpl.ts","webpack:///../../domain/data/signon/FinancialInstitution.ts","webpack:///../../domain/data/signon/SignonRequest.ts","webpack:///../../domain/data/signon/PasswordChangeRequest.ts","webpack:///../../domain/data/signon/PasswordChangeRequestTransaction.ts","webpack:///../../domain/data/signon/SignonRequestMessageSet.ts","webpack:///../../domain/data/signup/AccountInfoRequest.ts","webpack:///../../domain/data/signup/AccountInfoRequestTransaction.ts","webpack:///../../domain/data/signup/SignupRequestMessageSet.ts","webpack:///../../domain/data/signup/AccountInfoResponse.ts","webpack:///../../domain/data/signup/AccountInfoResponseTransaction.ts","webpack:///../../domain/data/signup/SignupResponseMessageSet.ts","webpack:///../../domain/data/profile/ClientRoutingCapability.ts","webpack:///../../domain/data/profile/ProfileRequest.ts","webpack:///../../domain/data/profile/ProfileRequestTransaction.ts","webpack:///../../domain/data/profile/ProfileRequestMessageSet.ts","webpack:///../../domain/data/profile/CoreMessageSetInfo.ts","webpack:///../../domain/data/profile/VersionSpecificMessageSetInfo.ts","webpack:///../../domain/data/profile/AbstractMessageSetInfo.ts","webpack:///../../domain/data/profile/MessageSetInfoList.ts","webpack:///../../domain/data/profile/SignonInfo.ts","webpack:///../../domain/data/profile/SignonInfoList.ts","webpack:///../../domain/data/profile/ProfileResponse.ts","webpack:///../../domain/data/profile/ProfileResponseTransaction.ts","webpack:///../../domain/data/profile/ProfileResponseMessageSet.ts","webpack:///../../meta/Header_add.ts","webpack:///../../domain/data/RequestEnvelope.ts","webpack:///../../domain/data/signon/PasswordChangeResponse.ts","webpack:///../../domain/data/signon/PasswordChangeResponseTransaction.ts","webpack:///../../domain/data/signon/SignonResponse.ts","webpack:///../../domain/data/signon/SignonResponseMessageSet.ts","webpack:///../../domain/data/ResponseEnvelope.ts","webpack:///../../client/net/OFXConnectionException.ts","webpack:///../../domain/data/investment/statements/IncludePosition.ts","webpack:///../../domain/data/investment/statements/InvestmentStatementRequest.ts","webpack:///../../domain/data/investment/statements/InvestmentStatementRequestTransaction.ts","webpack:///../../domain/data/investment/statements/InvestmentStatementRequestMessageSet.ts","webpack:///../../domain/data/investment/statements/InvestmentStatementResponseTransaction.ts","webpack:///../../domain/data/investment/statements/InvestmentStatementResponseMessageSet.ts","webpack:///../../domain/data/seclist/SecurityListRequest.ts","webpack:///../../domain/data/seclist/SecurityListRequestTransaction.ts","webpack:///../../domain/data/seclist/SecurityListRequestMessageSet.ts","webpack:///../../domain/data/seclist/SecurityListResponseTransaction.ts","webpack:///../../domain/data/seclist/SecurityListResponseMessageSet.ts","webpack:///../../client/impl/InvestmentAccountImpl.ts","webpack:///../../client/impl/FinancialInstitutionImpl.ts","webpack:///../../client/impl/BankingAccountImpl.ts","webpack:///../../client/impl/BaseFinancialInstitutionData.ts","webpack:///../../domain/data/creditcard/CreditCardStatementRequest.ts","webpack:///../../domain/data/creditcard/CreditCardStatementRequestTransaction.ts","webpack:///../../domain/data/creditcard/CreditCardRequestMessageSet.ts","webpack:///../../domain/data/creditcard/CreditCardStatementResponse.ts","webpack:///../../domain/data/creditcard/CreditCardStatementResponseTransaction.ts","webpack:///../../domain/data/creditcard/CreditCardResponseMessageSet.ts","webpack:///../../client/impl/CreditCardAccountImpl.ts","webpack:///../../client/net/OFXServerException.ts","webpack:///../../io/OFXParseException.ts","webpack:///../../domain/data/common/UnknownStatusCode.ts","webpack:///../../io/DefaultStringConversion.ts","webpack:///../../io/AggregateMarshaller.ts","webpack:///../../collections/Stack.ts","webpack:///../../io/OFXSyntaxException.ts","webpack:///../../io/AggregateStackContentHandler.ts","webpack:///../../io/StringReader.ts","webpack:///../../io/DefaultHandler.ts","webpack:///../../io/OFXParseEvent.ts","webpack:///../../io/OFXV2ContentHandler.ts","webpack:///../../io/BaseOFXReader.ts","webpack:///../../io/AggregateUnmarshaller.ts","webpack:///../../io/StreamWriter.ts","webpack:///../../io/v1/OFXV1Writer.ts","webpack:///../../client/net/OFXV1Connection.ts","webpack:///../../io/v2/OFXV2Writer.ts","webpack:///../../client/net/OFXV2Connection.ts","webpack:///../../domain/data/common/ProcessorDayOff.ts","webpack:///../../domain/data/common/T1099Request.ts","webpack:///../../domain/data/common/T1099Response.ts","webpack:///../../domain/data/common/TransferInfo.ts","webpack:///../../domain/data/common/TransferStatusEvent.ts","webpack:///../../domain/data/common/TransferStatus.ts","webpack:///../../domain/data/investment/positions/DebtPosition.ts","webpack:///../../domain/data/investment/positions/MutualFundPosition.ts","webpack:///../../domain/data/investment/positions/ShortOptionSecurity.ts","webpack:///../../domain/data/investment/positions/OptionsPosition.ts","webpack:///../../domain/data/investment/positions/OtherPosition.ts","webpack:///../../domain/data/investment/positions/StockPosition.ts","webpack:///../../domain/data/investment/transactions/OriginalCurrency.ts","webpack:///../../domain/data/investment/transactions/BuyInvestmentTransaction.ts","webpack:///../../domain/data/investment/transactions/BaseBuyInvestmentTransaction.ts","webpack:///../../domain/data/investment/transactions/SellInvestmentTransaction.ts","webpack:///../../domain/data/investment/transactions/BaseSellInvestmentTransaction.ts","webpack:///../../domain/data/investment/transactions/BuyDebtTransaction.ts","webpack:///../../domain/data/investment/transactions/BuyType.ts","webpack:///../../domain/data/investment/transactions/BuyMutualFundTransaction.ts","webpack:///../../domain/data/investment/transactions/OptionBuyType.ts","webpack:///../../domain/data/investment/transactions/BuyOptionTransaction.ts","webpack:///../../domain/data/investment/transactions/BuyOtherTransaction.ts","webpack:///../../domain/data/investment/transactions/BuyStockTransaction.ts","webpack:///../../domain/data/investment/transactions/CloseOptionAction.ts","webpack:///../../domain/data/investment/transactions/CloseOptionTransaction.ts","webpack:///../../domain/data/investment/transactions/IncomeType.ts","webpack:///../../domain/data/investment/transactions/IncomeTransaction.ts","webpack:///../../domain/data/investment/transactions/InvestmentExpenseTransaction.ts","webpack:///../../domain/data/investment/transactions/JournalFundTransaction.ts","webpack:///../../domain/data/investment/transactions/JournalSecurityTransaction.ts","webpack:///../../domain/data/investment/transactions/MarginInterestTransaction.ts","webpack:///../../domain/data/investment/transactions/OptionSellType.ts","webpack:///../../domain/data/investment/transactions/ReinvestIncomeTransaction.ts","webpack:///../../domain/data/investment/transactions/RelatedOptionType.ts","webpack:///../../domain/data/investment/transactions/ReturnOfCapitalTransaction.ts","webpack:///../../domain/data/investment/transactions/SellDebtReason.ts","webpack:///../../domain/data/investment/transactions/SellDebtTransaction.ts","webpack:///../../domain/data/investment/transactions/SellType.ts","webpack:///../../domain/data/investment/transactions/SellMutualFundTransaction.ts","webpack:///../../domain/data/investment/transactions/SellOptionTransaction.ts","webpack:///../../domain/data/investment/transactions/SellOtherTransaction.ts","webpack:///../../domain/data/investment/transactions/SellStockTransaction.ts","webpack:///../../domain/data/investment/transactions/SplitTransaction.ts","webpack:///../../domain/data/investment/transactions/TransferAction.ts","webpack:///../../domain/data/investment/transactions/TransferInvestmentTransaction.ts","webpack:///../../domain/data/profile/info/banking/EmailProfile.ts","webpack:///../../domain/data/profile/info/banking/StopCheckProfile.ts","webpack:///../../domain/data/profile/info/common/ImageProfile.ts","webpack:///../../domain/data/profile/info/common/TransferProfile.ts","webpack:///../../domain/data/profile/info/BankingV1MessageSetInfo.ts","webpack:///../../domain/data/profile/info/BankingMessageSetInfo.ts","webpack:///../../domain/data/profile/info/BillpayV1MessageSetInfo.ts","webpack:///../../domain/data/profile/info/BillpayMessageSetInfo.ts","webpack:///../../domain/data/profile/info/CreditCardV1MessageSetInfo.ts","webpack:///../../domain/data/profile/info/CreditCardMessageSetInfo.ts","webpack:///../../domain/data/profile/info/EmailV1MessageSetInfo.ts","webpack:///../../domain/data/profile/info/EmailMessageSetInfo.ts","webpack:///../../domain/data/profile/info/InterbankTransferV1MessageSetInfo.ts","webpack:///../../domain/data/profile/info/InterbankTransferMessageSetInfo.ts","webpack:///../../domain/data/profile/info/InvestmentV1MessageSetInfo.ts","webpack:///../../domain/data/profile/info/InvestmentMessageSetInfo.ts","webpack:///../../domain/data/profile/info/ProfileV1MessageSetInfo.ts","webpack:///../../domain/data/profile/info/ProfileMessageSetInfo.ts","webpack:///../../domain/data/profile/info/SecurityListV1MessageSetInfo.ts","webpack:///../../domain/data/profile/info/SecurityListMessageSetInfo.ts","webpack:///../../domain/data/profile/info/SignOnV1MessageSetInfo.ts","webpack:///../../domain/data/profile/info/SignOnMessageSetInfo.ts","webpack:///../../domain/data/profile/info/signup/ClientEnrollment.ts","webpack:///../../domain/data/profile/info/signup/OtherEnrollment.ts","webpack:///../../domain/data/profile/info/signup/WebEnrollment.ts","webpack:///../../domain/data/profile/info/SignupV1MessageSetInfo.ts","webpack:///../../domain/data/profile/info/SignupMessageSetInfo.ts","webpack:///../../domain/data/profile/info/WireTransferV1MessageSetInfo.ts","webpack:///../../domain/data/profile/info/WireTransferMessageSetInfo.ts","webpack:///../../domain/data/seclist/AssetClass.ts","webpack:///../../domain/data/seclist/CallType.ts","webpack:///../../domain/data/seclist/CouponFrequency.ts","webpack:///../../domain/data/seclist/DebtClass.ts","webpack:///../../domain/data/seclist/DebtType.ts","webpack:///../../domain/data/seclist/DebtSecurityInfo.ts","webpack:///../../domain/data/seclist/MutualFundType.ts","webpack:///../../domain/data/seclist/MutualFundSecurityInfo.ts","webpack:///../../domain/data/seclist/OptionType.ts","webpack:///../../domain/data/seclist/OptionSecurityInfo.ts","webpack:///../../domain/data/seclist/OtherSecurityInfo.ts","webpack:///../../domain/data/seclist/StockType.ts","webpack:///../../domain/data/seclist/StockSecurityInfo.ts","webpack:///../../domain/data/tax1099/ProcDet.ts","webpack:///../../domain/data/tax1099/ExtDBInfo.ts","webpack:///../../domain/data/tax1099/PayerAddress.ts","webpack:///../../domain/data/tax1099/RecAddress.ts","webpack:///../../domain/data/tax1099/Tax1099B.ts","webpack:///../../domain/data/tax1099/Tax1099DIV.ts","webpack:///../../domain/data/tax1099/Tax1099INT.ts","webpack:///../../domain/data/tax1099/Tax1099MISC.ts","webpack:///../../domain/data/tax1099/Tax1099OID.ts","webpack:///../../domain/data/tax1099/Tax1099R.ts","webpack:///../../domain/data/tax1099/Tax1099Request.ts","webpack:///../../domain/data/tax1099/Tax1099RequestTransaction.ts","webpack:///../../domain/data/tax1099/Tax1099RequestMessageSet.ts","webpack:///../../domain/data/tax1099/Tax1099Response.ts","webpack:///../../domain/data/tax1099/Tax1099ResponseTransaction.ts","webpack:///../../domain/data/tax1099/Tax1099ResponseMessageSet.ts","webpack:///../../export.ts","webpack:///../../io/RequiredAttributeException.ts","webpack:///./~/uuid/uuid.js","webpack:///./~/uuid/rng-browser.js","webpack:///./~/sax/lib/sax.js","webpack:///./~/buffer/index.js","webpack:///./~/base64-js/index.js","webpack:///./~/ieee754/index.js","webpack:///./~/buffer/~/isarray/index.js","webpack:///./~/stream-browserify/index.js","webpack:///./~/events/events.js","webpack:///./~/inherits/inherits_browser.js","webpack:///./~/stream-browserify/~/readable-stream/readable.js","webpack:///./~/process/browser.js","webpack:///./~/stream-browserify/~/readable-stream/lib/_stream_readable.js","webpack:///./~/process-nextick-args/index.js","webpack:///./~/stream-browserify/~/isarray/index.js","webpack:///./~/buffer-shims/index.js","webpack:///./~/core-util-is/lib/util.js","webpack:///./~/stream-browserify/~/readable-stream/lib/internal/streams/BufferList.js","webpack:///./~/stream-browserify/~/readable-stream/lib/_stream_duplex.js","webpack:///./~/stream-browserify/~/readable-stream/lib/_stream_writable.js","webpack:///./~/timers-browserify/main.js","webpack:///./~/setimmediate/setImmediate.js","webpack:///./~/util-deprecate/browser.js","webpack:///./~/string_decoder/index.js","webpack:///./~/stream-browserify/~/readable-stream/lib/_stream_transform.js","webpack:///./~/stream-browserify/~/readable-stream/lib/_stream_passthrough.js","webpack:///./~/stream-browserify/~/readable-stream/writable.js","webpack:///./~/stream-browserify/~/readable-stream/duplex.js","webpack:///./~/stream-browserify/~/readable-stream/transform.js","webpack:///./~/stream-browserify/~/readable-stream/passthrough.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","ofx4js","__extends","d","b","__","constructor","hasOwnProperty","prototype","Object","create","ofx4js.OFXException","ofx4js.OFXException.constructor","ofx4js.OFXRuntimeException","ofx4js.OFXRuntimeException.constructor","ofx4js.meta","ofx4js.meta.Aggregate","ofx4js.meta.Aggregate.constructor","ofx4js.meta.Aggregate.value","ofx4js.meta._default","ofx4js.meta.isAssignableFrom","ofx4js.meta.PropertyDescriptor","ofx4js.meta.PropertyDescriptor.constructor","ofx4js.meta.PropertyDescriptor.getPropertyType","ofx4js.meta.PropertyDescriptor.getReadMethod","ofx4js.meta.PropertyDescriptor.getWriteMethod","ofx4js.meta.ChildAggregate","ofx4js.meta.ChildAggregate.constructor","ofx4js.meta.ChildAggregate.name","ofx4js.meta.ChildAggregate.required","ofx4js.meta.ChildAggregate.order","ofx4js.meta.ChildAggregate.collectionEntryType","ofx4js.meta.Header","ofx4js.meta.Header.constructor","ofx4js.meta.Header.name","ofx4js.meta.Element","ofx4js.meta.Element.constructor","ofx4js.meta.Element.name","ofx4js.meta.Element.required","ofx4js.meta.Element.order","ofx4js.meta.Element.collectionEntryType","ofx4js.log","ofx4js.log.Log","ofx4js.log.Log.constructor","ofx4js.log.Log.setInfoEnabled","ofx4js.log.Log.isInfoEnabled","ofx4js.log.Log.info","ofx4js.log.Log.setDebugEnabled","ofx4js.log.Log.isDebugEnabled","ofx4js.log.Log.debug","ofx4js.log.Log.warning","ofx4js.log.Log.error","ofx4js.log.LogFactory","ofx4js.log.LogFactory.getLog","ofx4js.collections","ofx4js.collections.SortedSet","ofx4js.collections.SortedSet.constructor","ofx4js.collections.SortedSet.values","ofx4js.collections.SortedSet.insert","ofx4js.collections.SortedSet.push","ofx4js.collections.SortedSet.remove","ofx4js.collections.SortedSet.count","ofx4js.io","ofx4js.io.AggregateAttributeType","ofx4js.io.AggregateAttribute","ofx4js.io.AggregateAttribute.constructor","ofx4js.io.AggregateAttribute.AggregateAttributeFromElement","ofx4js.io.AggregateAttribute.AggregateAttributeFromChildAggregate","ofx4js.io.AggregateAttribute.get","ofx4js.io.AggregateAttribute.set","ofx4js.io.AggregateAttribute.getAttributeType","ofx4js.io.AggregateAttribute.getArrayEntryType","ofx4js.io.AggregateAttribute.getName","ofx4js.io.AggregateAttribute.isRequired","ofx4js.io.AggregateAttribute.getOrder","ofx4js.io.AggregateAttribute.getType","ofx4js.io.AggregateAttribute.contentCompare","ofx4js.io.AggregateAttribute.isArray","ofx4js.io.AggregateAttribute.toString","ofx4js.io.AggregateInfo","ofx4js.io.AggregateInfo.constructor","ofx4js.io.AggregateInfo.getName","ofx4js.io.AggregateInfo.setName","ofx4js.io.AggregateInfo.getOwner","ofx4js.io.AggregateInfo.getAttributes","ofx4js.io.AggregateInfo.getAttribute","ofx4js.io.AggregateInfo.hasHeaders","ofx4js.io.AggregateInfo.getHeaders","ofx4js.io.AggregateInfo.getHeaderType","ofx4js.io.AggregateInfo.setHeader","ofx4js.io.AggregateInfo.addChildAggregate","ofx4js.io.AggregateInfo.addElement","ofx4js.io.AggregateInfo.addHeader","ofx4js.io.AggregateIntrospector","ofx4js.io.AggregateIntrospector.getAggregateInfo","ofx4js.io.AggregateIntrospector.getAncestorAggregateInfo","ofx4js.io.AggregateIntrospector.findAggregateByName","ofx4js.io.AggregateIntrospector.addAggregate","ofx4js.io.AggregateIntrospector.addChildAggregate","ofx4js.io.AggregateIntrospector.addElement","ofx4js.io.AggregateIntrospector.addHeader","ofx4js.meta.Aggregate_add","ofx4js.meta.Element_add","ofx4js.domain","ofx4js.domain.data","ofx4js.domain.data.common","ofx4js.domain.data.common.StatusCode","ofx4js.domain.data.common.StatusCode.getCode","ofx4js.domain.data.common.StatusCode.getMessage","ofx4js.domain.data.common.StatusCode.getDefaultSeverity","ofx4js.domain.data.common.Severity","ofx4js.domain.data.common.KnownCode","ofx4js.domain.data.common.KnownCode.constructor","ofx4js.domain.data.common.KnownCode.getCode","ofx4js.domain.data.common.KnownCode.getMessage","ofx4js.domain.data.common.KnownCode.getDefaultSeverity","ofx4js.domain.data.common.KnownCode.fromCode","ofx4js.domain.data.common.KnownCode.toString","ofx4js.domain.data.common.Status","ofx4js.domain.data.common.Status.constructor","ofx4js.domain.data.common.Status.getCode","ofx4js.domain.data.common.Status.setCode","ofx4js.domain.data.common.Status.getSeverity","ofx4js.domain.data.common.Status.setSeverity","ofx4js.domain.data.common.Status.getMessage","ofx4js.domain.data.common.Status.setMessage","ofx4js.OFXStatusException","ofx4js.OFXStatusException.constructor","ofx4js.OFXStatusException.getStatus","ofx4js.OFXTransactionException","ofx4js.OFXTransactionException.constructor","ofx4js.UnsupportedOFXSecurityTypeException","ofx4js.UnsupportedOFXSecurityTypeException.constructor","ofx4js.domain.data.common.BalanceInfo","ofx4js.domain.data.common.BalanceInfo.getAmount","ofx4js.domain.data.common.BalanceInfo.setAmount","ofx4js.domain.data.common.BalanceInfo.getAsOfDate","ofx4js.domain.data.common.BalanceInfo.setAsOfDate","ofx4js.meta.ChildAggregate_add","ofx4js.domain.data.banking","ofx4js.domain.data.banking.AccountType","ofx4js.domain.data.banking.BankAccountDetails","ofx4js.domain.data.banking.BankAccountDetails.getBankId","ofx4js.domain.data.banking.BankAccountDetails.setBankId","ofx4js.domain.data.banking.BankAccountDetails.getRoutingNumber","ofx4js.domain.data.banking.BankAccountDetails.setRoutingNumber","ofx4js.domain.data.banking.BankAccountDetails.getBranchId","ofx4js.domain.data.banking.BankAccountDetails.setBranchId","ofx4js.domain.data.banking.BankAccountDetails.getAccountNumber","ofx4js.domain.data.banking.BankAccountDetails.setAccountNumber","ofx4js.domain.data.banking.BankAccountDetails.getAccountType","ofx4js.domain.data.banking.BankAccountDetails.setAccountType","ofx4js.domain.data.banking.BankAccountDetails.getAccountKey","ofx4js.domain.data.banking.BankAccountDetails.setAccountKey","ofx4js.domain.data.creditcard","ofx4js.domain.data.creditcard.CreditCardAccountDetails","ofx4js.domain.data.creditcard.CreditCardAccountDetails.getAccountNumber","ofx4js.domain.data.creditcard.CreditCardAccountDetails.setAccountNumber","ofx4js.domain.data.creditcard.CreditCardAccountDetails.getAccountKey","ofx4js.domain.data.creditcard.CreditCardAccountDetails.setAccountKey","ofx4js.domain.data.common.CorrectionAction","ofx4js.domain.data.common.Currency","ofx4js.domain.data.common.Currency.constructor","ofx4js.domain.data.common.Currency.getCode","ofx4js.domain.data.common.Currency.setCode","ofx4js.domain.data.common.Currency.getExchangeRate","ofx4js.domain.data.common.Currency.setExchangeRate","ofx4js.domain.data.common.Payee","ofx4js.domain.data.common.Payee.getName","ofx4js.domain.data.common.Payee.setName","ofx4js.domain.data.common.Payee.getAddress1","ofx4js.domain.data.common.Payee.setAddress1","ofx4js.domain.data.common.Payee.getAddress2","ofx4js.domain.data.common.Payee.setAddress2","ofx4js.domain.data.common.Payee.getAddress3","ofx4js.domain.data.common.Payee.setAddress3","ofx4js.domain.data.common.Payee.getCity","ofx4js.domain.data.common.Payee.setCity","ofx4js.domain.data.common.Payee.getState","ofx4js.domain.data.common.Payee.setState","ofx4js.domain.data.common.Payee.getZip","ofx4js.domain.data.common.Payee.setZip","ofx4js.domain.data.common.Payee.getCountry","ofx4js.domain.data.common.Payee.setCountry","ofx4js.domain.data.common.Payee.getPhone","ofx4js.domain.data.common.Payee.setPhone","ofx4js.domain.data.common.TransactionType","ofx4js.domain.data.common.Transaction","ofx4js.domain.data.common.Transaction.getTransactionType","ofx4js.domain.data.common.Transaction.setTransactionType","ofx4js.domain.data.common.Transaction.getDatePosted","ofx4js.domain.data.common.Transaction.setDatePosted","ofx4js.domain.data.common.Transaction.getDateInitiated","ofx4js.domain.data.common.Transaction.setDateInitiated","ofx4js.domain.data.common.Transaction.getDateAvailable","ofx4js.domain.data.common.Transaction.setDateAvailable","ofx4js.domain.data.common.Transaction.getAmount","ofx4js.domain.data.common.Transaction.setAmount","ofx4js.domain.data.common.Transaction.getBigDecimalAmount","ofx4js.domain.data.common.Transaction.setBigDecimalAmount","ofx4js.domain.data.common.Transaction.getId","ofx4js.domain.data.common.Transaction.setId","ofx4js.domain.data.common.Transaction.getCorrectionId","ofx4js.domain.data.common.Transaction.setCorrectionId","ofx4js.domain.data.common.Transaction.getCorrectionAction","ofx4js.domain.data.common.Transaction.setCorrectionAction","ofx4js.domain.data.common.Transaction.getTempId","ofx4js.domain.data.common.Transaction.setTempId","ofx4js.domain.data.common.Transaction.getCheckNumber","ofx4js.domain.data.common.Transaction.setCheckNumber","ofx4js.domain.data.common.Transaction.getReferenceNumber","ofx4js.domain.data.common.Transaction.setReferenceNumber","ofx4js.domain.data.common.Transaction.getStandardIndustrialCode","ofx4js.domain.data.common.Transaction.setStandardIndustrialCode","ofx4js.domain.data.common.Transaction.getPayeeId","ofx4js.domain.data.common.Transaction.setPayeeId","ofx4js.domain.data.common.Transaction.getName","ofx4js.domain.data.common.Transaction.setName","ofx4js.domain.data.common.Transaction.getPayee","ofx4js.domain.data.common.Transaction.setPayee","ofx4js.domain.data.common.Transaction.getBankAccountTo","ofx4js.domain.data.common.Transaction.setBankAccountTo","ofx4js.domain.data.common.Transaction.getCreditCardAccountTo","ofx4js.domain.data.common.Transaction.setCreditCardAccountTo","ofx4js.domain.data.common.Transaction.getMemo","ofx4js.domain.data.common.Transaction.setMemo","ofx4js.domain.data.common.Transaction.getCurrency","ofx4js.domain.data.common.Transaction.setCurrency","ofx4js.domain.data.common.Transaction.getOriginalCurrency","ofx4js.domain.data.common.Transaction.setOriginalCurrency","ofx4js.domain.data.common.TransactionList","ofx4js.domain.data.common.TransactionList.getStart","ofx4js.domain.data.common.TransactionList.setStart","ofx4js.domain.data.common.TransactionList.getEnd","ofx4js.domain.data.common.TransactionList.setEnd","ofx4js.domain.data.common.TransactionList.getTransactions","ofx4js.domain.data.common.TransactionList.setTransactions","ofx4js.domain.data.investment","ofx4js.domain.data.investment.accounts","ofx4js.domain.data.investment.accounts.InvestmentAccountDetails","ofx4js.domain.data.investment.accounts.InvestmentAccountDetails.getBrokerId","ofx4js.domain.data.investment.accounts.InvestmentAccountDetails.setBrokerId","ofx4js.domain.data.investment.accounts.InvestmentAccountDetails.getAccountNumber","ofx4js.domain.data.investment.accounts.InvestmentAccountDetails.setAccountNumber","ofx4js.domain.data.investment.accounts.InvestmentAccountDetails.getAccountKey","ofx4js.domain.data.investment.accounts.InvestmentAccountDetails.setAccountKey","ofx4js.domain.data.investment.accounts.AccountType_fromOfx","ofx4js.domain.data.investment.accounts.AccountType","ofx4js.domain.data.investment.accounts.ActivationStatus_fromOfx","ofx4js.domain.data.investment.accounts.ActivationStatus","ofx4js.domain.data.investment.accounts.UnitedStatesAccountType_fromOfx","ofx4js.domain.data.investment.accounts.UnitedStatesAccountType","ofx4js.domain.data.investment.accounts.InvestmentAccountInfo","ofx4js.domain.data.investment.accounts.InvestmentAccountInfo.getInvestmentAccount","ofx4js.domain.data.investment.accounts.InvestmentAccountInfo.setInvestmentAccount","ofx4js.domain.data.investment.accounts.InvestmentAccountInfo.getAccountDetails","ofx4js.domain.data.investment.accounts.InvestmentAccountInfo.getUnitedStatesAccountType","ofx4js.domain.data.investment.accounts.InvestmentAccountInfo.setUnitedStatesAccountType","ofx4js.domain.data.investment.accounts.InvestmentAccountInfo.getUnitedStatesAccountTypeEnum","ofx4js.domain.data.investment.accounts.InvestmentAccountInfo.getSupportsChecking","ofx4js.domain.data.investment.accounts.InvestmentAccountInfo.setSupportsChecking","ofx4js.domain.data.investment.accounts.InvestmentAccountInfo.getActivationStatus","ofx4js.domain.data.investment.accounts.InvestmentAccountInfo.setActivationStatus","ofx4js.domain.data.investment.accounts.InvestmentAccountInfo.getActivationStatusEnum","ofx4js.domain.data.investment.accounts.InvestmentAccountInfo.getInvestmentAccountType","ofx4js.domain.data.investment.accounts.InvestmentAccountInfo.setInvestmentAccountType","ofx4js.domain.data.investment.accounts.InvestmentAccountInfo.getInvestmentAccountTypeEnum","ofx4js.domain.data.investment.accounts.InvestmentAccountInfo.getOptionLevel","ofx4js.domain.data.investment.accounts.InvestmentAccountInfo.setOptionLevel","ofx4js.domain.data.common.AccountStatus","ofx4js.domain.data.banking.BankAccountInfo","ofx4js.domain.data.banking.BankAccountInfo.getBankAccount","ofx4js.domain.data.banking.BankAccountInfo.setBankAccount","ofx4js.domain.data.banking.BankAccountInfo.getAccountDetails","ofx4js.domain.data.banking.BankAccountInfo.getSupportsTransactionDetailOperations","ofx4js.domain.data.banking.BankAccountInfo.setSupportsTransactionDetailOperations","ofx4js.domain.data.banking.BankAccountInfo.getSupportsTransferToOtherAccountOperations","ofx4js.domain.data.banking.BankAccountInfo.setSupportsTransferToOtherAccountOperations","ofx4js.domain.data.banking.BankAccountInfo.getSupportsTransferFromOtherAccountOperations","ofx4js.domain.data.banking.BankAccountInfo.setSupportsTransferFromOtherAccountOperations","ofx4js.domain.data.banking.BankAccountInfo.getStatus","ofx4js.domain.data.banking.BankAccountInfo.setStatus","ofx4js.domain.data.creditcard.CreditCardAccountInfo","ofx4js.domain.data.creditcard.CreditCardAccountInfo.getCreditCardAccount","ofx4js.domain.data.creditcard.CreditCardAccountInfo.setCreditCardAccount","ofx4js.domain.data.creditcard.CreditCardAccountInfo.getAccountDetails","ofx4js.domain.data.creditcard.CreditCardAccountInfo.getSupportsTransactionDetailOperations","ofx4js.domain.data.creditcard.CreditCardAccountInfo.setSupportsTransactionDetailOperations","ofx4js.domain.data.creditcard.CreditCardAccountInfo.getSupportsTransferToOtherAccountOperations","ofx4js.domain.data.creditcard.CreditCardAccountInfo.setSupportsTransferToOtherAccountOperations","ofx4js.domain.data.creditcard.CreditCardAccountInfo.getSupportsTransferFromOtherAccountOperations","ofx4js.domain.data.creditcard.CreditCardAccountInfo.setSupportsTransferFromOtherAccountOperations","ofx4js.domain.data.creditcard.CreditCardAccountInfo.getStatus","ofx4js.domain.data.creditcard.CreditCardAccountInfo.setStatus","ofx4js.domain.data.signup","ofx4js.domain.data.signup.AccountProfile","ofx4js.domain.data.signup.AccountProfile.getDescription","ofx4js.domain.data.signup.AccountProfile.setDescription","ofx4js.domain.data.signup.AccountProfile.getPhone","ofx4js.domain.data.signup.AccountProfile.setPhone","ofx4js.domain.data.signup.AccountProfile.getSpecifics","ofx4js.domain.data.signup.AccountProfile.setSpecifics","ofx4js.domain.data.signup.AccountProfile.getBankSpecifics","ofx4js.domain.data.signup.AccountProfile.setBankSpecifics","ofx4js.domain.data.signup.AccountProfile.getCreditCardSpecifics","ofx4js.domain.data.signup.AccountProfile.setCreditCardSpecifics","ofx4js.domain.data.signup.AccountProfile.getInvestmentSpecifics","ofx4js.domain.data.signup.AccountProfile.setInvestmentSpecifics","ofx4js.domain.data.profile","ofx4js.domain.data.profile.SynchronizationCapability","ofx4js.domain.data.ApplicationSecurity","ofx4js.domain.data.MessageSetType","ofx4js.domain.data.profile.CharacterType","ofx4js.domain.data.ResponseMessage","ofx4js.domain.data.ResponseMessage.getResponseMessageName","ofx4js.domain.data.common.StatementResponse","ofx4js.domain.data.common.StatementResponse.constructor","ofx4js.domain.data.common.StatementResponse.getCurrencyCode","ofx4js.domain.data.common.StatementResponse.setCurrencyCode","ofx4js.domain.data.common.StatementResponse.getTransactionList","ofx4js.domain.data.common.StatementResponse.setTransactionList","ofx4js.domain.data.common.StatementResponse.getLedgerBalance","ofx4js.domain.data.common.StatementResponse.setLedgerBalance","ofx4js.domain.data.common.StatementResponse.getAvailableBalance","ofx4js.domain.data.common.StatementResponse.setAvailableBalance","ofx4js.domain.data.common.StatementResponse.getMarketingInfo","ofx4js.domain.data.common.StatementResponse.setMarketingInfo","ofx4js.domain.data.investment.accounts.SubAccountType_fromOfx","ofx4js.domain.data.investment.accounts.SubAccountType","ofx4js.domain.data.seclist","ofx4js.domain.data.seclist.SecurityId","ofx4js.domain.data.seclist.SecurityId.getUniqueId","ofx4js.domain.data.seclist.SecurityId.setUniqueId","ofx4js.domain.data.seclist.SecurityId.getUniqueIdType","ofx4js.domain.data.seclist.SecurityId.setUniqueIdType","ofx4js.domain.data.investment.positions","ofx4js.domain.data.investment.positions.InvestmentPosition","ofx4js.domain.data.investment.positions.InvestmentPosition.getSecurityId","ofx4js.domain.data.investment.positions.InvestmentPosition.setSecurityId","ofx4js.domain.data.investment.positions.InvestmentPosition.getHeldInAccount","ofx4js.domain.data.investment.positions.InvestmentPosition.setHeldInAccount","ofx4js.domain.data.investment.positions.InvestmentPosition.getHeldInAccountEnum","ofx4js.domain.data.investment.positions.InvestmentPosition.getPositionType","ofx4js.domain.data.investment.positions.InvestmentPosition.setPositionType","ofx4js.domain.data.investment.positions.InvestmentPosition.getPositionTypeEnum","ofx4js.domain.data.investment.positions.InvestmentPosition.getUnits","ofx4js.domain.data.investment.positions.InvestmentPosition.setUnits","ofx4js.domain.data.investment.positions.InvestmentPosition.getUnitPrice","ofx4js.domain.data.investment.positions.InvestmentPosition.setUnitPrice","ofx4js.domain.data.investment.positions.InvestmentPosition.getMarketValue","ofx4js.domain.data.investment.positions.InvestmentPosition.setMarketValue","ofx4js.domain.data.investment.positions.InvestmentPosition.getMarketValueDate","ofx4js.domain.data.investment.positions.InvestmentPosition.setMarketValueDate","ofx4js.domain.data.investment.positions.InvestmentPosition.getCurrencyCode","ofx4js.domain.data.investment.positions.InvestmentPosition.setCurrencyCode","ofx4js.domain.data.investment.positions.InvestmentPosition.getMemo","ofx4js.domain.data.investment.positions.InvestmentPosition.setMemo","ofx4js.domain.data.investment.positions.InvestmentPosition.get401kSource","ofx4js.domain.data.investment.positions.InvestmentPosition.set401kSource","ofx4js.domain.data.investment.positions.InvestmentPosition.get401kSourceEnum","ofx4js.domain.data.investment.positions.Inv401KSource_fromOfx","ofx4js.domain.data.investment.positions.Inv401KSource","ofx4js.domain.data.investment.positions.PositionType_fromOfx","ofx4js.domain.data.investment.positions.PositionType","ofx4js.domain.data.investment.positions.BasePosition","ofx4js.domain.data.investment.positions.BasePosition.getInvestmentPosition","ofx4js.domain.data.investment.positions.BasePosition.setInvestmentPosition","ofx4js.domain.data.investment.positions.BasePosition.getSecurityId","ofx4js.domain.data.investment.positions.BasePosition.getHeldInAccount","ofx4js.domain.data.investment.positions.BasePosition.getHeldInAccountEnum","ofx4js.domain.data.investment.positions.BasePosition.getPositionType","ofx4js.domain.data.investment.positions.BasePosition.getPositionTypeEnum","ofx4js.domain.data.investment.positions.BasePosition.getUnits","ofx4js.domain.data.investment.positions.BasePosition.getUnitPrice","ofx4js.domain.data.investment.positions.BasePosition.getMarketValue","ofx4js.domain.data.investment.positions.BasePosition.getMarketValueDate","ofx4js.domain.data.investment.positions.BasePosition.getCurrencyCode","ofx4js.domain.data.investment.positions.BasePosition.getMemo","ofx4js.domain.data.investment.positions.BasePosition.get401kSource","ofx4js.domain.data.investment.positions.BasePosition.get401kSourceEnum","ofx4js.domain.data.investment.positions.InvestmentPositionList","ofx4js.domain.data.investment.positions.InvestmentPositionList.getPositions","ofx4js.domain.data.investment.positions.InvestmentPositionList.setPositions","ofx4js.domain.data.seclist.SecurityInfo","ofx4js.domain.data.seclist.SecurityInfo.getSecurityId","ofx4js.domain.data.seclist.SecurityInfo.setSecurityId","ofx4js.domain.data.seclist.SecurityInfo.getSecurityName","ofx4js.domain.data.seclist.SecurityInfo.setSecurityName","ofx4js.domain.data.seclist.SecurityInfo.getTickerSymbol","ofx4js.domain.data.seclist.SecurityInfo.setTickerSymbol","ofx4js.domain.data.seclist.SecurityInfo.getFiId","ofx4js.domain.data.seclist.SecurityInfo.setFiId","ofx4js.domain.data.seclist.SecurityInfo.getRating","ofx4js.domain.data.seclist.SecurityInfo.setRating","ofx4js.domain.data.seclist.SecurityInfo.getUnitPrice","ofx4js.domain.data.seclist.SecurityInfo.setUnitPrice","ofx4js.domain.data.seclist.SecurityInfo.getUnitPriceAsOfDate","ofx4js.domain.data.seclist.SecurityInfo.setUnitPriceAsOfDate","ofx4js.domain.data.seclist.SecurityInfo.getCurrencyCode","ofx4js.domain.data.seclist.SecurityInfo.setCurrencyCode","ofx4js.domain.data.seclist.SecurityInfo.getMemo","ofx4js.domain.data.seclist.SecurityInfo.setMemo","ofx4js.domain.data.seclist.BaseSecurityInfo","ofx4js.domain.data.seclist.BaseSecurityInfo.getSecurityInfo","ofx4js.domain.data.seclist.BaseSecurityInfo.setSecurityInfo","ofx4js.domain.data.seclist.BaseSecurityInfo.getSecurityId","ofx4js.domain.data.seclist.BaseSecurityInfo.getSecurityName","ofx4js.domain.data.seclist.BaseSecurityInfo.getTickerSymbol","ofx4js.domain.data.seclist.BaseSecurityInfo.getFiId","ofx4js.domain.data.seclist.BaseSecurityInfo.getRating","ofx4js.domain.data.seclist.BaseSecurityInfo.getUnitPrice","ofx4js.domain.data.seclist.BaseSecurityInfo.getUnitPriceAsOfDate","ofx4js.domain.data.seclist.BaseSecurityInfo.getCurrencyCode","ofx4js.domain.data.seclist.BaseSecurityInfo.getMemo","ofx4js.domain.data.seclist.SecurityList","ofx4js.domain.data.seclist.SecurityList.getSecurityInfos","ofx4js.domain.data.seclist.SecurityList.setSecurityInfos","ofx4js.domain.data.seclist.SecurityListResponse","ofx4js.domain.data.seclist.SecurityListResponse.constructor","ofx4js.domain.data.seclist.SecurityListResponse.getResponseMessageName","ofx4js.domain.data.investment.transactions","ofx4js.domain.data.investment.transactions.TransactionType","ofx4js.domain.data.investment.transactions.BaseInvestmentTransaction","ofx4js.domain.data.investment.transactions.BaseInvestmentTransaction.constructor","ofx4js.domain.data.investment.transactions.BaseInvestmentTransaction.getTransactionType","ofx4js.domain.data.investment.transactions.BaseInvestmentTransaction.getInvestmentTransaction","ofx4js.domain.data.investment.transactions.BaseInvestmentTransaction.getTransactionId","ofx4js.domain.data.investment.transactions.BaseInvestmentTransaction.getServerId","ofx4js.domain.data.investment.transactions.BaseInvestmentTransaction.getTradeDate","ofx4js.domain.data.investment.transactions.BaseInvestmentTransaction.getSettlementDate","ofx4js.domain.data.investment.transactions.BaseInvestmentTransaction.getReversalTransactionId","ofx4js.domain.data.investment.transactions.BaseInvestmentTransaction.getMemo","ofx4js.domain.data.investment.transactions.InvestmentTransaction","ofx4js.domain.data.investment.transactions.InvestmentTransaction.getTransactionId","ofx4js.domain.data.investment.transactions.InvestmentTransaction.setTransactionId","ofx4js.domain.data.investment.transactions.InvestmentTransaction.getServerId","ofx4js.domain.data.investment.transactions.InvestmentTransaction.setServerId","ofx4js.domain.data.investment.transactions.InvestmentTransaction.getTradeDate","ofx4js.domain.data.investment.transactions.InvestmentTransaction.setTradeDate","ofx4js.domain.data.investment.transactions.InvestmentTransaction.getSettlementDate","ofx4js.domain.data.investment.transactions.InvestmentTransaction.setSettlementDate","ofx4js.domain.data.investment.transactions.InvestmentTransaction.getReversalTransactionId","ofx4js.domain.data.investment.transactions.InvestmentTransaction.setReversalTransactionId","ofx4js.domain.data.investment.transactions.InvestmentTransaction.getMemo","ofx4js.domain.data.investment.transactions.InvestmentTransaction.setMemo","ofx4js.domain.data.investment.transactions.BaseOtherInvestmentTransaction","ofx4js.domain.data.investment.transactions.BaseOtherInvestmentTransaction.constructor","ofx4js.domain.data.investment.transactions.BaseOtherInvestmentTransaction.getInvestmentTransaction","ofx4js.domain.data.investment.transactions.BaseOtherInvestmentTransaction.setInvestmentTransaction","ofx4js.domain.data.investment.transactions.InvestmentBankTransaction","ofx4js.domain.data.investment.transactions.InvestmentBankTransaction.getTransaction","ofx4js.domain.data.investment.transactions.InvestmentBankTransaction.setTransaction","ofx4js.domain.data.investment.transactions.InvestmentBankTransaction.getSubAccountFund","ofx4js.domain.data.investment.transactions.InvestmentBankTransaction.setSubAccountFund","ofx4js.domain.data.investment.transactions.InvestmentBankTransaction.getSubAccountFundEnum","ofx4js.domain.data.investment.transactions.InvestmentTransactionList","ofx4js.domain.data.investment.transactions.InvestmentTransactionList.getStart","ofx4js.domain.data.investment.transactions.InvestmentTransactionList.setStart","ofx4js.domain.data.investment.transactions.InvestmentTransactionList.getEnd","ofx4js.domain.data.investment.transactions.InvestmentTransactionList.setEnd","ofx4js.domain.data.investment.transactions.InvestmentTransactionList.getInvestmentTransactions","ofx4js.domain.data.investment.transactions.InvestmentTransactionList.setInvestmentTransactions","ofx4js.domain.data.investment.transactions.InvestmentTransactionList.getBankTransactions","ofx4js.domain.data.investment.transactions.InvestmentTransactionList.setBankTransactions","ofx4js.domain.data.common.BalanceRecordType","ofx4js.domain.data.common.BalanceRecord","ofx4js.domain.data.common.BalanceRecord.getName","ofx4js.domain.data.common.BalanceRecord.setName","ofx4js.domain.data.common.BalanceRecord.getDescription","ofx4js.domain.data.common.BalanceRecord.setDescription","ofx4js.domain.data.common.BalanceRecord.getType","ofx4js.domain.data.common.BalanceRecord.setType","ofx4js.domain.data.common.BalanceRecord.getValue","ofx4js.domain.data.common.BalanceRecord.setValue","ofx4js.domain.data.common.BalanceRecord.getTimestamp","ofx4js.domain.data.common.BalanceRecord.setTimestamp","ofx4js.domain.data.common.BalanceRecord.getCurrency","ofx4js.domain.data.common.BalanceRecord.setCurrency","ofx4js.domain.data.investment.statements","ofx4js.domain.data.investment.statements.BalanceList","ofx4js.domain.data.investment.statements.BalanceList.getBalanceRecords","ofx4js.domain.data.investment.statements.BalanceList.setBalanceRecords","ofx4js.domain.data.investment.statements.InvestmentBalance","ofx4js.domain.data.investment.statements.InvestmentBalance.getAvailableCash","ofx4js.domain.data.investment.statements.InvestmentBalance.setAvailableCash","ofx4js.domain.data.investment.statements.InvestmentBalance.getMarginBalance","ofx4js.domain.data.investment.statements.InvestmentBalance.setMarginBalance","ofx4js.domain.data.investment.statements.InvestmentBalance.getShortBalance","ofx4js.domain.data.investment.statements.InvestmentBalance.setShortBalance","ofx4js.domain.data.investment.statements.InvestmentBalance.getBuyingPower","ofx4js.domain.data.investment.statements.InvestmentBalance.setBuyingPower","ofx4js.domain.data.investment.statements.InvestmentBalance.getBalanceList","ofx4js.domain.data.investment.statements.InvestmentBalance.setBalanceList","ofx4js.domain.data.investment.statements.InvestmentStatementResponse","ofx4js.domain.data.investment.statements.InvestmentStatementResponse.constructor","ofx4js.domain.data.investment.statements.InvestmentStatementResponse.getResponseMessageName","ofx4js.domain.data.investment.statements.InvestmentStatementResponse.getDateOfStatement","ofx4js.domain.data.investment.statements.InvestmentStatementResponse.setDateOfStatement","ofx4js.domain.data.investment.statements.InvestmentStatementResponse.getAccount","ofx4js.domain.data.investment.statements.InvestmentStatementResponse.setAccount","ofx4js.domain.data.investment.statements.InvestmentStatementResponse.getInvestmentTransactionList","ofx4js.domain.data.investment.statements.InvestmentStatementResponse.setInvestmentTransactionList","ofx4js.domain.data.investment.statements.InvestmentStatementResponse.getPositionList","ofx4js.domain.data.investment.statements.InvestmentStatementResponse.setPositionList","ofx4js.domain.data.investment.statements.InvestmentStatementResponse.getAccountBalance","ofx4js.domain.data.investment.statements.InvestmentStatementResponse.setAccountBalance","ofx4js.domain.data.investment.statements.InvestmentStatementResponse.getSecurityList","ofx4js.domain.data.investment.statements.InvestmentStatementResponse.setSecurityList","ofx4js.domain.data.seclist.SecurityRequest","ofx4js.domain.data.seclist.SecurityRequest.getSecurityId","ofx4js.domain.data.seclist.SecurityRequest.setSecurityId","ofx4js.domain.data.seclist.SecurityRequest.getTickerSymbol","ofx4js.domain.data.seclist.SecurityRequest.setTickerSymbol","ofx4js.domain.data.seclist.SecurityRequest.getFiId","ofx4js.domain.data.seclist.SecurityRequest.setFiId","ofx4js.client","ofx4js.client.NoOFXResponseException","ofx4js.client.NoOFXResponseException.constructor","ofx4js.client.context","ofx4js.client.context.DefaultApplicationContext","ofx4js.client.context.DefaultApplicationContext.constructor","ofx4js.client.context.DefaultApplicationContext.getAppId","ofx4js.client.context.DefaultApplicationContext.getAppVersion","ofx4js.client.context.OFXApplicationContextHolder","ofx4js.client.context.OFXApplicationContextHolder.getCurrentContext","ofx4js.client.context.OFXApplicationContextHolder.setCurrentContext","ofx4js.domain.data.RequestMessage","ofx4js.domain.data.common.StatementRange","ofx4js.domain.data.common.StatementRange.constructor","ofx4js.domain.data.common.StatementRange.getStart","ofx4js.domain.data.common.StatementRange.setStart","ofx4js.domain.data.common.StatementRange.getEnd","ofx4js.domain.data.common.StatementRange.setEnd","ofx4js.domain.data.common.StatementRange.getIncludeTransactions","ofx4js.domain.data.common.StatementRange.setIncludeTransactions","ofx4js.domain.data.common.StatementRequest","ofx4js.domain.data.common.StatementRequest.constructor","ofx4js.domain.data.common.StatementRequest.getStatementRange","ofx4js.domain.data.common.StatementRequest.setStatementRange","ofx4js.domain.data.ResponseMessageSet","ofx4js.domain.data.ResponseMessageSet.constructor","ofx4js.domain.data.ResponseMessageSet.getType","ofx4js.domain.data.ResponseMessageSet.getVersion","ofx4js.domain.data.ResponseMessageSet.setVersion","ofx4js.domain.data.ResponseMessageSet.getResponseMessages","ofx4js.domain.data.ResponseMessageSet.contentCompare","ofx4js.domain.data.common.instanceof_StatusHolder","ofx4js.domain.data.TransactionWrappedResponseMessage","ofx4js.domain.data.TransactionWrappedResponseMessage.constructor","ofx4js.domain.data.TransactionWrappedResponseMessage.getUID","ofx4js.domain.data.TransactionWrappedResponseMessage.setUID","ofx4js.domain.data.TransactionWrappedResponseMessage.getClientCookie","ofx4js.domain.data.TransactionWrappedResponseMessage.setClientCookie","ofx4js.domain.data.TransactionWrappedResponseMessage.getStatusHolderName","ofx4js.domain.data.TransactionWrappedResponseMessage.getResponseMessageName","ofx4js.domain.data.TransactionWrappedResponseMessage.getStatus","ofx4js.domain.data.TransactionWrappedResponseMessage.setStatus","ofx4js.domain.data.TransactionWrappedResponseMessage.getWrappedMessage","ofx4js.domain.data.banking.BankStatementResponse","ofx4js.domain.data.banking.BankStatementResponse.constructor","ofx4js.domain.data.banking.BankStatementResponse.getResponseMessageName","ofx4js.domain.data.banking.BankStatementResponse.getAccount","ofx4js.domain.data.banking.BankStatementResponse.setAccount","ofx4js.domain.data.banking.BankStatementResponseTransaction","ofx4js.domain.data.banking.BankStatementResponseTransaction.constructor","ofx4js.domain.data.banking.BankStatementResponseTransaction.getMessage","ofx4js.domain.data.banking.BankStatementResponseTransaction.setMessage","ofx4js.domain.data.banking.BankStatementResponseTransaction.getWrappedMessage","ofx4js.domain.data.banking.BankingResponseMessageSet","ofx4js.domain.data.banking.BankingResponseMessageSet.constructor","ofx4js.domain.data.banking.BankingResponseMessageSet.getType","ofx4js.domain.data.banking.BankingResponseMessageSet.getStatementResponses","ofx4js.domain.data.banking.BankingResponseMessageSet.setStatementResponses","ofx4js.domain.data.banking.BankingResponseMessageSet.getResponseMessages","ofx4js.domain.data.banking.BankingResponseMessageSet.getStatementResponse","ofx4js.domain.data.banking.BankingResponseMessageSet.setStatementResponse","ofx4js.domain.data.banking.BankStatementRequest","ofx4js.domain.data.banking.BankStatementRequest.constructor","ofx4js.domain.data.banking.BankStatementRequest.getAccount","ofx4js.domain.data.banking.BankStatementRequest.setAccount","ofx4js.domain.data.RequestMessageSet","ofx4js.domain.data.RequestMessageSet.constructor","ofx4js.domain.data.RequestMessageSet.getType","ofx4js.domain.data.RequestMessageSet.getVersion","ofx4js.domain.data.RequestMessageSet.setVersion","ofx4js.domain.data.RequestMessageSet.getRequestMessages","ofx4js.domain.data.RequestMessageSet.contentCompare","ofx4js.domain.data.TransactionWrappedRequestMessage","ofx4js.domain.data.TransactionWrappedRequestMessage.constructor","ofx4js.domain.data.TransactionWrappedRequestMessage.getUID","ofx4js.domain.data.TransactionWrappedRequestMessage.setUID","ofx4js.domain.data.TransactionWrappedRequestMessage.getClientCookie","ofx4js.domain.data.TransactionWrappedRequestMessage.setClientCookie","ofx4js.domain.data.TransactionWrappedRequestMessage.getTransactionAuthorizationNumber","ofx4js.domain.data.TransactionWrappedRequestMessage.setTransactionAuthorizationNumber","ofx4js.domain.data.TransactionWrappedRequestMessage.setWrappedMessage","ofx4js.domain.data.banking.BankStatementRequestTransaction","ofx4js.domain.data.banking.BankStatementRequestTransaction.constructor","ofx4js.domain.data.banking.BankStatementRequestTransaction.getMessage","ofx4js.domain.data.banking.BankStatementRequestTransaction.setMessage","ofx4js.domain.data.banking.BankStatementRequestTransaction.setWrappedMessage","ofx4js.domain.data.banking.BankingRequestMessageSet","ofx4js.domain.data.banking.BankingRequestMessageSet.constructor","ofx4js.domain.data.banking.BankingRequestMessageSet.getType","ofx4js.domain.data.banking.BankingRequestMessageSet.getStatementRequest","ofx4js.domain.data.banking.BankingRequestMessageSet.setStatementRequest","ofx4js.domain.data.banking.BankingRequestMessageSet.getRequestMessages","ofx4js.client.impl","ofx4js.client.impl.BaseAccountImpl","ofx4js.client.impl.BaseAccountImpl.constructor","ofx4js.client.impl.BaseAccountImpl.getMessageSetType","ofx4js.client.impl.BaseAccountImpl.readStatement","ofx4js.client.impl.BaseAccountImpl.unwrapStatementResponse","ofx4js.client.impl.BaseAccountImpl.createRequestMessageSet","ofx4js.client.impl.BaseAccountImpl.createTransaction","ofx4js.client.impl.BaseAccountImpl.createStatementRequest","ofx4js.client.impl.BaseAccountImpl.getDetails","ofx4js.client.impl.BaseAccountImpl.getMessageType","ofx4js.domain.data.signon","ofx4js.domain.data.signon.FinancialInstitution","ofx4js.domain.data.signon.FinancialInstitution.getId","ofx4js.domain.data.signon.FinancialInstitution.setId","ofx4js.domain.data.signon.FinancialInstitution.getOrganization","ofx4js.domain.data.signon.FinancialInstitution.setOrganization","ofx4js.domain.data.signon.SignonRequest","ofx4js.domain.data.signon.SignonRequest.constructor","ofx4js.domain.data.signon.SignonRequest.getTimestamp","ofx4js.domain.data.signon.SignonRequest.setTimestamp","ofx4js.domain.data.signon.SignonRequest.getUserId","ofx4js.domain.data.signon.SignonRequest.setUserId","ofx4js.domain.data.signon.SignonRequest.getPassword","ofx4js.domain.data.signon.SignonRequest.setPassword","ofx4js.domain.data.signon.SignonRequest.getUserKey","ofx4js.domain.data.signon.SignonRequest.setUserKey","ofx4js.domain.data.signon.SignonRequest.getGenerateUserKey","ofx4js.domain.data.signon.SignonRequest.setGenerateUserKey","ofx4js.domain.data.signon.SignonRequest.getLanguage","ofx4js.domain.data.signon.SignonRequest.setLanguage","ofx4js.domain.data.signon.SignonRequest.getFinancialInstitution","ofx4js.domain.data.signon.SignonRequest.setFinancialInstitution","ofx4js.domain.data.signon.SignonRequest.getSessionId","ofx4js.domain.data.signon.SignonRequest.setSessionId","ofx4js.domain.data.signon.SignonRequest.getApplicationId","ofx4js.domain.data.signon.SignonRequest.setApplicationId","ofx4js.domain.data.signon.SignonRequest.getApplicationVersion","ofx4js.domain.data.signon.SignonRequest.setApplicationVersion","ofx4js.domain.data.signon.SignonRequest.getClientUID","ofx4js.domain.data.signon.SignonRequest.setClientUID","ofx4js.domain.data.signon.SignonRequest.getAdditionalCredentials1","ofx4js.domain.data.signon.SignonRequest.setAdditionalCredentials1","ofx4js.domain.data.signon.SignonRequest.getAdditionalCredentials2","ofx4js.domain.data.signon.SignonRequest.setAdditionalCredentials2","ofx4js.domain.data.signon.SignonRequest.getAuthToken","ofx4js.domain.data.signon.SignonRequest.setAuthToken","ofx4js.domain.data.signon.SignonRequest.getAccessKey","ofx4js.domain.data.signon.SignonRequest.setAccessKey","ofx4js.domain.data.signon.PasswordChangeRequest","ofx4js.domain.data.signon.PasswordChangeRequest.constructor","ofx4js.domain.data.signon.PasswordChangeRequest.getUserId","ofx4js.domain.data.signon.PasswordChangeRequest.setUserId","ofx4js.domain.data.signon.PasswordChangeRequest.getNewPassword","ofx4js.domain.data.signon.PasswordChangeRequest.setNewPassword","ofx4js.domain.data.signon.PasswordChangeRequestTransaction","ofx4js.domain.data.signon.PasswordChangeRequestTransaction.constructor","ofx4js.domain.data.signon.PasswordChangeRequestTransaction.getMessage","ofx4js.domain.data.signon.PasswordChangeRequestTransaction.setMessage","ofx4js.domain.data.signon.PasswordChangeRequestTransaction.setWrappedMessage","ofx4js.domain.data.signon.SignonRequestMessageSet","ofx4js.domain.data.signon.SignonRequestMessageSet.constructor","ofx4js.domain.data.signon.SignonRequestMessageSet.getType","ofx4js.domain.data.signon.SignonRequestMessageSet.getSignonRequest","ofx4js.domain.data.signon.SignonRequestMessageSet.setSignonRequest","ofx4js.domain.data.signon.SignonRequestMessageSet.getPasswordChangeRequest","ofx4js.domain.data.signon.SignonRequestMessageSet.setPasswordChangeRequest","ofx4js.domain.data.signon.SignonRequestMessageSet.getRequestMessages","ofx4js.domain.data.signup.AccountInfoRequest","ofx4js.domain.data.signup.AccountInfoRequest.constructor","ofx4js.domain.data.signup.AccountInfoRequest.getLastUpdated","ofx4js.domain.data.signup.AccountInfoRequest.setLastUpdated","ofx4js.domain.data.signup.AccountInfoRequestTransaction","ofx4js.domain.data.signup.AccountInfoRequestTransaction.constructor","ofx4js.domain.data.signup.AccountInfoRequestTransaction.getMessage","ofx4js.domain.data.signup.AccountInfoRequestTransaction.setMessage","ofx4js.domain.data.signup.AccountInfoRequestTransaction.setWrappedMessage","ofx4js.domain.data.signup.SignupRequestMessageSet","ofx4js.domain.data.signup.SignupRequestMessageSet.constructor","ofx4js.domain.data.signup.SignupRequestMessageSet.getType","ofx4js.domain.data.signup.SignupRequestMessageSet.getAccountInfoRequest","ofx4js.domain.data.signup.SignupRequestMessageSet.setAccountInfoRequest","ofx4js.domain.data.signup.SignupRequestMessageSet.getRequestMessages","ofx4js.domain.data.signup.AccountInfoResponse","ofx4js.domain.data.signup.AccountInfoResponse.constructor","ofx4js.domain.data.signup.AccountInfoResponse.getResponseMessageName","ofx4js.domain.data.signup.AccountInfoResponse.getLastUpdated","ofx4js.domain.data.signup.AccountInfoResponse.setLastUpdated","ofx4js.domain.data.signup.AccountInfoResponse.getAccounts","ofx4js.domain.data.signup.AccountInfoResponse.setAccounts","ofx4js.domain.data.signup.AccountInfoResponseTransaction","ofx4js.domain.data.signup.AccountInfoResponseTransaction.constructor","ofx4js.domain.data.signup.AccountInfoResponseTransaction.getMessage","ofx4js.domain.data.signup.AccountInfoResponseTransaction.setMessage","ofx4js.domain.data.signup.AccountInfoResponseTransaction.getWrappedMessage","ofx4js.domain.data.signup.SignupResponseMessageSet","ofx4js.domain.data.signup.SignupResponseMessageSet.constructor","ofx4js.domain.data.signup.SignupResponseMessageSet.getType","ofx4js.domain.data.signup.SignupResponseMessageSet.getAccountInfoResponse","ofx4js.domain.data.signup.SignupResponseMessageSet.setAccountInfoResponse","ofx4js.domain.data.signup.SignupResponseMessageSet.getResponseMessages","ofx4js.domain.data.profile.ClientRoutingCapability","ofx4js.domain.data.profile.ProfileRequest","ofx4js.domain.data.profile.ProfileRequest.constructor","ofx4js.domain.data.profile.ProfileRequest.getRoutingCapability","ofx4js.domain.data.profile.ProfileRequest.setRoutingCapability","ofx4js.domain.data.profile.ProfileRequest.getProfileLastUpdated","ofx4js.domain.data.profile.ProfileRequest.setProfileLastUpdated","ofx4js.domain.data.profile.ProfileRequestTransaction","ofx4js.domain.data.profile.ProfileRequestTransaction.constructor","ofx4js.domain.data.profile.ProfileRequestTransaction.getMessage","ofx4js.domain.data.profile.ProfileRequestTransaction.setMessage","ofx4js.domain.data.profile.ProfileRequestTransaction.setWrappedMessage","ofx4js.domain.data.profile.ProfileRequestMessageSet","ofx4js.domain.data.profile.ProfileRequestMessageSet.constructor","ofx4js.domain.data.profile.ProfileRequestMessageSet.getType","ofx4js.domain.data.profile.ProfileRequestMessageSet.getProfileRequest","ofx4js.domain.data.profile.ProfileRequestMessageSet.setProfileRequest","ofx4js.domain.data.profile.ProfileRequestMessageSet.getRequestMessages","ofx4js.domain.data.profile.CoreMessageSetInfo","ofx4js.domain.data.profile.CoreMessageSetInfo.constructor","ofx4js.domain.data.profile.CoreMessageSetInfo.getVersion","ofx4js.domain.data.profile.CoreMessageSetInfo.setVersion","ofx4js.domain.data.profile.CoreMessageSetInfo.getServiceProviderName","ofx4js.domain.data.profile.CoreMessageSetInfo.setServiceProviderName","ofx4js.domain.data.profile.CoreMessageSetInfo.getUrl","ofx4js.domain.data.profile.CoreMessageSetInfo.setUrl","ofx4js.domain.data.profile.CoreMessageSetInfo.getSecurity","ofx4js.domain.data.profile.CoreMessageSetInfo.setSecurity","ofx4js.domain.data.profile.CoreMessageSetInfo.getSslRequired","ofx4js.domain.data.profile.CoreMessageSetInfo.setSslRequired","ofx4js.domain.data.profile.CoreMessageSetInfo.getRealm","ofx4js.domain.data.profile.CoreMessageSetInfo.setRealm","ofx4js.domain.data.profile.CoreMessageSetInfo.getLanguage","ofx4js.domain.data.profile.CoreMessageSetInfo.setLanguage","ofx4js.domain.data.profile.CoreMessageSetInfo.getSyncCapability","ofx4js.domain.data.profile.CoreMessageSetInfo.setSyncCapability","ofx4js.domain.data.profile.CoreMessageSetInfo.getFileBasedErrorRecoverySupport","ofx4js.domain.data.profile.CoreMessageSetInfo.setFileBasedErrorRecoverySupport","ofx4js.domain.data.profile.CoreMessageSetInfo.getIntuTimeout","ofx4js.domain.data.profile.CoreMessageSetInfo.setIntuTimeout","ofx4js.domain.data.profile.VersionSpecificMessageSetInfo","ofx4js.domain.data.profile.VersionSpecificMessageSetInfo.getCore","ofx4js.domain.data.profile.VersionSpecificMessageSetInfo.setCore","ofx4js.domain.data.profile.VersionSpecificMessageSetInfo.getMessageSetType","ofx4js.domain.data.profile.VersionSpecificMessageSetInfo.getVersion","ofx4js.domain.data.profile.VersionSpecificMessageSetInfo.getServiceProviderName","ofx4js.domain.data.profile.VersionSpecificMessageSetInfo.getUrl","ofx4js.domain.data.profile.VersionSpecificMessageSetInfo.getSecurity","ofx4js.domain.data.profile.VersionSpecificMessageSetInfo.isSslRequired","ofx4js.domain.data.profile.VersionSpecificMessageSetInfo.getRealm","ofx4js.domain.data.profile.VersionSpecificMessageSetInfo.getLanguage","ofx4js.domain.data.profile.VersionSpecificMessageSetInfo.getSyncCapability","ofx4js.domain.data.profile.VersionSpecificMessageSetInfo.hasFileBasedErrorRecoverySupport","ofx4js.domain.data.profile.AbstractMessageSetInfo","ofx4js.domain.data.profile.AbstractMessageSetInfo.getVersionSpecificInformationList","ofx4js.domain.data.profile.AbstractMessageSetInfo.setVersionSpecificInformationList","ofx4js.domain.data.profile.MessageSetInfoList","ofx4js.domain.data.profile.MessageSetInfoList.getInformationList","ofx4js.domain.data.profile.MessageSetInfoList.setInformationList","ofx4js.domain.data.profile.SignonInfo","ofx4js.domain.data.profile.SignonInfo.constructor","ofx4js.domain.data.profile.SignonInfo.getRealm","ofx4js.domain.data.profile.SignonInfo.setRealm","ofx4js.domain.data.profile.SignonInfo.getMinPasswordCharacters","ofx4js.domain.data.profile.SignonInfo.setMinPasswordCharacters","ofx4js.domain.data.profile.SignonInfo.getMaxPasswordCharacters","ofx4js.domain.data.profile.SignonInfo.setMaxPasswordCharacters","ofx4js.domain.data.profile.SignonInfo.getPasswordCharacterType","ofx4js.domain.data.profile.SignonInfo.setPasswordCharacterType","ofx4js.domain.data.profile.SignonInfo.getPasswordCaseSensitive","ofx4js.domain.data.profile.SignonInfo.setPasswordCaseSensitive","ofx4js.domain.data.profile.SignonInfo.getPasswordSpecialCharsAllowed","ofx4js.domain.data.profile.SignonInfo.setPasswordSpecialCharsAllowed","ofx4js.domain.data.profile.SignonInfo.getPasswordSpacesAllowed","ofx4js.domain.data.profile.SignonInfo.setPasswordSpacesAllowed","ofx4js.domain.data.profile.SignonInfo.getChangePasswordSupported","ofx4js.domain.data.profile.SignonInfo.setChangePasswordSupported","ofx4js.domain.data.profile.SignonInfo.getChangePasswordFirstRequired","ofx4js.domain.data.profile.SignonInfo.setChangePasswordFirstRequired","ofx4js.domain.data.profile.SignonInfo.getAdditionalCredientialsLabel1","ofx4js.domain.data.profile.SignonInfo.setAdditionalCredientialsLabel1","ofx4js.domain.data.profile.SignonInfo.getAdditionalCredientialsLabel2","ofx4js.domain.data.profile.SignonInfo.setAdditionalCredientialsLabel2","ofx4js.domain.data.profile.SignonInfo.getClientUIDRequired","ofx4js.domain.data.profile.SignonInfo.setClientUIDRequired","ofx4js.domain.data.profile.SignonInfo.getAuthTokenRequiredForFirstSignon","ofx4js.domain.data.profile.SignonInfo.setAuthTokenRequiredForFirstSignon","ofx4js.domain.data.profile.SignonInfo.getAuthTokenLabel","ofx4js.domain.data.profile.SignonInfo.setAuthTokenLabel","ofx4js.domain.data.profile.SignonInfo.getAuthTokenInfoURL","ofx4js.domain.data.profile.SignonInfo.setAuthTokenInfoURL","ofx4js.domain.data.profile.SignonInfo.getMfaSupported","ofx4js.domain.data.profile.SignonInfo.setMfaSupported","ofx4js.domain.data.profile.SignonInfo.getMfaChallengeRequiredForFirstSignon","ofx4js.domain.data.profile.SignonInfo.setMfaChallengeRequiredForFirstSignon","ofx4js.domain.data.profile.SignonInfoList","ofx4js.domain.data.profile.SignonInfoList.getInfoList","ofx4js.domain.data.profile.SignonInfoList.setInfoList","ofx4js.domain.data.profile.ProfileResponse","ofx4js.domain.data.profile.ProfileResponse.constructor","ofx4js.domain.data.profile.ProfileResponse.getMessageSetList","ofx4js.domain.data.profile.ProfileResponse.setMessageSetList","ofx4js.domain.data.profile.ProfileResponse.getSignonInfoList","ofx4js.domain.data.profile.ProfileResponse.setSignonInfoList","ofx4js.domain.data.profile.ProfileResponse.getResponseMessageName","ofx4js.domain.data.profile.ProfileResponse.getLastUpdated","ofx4js.domain.data.profile.ProfileResponse.getTimestamp","ofx4js.domain.data.profile.ProfileResponse.setTimestamp","ofx4js.domain.data.profile.ProfileResponse.getFinancialInstitutionName","ofx4js.domain.data.profile.ProfileResponse.setFinancialInstitutionName","ofx4js.domain.data.profile.ProfileResponse.getAddress1","ofx4js.domain.data.profile.ProfileResponse.setAddress1","ofx4js.domain.data.profile.ProfileResponse.getAddress2","ofx4js.domain.data.profile.ProfileResponse.setAddress2","ofx4js.domain.data.profile.ProfileResponse.getAddress3","ofx4js.domain.data.profile.ProfileResponse.setAddress3","ofx4js.domain.data.profile.ProfileResponse.getCity","ofx4js.domain.data.profile.ProfileResponse.setCity","ofx4js.domain.data.profile.ProfileResponse.getState","ofx4js.domain.data.profile.ProfileResponse.setState","ofx4js.domain.data.profile.ProfileResponse.getZip","ofx4js.domain.data.profile.ProfileResponse.setZip","ofx4js.domain.data.profile.ProfileResponse.getCountry","ofx4js.domain.data.profile.ProfileResponse.setCountry","ofx4js.domain.data.profile.ProfileResponse.getCustomerServicePhone","ofx4js.domain.data.profile.ProfileResponse.setCustomerServicePhone","ofx4js.domain.data.profile.ProfileResponse.getTechnicalSupportPhone","ofx4js.domain.data.profile.ProfileResponse.setTechnicalSupportPhone","ofx4js.domain.data.profile.ProfileResponse.getFax","ofx4js.domain.data.profile.ProfileResponse.setFax","ofx4js.domain.data.profile.ProfileResponse.getSiteURL","ofx4js.domain.data.profile.ProfileResponse.setSiteURL","ofx4js.domain.data.profile.ProfileResponse.getEmail","ofx4js.domain.data.profile.ProfileResponse.setEmail","ofx4js.domain.data.profile.ProfileResponse.getMessageSetProfile","ofx4js.domain.data.profile.ProfileResponse.getMessageSetProfile_noversion","ofx4js.domain.data.profile.ProfileResponse.getProfiles","ofx4js.domain.data.profile.ProfileResponse.getMessageSetProfile_version","ofx4js.domain.data.profile.ProfileResponse.getSignonProfile","ofx4js.domain.data.profile.ProfileResponseTransaction","ofx4js.domain.data.profile.ProfileResponseTransaction.constructor","ofx4js.domain.data.profile.ProfileResponseTransaction.getMessage","ofx4js.domain.data.profile.ProfileResponseTransaction.setMessage","ofx4js.domain.data.profile.ProfileResponseTransaction.getWrappedMessage","ofx4js.domain.data.profile.ProfileResponseMessageSet","ofx4js.domain.data.profile.ProfileResponseMessageSet.constructor","ofx4js.domain.data.profile.ProfileResponseMessageSet.getType","ofx4js.domain.data.profile.ProfileResponseMessageSet.getProfileResponse","ofx4js.domain.data.profile.ProfileResponseMessageSet.setProfileResponse","ofx4js.domain.data.profile.ProfileResponseMessageSet.getResponseMessages","ofx4js.meta.Header_add","ofx4js.domain.data.RequestEnvelope","ofx4js.domain.data.RequestEnvelope.constructor","ofx4js.domain.data.RequestEnvelope.getSecurity","ofx4js.domain.data.RequestEnvelope.setSecurity","ofx4js.domain.data.RequestEnvelope.getUID","ofx4js.domain.data.RequestEnvelope.setUID","ofx4js.domain.data.RequestEnvelope.getLastProcessedUID","ofx4js.domain.data.RequestEnvelope.setLastProcessedUID","ofx4js.domain.data.RequestEnvelope.getMessageSets","ofx4js.domain.data.RequestEnvelope.setMessageSets","ofx4js.domain.data.signon.PasswordChangeResponse","ofx4js.domain.data.signon.PasswordChangeResponse.constructor","ofx4js.domain.data.signon.PasswordChangeResponse.getUserId","ofx4js.domain.data.signon.PasswordChangeResponse.getResponseMessageName","ofx4js.domain.data.signon.PasswordChangeResponse.setUserId","ofx4js.domain.data.signon.PasswordChangeResponse.getChangeTimestamp","ofx4js.domain.data.signon.PasswordChangeResponse.setChangeTimestamp","ofx4js.domain.data.signon.PasswordChangeResponseTransaction","ofx4js.domain.data.signon.PasswordChangeResponseTransaction.constructor","ofx4js.domain.data.signon.PasswordChangeResponseTransaction.getMessage","ofx4js.domain.data.signon.PasswordChangeResponseTransaction.setMessage","ofx4js.domain.data.signon.PasswordChangeResponseTransaction.getWrappedMessage","ofx4js.domain.data.signon.SignonResponse","ofx4js.domain.data.signon.SignonResponse.constructor","ofx4js.domain.data.signon.SignonResponse.getResponseMessageName","ofx4js.domain.data.signon.SignonResponse.getStatusHolderName","ofx4js.domain.data.signon.SignonResponse.getStatus","ofx4js.domain.data.signon.SignonResponse.setStatus","ofx4js.domain.data.signon.SignonResponse.getTimestamp","ofx4js.domain.data.signon.SignonResponse.setTimestamp","ofx4js.domain.data.signon.SignonResponse.getUserKey","ofx4js.domain.data.signon.SignonResponse.setUserKey","ofx4js.domain.data.signon.SignonResponse.getUserKeyExpiration","ofx4js.domain.data.signon.SignonResponse.setUserKeyExpiration","ofx4js.domain.data.signon.SignonResponse.getLanguage","ofx4js.domain.data.signon.SignonResponse.setLanguage","ofx4js.domain.data.signon.SignonResponse.getProfileLastUpdated","ofx4js.domain.data.signon.SignonResponse.setProfileLastUpdated","ofx4js.domain.data.signon.SignonResponse.getAccountLastUpdated","ofx4js.domain.data.signon.SignonResponse.setAccountLastUpdated","ofx4js.domain.data.signon.SignonResponse.getFinancialInstitution","ofx4js.domain.data.signon.SignonResponse.setFinancialInstitution","ofx4js.domain.data.signon.SignonResponse.getSessionId","ofx4js.domain.data.signon.SignonResponse.setSessionId","ofx4js.domain.data.signon.SignonResponse.getAccessKey","ofx4js.domain.data.signon.SignonResponse.setAccessKey","ofx4js.domain.data.signon.SignonResponseMessageSet","ofx4js.domain.data.signon.SignonResponseMessageSet.constructor","ofx4js.domain.data.signon.SignonResponseMessageSet.getType","ofx4js.domain.data.signon.SignonResponseMessageSet.getSignonResponse","ofx4js.domain.data.signon.SignonResponseMessageSet.setSignonResponse","ofx4js.domain.data.signon.SignonResponseMessageSet.getPasswordChangeResponse","ofx4js.domain.data.signon.SignonResponseMessageSet.setPasswordChangeResponse","ofx4js.domain.data.signon.SignonResponseMessageSet.getResponseMessages","ofx4js.domain.data.ResponseEnvelope","ofx4js.domain.data.ResponseEnvelope.getSecurity","ofx4js.domain.data.ResponseEnvelope.setSecurity","ofx4js.domain.data.ResponseEnvelope.getUID","ofx4js.domain.data.ResponseEnvelope.setUID","ofx4js.domain.data.ResponseEnvelope.getMessageSets","ofx4js.domain.data.ResponseEnvelope.setMessageSets","ofx4js.domain.data.ResponseEnvelope.getSignonResponse","ofx4js.domain.data.ResponseEnvelope.getMessageSet","ofx4js.client.net","ofx4js.client.net.OFXConnectionException","ofx4js.client.net.OFXConnectionException.constructor","ofx4js.domain.data.investment.statements.IncludePosition","ofx4js.domain.data.investment.statements.IncludePosition.constructor","ofx4js.domain.data.investment.statements.IncludePosition.getDateSentDown","ofx4js.domain.data.investment.statements.IncludePosition.setDateSentDown","ofx4js.domain.data.investment.statements.IncludePosition.getIncludePositions","ofx4js.domain.data.investment.statements.IncludePosition.setIncludePositions","ofx4js.domain.data.investment.statements.InvestmentStatementRequest","ofx4js.domain.data.investment.statements.InvestmentStatementRequest.constructor","ofx4js.domain.data.investment.statements.InvestmentStatementRequest.getAccount","ofx4js.domain.data.investment.statements.InvestmentStatementRequest.setAccount","ofx4js.domain.data.investment.statements.InvestmentStatementRequest.getIncludeOpenOrders","ofx4js.domain.data.investment.statements.InvestmentStatementRequest.setIncludeOpenOrders","ofx4js.domain.data.investment.statements.InvestmentStatementRequest.getIncludePosition","ofx4js.domain.data.investment.statements.InvestmentStatementRequest.setIncludePosition","ofx4js.domain.data.investment.statements.InvestmentStatementRequest.getIncludeBalance","ofx4js.domain.data.investment.statements.InvestmentStatementRequest.setIncludeBalance","ofx4js.domain.data.investment.statements.InvestmentStatementRequestTransaction","ofx4js.domain.data.investment.statements.InvestmentStatementRequestTransaction.constructor","ofx4js.domain.data.investment.statements.InvestmentStatementRequestTransaction.getMessage","ofx4js.domain.data.investment.statements.InvestmentStatementRequestTransaction.setMessage","ofx4js.domain.data.investment.statements.InvestmentStatementRequestTransaction.setWrappedMessage","ofx4js.domain.data.investment.statements.InvestmentStatementRequestMessageSet","ofx4js.domain.data.investment.statements.InvestmentStatementRequestMessageSet.constructor","ofx4js.domain.data.investment.statements.InvestmentStatementRequestMessageSet.getType","ofx4js.domain.data.investment.statements.InvestmentStatementRequestMessageSet.getStatementRequest","ofx4js.domain.data.investment.statements.InvestmentStatementRequestMessageSet.setStatementRequest","ofx4js.domain.data.investment.statements.InvestmentStatementRequestMessageSet.getRequestMessages","ofx4js.domain.data.investment.statements.InvestmentStatementResponseTransaction","ofx4js.domain.data.investment.statements.InvestmentStatementResponseTransaction.constructor","ofx4js.domain.data.investment.statements.InvestmentStatementResponseTransaction.getMessage","ofx4js.domain.data.investment.statements.InvestmentStatementResponseTransaction.setMessage","ofx4js.domain.data.investment.statements.InvestmentStatementResponseTransaction.getWrappedMessage","ofx4js.domain.data.investment.statements.InvestmentStatementResponseMessageSet","ofx4js.domain.data.investment.statements.InvestmentStatementResponseMessageSet.constructor","ofx4js.domain.data.investment.statements.InvestmentStatementResponseMessageSet.getType","ofx4js.domain.data.investment.statements.InvestmentStatementResponseMessageSet.getStatementResponses","ofx4js.domain.data.investment.statements.InvestmentStatementResponseMessageSet.setStatementResponses","ofx4js.domain.data.investment.statements.InvestmentStatementResponseMessageSet.getStatementResponse","ofx4js.domain.data.investment.statements.InvestmentStatementResponseMessageSet.setStatementResponse","ofx4js.domain.data.investment.statements.InvestmentStatementResponseMessageSet.getResponseMessages","ofx4js.domain.data.seclist.SecurityListRequest","ofx4js.domain.data.seclist.SecurityListRequest.constructor","ofx4js.domain.data.seclist.SecurityListRequest.getSecurityRequests","ofx4js.domain.data.seclist.SecurityListRequest.setSecurityRequests","ofx4js.domain.data.seclist.SecurityListRequestTransaction","ofx4js.domain.data.seclist.SecurityListRequestTransaction.constructor","ofx4js.domain.data.seclist.SecurityListRequestTransaction.getMessage","ofx4js.domain.data.seclist.SecurityListRequestTransaction.setMessage","ofx4js.domain.data.seclist.SecurityListRequestTransaction.setWrappedMessage","ofx4js.domain.data.seclist.SecurityListRequestMessageSet","ofx4js.domain.data.seclist.SecurityListRequestMessageSet.constructor","ofx4js.domain.data.seclist.SecurityListRequestMessageSet.getType","ofx4js.domain.data.seclist.SecurityListRequestMessageSet.getSecurityListRequest","ofx4js.domain.data.seclist.SecurityListRequestMessageSet.setSecurityListRequest","ofx4js.domain.data.seclist.SecurityListRequestMessageSet.getRequestMessages","ofx4js.domain.data.seclist.SecurityListResponseTransaction","ofx4js.domain.data.seclist.SecurityListResponseTransaction.constructor","ofx4js.domain.data.seclist.SecurityListResponseTransaction.getMessage","ofx4js.domain.data.seclist.SecurityListResponseTransaction.setMessage","ofx4js.domain.data.seclist.SecurityListResponseTransaction.getWrappedMessage","ofx4js.domain.data.seclist.SecurityListResponseMessageSet","ofx4js.domain.data.seclist.SecurityListResponseMessageSet.constructor","ofx4js.domain.data.seclist.SecurityListResponseMessageSet.getType","ofx4js.domain.data.seclist.SecurityListResponseMessageSet.getSecurityListResponse","ofx4js.domain.data.seclist.SecurityListResponseMessageSet.setSecurityListResponse","ofx4js.domain.data.seclist.SecurityListResponseMessageSet.getSecurityList","ofx4js.domain.data.seclist.SecurityListResponseMessageSet.setSecurityList","ofx4js.domain.data.seclist.SecurityListResponseMessageSet.getResponseMessages","ofx4js.client.impl.InvestmentAccountImpl","ofx4js.client.impl.InvestmentAccountImpl.constructor","ofx4js.client.impl.InvestmentAccountImpl.readStatement","ofx4js.client.impl.InvestmentAccountImpl.readSecurityList","ofx4js.client.impl.InvestmentAccountImpl.getDetails","ofx4js.client.impl.InvestmentAccountImpl.unwrapStatementResponse","ofx4js.client.impl.InvestmentAccountImpl.createStatementRequestMessageSet","ofx4js.client.impl.InvestmentAccountImpl.createStatementRequest","ofx4js.client.impl.InvestmentAccountImpl.createSecurityListRequestMessageSet","ofx4js.client.impl.InvestmentAccountImpl.createSecurityListRequest","ofx4js.client.impl.InvestmentAccountImpl.unwrapSecurityList","ofx4js.client.impl.FinancialInstitutionImpl","ofx4js.client.impl.FinancialInstitutionImpl.constructor","ofx4js.client.impl.FinancialInstitutionImpl.readProfile","ofx4js.client.impl.FinancialInstitutionImpl.readAccountProfiles","ofx4js.client.impl.FinancialInstitutionImpl.loadBankAccount","ofx4js.client.impl.FinancialInstitutionImpl.loadCreditCardAccount","ofx4js.client.impl.FinancialInstitutionImpl.loadInvestmentAccount","ofx4js.client.impl.FinancialInstitutionImpl.createAuthenticatedRequest","ofx4js.client.impl.FinancialInstitutionImpl.sendRequest","ofx4js.client.impl.FinancialInstitutionImpl.getProfile","ofx4js.client.impl.FinancialInstitutionImpl.doGeneralValidationChecks","ofx4js.client.impl.FinancialInstitutionImpl.validateStatus","ofx4js.client.impl.FinancialInstitutionImpl.createProfileTransaction","ofx4js.client.impl.FinancialInstitutionImpl.createProfileRequest","ofx4js.client.impl.FinancialInstitutionImpl.createSignonRequest","ofx4js.client.impl.FinancialInstitutionImpl.createAccountInfoTransaction","ofx4js.client.impl.FinancialInstitutionImpl.createAccountInfoRequest","ofx4js.client.impl.FinancialInstitutionImpl.getAccountProfiles","ofx4js.client.impl.FinancialInstitutionImpl.getConnection","ofx4js.client.impl.FinancialInstitutionImpl.getData","ofx4js.client.impl.BankingAccountImpl","ofx4js.client.impl.BankingAccountImpl.constructor","ofx4js.client.impl.BankingAccountImpl.unwrapStatementResponse","ofx4js.client.impl.BankingAccountImpl.createRequestMessageSet","ofx4js.client.impl.BankingAccountImpl.createTransaction","ofx4js.client.impl.BankingAccountImpl.createStatementRequest","ofx4js.client.impl.BaseFinancialInstitutionData","ofx4js.client.impl.BaseFinancialInstitutionData.constructor","ofx4js.client.impl.BaseFinancialInstitutionData.getId","ofx4js.client.impl.BaseFinancialInstitutionData.setId","ofx4js.client.impl.BaseFinancialInstitutionData.getFinancialInstitutionId","ofx4js.client.impl.BaseFinancialInstitutionData.setFinancialInstitutionId","ofx4js.client.impl.BaseFinancialInstitutionData.getName","ofx4js.client.impl.BaseFinancialInstitutionData.setName","ofx4js.client.impl.BaseFinancialInstitutionData.getOrganization","ofx4js.client.impl.BaseFinancialInstitutionData.setOrganization","ofx4js.client.impl.BaseFinancialInstitutionData.getOFXURL","ofx4js.client.impl.BaseFinancialInstitutionData.setOFXURL","ofx4js.client.impl.BaseFinancialInstitutionData.getBrokerId","ofx4js.client.impl.BaseFinancialInstitutionData.setBrokerId","ofx4js.domain.data.creditcard.CreditCardStatementRequest","ofx4js.domain.data.creditcard.CreditCardStatementRequest.constructor","ofx4js.domain.data.creditcard.CreditCardStatementRequest.getAccount","ofx4js.domain.data.creditcard.CreditCardStatementRequest.setAccount","ofx4js.domain.data.creditcard.CreditCardStatementRequestTransaction","ofx4js.domain.data.creditcard.CreditCardStatementRequestTransaction.constructor","ofx4js.domain.data.creditcard.CreditCardStatementRequestTransaction.getMessage","ofx4js.domain.data.creditcard.CreditCardStatementRequestTransaction.setMessage","ofx4js.domain.data.creditcard.CreditCardStatementRequestTransaction.setWrappedMessage","ofx4js.domain.data.creditcard.CreditCardRequestMessageSet","ofx4js.domain.data.creditcard.CreditCardRequestMessageSet.constructor","ofx4js.domain.data.creditcard.CreditCardRequestMessageSet.getType","ofx4js.domain.data.creditcard.CreditCardRequestMessageSet.getStatementRequest","ofx4js.domain.data.creditcard.CreditCardRequestMessageSet.setStatementRequest","ofx4js.domain.data.creditcard.CreditCardRequestMessageSet.getRequestMessages","ofx4js.domain.data.creditcard.CreditCardStatementResponse","ofx4js.domain.data.creditcard.CreditCardStatementResponse.constructor","ofx4js.domain.data.creditcard.CreditCardStatementResponse.getResponseMessageName","ofx4js.domain.data.creditcard.CreditCardStatementResponse.getAccount","ofx4js.domain.data.creditcard.CreditCardStatementResponse.setAccount","ofx4js.domain.data.creditcard.CreditCardStatementResponseTransaction","ofx4js.domain.data.creditcard.CreditCardStatementResponseTransaction.constructor","ofx4js.domain.data.creditcard.CreditCardStatementResponseTransaction.getMessage","ofx4js.domain.data.creditcard.CreditCardStatementResponseTransaction.setMessage","ofx4js.domain.data.creditcard.CreditCardStatementResponseTransaction.getWrappedMessage","ofx4js.domain.data.creditcard.CreditCardResponseMessageSet","ofx4js.domain.data.creditcard.CreditCardResponseMessageSet.constructor","ofx4js.domain.data.creditcard.CreditCardResponseMessageSet.getType","ofx4js.domain.data.creditcard.CreditCardResponseMessageSet.getStatementResponses","ofx4js.domain.data.creditcard.CreditCardResponseMessageSet.setStatementResponses","ofx4js.domain.data.creditcard.CreditCardResponseMessageSet.getStatementResponse","ofx4js.domain.data.creditcard.CreditCardResponseMessageSet.setStatementResponse","ofx4js.domain.data.creditcard.CreditCardResponseMessageSet.getResponseMessages","ofx4js.client.impl.CreditCardAccountImpl","ofx4js.client.impl.CreditCardAccountImpl.constructor","ofx4js.client.impl.CreditCardAccountImpl.unwrapStatementResponse","ofx4js.client.impl.CreditCardAccountImpl.createRequestMessageSet","ofx4js.client.impl.CreditCardAccountImpl.createTransaction","ofx4js.client.impl.CreditCardAccountImpl.createStatementRequest","ofx4js.client.net.OFXServerException","ofx4js.client.net.OFXServerException.constructor","ofx4js.client.net.OFXServerException.getHttpCode","ofx4js.io.OFXParseException","ofx4js.io.OFXParseException.constructor","ofx4js.domain.data.common.UnknownStatusCode","ofx4js.domain.data.common.UnknownStatusCode.constructor","ofx4js.domain.data.common.UnknownStatusCode.getCode","ofx4js.domain.data.common.UnknownStatusCode.getMessage","ofx4js.domain.data.common.UnknownStatusCode.getDefaultSeverity","ofx4js.domain.data.common.UnknownStatusCode.toString","ofx4js.io.DefaultStringConversion","ofx4js.io.DefaultStringConversion.toString","ofx4js.io.DefaultStringConversion.fromString","ofx4js.io.DefaultStringConversion.parseDate","ofx4js.io.DefaultStringConversion.formatDate","ofx4js.io.DefaultStringConversion.pad","ofx4js.io.DefaultStringConversion.dpad","ofx4js.io.AggregateMarshaller","ofx4js.io.AggregateMarshaller.constructor","ofx4js.io.AggregateMarshaller.marshal","ofx4js.io.AggregateMarshaller.writeAggregateAttributes","ofx4js.io.AggregateMarshaller.getConversion","ofx4js.io.AggregateMarshaller.setConversion","ofx4js.collections.Stack","ofx4js.collections.Stack.constructor","ofx4js.collections.Stack.push","ofx4js.collections.Stack.pop","ofx4js.collections.Stack.peek","ofx4js.collections.Stack.isEmpty","ofx4js.io.OFXSyntaxException","ofx4js.io.OFXSyntaxException.constructor","ofx4js.io.AggregateInfoHolder","ofx4js.io.AggregateInfoHolder.constructor","ofx4js.io.AggregateInfoHolder.AggregateInfoHolder1","ofx4js.io.AggregateInfoHolder.AggregateInfoHolder3","ofx4js.io.AggregateInfoHolder.isBeingSkipped","ofx4js.io.AggregateInfoHolder.isSkipping","ofx4js.io.AggregateStackContentHandler","ofx4js.io.AggregateStackContentHandler.constructor","ofx4js.io.AggregateStackContentHandler.onHeader","ofx4js.io.AggregateStackContentHandler.onElement","ofx4js.io.AggregateStackContentHandler.startAggregate","ofx4js.io.AggregateStackContentHandler.endAggregate","ofx4js.io.StringReader","ofx4js.io.StringReader.constructor","ofx4js.io.StringReader.read","ofx4js.io.StringReader.readChar","ofx4js.io.StringReader.close","ofx4js.io.StringReader.mark","ofx4js.io.StringReader.reset","ofx4js.io.StringReader.remainder","ofx4js.io.DefaultHandler","ofx4js.io.OFXParseEventType","ofx4js.io.OFXParseEvent","ofx4js.io.OFXParseEvent.constructor","ofx4js.io.OFXParseEvent.getEventType","ofx4js.io.OFXParseEvent.getEventValue","ofx4js.io.OFXV2ContentHandler","ofx4js.io.OFXV2ContentHandler.constructor","ofx4js.io.OFXV2ContentHandler.install","ofx4js.io.OFXV2ContentHandler.onopentag","ofx4js.io.OFXV2ContentHandler.isAlreadyStarted","ofx4js.io.OFXV2ContentHandler.onclosetag","ofx4js.io.OFXV2ContentHandler.ontext","ofx4js.io.arraysEqual","ofx4js.io.BaseOFXReader","ofx4js.io.BaseOFXReader.constructor","ofx4js.io.BaseOFXReader.getContentHandler","ofx4js.io.BaseOFXReader.setContentHandler","ofx4js.io.BaseOFXReader.parse","ofx4js.io.BaseOFXReader.getFirstElementStart","ofx4js.io.BaseOFXReader.contains","ofx4js.io.BaseOFXReader.shiftAndAppend","ofx4js.io.BaseOFXReader.parseV1FromFirstElement","ofx4js.io.BaseOFXReader.parseV2FromFirstElement","ofx4js.io.BaseOFXReader.processOFXv1Headers","ofx4js.io.BaseOFXReader.processOFXv2Headers","ofx4js.io.AggregateUnmarshaller","ofx4js.io.AggregateUnmarshaller.constructor","ofx4js.io.AggregateUnmarshaller.unmarshal","ofx4js.io.AggregateUnmarshaller.newReader","ofx4js.io.AggregateUnmarshaller.getConversion","ofx4js.io.AggregateUnmarshaller.setConversion","ofx4js.io.OutputBuffer","ofx4js.io.OutputBuffer.constructor","ofx4js.io.OutputBuffer.toString","ofx4js.io.OutputBuffer.append","ofx4js.io.OutputBuffer.size","currentValue","length","ofx4js.io.StreamWriter","ofx4js.io.StreamWriter.constructor","ofx4js.io.StreamWriter.write","ofx4js.io.v1","ofx4js.io.v1.OFXV1Writer","ofx4js.io.v1.OFXV1Writer.constructor","ofx4js.io.v1.OFXV1Writer.newWriter","ofx4js.io.v1.OFXV1Writer.writeHeaders","ofx4js.io.v1.OFXV1Writer.writeStartAggregate","ofx4js.io.v1.OFXV1Writer.writeElement","ofx4js.io.v1.OFXV1Writer.writeEndAggregate","ofx4js.io.v1.OFXV1Writer.isWriteAttributesOnNewLine","ofx4js.io.v1.OFXV1Writer.setWriteAttributesOnNewLine","ofx4js.io.v1.OFXV1Writer.close","ofx4js.io.v1.OFXV1Writer.flush","ofx4js.io.v1.OFXV1Writer.println","ofx4js.io.v1.OFXV1Writer.print","ofx4js.client.net.DefaultAjaxHandler","request","XMLHttpRequest","onloadCalled","open","url","async","header","headers","setRequestHeader","onload","status","resolve","responseText","reject","OFXException","onerror","send","data","ofx4js.client.net.OFXV1Connection","ofx4js.client.net.OFXV1Connection.constructor","ofx4js.client.net.OFXV1Connection.sendRequest","ofx4js.client.net.OFXV1Connection.logRequest","ofx4js.client.net.OFXV1Connection.logResponse","ofx4js.client.net.OFXV1Connection.sendBuffer","ofx4js.client.net.OFXV1Connection.unmarshal","ofx4js.client.net.OFXV1Connection.newOFXWriter","ofx4js.client.net.OFXV1Connection.getMarshaller","ofx4js.client.net.OFXV1Connection.setMarshaller","ofx4js.client.net.OFXV1Connection.getUnmarshaller","ofx4js.client.net.OFXV1Connection.setUnmarshaller","ofx4js.client.net.OFXV1Connection.getAsync","ofx4js.client.net.OFXV1Connection.setAsync","ofx4js.client.net.OFXV1Connection.getAjax","ofx4js.client.net.OFXV1Connection.setAjax","ofx4js.io.v2","ofx4js.io.v2.OFXV2Writer","ofx4js.io.v2.OFXV2Writer.constructor","ofx4js.io.v2.OFXV2Writer.newWriter","ofx4js.io.v2.OFXV2Writer.writeHeaders","ofx4js.io.v2.OFXV2Writer.writeElement","ofx4js.io.v2.OFXV2Writer.isWriteAttributesOnNewLine","ofx4js.client.net.OFXV2Connection","ofx4js.client.net.OFXV2Connection.constructor","ofx4js.client.net.OFXV2Connection.newOFXWriter","ofx4js.domain.data.common.ProcessorDayOff_fromOfx","ofx4js.domain.data.common.ProcessorDayOff","ofx4js.domain.data.common.T1099Request","ofx4js.domain.data.common.T1099Request.constructor","ofx4js.domain.data.common.T1099Response","ofx4js.domain.data.common.T1099Response.constructor","ofx4js.domain.data.common.TransferInfo","ofx4js.domain.data.common.TransferInfo.getBankAccountFrom","ofx4js.domain.data.common.TransferInfo.setBankAccountFrom","ofx4js.domain.data.common.TransferInfo.setAccountFrom","ofx4js.domain.data.common.TransferInfo.getCreditCardAccountFrom","ofx4js.domain.data.common.TransferInfo.setCreditCardAccountFrom","ofx4js.domain.data.common.TransferInfo.getBankAccountTo","ofx4js.domain.data.common.TransferInfo.setBankAccountTo","ofx4js.domain.data.common.TransferInfo.setAccountTo","ofx4js.domain.data.common.TransferInfo.getCreditCardAccountTo","ofx4js.domain.data.common.TransferInfo.setCreditCardAccountTo","ofx4js.domain.data.common.TransferInfo.getAmount","ofx4js.domain.data.common.TransferInfo.setAmount","ofx4js.domain.data.common.TransferInfo.getDue","ofx4js.domain.data.common.TransferInfo.setDue","ofx4js.domain.data.common.TransferStatusEvent","ofx4js.domain.data.common.TransferStatus","ofx4js.domain.data.common.TransferStatus.getEvent","ofx4js.domain.data.common.TransferStatus.setEvent","ofx4js.domain.data.common.TransferStatus.getDate","ofx4js.domain.data.common.TransferStatus.setDate","ofx4js.domain.data.investment.positions.DebtPosition","ofx4js.domain.data.investment.positions.DebtPosition.constructor","ofx4js.domain.data.investment.positions.MutualFundPosition","ofx4js.domain.data.investment.positions.MutualFundPosition.constructor","ofx4js.domain.data.investment.positions.MutualFundPosition.getUnitsStreet","ofx4js.domain.data.investment.positions.MutualFundPosition.setUnitsStreet","ofx4js.domain.data.investment.positions.MutualFundPosition.getUnitsUser","ofx4js.domain.data.investment.positions.MutualFundPosition.setUnitsUser","ofx4js.domain.data.investment.positions.MutualFundPosition.getReinvestDividends","ofx4js.domain.data.investment.positions.MutualFundPosition.setReinvestDividends","ofx4js.domain.data.investment.positions.MutualFundPosition.getReinvestCapitalGains","ofx4js.domain.data.investment.positions.MutualFundPosition.setReinvestCapitalGains","ofx4js.domain.data.investment.positions.ShortOptionSecurity_fromOfx","ofx4js.domain.data.investment.positions.ShortOptionSecurity","ofx4js.domain.data.investment.positions.OptionsPosition","ofx4js.domain.data.investment.positions.OptionsPosition.constructor","ofx4js.domain.data.investment.positions.OptionsPosition.getSecured","ofx4js.domain.data.investment.positions.OptionsPosition.setSecured","ofx4js.domain.data.investment.positions.OptionsPosition.getSecuredEnum","ofx4js.domain.data.investment.positions.OtherPosition","ofx4js.domain.data.investment.positions.OtherPosition.constructor","ofx4js.domain.data.investment.positions.StockPosition","ofx4js.domain.data.investment.positions.StockPosition.constructor","ofx4js.domain.data.investment.positions.StockPosition.getUnitsStreet","ofx4js.domain.data.investment.positions.StockPosition.setUnitsStreet","ofx4js.domain.data.investment.positions.StockPosition.getUnitsUser","ofx4js.domain.data.investment.positions.StockPosition.setUnitsUser","ofx4js.domain.data.investment.positions.StockPosition.getReinvestDividends","ofx4js.domain.data.investment.positions.StockPosition.setReinvestDividends","ofx4js.domain.data.investment.transactions.OriginalCurrency","ofx4js.domain.data.investment.transactions.OriginalCurrency.getCurrencyRate","ofx4js.domain.data.investment.transactions.OriginalCurrency.setCurrencyRate","ofx4js.domain.data.investment.transactions.OriginalCurrency.getCurrencyCode","ofx4js.domain.data.investment.transactions.OriginalCurrency.setCurrencyCode","ofx4js.domain.data.investment.transactions.BuyInvestmentTransaction","ofx4js.domain.data.investment.transactions.BuyInvestmentTransaction.getInvestmentTransaction","ofx4js.domain.data.investment.transactions.BuyInvestmentTransaction.setInvestmentTransaction","ofx4js.domain.data.investment.transactions.BuyInvestmentTransaction.getSecurityId","ofx4js.domain.data.investment.transactions.BuyInvestmentTransaction.setSecurityId","ofx4js.domain.data.investment.transactions.BuyInvestmentTransaction.getUnits","ofx4js.domain.data.investment.transactions.BuyInvestmentTransaction.setUnits","ofx4js.domain.data.investment.transactions.BuyInvestmentTransaction.getUnitPrice","ofx4js.domain.data.investment.transactions.BuyInvestmentTransaction.setUnitPrice","ofx4js.domain.data.investment.transactions.BuyInvestmentTransaction.getMarkup","ofx4js.domain.data.investment.transactions.BuyInvestmentTransaction.setMarkup","ofx4js.domain.data.investment.transactions.BuyInvestmentTransaction.getCommission","ofx4js.domain.data.investment.transactions.BuyInvestmentTransaction.setCommission","ofx4js.domain.data.investment.transactions.BuyInvestmentTransaction.getTaxes","ofx4js.domain.data.investment.transactions.BuyInvestmentTransaction.setTaxes","ofx4js.domain.data.investment.transactions.BuyInvestmentTransaction.getFees","ofx4js.domain.data.investment.transactions.BuyInvestmentTransaction.setFees","ofx4js.domain.data.investment.transactions.BuyInvestmentTransaction.getLoad","ofx4js.domain.data.investment.transactions.BuyInvestmentTransaction.setLoad","ofx4js.domain.data.investment.transactions.BuyInvestmentTransaction.getTotal","ofx4js.domain.data.investment.transactions.BuyInvestmentTransaction.setTotal","ofx4js.domain.data.investment.transactions.BuyInvestmentTransaction.getCurrencyCode","ofx4js.domain.data.investment.transactions.BuyInvestmentTransaction.setCurrencyCode","ofx4js.domain.data.investment.transactions.BuyInvestmentTransaction.getOriginalCurrencyInfo","ofx4js.domain.data.investment.transactions.BuyInvestmentTransaction.setOriginalCurrencyInfo","ofx4js.domain.data.investment.transactions.BuyInvestmentTransaction.getSubAccountSecurity","ofx4js.domain.data.investment.transactions.BuyInvestmentTransaction.setSubAccountSecurity","ofx4js.domain.data.investment.transactions.BuyInvestmentTransaction.getSubAccountSecurityEnum","ofx4js.domain.data.investment.transactions.BuyInvestmentTransaction.getSubAccountFund","ofx4js.domain.data.investment.transactions.BuyInvestmentTransaction.setSubAccountFund","ofx4js.domain.data.investment.transactions.BuyInvestmentTransaction.getSubAccountFundEnum","ofx4js.domain.data.investment.transactions.BaseBuyInvestmentTransaction","ofx4js.domain.data.investment.transactions.BaseBuyInvestmentTransaction.constructor","ofx4js.domain.data.investment.transactions.BaseBuyInvestmentTransaction.getBuyInvestment","ofx4js.domain.data.investment.transactions.BaseBuyInvestmentTransaction.setBuyInvestment","ofx4js.domain.data.investment.transactions.BaseBuyInvestmentTransaction.getInvestmentTransaction","ofx4js.domain.data.investment.transactions.BaseBuyInvestmentTransaction.getSecurityId","ofx4js.domain.data.investment.transactions.BaseBuyInvestmentTransaction.getUnits","ofx4js.domain.data.investment.transactions.BaseBuyInvestmentTransaction.getUnitPrice","ofx4js.domain.data.investment.transactions.BaseBuyInvestmentTransaction.getMarkup","ofx4js.domain.data.investment.transactions.BaseBuyInvestmentTransaction.getCommission","ofx4js.domain.data.investment.transactions.BaseBuyInvestmentTransaction.getTaxes","ofx4js.domain.data.investment.transactions.BaseBuyInvestmentTransaction.getFees","ofx4js.domain.data.investment.transactions.BaseBuyInvestmentTransaction.getLoad","ofx4js.domain.data.investment.transactions.BaseBuyInvestmentTransaction.getTotal","ofx4js.domain.data.investment.transactions.BaseBuyInvestmentTransaction.getCurrencyCode","ofx4js.domain.data.investment.transactions.BaseBuyInvestmentTransaction.getOriginalCurrencyInfo","ofx4js.domain.data.investment.transactions.BaseBuyInvestmentTransaction.getSubAccountSecurity","ofx4js.domain.data.investment.transactions.BaseBuyInvestmentTransaction.getSubAccountSecurityEnum","ofx4js.domain.data.investment.transactions.BaseBuyInvestmentTransaction.getSubAccountFund","ofx4js.domain.data.investment.transactions.BaseBuyInvestmentTransaction.getSubAccountFundEnum","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.getInvestmentTransaction","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.setInvestmentTransaction","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.getSecurityId","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.setSecurityId","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.getUnits","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.setUnits","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.getUnitPrice","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.setUnitPrice","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.getMarkdown","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.setMarkdown","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.getCommission","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.setCommission","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.getTaxes","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.setTaxes","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.getFees","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.setFees","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.getLoad","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.setLoad","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.getWithholding","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.setWithholding","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.getTaxExempt","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.setTaxExempt","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.getTotal","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.setTotal","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.getGain","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.setGain","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.getCurrencyCode","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.setCurrencyCode","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.getOriginalCurrencyInfo","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.setOriginalCurrencyInfo","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.getSubAccountSecurity","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.setSubAccountSecurity","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.getSubAccountSecurityEnum","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.getSubAccountFund","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.setSubAccountFund","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.getSubAccountFundEnum","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.getLoanId","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.setLoanId","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.getStateWithholding","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.setStateWithholding","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.getPenalty","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.setPenalty","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.get401kSource","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.set401kSource","ofx4js.domain.data.investment.transactions.SellInvestmentTransaction.get401kSourceEnum","ofx4js.domain.data.investment.transactions.BaseSellInvestmentTransaction","ofx4js.domain.data.investment.transactions.BaseSellInvestmentTransaction.constructor","ofx4js.domain.data.investment.transactions.BaseSellInvestmentTransaction.getSellInvestment","ofx4js.domain.data.investment.transactions.BaseSellInvestmentTransaction.setSellInvestment","ofx4js.domain.data.investment.transactions.BaseSellInvestmentTransaction.getInvestmentTransaction","ofx4js.domain.data.investment.transactions.BaseSellInvestmentTransaction.getSecurityId","ofx4js.domain.data.investment.transactions.BaseSellInvestmentTransaction.getUnits","ofx4js.domain.data.investment.transactions.BaseSellInvestmentTransaction.getUnitPrice","ofx4js.domain.data.investment.transactions.BaseSellInvestmentTransaction.getMarkdown","ofx4js.domain.data.investment.transactions.BaseSellInvestmentTransaction.getCommission","ofx4js.domain.data.investment.transactions.BaseSellInvestmentTransaction.getTaxes","ofx4js.domain.data.investment.transactions.BaseSellInvestmentTransaction.getFees","ofx4js.domain.data.investment.transactions.BaseSellInvestmentTransaction.getLoad","ofx4js.domain.data.investment.transactions.BaseSellInvestmentTransaction.getWithholding","ofx4js.domain.data.investment.transactions.BaseSellInvestmentTransaction.getTaxExempt","ofx4js.domain.data.investment.transactions.BaseSellInvestmentTransaction.getTotal","ofx4js.domain.data.investment.transactions.BaseSellInvestmentTransaction.getGain","ofx4js.domain.data.investment.transactions.BaseSellInvestmentTransaction.getCurrencyCode","ofx4js.domain.data.investment.transactions.BaseSellInvestmentTransaction.getOriginalCurrencyInfo","ofx4js.domain.data.investment.transactions.BaseSellInvestmentTransaction.getSubAccountSecurity","ofx4js.domain.data.investment.transactions.BaseSellInvestmentTransaction.getSubAccountSecurityEnum","ofx4js.domain.data.investment.transactions.BaseSellInvestmentTransaction.getSubAccountFund","ofx4js.domain.data.investment.transactions.BaseSellInvestmentTransaction.getSubAccountFundEnum","ofx4js.domain.data.investment.transactions.BaseSellInvestmentTransaction.getLoadId","ofx4js.domain.data.investment.transactions.BaseSellInvestmentTransaction.getStateWithholding","ofx4js.domain.data.investment.transactions.BaseSellInvestmentTransaction.getPenalty","ofx4js.domain.data.investment.transactions.BaseSellInvestmentTransaction.get401kSource","ofx4js.domain.data.investment.transactions.BaseSellInvestmentTransaction.get401kSourceEnum","ofx4js.domain.data.investment.transactions.BuyDebtTransaction","ofx4js.domain.data.investment.transactions.BuyDebtTransaction.constructor","ofx4js.domain.data.investment.transactions.BuyDebtTransaction.getAccruedInterest","ofx4js.domain.data.investment.transactions.BuyDebtTransaction.setAccruedInterest","ofx4js.domain.data.investment.transactions.BuyType_fromOfx","ofx4js.domain.data.investment.transactions.BuyType","ofx4js.domain.data.investment.transactions.BuyMutualFundTransaction","ofx4js.domain.data.investment.transactions.BuyMutualFundTransaction.constructor","ofx4js.domain.data.investment.transactions.BuyMutualFundTransaction.getBuyType","ofx4js.domain.data.investment.transactions.BuyMutualFundTransaction.setBuyType","ofx4js.domain.data.investment.transactions.BuyMutualFundTransaction.getBuyTypeEnum","ofx4js.domain.data.investment.transactions.BuyMutualFundTransaction.getRelatedTransactionId","ofx4js.domain.data.investment.transactions.BuyMutualFundTransaction.setRelatedTransactionId","ofx4js.domain.data.investment.transactions.OptionBuyType_fromOfx","ofx4js.domain.data.investment.transactions.OptionBuyType","ofx4js.domain.data.investment.transactions.BuyOptionTransaction","ofx4js.domain.data.investment.transactions.BuyOptionTransaction.constructor","ofx4js.domain.data.investment.transactions.BuyOptionTransaction.getOptionBuyType","ofx4js.domain.data.investment.transactions.BuyOptionTransaction.setOptionBuyType","ofx4js.domain.data.investment.transactions.BuyOptionTransaction.getOptionBuyTypeEnum","ofx4js.domain.data.investment.transactions.BuyOptionTransaction.getSharesPerContract","ofx4js.domain.data.investment.transactions.BuyOptionTransaction.setSharesPerContract","ofx4js.domain.data.investment.transactions.BuyOtherTransaction","ofx4js.domain.data.investment.transactions.BuyOtherTransaction.constructor","ofx4js.domain.data.investment.transactions.BuyStockTransaction","ofx4js.domain.data.investment.transactions.BuyStockTransaction.constructor","ofx4js.domain.data.investment.transactions.BuyStockTransaction.getBuyType","ofx4js.domain.data.investment.transactions.BuyStockTransaction.setBuyType","ofx4js.domain.data.investment.transactions.BuyStockTransaction.getBuyTypeEnum","ofx4js.domain.data.investment.transactions.CloseOptionAction_fromOfx","ofx4js.domain.data.investment.transactions.CloseOptionAction","ofx4js.domain.data.investment.transactions.CloseOptionTransaction","ofx4js.domain.data.investment.transactions.CloseOptionTransaction.constructor","ofx4js.domain.data.investment.transactions.CloseOptionTransaction.getSecurityId","ofx4js.domain.data.investment.transactions.CloseOptionTransaction.setSecurityId","ofx4js.domain.data.investment.transactions.CloseOptionTransaction.getOptionAction","ofx4js.domain.data.investment.transactions.CloseOptionTransaction.setOptionAction","ofx4js.domain.data.investment.transactions.CloseOptionTransaction.getOptionActionEnum","ofx4js.domain.data.investment.transactions.CloseOptionTransaction.getUnits","ofx4js.domain.data.investment.transactions.CloseOptionTransaction.setUnits","ofx4js.domain.data.investment.transactions.CloseOptionTransaction.getSharesPerContact","ofx4js.domain.data.investment.transactions.CloseOptionTransaction.setSharesPerContact","ofx4js.domain.data.investment.transactions.CloseOptionTransaction.getSubAccountSecurity","ofx4js.domain.data.investment.transactions.CloseOptionTransaction.setSubAccountSecurity","ofx4js.domain.data.investment.transactions.CloseOptionTransaction.getSubAccountSecurityEnum","ofx4js.domain.data.investment.transactions.CloseOptionTransaction.getRelatedTransactionId","ofx4js.domain.data.investment.transactions.CloseOptionTransaction.setRelatedTransactionId","ofx4js.domain.data.investment.transactions.CloseOptionTransaction.getGain","ofx4js.domain.data.investment.transactions.CloseOptionTransaction.setGain","ofx4js.domain.data.investment.transactions.IncomeType_fromOfx","ofx4js.domain.data.investment.transactions.IncomeType","ofx4js.domain.data.investment.transactions.IncomeTransaction","ofx4js.domain.data.investment.transactions.IncomeTransaction.constructor","ofx4js.domain.data.investment.transactions.IncomeTransaction.getSecurityId","ofx4js.domain.data.investment.transactions.IncomeTransaction.setSecurityId","ofx4js.domain.data.investment.transactions.IncomeTransaction.getIncomeType","ofx4js.domain.data.investment.transactions.IncomeTransaction.setIncomeType","ofx4js.domain.data.investment.transactions.IncomeTransaction.getIncomeTypeEnum","ofx4js.domain.data.investment.transactions.IncomeTransaction.getTotal","ofx4js.domain.data.investment.transactions.IncomeTransaction.setTotal","ofx4js.domain.data.investment.transactions.IncomeTransaction.getSubAccountSecurity","ofx4js.domain.data.investment.transactions.IncomeTransaction.setSubAccountSecurity","ofx4js.domain.data.investment.transactions.IncomeTransaction.getSubAccountSecurityEnum","ofx4js.domain.data.investment.transactions.IncomeTransaction.getSubAccountFund","ofx4js.domain.data.investment.transactions.IncomeTransaction.setSubAccountFund","ofx4js.domain.data.investment.transactions.IncomeTransaction.getSubAccountFundEnum","ofx4js.domain.data.investment.transactions.IncomeTransaction.getTaxExempt","ofx4js.domain.data.investment.transactions.IncomeTransaction.setTaxExempt","ofx4js.domain.data.investment.transactions.IncomeTransaction.getWithholding","ofx4js.domain.data.investment.transactions.IncomeTransaction.setWithholding","ofx4js.domain.data.investment.transactions.IncomeTransaction.getCurrencyCode","ofx4js.domain.data.investment.transactions.IncomeTransaction.setCurrencyCode","ofx4js.domain.data.investment.transactions.IncomeTransaction.getOriginalCurrencyInfo","ofx4js.domain.data.investment.transactions.IncomeTransaction.setOriginalCurrencyInfo","ofx4js.domain.data.investment.transactions.IncomeTransaction.get401kSource","ofx4js.domain.data.investment.transactions.IncomeTransaction.set401kSource","ofx4js.domain.data.investment.transactions.IncomeTransaction.get401kSourceEnum","ofx4js.domain.data.investment.transactions.InvestmentExpenseTransaction","ofx4js.domain.data.investment.transactions.InvestmentExpenseTransaction.constructor","ofx4js.domain.data.investment.transactions.InvestmentExpenseTransaction.getSecurityId","ofx4js.domain.data.investment.transactions.InvestmentExpenseTransaction.setSecurityId","ofx4js.domain.data.investment.transactions.InvestmentExpenseTransaction.getTotal","ofx4js.domain.data.investment.transactions.InvestmentExpenseTransaction.setTotal","ofx4js.domain.data.investment.transactions.InvestmentExpenseTransaction.getSubAccountSecurity","ofx4js.domain.data.investment.transactions.InvestmentExpenseTransaction.setSubAccountSecurity","ofx4js.domain.data.investment.transactions.InvestmentExpenseTransaction.getSubAccountSecurityEnum","ofx4js.domain.data.investment.transactions.InvestmentExpenseTransaction.getSubAccountFund","ofx4js.domain.data.investment.transactions.InvestmentExpenseTransaction.setSubAccountFund","ofx4js.domain.data.investment.transactions.InvestmentExpenseTransaction.getSubAccountFundEnum","ofx4js.domain.data.investment.transactions.InvestmentExpenseTransaction.getCurrencyCode","ofx4js.domain.data.investment.transactions.InvestmentExpenseTransaction.setCurrencyCode","ofx4js.domain.data.investment.transactions.InvestmentExpenseTransaction.getOriginalCurrencyInfo","ofx4js.domain.data.investment.transactions.InvestmentExpenseTransaction.setOriginalCurrencyInfo","ofx4js.domain.data.investment.transactions.InvestmentExpenseTransaction.get401kSource","ofx4js.domain.data.investment.transactions.InvestmentExpenseTransaction.set401kSource","ofx4js.domain.data.investment.transactions.InvestmentExpenseTransaction.get401kSourceEnum","ofx4js.domain.data.investment.transactions.JournalFundTransaction","ofx4js.domain.data.investment.transactions.JournalFundTransaction.constructor","ofx4js.domain.data.investment.transactions.JournalFundTransaction.getFromSubAccountFund","ofx4js.domain.data.investment.transactions.JournalFundTransaction.setFromSubAccountFund","ofx4js.domain.data.investment.transactions.JournalFundTransaction.getFromSubAccountFundEnum","ofx4js.domain.data.investment.transactions.JournalFundTransaction.getToSubAccountFund","ofx4js.domain.data.investment.transactions.JournalFundTransaction.setToSubAccountFund","ofx4js.domain.data.investment.transactions.JournalFundTransaction.getToSubAccountFundEnum","ofx4js.domain.data.investment.transactions.JournalFundTransaction.getTotal","ofx4js.domain.data.investment.transactions.JournalFundTransaction.setTotal","ofx4js.domain.data.investment.transactions.JournalSecurityTransaction","ofx4js.domain.data.investment.transactions.JournalSecurityTransaction.constructor","ofx4js.domain.data.investment.transactions.JournalSecurityTransaction.getSecurityId","ofx4js.domain.data.investment.transactions.JournalSecurityTransaction.setSecurityId","ofx4js.domain.data.investment.transactions.JournalSecurityTransaction.getFromSubAccountFund","ofx4js.domain.data.investment.transactions.JournalSecurityTransaction.setFromSubAccountFund","ofx4js.domain.data.investment.transactions.JournalSecurityTransaction.getFromSubAccountFundEnum","ofx4js.domain.data.investment.transactions.JournalSecurityTransaction.getToSubAccountFund","ofx4js.domain.data.investment.transactions.JournalSecurityTransaction.setToSubAccountFund","ofx4js.domain.data.investment.transactions.JournalSecurityTransaction.getToSubAccountFundEnum","ofx4js.domain.data.investment.transactions.JournalSecurityTransaction.getTotal","ofx4js.domain.data.investment.transactions.JournalSecurityTransaction.setTotal","ofx4js.domain.data.investment.transactions.MarginInterestTransaction","ofx4js.domain.data.investment.transactions.MarginInterestTransaction.constructor","ofx4js.domain.data.investment.transactions.MarginInterestTransaction.getSubAccountFund","ofx4js.domain.data.investment.transactions.MarginInterestTransaction.setSubAccountFund","ofx4js.domain.data.investment.transactions.MarginInterestTransaction.getSubAccountFundEnum","ofx4js.domain.data.investment.transactions.MarginInterestTransaction.getTotal","ofx4js.domain.data.investment.transactions.MarginInterestTransaction.setTotal","ofx4js.domain.data.investment.transactions.MarginInterestTransaction.getCurrencyCode","ofx4js.domain.data.investment.transactions.MarginInterestTransaction.setCurrencyCode","ofx4js.domain.data.investment.transactions.MarginInterestTransaction.getOriginalCurrencyInfo","ofx4js.domain.data.investment.transactions.MarginInterestTransaction.setOriginalCurrencyInfo","ofx4js.domain.data.investment.transactions.OptionSellType_fromOfx","ofx4js.domain.data.investment.transactions.OptionSellType","ofx4js.domain.data.investment.transactions.ReinvestIncomeTransaction","ofx4js.domain.data.investment.transactions.ReinvestIncomeTransaction.constructor","ofx4js.domain.data.investment.transactions.ReinvestIncomeTransaction.getSecurityId","ofx4js.domain.data.investment.transactions.ReinvestIncomeTransaction.setSecurityId","ofx4js.domain.data.investment.transactions.ReinvestIncomeTransaction.getIncomeType","ofx4js.domain.data.investment.transactions.ReinvestIncomeTransaction.setIncomeType","ofx4js.domain.data.investment.transactions.ReinvestIncomeTransaction.getIncomeTypeEnum","ofx4js.domain.data.investment.transactions.ReinvestIncomeTransaction.getTotal","ofx4js.domain.data.investment.transactions.ReinvestIncomeTransaction.setTotal","ofx4js.domain.data.investment.transactions.ReinvestIncomeTransaction.getSubAccountSecurity","ofx4js.domain.data.investment.transactions.ReinvestIncomeTransaction.setSubAccountSecurity","ofx4js.domain.data.investment.transactions.ReinvestIncomeTransaction.getSubAccountSecurityEnum","ofx4js.domain.data.investment.transactions.ReinvestIncomeTransaction.getUnits","ofx4js.domain.data.investment.transactions.ReinvestIncomeTransaction.setUnits","ofx4js.domain.data.investment.transactions.ReinvestIncomeTransaction.getUnitPrice","ofx4js.domain.data.investment.transactions.ReinvestIncomeTransaction.setUnitPrice","ofx4js.domain.data.investment.transactions.ReinvestIncomeTransaction.getCommission","ofx4js.domain.data.investment.transactions.ReinvestIncomeTransaction.setCommission","ofx4js.domain.data.investment.transactions.ReinvestIncomeTransaction.getTaxes","ofx4js.domain.data.investment.transactions.ReinvestIncomeTransaction.setTaxes","ofx4js.domain.data.investment.transactions.ReinvestIncomeTransaction.getFees","ofx4js.domain.data.investment.transactions.ReinvestIncomeTransaction.setFees","ofx4js.domain.data.investment.transactions.ReinvestIncomeTransaction.getLoad","ofx4js.domain.data.investment.transactions.ReinvestIncomeTransaction.setLoad","ofx4js.domain.data.investment.transactions.ReinvestIncomeTransaction.getTaxExempt","ofx4js.domain.data.investment.transactions.ReinvestIncomeTransaction.setTaxExempt","ofx4js.domain.data.investment.transactions.ReinvestIncomeTransaction.getCurrencyCode","ofx4js.domain.data.investment.transactions.ReinvestIncomeTransaction.setCurrencyCode","ofx4js.domain.data.investment.transactions.ReinvestIncomeTransaction.getOriginalCurrencyInfo","ofx4js.domain.data.investment.transactions.ReinvestIncomeTransaction.setOriginalCurrencyInfo","ofx4js.domain.data.investment.transactions.ReinvestIncomeTransaction.get401kSource","ofx4js.domain.data.investment.transactions.ReinvestIncomeTransaction.set401kSource","ofx4js.domain.data.investment.transactions.ReinvestIncomeTransaction.get401kSourceEnum","ofx4js.domain.data.investment.transactions.RelatedOptionType_fromOfx","ofx4js.domain.data.investment.transactions.RelatedOptionType","ofx4js.domain.data.investment.transactions.ReturnOfCapitalTransaction","ofx4js.domain.data.investment.transactions.ReturnOfCapitalTransaction.constructor","ofx4js.domain.data.investment.transactions.ReturnOfCapitalTransaction.getSecurityId","ofx4js.domain.data.investment.transactions.ReturnOfCapitalTransaction.setSecurityId","ofx4js.domain.data.investment.transactions.ReturnOfCapitalTransaction.getTotal","ofx4js.domain.data.investment.transactions.ReturnOfCapitalTransaction.setTotal","ofx4js.domain.data.investment.transactions.ReturnOfCapitalTransaction.getSubAccountSecurity","ofx4js.domain.data.investment.transactions.ReturnOfCapitalTransaction.setSubAccountSecurity","ofx4js.domain.data.investment.transactions.ReturnOfCapitalTransaction.getSubAccountSecurityEnum","ofx4js.domain.data.investment.transactions.ReturnOfCapitalTransaction.getSubAccountFund","ofx4js.domain.data.investment.transactions.ReturnOfCapitalTransaction.setSubAccountFund","ofx4js.domain.data.investment.transactions.ReturnOfCapitalTransaction.getSubAccountFundEnum","ofx4js.domain.data.investment.transactions.ReturnOfCapitalTransaction.getCurrencyCode","ofx4js.domain.data.investment.transactions.ReturnOfCapitalTransaction.setCurrencyCode","ofx4js.domain.data.investment.transactions.ReturnOfCapitalTransaction.getOriginalCurrencyInfo","ofx4js.domain.data.investment.transactions.ReturnOfCapitalTransaction.setOriginalCurrencyInfo","ofx4js.domain.data.investment.transactions.ReturnOfCapitalTransaction.get401kSource","ofx4js.domain.data.investment.transactions.ReturnOfCapitalTransaction.set401kSource","ofx4js.domain.data.investment.transactions.ReturnOfCapitalTransaction.get401kSourceEnum","ofx4js.domain.data.investment.transactions.SellDebtReason_fromOfx","ofx4js.domain.data.investment.transactions.SellDebtReason","ofx4js.domain.data.investment.transactions.SellDebtTransaction","ofx4js.domain.data.investment.transactions.SellDebtTransaction.constructor","ofx4js.domain.data.investment.transactions.SellDebtTransaction.getSellReason","ofx4js.domain.data.investment.transactions.SellDebtTransaction.setSellReason","ofx4js.domain.data.investment.transactions.SellDebtTransaction.getSellReasonEnum","ofx4js.domain.data.investment.transactions.SellDebtTransaction.getAccruedInterest","ofx4js.domain.data.investment.transactions.SellDebtTransaction.setAccruedInterest","ofx4js.domain.data.investment.transactions.SellType_fromOfx","ofx4js.domain.data.investment.transactions.SellType","ofx4js.domain.data.investment.transactions.SellMutualFundTransaction","ofx4js.domain.data.investment.transactions.SellMutualFundTransaction.constructor","ofx4js.domain.data.investment.transactions.SellMutualFundTransaction.getSellType","ofx4js.domain.data.investment.transactions.SellMutualFundTransaction.setSellType","ofx4js.domain.data.investment.transactions.SellMutualFundTransaction.getSellTypeEnum","ofx4js.domain.data.investment.transactions.SellMutualFundTransaction.getAverageCostBasis","ofx4js.domain.data.investment.transactions.SellMutualFundTransaction.setAverageCostBasis","ofx4js.domain.data.investment.transactions.SellMutualFundTransaction.getRelatedTransactionId","ofx4js.domain.data.investment.transactions.SellMutualFundTransaction.setRelatedTransactionId","ofx4js.domain.data.investment.transactions.SellOptionTransaction","ofx4js.domain.data.investment.transactions.SellOptionTransaction.constructor","ofx4js.domain.data.investment.transactions.SellOptionTransaction.getOptionSellType","ofx4js.domain.data.investment.transactions.SellOptionTransaction.setOptionSellType","ofx4js.domain.data.investment.transactions.SellOptionTransaction.getOptionSellTypeEnum","ofx4js.domain.data.investment.transactions.SellOptionTransaction.getSharesPerContact","ofx4js.domain.data.investment.transactions.SellOptionTransaction.setSharesPerContact","ofx4js.domain.data.investment.transactions.SellOptionTransaction.getRelatedTransactionId","ofx4js.domain.data.investment.transactions.SellOptionTransaction.setRelatedTransactionId","ofx4js.domain.data.investment.transactions.SellOptionTransaction.getRelatedType","ofx4js.domain.data.investment.transactions.SellOptionTransaction.setRelatedType","ofx4js.domain.data.investment.transactions.SellOptionTransaction.getRelatedTypeEnum","ofx4js.domain.data.investment.transactions.SellOptionTransaction.getSecured","ofx4js.domain.data.investment.transactions.SellOptionTransaction.setSecured","ofx4js.domain.data.investment.transactions.SellOptionTransaction.getSecuredEnum","ofx4js.domain.data.investment.transactions.SellOtherTransaction","ofx4js.domain.data.investment.transactions.SellOtherTransaction.constructor","ofx4js.domain.data.investment.transactions.SellStockTransaction","ofx4js.domain.data.investment.transactions.SellStockTransaction.constructor","ofx4js.domain.data.investment.transactions.SellStockTransaction.getSellType","ofx4js.domain.data.investment.transactions.SellStockTransaction.setSellType","ofx4js.domain.data.investment.transactions.SellStockTransaction.getSellTypeEnum","ofx4js.domain.data.investment.transactions.SplitTransaction","ofx4js.domain.data.investment.transactions.SplitTransaction.constructor","ofx4js.domain.data.investment.transactions.SplitTransaction.getSecurityId","ofx4js.domain.data.investment.transactions.SplitTransaction.setSecurityId","ofx4js.domain.data.investment.transactions.SplitTransaction.getSubAccountSecurity","ofx4js.domain.data.investment.transactions.SplitTransaction.setSubAccountSecurity","ofx4js.domain.data.investment.transactions.SplitTransaction.getSubAccountSecurityEnum","ofx4js.domain.data.investment.transactions.SplitTransaction.getOldUnits","ofx4js.domain.data.investment.transactions.SplitTransaction.setOldUnits","ofx4js.domain.data.investment.transactions.SplitTransaction.getNewUnits","ofx4js.domain.data.investment.transactions.SplitTransaction.setNewUnits","ofx4js.domain.data.investment.transactions.SplitTransaction.getNumerator","ofx4js.domain.data.investment.transactions.SplitTransaction.setNumerator","ofx4js.domain.data.investment.transactions.SplitTransaction.getDenominator","ofx4js.domain.data.investment.transactions.SplitTransaction.setDenominator","ofx4js.domain.data.investment.transactions.SplitTransaction.getCurrencyCode","ofx4js.domain.data.investment.transactions.SplitTransaction.setCurrencyCode","ofx4js.domain.data.investment.transactions.SplitTransaction.getOriginalCurrencyInfo","ofx4js.domain.data.investment.transactions.SplitTransaction.setOriginalCurrencyInfo","ofx4js.domain.data.investment.transactions.SplitTransaction.getCashForFractionalUnits","ofx4js.domain.data.investment.transactions.SplitTransaction.setCashForFractionalUnits","ofx4js.domain.data.investment.transactions.SplitTransaction.getSubAccountFund","ofx4js.domain.data.investment.transactions.SplitTransaction.setSubAccountFund","ofx4js.domain.data.investment.transactions.SplitTransaction.getSubAccountFundEnum","ofx4js.domain.data.investment.transactions.SplitTransaction.get401kSource","ofx4js.domain.data.investment.transactions.SplitTransaction.set401kSource","ofx4js.domain.data.investment.transactions.SplitTransaction.get401kSourceEnum","ofx4js.domain.data.investment.transactions.TransferAction_fromOfx","ofx4js.domain.data.investment.transactions.TransferAction","ofx4js.domain.data.investment.transactions.TransferInvestmentTransaction","ofx4js.domain.data.investment.transactions.TransferInvestmentTransaction.constructor","ofx4js.domain.data.investment.transactions.TransferInvestmentTransaction.getSecurityId","ofx4js.domain.data.investment.transactions.TransferInvestmentTransaction.setSecurityId","ofx4js.domain.data.investment.transactions.TransferInvestmentTransaction.getSubAccountSecurity","ofx4js.domain.data.investment.transactions.TransferInvestmentTransaction.setSubAccountSecurity","ofx4js.domain.data.investment.transactions.TransferInvestmentTransaction.getSubAccountSecurityEnum","ofx4js.domain.data.investment.transactions.TransferInvestmentTransaction.getUnits","ofx4js.domain.data.investment.transactions.TransferInvestmentTransaction.setUnits","ofx4js.domain.data.investment.transactions.TransferInvestmentTransaction.getTransferAction","ofx4js.domain.data.investment.transactions.TransferInvestmentTransaction.setTransferAction","ofx4js.domain.data.investment.transactions.TransferInvestmentTransaction.getTransferActionEnum","ofx4js.domain.data.investment.transactions.TransferInvestmentTransaction.getPositionType","ofx4js.domain.data.investment.transactions.TransferInvestmentTransaction.setPositionType","ofx4js.domain.data.investment.transactions.TransferInvestmentTransaction.getPositionTypeEnum","ofx4js.domain.data.investment.transactions.TransferInvestmentTransaction.getAverageCostBasis","ofx4js.domain.data.investment.transactions.TransferInvestmentTransaction.setAverageCostBasis","ofx4js.domain.data.investment.transactions.TransferInvestmentTransaction.getUnitPrice","ofx4js.domain.data.investment.transactions.TransferInvestmentTransaction.setUnitPrice","ofx4js.domain.data.investment.transactions.TransferInvestmentTransaction.getPurchaseDate","ofx4js.domain.data.investment.transactions.TransferInvestmentTransaction.setPurchaseDate","ofx4js.domain.data.investment.transactions.TransferInvestmentTransaction.get401kSource","ofx4js.domain.data.investment.transactions.TransferInvestmentTransaction.set401kSource","ofx4js.domain.data.investment.transactions.TransferInvestmentTransaction.get401kSourceEnum","ofx4js.domain.data.profile.info","ofx4js.domain.data.profile.info.banking","ofx4js.domain.data.profile.info.banking.EmailProfile","ofx4js.domain.data.profile.info.banking.EmailProfile.getCanEmail","ofx4js.domain.data.profile.info.banking.EmailProfile.setCanEmail","ofx4js.domain.data.profile.info.banking.EmailProfile.getCanNotify","ofx4js.domain.data.profile.info.banking.EmailProfile.setCanNotify","ofx4js.domain.data.profile.info.banking.StopCheckProfile","ofx4js.domain.data.profile.info.banking.StopCheckProfile.getProcessorDaysOff","ofx4js.domain.data.profile.info.banking.StopCheckProfile.setProcessorDaysOff","ofx4js.domain.data.profile.info.banking.StopCheckProfile.getProcessEndTime","ofx4js.domain.data.profile.info.banking.StopCheckProfile.setProcessEndTime","ofx4js.domain.data.profile.info.banking.StopCheckProfile.getCanUseRange","ofx4js.domain.data.profile.info.banking.StopCheckProfile.setCanUseRange","ofx4js.domain.data.profile.info.banking.StopCheckProfile.getCanUseDescription","ofx4js.domain.data.profile.info.banking.StopCheckProfile.setCanUseDescription","ofx4js.domain.data.profile.info.banking.StopCheckProfile.getStopCheckFee","ofx4js.domain.data.profile.info.banking.StopCheckProfile.setStopCheckFee","ofx4js.domain.data.profile.info.common","ofx4js.domain.data.profile.info.common.ImageProfile","ofx4js.domain.data.profile.info.common.ImageProfile.getClosingImageAvailable","ofx4js.domain.data.profile.info.common.ImageProfile.setClosingImageAvailable","ofx4js.domain.data.profile.info.common.ImageProfile.getTransactionImageAvailable","ofx4js.domain.data.profile.info.common.ImageProfile.setTransactionImageAvailable","ofx4js.domain.data.profile.info.common.TransferProfile","ofx4js.domain.data.profile.info.common.TransferProfile.getProcessorDaysOff","ofx4js.domain.data.profile.info.common.TransferProfile.setProcessorDaysOff","ofx4js.domain.data.profile.info.common.TransferProfile.getProcessEndTime","ofx4js.domain.data.profile.info.common.TransferProfile.setProcessEndTime","ofx4js.domain.data.profile.info.common.TransferProfile.getSupportsScheduledTransfers","ofx4js.domain.data.profile.info.common.TransferProfile.setSupportsScheduledTransfers","ofx4js.domain.data.profile.info.common.TransferProfile.getSupportsRecurringTransfers","ofx4js.domain.data.profile.info.common.TransferProfile.setSupportsRecurringTransfers","ofx4js.domain.data.profile.info.common.TransferProfile.getSupportsLoanTransfers","ofx4js.domain.data.profile.info.common.TransferProfile.setSupportsLoanTransfers","ofx4js.domain.data.profile.info.common.TransferProfile.getSupportsScheduledLoanTransfers","ofx4js.domain.data.profile.info.common.TransferProfile.setSupportsScheduledLoanTransfers","ofx4js.domain.data.profile.info.common.TransferProfile.getSupportsRecurringLoanTransfers","ofx4js.domain.data.profile.info.common.TransferProfile.setSupportsRecurringLoanTransfers","ofx4js.domain.data.profile.info.common.TransferProfile.getSupportsTransferModification","ofx4js.domain.data.profile.info.common.TransferProfile.setSupportsTransferModification","ofx4js.domain.data.profile.info.common.TransferProfile.getSupportsModelModification","ofx4js.domain.data.profile.info.common.TransferProfile.setSupportsModelModification","ofx4js.domain.data.profile.info.common.TransferProfile.getModelWindow","ofx4js.domain.data.profile.info.common.TransferProfile.setModelWindow","ofx4js.domain.data.profile.info.common.TransferProfile.getWithdrawnDays","ofx4js.domain.data.profile.info.common.TransferProfile.setWithdrawnDays","ofx4js.domain.data.profile.info.common.TransferProfile.getDefaultDaysToPay","ofx4js.domain.data.profile.info.common.TransferProfile.setDefaultDaysToPay","ofx4js.domain.data.profile.info.BankingV1MessageSetInfo","ofx4js.domain.data.profile.info.BankingV1MessageSetInfo.constructor","ofx4js.domain.data.profile.info.BankingV1MessageSetInfo.getMessageSetType","ofx4js.domain.data.profile.info.BankingV1MessageSetInfo.getInvalidAccountTypes","ofx4js.domain.data.profile.info.BankingV1MessageSetInfo.setInvalidAccountTypes","ofx4js.domain.data.profile.info.BankingV1MessageSetInfo.getClosingAvail","ofx4js.domain.data.profile.info.BankingV1MessageSetInfo.setClosingAvail","ofx4js.domain.data.profile.info.BankingV1MessageSetInfo.getTransferProfile","ofx4js.domain.data.profile.info.BankingV1MessageSetInfo.setTransferProfile","ofx4js.domain.data.profile.info.BankingV1MessageSetInfo.getStopCheckProfile","ofx4js.domain.data.profile.info.BankingV1MessageSetInfo.setStopCheckProfile","ofx4js.domain.data.profile.info.BankingV1MessageSetInfo.getEmailProfile","ofx4js.domain.data.profile.info.BankingV1MessageSetInfo.setEmailProfile","ofx4js.domain.data.profile.info.BankingV1MessageSetInfo.getImageProfile","ofx4js.domain.data.profile.info.BankingV1MessageSetInfo.setImageProfile","ofx4js.domain.data.profile.info.BankingMessageSetInfo","ofx4js.domain.data.profile.info.BankingMessageSetInfo.constructor","ofx4js.domain.data.profile.info.BankingMessageSetInfo.getVersion1Info","ofx4js.domain.data.profile.info.BankingMessageSetInfo.setVersion1Info","ofx4js.domain.data.profile.info.BillpayV1MessageSetInfo","ofx4js.domain.data.profile.info.BillpayV1MessageSetInfo.constructor","ofx4js.domain.data.profile.info.BillpayV1MessageSetInfo.getMessageSetType","ofx4js.domain.data.profile.info.BillpayV1MessageSetInfo.getDaysWith","ofx4js.domain.data.profile.info.BillpayV1MessageSetInfo.setDaysWith","ofx4js.domain.data.profile.info.BillpayV1MessageSetInfo.getDefaultDaysToPay","ofx4js.domain.data.profile.info.BillpayV1MessageSetInfo.setDefaultDaysToPay","ofx4js.domain.data.profile.info.BillpayV1MessageSetInfo.getTransferDaysWith","ofx4js.domain.data.profile.info.BillpayV1MessageSetInfo.setTransferDaysWith","ofx4js.domain.data.profile.info.BillpayV1MessageSetInfo.getTransferDefaultDaysToPay","ofx4js.domain.data.profile.info.BillpayV1MessageSetInfo.setTransferDefaultDaysToPay","ofx4js.domain.data.profile.info.BillpayV1MessageSetInfo.getProcessorDaysOff","ofx4js.domain.data.profile.info.BillpayV1MessageSetInfo.setProcessorDaysOff","ofx4js.domain.data.profile.info.BillpayV1MessageSetInfo.getProcessorEndTime","ofx4js.domain.data.profile.info.BillpayV1MessageSetInfo.setProcessorEndTime","ofx4js.domain.data.profile.info.BillpayV1MessageSetInfo.getModelWindow","ofx4js.domain.data.profile.info.BillpayV1MessageSetInfo.setModelWindow","ofx4js.domain.data.profile.info.BillpayV1MessageSetInfo.getPostProcessorWindow","ofx4js.domain.data.profile.info.BillpayV1MessageSetInfo.setPostProcessorWindow","ofx4js.domain.data.profile.info.BillpayV1MessageSetInfo.getSupportsStatusUpdateViaPaymentModificationResponse","ofx4js.domain.data.profile.info.BillpayV1MessageSetInfo.setSupportsStatusUpdateViaPaymentModificationResponse","ofx4js.domain.data.profile.info.BillpayV1MessageSetInfo.getSupportsPaymentByAddress","ofx4js.domain.data.profile.info.BillpayV1MessageSetInfo.setSupportsPaymentByAddress","ofx4js.domain.data.profile.info.BillpayV1MessageSetInfo.getSupportsPaymentByTransfer","ofx4js.domain.data.profile.info.BillpayV1MessageSetInfo.setSupportsPaymentByTransfer","ofx4js.domain.data.profile.info.BillpayV1MessageSetInfo.getSupportsPaymentByPayeeId","ofx4js.domain.data.profile.info.BillpayV1MessageSetInfo.setSupportsPaymentByPayeeId","ofx4js.domain.data.profile.info.BillpayV1MessageSetInfo.getUserCanAddPayee","ofx4js.domain.data.profile.info.BillpayV1MessageSetInfo.setUserCanAddPayee","ofx4js.domain.data.profile.info.BillpayV1MessageSetInfo.getSupportsExtendedPayment","ofx4js.domain.data.profile.info.BillpayV1MessageSetInfo.setSupportsExtendedPayment","ofx4js.domain.data.profile.info.BillpayV1MessageSetInfo.getCanModifyPayments","ofx4js.domain.data.profile.info.BillpayV1MessageSetInfo.setCanModifyPayments","ofx4js.domain.data.profile.info.BillpayV1MessageSetInfo.getCanModifyModels","ofx4js.domain.data.profile.info.BillpayV1MessageSetInfo.setCanModifyModels","ofx4js.domain.data.profile.info.BillpayV1MessageSetInfo.getSupportsDifferentFirstPayment","ofx4js.domain.data.profile.info.BillpayV1MessageSetInfo.setSupportsDifferentFirstPayment","ofx4js.domain.data.profile.info.BillpayV1MessageSetInfo.getSupportsDifferentLastPayment","ofx4js.domain.data.profile.info.BillpayV1MessageSetInfo.setSupportsDifferentLastPayment","ofx4js.domain.data.profile.info.BillpayV1MessageSetInfo.getSupportsBillPresentmentContext","ofx4js.domain.data.profile.info.BillpayV1MessageSetInfo.setSupportsBillPresentmentContext","ofx4js.domain.data.profile.info.BillpayMessageSetInfo","ofx4js.domain.data.profile.info.BillpayMessageSetInfo.constructor","ofx4js.domain.data.profile.info.BillpayMessageSetInfo.getVersion1Info","ofx4js.domain.data.profile.info.BillpayMessageSetInfo.setVersion1Info","ofx4js.domain.data.profile.info.CreditCardV1MessageSetInfo","ofx4js.domain.data.profile.info.CreditCardV1MessageSetInfo.constructor","ofx4js.domain.data.profile.info.CreditCardV1MessageSetInfo.getMessageSetType","ofx4js.domain.data.profile.info.CreditCardV1MessageSetInfo.getClosingAvail","ofx4js.domain.data.profile.info.CreditCardV1MessageSetInfo.setClosingAvail","ofx4js.domain.data.profile.info.CreditCardV1MessageSetInfo.getImageProfile","ofx4js.domain.data.profile.info.CreditCardV1MessageSetInfo.setImageProfile","ofx4js.domain.data.profile.info.CreditCardMessageSetInfo","ofx4js.domain.data.profile.info.CreditCardMessageSetInfo.constructor","ofx4js.domain.data.profile.info.CreditCardMessageSetInfo.getVersion1Info","ofx4js.domain.data.profile.info.CreditCardMessageSetInfo.setVersion1Info","ofx4js.domain.data.profile.info.EmailV1MessageSetInfo","ofx4js.domain.data.profile.info.EmailV1MessageSetInfo.constructor","ofx4js.domain.data.profile.info.EmailV1MessageSetInfo.getMessageSetType","ofx4js.domain.data.profile.info.EmailV1MessageSetInfo.getSupportsMail","ofx4js.domain.data.profile.info.EmailV1MessageSetInfo.setSupportsMail","ofx4js.domain.data.profile.info.EmailV1MessageSetInfo.getSupportsMimeType","ofx4js.domain.data.profile.info.EmailV1MessageSetInfo.setSupportsMimeType","ofx4js.domain.data.profile.info.EmailMessageSetInfo","ofx4js.domain.data.profile.info.EmailMessageSetInfo.constructor","ofx4js.domain.data.profile.info.EmailMessageSetInfo.getVersion1Info","ofx4js.domain.data.profile.info.EmailMessageSetInfo.setVersion1Info","ofx4js.domain.data.profile.info.InterbankTransferV1MessageSetInfo","ofx4js.domain.data.profile.info.InterbankTransferV1MessageSetInfo.constructor","ofx4js.domain.data.profile.info.InterbankTransferV1MessageSetInfo.getMessageSetType","ofx4js.domain.data.profile.info.InterbankTransferV1MessageSetInfo.getTransferProfile","ofx4js.domain.data.profile.info.InterbankTransferV1MessageSetInfo.setTransferProfile","ofx4js.domain.data.profile.info.InterbankTransferV1MessageSetInfo.getSupportsBillPay","ofx4js.domain.data.profile.info.InterbankTransferV1MessageSetInfo.setSupportsBillPay","ofx4js.domain.data.profile.info.InterbankTransferV1MessageSetInfo.getCancelWindow","ofx4js.domain.data.profile.info.InterbankTransferV1MessageSetInfo.setCancelWindow","ofx4js.domain.data.profile.info.InterbankTransferV1MessageSetInfo.getDomesticInterbankTransferFee","ofx4js.domain.data.profile.info.InterbankTransferV1MessageSetInfo.setDomesticInterbankTransferFee","ofx4js.domain.data.profile.info.InterbankTransferV1MessageSetInfo.getInternationalInterbankTransferFee","ofx4js.domain.data.profile.info.InterbankTransferV1MessageSetInfo.setInternationalInterbankTransferFee","ofx4js.domain.data.profile.info.InterbankTransferMessageSetInfo","ofx4js.domain.data.profile.info.InterbankTransferMessageSetInfo.constructor","ofx4js.domain.data.profile.info.InterbankTransferMessageSetInfo.getVersion1Info","ofx4js.domain.data.profile.info.InterbankTransferMessageSetInfo.setVersion1Info","ofx4js.domain.data.profile.info.InvestmentV1MessageSetInfo","ofx4js.domain.data.profile.info.InvestmentV1MessageSetInfo.constructor","ofx4js.domain.data.profile.info.InvestmentV1MessageSetInfo.getMessageSetType","ofx4js.domain.data.profile.info.InvestmentV1MessageSetInfo.getSupportsStatementsDownload","ofx4js.domain.data.profile.info.InvestmentV1MessageSetInfo.setSupportsStatementsDownload","ofx4js.domain.data.profile.info.InvestmentV1MessageSetInfo.getSupportsOpenOrdersDownload","ofx4js.domain.data.profile.info.InvestmentV1MessageSetInfo.setSupportsOpenOrdersDownload","ofx4js.domain.data.profile.info.InvestmentV1MessageSetInfo.getSupportsPositionsDownload","ofx4js.domain.data.profile.info.InvestmentV1MessageSetInfo.setSupportsPositionsDownload","ofx4js.domain.data.profile.info.InvestmentV1MessageSetInfo.getSupportsBalanceDownload","ofx4js.domain.data.profile.info.InvestmentV1MessageSetInfo.setSupportsBalanceDownload","ofx4js.domain.data.profile.info.InvestmentV1MessageSetInfo.getSupportsEmail","ofx4js.domain.data.profile.info.InvestmentV1MessageSetInfo.setSupportsEmail","ofx4js.domain.data.profile.info.InvestmentV1MessageSetInfo.getSupports401kInformation","ofx4js.domain.data.profile.info.InvestmentV1MessageSetInfo.setSupports401kInformation","ofx4js.domain.data.profile.info.InvestmentV1MessageSetInfo.getSupportsClosingStatements","ofx4js.domain.data.profile.info.InvestmentV1MessageSetInfo.setSupportsClosingStatements","ofx4js.domain.data.profile.info.InvestmentMessageSetInfo","ofx4js.domain.data.profile.info.InvestmentMessageSetInfo.constructor","ofx4js.domain.data.profile.info.InvestmentMessageSetInfo.getVersion1Info","ofx4js.domain.data.profile.info.InvestmentMessageSetInfo.setVersion1Info","ofx4js.domain.data.profile.info.ProfileV1MessageSetInfo","ofx4js.domain.data.profile.info.ProfileV1MessageSetInfo.constructor","ofx4js.domain.data.profile.info.ProfileV1MessageSetInfo.getMessageSetType","ofx4js.domain.data.profile.info.ProfileMessageSetInfo","ofx4js.domain.data.profile.info.ProfileMessageSetInfo.constructor","ofx4js.domain.data.profile.info.ProfileMessageSetInfo.getVersion1Info","ofx4js.domain.data.profile.info.ProfileMessageSetInfo.setVersion1Info","ofx4js.domain.data.profile.info.SecurityListV1MessageSetInfo","ofx4js.domain.data.profile.info.SecurityListV1MessageSetInfo.constructor","ofx4js.domain.data.profile.info.SecurityListV1MessageSetInfo.getMessageSetType","ofx4js.domain.data.profile.info.SecurityListV1MessageSetInfo.getSupportsSecurityListDownload","ofx4js.domain.data.profile.info.SecurityListV1MessageSetInfo.setSupportsSecurityListDownload","ofx4js.domain.data.profile.info.SecurityListMessageSetInfo","ofx4js.domain.data.profile.info.SecurityListMessageSetInfo.constructor","ofx4js.domain.data.profile.info.SecurityListMessageSetInfo.getVersion1Info","ofx4js.domain.data.profile.info.SecurityListMessageSetInfo.setVersion1Info","ofx4js.domain.data.profile.info.SignOnV1MessageSetInfo","ofx4js.domain.data.profile.info.SignOnV1MessageSetInfo.constructor","ofx4js.domain.data.profile.info.SignOnV1MessageSetInfo.getMessageSetType","ofx4js.domain.data.profile.info.SignOnMessageSetInfo","ofx4js.domain.data.profile.info.SignOnMessageSetInfo.constructor","ofx4js.domain.data.profile.info.SignOnMessageSetInfo.getVersion1Info","ofx4js.domain.data.profile.info.SignOnMessageSetInfo.setVersion1Info","ofx4js.domain.data.profile.info.signup","ofx4js.domain.data.profile.info.signup.ClientEnrollment","ofx4js.domain.data.profile.info.signup.ClientEnrollment.getAccountRequired","ofx4js.domain.data.profile.info.signup.ClientEnrollment.setAccountRequired","ofx4js.domain.data.profile.info.signup.OtherEnrollment","ofx4js.domain.data.profile.info.signup.OtherEnrollment.getMessage","ofx4js.domain.data.profile.info.signup.OtherEnrollment.setMessage","ofx4js.domain.data.profile.info.signup.WebEnrollment","ofx4js.domain.data.profile.info.signup.WebEnrollment.getUrl","ofx4js.domain.data.profile.info.signup.WebEnrollment.setUrl","ofx4js.domain.data.profile.info.SignupV1MessageSetInfo","ofx4js.domain.data.profile.info.SignupV1MessageSetInfo.constructor","ofx4js.domain.data.profile.info.SignupV1MessageSetInfo.getMessageSetType","ofx4js.domain.data.profile.info.SignupV1MessageSetInfo.getClientEnrollment","ofx4js.domain.data.profile.info.SignupV1MessageSetInfo.setClientEnrollment","ofx4js.domain.data.profile.info.SignupV1MessageSetInfo.getWebEnrollment","ofx4js.domain.data.profile.info.SignupV1MessageSetInfo.setWebEnrollment","ofx4js.domain.data.profile.info.SignupV1MessageSetInfo.getOtherEnrollment","ofx4js.domain.data.profile.info.SignupV1MessageSetInfo.setOtherEnrollment","ofx4js.domain.data.profile.info.SignupV1MessageSetInfo.getSupportsClientUserInfoChanges","ofx4js.domain.data.profile.info.SignupV1MessageSetInfo.setSupportsClientUserInfoChanges","ofx4js.domain.data.profile.info.SignupV1MessageSetInfo.getSupportsAvailableAccounts","ofx4js.domain.data.profile.info.SignupV1MessageSetInfo.setSupportsAvailableAccounts","ofx4js.domain.data.profile.info.SignupV1MessageSetInfo.getSupportsClientServiceActivationRequests","ofx4js.domain.data.profile.info.SignupV1MessageSetInfo.setSupportsClientServiceActivationRequests","ofx4js.domain.data.profile.info.SignupMessageSetInfo","ofx4js.domain.data.profile.info.SignupMessageSetInfo.constructor","ofx4js.domain.data.profile.info.SignupMessageSetInfo.getVersion1Info","ofx4js.domain.data.profile.info.SignupMessageSetInfo.setVersion1Info","ofx4js.domain.data.profile.info.WireTransferV1MessageSetInfo","ofx4js.domain.data.profile.info.WireTransferV1MessageSetInfo.constructor","ofx4js.domain.data.profile.info.WireTransferV1MessageSetInfo.getMessageSetType","ofx4js.domain.data.profile.info.WireTransferV1MessageSetInfo.getProcessorDaysOff","ofx4js.domain.data.profile.info.WireTransferV1MessageSetInfo.setProcessorDaysOff","ofx4js.domain.data.profile.info.WireTransferV1MessageSetInfo.getProcessEndTime","ofx4js.domain.data.profile.info.WireTransferV1MessageSetInfo.setProcessEndTime","ofx4js.domain.data.profile.info.WireTransferV1MessageSetInfo.getSupportsScheduledTransfers","ofx4js.domain.data.profile.info.WireTransferV1MessageSetInfo.setSupportsScheduledTransfers","ofx4js.domain.data.profile.info.WireTransferV1MessageSetInfo.getDomesticWireTransferFee","ofx4js.domain.data.profile.info.WireTransferV1MessageSetInfo.setDomesticWireTransferFee","ofx4js.domain.data.profile.info.WireTransferV1MessageSetInfo.getInternationalWireTransferFee","ofx4js.domain.data.profile.info.WireTransferV1MessageSetInfo.setInternationalWireTransferFee","ofx4js.domain.data.profile.info.WireTransferMessageSetInfo","ofx4js.domain.data.profile.info.WireTransferMessageSetInfo.constructor","ofx4js.domain.data.profile.info.WireTransferMessageSetInfo.getVersion1Info","ofx4js.domain.data.profile.info.WireTransferMessageSetInfo.setVersion1Info","ofx4js.domain.data.seclist.AssetClass_fromOfx","ofx4js.domain.data.seclist.AssetClass","ofx4js.domain.data.seclist.CallType_fromOfx","ofx4js.domain.data.seclist.CallType","ofx4js.domain.data.seclist.CouponFrequency_fromOfx","ofx4js.domain.data.seclist.CouponFrequency","ofx4js.domain.data.seclist.DebtClass_fromOfx","ofx4js.domain.data.seclist.DebtClass","ofx4js.domain.data.seclist.DebtType_fromOfx","ofx4js.domain.data.seclist.DebtType","ofx4js.domain.data.seclist.DebtSecurityInfo","ofx4js.domain.data.seclist.DebtSecurityInfo.constructor","ofx4js.domain.data.seclist.DebtSecurityInfo.getParValue","ofx4js.domain.data.seclist.DebtSecurityInfo.setParValue","ofx4js.domain.data.seclist.DebtSecurityInfo.getDebtType","ofx4js.domain.data.seclist.DebtSecurityInfo.setDebtType","ofx4js.domain.data.seclist.DebtSecurityInfo.getDebtTypeEnum","ofx4js.domain.data.seclist.DebtSecurityInfo.getDebtClass","ofx4js.domain.data.seclist.DebtSecurityInfo.setDebtClass","ofx4js.domain.data.seclist.DebtSecurityInfo.getDebtClassEnum","ofx4js.domain.data.seclist.DebtSecurityInfo.getCouponRate","ofx4js.domain.data.seclist.DebtSecurityInfo.setCouponRate","ofx4js.domain.data.seclist.DebtSecurityInfo.getNextMaturityDate","ofx4js.domain.data.seclist.DebtSecurityInfo.setNextMaturityDate","ofx4js.domain.data.seclist.DebtSecurityInfo.getCouponFrequency","ofx4js.domain.data.seclist.DebtSecurityInfo.setCouponFrequency","ofx4js.domain.data.seclist.DebtSecurityInfo.getCouponFrequencyEnum","ofx4js.domain.data.seclist.DebtSecurityInfo.getCallPrice","ofx4js.domain.data.seclist.DebtSecurityInfo.setCallPrice","ofx4js.domain.data.seclist.DebtSecurityInfo.getYieldToCall","ofx4js.domain.data.seclist.DebtSecurityInfo.setYieldToCall","ofx4js.domain.data.seclist.DebtSecurityInfo.getNextCallDate","ofx4js.domain.data.seclist.DebtSecurityInfo.setNextCallDate","ofx4js.domain.data.seclist.DebtSecurityInfo.getCallType","ofx4js.domain.data.seclist.DebtSecurityInfo.setCallType","ofx4js.domain.data.seclist.DebtSecurityInfo.getCallTypeEnum","ofx4js.domain.data.seclist.DebtSecurityInfo.getYieldToMaturity","ofx4js.domain.data.seclist.DebtSecurityInfo.setYieldToMaturity","ofx4js.domain.data.seclist.DebtSecurityInfo.getDebtMaturityDate","ofx4js.domain.data.seclist.DebtSecurityInfo.setDebtMaturityDate","ofx4js.domain.data.seclist.DebtSecurityInfo.getAssetClass","ofx4js.domain.data.seclist.DebtSecurityInfo.setAssetClass","ofx4js.domain.data.seclist.DebtSecurityInfo.getAssetClassEnum","ofx4js.domain.data.seclist.DebtSecurityInfo.getFiAssetClass","ofx4js.domain.data.seclist.DebtSecurityInfo.setFiAssetClass","ofx4js.domain.data.seclist.MutualFundType_fromOfx","ofx4js.domain.data.seclist.MutualFundType","ofx4js.domain.data.seclist.MutualFundSecurityInfo","ofx4js.domain.data.seclist.MutualFundSecurityInfo.constructor","ofx4js.domain.data.seclist.MutualFundSecurityInfo.getType","ofx4js.domain.data.seclist.MutualFundSecurityInfo.setType","ofx4js.domain.data.seclist.MutualFundSecurityInfo.getTypeEnum","ofx4js.domain.data.seclist.MutualFundSecurityInfo.getYield","ofx4js.domain.data.seclist.MutualFundSecurityInfo.setYield","ofx4js.domain.data.seclist.MutualFundSecurityInfo.getDateYieldAsOf","ofx4js.domain.data.seclist.MutualFundSecurityInfo.setDateYieldAsOf","ofx4js.domain.data.seclist.OptionType_fromOfx","ofx4js.domain.data.seclist.OptionType","ofx4js.domain.data.seclist.OptionSecurityInfo","ofx4js.domain.data.seclist.OptionSecurityInfo.constructor","ofx4js.domain.data.seclist.OptionSecurityInfo.getOptionType","ofx4js.domain.data.seclist.OptionSecurityInfo.setOptionType","ofx4js.domain.data.seclist.OptionSecurityInfo.getOptionTypeEnum","ofx4js.domain.data.seclist.OptionSecurityInfo.getStrikePrice","ofx4js.domain.data.seclist.OptionSecurityInfo.setStrikePrice","ofx4js.domain.data.seclist.OptionSecurityInfo.getExpirationDate","ofx4js.domain.data.seclist.OptionSecurityInfo.setExpirationDate","ofx4js.domain.data.seclist.OptionSecurityInfo.getSharesPerContact","ofx4js.domain.data.seclist.OptionSecurityInfo.setSharesPerContact","ofx4js.domain.data.seclist.OptionSecurityInfo.getUnderlyingSecurity","ofx4js.domain.data.seclist.OptionSecurityInfo.setUnderlyingSecurity","ofx4js.domain.data.seclist.OptionSecurityInfo.getAssetClass","ofx4js.domain.data.seclist.OptionSecurityInfo.setAssetClass","ofx4js.domain.data.seclist.OptionSecurityInfo.getAssetClassEnum","ofx4js.domain.data.seclist.OptionSecurityInfo.getFiAssetClass","ofx4js.domain.data.seclist.OptionSecurityInfo.setFiAssetClass","ofx4js.domain.data.seclist.OtherSecurityInfo","ofx4js.domain.data.seclist.OtherSecurityInfo.constructor","ofx4js.domain.data.seclist.OtherSecurityInfo.getTypeDesc","ofx4js.domain.data.seclist.OtherSecurityInfo.setTypeDesc","ofx4js.domain.data.seclist.OtherSecurityInfo.getAssetClass","ofx4js.domain.data.seclist.OtherSecurityInfo.setAssetClass","ofx4js.domain.data.seclist.OtherSecurityInfo.getAssetClassEnum","ofx4js.domain.data.seclist.OtherSecurityInfo.getFiAssetClass","ofx4js.domain.data.seclist.OtherSecurityInfo.setFiAssetClass","ofx4js.domain.data.seclist.StockType_fromOfx","ofx4js.domain.data.seclist.StockType","ofx4js.domain.data.seclist.StockSecurityInfo","ofx4js.domain.data.seclist.StockSecurityInfo.constructor","ofx4js.domain.data.seclist.StockSecurityInfo.getType","ofx4js.domain.data.seclist.StockSecurityInfo.setType","ofx4js.domain.data.seclist.StockSecurityInfo.getTypeEnum","ofx4js.domain.data.seclist.StockSecurityInfo.getYield","ofx4js.domain.data.seclist.StockSecurityInfo.setYield","ofx4js.domain.data.seclist.StockSecurityInfo.getDateYieldAsOf","ofx4js.domain.data.seclist.StockSecurityInfo.setDateYieldAsOf","ofx4js.domain.data.seclist.StockSecurityInfo.getAssetClass","ofx4js.domain.data.seclist.StockSecurityInfo.setAssetClass","ofx4js.domain.data.seclist.StockSecurityInfo.getAssetClassEnum","ofx4js.domain.data.seclist.StockSecurityInfo.getFiAssetClass","ofx4js.domain.data.seclist.StockSecurityInfo.setFiAssetClass","ofx4js.domain.data.tax1099","ofx4js.domain.data.tax1099.ProcDet","ofx4js.domain.data.tax1099.ProcDet.getDtAqd","ofx4js.domain.data.tax1099.ProcDet.setDtAqd","ofx4js.domain.data.tax1099.ProcDet.getDtSale","ofx4js.domain.data.tax1099.ProcDet.setDtSale","ofx4js.domain.data.tax1099.ProcDet.getSecName","ofx4js.domain.data.tax1099.ProcDet.setSecName","ofx4js.domain.data.tax1099.ProcDet.getCostBasis","ofx4js.domain.data.tax1099.ProcDet.setCostBasis","ofx4js.domain.data.tax1099.ProcDet.getSaleSpr","ofx4js.domain.data.tax1099.ProcDet.setSaleSpr","ofx4js.domain.data.tax1099.ProcDet.getLongShort","ofx4js.domain.data.tax1099.ProcDet.setLongShort","ofx4js.domain.data.tax1099.ProcDet.getWasDisAllowed","ofx4js.domain.data.tax1099.ProcDet.setWasDisAllowed","ofx4js.domain.data.tax1099.ProcDet.getNoncoveredSec","ofx4js.domain.data.tax1099.ProcDet.setNoncoveredSec","ofx4js.domain.data.tax1099.ProcDet.getBasisNotshown","ofx4js.domain.data.tax1099.ProcDet.setBasisNotshown","ofx4js.domain.data.tax1099.ExtDBInfo","ofx4js.domain.data.tax1099.ExtDBInfo.getProcDet","ofx4js.domain.data.tax1099.ExtDBInfo.setProcDet","ofx4js.domain.data.tax1099.ExtDBInfo.getTeInterest","ofx4js.domain.data.tax1099.ExtDBInfo.setTeInterest","ofx4js.domain.data.tax1099.ExtDBInfo.getPabInterest","ofx4js.domain.data.tax1099.ExtDBInfo.setPabInterest","ofx4js.domain.data.tax1099.ExtDBInfo.getTeIntDividend","ofx4js.domain.data.tax1099.ExtDBInfo.setTeIntDividend","ofx4js.domain.data.tax1099.ExtDBInfo.getPabDividend","ofx4js.domain.data.tax1099.ExtDBInfo.setPabDividend","ofx4js.domain.data.tax1099.PayerAddress","ofx4js.domain.data.tax1099.PayerAddress.getPayerName1","ofx4js.domain.data.tax1099.PayerAddress.setPayerName1","ofx4js.domain.data.tax1099.PayerAddress.getPayerName2","ofx4js.domain.data.tax1099.PayerAddress.setPayerName2","ofx4js.domain.data.tax1099.PayerAddress.getAddress1","ofx4js.domain.data.tax1099.PayerAddress.setAddress1","ofx4js.domain.data.tax1099.PayerAddress.getAddress2","ofx4js.domain.data.tax1099.PayerAddress.setAddress2","ofx4js.domain.data.tax1099.PayerAddress.getCity","ofx4js.domain.data.tax1099.PayerAddress.setCity","ofx4js.domain.data.tax1099.PayerAddress.getState","ofx4js.domain.data.tax1099.PayerAddress.setState","ofx4js.domain.data.tax1099.PayerAddress.getPostalCode","ofx4js.domain.data.tax1099.PayerAddress.setPostalCode","ofx4js.domain.data.tax1099.PayerAddress.getPhone","ofx4js.domain.data.tax1099.PayerAddress.setPhone","ofx4js.domain.data.tax1099.RecAddress","ofx4js.domain.data.tax1099.RecAddress.getRecName1","ofx4js.domain.data.tax1099.RecAddress.setRecName1","ofx4js.domain.data.tax1099.RecAddress.getRecName2","ofx4js.domain.data.tax1099.RecAddress.setRecName2","ofx4js.domain.data.tax1099.RecAddress.getAddress1","ofx4js.domain.data.tax1099.RecAddress.setAddress1","ofx4js.domain.data.tax1099.RecAddress.getAddress2","ofx4js.domain.data.tax1099.RecAddress.setAddress2","ofx4js.domain.data.tax1099.RecAddress.getCity","ofx4js.domain.data.tax1099.RecAddress.setCity","ofx4js.domain.data.tax1099.RecAddress.getState","ofx4js.domain.data.tax1099.RecAddress.setState","ofx4js.domain.data.tax1099.RecAddress.getPostalCode","ofx4js.domain.data.tax1099.RecAddress.setPostalCode","ofx4js.domain.data.tax1099.RecAddress.getPhone","ofx4js.domain.data.tax1099.RecAddress.setPhone","ofx4js.domain.data.tax1099.Tax1099B","ofx4js.domain.data.tax1099.Tax1099B.getSrvrtId","ofx4js.domain.data.tax1099.Tax1099B.setSrvrtId","ofx4js.domain.data.tax1099.Tax1099B.getTaxYear","ofx4js.domain.data.tax1099.Tax1099B.setTaxYear","ofx4js.domain.data.tax1099.Tax1099B.getExtDBInfo","ofx4js.domain.data.tax1099.Tax1099B.setExtDBInfo","ofx4js.domain.data.tax1099.Tax1099B.getPayerAddress","ofx4js.domain.data.tax1099.Tax1099B.setPayerAddress","ofx4js.domain.data.tax1099.Tax1099B.getPayerId","ofx4js.domain.data.tax1099.Tax1099B.setPayerId","ofx4js.domain.data.tax1099.Tax1099B.getRecAddress","ofx4js.domain.data.tax1099.Tax1099B.setRecAddress","ofx4js.domain.data.tax1099.Tax1099B.getRecId","ofx4js.domain.data.tax1099.Tax1099B.setRecId","ofx4js.domain.data.tax1099.Tax1099B.getRecAcct","ofx4js.domain.data.tax1099.Tax1099B.setRecAcct","ofx4js.domain.data.tax1099.Tax1099DIV","ofx4js.domain.data.tax1099.Tax1099DIV.getSrvrtId","ofx4js.domain.data.tax1099.Tax1099DIV.setSrvrtId","ofx4js.domain.data.tax1099.Tax1099DIV.getTaxYear","ofx4js.domain.data.tax1099.Tax1099DIV.setTaxYear","ofx4js.domain.data.tax1099.Tax1099DIV.getOrdDiv","ofx4js.domain.data.tax1099.Tax1099DIV.setOrdDiv","ofx4js.domain.data.tax1099.Tax1099DIV.getQualifiedDiv","ofx4js.domain.data.tax1099.Tax1099DIV.setQualifiedDiv","ofx4js.domain.data.tax1099.Tax1099DIV.getTotCapGain","ofx4js.domain.data.tax1099.Tax1099DIV.setTotCapGain","ofx4js.domain.data.tax1099.Tax1099DIV.getP28Gain","ofx4js.domain.data.tax1099.Tax1099DIV.setP28Gain","ofx4js.domain.data.tax1099.Tax1099DIV.getUnrecSec1250","ofx4js.domain.data.tax1099.Tax1099DIV.setUnrecSec1250","ofx4js.domain.data.tax1099.Tax1099DIV.getSec1202","ofx4js.domain.data.tax1099.Tax1099DIV.setSec1202","ofx4js.domain.data.tax1099.Tax1099DIV.getNonTaxDist","ofx4js.domain.data.tax1099.Tax1099DIV.setNonTaxDist","ofx4js.domain.data.tax1099.Tax1099DIV.getFedTaxWh","ofx4js.domain.data.tax1099.Tax1099DIV.setFedTaxWh","ofx4js.domain.data.tax1099.Tax1099DIV.getInvestExp","ofx4js.domain.data.tax1099.Tax1099DIV.setInvestExp","ofx4js.domain.data.tax1099.Tax1099DIV.getForTaxPd","ofx4js.domain.data.tax1099.Tax1099DIV.setForTaxPd","ofx4js.domain.data.tax1099.Tax1099DIV.getCashLiq","ofx4js.domain.data.tax1099.Tax1099DIV.setCashLiq","ofx4js.domain.data.tax1099.Tax1099DIV.getNonCashLiq","ofx4js.domain.data.tax1099.Tax1099DIV.setNonCashLiq","ofx4js.domain.data.tax1099.Tax1099DIV.getPayerAddress","ofx4js.domain.data.tax1099.Tax1099DIV.setPayerAddress","ofx4js.domain.data.tax1099.Tax1099DIV.getPayerId","ofx4js.domain.data.tax1099.Tax1099DIV.setPayerId","ofx4js.domain.data.tax1099.Tax1099DIV.getRecAddress","ofx4js.domain.data.tax1099.Tax1099DIV.setRecAddress","ofx4js.domain.data.tax1099.Tax1099DIV.getRecId","ofx4js.domain.data.tax1099.Tax1099DIV.setRecId","ofx4js.domain.data.tax1099.Tax1099DIV.getRecAcct","ofx4js.domain.data.tax1099.Tax1099DIV.setRecAcct","ofx4js.domain.data.tax1099.Tax1099INT","ofx4js.domain.data.tax1099.Tax1099INT.getSrvrtId","ofx4js.domain.data.tax1099.Tax1099INT.setSrvrtId","ofx4js.domain.data.tax1099.Tax1099INT.getTaxYear","ofx4js.domain.data.tax1099.Tax1099INT.setTaxYear","ofx4js.domain.data.tax1099.Tax1099INT.getIntIncome","ofx4js.domain.data.tax1099.Tax1099INT.setIntIncome","ofx4js.domain.data.tax1099.Tax1099INT.getErlWithPen","ofx4js.domain.data.tax1099.Tax1099INT.setErlWithPen","ofx4js.domain.data.tax1099.Tax1099INT.getIntUsbndtrs","ofx4js.domain.data.tax1099.Tax1099INT.setIntUsbndtrs","ofx4js.domain.data.tax1099.Tax1099INT.getFedTaxWh","ofx4js.domain.data.tax1099.Tax1099INT.setFedTaxWh","ofx4js.domain.data.tax1099.Tax1099INT.getInvestExp","ofx4js.domain.data.tax1099.Tax1099INT.setInvestExp","ofx4js.domain.data.tax1099.Tax1099INT.getForTaxPd","ofx4js.domain.data.tax1099.Tax1099INT.setForTaxPd","ofx4js.domain.data.tax1099.Tax1099INT.getPayerAddress","ofx4js.domain.data.tax1099.Tax1099INT.setPayerAddress","ofx4js.domain.data.tax1099.Tax1099INT.getPayerId","ofx4js.domain.data.tax1099.Tax1099INT.setPayerId","ofx4js.domain.data.tax1099.Tax1099INT.getRecAddress","ofx4js.domain.data.tax1099.Tax1099INT.setRecAddress","ofx4js.domain.data.tax1099.Tax1099INT.getRecId","ofx4js.domain.data.tax1099.Tax1099INT.setRecId","ofx4js.domain.data.tax1099.Tax1099INT.getRecAcct","ofx4js.domain.data.tax1099.Tax1099INT.setRecAcct","ofx4js.domain.data.tax1099.Tax1099INT.getTaxExemptInt","ofx4js.domain.data.tax1099.Tax1099INT.setTaxExemptInt","ofx4js.domain.data.tax1099.Tax1099INT.getSpecifiedPabInt","ofx4js.domain.data.tax1099.Tax1099INT.setSpecifiedPabInt","ofx4js.domain.data.tax1099.Tax1099MISC","ofx4js.domain.data.tax1099.Tax1099MISC.getSrvrtId","ofx4js.domain.data.tax1099.Tax1099MISC.setSrvrtId","ofx4js.domain.data.tax1099.Tax1099MISC.getTaxYear","ofx4js.domain.data.tax1099.Tax1099MISC.setTaxYear","ofx4js.domain.data.tax1099.Tax1099MISC.getRoyalties","ofx4js.domain.data.tax1099.Tax1099MISC.setRoyalties","ofx4js.domain.data.tax1099.Tax1099MISC.getOtherIncome","ofx4js.domain.data.tax1099.Tax1099MISC.setOtherIncome","ofx4js.domain.data.tax1099.Tax1099MISC.getFedTaxWh","ofx4js.domain.data.tax1099.Tax1099MISC.setFedTaxWh","ofx4js.domain.data.tax1099.Tax1099MISC.getSubPmts","ofx4js.domain.data.tax1099.Tax1099MISC.setSubPmts","ofx4js.domain.data.tax1099.Tax1099MISC.getPayerAddress","ofx4js.domain.data.tax1099.Tax1099MISC.setPayerAddress","ofx4js.domain.data.tax1099.Tax1099MISC.getPayerId","ofx4js.domain.data.tax1099.Tax1099MISC.setPayerId","ofx4js.domain.data.tax1099.Tax1099MISC.getRecAddress","ofx4js.domain.data.tax1099.Tax1099MISC.setRecAddress","ofx4js.domain.data.tax1099.Tax1099MISC.getRecId","ofx4js.domain.data.tax1099.Tax1099MISC.setRecId","ofx4js.domain.data.tax1099.Tax1099MISC.getRecAcct","ofx4js.domain.data.tax1099.Tax1099MISC.setRecAcct","ofx4js.domain.data.tax1099.Tax1099OID","ofx4js.domain.data.tax1099.Tax1099OID.getSrvrtId","ofx4js.domain.data.tax1099.Tax1099OID.setSrvrtId","ofx4js.domain.data.tax1099.Tax1099OID.getTaxYear","ofx4js.domain.data.tax1099.Tax1099OID.setTaxYear","ofx4js.domain.data.tax1099.Tax1099OID.getOriginalDisc","ofx4js.domain.data.tax1099.Tax1099OID.setOriginalDisc","ofx4js.domain.data.tax1099.Tax1099OID.getOtherPerInt","ofx4js.domain.data.tax1099.Tax1099OID.setOtherPerInt","ofx4js.domain.data.tax1099.Tax1099OID.getErlWithPen","ofx4js.domain.data.tax1099.Tax1099OID.setErlWithPen","ofx4js.domain.data.tax1099.Tax1099OID.getFedTaxWh","ofx4js.domain.data.tax1099.Tax1099OID.setFedTaxWh","ofx4js.domain.data.tax1099.Tax1099OID.getDesc","ofx4js.domain.data.tax1099.Tax1099OID.setDesc","ofx4js.domain.data.tax1099.Tax1099OID.getOidOnUstres","ofx4js.domain.data.tax1099.Tax1099OID.setOidOnUstres","ofx4js.domain.data.tax1099.Tax1099OID.getInvestExp","ofx4js.domain.data.tax1099.Tax1099OID.setInvestExp","ofx4js.domain.data.tax1099.Tax1099OID.getPayerAddress","ofx4js.domain.data.tax1099.Tax1099OID.setPayerAddress","ofx4js.domain.data.tax1099.Tax1099OID.getPayerId","ofx4js.domain.data.tax1099.Tax1099OID.setPayerId","ofx4js.domain.data.tax1099.Tax1099OID.getRecAddress","ofx4js.domain.data.tax1099.Tax1099OID.setRecAddress","ofx4js.domain.data.tax1099.Tax1099OID.getRecId","ofx4js.domain.data.tax1099.Tax1099OID.setRecId","ofx4js.domain.data.tax1099.Tax1099OID.getRecAcct","ofx4js.domain.data.tax1099.Tax1099OID.setRecAcct","ofx4js.domain.data.tax1099.Tax1099R","ofx4js.domain.data.tax1099.Tax1099R.getSrvrtId","ofx4js.domain.data.tax1099.Tax1099R.setSrvrtId","ofx4js.domain.data.tax1099.Tax1099R.getTaxYear","ofx4js.domain.data.tax1099.Tax1099R.setTaxYear","ofx4js.domain.data.tax1099.Tax1099R.getGrossDist","ofx4js.domain.data.tax1099.Tax1099R.setGrossDist","ofx4js.domain.data.tax1099.Tax1099R.getTaxAmt","ofx4js.domain.data.tax1099.Tax1099R.setTaxAmt","ofx4js.domain.data.tax1099.Tax1099R.getTaxAmtNd","ofx4js.domain.data.tax1099.Tax1099R.setTaxAmtNd","ofx4js.domain.data.tax1099.Tax1099R.getCapGain","ofx4js.domain.data.tax1099.Tax1099R.setCapGain","ofx4js.domain.data.tax1099.Tax1099R.getFedTaxWh","ofx4js.domain.data.tax1099.Tax1099R.setFedTaxWh","ofx4js.domain.data.tax1099.Tax1099R.getEmpContins","ofx4js.domain.data.tax1099.Tax1099R.setEmpContins","ofx4js.domain.data.tax1099.Tax1099R.getNetUnapEmp","ofx4js.domain.data.tax1099.Tax1099R.setNetUnapEmp","ofx4js.domain.data.tax1099.Tax1099R.getDistCode","ofx4js.domain.data.tax1099.Tax1099R.setDistCode","ofx4js.domain.data.tax1099.Tax1099R.getIraSepSimp","ofx4js.domain.data.tax1099.Tax1099R.setIraSepSimp","ofx4js.domain.data.tax1099.Tax1099R.getAnnCtrctDist","ofx4js.domain.data.tax1099.Tax1099R.setAnnCtrctDist","ofx4js.domain.data.tax1099.Tax1099R.getTotEmpCount","ofx4js.domain.data.tax1099.Tax1099R.setTotEmpCount","ofx4js.domain.data.tax1099.Tax1099R.getPayerAddress","ofx4js.domain.data.tax1099.Tax1099R.setPayerAddress","ofx4js.domain.data.tax1099.Tax1099R.getPayerId","ofx4js.domain.data.tax1099.Tax1099R.setPayerId","ofx4js.domain.data.tax1099.Tax1099R.getRecAddress","ofx4js.domain.data.tax1099.Tax1099R.setRecAddress","ofx4js.domain.data.tax1099.Tax1099R.getRecId","ofx4js.domain.data.tax1099.Tax1099R.setRecId","ofx4js.domain.data.tax1099.Tax1099R.getRecAcct","ofx4js.domain.data.tax1099.Tax1099R.setRecAcct","ofx4js.domain.data.tax1099.Tax1099Request","ofx4js.domain.data.tax1099.Tax1099Request.constructor","ofx4js.domain.data.tax1099.Tax1099Request.getTaxYear","ofx4js.domain.data.tax1099.Tax1099Request.setTaxYear","ofx4js.domain.data.tax1099.Tax1099RequestTransaction","ofx4js.domain.data.tax1099.Tax1099RequestTransaction.constructor","ofx4js.domain.data.tax1099.Tax1099RequestTransaction.getTax1099Request","ofx4js.domain.data.tax1099.Tax1099RequestTransaction.setTax1099Request","ofx4js.domain.data.tax1099.Tax1099RequestTransaction.setWrappedMessage","ofx4js.domain.data.tax1099.Tax1099RequestMessageSet","ofx4js.domain.data.tax1099.Tax1099RequestMessageSet.constructor","ofx4js.domain.data.tax1099.Tax1099RequestMessageSet.getType","ofx4js.domain.data.tax1099.Tax1099RequestMessageSet.getTaxRequestTransaction","ofx4js.domain.data.tax1099.Tax1099RequestMessageSet.setTaxRequestTransaction","ofx4js.domain.data.tax1099.Tax1099RequestMessageSet.getRequestMessages","ofx4js.domain.data.tax1099.Tax1099Response","ofx4js.domain.data.tax1099.Tax1099Response.constructor","ofx4js.domain.data.tax1099.Tax1099Response.getLstTax1099DIV","ofx4js.domain.data.tax1099.Tax1099Response.setLstTax1099DIV","ofx4js.domain.data.tax1099.Tax1099Response.getResponseMessageName","ofx4js.domain.data.tax1099.Tax1099Response.getLstTax1099INT","ofx4js.domain.data.tax1099.Tax1099Response.setLstTax1099INT","ofx4js.domain.data.tax1099.Tax1099Response.getLstTax1099R","ofx4js.domain.data.tax1099.Tax1099Response.setLstTax1099R","ofx4js.domain.data.tax1099.Tax1099Response.getLstTax1099B","ofx4js.domain.data.tax1099.Tax1099Response.setLstTax1099B","ofx4js.domain.data.tax1099.Tax1099Response.getLstTax1099MISC","ofx4js.domain.data.tax1099.Tax1099Response.setLstTax1099MISC","ofx4js.domain.data.tax1099.Tax1099Response.getLstTax1099OID","ofx4js.domain.data.tax1099.Tax1099Response.setLstTax1099OID","ofx4js.domain.data.tax1099.Tax1099ResponseTransaction","ofx4js.domain.data.tax1099.Tax1099ResponseTransaction.constructor","ofx4js.domain.data.tax1099.Tax1099ResponseTransaction.getTax1099Response","ofx4js.domain.data.tax1099.Tax1099ResponseTransaction.setTax1099Response","ofx4js.domain.data.tax1099.Tax1099ResponseTransaction.getWrappedMessage","ofx4js.domain.data.tax1099.Tax1099ResponseMessageSet","ofx4js.domain.data.tax1099.Tax1099ResponseMessageSet.constructor","ofx4js.domain.data.tax1099.Tax1099ResponseMessageSet.getType","ofx4js.domain.data.tax1099.Tax1099ResponseMessageSet.getTaxResponseTransaction","ofx4js.domain.data.tax1099.Tax1099ResponseMessageSet.setTaxResponseTransaction","ofx4js.domain.data.tax1099.Tax1099ResponseMessageSet.getResponseMessages","ofx4js.domain.data.tax1099.Tax1099ResponseMessageSet.getStatementResponse","ofx4js.io.RequiredAttributeException","ofx4js.io.RequiredAttributeException.constructor","parse","s","buf","offset","i","ii","toLowerCase","replace","oct","_hexToByte","unparse","bth","_byteToHex","v1","options","clockseq","undefined","_clockseq","msecs","Date","getTime","nsecs","_lastNSecs","dt","_lastMSecs","Error","tl","tmh","node","_nodeId","n","v4","Array","rnds","random","rng","_rng","toString","substr","_seedBytes","uuid","global","crypto","msCrypto","getRandomValues","_rnds8","Uint8Array","_rnds","r","Math","Buffer","sax","SAXParser","strict","opt","parser","clearBuffers","q","bufferCheckPosition","MAX_BUFFER_LENGTH","lowercase","lowercasetags","looseCase","tags","closed","closedRoot","sawRoot","tag","error","noscript","state","S","BEGIN","strictEntities","ENTITIES","XML_ENTITIES","attribList","xmlns","ns","rootNS","trackPosition","position","line","column","emit","checkBufferLength","maxAllowed","max","maxActual","l","buffers","len","closeText","emitNode","cdata","script","flushBuffers","createStream","SAXStream","Stream","apply","_parser","writable","readable","me","onend","er","_decoder","streamWraps","forEach","ev","defineProperty","get","set","h","on","removeAllListeners","enumerable","configurable","charClass","str","split","reduce","isRegExp","is","charclass","match","not","event","nodeType","textNode","textopts","text","trim","normalize","end","strictFail","BEGIN_WHITESPACE","TEXT","message","newTag","tagName","parent","name","attributes","qname","attribute","indexOf","qualName","prefix","local","attrib","attribName","attribValue","qn","XML_NAMESPACE","XMLNS_NAMESPACE","push","value","openTag","selfClosing","uri","JSON","stringify","keys","nv","a","isSelfClosing","SCRIPT","closeTag","t","closeTo","close","pop","x","parseEntity","num","entity","entityLC","numStr","charAt","slice","parseInt","String","fromCodePoint","beginWhiteSpace","OPEN_WAKA","startTagPosition","whitespace","chunk","result","write","starti","substring","TEXT_ENTITY","SCRIPT_ENDING","CLOSE_TAG","SGML_DECL","sgmlDecl","nameStart","OPEN_TAG","PROC_INST","procInstName","procInstBody","pad","join","toUpperCase","CDATA","COMMENT","comment","DOCTYPE","doctype","quote","SGML_DECL_QUOTED","DOCTYPE_DTD","DOCTYPE_QUOTED","DOCTYPE_DTD_QUOTED","COMMENT_ENDING","COMMENT_ENDED","CDATA_ENDING","CDATA_ENDING_2","PROC_INST_ENDING","PROC_INST_BODY","body","nameBody","OPEN_TAG_SLASH","ATTRIB","ATTRIB_NAME","ATTRIB_VALUE","ATTRIB_NAME_SAW_WHITE","ATTRIB_VALUE_QUOTED","ATTRIB_VALUE_UNQUOTED","ATTRIB_VALUE_ENTITY_Q","ATTRIB_VALUE_CLOSED","attribEnd","ATTRIB_VALUE_ENTITY_U","CLOSE_TAG_SAW_WHITE","returnState","buffer","entityBody","entityStart","EVENTS","o","F","newf","resume","flush","ex","filter","isBuffer","SD","StringDecoder","handler","args","arguments","splice","number","letter","xml","STATE","COMMENT_STARTING","amp","gt","lt","quot","apos","AElig","Aacute","Acirc","Agrave","Aring","Atilde","Auml","Ccedil","ETH","Eacute","Ecirc","Egrave","Euml","Iacute","Icirc","Igrave","Iuml","Ntilde","Oacute","Ocirc","Ograve","Oslash","Otilde","Ouml","THORN","Uacute","Ucirc","Ugrave","Uuml","Yacute","aacute","acirc","aelig","agrave","aring","atilde","auml","ccedil","eacute","ecirc","egrave","eth","euml","iacute","icirc","igrave","iuml","ntilde","oacute","ocirc","ograve","oslash","otilde","ouml","szlig","thorn","uacute","ucirc","ugrave","uuml","yacute","yuml","copy","reg","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","ordf","laquo","shy","macr","deg","plusmn","sup1","sup2","sup3","acute","micro","para","middot","cedil","ordm","raquo","frac14","frac12","frac34","iquest","times","divide","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","tilde","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","key","e","fromCharCode","stringFromCharCode","floor","highSurrogate","lowSurrogate","MAX_SIZE","codeUnits","index","codePoint","Number","isFinite","RangeError","typedArraySupport","arr","__proto__","foo","subarray","byteLength","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","arg","encodingOrOffset","allocUnsafe","from","TypeError","ArrayBuffer","fromArrayBuffer","fromString","fromObject","assertSize","size","alloc","fill","encoding","checked","string","isEncoding","actual","fromArrayLike","array","byteOffset","obj","isnan","type","isArray","SlowBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","start","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","val","dir","isNaN","arrayIndexOf","lastIndexOf","read","indexSize","readUInt16BE","arrLength","valLength","foundIndex","found","j","hexWrite","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","base64","fromByteArray","min","res","firstByte","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","stringtrim","INVALID_BASE64_RE","units","Infinity","leadSurrogate","charCodeAt","byteArray","hi","lo","toByteArray","src","dst","INSPECT_MAX_BYTES","poolSize","_augment","Symbol","species","allocUnsafeSlow","_isBuffer","compare","y","concat","list","pos","swap16","swap32","swap64","equals","inspect","target","thisStart","thisEnd","thisCopy","targetCopy","includes","toJSON","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","code","placeHoldersCount","b64","tmp","placeHolders","Arr","L","revLookup","tripletToBase64","lookup","encodeChunk","uint8","output","extraBytes","parts","maxChunkLength","len2","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","log","LN2","EE","EventEmitter","inherits","Readable","Writable","Duplex","Transform","PassThrough","pipe","dest","ondata","source","pause","ondrain","didOnEnd","onclose","destroy","cleanup","listenerCount","removeListener","_isStdio","_events","_maxListeners","isFunction","isNumber","isObject","isUndefined","defaultMaxListeners","setMaxListeners","listeners","err","context","addListener","listener","newListener","warned","console","trace","once","g","fired","evlistener","emitter","ctor","superCtor","super_","TempCtor","process","_","browser","env","READABLE_STREAM","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","timeout","run","Item","noop","nextTick","title","argv","version","versions","off","binding","cwd","chdir","umask","prependListener","fn","unshift","ReadableState","stream","objectMode","readableObjectMode","hwm","highWaterMark","defaultHwm","BufferList","pipes","pipesCount","flowing","ended","endEmitted","reading","sync","needReadable","emittedReadable","readableListening","resumeScheduled","defaultEncoding","ranOut","awaitDrain","readingMore","decoder","_readableState","_read","readableAddChunk","addToFront","chunkInvalid","onEofChunk","_e","skipAdd","emitReadable","maybeReadMore","needMoreData","computeNewHighWaterMark","MAX_HWM","howMuchToRead","head","debug","processNextTick","emitReadable_","flow","maybeReadMore_","pipeOnDrain","EElistenerCount","nReadingNextTick","self","resume_","fromList","shift","clear","fromListPartial","hasStrings","copyFromBufferString","copyFromBuffer","next","nb","tail","bufferShim","endReadable","endReadableNT","xs","f","util","debugUtil","debuglog","isPaused","setEncoding","enc","nOrig","doRead","pipeOpts","onunpipe","onfinish","cleanedUp","_writableState","needDrain","increasedAwaitDrain","unpipe","doEnd","stdout","stderr","endFn","dests","wrap","paused","method","events","bind","_fromList","arg1","arg2","arg3","MAX_LEN","_fill","fillBuf","flen","objectToString","isBoolean","isNull","isNullOrUndefined","isString","isSymbol","re","isDate","isError","isPrimitive","v","entry","allowHalfOpen","onEndNT","objectKeys","setImmediate","nop","WriteReq","cb","callback","WritableState","writableObjectMode","ending","finished","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","writecb","writelen","bufferedRequest","lastBufferedRequest","pendingcb","prefinished","errorEmitted","bufferedRequestCount","corkedRequestsFree","CorkedRequest","realHasInstance","_write","writev","_writev","writeAfterEnd","validChunk","valid","decodeChunk","writeOrBuffer","last","doWrite","onwriteError","onwriteStateUpdate","needFinish","clearBuffer","asyncWrite","afterWrite","onwriteDrain","finishMaybe","holder","count","finish","prefinish","need","endWritable","_this","internalUtil","deprecate","getBuffer","current","hasInstance","Function","object","cork","uncork","setDefaultEncoding","Timeout","clearFn","_id","_clearFn","window","setInterval","clearInterval","unref","ref","enroll","item","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","clearImmediate","task","tasksByHandle","nextHandle","registerImmediate","handle","runIfPresent","currentlyRunningATask","installNextTickImplementation","canUsePostMessage","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","installPostMessageImplementation","messagePrefix","onGlobalMessage","addEventListener","attachEvent","installMessageChannelImplementation","channel","MessageChannel","port1","port2","installReadyStateChangeImplementation","html","doc","documentElement","createElement","onreadystatechange","removeChild","appendChild","installSetTimeoutImplementation","document","attachTo","getPrototypeOf","msg","deprecated","config","warn","localStorage","assertEncoding","isBufferEncoding","passThroughWrite","utf16DetectIncompleteChar","charReceived","charLength","base64DetectIncompleteChar","surrogateSize","detectIncompleteChar","charBuffer","charStr","available","charCode","cr","TransformState","afterTransform","needTransform","transforming","writechunk","writeencoding","ts","_transformState","rs","transform","_transform","_flush","done","ws"],"mappings":"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AC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,KAAA,IACAC,OAAA,IACAC,IAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,KAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,KAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,KAAA,IACAC,MAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,KAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,MAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,KAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,IAAA,IACAC,KAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,KAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,KAAA,IACAC,MAAA,IACAC,MAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,KAAA,IACAC,OAAA,IACAC,KAAA,IACAC,KAAA,IACAC,IAAA,IACAC,KAAA,IACAC,MAAA,IACAC,KAAA,IACAC,MAAA,IACAC,OAAA,IACAC,IAAA,IACAC,OAAA,IACAC,KAAA,IACAC,IAAA,IACAC,KAAA,IACAC,MAAA,IACArN,IAAA,IACAsN,IAAA,IACAC,KAAA,IACAC,IAAA,IACAC,OAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,MAAA,IACAC,MAAA,IACAC,KAAA,IACAC,OAAA,IACAC,MAAA,IACAC,KAAA,IACAC,MAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,MAAA,IACAC,MAAA,IACAC,OAAA,IACAC,OAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,MAAA,IACAC,MAAA,IACAC,KAAA,IACAC,MAAA,IACAC,MAAA,IACAC,QAAA,IACAC,KAAA,IACAC,IAAA,IACAC,MAAA,IACAC,KAAA,IACAC,MAAA,IACAC,OAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,QAAA,IACAC,GAAA,IACAC,IAAA,IACAC,MAAA,IACAC,IAAA,IACAC,QAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,MAAA,IACAC,MAAA,IACAC,KAAA,IACAC,MAAA,IACAC,MAAA,IACAC,QAAA,IACAC,KAAA,IACAC,IAAA,IACAC,MAAA,IACAC,KAAA,IACAC,MAAA,IACAC,OAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,QAAA,IACAC,GAAA,IACAC,IAAA,IACAC,OAAA,IACAC,MAAA,IACAC,IAAA,IACAC,QAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,MAAA,IACAC,SAAA,IACAC,MAAA,IACAC,IAAA,IACAC,KAAA,KACAC,KAAA,KACAC,OAAA,KACAC,KAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,OAAA,KACAC,OAAA,KACAC,KAAA,KACAC,OAAA,KACAC,OAAA,KACAC,MAAA,KACAC,MAAA,KACAC,OAAA,KACAC,OAAA,KACAC,MAAA,KACAC,MAAA,KACAC,KAAA,KACAC,MAAA,KACAC,OAAA,KACAC,KAAA,KACAC,MAAA,KACAC,QAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,MAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,OAAA,KACAC,KAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,KAAA,KACAC,MAAA,KACAC,GAAA,KACAC,KAAA,KACAC,IAAA,KACAC,MAAA,KACAC,OAAA,KACAC,MAAA,KACAC,KAAA,KACAC,MAAA,KACAC,IAAA,KACAC,IAAA,KACAC,GAAA,KACAC,IAAA,KACAC,IAAA,KAC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","file":"dist/ofx4js.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ofx4js\"] = factory();\n\telse\n\t\troot[\"ofx4js\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ofx4js\"] = factory();\n\telse\n\t\troot[\"ofx4js\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    /**\n\t     * Base exception class.\n\t     *\n\t     * @author Ryan Heaton\n\t     */\n\t    var OFXException = (function (_super) {\n\t        __extends(OFXException, _super);\n\t        function OFXException(message, e) {\n\t            if (message === void 0) { message = null; }\n\t            if (e === void 0) { e = null; }\n\t            _super.call(this, message);\n\t            this.message = message;\n\t            this.innerError = e;\n\t        }\n\t        return OFXException;\n\t    })(Error);\n\t    ofx4js.OFXException = OFXException;\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='OFXException'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    /**\n\t     * @author Ryan Heaton\n\t     */\n\t    var OFXRuntimeException = (function (_super) {\n\t        __extends(OFXRuntimeException, _super);\n\t        function OFXRuntimeException(message) {\n\t            if (message === void 0) { message = null; }\n\t            _super.call(this, message);\n\t        }\n\t        return OFXRuntimeException;\n\t    })(ofx4js.OFXException);\n\t    ofx4js.OFXRuntimeException = OFXRuntimeException;\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var meta;\n\t    (function (meta) {\n\t        /**\n\t         * Annotation for a method that returns an OFX aggregate.\n\t         *\n\t         * @author Ryan Heaton\n\t         */\n\t        var Aggregate = (function () {\n\t            function Aggregate(value) {\n\t                this._value = value;\n\t            }\n\t            /**\n\t             * The name of the aggregate.\n\t             *\n\t             * @return The name of the aggregate.\n\t             */\n\t            Aggregate.prototype.value = function () {\n\t                return this._value;\n\t            };\n\t            return Aggregate;\n\t        })();\n\t        meta.Aggregate = Aggregate;\n\t    })(meta = ofx4js.meta || (ofx4js.meta = {}));\n\t})(ofx4js || (ofx4js = {}));\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var meta;\n\t    (function (meta) {\n\t        /**\n\t         * convenience function to supply a default value if the given value is not specified\n\t         */\n\t        function _default(value, defaultValue) {\n\t            return (typeof value !== 'undefined') ? value : defaultValue;\n\t        }\n\t        meta._default = _default;\n\t        function isAssignableFrom(entryType, assignableTo) {\n\t            return (assignableTo === entryType) ||\n\t                ((typeof entryType === \"function\") && (assignableTo.prototype instanceof entryType));\n\t        }\n\t        meta.isAssignableFrom = isAssignableFrom;\n\t        ;\n\t        /**\n\t         * an interface to read and write a value into an object\n\t         */\n\t        var PropertyDescriptor = (function () {\n\t            function PropertyDescriptor(params) {\n\t                this.propertyType = params.type;\n\t                this.readMethod = params.read;\n\t                this.writeMethod = params.write;\n\t            }\n\t            PropertyDescriptor.prototype.getPropertyType = function () {\n\t                return this.propertyType;\n\t            };\n\t            PropertyDescriptor.prototype.getReadMethod = function () {\n\t                return this.readMethod;\n\t            };\n\t            PropertyDescriptor.prototype.getWriteMethod = function () {\n\t                return this.writeMethod;\n\t            };\n\t            return PropertyDescriptor;\n\t        })();\n\t        meta.PropertyDescriptor = PropertyDescriptor;\n\t    })(meta = ofx4js.meta || (ofx4js.meta = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='PropertyDescriptor'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var meta;\n\t    (function (meta) {\n\t        /**\n\t         * Marks a method as providing a child aggregate (or set of them to a top-level aggregate).\n\t         *\n\t         * @author Ryan Heaton\n\t         */\n\t        var ChildAggregate = (function (_super) {\n\t            __extends(ChildAggregate, _super);\n\t            function ChildAggregate(params) {\n\t                _super.call(this, params);\n\t                this._order = params.order;\n\t                this._name = meta._default(params.name, \"##not_specified##\");\n\t                this._required = meta._default(params.required, false);\n\t                this._collectionEntryType = meta._default(params.collectionEntryType, null);\n\t            }\n\t            /**\n\t             * Used to specify the name of the aggregate in its context as a child aggregate.\n\t             *\n\t             * @return Used to specify the name of the aggregate in its context as a child aggregate.\n\t             */\n\t            ChildAggregate.prototype.name = function () {\n\t                return this._name;\n\t            };\n\t            /**\n\t             * Whether this aggregate is required.\n\t             *\n\t             * @return Whether this aggregate is required.\n\t             */\n\t            ChildAggregate.prototype.required = function () {\n\t                return this._required;\n\t            };\n\t            /**\n\t             * The order this child aggregate comes in its parent aggregate.\n\t             *\n\t             * @return The order this child aggregate comes in its parent aggregate.\n\t             */\n\t            ChildAggregate.prototype.order = function () {\n\t                return this._order;\n\t            };\n\t            /**\n\t             * If the type is a collection, return the type of the elements of the collection (otherwise null)\n\t             */\n\t            ChildAggregate.prototype.collectionEntryType = function () {\n\t                return this._collectionEntryType;\n\t            };\n\t            return ChildAggregate;\n\t        })(meta.PropertyDescriptor);\n\t        meta.ChildAggregate = ChildAggregate;\n\t    })(meta = ofx4js.meta || (ofx4js.meta = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='PropertyDescriptor'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var meta;\n\t    (function (meta) {\n\t        /**\n\t         * An OFX element, applied to a javabean property.\n\t         *\n\t         * @author Ryan Heaton\n\t         */\n\t        var Header = (function (_super) {\n\t            __extends(Header, _super);\n\t            function Header(params) {\n\t                _super.call(this, params);\n\t                this._name = params.name;\n\t            }\n\t            /**\n\t             * The name of the element.\n\t             *\n\t             * @return The name of the element.\n\t             */\n\t            Header.prototype.name = function () {\n\t                return this._name;\n\t            };\n\t            return Header;\n\t        })(meta.PropertyDescriptor);\n\t        meta.Header = Header;\n\t    })(meta = ofx4js.meta || (ofx4js.meta = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='PropertyDescriptor'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var meta;\n\t    (function (meta) {\n\t        /**\n\t         * An OFX element, applied to a javabean property.\n\t         *\n\t         * @author Ryan Heaton\n\t         */\n\t        var Element = (function (_super) {\n\t            __extends(Element, _super);\n\t            function Element(params) {\n\t                _super.call(this, params);\n\t                this._name = params.name;\n\t                this._required = meta._default(params.required, false);\n\t                this._order = params.order;\n\t                this._collectionEntryType = meta._default(params.collectionEntryType, null);\n\t            }\n\t            /**\n\t             * The name of the element.\n\t             *\n\t             * @return The name of the element.\n\t             */\n\t            Element.prototype.name = function () {\n\t                return this._name;\n\t            };\n\t            /**\n\t             * Whether this element is required.\n\t             *\n\t             * @return Whether this element is required.\n\t             */\n\t            Element.prototype.required = function () {\n\t                return this._required;\n\t            };\n\t            /**\n\t             * The order this element comes in its parent aggregate.\n\t             *\n\t             * @return The order this element comes in its parent aggregate.\n\t             */\n\t            Element.prototype.order = function () {\n\t                return this._order;\n\t            };\n\t            /**\n\t             * If the type is a collection, return the type of the elements of the collection (otherwise null)\n\t             */\n\t            Element.prototype.collectionEntryType = function () {\n\t                return this._collectionEntryType;\n\t            };\n\t            return Element;\n\t        })(meta.PropertyDescriptor);\n\t        meta.Element = Element;\n\t    })(meta = ofx4js.meta || (ofx4js.meta = {}));\n\t})(ofx4js || (ofx4js = {}));\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var log;\n\t    (function (log) {\n\t        var Log = (function () {\n\t            function Log() {\n\t                this.infoEnabled = false;\n\t                this.debugEnabled = false;\n\t            }\n\t            Log.prototype.setInfoEnabled = function (value) {\n\t                this.infoEnabled = value;\n\t            };\n\t            Log.prototype.isInfoEnabled = function () {\n\t                return this.infoEnabled;\n\t            };\n\t            Log.prototype.info = function () {\n\t                var texts = [];\n\t                for (var _i = 0; _i < arguments.length; _i++) {\n\t                    texts[_i - 0] = arguments[_i];\n\t                }\n\t                if (this.isInfoEnabled()) {\n\t                    console.log(texts);\n\t                }\n\t            };\n\t            Log.prototype.setDebugEnabled = function (value) {\n\t                this.debugEnabled = value;\n\t            };\n\t            Log.prototype.isDebugEnabled = function () {\n\t                return this.debugEnabled;\n\t            };\n\t            Log.prototype.debug = function () {\n\t                var texts = [];\n\t                for (var _i = 0; _i < arguments.length; _i++) {\n\t                    texts[_i - 0] = arguments[_i];\n\t                }\n\t                if (this.isDebugEnabled()) {\n\t                    console.log(texts);\n\t                }\n\t            };\n\t            Log.prototype.warning = function () {\n\t                var texts = [];\n\t                for (var _i = 0; _i < arguments.length; _i++) {\n\t                    texts[_i - 0] = arguments[_i];\n\t                }\n\t                console.log(texts);\n\t            };\n\t            Log.prototype.error = function () {\n\t                var texts = [];\n\t                for (var _i = 0; _i < arguments.length; _i++) {\n\t                    texts[_i - 0] = arguments[_i];\n\t                }\n\t                console.log(texts);\n\t            };\n\t            return Log;\n\t        })();\n\t        log.Log = Log;\n\t        var LogFactory = (function () {\n\t            function LogFactory() {\n\t            }\n\t            LogFactory.getLog = function (clazz) {\n\t                if (!clazz.Log) {\n\t                    clazz.Log = new Log();\n\t                }\n\t                return clazz.Log;\n\t            };\n\t            return LogFactory;\n\t        })();\n\t        log.LogFactory = LogFactory;\n\t    })(log = ofx4js.log || (ofx4js.log = {}));\n\t})(ofx4js || (ofx4js = {}));\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var collections;\n\t    (function (collections) {\n\t        var SortedSet = (function () {\n\t            function SortedSet(compareFcn) {\n\t                this.valueArray = [];\n\t                this.compareFcn = compareFcn;\n\t            }\n\t            SortedSet.prototype.values = function () {\n\t                if (!this.isSorted) {\n\t                    console.assert(!!this.compareFcn);\n\t                    this.valueArray.sort(this.compareFcn);\n\t                    this.isSorted = true;\n\t                }\n\t                return this.valueArray;\n\t            };\n\t            SortedSet.prototype.insert = function (element) {\n\t                var index = this.valueArray.indexOf(element);\n\t                if (index == -1) {\n\t                    this.isSorted = false;\n\t                    this.valueArray.push(element);\n\t                }\n\t            };\n\t            SortedSet.prototype.push = function (element) {\n\t                this.insert(element);\n\t            };\n\t            SortedSet.prototype.remove = function (element) {\n\t                var index = this.valueArray.indexOf(element);\n\t                if (index == -1) {\n\t                    return false;\n\t                }\n\t                this.valueArray = this.valueArray.splice(index, 1);\n\t            };\n\t            SortedSet.prototype.count = function () {\n\t                return this.valueArray.length;\n\t            };\n\t            return SortedSet;\n\t        })();\n\t        collections.SortedSet = SortedSet;\n\t    })(collections = ofx4js.collections || (ofx4js.collections = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../meta/ChildAggregate'/>\n\t///<reference path='../meta/Element'/>\n\t///<reference path='../meta/PropertyDescriptor'/>\n\t///<reference path='../collections/SortedSet'/>\n\t///<reference path='AggregateInfo'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var io;\n\t    (function (io) {\n\t        var SortedSet = ofx4js.collections.SortedSet;\n\t        var ChildAggregate = ofx4js.meta.ChildAggregate;\n\t        var Element = ofx4js.meta.Element;\n\t        //import Log = org.apache.commons.logging.Log;\n\t        //import LogFactory = org.apache.commons.logging.LogFactory;\n\t        (function (AggregateAttributeType) {\n\t            AggregateAttributeType[AggregateAttributeType[\"CHILD_AGGREGATE\"] = 0] = \"CHILD_AGGREGATE\";\n\t            AggregateAttributeType[AggregateAttributeType[\"ELEMENT\"] = 1] = \"ELEMENT\";\n\t        })(io.AggregateAttributeType || (io.AggregateAttributeType = {}));\n\t        var AggregateAttributeType = io.AggregateAttributeType;\n\t        /**\n\t         * A generic descriptor for an attribute of an OFX aggregate.\n\t         *\n\t         * @author Ryan Heaton\n\t         */\n\t        var AggregateAttribute = (function () {\n\t            function AggregateAttribute(arg) {\n\t                if (arg instanceof Element) {\n\t                    this.AggregateAttributeFromElement(arg);\n\t                }\n\t                else if (arg instanceof ChildAggregate) {\n\t                    this.AggregateAttributeFromChildAggregate(arg);\n\t                }\n\t                else {\n\t                    throw new ofx4js.OFXException(\"invalid type\");\n\t                }\n\t            }\n\t            AggregateAttribute.prototype.AggregateAttributeFromElement = function (elementInfo) {\n\t                this.readMethod = elementInfo.getReadMethod();\n\t                this.writeMethod = elementInfo.getWriteMethod();\n\t                if (this.readMethod == null) {\n\t                    throw new ofx4js.OFXException(\"Illegal property for aggregate: no read method.\");\n\t                }\n\t                else if (this.writeMethod == null) {\n\t                    throw new ofx4js.OFXException(\"Illegal property for aggregate: no write method.\");\n\t                }\n\t                this.attributeType = elementInfo.getPropertyType();\n\t                this.collectionEntryType = null;\n\t                this.name = elementInfo.name();\n\t                this.order = elementInfo.order();\n\t                this.required = elementInfo.required();\n\t                this.type = AggregateAttributeType.ELEMENT;\n\t                this.toString_ = \"Element '\" + this.name + \"'\";\n\t                this.collection = false;\n\t                //todo: validate known/supported element types here?\n\t            };\n\t            AggregateAttribute.prototype.AggregateAttributeFromChildAggregate = function (childAggregate) {\n\t                this.readMethod = childAggregate.getReadMethod();\n\t                this.writeMethod = childAggregate.getWriteMethod();\n\t                if (this.readMethod == null) {\n\t                    throw new ofx4js.OFXException(\"Illegal property for aggregate: no read method.\");\n\t                }\n\t                else if (this.writeMethod == null) {\n\t                    throw new ofx4js.OFXException(\"Illegal property for aggregate: no write method.\");\n\t                }\n\t                this.attributeType = childAggregate.getPropertyType();\n\t                this.collection = false;\n\t                if (childAggregate.collectionEntryType()) {\n\t                    this.collection = true;\n\t                    this.name = null;\n\t                    this.collectionEntryType = childAggregate.collectionEntryType();\n\t                }\n\t                else if (\"##not_specified##\" === childAggregate.name()) {\n\t                    var aggregateInfo = io.AggregateIntrospector.getAggregateInfo(this.attributeType);\n\t                    if (aggregateInfo == null) {\n\t                        throw new ofx4js.OFXException(\"Illegal child aggregate type '\" + childAggregate.getPropertyType() + \"': no aggregate information available.\");\n\t                    }\n\t                    this.name = aggregateInfo.getName();\n\t                    if (\"##not_specified##\" === this.name) {\n\t                        throw new ofx4js.OFXException(\"Illegal child aggregate type '\" + childAggregate.getPropertyType() + \"': a child aggregate name must be specified.\");\n\t                    }\n\t                    this.collectionEntryType = null;\n\t                }\n\t                else {\n\t                    this.name = childAggregate.name();\n\t                    this.collectionEntryType = null;\n\t                }\n\t                this.order = childAggregate.order();\n\t                this.required = childAggregate.required();\n\t                this.type = AggregateAttributeType.CHILD_AGGREGATE;\n\t                this.toString_ = \"ChildAggregate '\" + this.name + \"'\";\n\t            };\n\t            AggregateAttribute.prototype.get = function (instance) {\n\t                var val = this.readMethod.call(instance);\n\t                if (this.attributeType && val in this.attributeType) {\n\t                    val = this.attributeType[val];\n\t                }\n\t                return val;\n\t            };\n\t            AggregateAttribute.prototype.set = function (value, instance) {\n\t                if (this.collection) {\n\t                    var collection = this.get(instance);\n\t                    if (collection == null) {\n\t                        if (this.attributeType === SortedSet) {\n\t                            console.assert(\"contentCompare\" in this.collectionEntryType);\n\t                            collection = new SortedSet(this.collectionEntryType.contentCompare);\n\t                        }\n\t                        else {\n\t                            collection = new this.attributeType();\n\t                        }\n\t                    }\n\t                    collection.push(value);\n\t                    value = collection;\n\t                }\n\t                this.writeMethod.call(instance, value);\n\t            };\n\t            AggregateAttribute.prototype.getAttributeType = function () {\n\t                return this.attributeType;\n\t            };\n\t            AggregateAttribute.prototype.getArrayEntryType = function () {\n\t                return this.collectionEntryType;\n\t            };\n\t            AggregateAttribute.prototype.getName = function () {\n\t                return this.name;\n\t            };\n\t            AggregateAttribute.prototype.isRequired = function () {\n\t                return this.required;\n\t            };\n\t            AggregateAttribute.prototype.getOrder = function () {\n\t                return this.order;\n\t            };\n\t            AggregateAttribute.prototype.getType = function () {\n\t                return this.type;\n\t            };\n\t            AggregateAttribute.contentCompare = function (left, right) {\n\t                return left.order - right.order;\n\t            };\n\t            //  public int compareTo(other: AggregateAttribute) {\n\t            //    return this.order - other.order;\n\t            //  }\n\t            AggregateAttribute.prototype.isArray = function () {\n\t                return this.collection;\n\t            };\n\t            //@Override\n\t            AggregateAttribute.prototype.toString = function () {\n\t                return this.toString_;\n\t            };\n\t            return AggregateAttribute;\n\t        })();\n\t        io.AggregateAttribute = AggregateAttribute;\n\t    })(io = ofx4js.io || (ofx4js.io = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../project.d.ts'/>\n\t///<reference path='../collections/SortedSet'/>\n\t///<reference path='../meta/Aggregate'/>\n\t///<reference path='../meta/ChildAggregate'/>\n\t///<reference path='../meta/Element'/>\n\t///<reference path='../meta/Header'/>\n\t///<reference path='../meta/PropertyDescriptor'/>\n\t///<reference path='AggregateInfo'/>\n\t///<reference path='AggregateAttribute'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var io;\n\t    (function (io) {\n\t        var SortedSet = ofx4js.collections.SortedSet;\n\t        var isAssignableFrom = ofx4js.meta.isAssignableFrom;\n\t        /**\n\t         * Holder for meta information about an aggregate class.\n\t         *\n\t         * @author Ryan Heaton\n\t         */\n\t        var AggregateInfo = (function () {\n\t            function AggregateInfo(name, owner, parentInfo) {\n\t                this.name = name;\n\t                this.owner = owner;\n\t                this.headers = {};\n\t                this.attributes = new SortedSet(io.AggregateAttribute.contentCompare);\n\t                if (parentInfo) {\n\t                    for (var header in parentInfo.headers) {\n\t                        this.headers[header] = parentInfo.headers[header];\n\t                    }\n\t                    var parentAttributes = parentInfo.attributes.values();\n\t                    for (var i in parentAttributes) {\n\t                        var attribute = parentAttributes[i];\n\t                        this.attributes.insert(attribute);\n\t                    }\n\t                }\n\t            }\n\t            /**\n\t             * The name of the aggregate.\n\t             *\n\t             * @return The name of the aggregate.\n\t             */\n\t            AggregateInfo.prototype.getName = function () {\n\t                return this.name;\n\t            };\n\t            AggregateInfo.prototype.setName = function (name) {\n\t                this.name = name;\n\t            };\n\t            AggregateInfo.prototype.getOwner = function () {\n\t                return this.owner;\n\t            };\n\t            /**\n\t             * The attributes.\n\t             *\n\t             * @return The attributes.\n\t             */\n\t            AggregateInfo.prototype.getAttributes = function () {\n\t                return this.attributes;\n\t            };\n\t            /**\n\t             * Get the attribute by the specified name.\n\t             *\n\t             * @param name The name of the attribute.\n\t             * @param orderHint The order at which the attribute should come after in case there are more than one candidates.\n\t             * @param assignableTo The class this attribute must be assignable to\n\t             * @return The attribute by the specified name,\n\t             * or if there are more than one by that name,\n\t             * the first one after the specified order,\n\t             * or if there are none then the first collection that\n\t             * comes after the order hint, or the latest if there\n\t             * are none that come after the order hint, or null.\n\t             */\n\t            AggregateInfo.prototype.getAttribute = function (name, orderHint, assignableTo) {\n\t                if (assignableTo === void 0) { assignableTo = null; }\n\t                var candidates = new Array();\n\t                var collectionBucket = null;\n\t                for (var i in this.attributes.values()) {\n\t                    var attribute = this.attributes.values()[i];\n\t                    if (name === attribute.getName()) {\n\t                        candidates.push(attribute);\n\t                    }\n\t                    else if (attribute.isArray()) {\n\t                        if (assignableTo != null) {\n\t                            // Verify it's the right generic type.\n\t                            var entryType = attribute.getArrayEntryType();\n\t                            if (entryType != null && !isAssignableFrom(entryType, assignableTo)) {\n\t                                // Array is of wrong type.\n\t                                continue;\n\t                            }\n\t                        }\n\t                        if (collectionBucket == null || collectionBucket.getOrder() < orderHint) {\n\t                            //the default is the first collection that comes after the order hint, or the latest if there are none that come after the order hint.\n\t                            collectionBucket = attribute;\n\t                        }\n\t                    }\n\t                }\n\t                if (candidates.length != 0) {\n\t                    if (candidates.length == 1) {\n\t                        return candidates[0];\n\t                    }\n\t                    else {\n\t                        for (var _i = 0; _i < candidates.length; _i++) {\n\t                            var candidate = candidates[_i];\n\t                            if (candidate.getOrder() >= orderHint) {\n\t                                return candidate;\n\t                            }\n\t                        }\n\t                    }\n\t                }\n\t                return collectionBucket;\n\t            };\n\t            /**\n\t             * Whether this aggregate has headers.\n\t             *\n\t             * @return Whether this aggregate has headers.\n\t             */\n\t            AggregateInfo.prototype.hasHeaders = function () {\n\t                return Object.keys(this.headers).length != 0;\n\t            };\n\t            /**\n\t             * Get the headers defined by the specific aggregate instance.\n\t             *\n\t             * @param instance The aggregate instance.\n\t             * @return The headers.\n\t             */\n\t            AggregateInfo.prototype.getHeaders = function (instance) {\n\t                var headers = {};\n\t                for (var headerKey in this.headers) {\n\t                    var header = this.headers[headerKey];\n\t                    var headerValue = header.getReadMethod().call(instance);\n\t                    headers[header.name()] = headerValue;\n\t                }\n\t                return headers;\n\t            };\n\t            /**\n\t             * The type of the specified header.\n\t             *\n\t             * @param name The header name.\n\t             * @return The header type, or null if no header by the specified name exists.\n\t             */\n\t            AggregateInfo.prototype.getHeaderType = function (name) {\n\t                return (name in this.headers) ? this.headers[name].getPropertyType() : null;\n\t            };\n\t            /**\n\t             * Set the header value for the specified instance.\n\t             *\n\t             * @param instance The instance.\n\t             * @param name     The name of the header.\n\t             * @param value    the value of the header.\n\t             */\n\t            AggregateInfo.prototype.setHeader = function (instance, name, value) {\n\t                if (name in this.headers) {\n\t                    this.headers[name].getWriteMethod().call(instance, value);\n\t                }\n\t            };\n\t            AggregateInfo.prototype.addChildAggregate = function (childAggregate) {\n\t                var attribute = new io.AggregateAttribute(childAggregate);\n\t                this.attributes.insert(attribute);\n\t            };\n\t            AggregateInfo.prototype.addElement = function (element) {\n\t                var attribute = new io.AggregateAttribute(element);\n\t                this.attributes.insert(attribute);\n\t            };\n\t            AggregateInfo.prototype.addHeader = function (header) {\n\t                console.assert(header.name());\n\t                this.headers[header.name()] = header;\n\t            };\n\t            return AggregateInfo;\n\t        })();\n\t        io.AggregateInfo = AggregateInfo;\n\t    })(io = ofx4js.io || (ofx4js.io = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../meta/Aggregate'/>\n\t///<reference path='../meta/ChildAggregate'/>\n\t///<reference path='../meta/Header'/>\n\t///<reference path='../meta/Element'/>\n\t///<reference path='../log/Log'/>\n\t///<reference path='AggregateInfo'/>\n\t///<reference path='../collections/collections'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var io;\n\t    (function (io) {\n\t        var LogFactory = ofx4js.log.LogFactory;\n\t        //import Log = org.apache.commons.logging.Log;\n\t        //import LogFactory = org.apache.commons.logging.LogFactory;\n\t        var LOG;\n\t        /**\n\t         * Introspector for aggregate information.\n\t         *\n\t         * @author Ryan Heaton\n\t         */\n\t        var AggregateIntrospector = (function () {\n\t            function AggregateIntrospector() {\n\t            }\n\t            /**\n\t             * Get the aggregate meta information for the specified class.\n\t             *\n\t             * @param clazz the aggregate class.\n\t             * @return The aggregate meta information, or null if the class isn't an aggregate.\n\t             */\n\t            AggregateIntrospector.getAggregateInfo = function (clazz) {\n\t                var aggregate = clazz.Aggregate;\n\t                if (aggregate != null && aggregate.getOwner() === clazz) {\n\t                    return aggregate;\n\t                }\n\t                else {\n\t                    return null;\n\t                }\n\t            };\n\t            AggregateIntrospector.getAncestorAggregateInfo = function (clazz) {\n\t                // traverse inheritence hierarchy.  This is janky because of typescript's __extends function, and may break in the future\n\t                for (var proto = clazz.prototype; proto; proto = Object.getPrototypeOf(proto)) {\n\t                    if (proto.constructor && proto.constructor.Aggregate) {\n\t                        return proto.constructor.Aggregate;\n\t                    }\n\t                }\n\t                return null;\n\t            };\n\t            /**\n\t             * Find the aggregate class by name.\n\t             *\n\t             * @param aggregateName The name of the aggregate.\n\t             * @return The aggregate class.\n\t             */\n\t            AggregateIntrospector.findAggregateByName = function (aggregateName) {\n\t                return AggregateIntrospector.AGGREGATE_CLASSES_BY_NAME[aggregateName];\n\t            };\n\t            AggregateIntrospector.addAggregate = function (clazz, name) {\n\t                AggregateIntrospector.AGGREGATE_CLASSES_BY_NAME[name] = clazz;\n\t                var aggregateInfo = AggregateIntrospector.getAggregateInfo(clazz);\n\t                if (aggregateInfo) {\n\t                    console.assert(aggregateInfo.getName() === AggregateIntrospector.placeholderName);\n\t                    aggregateInfo.setName(name);\n\t                }\n\t                else {\n\t                    var parentInfo = AggregateIntrospector.getAncestorAggregateInfo(clazz);\n\t                    clazz.Aggregate = new io.AggregateInfo(name, clazz, parentInfo);\n\t                }\n\t            };\n\t            AggregateIntrospector.addChildAggregate = function (clazz, childAggregate) {\n\t                var aggregateInfo = AggregateIntrospector.getAggregateInfo(clazz);\n\t                if (!aggregateInfo) {\n\t                    var parentInfo = AggregateIntrospector.getAncestorAggregateInfo(clazz);\n\t                    aggregateInfo = clazz.Aggregate = new io.AggregateInfo(AggregateIntrospector.placeholderName, clazz, parentInfo);\n\t                }\n\t                console.assert(aggregateInfo != null);\n\t                if (aggregateInfo) {\n\t                    aggregateInfo.addChildAggregate(childAggregate);\n\t                }\n\t            };\n\t            AggregateIntrospector.addElement = function (clazz, element) {\n\t                var aggregateInfo = AggregateIntrospector.getAggregateInfo(clazz);\n\t                if (!aggregateInfo) {\n\t                    var parentInfo = AggregateIntrospector.getAncestorAggregateInfo(clazz);\n\t                    aggregateInfo = clazz.Aggregate = new io.AggregateInfo(AggregateIntrospector.placeholderName, clazz, parentInfo);\n\t                }\n\t                console.assert(aggregateInfo != null);\n\t                if (aggregateInfo) {\n\t                    aggregateInfo.addElement(element);\n\t                }\n\t            };\n\t            AggregateIntrospector.addHeader = function (clazz, header) {\n\t                var aggregateInfo = AggregateIntrospector.getAggregateInfo(clazz);\n\t                if (!aggregateInfo) {\n\t                    var parentInfo = AggregateIntrospector.getAncestorAggregateInfo(clazz);\n\t                    aggregateInfo = clazz.Aggregate = new io.AggregateInfo(AggregateIntrospector.placeholderName, clazz, parentInfo);\n\t                }\n\t                console.assert(aggregateInfo != null);\n\t                if (aggregateInfo) {\n\t                    aggregateInfo.addHeader(header);\n\t                }\n\t            };\n\t            AggregateIntrospector.AGGREGATE_CLASSES_BY_NAME = {};\n\t            AggregateIntrospector.placeholderName = \"##PLACEHOLDER##\";\n\t            return AggregateIntrospector;\n\t        })();\n\t        io.AggregateIntrospector = AggregateIntrospector;\n\t        LOG = LogFactory.getLog(AggregateIntrospector);\n\t    })(io = ofx4js.io || (ofx4js.io = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../io/AggregateIntrospector'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var meta;\n\t    (function (meta) {\n\t        var AggregateIntrospector = ofx4js.io.AggregateIntrospector;\n\t        function Aggregate_add(clazz, value) {\n\t            if (value === void 0) { value = \"#NOT_SET#\"; }\n\t            AggregateIntrospector.addAggregate(clazz, value);\n\t        }\n\t        meta.Aggregate_add = Aggregate_add;\n\t    })(meta = ofx4js.meta || (ofx4js.meta = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../io/AggregateIntrospector'/>\n\t///<reference path='PropertyDescriptor'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var meta;\n\t    (function (meta) {\n\t        var AggregateIntrospector = ofx4js.io.AggregateIntrospector;\n\t        function Element_add(clazz, params) {\n\t            console.assert(params.type != null);\n\t            AggregateIntrospector.addElement(clazz, new meta.Element(params));\n\t        }\n\t        meta.Element_add = Element_add;\n\t    })(meta = ofx4js.meta || (ofx4js.meta = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='Status'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var common;\n\t            (function (common) {\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 */\n\t                var StatusCode = (function () {\n\t                    function StatusCode() {\n\t                    }\n\t                    StatusCode.prototype.getCode = function () { throw new ofx4js.OFXException(\"abstract\"); };\n\t                    StatusCode.prototype.getMessage = function () { throw new ofx4js.OFXException(\"abstract\"); };\n\t                    StatusCode.prototype.getDefaultSeverity = function () { throw new ofx4js.OFXException(\"abstract\"); };\n\t                    return StatusCode;\n\t                })();\n\t                common.StatusCode = StatusCode;\n\t            })(common = data.common || (data.common = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\t///<reference path='StatusCode'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var common;\n\t            (function (common) {\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                /**\n\t                 * Severity of the status.\n\t                 */\n\t                (function (Severity) {\n\t                    Severity[Severity[\"INFO\"] = 0] = \"INFO\";\n\t                    Severity[Severity[\"WARN\"] = 1] = \"WARN\";\n\t                    Severity[Severity[\"ERROR\"] = 2] = \"ERROR\";\n\t                })(common.Severity || (common.Severity = {}));\n\t                var Severity = common.Severity;\n\t                /**\n\t                 * Known status codes.\n\t                 */\n\t                var KnownCode = (function (_super) {\n\t                    __extends(KnownCode, _super);\n\t                    function KnownCode(code, message, defaultSeverity) {\n\t                        _super.call(this);\n\t                        this.code = code;\n\t                        this.message = message;\n\t                        this.defaultSeverity = defaultSeverity;\n\t                    }\n\t                    KnownCode.prototype.getCode = function () {\n\t                        return this.code;\n\t                    };\n\t                    KnownCode.prototype.getMessage = function () {\n\t                        return this.message;\n\t                    };\n\t                    KnownCode.prototype.getDefaultSeverity = function () {\n\t                        return this.defaultSeverity;\n\t                    };\n\t                    KnownCode.fromCode = function (code) {\n\t                        for (var i in KnownCode.KnownCodes) {\n\t                            var value = KnownCode.KnownCodes[i];\n\t                            if (value.getCode() == code) {\n\t                                return value;\n\t                            }\n\t                        }\n\t                        return null;\n\t                    };\n\t                    //@Override\n\t                    KnownCode.prototype.toString = function () {\n\t                        return this.code.toString();\n\t                    };\n\t                    KnownCode.SUCCESS = new KnownCode(0, \"Success\", Severity.INFO);\n\t                    KnownCode.CLIENT_UP_TO_DATE = new KnownCode(1, \"Client is up-to-date\", Severity.INFO);\n\t                    KnownCode.GENERAL_ERROR = new KnownCode(2000, \"General error.\", Severity.ERROR);\n\t                    KnownCode.GENERAL_ACCOUNT_ERROR = new KnownCode(2002, \"General account error.\", Severity.ERROR);\n\t                    KnownCode.ACCOUNT_NOT_FOUND = new KnownCode(2003, \"Account not found.\", Severity.ERROR);\n\t                    KnownCode.ACCOUNT_CLOSED = new KnownCode(2004, \"Account closed.\", Severity.ERROR);\n\t                    KnownCode.ACCOUNT_NOT_AUTHORIZED = new KnownCode(2005, \"Account not authorized.\", Severity.ERROR);\n\t                    KnownCode.DATE_TOO_SOON = new KnownCode(2014, \"Date too soon\", Severity.ERROR);\n\t                    KnownCode.DUPLICATE_REQUEST = new KnownCode(2019, \"Duplicate request.\", Severity.ERROR);\n\t                    KnownCode.UNSUPPORTED_VERSION = new KnownCode(2021, \"Unsupported version\", Severity.ERROR);\n\t                    KnownCode.INVALID_TAN = new KnownCode(2022, \"Invalid transaction authorization number.\", Severity.ERROR);\n\t                    KnownCode.MFA_CHALLENGE_REQUIRED = new KnownCode(3000, \"Further authentication required.\", Severity.ERROR);\n\t                    KnownCode.MFA_CHALLENGE_FAILED = new KnownCode(3001, \"MFA failed.\", Severity.ERROR);\n\t                    KnownCode.PASSWORD_CHANGE_REQUIRED = new KnownCode(15000, \"Password change required.\", Severity.INFO);\n\t                    KnownCode.SIGNON_INVALID = new KnownCode(15500, \"Invalid signon\", Severity.ERROR);\n\t                    KnownCode.CUSTOMER_ACCOUNT_IN_USE = new KnownCode(15501, \"Customer account in use.\", Severity.ERROR);\n\t                    KnownCode.PASSWORD_LOCKED = new KnownCode(15502, \"Password locked.\", Severity.ERROR);\n\t                    KnownCode.INVALID_CLIENT_UID = new KnownCode(15510, \"Invalid client UID.\", Severity.ERROR);\n\t                    KnownCode.CONTACT_FI = new KnownCode(15511, \"User must contact FI.\", Severity.ERROR);\n\t                    KnownCode.AUTHTOKEN_REQUIRED = new KnownCode(15512, \"Auth token required.\", Severity.ERROR);\n\t                    KnownCode.INVALID_AUTHTOKEN = new KnownCode(15513, \"Invalid auth token.\", Severity.ERROR);\n\t                    KnownCode.NO_DATA = new KnownCode(14701, \"No Tax Data for Account.\", Severity.ERROR);\n\t                    KnownCode.DB_EXCEPTION = new KnownCode(14702, \"Database error has occured.\", Severity.ERROR);\n\t                    KnownCode.NO_TAXSUPPORT = new KnownCode(14703, \"This Tax Year is not supported.\", Severity.ERROR);\n\t                    KnownCode.KnownCodes = [\n\t                        KnownCode.SUCCESS,\n\t                        KnownCode.CLIENT_UP_TO_DATE,\n\t                        KnownCode.GENERAL_ERROR,\n\t                        KnownCode.GENERAL_ACCOUNT_ERROR,\n\t                        KnownCode.ACCOUNT_NOT_FOUND,\n\t                        KnownCode.ACCOUNT_CLOSED,\n\t                        KnownCode.ACCOUNT_NOT_AUTHORIZED,\n\t                        KnownCode.DATE_TOO_SOON,\n\t                        KnownCode.DUPLICATE_REQUEST,\n\t                        KnownCode.UNSUPPORTED_VERSION,\n\t                        KnownCode.INVALID_TAN,\n\t                        KnownCode.MFA_CHALLENGE_REQUIRED,\n\t                        KnownCode.MFA_CHALLENGE_FAILED,\n\t                        KnownCode.PASSWORD_CHANGE_REQUIRED,\n\t                        KnownCode.SIGNON_INVALID,\n\t                        KnownCode.CUSTOMER_ACCOUNT_IN_USE,\n\t                        KnownCode.PASSWORD_LOCKED,\n\t                        KnownCode.INVALID_CLIENT_UID,\n\t                        KnownCode.CONTACT_FI,\n\t                        KnownCode.AUTHTOKEN_REQUIRED,\n\t                        KnownCode.INVALID_AUTHTOKEN,\n\t                        KnownCode.NO_DATA,\n\t                        KnownCode.DB_EXCEPTION,\n\t                        KnownCode.NO_TAXSUPPORT,\n\t                    ];\n\t                    return KnownCode;\n\t                })(common.StatusCode);\n\t                common.KnownCode = KnownCode;\n\t                /**\n\t                 * Transaction status element.\n\t                 *\n\t                 * @author Ryan Heaton\n\t                 * @see \"Section 3.1.4, OFX Spec\"\n\t                 */\n\t                var Status = (function () {\n\t                    function Status() {\n\t                        this.code = KnownCode.SUCCESS;\n\t                        this.severity = undefined;\n\t                    }\n\t                    /**\n\t                     * Status code.\n\t                     *\n\t                     * @return The status code.\n\t                     */\n\t                    Status.prototype.getCode = function () {\n\t                        return this.code;\n\t                    };\n\t                    /**\n\t                     * Status code.\n\t                     *\n\t                     * @param code Status code.\n\t                     */\n\t                    Status.prototype.setCode = function (code) {\n\t                        this.code = code;\n\t                        if (typeof this.severity === 'undefined') {\n\t                            this.severity = code.getDefaultSeverity();\n\t                        }\n\t                    };\n\t                    /**\n\t                     * The severity.\n\t                     *\n\t                     * @return The severity.\n\t                     */\n\t                    Status.prototype.getSeverity = function () {\n\t                        return this.severity;\n\t                    };\n\t                    /**\n\t                     * The severity.\n\t                     *\n\t                     * @param severity The severity.\n\t                     */\n\t                    Status.prototype.setSeverity = function (severity) {\n\t                        this.severity = severity;\n\t                    };\n\t                    /**\n\t                     * Server-supplied message.\n\t                     *\n\t                     * @return Server-supplied message.\n\t                     */\n\t                    Status.prototype.getMessage = function () {\n\t                        return this.message;\n\t                    };\n\t                    /**\n\t                     * Server-supplied message.\n\t                     *\n\t                     * @param message Server-supplied message.\n\t                     */\n\t                    Status.prototype.setMessage = function (message) {\n\t                        this.message = message;\n\t                    };\n\t                    return Status;\n\t                })();\n\t                common.Status = Status;\n\t                Aggregate_add(Status, \"STATUS\");\n\t                Element_add(Status, { name: \"CODE\", required: true, order: 0, type: common.StatusCode, read: Status.prototype.getCode, write: Status.prototype.setCode });\n\t                Element_add(Status, { name: \"SEVERITY\", required: true, order: 10, type: Severity, read: Status.prototype.getSeverity, write: Status.prototype.setSeverity });\n\t                Element_add(Status, { name: \"MESSAGE\", order: 20, type: String, read: Status.prototype.getMessage, write: Status.prototype.setMessage });\n\t            })(common = data.common || (data.common = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='domain/data/common/Status'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    /**\n\t     * Exception based on a StatusCode response\n\t     *\n\t     * @author Michael Mosseri\n\t     */\n\t    var OFXStatusException = (function (_super) {\n\t        __extends(OFXStatusException, _super);\n\t        function OFXStatusException(status, message) {\n\t            _super.call(this, message);\n\t            this.status = status;\n\t        }\n\t        OFXStatusException.prototype.getStatus = function () {\n\t            return this.status;\n\t        };\n\t        return OFXStatusException;\n\t    })(ofx4js.OFXException);\n\t    ofx4js.OFXStatusException = OFXStatusException;\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    /**\n\t     * @author Ryan Heaton\n\t     */\n\t    var OFXTransactionException = (function (_super) {\n\t        __extends(OFXTransactionException, _super);\n\t        function OFXTransactionException(message) {\n\t            if (message === void 0) { message = null; }\n\t            _super.call(this, message);\n\t        }\n\t        return OFXTransactionException;\n\t    })(ofx4js.OFXException);\n\t    ofx4js.OFXTransactionException = OFXTransactionException;\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    /**\n\t     * Thrown for unsupported OFX security type.\n\t     *\n\t     * @author Ryan Heaton\n\t     */\n\t    var UnsupportedOFXSecurityTypeException = (function (_super) {\n\t        __extends(UnsupportedOFXSecurityTypeException, _super);\n\t        function UnsupportedOFXSecurityTypeException(message) {\n\t            _super.call(this, message);\n\t        }\n\t        return UnsupportedOFXSecurityTypeException;\n\t    })(ofx4js.OFXException);\n\t    ofx4js.UnsupportedOFXSecurityTypeException = UnsupportedOFXSecurityTypeException;\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var common;\n\t            (function (common) {\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 */\n\t                var BalanceInfo = (function () {\n\t                    function BalanceInfo() {\n\t                    }\n\t                    /**\n\t                     * The amount.\n\t                     *\n\t                     * @return The amount.\n\t                     */\n\t                    BalanceInfo.prototype.getAmount = function () {\n\t                        return this.amount;\n\t                    };\n\t                    /**\n\t                     * The amount.\n\t                     *\n\t                     * @param amount The amount.\n\t                     */\n\t                    BalanceInfo.prototype.setAmount = function (amount) {\n\t                        this.amount = amount;\n\t                    };\n\t                    /**\n\t                     * The as-of date.\n\t                     *\n\t                     * @return The as-of date.\n\t                     */\n\t                    BalanceInfo.prototype.getAsOfDate = function () {\n\t                        return this.asOfDate;\n\t                    };\n\t                    /**\n\t                     * The as-of date.\n\t                     *\n\t                     * @param asOfDate The as-of date.\n\t                     */\n\t                    BalanceInfo.prototype.setAsOfDate = function (asOfDate) {\n\t                        this.asOfDate = asOfDate;\n\t                    };\n\t                    return BalanceInfo;\n\t                })();\n\t                common.BalanceInfo = BalanceInfo;\n\t                Aggregate_add(BalanceInfo);\n\t                Element_add(BalanceInfo, { name: \"BALAMT\", required: true, order: 0, type: Number, read: BalanceInfo.prototype.getAmount, write: BalanceInfo.prototype.setAmount });\n\t                Element_add(BalanceInfo, { name: \"DTASOF\", required: true, order: 10, type: Date, read: BalanceInfo.prototype.getAsOfDate, write: BalanceInfo.prototype.setAsOfDate });\n\t            })(common = data.common || (data.common = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../io/AggregateIntrospector'/>\n\t///<reference path='PropertyDescriptor'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var meta;\n\t    (function (meta) {\n\t        var AggregateIntrospector = ofx4js.io.AggregateIntrospector;\n\t        function ChildAggregate_add(clazz, params) {\n\t            console.assert(params.type != null);\n\t            AggregateIntrospector.addChildAggregate(clazz, new meta.ChildAggregate(params));\n\t        }\n\t        meta.ChildAggregate_add = ChildAggregate_add;\n\t    })(meta = ofx4js.meta || (ofx4js.meta = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var banking;\n\t            (function (banking) {\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 *\n\t                 * @see \"OFX Spec, Section 11.3.1.1\"\n\t                 */\n\t                (function (AccountType) {\n\t                    AccountType[AccountType[\"CHECKING\"] = 0] = \"CHECKING\";\n\t                    AccountType[AccountType[\"SAVINGS\"] = 1] = \"SAVINGS\";\n\t                    AccountType[AccountType[\"MONEYMRKT\"] = 2] = \"MONEYMRKT\";\n\t                    AccountType[AccountType[\"CREDITLINE\"] = 3] = \"CREDITLINE\";\n\t                })(banking.AccountType || (banking.AccountType = {}));\n\t                var AccountType = banking.AccountType;\n\t            })(banking = data.banking || (data.banking = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\t///<reference path='../common/AccountDetails'/>\n\t///<reference path='AccountType'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var banking;\n\t            (function (banking) {\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                /**\n\t                 * Base bank account details.\n\t                 *\n\t                 * @author Ryan Heaton\n\t                 * @see \"OFX Spec, Section 11.3.1\"\n\t                 */\n\t                var BankAccountDetails = (function () {\n\t                    function BankAccountDetails() {\n\t                    }\n\t                    /**\n\t                     * The routing and transit number.\n\t                     *\n\t                     * @return The routing and transit number.\n\t                     */\n\t                    BankAccountDetails.prototype.getBankId = function () {\n\t                        return this.bankId;\n\t                    };\n\t                    /**\n\t                     * The routing and transit number.\n\t                     *\n\t                     * @param bankId The routing and transit number.\n\t                     */\n\t                    BankAccountDetails.prototype.setBankId = function (bankId) {\n\t                        this.bankId = bankId;\n\t                    };\n\t                    /**\n\t                     * The routing and transit number.\n\t                     *\n\t                     * @return The routing and transit number.\n\t                     */\n\t                    BankAccountDetails.prototype.getRoutingNumber = function () {\n\t                        return this.getBankId();\n\t                    };\n\t                    /**\n\t                     * The routing and transit number.\n\t                     *\n\t                     * @param routingNumber The routing and transit number.\n\t                     */\n\t                    BankAccountDetails.prototype.setRoutingNumber = function (routingNumber) {\n\t                        this.setBankId(routingNumber);\n\t                    };\n\t                    /**\n\t                     * The branch id.\n\t                     *\n\t                     * @return The branch id.\n\t                     */\n\t                    BankAccountDetails.prototype.getBranchId = function () {\n\t                        return this.branchId;\n\t                    };\n\t                    /**\n\t                     * The branch id.\n\t                     *\n\t                     * @param branchId The branch id.\n\t                     */\n\t                    BankAccountDetails.prototype.setBranchId = function (branchId) {\n\t                        this.branchId = branchId;\n\t                    };\n\t                    /**\n\t                     * The account number.\n\t                     *\n\t                     * @return The account number.\n\t                     */\n\t                    BankAccountDetails.prototype.getAccountNumber = function () {\n\t                        return this.accountNumber;\n\t                    };\n\t                    /**\n\t                     * The account number.\n\t                     *\n\t                     * @param accountNumber The account number.\n\t                     */\n\t                    BankAccountDetails.prototype.setAccountNumber = function (accountNumber) {\n\t                        this.accountNumber = accountNumber;\n\t                    };\n\t                    /**\n\t                     * The account type.\n\t                     *\n\t                     * @return The account type.\n\t                     */\n\t                    BankAccountDetails.prototype.getAccountType = function () {\n\t                        return this.accountType;\n\t                    };\n\t                    /**\n\t                     * The account type.\n\t                     *\n\t                     * @param accountType The account type.\n\t                     */\n\t                    BankAccountDetails.prototype.setAccountType = function (accountType) {\n\t                        this.accountType = accountType;\n\t                    };\n\t                    /**\n\t                     * The account key.\n\t                     *\n\t                     * @return The account key.\n\t                     */\n\t                    BankAccountDetails.prototype.getAccountKey = function () {\n\t                        return this.accountKey;\n\t                    };\n\t                    /**\n\t                     * The account key.\n\t                     *\n\t                     * @param accountKey The account key.\n\t                     */\n\t                    BankAccountDetails.prototype.setAccountKey = function (accountKey) {\n\t                        this.accountKey = accountKey;\n\t                    };\n\t                    return BankAccountDetails;\n\t                })();\n\t                banking.BankAccountDetails = BankAccountDetails;\n\t                Aggregate_add(BankAccountDetails);\n\t                Element_add(BankAccountDetails, { name: \"BANKID\", required: true, order: 0, type: String, read: BankAccountDetails.prototype.getBankId, write: BankAccountDetails.prototype.setBankId });\n\t                Element_add(BankAccountDetails, { name: \"BRANCHID\", order: 10, type: String, read: BankAccountDetails.prototype.getBranchId, write: BankAccountDetails.prototype.setBranchId });\n\t                Element_add(BankAccountDetails, { name: \"ACCTID\", required: true, order: 20, type: String, read: BankAccountDetails.prototype.getAccountNumber, write: BankAccountDetails.prototype.setAccountNumber });\n\t                Element_add(BankAccountDetails, { name: \"ACCTTYPE\", required: true, order: 30, type: banking.AccountType, read: BankAccountDetails.prototype.getAccountType, write: BankAccountDetails.prototype.setAccountType });\n\t                Element_add(BankAccountDetails, { name: \"ACCTKEY\", order: 40, type: String, read: BankAccountDetails.prototype.getAccountKey, write: BankAccountDetails.prototype.setAccountKey });\n\t            })(banking = data.banking || (data.banking = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\t///<reference path='../common/AccountDetails'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var creditcard;\n\t            (function (creditcard) {\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 *\n\t                 * @see \"OFX Spec, Section 11.3.2\"\n\t                 */\n\t                var CreditCardAccountDetails = (function () {\n\t                    function CreditCardAccountDetails() {\n\t                    }\n\t                    /**\n\t                     * The account number.\n\t                     *\n\t                     * @return The account number.\n\t                     */\n\t                    CreditCardAccountDetails.prototype.getAccountNumber = function () {\n\t                        return this.accountNumber;\n\t                    };\n\t                    /**\n\t                     * The account number.\n\t                     *\n\t                     * @param accountNumber The account number.\n\t                     */\n\t                    CreditCardAccountDetails.prototype.setAccountNumber = function (accountNumber) {\n\t                        this.accountNumber = accountNumber;\n\t                    };\n\t                    /**\n\t                     * The account key.\n\t                     *\n\t                     * @return The account key.\n\t                     */\n\t                    CreditCardAccountDetails.prototype.getAccountKey = function () {\n\t                        return this.accountKey;\n\t                    };\n\t                    /**\n\t                     * The account key.\n\t                     *\n\t                     * @param accountKey The account key.\n\t                     */\n\t                    CreditCardAccountDetails.prototype.setAccountKey = function (accountKey) {\n\t                        this.accountKey = accountKey;\n\t                    };\n\t                    return CreditCardAccountDetails;\n\t                })();\n\t                creditcard.CreditCardAccountDetails = CreditCardAccountDetails;\n\t                Aggregate_add(CreditCardAccountDetails);\n\t                Element_add(CreditCardAccountDetails, { name: \"ACCTID\", required: true, order: 0, type: String, read: CreditCardAccountDetails.prototype.getAccountNumber, write: CreditCardAccountDetails.prototype.setAccountNumber });\n\t                Element_add(CreditCardAccountDetails, { name: \"ACCKEY\", order: 10, type: String, read: CreditCardAccountDetails.prototype.getAccountKey, write: CreditCardAccountDetails.prototype.setAccountKey });\n\t            })(creditcard = data.creditcard || (data.creditcard = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var common;\n\t            (function (common) {\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 */\n\t                (function (CorrectionAction) {\n\t                    CorrectionAction[CorrectionAction[\"REPLACE\"] = 0] = \"REPLACE\";\n\t                    CorrectionAction[CorrectionAction[\"DELETE\"] = 1] = \"DELETE\";\n\t                })(common.CorrectionAction || (common.CorrectionAction = {}));\n\t                var CorrectionAction = common.CorrectionAction;\n\t            })(common = data.common || (data.common = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var common;\n\t            (function (common) {\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 * @see \"Section 5.2, OFX Spec\"\n\t                 */\n\t                var Currency = (function () {\n\t                    function Currency() {\n\t                        this.code = \"USD\"; //java.util.Currency.getInstance(Locale.US).getCurrencyCode().toUpperCase();\n\t                    }\n\t                    /**\n\t                     * The currency code.\n\t                     *\n\t                     * @return The currency code.\n\t                     * @see java.util.Currency#getCurrencyCode()\n\t                     */\n\t                    Currency.prototype.getCode = function () {\n\t                        return this.code;\n\t                    };\n\t                    /**\n\t                     * The currency code\n\t                     *\n\t                     * @param code The currency code\n\t                     */\n\t                    Currency.prototype.setCode = function (code) {\n\t                        this.code = code;\n\t                    };\n\t                    /**\n\t                     * The exchange rate.\n\t                     *\n\t                     * @return The exchange rate.\n\t                     */\n\t                    Currency.prototype.getExchangeRate = function () {\n\t                        return this.exchangeRate;\n\t                    };\n\t                    /**\n\t                     * The exchange rate.\n\t                     *\n\t                     * @param exchangeRate The exchange rate.\n\t                     */\n\t                    Currency.prototype.setExchangeRate = function (exchangeRate) {\n\t                        this.exchangeRate = exchangeRate;\n\t                    };\n\t                    return Currency;\n\t                })();\n\t                common.Currency = Currency;\n\t                Aggregate_add(Currency, \"CURRENCY\");\n\t                Element_add(Currency, { name: \"CURSYM\", required: true, order: 0, type: String, read: Currency.prototype.getCode, write: Currency.prototype.setCode });\n\t                Element_add(Currency, { name: \"CURRATE\", required: true, order: 10, type: Number, read: Currency.prototype.getExchangeRate, write: Currency.prototype.setExchangeRate });\n\t            })(common = data.common || (data.common = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var common;\n\t            (function (common) {\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 */\n\t                var Payee = (function () {\n\t                    function Payee() {\n\t                    }\n\t                    /**\n\t                     * The name of the payee.\n\t                     *\n\t                     * @return The name of the payee.\n\t                     */\n\t                    Payee.prototype.getName = function () {\n\t                        return this.name;\n\t                    };\n\t                    /**\n\t                     * The name of the payee.\n\t                     *\n\t                     * @param name The name of the payee.\n\t                     */\n\t                    Payee.prototype.setName = function (name) {\n\t                        this.name = name;\n\t                    };\n\t                    /**\n\t                     * The address of the payee.\n\t                     *\n\t                     * @return The address of the payee.\n\t                     */\n\t                    Payee.prototype.getAddress1 = function () {\n\t                        return this.address1;\n\t                    };\n\t                    /**\n\t                     * The address of the payee.\n\t                     *\n\t                     * @param address1 The address of the payee.\n\t                     */\n\t                    Payee.prototype.setAddress1 = function (address1) {\n\t                        this.address1 = address1;\n\t                    };\n\t                    /**\n\t                     * The address of the payee.\n\t                     *\n\t                     * @return The address of the payee.\n\t                     */\n\t                    Payee.prototype.getAddress2 = function () {\n\t                        return this.address2;\n\t                    };\n\t                    /**\n\t                     * The address of the payee.\n\t                     *\n\t                     * @param address2 The address of the payee.\n\t                     */\n\t                    Payee.prototype.setAddress2 = function (address2) {\n\t                        this.address2 = address2;\n\t                    };\n\t                    /**\n\t                     * The address of the payee.\n\t                     *\n\t                     * @return The address of the payee.\n\t                     */\n\t                    Payee.prototype.getAddress3 = function () {\n\t                        return this.address3;\n\t                    };\n\t                    /**\n\t                     * The address of the payee.\n\t                     *\n\t                     * @param address3 The address of the payee.\n\t                     */\n\t                    Payee.prototype.setAddress3 = function (address3) {\n\t                        this.address3 = address3;\n\t                    };\n\t                    /**\n\t                     * The city of the payee.\n\t                     *\n\t                     * @return The city of the payee.\n\t                     */\n\t                    Payee.prototype.getCity = function () {\n\t                        return this.city;\n\t                    };\n\t                    /**\n\t                     * The city of the payee.\n\t                     *\n\t                     * @param city The city of the payee.\n\t                     */\n\t                    Payee.prototype.setCity = function (city) {\n\t                        this.city = city;\n\t                    };\n\t                    /**\n\t                     * The state of this payee.\n\t                     *\n\t                     * @return The state of this payee.\n\t                     */\n\t                    Payee.prototype.getState = function () {\n\t                        return this.state;\n\t                    };\n\t                    /**\n\t                     * The state of this payee.\n\t                     *\n\t                     * @param state The state of this payee.\n\t                     */\n\t                    Payee.prototype.setState = function (state) {\n\t                        this.state = state;\n\t                    };\n\t                    /**\n\t                     * The postal code of this payee.\n\t                     *\n\t                     * @return The postal code of this payee.\n\t                     */\n\t                    Payee.prototype.getZip = function () {\n\t                        return this.zip;\n\t                    };\n\t                    /**\n\t                     * The postal code of this payee.\n\t                     *\n\t                     * @param zip The postal code of this payee.\n\t                     */\n\t                    Payee.prototype.setZip = function (zip) {\n\t                        this.zip = zip;\n\t                    };\n\t                    /**\n\t                     * The country code for this payee.\n\t                     *\n\t                     * @return The country code for this payee.\n\t                     * @see java.util.Locale#getISO3Country()\n\t                     */\n\t                    Payee.prototype.getCountry = function () {\n\t                        return this.country;\n\t                    };\n\t                    /**\n\t                     * The country code for this payee.\n\t                     *\n\t                     * @param country The country code for this payee.\n\t                     */\n\t                    Payee.prototype.setCountry = function (country) {\n\t                        this.country = country;\n\t                    };\n\t                    /**\n\t                     * The phone number.\n\t                     *\n\t                     * @return The phone number.\n\t                     */\n\t                    Payee.prototype.getPhone = function () {\n\t                        return this.phone;\n\t                    };\n\t                    /**\n\t                     * The phone number.\n\t                     *\n\t                     * @param phone The phone number.\n\t                     */\n\t                    Payee.prototype.setPhone = function (phone) {\n\t                        this.phone = phone;\n\t                    };\n\t                    return Payee;\n\t                })();\n\t                common.Payee = Payee;\n\t                Aggregate_add(Payee, \"PAYEE\");\n\t                Element_add(Payee, { name: \"NAME\", order: 30, type: String, read: Payee.prototype.getName, write: Payee.prototype.setName });\n\t                Element_add(Payee, { name: \"ADDR1\", required: true, order: 40, type: String, read: Payee.prototype.getAddress1, write: Payee.prototype.setAddress1 });\n\t                Element_add(Payee, { name: \"ADDR2\", order: 50, type: String, read: Payee.prototype.getAddress2, write: Payee.prototype.setAddress2 });\n\t                Element_add(Payee, { name: \"ADDR3\", order: 60, type: String, read: Payee.prototype.getAddress3, write: Payee.prototype.setAddress3 });\n\t                Element_add(Payee, { name: \"CITY\", required: true, order: 70, type: String, read: Payee.prototype.getCity, write: Payee.prototype.setCity });\n\t                Element_add(Payee, { name: \"STATE\", required: true, order: 80, type: String, read: Payee.prototype.getState, write: Payee.prototype.setState });\n\t                Element_add(Payee, { name: \"POSTALCODE\", required: true, order: 90, type: String, read: Payee.prototype.getZip, write: Payee.prototype.setZip });\n\t                Element_add(Payee, { name: \"COUNTRY\", required: true, order: 100, type: String, read: Payee.prototype.getCountry, write: Payee.prototype.setCountry });\n\t                Element_add(Payee, { name: \"PHONE\", order: 110, type: String, read: Payee.prototype.getPhone, write: Payee.prototype.setPhone });\n\t            })(common = data.common || (data.common = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var common;\n\t            (function (common) {\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 */\n\t                (function (TransactionType) {\n\t                    /**\n\t                     * generic credit.\n\t                     */\n\t                    TransactionType[TransactionType[\"CREDIT\"] = 0] = \"CREDIT\";\n\t                    /**\n\t                     * genertic debit.\n\t                     */\n\t                    TransactionType[TransactionType[\"DEBIT\"] = 1] = \"DEBIT\";\n\t                    /**\n\t                     * interest earned.\n\t                     */\n\t                    TransactionType[TransactionType[\"INT\"] = 2] = \"INT\";\n\t                    /**\n\t                     * dividend.\n\t                     */\n\t                    TransactionType[TransactionType[\"DIV\"] = 3] = \"DIV\";\n\t                    /**\n\t                     * bank fee.\n\t                     */\n\t                    TransactionType[TransactionType[\"FEE\"] = 4] = \"FEE\";\n\t                    /**\n\t                     * service charge.\n\t                     */\n\t                    TransactionType[TransactionType[\"SRVCHG\"] = 5] = \"SRVCHG\";\n\t                    /**\n\t                     * deposit.\n\t                     */\n\t                    TransactionType[TransactionType[\"DEP\"] = 6] = \"DEP\";\n\t                    /**\n\t                     * ATM transaction.\n\t                     */\n\t                    TransactionType[TransactionType[\"ATM\"] = 7] = \"ATM\";\n\t                    /**\n\t                     * point of sale\n\t                     */\n\t                    TransactionType[TransactionType[\"POS\"] = 8] = \"POS\";\n\t                    /**\n\t                     * transfer\n\t                     */\n\t                    TransactionType[TransactionType[\"XFER\"] = 9] = \"XFER\";\n\t                    /**\n\t                     * check\n\t                     */\n\t                    TransactionType[TransactionType[\"CHECK\"] = 10] = \"CHECK\";\n\t                    /**\n\t                     * electronic payment\n\t                     */\n\t                    TransactionType[TransactionType[\"PAYMENT\"] = 11] = \"PAYMENT\";\n\t                    /**\n\t                     * cash.\n\t                     */\n\t                    TransactionType[TransactionType[\"CASH\"] = 12] = \"CASH\";\n\t                    /**\n\t                     * direct deposit.\n\t                     */\n\t                    TransactionType[TransactionType[\"DIRECTDEP\"] = 13] = \"DIRECTDEP\";\n\t                    /**\n\t                     * merchant-initiated debit\n\t                     */\n\t                    TransactionType[TransactionType[\"DIRECTDEBIT\"] = 14] = \"DIRECTDEBIT\";\n\t                    /**\n\t                     * repeating payment.\n\t                     */\n\t                    TransactionType[TransactionType[\"REPEATPMT\"] = 15] = \"REPEATPMT\";\n\t                    /**\n\t                     * other\n\t                     */\n\t                    TransactionType[TransactionType[\"OTHER\"] = 16] = \"OTHER\";\n\t                })(common.TransactionType || (common.TransactionType = {}));\n\t                var TransactionType = common.TransactionType;\n\t            })(common = data.common || (data.common = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../project.d.ts'/>\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../banking/BankAccountDetails'/>\n\t///<reference path='../creditcard/CreditCardAccountDetails'/>\n\t///<reference path='CorrectionAction'/>\n\t///<reference path='Currency'/>\n\t///<reference path='Payee'/>\n\t///<reference path='TransactionType'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var common;\n\t            (function (common) {\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                var BankAccountDetails = ofx4js.domain.data.banking.BankAccountDetails;\n\t                var CreditCardAccountDetails = ofx4js.domain.data.creditcard.CreditCardAccountDetails;\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 */\n\t                var Transaction = (function () {\n\t                    function Transaction() {\n\t                    }\n\t                    /**\n\t                     * The transaction type.\n\t                     *\n\t                     * @return The transaction type.\n\t                     */\n\t                    Transaction.prototype.getTransactionType = function () {\n\t                        return this.transactionType;\n\t                    };\n\t                    /**\n\t                     * The transaction type.\n\t                     *\n\t                     * @param transactionType The transaction type.\n\t                     */\n\t                    Transaction.prototype.setTransactionType = function (transactionType) {\n\t                        this.transactionType = transactionType;\n\t                    };\n\t                    /**\n\t                     * The date the transaction was posted.\n\t                     *\n\t                     * @return The date the transaction was posted.\n\t                     */\n\t                    Transaction.prototype.getDatePosted = function () {\n\t                        return this.datePosted;\n\t                    };\n\t                    /**\n\t                     * The date the transaction was posted.\n\t                     *\n\t                     * @param datePosted The date the transaction was posted.\n\t                     */\n\t                    Transaction.prototype.setDatePosted = function (datePosted) {\n\t                        this.datePosted = datePosted;\n\t                    };\n\t                    /**\n\t                     * The date the transaction was initiated.\n\t                     *\n\t                     * @return The date the transaction was initiated.\n\t                     */\n\t                    Transaction.prototype.getDateInitiated = function () {\n\t                        return this.dateInitiated;\n\t                    };\n\t                    /**\n\t                     * The date the transaction was initiated.\n\t                     *\n\t                     * @param dateInitiated The date the transaction was initiated.\n\t                     */\n\t                    Transaction.prototype.setDateInitiated = function (dateInitiated) {\n\t                        this.dateInitiated = dateInitiated;\n\t                    };\n\t                    /**\n\t                     * The date the funds are available.\n\t                     *\n\t                     * @return The date the funds are available.\n\t                     */\n\t                    Transaction.prototype.getDateAvailable = function () {\n\t                        return this.dateAvailable;\n\t                    };\n\t                    /**\n\t                     * The date the funds are available.\n\t                     *\n\t                     * @param dateAvailable The date the funds are available.\n\t                     */\n\t                    Transaction.prototype.setDateAvailable = function (dateAvailable) {\n\t                        this.dateAvailable = dateAvailable;\n\t                    };\n\t                    /**\n\t                     * The transaction amount.\n\t                     *\n\t                     * @return The transaction amount.\n\t                     */\n\t                    Transaction.prototype.getAmount = function () {\n\t                        return this.amount;\n\t                    };\n\t                    /**\n\t                     * The transaction amount.\n\t                     *\n\t                     * @param amount The transaction amount.\n\t                     */\n\t                    Transaction.prototype.setAmount = function (amount) {\n\t                        this.amount = amount;\n\t                    };\n\t                    /**\n\t                     * The transaction amount.\n\t                     *\n\t                     * @return The transaction amount.\n\t                     */\n\t                    Transaction.prototype.getBigDecimalAmount = function () {\n\t                        return this.amount;\n\t                    };\n\t                    /**\n\t                     * The transaction amount.\n\t                     *\n\t                     * @param amount The transaction amount.\n\t                     */\n\t                    Transaction.prototype.setBigDecimalAmount = function (amount) {\n\t                        this.amount = amount;\n\t                    };\n\t                    /**\n\t                     * The transaction id (server-assigned).\n\t                     *\n\t                     * @return The transaction id (server-assigned).\n\t                     */\n\t                    Transaction.prototype.getId = function () {\n\t                        return this.id;\n\t                    };\n\t                    /**\n\t                     * The transaction id (server-assigned).\n\t                     *\n\t                     * @param id The transaction id (server-assigned).\n\t                     */\n\t                    Transaction.prototype.setId = function (id) {\n\t                        this.id = id;\n\t                    };\n\t                    /**\n\t                     * The id of the transaction that this is correcting.\n\t                     *\n\t                     * @return The id of the transaction that this is correcting.\n\t                     */\n\t                    Transaction.prototype.getCorrectionId = function () {\n\t                        return this.correctionId;\n\t                    };\n\t                    /**\n\t                     * The id of the transaction that this is correcting.\n\t                     *\n\t                     * @param correctionId The id of the transaction that this is correcting.\n\t                     */\n\t                    Transaction.prototype.setCorrectionId = function (correctionId) {\n\t                        this.correctionId = correctionId;\n\t                    };\n\t                    /**\n\t                     * The action to take on the {@link #getCorrectionId() corrected transaction}.\n\t                     *\n\t                     * @return The action to take on the {@link #getCorrectionId() corrected transaction}.\n\t                     */\n\t                    Transaction.prototype.getCorrectionAction = function () {\n\t                        return this.correctionAction;\n\t                    };\n\t                    /**\n\t                     * The action to take on the {@link #getCorrectionId() corrected transaction}.\n\t                     *\n\t                     * @param correctionAction The action to take on the {@link #getCorrectionId() corrected transaction}.\n\t                     */\n\t                    Transaction.prototype.setCorrectionAction = function (correctionAction) {\n\t                        this.correctionAction = correctionAction;\n\t                    };\n\t                    /**\n\t                     * The server-assigned temporary id for client-initiated transactions.\n\t                     *\n\t                     * @return The server-assigned temporary id for client-initiated transactions.\n\t                     */\n\t                    Transaction.prototype.getTempId = function () {\n\t                        return this.tempId;\n\t                    };\n\t                    /**\n\t                     * The server-assigned temporary id for client-initiated transactions.\n\t                     *\n\t                     * @param tempId The server-assigned temporary id for client-initiated transactions.\n\t                     */\n\t                    Transaction.prototype.setTempId = function (tempId) {\n\t                        this.tempId = tempId;\n\t                    };\n\t                    /**\n\t                     * The check number.\n\t                     *\n\t                     * @return The check number.\n\t                     */\n\t                    Transaction.prototype.getCheckNumber = function () {\n\t                        return this.checkNumber;\n\t                    };\n\t                    /**\n\t                     * The check number.\n\t                     *\n\t                     * @param checkNumber The check number.\n\t                     */\n\t                    Transaction.prototype.setCheckNumber = function (checkNumber) {\n\t                        this.checkNumber = checkNumber;\n\t                    };\n\t                    /**\n\t                     * The reference number.\n\t                     *\n\t                     * @return The reference number.\n\t                     */\n\t                    Transaction.prototype.getReferenceNumber = function () {\n\t                        return this.referenceNumber;\n\t                    };\n\t                    /**\n\t                     * The reference number.\n\t                     *\n\t                     * @param referenceNumber The reference number.\n\t                     */\n\t                    Transaction.prototype.setReferenceNumber = function (referenceNumber) {\n\t                        this.referenceNumber = referenceNumber;\n\t                    };\n\t                    /**\n\t                     * The standard industrial code.\n\t                     *\n\t                     * @return The standard industrial code.\n\t                     */\n\t                    Transaction.prototype.getStandardIndustrialCode = function () {\n\t                        return this.standardIndustrialCode;\n\t                    };\n\t                    /**\n\t                     * The standard industrial code.\n\t                     *\n\t                     * @param standardIndustrialCode The standard industrial code.\n\t                     */\n\t                    Transaction.prototype.setStandardIndustrialCode = function (standardIndustrialCode) {\n\t                        this.standardIndustrialCode = standardIndustrialCode;\n\t                    };\n\t                    /**\n\t                     * The payee id.\n\t                     *\n\t                     * @return The payee id.\n\t                     */\n\t                    Transaction.prototype.getPayeeId = function () {\n\t                        return this.payeeId;\n\t                    };\n\t                    /**\n\t                     * The payee id.\n\t                     *\n\t                     * @param payeeId The payee id.\n\t                     */\n\t                    Transaction.prototype.setPayeeId = function (payeeId) {\n\t                        this.payeeId = payeeId;\n\t                    };\n\t                    /**\n\t                     * The name (description) or the transaction.\n\t                     *\n\t                     * @return The name (description) or the transaction.\n\t                     */\n\t                    Transaction.prototype.getName = function () {\n\t                        return this.name;\n\t                    };\n\t                    /**\n\t                     * The name (description) or the transaction.\n\t                     *\n\t                     * @param name The name (description) or the transaction.\n\t                     */\n\t                    Transaction.prototype.setName = function (name) {\n\t                        this.name = name;\n\t                    };\n\t                    /**\n\t                     * The payee.\n\t                     *\n\t                     * @return The payee.\n\t                     */\n\t                    Transaction.prototype.getPayee = function () {\n\t                        return this.payee;\n\t                    };\n\t                    /**\n\t                     * The payee.\n\t                     *\n\t                     * @param payee The payee.\n\t                     */\n\t                    Transaction.prototype.setPayee = function (payee) {\n\t                        this.payee = payee;\n\t                    };\n\t                    /**\n\t                     * The bank account the transfer was to.\n\t                     *\n\t                     * @return The bank account the transfer was to.\n\t                     */\n\t                    Transaction.prototype.getBankAccountTo = function () {\n\t                        return this.bankAccountTo;\n\t                    };\n\t                    /**\n\t                     * The bank account the transfer was to.\n\t                     *\n\t                     * @param bankAccountTo The bank account the transfer was to.\n\t                     */\n\t                    Transaction.prototype.setBankAccountTo = function (bankAccountTo) {\n\t                        this.bankAccountTo = bankAccountTo;\n\t                    };\n\t                    /**\n\t                     * The credit-card account the transfer was to.\n\t                     *\n\t                     * @return The credit-card account the transfer was to.\n\t                     */\n\t                    Transaction.prototype.getCreditCardAccountTo = function () {\n\t                        return this.creditCardAccountTo;\n\t                    };\n\t                    /**\n\t                     * The credit-card account the transfer was to.\n\t                     *\n\t                     * @param creditCardAccountTo The credit-card account the transfer was to.\n\t                     */\n\t                    Transaction.prototype.setCreditCardAccountTo = function (creditCardAccountTo) {\n\t                        this.creditCardAccountTo = creditCardAccountTo;\n\t                    };\n\t                    /**\n\t                     * Notes.\n\t                     *\n\t                     * @return Notes.\n\t                     */\n\t                    Transaction.prototype.getMemo = function () {\n\t                        return this.memo;\n\t                    };\n\t                    /**\n\t                     * Notes.\n\t                     *\n\t                     * @param memo Notes.\n\t                     */\n\t                    Transaction.prototype.setMemo = function (memo) {\n\t                        this.memo = memo;\n\t                    };\n\t                    /**\n\t                     * The currency.\n\t                     *\n\t                     * @return The currency.\n\t                     */\n\t                    Transaction.prototype.getCurrency = function () {\n\t                        return this.currency;\n\t                    };\n\t                    /**\n\t                     * The currency.\n\t                     *\n\t                     * @param currency The currency.\n\t                     */\n\t                    Transaction.prototype.setCurrency = function (currency) {\n\t                        this.currency = currency;\n\t                    };\n\t                    /**\n\t                     * The original currency.\n\t                     *\n\t                     * @return The original currency.\n\t                     */\n\t                    Transaction.prototype.getOriginalCurrency = function () {\n\t                        return this.originalCurrency;\n\t                    };\n\t                    /**\n\t                     * The original currency.\n\t                     *\n\t                     * @param originalCurrency The original currency.\n\t                     */\n\t                    Transaction.prototype.setOriginalCurrency = function (originalCurrency) {\n\t                        this.originalCurrency = originalCurrency;\n\t                    };\n\t                    return Transaction;\n\t                })();\n\t                common.Transaction = Transaction;\n\t                Aggregate_add(Transaction, \"STMTTRN\");\n\t                Element_add(Transaction, { name: \"TRNTYPE\", required: true, order: 0, type: common.TransactionType, read: Transaction.prototype.getTransactionType, write: Transaction.prototype.setTransactionType });\n\t                Element_add(Transaction, { name: \"DTPOSTED\", required: true, order: 10, type: Date, read: Transaction.prototype.getDatePosted, write: Transaction.prototype.setDatePosted });\n\t                Element_add(Transaction, { name: \"DTUSER\", order: 20, type: Date, read: Transaction.prototype.getDateInitiated, write: Transaction.prototype.setDateInitiated });\n\t                Element_add(Transaction, { name: \"DTAVAIL\", order: 30, type: Date, read: Transaction.prototype.getDateAvailable, write: Transaction.prototype.setDateAvailable });\n\t                Element_add(Transaction, { name: \"TRNAMT\", required: true, order: 40, type: Number, read: Transaction.prototype.getBigDecimalAmount, write: Transaction.prototype.setBigDecimalAmount });\n\t                Element_add(Transaction, { name: \"FITID\", required: true, order: 50, type: String, read: Transaction.prototype.getId, write: Transaction.prototype.setId });\n\t                Element_add(Transaction, { name: \"CORRECTFITID\", order: 60, type: String, read: Transaction.prototype.getCorrectionId, write: Transaction.prototype.setCorrectionId });\n\t                Element_add(Transaction, { name: \"CORRECTACTION\", order: 70, type: common.CorrectionAction, read: Transaction.prototype.getCorrectionAction, write: Transaction.prototype.setCorrectionAction });\n\t                Element_add(Transaction, { name: \"SRVRTID\", order: 80, type: String, read: Transaction.prototype.getTempId, write: Transaction.prototype.setTempId });\n\t                Element_add(Transaction, { name: \"CHECKNUM\", order: 90, type: String, read: Transaction.prototype.getCheckNumber, write: Transaction.prototype.setCheckNumber });\n\t                Element_add(Transaction, { name: \"REFNUM\", order: 100, type: String, read: Transaction.prototype.getReferenceNumber, write: Transaction.prototype.setReferenceNumber });\n\t                Element_add(Transaction, { name: \"SIC\", order: 110, type: String, read: Transaction.prototype.getStandardIndustrialCode, write: Transaction.prototype.setStandardIndustrialCode });\n\t                Element_add(Transaction, { name: \"PAYEEID\", order: 120, type: String, read: Transaction.prototype.getPayeeId, write: Transaction.prototype.setPayeeId });\n\t                Element_add(Transaction, { name: \"NAME\", order: 130, type: String, read: Transaction.prototype.getName, write: Transaction.prototype.setName });\n\t                ChildAggregate_add(Transaction, { order: 140, type: common.Payee, read: Transaction.prototype.getPayee, write: Transaction.prototype.setPayee });\n\t                ChildAggregate_add(Transaction, { name: \"BANKACCTTO\", order: 150, type: BankAccountDetails, read: Transaction.prototype.getBankAccountTo, write: Transaction.prototype.setBankAccountTo });\n\t                ChildAggregate_add(Transaction, { name: \"CCACCTTO\", order: 160, type: CreditCardAccountDetails, read: Transaction.prototype.getCreditCardAccountTo, write: Transaction.prototype.setCreditCardAccountTo });\n\t                Element_add(Transaction, { name: \"MEMO\", order: 170, type: String, read: Transaction.prototype.getMemo, write: Transaction.prototype.setMemo });\n\t                ChildAggregate_add(Transaction, { order: 180, type: common.Currency, read: Transaction.prototype.getCurrency, write: Transaction.prototype.setCurrency });\n\t                ChildAggregate_add(Transaction, { name: \"ORIGCURRENCY\", order: 190, type: common.Currency, read: Transaction.prototype.getOriginalCurrency, write: Transaction.prototype.setOriginalCurrency });\n\t            })(common = data.common || (data.common = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='Transaction'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var common;\n\t            (function (common) {\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                //import java.util.Date;\n\t                //import java.util.List;\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 */\n\t                var TransactionList = (function () {\n\t                    function TransactionList() {\n\t                    }\n\t                    /**\n\t                     * The start date.\n\t                     *\n\t                     * @return The start date.\n\t                     */\n\t                    TransactionList.prototype.getStart = function () {\n\t                        return this.start;\n\t                    };\n\t                    /**\n\t                     * The start date.\n\t                     *\n\t                     * @param start The start date.\n\t                     */\n\t                    TransactionList.prototype.setStart = function (start) {\n\t                        this.start = start;\n\t                    };\n\t                    /**\n\t                     * The end date.\n\t                     *\n\t                     * @return The end date.\n\t                     */\n\t                    TransactionList.prototype.getEnd = function () {\n\t                        return this.end;\n\t                    };\n\t                    /**\n\t                     * The end date.\n\t                     *\n\t                     * @param end The end date.\n\t                     */\n\t                    TransactionList.prototype.setEnd = function (end) {\n\t                        this.end = end;\n\t                    };\n\t                    /**\n\t                     * The transaction list.\n\t                     *\n\t                     * @return The transaction list.\n\t                     */\n\t                    TransactionList.prototype.getTransactions = function () {\n\t                        return this.transactions;\n\t                    };\n\t                    /**\n\t                     * The transaction list.\n\t                     *\n\t                     * @param transactions The transaction list.\n\t                     */\n\t                    TransactionList.prototype.setTransactions = function (transactions) {\n\t                        this.transactions = transactions;\n\t                    };\n\t                    return TransactionList;\n\t                })();\n\t                common.TransactionList = TransactionList;\n\t                Aggregate_add(TransactionList, \"BANKTRANLIST\");\n\t                Element_add(TransactionList, { name: \"DTSTART\", required: true, order: 0, type: Date, read: TransactionList.prototype.getStart, write: TransactionList.prototype.setStart });\n\t                Element_add(TransactionList, { name: \"DTEND\", required: true, order: 10, type: Date, read: TransactionList.prototype.getEnd, write: TransactionList.prototype.setEnd });\n\t                ChildAggregate_add(TransactionList, { order: 20, type: Array, collectionEntryType: common.Transaction, read: TransactionList.prototype.getTransactions, write: TransactionList.prototype.setTransactions });\n\t            })(common = data.common || (data.common = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../domain/data/common/BalanceInfo'/>\n\t///<reference path='../domain/data/common/TransactionList'/>\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../OFXException'/>\n\t///<reference path='AccountStatement'/>\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../domain/data/banking/BankAccountDetails'/>\n\t///<reference path='FinancialInstitutionAccount'/>\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../domain/data/creditcard/CreditCardAccountDetails'/>\n\t///<reference path='FinancialInstitutionAccount'/>\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/Element_add'/>\n\t///<reference path='../../common/AccountDetails'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var accounts;\n\t                (function (accounts) {\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var Element_add = ofx4js.meta.Element_add;\n\t                    /**\n\t                     * Aggregate for the details that identifity a brokerage account.\n\t                     *\n\t                     * @author Jon Perlow\n\t                     * @see \"OFX Spec, Section 13.6.1\"\n\t                     */\n\t                    var InvestmentAccountDetails = (function () {\n\t                        function InvestmentAccountDetails() {\n\t                        }\n\t                        /**\n\t                         * Gets the broker id.\n\t                         *\n\t                         * @return the id of the broker\n\t                         */\n\t                        InvestmentAccountDetails.prototype.getBrokerId = function () {\n\t                            return this.brokerId;\n\t                        };\n\t                        /**\n\t                         * Sets the broker id.\n\t                         *\n\t                         * @param brokerId the id of the broker\n\t                         */\n\t                        InvestmentAccountDetails.prototype.setBrokerId = function (brokerId) {\n\t                            this.brokerId = brokerId;\n\t                        };\n\t                        /**\n\t                         * Gets the account number.\n\t                         *\n\t                         * @return the account number\n\t                         */\n\t                        InvestmentAccountDetails.prototype.getAccountNumber = function () {\n\t                            return this.accountNumber;\n\t                        };\n\t                        /**\n\t                         * Sets the account number.\n\t                         *\n\t                         * @param accountNumber the account number\n\t                         */\n\t                        InvestmentAccountDetails.prototype.setAccountNumber = function (accountNumber) {\n\t                            this.accountNumber = accountNumber;\n\t                        };\n\t                        /**\n\t                         * Gets the account key.\n\t                         *\n\t                         * @return the account key\n\t                         */\n\t                        InvestmentAccountDetails.prototype.getAccountKey = function () {\n\t                            return this.accountKey;\n\t                        };\n\t                        /**\n\t                         * Sets the account key.\n\t                         *\n\t                         * @param accountKey the account key\n\t                         */\n\t                        InvestmentAccountDetails.prototype.setAccountKey = function (accountKey) {\n\t                            this.accountKey = accountKey;\n\t                        };\n\t                        return InvestmentAccountDetails;\n\t                    })();\n\t                    accounts.InvestmentAccountDetails = InvestmentAccountDetails;\n\t                    Aggregate_add(InvestmentAccountDetails);\n\t                    Element_add(InvestmentAccountDetails, { name: \"BROKERID\", required: true, order: 0, type: String, read: InvestmentAccountDetails.prototype.getBrokerId, write: InvestmentAccountDetails.prototype.setBrokerId });\n\t                    Element_add(InvestmentAccountDetails, { name: \"ACCTID\", required: true, order: 20, type: String, read: InvestmentAccountDetails.prototype.getAccountNumber, write: InvestmentAccountDetails.prototype.setAccountNumber });\n\t                    Element_add(InvestmentAccountDetails, { name: \"ACCTKEY\", order: 40, type: String, read: InvestmentAccountDetails.prototype.getAccountKey, write: InvestmentAccountDetails.prototype.setAccountKey });\n\t                })(accounts = investment.accounts || (investment.accounts = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='AccountDetails'/>\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var accounts;\n\t                (function (accounts) {\n\t                    /**\n\t                     * Type of investment account.\n\t                     *\n\t                     * @author Jon Perlow\n\t                     * @see \"OFX Spec, Section 13.6.2\"\n\t                     */\n\t                    (function (AccountType) {\n\t                        AccountType[AccountType[\"INDIVIDUAL\"] = 0] = \"INDIVIDUAL\";\n\t                        AccountType[AccountType[\"JOINT\"] = 1] = \"JOINT\";\n\t                        AccountType[AccountType[\"TRUST\"] = 2] = \"TRUST\";\n\t                        AccountType[AccountType[\"CORPORATE\"] = 3] = \"CORPORATE\";\n\t                    })(accounts.AccountType || (accounts.AccountType = {}));\n\t                    var AccountType = accounts.AccountType;\n\t                    function AccountType_fromOfx(ofxVal) {\n\t                        if (\"INDIVIDUAL\" === ofxVal) {\n\t                            return AccountType.INDIVIDUAL;\n\t                        }\n\t                        else if (\"JOINT\" === ofxVal) {\n\t                            return AccountType.JOINT;\n\t                        }\n\t                        else if (\"CORPORATE\" === ofxVal) {\n\t                            return AccountType.CORPORATE;\n\t                        }\n\t                        else if (\"CORPORATE\" === ofxVal) {\n\t                            return AccountType.CORPORATE;\n\t                        }\n\t                        else {\n\t                            return null;\n\t                        }\n\t                    }\n\t                    accounts.AccountType_fromOfx = AccountType_fromOfx;\n\t                })(accounts = investment.accounts || (investment.accounts = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var accounts;\n\t                (function (accounts) {\n\t                    /**\n\t                     * Activation status of an account.\n\t                     * @see \"Section 13.6.2, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    (function (ActivationStatus) {\n\t                        ActivationStatus[ActivationStatus[\"ACTIVE\"] = 0] = \"ACTIVE\";\n\t                        ActivationStatus[ActivationStatus[\"PENDING\"] = 1] = \"PENDING\";\n\t                        ActivationStatus[ActivationStatus[\"AVAILABLE\"] = 2] = \"AVAILABLE\";\n\t                    })(accounts.ActivationStatus || (accounts.ActivationStatus = {}));\n\t                    var ActivationStatus = accounts.ActivationStatus;\n\t                    function ActivationStatus_fromOfx(ofxVal) {\n\t                        if (\"ACTIVE\" === ofxVal) {\n\t                            return ActivationStatus.ACTIVE;\n\t                        }\n\t                        else if (\"PEND\" === ofxVal) {\n\t                            return ActivationStatus.PENDING;\n\t                        }\n\t                        else if (\"AVAIL\" === ofxVal) {\n\t                            return ActivationStatus.AVAILABLE;\n\t                        }\n\t                        else {\n\t                            return null;\n\t                        }\n\t                    }\n\t                    accounts.ActivationStatus_fromOfx = ActivationStatus_fromOfx;\n\t                })(accounts = investment.accounts || (investment.accounts = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var accounts;\n\t                (function (accounts) {\n\t                    //import java.util.HashMap;\n\t                    //import java.util.Map;\n\t                    /**\n\t                     * @author Jon Perlow\n\t                     * @see \"OFX Spec, Section 13.6.2.1\"\n\t                     */\n\t                    (function (UnitedStatesAccountType) {\n\t                        /** A 401(k) retirement account */\n\t                        UnitedStatesAccountType[UnitedStatesAccountType[\"R401K\"] = 0] = \"R401K\";\n\t                        /** A 403(B) retirement account */\n\t                        UnitedStatesAccountType[UnitedStatesAccountType[\"R403B\"] = 1] = \"R403B\";\n\t                        /** An IRA retirement account */\n\t                        UnitedStatesAccountType[UnitedStatesAccountType[\"IRA\"] = 2] = \"IRA\";\n\t                        /** Keough (money purchase/profit sharing) account */\n\t                        UnitedStatesAccountType[UnitedStatesAccountType[\"KEOUGH\"] = 3] = \"KEOUGH\";\n\t                        /** Other account type */\n\t                        UnitedStatesAccountType[UnitedStatesAccountType[\"OTHER\"] = 4] = \"OTHER\";\n\t                        /** Salary Reduction Employer Pension Plan */\n\t                        UnitedStatesAccountType[UnitedStatesAccountType[\"SARSEP\"] = 5] = \"SARSEP\";\n\t                        /** Savings Incentive Match Plan for Employees*/\n\t                        UnitedStatesAccountType[UnitedStatesAccountType[\"SIMPLE\"] = 6] = \"SIMPLE\";\n\t                        /** Regular investment account */\n\t                        UnitedStatesAccountType[UnitedStatesAccountType[\"NORMAL\"] = 7] = \"NORMAL\";\n\t                        /** Tax Deferred Annuity */\n\t                        UnitedStatesAccountType[UnitedStatesAccountType[\"TDA\"] = 8] = \"TDA\";\n\t                        /** Trust (including UTMA) */\n\t                        UnitedStatesAccountType[UnitedStatesAccountType[\"TRUST\"] = 9] = \"TRUST\";\n\t                        /** Custodial account */\n\t                        UnitedStatesAccountType[UnitedStatesAccountType[\"UGMA\"] = 10] = \"UGMA\";\n\t                    })(accounts.UnitedStatesAccountType || (accounts.UnitedStatesAccountType = {}));\n\t                    var UnitedStatesAccountType = accounts.UnitedStatesAccountType;\n\t                    var ofxMapping = {\n\t                        \"401K\": UnitedStatesAccountType.R401K,\n\t                        \"403B\": UnitedStatesAccountType.R403B,\n\t                        \"IRA\": UnitedStatesAccountType.IRA,\n\t                        \"KEOUGH\": UnitedStatesAccountType.KEOUGH,\n\t                        \"OTHER\": UnitedStatesAccountType.OTHER,\n\t                        \"SARSEP\": UnitedStatesAccountType.SARSEP,\n\t                        \"SIMPLE\": UnitedStatesAccountType.SIMPLE,\n\t                        \"NORMAL\": UnitedStatesAccountType.NORMAL,\n\t                        \"TDA\": UnitedStatesAccountType.TDA,\n\t                        \"TRUST\": UnitedStatesAccountType.TRUST,\n\t                        \"UGMA\": UnitedStatesAccountType.UGMA,\n\t                    };\n\t                    function UnitedStatesAccountType_fromOfx(ofxVal) {\n\t                        return ofxVal == null ? null : ofxMapping[ofxVal];\n\t                    }\n\t                    accounts.UnitedStatesAccountType_fromOfx = UnitedStatesAccountType_fromOfx;\n\t                })(accounts = investment.accounts || (investment.accounts = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../../../meta/Element_add'/>\n\t///<reference path='../../common/AccountDetails'/>\n\t///<reference path='../../common/AccountInfo'/>\n\t///<reference path='AccountType'/>\n\t///<reference path='ActivationStatus'/>\n\t///<reference path='InvestmentAccountDetails'/>\n\t///<reference path='UnitedStatesAccountType'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var accounts;\n\t                (function (accounts) {\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                    var Element_add = ofx4js.meta.Element_add;\n\t                    /**\n\t                     * Aggregate for the info about a brokerage account.\n\t                     *\n\t                     * @author Jon Perlow\n\t                     * @see \"OFX Spec, Section 13.6.2\"\n\t                     */\n\t                    var InvestmentAccountInfo = (function () {\n\t                        function InvestmentAccountInfo() {\n\t                        }\n\t                        /**\n\t                         * Gets the investment account this information is referencing.\n\t                         *\n\t                         * @return the investment account this information is referencing\n\t                         */\n\t                        InvestmentAccountInfo.prototype.getInvestmentAccount = function () {\n\t                            return this.investmentAccount;\n\t                        };\n\t                        /**\n\t                         * Sets the investment account this information is referencing. This is a required field\n\t                         * according to the OFX spec.\n\t                         *\n\t                         * @param investmentAccount the investment account this information is referencing\n\t                         */\n\t                        InvestmentAccountInfo.prototype.setInvestmentAccount = function (investmentAccount) {\n\t                            this.investmentAccount = investmentAccount;\n\t                        };\n\t                        // Inherited.\n\t                        InvestmentAccountInfo.prototype.getAccountDetails = function () {\n\t                            return this.getInvestmentAccount();\n\t                        };\n\t                        /**\n\t                         * Gets the United States account type. This is a required field according to the OFX spec.\n\t                         * @see \"OFX Spec, Section 13.6.1\"\n\t                         *\n\t                         * @return the United States account type\n\t                         */\n\t                        InvestmentAccountInfo.prototype.getUnitedStatesAccountType = function () {\n\t                            return this.unitedStatesAccountType;\n\t                        };\n\t                        /**\n\t                         * Sets United States account type. This is a required field according to the OFX spec.\n\t                         * @see \"OFX Spec, Section 13.6.1\"\n\t                         *\n\t                         * @param unitedStatesAccountType the United States account type\n\t                         */\n\t                        InvestmentAccountInfo.prototype.setUnitedStatesAccountType = function (unitedStatesAccountType) {\n\t                            this.unitedStatesAccountType = unitedStatesAccountType;\n\t                        };\n\t                        /**\n\t                         * Gets the United States account type as one of the well-known types.\n\t                         *\n\t                         * @return the account type or null if it's not one of the well-known types\n\t                         */\n\t                        InvestmentAccountInfo.prototype.getUnitedStatesAccountTypeEnum = function () {\n\t                            return accounts.UnitedStatesAccountType_fromOfx(this.unitedStatesAccountType);\n\t                        };\n\t                        /**\n\t                         * Gets whether the account supports checking. This is a required field according to the OFX spec.\n\t                         * @see \"OFX Spec, Section 13.6.1\"\n\t                         *\n\t                         * @return whether the account supports checking\n\t                         */\n\t                        InvestmentAccountInfo.prototype.getSupportsChecking = function () {\n\t                            return this.supportsChecking;\n\t                        };\n\t                        /**\n\t                         * Sets whether the account supports checking. This is a required field according to the OFX spec.\n\t                         * @see \"OFX Spec, Section 13.6.1\"\n\t                         *\n\t                         * @param supportsChecking whether the account supports checking\n\t                         */\n\t                        InvestmentAccountInfo.prototype.setSupportsChecking = function (supportsChecking) {\n\t                            this.supportsChecking = supportsChecking;\n\t                        };\n\t                        /**\n\t                         * Gets the activation status for investment statement download. This is a required field\n\t                         * according to the OFX spec.\n\t                         *\n\t                         * @return the activation status\n\t                         */\n\t                        InvestmentAccountInfo.prototype.getActivationStatus = function () {\n\t                            return this.activationStatus;\n\t                        };\n\t                        /**\n\t                         * Sets the activation status for investment statement download. This is a required field\n\t                         * according to the OFX spec.\n\t                         *\n\t                         * @param activationStatus the activation status\n\t                         */\n\t                        InvestmentAccountInfo.prototype.setActivationStatus = function (activationStatus) {\n\t                            this.activationStatus = activationStatus;\n\t                        };\n\t                        /**\n\t                         * Gets the activation status as one of the well-known types.\n\t                         *\n\t                         * @return the activation status or null if it wasn't one of the well known types\n\t                         */\n\t                        InvestmentAccountInfo.prototype.getActivationStatusEnum = function () {\n\t                            return accounts.ActivationStatus_fromOfx(this.getActivationStatus());\n\t                        };\n\t                        /**\n\t                         * Gets the type of investment account. One of \"INDIVIDUAL\", \"JOINT\", \"TRUST\", or \"CORPORATE\".\n\t                         * This is an optional field according to the OFX spec.\n\t                         *\n\t                         * @return the type of account\n\t                         */\n\t                        InvestmentAccountInfo.prototype.getInvestmentAccountType = function () {\n\t                            return this.investmentAccountType;\n\t                        };\n\t                        /**\n\t                         * Sets the type of investment account. One of \"INDIVIDUAL\", \"JOINT\", \"TRUST\", or \"CORPORATE\".\n\t                         * This is an optional field according to the OFX spec.\n\t                         *\n\t                         * @param investmentAccountType the type of account\n\t                         */\n\t                        InvestmentAccountInfo.prototype.setInvestmentAccountType = function (investmentAccountType) {\n\t                            this.investmentAccountType = investmentAccountType;\n\t                        };\n\t                        /**\n\t                         * Gets the type of investment account as one of the well-known types.\n\t                         *\n\t                         * @return the type of investment account or null if it's not one of the well-known types\n\t                         */\n\t                        InvestmentAccountInfo.prototype.getInvestmentAccountTypeEnum = function () {\n\t                            return accounts.AccountType_fromOfx(this.getInvestmentAccountType());\n\t                        };\n\t                        /**\n\t                         * Gets the description of option trading privileges. * This is an optional field according to\n\t                         * the OFX spec.\n\t                         *\n\t                         * @return the description of option trading privileges.\n\t                         */\n\t                        InvestmentAccountInfo.prototype.getOptionLevel = function () {\n\t                            return this.optionLevel;\n\t                        };\n\t                        /**\n\t                         * Sets the description of option trading privileges. * This is an optional field according to\n\t                         * the OFX spec.\n\t                         *\n\t                         * @param optionLevel the description of option trading privileges.\n\t                         */\n\t                        InvestmentAccountInfo.prototype.setOptionLevel = function (optionLevel) {\n\t                            this.optionLevel = optionLevel;\n\t                        };\n\t                        return InvestmentAccountInfo;\n\t                    })();\n\t                    accounts.InvestmentAccountInfo = InvestmentAccountInfo;\n\t                    Aggregate_add(InvestmentAccountInfo, \"INVACCTINFO\");\n\t                    ChildAggregate_add(InvestmentAccountInfo, { name: \"INVACCTFROM\", required: true, order: 0, type: accounts.InvestmentAccountDetails, read: InvestmentAccountInfo.prototype.getInvestmentAccount, write: InvestmentAccountInfo.prototype.setInvestmentAccount });\n\t                    Element_add(InvestmentAccountInfo, { name: \"USPRODUCTTYPE\", required: true, order: 10, type: String, read: InvestmentAccountInfo.prototype.getUnitedStatesAccountType, write: InvestmentAccountInfo.prototype.setUnitedStatesAccountType });\n\t                    Element_add(InvestmentAccountInfo, { name: \"CHECKING\", required: true, order: 20, type: Boolean, read: InvestmentAccountInfo.prototype.getSupportsChecking, write: InvestmentAccountInfo.prototype.setSupportsChecking });\n\t                    Element_add(InvestmentAccountInfo, { name: \"SVCSTATUS\", required: true, order: 30, type: String, read: InvestmentAccountInfo.prototype.getActivationStatus, write: InvestmentAccountInfo.prototype.setActivationStatus });\n\t                    Element_add(InvestmentAccountInfo, { name: \"INVACCTTYPE\", order: 40, type: String, read: InvestmentAccountInfo.prototype.getInvestmentAccountType, write: InvestmentAccountInfo.prototype.setInvestmentAccountType });\n\t                    Element_add(InvestmentAccountInfo, { name: \"OPTIONLEVEL\", order: 50, type: String, read: InvestmentAccountInfo.prototype.getOptionLevel, write: InvestmentAccountInfo.prototype.setOptionLevel });\n\t                })(accounts = investment.accounts || (investment.accounts = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var common;\n\t            (function (common) {\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 */\n\t                (function (AccountStatus) {\n\t                    /**\n\t                     * Available, but not yet requested.\n\t                     */\n\t                    AccountStatus[AccountStatus[\"AVAIL\"] = 0] = \"AVAIL\";\n\t                    /**\n\t                     * Requested, but not yet available.\n\t                     */\n\t                    AccountStatus[AccountStatus[\"PEND\"] = 1] = \"PEND\";\n\t                    /**\n\t                     * Active.\n\t                     */\n\t                    AccountStatus[AccountStatus[\"ACTIVE\"] = 2] = \"ACTIVE\";\n\t                })(common.AccountStatus || (common.AccountStatus = {}));\n\t                var AccountStatus = common.AccountStatus;\n\t            })(common = data.common || (data.common = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\t///<reference path='../common/AccountDetails'/>\n\t///<reference path='../common/AccountInfo'/>\n\t///<reference path='../common/AccountStatus'/>\n\t///<reference path='BankAccountDetails'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var banking;\n\t            (function (banking) {\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var AccountStatus = ofx4js.domain.data.common.AccountStatus;\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 */\n\t                var BankAccountInfo = (function () {\n\t                    function BankAccountInfo() {\n\t                    }\n\t                    /**\n\t                     * The bank account this information is referencing.\n\t                     *\n\t                     * @return The bank account this information is referencing.\n\t                     */\n\t                    BankAccountInfo.prototype.getBankAccount = function () {\n\t                        return this.bankAccount;\n\t                    };\n\t                    /**\n\t                     * The bank account this information is referencing.\n\t                     *\n\t                     * @param bankAccount The bank account this information is referencing.\n\t                     */\n\t                    BankAccountInfo.prototype.setBankAccount = function (bankAccount) {\n\t                        this.bankAccount = bankAccount;\n\t                    };\n\t                    // Inherited.\n\t                    BankAccountInfo.prototype.getAccountDetails = function () {\n\t                        return this.getBankAccount();\n\t                    };\n\t                    /**\n\t                     * Whether this account supports download of transaction details.\n\t                     *\n\t                     * @return Whether this account supports download of transaction details.\n\t                     */\n\t                    BankAccountInfo.prototype.getSupportsTransactionDetailOperations = function () {\n\t                        return this.supportsTransactionDetailOperations;\n\t                    };\n\t                    /**\n\t                     * Whether this account supports download of transaction details.\n\t                     *\n\t                     * @param supportsTransactionDetailOperations Whether this account supports download of transaction details.\n\t                     */\n\t                    BankAccountInfo.prototype.setSupportsTransactionDetailOperations = function (supportsTransactionDetailOperations) {\n\t                        this.supportsTransactionDetailOperations = supportsTransactionDetailOperations;\n\t                    };\n\t                    /**\n\t                     * Whether this account supports transfer operations to other accounts.\n\t                     *\n\t                     * @return Whether this account supports transfer operations to other accounts.\n\t                     */\n\t                    BankAccountInfo.prototype.getSupportsTransferToOtherAccountOperations = function () {\n\t                        return this.supportsTransferToOtherAccountOperations;\n\t                    };\n\t                    /**\n\t                     * Whether this account supports transfer operations to other accounts.\n\t                     *\n\t                     * @param supportsTransferToOtherAccountOperations Whether this account supports transfer operations to other accounts.\n\t                     */\n\t                    BankAccountInfo.prototype.setSupportsTransferToOtherAccountOperations = function (supportsTransferToOtherAccountOperations) {\n\t                        this.supportsTransferToOtherAccountOperations = supportsTransferToOtherAccountOperations;\n\t                    };\n\t                    /**\n\t                     * Whether this account supports transfer operations from other accounts.\n\t                     *\n\t                     * @return Whether this account supports transfer operations from other accounts.\n\t                     */\n\t                    BankAccountInfo.prototype.getSupportsTransferFromOtherAccountOperations = function () {\n\t                        return this.supportsTransferFromOtherAccountOperations;\n\t                    };\n\t                    /**\n\t                     * Whether this account supports transfer operations from other accounts.\n\t                     *\n\t                     * @param supportsTransferFromOtherAccountOperations Whether this account supports transfer operations from other accounts.\n\t                     */\n\t                    BankAccountInfo.prototype.setSupportsTransferFromOtherAccountOperations = function (supportsTransferFromOtherAccountOperations) {\n\t                        this.supportsTransferFromOtherAccountOperations = supportsTransferFromOtherAccountOperations;\n\t                    };\n\t                    /**\n\t                     * The account status.\n\t                     *\n\t                     * @return The account status.\n\t                     */\n\t                    BankAccountInfo.prototype.getStatus = function () {\n\t                        return this.status;\n\t                    };\n\t                    /**\n\t                     * The account status.\n\t                     *\n\t                     * @param status The account status.\n\t                     */\n\t                    BankAccountInfo.prototype.setStatus = function (status) {\n\t                        this.status = status;\n\t                    };\n\t                    return BankAccountInfo;\n\t                })();\n\t                banking.BankAccountInfo = BankAccountInfo;\n\t                Aggregate_add(BankAccountInfo, \"BANKACCTINFO\");\n\t                ChildAggregate_add(BankAccountInfo, { name: \"BANKACCTFROM\", required: true, order: 0, type: banking.BankAccountDetails, read: BankAccountInfo.prototype.getBankAccount, write: BankAccountInfo.prototype.setBankAccount });\n\t                Element_add(BankAccountInfo, { name: \"SUPTXDL\", required: true, order: 10, type: Boolean, read: BankAccountInfo.prototype.getSupportsTransactionDetailOperations, write: BankAccountInfo.prototype.setSupportsTransactionDetailOperations });\n\t                Element_add(BankAccountInfo, { name: \"XFERSRC\", required: true, order: 20, type: Boolean, read: BankAccountInfo.prototype.getSupportsTransferToOtherAccountOperations, write: BankAccountInfo.prototype.setSupportsTransferToOtherAccountOperations });\n\t                Element_add(BankAccountInfo, { name: \"XFERDEST\", required: true, order: 30, type: Boolean, read: BankAccountInfo.prototype.getSupportsTransferFromOtherAccountOperations, write: BankAccountInfo.prototype.setSupportsTransferFromOtherAccountOperations });\n\t                Element_add(BankAccountInfo, { name: \"SVCSTATUS\", required: true, order: 40, type: AccountStatus, read: BankAccountInfo.prototype.getStatus, write: BankAccountInfo.prototype.setStatus });\n\t            })(banking = data.banking || (data.banking = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\t///<reference path='../common/AccountStatus'/>\n\t///<reference path='../common/AccountInfo'/>\n\t///<reference path='../common/AccountDetails'/>\n\t///<reference path='CreditCardAccountDetails'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var creditcard;\n\t            (function (creditcard) {\n\t                var AccountStatus = ofx4js.domain.data.common.AccountStatus;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 */\n\t                var CreditCardAccountInfo = (function () {\n\t                    function CreditCardAccountInfo() {\n\t                    }\n\t                    /**\n\t                     * The credit card account this information is referencing.\n\t                     *\n\t                     * @return The credit card account this information is referencing.\n\t                     */\n\t                    CreditCardAccountInfo.prototype.getCreditCardAccount = function () {\n\t                        return this.creditCardAccount;\n\t                    };\n\t                    /**\n\t                     * The credit card account this information is referencing.\n\t                     *\n\t                     * @param creditCardAccount The credit card account this information is referencing.\n\t                     */\n\t                    CreditCardAccountInfo.prototype.setCreditCardAccount = function (creditCardAccount) {\n\t                        this.creditCardAccount = creditCardAccount;\n\t                    };\n\t                    // Inherited.\n\t                    CreditCardAccountInfo.prototype.getAccountDetails = function () {\n\t                        return this.getCreditCardAccount();\n\t                    };\n\t                    /**\n\t                     * Whether this account supports download of transaction details.\n\t                     *\n\t                     * @return Whether this account supports download of transaction details.\n\t                     */\n\t                    CreditCardAccountInfo.prototype.getSupportsTransactionDetailOperations = function () {\n\t                        return this.supportsTransactionDetailOperations;\n\t                    };\n\t                    /**\n\t                     * Whether this account supports download of transaction details.\n\t                     *\n\t                     * @param supportsTransactionDetailOperations Whether this account supports download of transaction details.\n\t                     */\n\t                    CreditCardAccountInfo.prototype.setSupportsTransactionDetailOperations = function (supportsTransactionDetailOperations) {\n\t                        this.supportsTransactionDetailOperations = supportsTransactionDetailOperations;\n\t                    };\n\t                    /**\n\t                     * Whether this account supports transfer operations to other accounts.\n\t                     *\n\t                     * @return Whether this account supports transfer operations to other accounts.\n\t                     */\n\t                    CreditCardAccountInfo.prototype.getSupportsTransferToOtherAccountOperations = function () {\n\t                        return this.supportsTransferToOtherAccountOperations;\n\t                    };\n\t                    /**\n\t                     * Whether this account supports transfer operations to other accounts.\n\t                     *\n\t                     * @param supportsTransferToOtherAccountOperations Whether this account supports transfer operations to other accounts.\n\t                     */\n\t                    CreditCardAccountInfo.prototype.setSupportsTransferToOtherAccountOperations = function (supportsTransferToOtherAccountOperations) {\n\t                        this.supportsTransferToOtherAccountOperations = supportsTransferToOtherAccountOperations;\n\t                    };\n\t                    /**\n\t                     * Whether this account supports transfer operations from other accounts.\n\t                     *\n\t                     * @return Whether this account supports transfer operations from other accounts.\n\t                     */\n\t                    CreditCardAccountInfo.prototype.getSupportsTransferFromOtherAccountOperations = function () {\n\t                        return this.supportsTransferFromOtherAccountOperations;\n\t                    };\n\t                    /**\n\t                     * Whether this account supports transfer operations from other accounts.\n\t                     *\n\t                     * @param supportsTransferFromOtherAccountOperations Whether this account supports transfer operations from other accounts.\n\t                     */\n\t                    CreditCardAccountInfo.prototype.setSupportsTransferFromOtherAccountOperations = function (supportsTransferFromOtherAccountOperations) {\n\t                        this.supportsTransferFromOtherAccountOperations = supportsTransferFromOtherAccountOperations;\n\t                    };\n\t                    /**\n\t                     * The account status.\n\t                     *\n\t                     * @return The account status.\n\t                     */\n\t                    CreditCardAccountInfo.prototype.getStatus = function () {\n\t                        return this.status;\n\t                    };\n\t                    /**\n\t                     * The account status.\n\t                     *\n\t                     * @param status The account status.\n\t                     */\n\t                    CreditCardAccountInfo.prototype.setStatus = function (status) {\n\t                        this.status = status;\n\t                    };\n\t                    return CreditCardAccountInfo;\n\t                })();\n\t                creditcard.CreditCardAccountInfo = CreditCardAccountInfo;\n\t                Aggregate_add(CreditCardAccountInfo, \"CCACCTINFO\");\n\t                ChildAggregate_add(CreditCardAccountInfo, { name: \"CCACCTFROM\", required: true, order: 0, type: creditcard.CreditCardAccountDetails, read: CreditCardAccountInfo.prototype.getCreditCardAccount, write: CreditCardAccountInfo.prototype.setCreditCardAccount });\n\t                Element_add(CreditCardAccountInfo, { name: \"SUPTXDL\", required: true, order: 10, type: Boolean, read: CreditCardAccountInfo.prototype.getSupportsTransactionDetailOperations, write: CreditCardAccountInfo.prototype.setSupportsTransactionDetailOperations });\n\t                Element_add(CreditCardAccountInfo, { name: \"XFERSRC\", required: true, order: 20, type: Boolean, read: CreditCardAccountInfo.prototype.getSupportsTransferToOtherAccountOperations, write: CreditCardAccountInfo.prototype.setSupportsTransferToOtherAccountOperations });\n\t                Element_add(CreditCardAccountInfo, { name: \"XFERDEST\", required: true, order: 30, type: Boolean, read: CreditCardAccountInfo.prototype.getSupportsTransferFromOtherAccountOperations, write: CreditCardAccountInfo.prototype.setSupportsTransferFromOtherAccountOperations });\n\t                Element_add(CreditCardAccountInfo, { name: \"SVCSTATUS\", required: true, order: 40, type: AccountStatus, read: CreditCardAccountInfo.prototype.getStatus, write: CreditCardAccountInfo.prototype.setStatus });\n\t            })(creditcard = data.creditcard || (data.creditcard = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\t///<reference path='../investment/accounts/InvestmentAccountInfo'/>\n\t///<reference path='../banking/BankAccountInfo'/>\n\t///<reference path='../creditcard/CreditCardAccountInfo'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var signup;\n\t            (function (signup) {\n\t                var InvestmentAccountInfo = ofx4js.domain.data.investment.accounts.InvestmentAccountInfo;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                var BankAccountInfo = ofx4js.domain.data.banking.BankAccountInfo;\n\t                var CreditCardAccountInfo = ofx4js.domain.data.creditcard.CreditCardAccountInfo;\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 */\n\t                var AccountProfile = (function () {\n\t                    function AccountProfile() {\n\t                    }\n\t                    /**\n\t                     * Description of the account.\n\t                     *\n\t                     * @return The description of the account.\n\t                     */\n\t                    AccountProfile.prototype.getDescription = function () {\n\t                        return this.description;\n\t                    };\n\t                    /**\n\t                     * The description of the account.\n\t                     *\n\t                     * @param description The description of the account.\n\t                     */\n\t                    AccountProfile.prototype.setDescription = function (description) {\n\t                        this.description = description;\n\t                    };\n\t                    /**\n\t                     * Phone number for the account.\n\t                     *\n\t                     * @return Phone number for the account.\n\t                     */\n\t                    AccountProfile.prototype.getPhone = function () {\n\t                        return this.phone;\n\t                    };\n\t                    /**\n\t                     * Phone number for the account.\n\t                     *\n\t                     * @param phone Phone number for the account.\n\t                     */\n\t                    AccountProfile.prototype.setPhone = function (phone) {\n\t                        this.phone = phone;\n\t                    };\n\t                    /**\n\t                     * Account specifics.\n\t                     *\n\t                     * @return Account specifics.\n\t                     */\n\t                    AccountProfile.prototype.getSpecifics = function () {\n\t                        if (this.getBankSpecifics() != null && this.getCreditCardSpecifics() != null) {\n\t                            throw new ofx4js.OFXException(\"Only one account specifics aggregate can be set at a time.\");\n\t                        }\n\t                        else if (this.getBankSpecifics() != null) {\n\t                            return this.getBankSpecifics();\n\t                        }\n\t                        else if (this.getInvestmentSpecifics() != null) {\n\t                            return this.getInvestmentSpecifics();\n\t                        }\n\t                        else {\n\t                            return this.getCreditCardSpecifics();\n\t                        }\n\t                    };\n\t                    /**\n\t                     * Account specifics.\n\t                     *\n\t                     * @param specifics Account specifics.\n\t                     */\n\t                    AccountProfile.prototype.setSpecifics = function (specifics) {\n\t                        if (specifics instanceof BankAccountInfo) {\n\t                            this.setBankSpecifics(specifics);\n\t                        }\n\t                        else if (specifics instanceof CreditCardAccountInfo) {\n\t                            this.setCreditCardSpecifics(specifics);\n\t                        }\n\t                        else if (specifics instanceof InvestmentAccountInfo) {\n\t                            this.setInvestmentSpecifics(specifics);\n\t                        }\n\t                        else {\n\t                            throw new ofx4js.OFXException(\"Unknown specifics type: \" + specifics);\n\t                        }\n\t                    };\n\t                    /**\n\t                     * Bank-specific info.\n\t                     *\n\t                     * @return Bank-specific info.\n\t                     */\n\t                    AccountProfile.prototype.getBankSpecifics = function () {\n\t                        return this.bankSpecifics;\n\t                    };\n\t                    /**\n\t                     * Bank-specific info.\n\t                     *\n\t                     * @param bankSpecifics Bank-specific info.\n\t                     */\n\t                    AccountProfile.prototype.setBankSpecifics = function (bankSpecifics) {\n\t                        this.creditCardSpecifics = null;\n\t                        this.investSpecifics = null;\n\t                        this.bankSpecifics = bankSpecifics;\n\t                    };\n\t                    /**\n\t                     * Credit-card account info.\n\t                     *\n\t                     * @return Credit-card account info.\n\t                     */\n\t                    AccountProfile.prototype.getCreditCardSpecifics = function () {\n\t                        return this.creditCardSpecifics;\n\t                    };\n\t                    /**\n\t                     * Credit-card account info.\n\t                     *\n\t                     * @param creditCardSpecifics Credit-card account info.\n\t                     */\n\t                    AccountProfile.prototype.setCreditCardSpecifics = function (creditCardSpecifics) {\n\t                        this.bankSpecifics = null;\n\t                        this.investSpecifics = null;\n\t                        this.creditCardSpecifics = creditCardSpecifics;\n\t                    };\n\t                    /**\n\t                     * Investment account info.\n\t                     *\n\t                     * @return Investment account info.\n\t                     */\n\t                    AccountProfile.prototype.getInvestmentSpecifics = function () {\n\t                        return this.investSpecifics;\n\t                    };\n\t                    /**\n\t                     * Investment account info.\n\t                     *\n\t                     * @param investSpecifics Investment account info.\n\t                     */\n\t                    AccountProfile.prototype.setInvestmentSpecifics = function (investSpecifics) {\n\t                        this.bankSpecifics = null;\n\t                        this.creditCardSpecifics = null;\n\t                        this.investSpecifics = investSpecifics;\n\t                    };\n\t                    return AccountProfile;\n\t                })();\n\t                signup.AccountProfile = AccountProfile;\n\t                Aggregate_add(AccountProfile, \"ACCTINFO\");\n\t                Element_add(AccountProfile, { name: \"DESC\", order: 0, type: String, read: AccountProfile.prototype.getDescription, write: AccountProfile.prototype.setDescription });\n\t                Element_add(AccountProfile, { name: \"PHONE\", order: 10, type: String, read: AccountProfile.prototype.getPhone, write: AccountProfile.prototype.setPhone });\n\t                ChildAggregate_add(AccountProfile, { order: 20, type: BankAccountInfo, read: AccountProfile.prototype.getBankSpecifics, write: AccountProfile.prototype.setBankSpecifics });\n\t                ChildAggregate_add(AccountProfile, { order: 30, type: CreditCardAccountInfo, read: AccountProfile.prototype.getCreditCardSpecifics, write: AccountProfile.prototype.setCreditCardSpecifics });\n\t                ChildAggregate_add(AccountProfile, { order: 40, type: InvestmentAccountInfo, read: AccountProfile.prototype.getInvestmentSpecifics, write: AccountProfile.prototype.setInvestmentSpecifics });\n\t            })(signup = data.signup || (data.signup = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../project.d.ts'/>\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile) {\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 * @see \"Section 7.2.1, OFX Spec\"\n\t                 */\n\t                (function (SynchronizationCapability) {\n\t                    SynchronizationCapability[SynchronizationCapability[\"FULL\"] = 0] = \"FULL\";\n\t                    SynchronizationCapability[SynchronizationCapability[\"LITE\"] = 1] = \"LITE\";\n\t                })(profile.SynchronizationCapability || (profile.SynchronizationCapability = {}));\n\t                var SynchronizationCapability = profile.SynchronizationCapability;\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            /**\n\t             * @author Ryan Heaton\n\t             * @see \"Section 4, OFX spec\"\n\t             */\n\t            (function (ApplicationSecurity) {\n\t                ApplicationSecurity[ApplicationSecurity[\"NONE\"] = 0] = \"NONE\";\n\t                ApplicationSecurity[ApplicationSecurity[\"TYPE1\"] = 1] = \"TYPE1\";\n\t            })(data.ApplicationSecurity || (data.ApplicationSecurity = {}));\n\t            var ApplicationSecurity = data.ApplicationSecurity;\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='profile/SynchronizationCapability'/>\n\t///<reference path='ApplicationSecurity'/>\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            /**\n\t             * The message set type, used to define message set order in the envelope.\n\t             *\n\t             * @author Ryan Heaton\n\t             * @see \"Section 2.4.5.2, OFX spec\"\n\t             */\n\t            (function (MessageSetType) {\n\t                MessageSetType[MessageSetType[\"signon\"] = 0] = \"signon\";\n\t                MessageSetType[MessageSetType[\"signup\"] = 1] = \"signup\";\n\t                MessageSetType[MessageSetType[\"banking\"] = 2] = \"banking\";\n\t                MessageSetType[MessageSetType[\"creditcard\"] = 3] = \"creditcard\";\n\t                MessageSetType[MessageSetType[\"investment\"] = 4] = \"investment\";\n\t                MessageSetType[MessageSetType[\"interbank_transfer\"] = 5] = \"interbank_transfer\";\n\t                MessageSetType[MessageSetType[\"wire_transfer\"] = 6] = \"wire_transfer\";\n\t                MessageSetType[MessageSetType[\"payments\"] = 7] = \"payments\";\n\t                MessageSetType[MessageSetType[\"email\"] = 8] = \"email\";\n\t                MessageSetType[MessageSetType[\"investment_security\"] = 9] = \"investment_security\";\n\t                MessageSetType[MessageSetType[\"profile\"] = 10] = \"profile\";\n\t                MessageSetType[MessageSetType[\"tax1099\"] = 11] = \"tax1099\";\n\t            })(data.MessageSetType || (data.MessageSetType = {}));\n\t            var MessageSetType = data.MessageSetType;\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile) {\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 * @see \"Section 7.2.2, OFX Spec\"\n\t                 */\n\t                (function (CharacterType) {\n\t                    CharacterType[CharacterType[\"ALPHAONLY\"] = 0] = \"ALPHAONLY\";\n\t                    CharacterType[CharacterType[\"NUMERICONLY\"] = 1] = \"NUMERICONLY\";\n\t                    CharacterType[CharacterType[\"ALPHAORNUMERIC\"] = 2] = \"ALPHAORNUMERIC\";\n\t                    CharacterType[CharacterType[\"ALPHAANDNUMERIC\"] = 3] = \"ALPHAANDNUMERIC\";\n\t                })(profile.CharacterType || (profile.CharacterType = {}));\n\t                var CharacterType = profile.CharacterType;\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='profile/CharacterType'/>\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../domain/data/MessageSetProfile'/>\n\t///<reference path='../domain/data/MessageSetType'/>\n\t///<reference path='../domain/data/SignonProfile'/>\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../OFXException'/>\n\t///<reference path='../domain/data/banking/BankAccountDetails'/>\n\t///<reference path='../domain/data/creditcard/CreditCardAccountDetails'/>\n\t///<reference path='../domain/data/investment/accounts/InvestmentAccountDetails'/>\n\t///<reference path='../domain/data/signup/AccountProfile'/>\n\t///<reference path='BankAccount'/>\n\t///<reference path='CreditCardAccount'/>\n\t///<reference path='FinancialInstitutionData'/>\n\t///<reference path='FinancialInstitutionProfile'/>\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='FinancialInstitutionData'/>\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='FinancialInstitution'/>\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            /**\n\t             * A message applicable to a response message set.\n\t             *\n\t             * @author Ryan Heaton\n\t             */\n\t            var ResponseMessage = (function () {\n\t                function ResponseMessage() {\n\t                }\n\t                /**\n\t                 * The name of the response message.\n\t                 *\n\t                 * @return The name of the response message.\n\t                 */\n\t                ResponseMessage.prototype.getResponseMessageName = function () { throw new ofx4js.OFXException(\"abstract\"); };\n\t                return ResponseMessage;\n\t            })();\n\t            data.ResponseMessage = ResponseMessage;\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\t///<reference path='../ResponseMessage'/>\n\t///<reference path='../../../client/AccountStatement'/>\n\t///<reference path='BalanceInfo'/>\n\t///<reference path='TransactionList'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var common;\n\t            (function (common) {\n\t                var ResponseMessage = ofx4js.domain.data.ResponseMessage;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                //import java.util.Locale;\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 */\n\t                var StatementResponse = (function (_super) {\n\t                    __extends(StatementResponse, _super);\n\t                    function StatementResponse() {\n\t                        _super.call(this);\n\t                        this.currencyCode = \"USD\"; //java.util.Currency.getInstance(Locale.US).getCurrencyCode().toUpperCase();\n\t                    }\n\t                    /**\n\t                     * The currency code.\n\t                     *\n\t                     * @return The currency code.\n\t                     * @see java.util.Currency#getCurrencyCode()\n\t                     */\n\t                    StatementResponse.prototype.getCurrencyCode = function () {\n\t                        return this.currencyCode;\n\t                    };\n\t                    /**\n\t                     * The currency code.\n\t                     *\n\t                     * @param currencyCode The currency code.\n\t                     */\n\t                    StatementResponse.prototype.setCurrencyCode = function (currencyCode) {\n\t                        this.currencyCode = currencyCode;\n\t                    };\n\t                    /**\n\t                     * The transaction list.\n\t                     *\n\t                     * @return The transaction list.\n\t                     */\n\t                    StatementResponse.prototype.getTransactionList = function () {\n\t                        return this.transactionList;\n\t                    };\n\t                    /**\n\t                     * The transaction list.\n\t                     *\n\t                     * @param transactionList The transaction list.\n\t                     */\n\t                    StatementResponse.prototype.setTransactionList = function (transactionList) {\n\t                        this.transactionList = transactionList;\n\t                    };\n\t                    /**\n\t                     * The ledger balance.\n\t                     *\n\t                     * @return The ledger balance.\n\t                     */\n\t                    StatementResponse.prototype.getLedgerBalance = function () {\n\t                        return this.ledgerBalance;\n\t                    };\n\t                    /**\n\t                     * The ledger balance.\n\t                     *\n\t                     * @param ledgerBalance The ledger balance.\n\t                     */\n\t                    StatementResponse.prototype.setLedgerBalance = function (ledgerBalance) {\n\t                        this.ledgerBalance = ledgerBalance;\n\t                    };\n\t                    /**\n\t                     * The available balance.\n\t                     *\n\t                     * @return The available balance.\n\t                     */\n\t                    StatementResponse.prototype.getAvailableBalance = function () {\n\t                        return this.availableBalance;\n\t                    };\n\t                    /**\n\t                     * The available balance.\n\t                     *\n\t                     * @param availableBalance The available balance.\n\t                     */\n\t                    StatementResponse.prototype.setAvailableBalance = function (availableBalance) {\n\t                        this.availableBalance = availableBalance;\n\t                    };\n\t                    /**\n\t                     * Marketing information. (?)\n\t                     *\n\t                     * @return Marketing information.\n\t                     */\n\t                    StatementResponse.prototype.getMarketingInfo = function () {\n\t                        return this.marketingInfo;\n\t                    };\n\t                    /**\n\t                     * Marketing information. (?)\n\t                     *\n\t                     * @param marketingInfo Marketing information.\n\t                     */\n\t                    StatementResponse.prototype.setMarketingInfo = function (marketingInfo) {\n\t                        this.marketingInfo = marketingInfo;\n\t                    };\n\t                    return StatementResponse;\n\t                })(ResponseMessage);\n\t                common.StatementResponse = StatementResponse;\n\t                Element_add(StatementResponse, { name: \"CURDEF\", required: true, order: 0, type: String, read: StatementResponse.prototype.getCurrencyCode, write: StatementResponse.prototype.setCurrencyCode });\n\t                ChildAggregate_add(StatementResponse, { order: 20, type: common.TransactionList, read: StatementResponse.prototype.getTransactionList, write: StatementResponse.prototype.setTransactionList });\n\t                ChildAggregate_add(StatementResponse, { name: \"LEDGERBAL\", order: 30, type: common.BalanceInfo, read: StatementResponse.prototype.getLedgerBalance, write: StatementResponse.prototype.setLedgerBalance });\n\t                ChildAggregate_add(StatementResponse, { name: \"AVAILBAL\", order: 40, type: common.BalanceInfo, read: StatementResponse.prototype.getAvailableBalance, write: StatementResponse.prototype.setAvailableBalance });\n\t                Element_add(StatementResponse, { name: \"MKTGINFO\", order: 50, type: String, read: StatementResponse.prototype.getMarketingInfo, write: StatementResponse.prototype.setMarketingInfo });\n\t            })(common = data.common || (data.common = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var accounts;\n\t                (function (accounts) {\n\t                    /**\n\t                     * Types of well-known sub-accounts.\n\t                     * @see \"Section 13.9.2.4.2, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    (function (SubAccountType) {\n\t                        SubAccountType[SubAccountType[\"CASH\"] = 0] = \"CASH\";\n\t                        SubAccountType[SubAccountType[\"MARGIN\"] = 1] = \"MARGIN\";\n\t                        SubAccountType[SubAccountType[\"SHORT\"] = 2] = \"SHORT\";\n\t                        SubAccountType[SubAccountType[\"OTHER\"] = 3] = \"OTHER\";\n\t                    })(accounts.SubAccountType || (accounts.SubAccountType = {}));\n\t                    var SubAccountType = accounts.SubAccountType;\n\t                    function SubAccountType_fromOfx(ofxVal) {\n\t                        if (\"CASH\" === ofxVal) {\n\t                            return SubAccountType.CASH;\n\t                        }\n\t                        else if (\"MARGIN\" === ofxVal) {\n\t                            return SubAccountType.MARGIN;\n\t                        }\n\t                        else if (\"SHORT\" === ofxVal) {\n\t                            return SubAccountType.SHORT;\n\t                        }\n\t                        else if (\"OTHER\" === ofxVal) {\n\t                            return SubAccountType.OTHER;\n\t                        }\n\t                        else {\n\t                            return null;\n\t                        }\n\t                    }\n\t                    accounts.SubAccountType_fromOfx = SubAccountType_fromOfx;\n\t                })(accounts = investment.accounts || (investment.accounts = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var seclist;\n\t            (function (seclist) {\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                /**\n\t                 * Identifier for a security.\n\t                 * @see \"Section 13.8.1, OFX Spec\"\n\t                 *\n\t                 * @author Jon Perlow\n\t                 */\n\t                var SecurityId = (function () {\n\t                    function SecurityId() {\n\t                    }\n\t                    /**\n\t                     * Gets the unique id for the security. This is a required field according to the OFX spec.\n\t                     *\n\t                     * @return the unique id\n\t                     */\n\t                    SecurityId.prototype.getUniqueId = function () {\n\t                        return this.uniqueId;\n\t                    };\n\t                    /**\n\t                     * Sets the unique id for the security. This is a required field according to the OFX spec.\n\t                     *\n\t                     * @param uniqueId the unique id\n\t                     */\n\t                    SecurityId.prototype.setUniqueId = function (uniqueId) {\n\t                        this.uniqueId = uniqueId;\n\t                    };\n\t                    /**\n\t                     * Gets the type of unique id.\n\t                     *\n\t                     * @return the type of unique id\n\t                     */\n\t                    SecurityId.prototype.getUniqueIdType = function () {\n\t                        return this.uniqueIdType;\n\t                    };\n\t                    /**\n\t                     * Sets the type of unique id.\n\t                     *\n\t                     * @param uniqueIdType the type of unique id\n\t                     */\n\t                    SecurityId.prototype.setUniqueIdType = function (uniqueIdType) {\n\t                        this.uniqueIdType = uniqueIdType;\n\t                    };\n\t                    return SecurityId;\n\t                })();\n\t                seclist.SecurityId = SecurityId;\n\t                Aggregate_add(SecurityId, \"SECID\");\n\t                Element_add(SecurityId, { name: \"UNIQUEID\", required: true, order: 10, type: String, read: SecurityId.prototype.getUniqueId, write: SecurityId.prototype.setUniqueId });\n\t                Element_add(SecurityId, { name: \"UNIQUEIDTYPE\", required: true, order: 20, type: String, read: SecurityId.prototype.getUniqueIdType, write: SecurityId.prototype.setUniqueIdType });\n\t            })(seclist = data.seclist || (data.seclist = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../../../meta/Element_add'/>\n\t///<reference path='BasePosition'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var positions;\n\t                (function (positions) {\n\t                    var SubAccountType_fromOfx = ofx4js.domain.data.investment.accounts.SubAccountType_fromOfx;\n\t                    var SecurityId = ofx4js.domain.data.seclist.SecurityId;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                    var Element_add = ofx4js.meta.Element_add;\n\t                    /**\n\t                     * Class for the investment position aggregate.\n\t                     * @see \"Section 13.9.2.6.1, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var InvestmentPosition = (function () {\n\t                        function InvestmentPosition() {\n\t                        }\n\t                        /**\n\t                         * Gets the security id for the position. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.6.1, OFX Spec\"\n\t                         *\n\t                         * @return the security id for the position\n\t                         */\n\t                        InvestmentPosition.prototype.getSecurityId = function () {\n\t                            return this.securityId;\n\t                        };\n\t                        /**\n\t                         * Sets the security id for the position. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.6.1, OFX Spec\"\n\t                         *\n\t                         * @param securityId the security id for the position\n\t                         */\n\t                        InvestmentPosition.prototype.setSecurityId = function (securityId) {\n\t                            this.securityId = securityId;\n\t                        };\n\t                        /**\n\t                         * Gets the sub-account type. One of \"CASH\", \"MARGIN\", \"SHORT\", \"OTHER\". This is a required field\n\t                         * according to the OFX spec.\n\t                         * @see \"Section 13.9.2.6.1, OFX Spec\"\n\t                         *\n\t                         * @return the sub-account type\n\t                         */\n\t                        InvestmentPosition.prototype.getHeldInAccount = function () {\n\t                            return this.heldInAccount;\n\t                        };\n\t                        /**\n\t                         * Sets the sub-account type. One of \"CASH\", \"MARGIN\", \"SHORT\", \"OTHER\". This is a required field\n\t                         * according to the OFX spec.\n\t                         * @see \"Section 13.9.2.6.1, OFX Spec\"\n\t                         *\n\t                         * @param heldInAccount the sub-account type\n\t                         */\n\t                        InvestmentPosition.prototype.setHeldInAccount = function (heldInAccount) {\n\t                            this.heldInAccount = heldInAccount;\n\t                        };\n\t                        /**\n\t                         * Gets the sub-account type as one of the well-known types.\n\t                         * @see \"Section 13.9.2.6.1, OFX Spec\"\n\t                         *\n\t                         * @return the sub-account type or null if it's not one of the well-known types\n\t                         */\n\t                        InvestmentPosition.prototype.getHeldInAccountEnum = function () {\n\t                            return SubAccountType_fromOfx(this.getHeldInAccount());\n\t                        };\n\t                        /**\n\t                         * Gets the position type. One of SHORT or LONG. This is a required field according to the OFX\n\t                         * spec.\n\t                         * @see \"Section 13.9.2.6.1, OFX Spec\"\n\t                         *\n\t                         * @return the position type\n\t                         */\n\t                        InvestmentPosition.prototype.getPositionType = function () {\n\t                            return this.positionType;\n\t                        };\n\t                        /**\n\t                         * Sets the position type. One of SHORT or LONG. This is a required field according to the OFX\n\t                         * spec.\n\t                         * @see \"Section 13.9.2.6.1, OFX Spec\"\n\t                         *\n\t                         * @param positionType the position type\n\t                         */\n\t                        InvestmentPosition.prototype.setPositionType = function (positionType) {\n\t                            this.positionType = positionType;\n\t                        };\n\t                        /**\n\t                         * Gets the position type as one of the well-known types.\n\t                         * @see \"Section 13.9.2.6.1, OFX Spec\"\n\t                         *\n\t                         * @return the position type or null if it's not one of the well-known types\n\t                         */\n\t                        InvestmentPosition.prototype.getPositionTypeEnum = function () {\n\t                            return positions.PositionType_fromOfx(this.getPositionType());\n\t                        };\n\t                        /**\n\t                         * Gets the number of units in the position. For stocks, mutual funds, and others, this\n\t                         * is the number of shares. For bonds, this is the face value. For options, this is the number of\n\t                         * contacts. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.6.1, OFX Spec\"\n\t                         *\n\t                         * @return the number of units in the position\n\t                         */\n\t                        InvestmentPosition.prototype.getUnits = function () {\n\t                            return this.units;\n\t                        };\n\t                        /**\n\t                         * Sets the number of units in the position. For stocks, mutual funds, and others, this\n\t                         * is the number of shares. For bonds, this is the face value. For options, this is the number of\n\t                         * contacts. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.6.1, OFX Spec\"\n\t                         *\n\t                         * @param units the number of units in the position\n\t                         */\n\t                        InvestmentPosition.prototype.setUnits = function (units) {\n\t                            this.units = units;\n\t                        };\n\t                        /**\n\t                         * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n\t                         * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n\t                         * per contact) price. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.6.1, OFX Spec\"\n\t                         *\n\t                         * @return the per unit price\n\t                         */\n\t                        InvestmentPosition.prototype.getUnitPrice = function () {\n\t                            return this.unitPrice;\n\t                        };\n\t                        /**\n\t                         * Sets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n\t                         * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n\t                         * per contact) price. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.6.1, OFX Spec\"\n\t                         *\n\t                         * @param unitPrice the per unit price\n\t                         */\n\t                        InvestmentPosition.prototype.setUnitPrice = function (unitPrice) {\n\t                            this.unitPrice = unitPrice;\n\t                        };\n\t                        /**\n\t                         * Gets the market value of this position. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.6.1, OFX Spec\"\n\t                         *\n\t                         * @return the market value of the position\n\t                         */\n\t                        InvestmentPosition.prototype.getMarketValue = function () {\n\t                            return this.marketValue;\n\t                        };\n\t                        /**\n\t                         * Sets the market value of this position. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.6.1, OFX Spec\"\n\t                         *\n\t                         * @param marketValue the market value of the position\n\t                         */\n\t                        InvestmentPosition.prototype.setMarketValue = function (marketValue) {\n\t                            this.marketValue = marketValue;\n\t                        };\n\t                        /**\n\t                         * Gets the date and time of the unit price and market value. This is a required field according\n\t                         * to the OFX spec.\n\t                         * @see \"Section 13.9.2.6.1, OFX Spec\"\n\t                         *\n\t                         * @return the market value date\n\t                         */\n\t                        InvestmentPosition.prototype.getMarketValueDate = function () {\n\t                            return this.marketValueDate;\n\t                        };\n\t                        /**\n\t                         * Sets the date and time of the unit price and market value. This is a required field according\n\t                         * to the OFX spec.\n\t                         * @see \"Section 13.9.2.6.1, OFX Spec\"\n\t                         *\n\t                         * @param marketValueDate the market value date\n\t                         */\n\t                        InvestmentPosition.prototype.setMarketValueDate = function (marketValueDate) {\n\t                            this.marketValueDate = marketValueDate;\n\t                        };\n\t                        /**\n\t                         * Gets the currency code of the position. This is an optional field according to the OFX spec.\n\t                         * If not present, it's the default currency of the account.\n\t                         * @see \"Section 13.9.2.6.1, OFX Spec\"\n\t                         *\n\t                         * @return the currency code of the position or null for the default currency\n\t                         */\n\t                        InvestmentPosition.prototype.getCurrencyCode = function () {\n\t                            return this.currencyCode;\n\t                        };\n\t                        /**\n\t                         * Sets the currency code of the position. This is an optional field according to the OFX spec.\n\t                         * If not present, it's the default currency of the account.\n\t                         * @see \"Section 13.9.2.6.1, OFX Spec\"\n\t                         *\n\t                         * @param currencyCode the currency code of the position or null for the default currency\n\t                         */\n\t                        InvestmentPosition.prototype.setCurrencyCode = function (currencyCode) {\n\t                            this.currencyCode = currencyCode;\n\t                        };\n\t                        /**\n\t                         * Gets the memo associated with the position. This is an optional field according to the OFX\n\t                         * spec.\n\t                         * @see \"Section 13.9.2.6.1, OFX Spec\"\n\t                         *\n\t                         * @return the memo\n\t                         */\n\t                        InvestmentPosition.prototype.getMemo = function () {\n\t                            return this.memo;\n\t                        };\n\t                        /**\n\t                         * Sets the memo associated with the position. This is an optional field according to the OFX\n\t                         * spec.\n\t                         * @see \"Section 13.9.2.6.1, OFX Spec\"\n\t                         *\n\t                         * @param memo the memo\n\t                         */\n\t                        InvestmentPosition.prototype.setMemo = function (memo) {\n\t                            this.memo = memo;\n\t                        };\n\t                        /**\n\t                         * Gets the 401K source for the sale. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n\t                         * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n\t                         * according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the 401k source\n\t                         */\n\t                        InvestmentPosition.prototype.get401kSource = function () {\n\t                            return this.inv401kSource;\n\t                        };\n\t                        /**\n\t                         * Sets the 401K source for the sale. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n\t                         * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n\t                         * according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param inv401kSource the 401k source\n\t                         */\n\t                        InvestmentPosition.prototype.set401kSource = function (inv401kSource) {\n\t                            this.inv401kSource = inv401kSource;\n\t                        };\n\t                        /**\n\t                         * Gets the 401k source as one of the well-known types.\n\t                         *\n\t                         * @return the 401k source or null if it's not one of the well-known types\n\t                         */\n\t                        InvestmentPosition.prototype.get401kSourceEnum = function () {\n\t                            return positions.Inv401KSource_fromOfx(this.get401kSource());\n\t                        };\n\t                        return InvestmentPosition;\n\t                    })();\n\t                    positions.InvestmentPosition = InvestmentPosition;\n\t                    Aggregate_add(InvestmentPosition, \"INVPOS\");\n\t                    ChildAggregate_add(InvestmentPosition, { required: true, order: 10, type: SecurityId, read: InvestmentPosition.prototype.getSecurityId, write: InvestmentPosition.prototype.setSecurityId });\n\t                    Element_add(InvestmentPosition, { name: \"HELDINACCT\", required: true, order: 20, type: String, read: InvestmentPosition.prototype.getHeldInAccount, write: InvestmentPosition.prototype.setHeldInAccount });\n\t                    Element_add(InvestmentPosition, { name: \"POSTYPE\", required: true, order: 30, type: String, read: InvestmentPosition.prototype.getPositionType, write: InvestmentPosition.prototype.setPositionType });\n\t                    Element_add(InvestmentPosition, { name: \"UNITS\", required: true, order: 40, type: Number, read: InvestmentPosition.prototype.getUnits, write: InvestmentPosition.prototype.setUnits });\n\t                    Element_add(InvestmentPosition, { name: \"UNITPRICE\", required: true, order: 50, type: Number, read: InvestmentPosition.prototype.getUnitPrice, write: InvestmentPosition.prototype.setUnitPrice });\n\t                    Element_add(InvestmentPosition, { name: \"MKTVAL\", required: true, order: 60, type: Number, read: InvestmentPosition.prototype.getMarketValue, write: InvestmentPosition.prototype.setMarketValue });\n\t                    Element_add(InvestmentPosition, { name: \"DTPRICEASOF\", required: true, order: 70, type: Date, read: InvestmentPosition.prototype.getMarketValueDate, write: InvestmentPosition.prototype.setMarketValueDate });\n\t                    Element_add(InvestmentPosition, { name: \"CURRENCY\", order: 80, type: String, read: InvestmentPosition.prototype.getCurrencyCode, write: InvestmentPosition.prototype.setCurrencyCode });\n\t                    Element_add(InvestmentPosition, { name: \"MEMO\", order: 90, type: String, read: InvestmentPosition.prototype.getMemo, write: InvestmentPosition.prototype.setMemo });\n\t                    Element_add(InvestmentPosition, { name: \"INV401KSOURCE\", order: 100, type: String, read: InvestmentPosition.prototype.get401kSource, write: InvestmentPosition.prototype.set401kSource });\n\t                })(positions = investment.positions || (investment.positions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var positions;\n\t                (function (positions) {\n\t                    /**\n\t                     * Types of 401(k) sources.\n\t                     * @see \"Section 13.9.2.4.2, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    (function (Inv401KSource) {\n\t                        Inv401KSource[Inv401KSource[\"PRETAX\"] = 0] = \"PRETAX\";\n\t                        Inv401KSource[Inv401KSource[\"AFTER_TAX\"] = 1] = \"AFTER_TAX\";\n\t                        Inv401KSource[Inv401KSource[\"MATCH\"] = 2] = \"MATCH\";\n\t                        Inv401KSource[Inv401KSource[\"PROFIT_SHARING\"] = 3] = \"PROFIT_SHARING\";\n\t                        Inv401KSource[Inv401KSource[\"ROLLOVER\"] = 4] = \"ROLLOVER\";\n\t                        Inv401KSource[Inv401KSource[\"OTHER_VEST\"] = 5] = \"OTHER_VEST\";\n\t                        Inv401KSource[Inv401KSource[\"OTHER_NONVEST\"] = 6] = \"OTHER_NONVEST\";\n\t                    })(positions.Inv401KSource || (positions.Inv401KSource = {}));\n\t                    var Inv401KSource = positions.Inv401KSource;\n\t                    var ofxMapping = {\n\t                        \"PRETAX\": Inv401KSource.PRETAX,\n\t                        \"AFTERTAX\": Inv401KSource.AFTER_TAX,\n\t                        \"MATCH\": Inv401KSource.MATCH,\n\t                        \"PROFITSHARING\": Inv401KSource.PROFIT_SHARING,\n\t                        \"ROLLOVER\": Inv401KSource.ROLLOVER,\n\t                        \"OTHERVEST\": Inv401KSource.OTHER_VEST,\n\t                        \"OTHERNONVEST\": Inv401KSource.OTHER_NONVEST,\n\t                    };\n\t                    function Inv401KSource_fromOfx(ofxVal) {\n\t                        return ofxVal == null ? null : ofxMapping[ofxVal];\n\t                    }\n\t                    positions.Inv401KSource_fromOfx = Inv401KSource_fromOfx;\n\t                })(positions = investment.positions || (investment.positions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var positions;\n\t                (function (positions) {\n\t                    /**\n\t                     * Type of position.\n\t                     * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    (function (PositionType) {\n\t                        PositionType[PositionType[\"LONG\"] = 0] = \"LONG\";\n\t                        PositionType[PositionType[\"SHORT\"] = 1] = \"SHORT\";\n\t                    })(positions.PositionType || (positions.PositionType = {}));\n\t                    var PositionType = positions.PositionType;\n\t                    function PositionType_fromOfx(ofxVal) {\n\t                        if (\"LONG\" === ofxVal) {\n\t                            return PositionType.LONG;\n\t                        }\n\t                        else if (\"SHORT\" === ofxVal) {\n\t                            return PositionType.SHORT;\n\t                        }\n\t                        else {\n\t                            return null;\n\t                        }\n\t                    }\n\t                    positions.PositionType_fromOfx = PositionType_fromOfx;\n\t                })(positions = investment.positions || (investment.positions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../accounts/SubAccountType'/>\n\t///<reference path='../../seclist/SecurityId'/>\n\t///<reference path='InvestmentPosition'/>\n\t///<reference path='Inv401KSource'/>\n\t///<reference path='PositionType'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var positions;\n\t                (function (positions) {\n\t                    var SubAccountType_fromOfx = ofx4js.domain.data.investment.accounts.SubAccountType_fromOfx;\n\t                    var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                    /**\n\t                     * Base class for the various types of positions.\n\t                     * <br>\n\t                     * This class exposes a read-only view of the flattened aggregates that are\n\t                     * common to all positions as a convenience to application\n\t                     * developers who may not find the ofx aggregation model intuitive.\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var BasePosition = (function () {\n\t                        function BasePosition() {\n\t                        }\n\t                        /**\n\t                         * Gets the investment position child aggregate.\n\t                         *\n\t                         * @return the investment position child aggregate\n\t                         */\n\t                        BasePosition.prototype.getInvestmentPosition = function () {\n\t                            return this.investmentPosition;\n\t                        };\n\t                        /**\n\t                         * Sets the investment position child aggregate.\n\t                         *\n\t                         * @param investmentPosition the investment position child aggregate\n\t                         */\n\t                        BasePosition.prototype.setInvestmentPosition = function (investmentPosition) {\n\t                            this.investmentPosition = investmentPosition;\n\t                        };\n\t                        /**\n\t                         * Gets the security id for the position. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.6.1, OFX Spec\"\n\t                         *\n\t                         * @return the security id for the position\n\t                         */\n\t                        BasePosition.prototype.getSecurityId = function () {\n\t                            return this.getInvestmentPosition().getSecurityId();\n\t                        };\n\t                        /**\n\t                         * Gets the sub-account type. One of \"CASH\", \"MARGIN\", \"SHORT\", \"OTHER\". This is a required field\n\t                         * according to the OFX spec.\n\t                         * @see \"Section 13.9.2.6.1, OFX Spec\"\n\t                         *\n\t                         * @return the sub-account type\n\t                         */\n\t                        BasePosition.prototype.getHeldInAccount = function () {\n\t                            return this.getInvestmentPosition().getHeldInAccount();\n\t                        };\n\t                        /**\n\t                         * Gets the sub-account type as one of the well-known types.\n\t                         * @see \"Section 13.9.2.6.1, OFX Spec\"\n\t                         *\n\t                         * @return the sub-account type or null if it's not one of the well-known types\n\t                         */\n\t                        BasePosition.prototype.getHeldInAccountEnum = function () {\n\t                            return SubAccountType_fromOfx(this.getHeldInAccount());\n\t                        };\n\t                        /**\n\t                         * Gets the position type. One of SHORT or LONG. This is a required field according to the OFX\n\t                         * spec.\n\t                         * @see \"Section 13.9.2.6.1, OFX Spec\"\n\t                         *\n\t                         * @return the position type\n\t                         */\n\t                        BasePosition.prototype.getPositionType = function () {\n\t                            return this.getInvestmentPosition().getPositionType();\n\t                        };\n\t                        /**\n\t                         * Gets the position type as one of the well-known types.\n\t                         * @see \"Section 13.9.2.6.1, OFX Spec\"\n\t                         *\n\t                         * @return the position type or null if it's not one of the well-known types\n\t                         */\n\t                        BasePosition.prototype.getPositionTypeEnum = function () {\n\t                            return positions.PositionType_fromOfx(this.getPositionType());\n\t                        };\n\t                        /**\n\t                         * Gets the number of units in the position. For stocks, mutual funds, and others, this\n\t                         * is the number of shares. For bonds, this is the face value. For options, this is the number of\n\t                         * contacts. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.6.1, OFX Spec\"\n\t                         *\n\t                         * @return the number of units in the position\n\t                         */\n\t                        BasePosition.prototype.getUnits = function () {\n\t                            return this.getInvestmentPosition().getUnits();\n\t                        };\n\t                        /**\n\t                         * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n\t                         * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n\t                         * per contact) price. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.6.1, OFX Spec\"\n\t                         *\n\t                         * @return the per unit price\n\t                         */\n\t                        BasePosition.prototype.getUnitPrice = function () {\n\t                            return this.getInvestmentPosition().getUnitPrice();\n\t                        };\n\t                        /**\n\t                         * Gets the market value of this position. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.6.1, OFX Spec\"\n\t                         *\n\t                         * @return the market value of the position\n\t                         */\n\t                        BasePosition.prototype.getMarketValue = function () {\n\t                            return this.getInvestmentPosition().getMarketValue();\n\t                        };\n\t                        /**\n\t                         * Gets the date and time of the unit price and market value. This is a required field according\n\t                         * to the OFX spec.\n\t                         * @see \"Section 13.9.2.6.1, OFX Spec\"\n\t                         *\n\t                         * @return the market value date\n\t                         */\n\t                        BasePosition.prototype.getMarketValueDate = function () {\n\t                            return this.getInvestmentPosition().getMarketValueDate();\n\t                        };\n\t                        /**\n\t                         * Gets the currency code of the position. This is an optional field according to the OFX spec.\n\t                         * If not present, it's the default currency of the account.\n\t                         * @see \"Section 13.9.2.6.1, OFX Spec\"\n\t                         *\n\t                         * @return the currency code of the position or null for the default currency\n\t                         */\n\t                        BasePosition.prototype.getCurrencyCode = function () {\n\t                            return this.getInvestmentPosition().getCurrencyCode();\n\t                        };\n\t                        /**\n\t                         * Gets the memo associated with the position. This is an optional field according to the OFX\n\t                         * spec.\n\t                         * @see \"Section 13.9.2.6.1, OFX Spec\"\n\t                         *\n\t                         * @return the memo\n\t                         */\n\t                        BasePosition.prototype.getMemo = function () {\n\t                            return this.getInvestmentPosition().getMemo();\n\t                        };\n\t                        /**\n\t                         * Gets the 401K source for the sale. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n\t                         * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n\t                         * according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the 401k source\n\t                         */\n\t                        BasePosition.prototype.get401kSource = function () {\n\t                            return this.getInvestmentPosition().get401kSource();\n\t                        };\n\t                        /**\n\t                         * Gets the 401k source as one of the well-known types.\n\t                         *\n\t                         * @return the 401k source or null if it's not one of the well-known types\n\t                         */\n\t                        BasePosition.prototype.get401kSourceEnum = function () {\n\t                            return positions.Inv401KSource_fromOfx(this.get401kSource());\n\t                        };\n\t                        return BasePosition;\n\t                    })();\n\t                    positions.BasePosition = BasePosition;\n\t                    ChildAggregate_add(BasePosition, { required: true, order: 10, type: positions.InvestmentPosition, read: BasePosition.prototype.getInvestmentPosition, write: BasePosition.prototype.setInvestmentPosition });\n\t                })(positions = investment.positions || (investment.positions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='BasePosition'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var positions;\n\t                (function (positions_1) {\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                    /**\n\t                     * Aggregate for a list of invesment positions.\n\t                     * @see \"Section 13.9.2.2, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var InvestmentPositionList = (function () {\n\t                        function InvestmentPositionList() {\n\t                        }\n\t                        /**\n\t                         * Gets the list of positions\n\t                         *\n\t                         * @return the list of positions\n\t                         */\n\t                        InvestmentPositionList.prototype.getPositions = function () {\n\t                            return this.positions;\n\t                        };\n\t                        /**\n\t                         * Sets the list of positions.\n\t                         *\n\t                         * @param positions the list of positions\n\t                         */\n\t                        InvestmentPositionList.prototype.setPositions = function (positions) {\n\t                            this.positions = positions;\n\t                        };\n\t                        return InvestmentPositionList;\n\t                    })();\n\t                    positions_1.InvestmentPositionList = InvestmentPositionList;\n\t                    Aggregate_add(InvestmentPositionList, \"INVPOSLIST\");\n\t                    ChildAggregate_add(InvestmentPositionList, { order: 10, type: Array, collectionEntryType: positions_1.BasePosition, read: InvestmentPositionList.prototype.getPositions, write: InvestmentPositionList.prototype.setPositions });\n\t                })(positions = investment.positions || (investment.positions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var seclist;\n\t            (function (seclist) {\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                /**\n\t                 * Info about a security.\n\t                 * @see \"Section 13.8.5.1, OFX Spec\"\n\t                 *\n\t                 * @author Jon Perlow\n\t                 */\n\t                var SecurityInfo = (function () {\n\t                    function SecurityInfo() {\n\t                    }\n\t                    /**\n\t                     * Gets the unique security id for the security. This is a required field according to the OFX\n\t                     * spec.\n\t                     *\n\t                     * @return the security id\n\t                     */\n\t                    SecurityInfo.prototype.getSecurityId = function () {\n\t                        return this.securityId;\n\t                    };\n\t                    /**\n\t                     * Sets the unique security id for the security. This is a required field according to the OFX\n\t                     * spec.\n\t                     *\n\t                     * @param securityId the security id\n\t                     */\n\t                    SecurityInfo.prototype.setSecurityId = function (securityId) {\n\t                        this.securityId = securityId;\n\t                    };\n\t                    /**\n\t                     * Gets the full name of the security. This is a required field according to the OFX spec.\n\t                     *\n\t                     * @return the full name of the security\n\t                     */\n\t                    SecurityInfo.prototype.getSecurityName = function () {\n\t                        return this.securityName;\n\t                    };\n\t                    /**\n\t                     * Sets the full name of the security. This is a required field according to the OFX spec.\n\t                     *\n\t                     * @param securityName the full name of the security\n\t                     */\n\t                    SecurityInfo.prototype.setSecurityName = function (securityName) {\n\t                        this.securityName = securityName;\n\t                    };\n\t                    /**\n\t                     * Gets the ticker symbol for the security. This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @return the ticket symbol or null if there's no ticker symbol\n\t                     */\n\t                    SecurityInfo.prototype.getTickerSymbol = function () {\n\t                        return this.tickerSymbol;\n\t                    };\n\t                    /**\n\t                     * Sets the ticker symbol for the security. This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @param tickerSymbol the ticket symbol or null if there's no ticker symbol\n\t                     */\n\t                    SecurityInfo.prototype.setTickerSymbol = function (tickerSymbol) {\n\t                        this.tickerSymbol = tickerSymbol;\n\t                    };\n\t                    /**\n\t                     * Gets the FI ID number for the security. This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @return the FI ID number for the security\n\t                     */\n\t                    SecurityInfo.prototype.getFiId = function () {\n\t                        return this.fiId;\n\t                    };\n\t                    /**\n\t                     * Sets the FI ID number for the security. This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @param fiId the FI ID number for the security\n\t                     */\n\t                    SecurityInfo.prototype.setFiId = function (fiId) {\n\t                        this.fiId = fiId;\n\t                    };\n\t                    /**\n\t                     * Gets the rating of the security. This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @return the rating\n\t                     */\n\t                    SecurityInfo.prototype.getRating = function () {\n\t                        return this.rating;\n\t                    };\n\t                    /**\n\t                     * Sets the rating of the security. This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @param rating the rating\n\t                     */\n\t                    SecurityInfo.prototype.setRating = function (rating) {\n\t                        this.rating = rating;\n\t                    };\n\t                    /**\n\t                     * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n\t                     * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n\t                     * per contact) price. This is a noptional field according to the OFX spec.\n\t                     * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                     *\n\t                     * @return the per unit price\n\t                     */\n\t                    SecurityInfo.prototype.getUnitPrice = function () {\n\t                        return this.unitPrice;\n\t                    };\n\t                    /**\n\t                     * Sets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n\t                     * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n\t                     * per contact) price. This is an optional field according to the OFX spec.\n\t                     * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                     *\n\t                     * @param unitPrice the per unit price\n\t                     */\n\t                    SecurityInfo.prototype.setUnitPrice = function (unitPrice) {\n\t                        this.unitPrice = unitPrice;\n\t                    };\n\t                    /**\n\t                     * Gets the date as-of for the unit price. This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @return the date as-of for the unit price\n\t                     */\n\t                    SecurityInfo.prototype.getUnitPriceAsOfDate = function () {\n\t                        return this.marketValueDate;\n\t                    };\n\t                    /**\n\t                     * Sets the date as-of for the unit price. This is an optional field according to the OFX spec.\n\t                     *\n\t                     * param marketValueDate the date as-of for the unit price\n\t                     */\n\t                    SecurityInfo.prototype.setUnitPriceAsOfDate = function (marketValueDate) {\n\t                        this.marketValueDate = marketValueDate;\n\t                    };\n\t                    /**\n\t                     * Gets the overriding currency code for the security. If not set, implies the default currency.\n\t                     * This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @return the overriding currency code or null to mean the default currency\n\t                     */\n\t                    SecurityInfo.prototype.getCurrencyCode = function () {\n\t                        return this.currencyCode;\n\t                    };\n\t                    /**\n\t                     * Sets the overriding currency code for the security. If not set, implies the default currency.\n\t                     * This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @param currencyCode the overriding currency code or null to mean the default currency\n\t                     */\n\t                    SecurityInfo.prototype.setCurrencyCode = function (currencyCode) {\n\t                        this.currencyCode = currencyCode;\n\t                    };\n\t                    /**\n\t                     * Gets any memo associated with the security. This is an optional field according to the OFX\n\t                     * spec.\n\t                     *\n\t                     * @return the memo\n\t                     */\n\t                    SecurityInfo.prototype.getMemo = function () {\n\t                        return this.memo;\n\t                    };\n\t                    /**\n\t                     * Sets any memo associated with the security. This is an optional field according to the OFX\n\t                     * spec.\n\t                     *\n\t                     * @param memo the memo\n\t                     */\n\t                    SecurityInfo.prototype.setMemo = function (memo) {\n\t                        this.memo = memo;\n\t                    };\n\t                    return SecurityInfo;\n\t                })();\n\t                seclist.SecurityInfo = SecurityInfo;\n\t                Aggregate_add(SecurityInfo, \"SECINFO\");\n\t                ChildAggregate_add(SecurityInfo, { required: true, order: 10, type: seclist.SecurityId, read: SecurityInfo.prototype.getSecurityId, write: SecurityInfo.prototype.setSecurityId });\n\t                Element_add(SecurityInfo, { name: \"SECNAME\", required: true, order: 20, type: String, read: SecurityInfo.prototype.getSecurityName, write: SecurityInfo.prototype.setSecurityName });\n\t                Element_add(SecurityInfo, { name: \"TICKER\", order: 30, type: String, read: SecurityInfo.prototype.getTickerSymbol, write: SecurityInfo.prototype.setTickerSymbol });\n\t                Element_add(SecurityInfo, { name: \"FIID\", order: 40, type: String, read: SecurityInfo.prototype.getFiId, write: SecurityInfo.prototype.setFiId });\n\t                Element_add(SecurityInfo, { name: \"RATING\", order: 50, type: String, read: SecurityInfo.prototype.getRating, write: SecurityInfo.prototype.setRating });\n\t                Element_add(SecurityInfo, { name: \"UNITPRICE\", order: 60, type: Number, read: SecurityInfo.prototype.getUnitPrice, write: SecurityInfo.prototype.setUnitPrice });\n\t                Element_add(SecurityInfo, { name: \"DTASOF\", order: 70, type: Date, read: SecurityInfo.prototype.getUnitPriceAsOfDate, write: SecurityInfo.prototype.setUnitPriceAsOfDate });\n\t                Element_add(SecurityInfo, { name: \"CURRENCY\", order: 80, type: String, read: SecurityInfo.prototype.getCurrencyCode, write: SecurityInfo.prototype.setCurrencyCode });\n\t                Element_add(SecurityInfo, { name: \"MEMO\", order: 90, type: String, read: SecurityInfo.prototype.getMemo, write: SecurityInfo.prototype.setMemo });\n\t            })(seclist = data.seclist || (data.seclist = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='SecurityInfo'/>\n\t///<reference path='SecurityId'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var seclist;\n\t            (function (seclist) {\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                /**\n\t                 * Base class for info about the various types of securities.\n\t                 * @see \"Section 13.8.5.1, OFX Spec\"\n\t                 * <br>\n\t                 * This class exposes a read-only view of the flattened aggregates that are\n\t                 * common to all security info as a convenience to application\n\t                 * developers who may not find the ofx aggregation model intuitive.\n\t                 *\n\t                 * @author Jon Perlow\n\t                 */\n\t                var BaseSecurityInfo = (function () {\n\t                    function BaseSecurityInfo() {\n\t                    }\n\t                    /**\n\t                     * Gets the security info aggregate.\n\t                     *\n\t                     * @return the security info aggregate.\n\t                     */\n\t                    BaseSecurityInfo.prototype.getSecurityInfo = function () {\n\t                        return this.securityInfo;\n\t                    };\n\t                    /**\n\t                     * Sets the security info aggregate.\n\t                     *\n\t                     * @param securityInfo the security info aggregate.\n\t                     */\n\t                    BaseSecurityInfo.prototype.setSecurityInfo = function (securityInfo) {\n\t                        this.securityInfo = securityInfo;\n\t                    };\n\t                    /**\n\t                     * Gets the unique security id for the security. This is a required field according to the OFX\n\t                     * spec.\n\t                     *\n\t                     * @return the security id\n\t                     */\n\t                    BaseSecurityInfo.prototype.getSecurityId = function () {\n\t                        return this.getSecurityInfo().getSecurityId();\n\t                    };\n\t                    /**\n\t                     * Gets the full name of the security. This is a required field according to the OFX spec.\n\t                     *\n\t                     * @return the full name of the security.\n\t                     */\n\t                    BaseSecurityInfo.prototype.getSecurityName = function () {\n\t                        return this.getSecurityInfo().getSecurityName();\n\t                    };\n\t                    /**\n\t                     * Gets the ticker symbol for the security. This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @return the ticket symbol or null if there's no ticker symbol\n\t                     */\n\t                    BaseSecurityInfo.prototype.getTickerSymbol = function () {\n\t                        return this.getSecurityInfo().getTickerSymbol();\n\t                    };\n\t                    /**\n\t                     * Gets the FI ID number for the security. This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @return the FI ID number for the security\n\t                     */\n\t                    BaseSecurityInfo.prototype.getFiId = function () {\n\t                        return this.getSecurityInfo().getFiId();\n\t                    };\n\t                    /**\n\t                     * Gets the rating of the security. This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @return the rating\n\t                     */\n\t                    BaseSecurityInfo.prototype.getRating = function () {\n\t                        return this.getSecurityInfo().getRating();\n\t                    };\n\t                    /**\n\t                     * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n\t                     * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n\t                     * per contact) price. This is a noptional field according to the OFX spec.\n\t                     * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                     *\n\t                     * @return the per unit price\n\t                     */\n\t                    BaseSecurityInfo.prototype.getUnitPrice = function () {\n\t                        return this.getSecurityInfo().getUnitPrice();\n\t                    };\n\t                    /**\n\t                     * Gets the date as-of for the unit price. This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @return the date as-of for the unit price\n\t                     */\n\t                    BaseSecurityInfo.prototype.getUnitPriceAsOfDate = function () {\n\t                        return this.getSecurityInfo().getUnitPriceAsOfDate();\n\t                    };\n\t                    /**\n\t                     * Gets the overriding currency code for the security. If not set, implies the default currency.\n\t                     * This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @return the overriding currency code or null to mean the default currency\n\t                     */\n\t                    BaseSecurityInfo.prototype.getCurrencyCode = function () {\n\t                        return this.getSecurityInfo().getCurrencyCode();\n\t                    };\n\t                    /**\n\t                     * Gets any memo associated with the security. This is an optional field according to the OFX\n\t                     * spec.\n\t                     *\n\t                     * @return the memo\n\t                     */\n\t                    BaseSecurityInfo.prototype.getMemo = function () {\n\t                        return this.getSecurityInfo().getMemo();\n\t                    };\n\t                    return BaseSecurityInfo;\n\t                })();\n\t                seclist.BaseSecurityInfo = BaseSecurityInfo;\n\t                ChildAggregate_add(BaseSecurityInfo, { required: true, order: 10, type: seclist.SecurityInfo, read: BaseSecurityInfo.prototype.getSecurityInfo, write: BaseSecurityInfo.prototype.setSecurityInfo });\n\t            })(seclist = data.seclist || (data.seclist = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\t///<reference path='BaseSecurityInfo'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var seclist;\n\t            (function (seclist) {\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                /**\n\t                 * Aggregate for a list of securities.\n\t                 * @see \"Section 13.8.4, OFX Spec\"\n\t                 *\n\t                 * @author Jon Perlow\n\t                 */\n\t                var SecurityList = (function () {\n\t                    function SecurityList() {\n\t                    }\n\t                    SecurityList.prototype.getSecurityInfos = function () {\n\t                        return this.securityInfos;\n\t                    };\n\t                    SecurityList.prototype.setSecurityInfos = function (securityInfos) {\n\t                        this.securityInfos = securityInfos;\n\t                    };\n\t                    return SecurityList;\n\t                })();\n\t                seclist.SecurityList = SecurityList;\n\t                Aggregate_add(SecurityList, \"SECLIST\");\n\t                ChildAggregate_add(SecurityList, { order: 10, type: Array, collectionEntryType: seclist.BaseSecurityInfo, read: SecurityList.prototype.getSecurityInfos, write: SecurityList.prototype.setSecurityInfos });\n\t            })(seclist = data.seclist || (data.seclist = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../ResponseMessage'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var seclist;\n\t            (function (seclist) {\n\t                var ResponseMessage = ofx4js.domain.data.ResponseMessage;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                /**\n\t                 * Security list response. This is an empty aggregate. The actual security information is included\n\t                 * in the \"SECLIST\" aggregate.\n\t                 * @see \"Section 13.8.3, OFX Spec\"\n\t                 *\n\t                 * @author Jon Perlow\n\t                 */\n\t                var SecurityListResponse = (function (_super) {\n\t                    __extends(SecurityListResponse, _super);\n\t                    function SecurityListResponse() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    SecurityListResponse.prototype.getResponseMessageName = function () {\n\t                        return \"security list\";\n\t                    };\n\t                    return SecurityListResponse;\n\t                })(ResponseMessage);\n\t                seclist.SecurityListResponse = SecurityListResponse;\n\t                Aggregate_add(SecurityListResponse, \"SECLISTRS\");\n\t            })(seclist = data.seclist || (data.seclist = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var transactions;\n\t                (function (transactions) {\n\t                    /**\n\t                     * Type of investment transaction.\n\t                     * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    (function (TransactionType) {\n\t                        TransactionType[TransactionType[\"BUY_DEBT\"] = 0] = \"BUY_DEBT\";\n\t                        TransactionType[TransactionType[\"BUY_MUTUAL_FUND\"] = 1] = \"BUY_MUTUAL_FUND\";\n\t                        TransactionType[TransactionType[\"BUY_OPTION\"] = 2] = \"BUY_OPTION\";\n\t                        TransactionType[TransactionType[\"BUY_OTHER\"] = 3] = \"BUY_OTHER\";\n\t                        TransactionType[TransactionType[\"BUY_STOCK\"] = 4] = \"BUY_STOCK\";\n\t                        TransactionType[TransactionType[\"CLOSE_OPTION\"] = 5] = \"CLOSE_OPTION\";\n\t                        TransactionType[TransactionType[\"INCOME\"] = 6] = \"INCOME\";\n\t                        TransactionType[TransactionType[\"INVESTMENT_EXPENSE\"] = 7] = \"INVESTMENT_EXPENSE\";\n\t                        TransactionType[TransactionType[\"JOURNAL_FUND\"] = 8] = \"JOURNAL_FUND\";\n\t                        TransactionType[TransactionType[\"JOURNAL_SECURITY\"] = 9] = \"JOURNAL_SECURITY\";\n\t                        TransactionType[TransactionType[\"MARGIN_INTEREST\"] = 10] = \"MARGIN_INTEREST\";\n\t                        TransactionType[TransactionType[\"REINVEST_INCOME\"] = 11] = \"REINVEST_INCOME\";\n\t                        TransactionType[TransactionType[\"RETURN_OF_CAPITAL\"] = 12] = \"RETURN_OF_CAPITAL\";\n\t                        TransactionType[TransactionType[\"SELL_DEBT\"] = 13] = \"SELL_DEBT\";\n\t                        TransactionType[TransactionType[\"SELL_MUTUAL_FUND\"] = 14] = \"SELL_MUTUAL_FUND\";\n\t                        TransactionType[TransactionType[\"SELL_OPTION\"] = 15] = \"SELL_OPTION\";\n\t                        TransactionType[TransactionType[\"SELL_OTHER\"] = 16] = \"SELL_OTHER\";\n\t                        TransactionType[TransactionType[\"SELL_STOCK\"] = 17] = \"SELL_STOCK\";\n\t                        TransactionType[TransactionType[\"SPLIT\"] = 18] = \"SPLIT\";\n\t                        TransactionType[TransactionType[\"TRANSFER\"] = 19] = \"TRANSFER\";\n\t                    })(transactions.TransactionType || (transactions.TransactionType = {}));\n\t                    var TransactionType = transactions.TransactionType;\n\t                })(transactions = investment.transactions || (investment.transactions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='TransactionType'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var transactions;\n\t                (function (transactions) {\n\t                    /**\n\t                     * Base class for all investment transactions.\n\t                     * <br>\n\t                     * This class exposes a read-only view of the flattened aggregates that are\n\t                     * common to all investment transactions as a convenience to application\n\t                     * developers who may not find the ofx aggregation model intuitive.\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var BaseInvestmentTransaction = (function () {\n\t                        function BaseInvestmentTransaction(transactionType) {\n\t                            this.transactionType = transactionType;\n\t                        }\n\t                        /**\n\t                         * Gets the type of transaction.\n\t                         *\n\t                         * @return the type of transaction\n\t                         */\n\t                        BaseInvestmentTransaction.prototype.getTransactionType = function () {\n\t                            return this.transactionType;\n\t                        };\n\t                        /**\n\t                         * Gets the {@link InvestmentTransaction} aggregate.\n\t                         *\n\t                         * @return the {@link InvestmentTransaction} aggregate\n\t                         */\n\t                        BaseInvestmentTransaction.prototype.getInvestmentTransaction = function () { throw new ofx4js.OFXException(\"abstract\"); };\n\t                        /**\n\t                         * Gets the unique financial institution assigned transaction id. This is a\n\t                         * required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.1, OFX Spec\"\n\t                         *\n\t                         * @return the financial institution asssigned transaction id\n\t                         */\n\t                        BaseInvestmentTransaction.prototype.getTransactionId = function () {\n\t                            return this.getInvestmentTransaction().getTransactionId();\n\t                        };\n\t                        /**\n\t                         * Gets the server assigned transaction id. This is an optional field\n\t                         * according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.1, OFX Spec\"\n\t                         *\n\t                         * @return the server assigned transaction id\n\t                         */\n\t                        BaseInvestmentTransaction.prototype.getServerId = function () {\n\t                            return this.getInvestmentTransaction().getServerId();\n\t                        };\n\t                        /**\n\t                         * Gets the trade date of the transaction. For stock splits, this is the\n\t                         * day of record. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.1, OFX Spec\"\n\t                         *\n\t                         * @return the trade date\n\t                         */\n\t                        BaseInvestmentTransaction.prototype.getTradeDate = function () {\n\t                            return this.getInvestmentTransaction().getTradeDate();\n\t                        };\n\t                        /**\n\t                         * Gets the settlement date of the transaction. For stock splits, this is the\n\t                         * day of of execution. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.1, OFX Spec\"\n\t                         *\n\t                         * @return the trade date\n\t                         */\n\t                        BaseInvestmentTransaction.prototype.getSettlementDate = function () {\n\t                            return this.getInvestmentTransaction().getSettlementDate();\n\t                        };\n\t                        /**\n\t                         * For a reveral transaction, gets the financial institution assigned\n\t                         * transaction id for the transaction being revesed.\n\t                         * @see \"Section 13.9.2.4.1, OFX Spec\"\n\t                         *\n\t                         * @return the transaction id of the transaction being reversed\n\t                         */\n\t                        BaseInvestmentTransaction.prototype.getReversalTransactionId = function () {\n\t                            return this.getInvestmentTransaction().getReversalTransactionId();\n\t                        };\n\t                        /**\n\t                         * Gets the memo associated with the transaction. This is an optional field\n\t                         * according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.1, OFX Spec\"\n\t                         *\n\t                         * @return the memo\n\t                         */\n\t                        BaseInvestmentTransaction.prototype.getMemo = function () {\n\t                            return this.getInvestmentTransaction().getMemo();\n\t                        };\n\t                        return BaseInvestmentTransaction;\n\t                    })();\n\t                    transactions.BaseInvestmentTransaction = BaseInvestmentTransaction;\n\t                })(transactions = investment.transactions || (investment.transactions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/Element_add'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var transactions;\n\t                (function (transactions) {\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var Element_add = ofx4js.meta.Element_add;\n\t                    /**\n\t                     * Investment transaction aggregate (\"INVTRAN\").\n\t                     * @see \"Section 13.9.2.4.1, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var InvestmentTransaction = (function () {\n\t                        function InvestmentTransaction() {\n\t                        }\n\t                        /**\n\t                         * Gets the unique financial institution assigned transaction id. This is a\n\t                         * required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.1, OFX Spec\"\n\t                         *\n\t                         * @return the financial institution asssigned transaction id\n\t                         */\n\t                        InvestmentTransaction.prototype.getTransactionId = function () {\n\t                            return this.transactionId;\n\t                        };\n\t                        /**\n\t                         * Sets the unique financial institution assigned transaction id. This is a\n\t                         * required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.1, OFX Spec\"\n\t                         *\n\t                         * @param transactionId the financial institution asssigned transaction id\n\t                         */\n\t                        InvestmentTransaction.prototype.setTransactionId = function (transactionId) {\n\t                            this.transactionId = transactionId;\n\t                        };\n\t                        /**\n\t                         * Gets the server assigned transaction id. This is an optional field\n\t                         * according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.1, OFX Spec\"\n\t                         *\n\t                         * @return the server assigned transaction id\n\t                         */\n\t                        InvestmentTransaction.prototype.getServerId = function () {\n\t                            return this.serverId;\n\t                        };\n\t                        /**\n\t                         * Sets the server assigned transaction id. This is an optional field\n\t                         * according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.1, OFX Spec\"\n\t                         *\n\t                         * @param serverId the server assigned transaction id\n\t                         */\n\t                        InvestmentTransaction.prototype.setServerId = function (serverId) {\n\t                            this.serverId = serverId;\n\t                        };\n\t                        /**\n\t                         * Gets the trade date of the transaction. For stock splits, this is the\n\t                         * day of record. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.1, OFX Spec\"\n\t                         *\n\t                         * @return the trade date\n\t                         */\n\t                        InvestmentTransaction.prototype.getTradeDate = function () {\n\t                            return this.tradeDate;\n\t                        };\n\t                        /**\n\t                         * Sets the trade date of the transaction. For stock splits, this is the\n\t                         * day of record. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.1, OFX Spec\"\n\t                         *\n\t                         * @param tradeDate the trade date\n\t                         */\n\t                        InvestmentTransaction.prototype.setTradeDate = function (tradeDate) {\n\t                            this.tradeDate = tradeDate;\n\t                        };\n\t                        /**\n\t                         * Gets the settlement date of the transaction. For stock splits, this is the\n\t                         * day of of execution. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.1, OFX Spec\"\n\t                         *\n\t                         * @return the trade date\n\t                         */\n\t                        InvestmentTransaction.prototype.getSettlementDate = function () {\n\t                            return this.settlementDate;\n\t                        };\n\t                        /**\n\t                         * Sets the settlement date of the transaction. For stock splits, this is the\n\t                         * day of of execution. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.1, OFX Spec\"\n\t                         *\n\t                         * @param settlementDate the trade date\n\t                         */\n\t                        InvestmentTransaction.prototype.setSettlementDate = function (settlementDate) {\n\t                            this.settlementDate = settlementDate;\n\t                        };\n\t                        /**\n\t                         * For a reveral transaction, gets the financial institution assigned\n\t                         * transaction id for the transaction being revesed.\n\t                         * @see \"Section 13.9.2.4.1, OFX Spec\"\n\t                         *\n\t                         * @return the transaction id of the transaction being reversed\n\t                         */\n\t                        InvestmentTransaction.prototype.getReversalTransactionId = function () {\n\t                            return this.reversalTransactionId;\n\t                        };\n\t                        /**\n\t                         * For a reveral transaction, gets the financial institution assigned\n\t                         * transaction id for the transaction being revesed.\n\t                         * @see \"Section 13.9.2.4.1, OFX Spec\"\n\t                         *\n\t                         * @param reversalTransactionId the transaction id of the transaction being reversed\n\t                         */\n\t                        InvestmentTransaction.prototype.setReversalTransactionId = function (reversalTransactionId) {\n\t                            this.reversalTransactionId = reversalTransactionId;\n\t                        };\n\t                        /**\n\t                         * Gets the memo associated with the transaction. This is an optional field\n\t                         * according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.1, OFX Spec\"\n\t                         *\n\t                         * @return the memo\n\t                         */\n\t                        InvestmentTransaction.prototype.getMemo = function () {\n\t                            return this.memo;\n\t                        };\n\t                        /**\n\t                         * Sets the memo associated with the transaction. This is an optional field\n\t                         * according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.1, OFX Spec\"\n\t                         *\n\t                         * @param memo the memo\n\t                         */\n\t                        InvestmentTransaction.prototype.setMemo = function (memo) {\n\t                            this.memo = memo;\n\t                        };\n\t                        return InvestmentTransaction;\n\t                    })();\n\t                    transactions.InvestmentTransaction = InvestmentTransaction;\n\t                    Aggregate_add(InvestmentTransaction, \"INVTRAN\");\n\t                    Element_add(InvestmentTransaction, { name: \"FITID\", required: true, order: 0, type: String, read: InvestmentTransaction.prototype.getTransactionId, write: InvestmentTransaction.prototype.setTransactionId });\n\t                    Element_add(InvestmentTransaction, { name: \"SRVRTID\", order: 10, type: String, read: InvestmentTransaction.prototype.getServerId, write: InvestmentTransaction.prototype.setServerId });\n\t                    Element_add(InvestmentTransaction, { name: \"DTTRADE\", required: true, order: 20, type: Date, read: InvestmentTransaction.prototype.getTradeDate, write: InvestmentTransaction.prototype.setTradeDate });\n\t                    Element_add(InvestmentTransaction, { name: \"DTSETTLE\", order: 30, type: Date, read: InvestmentTransaction.prototype.getSettlementDate, write: InvestmentTransaction.prototype.setSettlementDate });\n\t                    Element_add(InvestmentTransaction, { name: \"REVERSALFITID\", order: 40, type: String, read: InvestmentTransaction.prototype.getReversalTransactionId, write: InvestmentTransaction.prototype.setReversalTransactionId });\n\t                    Element_add(InvestmentTransaction, { name: \"MEMO\", order: 50, type: String, read: InvestmentTransaction.prototype.getMemo, write: InvestmentTransaction.prototype.setMemo });\n\t                })(transactions = investment.transactions || (investment.transactions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='BaseInvestmentTransaction'/>\n\t///<reference path='InvestmentTransaction'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var transactions;\n\t                (function (transactions) {\n\t                    var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                    /**\n\t                     * Base class for investment transactions that aren't buys or sales..\n\t                     * <br>\n\t                     * This class exposes a read-only view of the flattened aggregates that are\n\t                     * common to all investment transactions as a convenience to application\n\t                     * developers who may not find the ofx aggregation model intuitive.\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var BaseOtherInvestmentTransaction = (function (_super) {\n\t                        __extends(BaseOtherInvestmentTransaction, _super);\n\t                        function BaseOtherInvestmentTransaction(transactionType) {\n\t                            _super.call(this, transactionType);\n\t                        }\n\t                        /**\n\t                         * Gets the {@link InvestmentTransaction} aggregate.\n\t                         *\n\t                         * @return the {@link InvestmentTransaction} aggregate\n\t                         */\n\t                        // @Override\n\t                        BaseOtherInvestmentTransaction.prototype.getInvestmentTransaction = function () {\n\t                            return this.investmentTransaction;\n\t                        };\n\t                        /**\n\t                         * Sets the {@link InvestmentTransaction} aggregate.\n\t                         *\n\t                         * @param investmentTransaction the {@link InvestmentTransaction} aggregate\n\t                         */\n\t                        BaseOtherInvestmentTransaction.prototype.setInvestmentTransaction = function (investmentTransaction) {\n\t                            this.investmentTransaction = investmentTransaction;\n\t                        };\n\t                        return BaseOtherInvestmentTransaction;\n\t                    })(transactions.BaseInvestmentTransaction);\n\t                    transactions.BaseOtherInvestmentTransaction = BaseOtherInvestmentTransaction;\n\t                    ChildAggregate_add(BaseOtherInvestmentTransaction, { order: 10, type: transactions.InvestmentTransaction, read: BaseOtherInvestmentTransaction.prototype.getInvestmentTransaction, write: BaseOtherInvestmentTransaction.prototype.setInvestmentTransaction });\n\t                })(transactions = investment.transactions || (investment.transactions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../../../meta/Element_add'/>\n\t///<reference path='../../investment/accounts/SubAccountType'/>\n\t///<reference path='../../common/Transaction'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var transactions;\n\t                (function (transactions) {\n\t                    var Transaction = ofx4js.domain.data.common.Transaction;\n\t                    var SubAccountType_fromOfx = ofx4js.domain.data.investment.accounts.SubAccountType_fromOfx;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                    var Element_add = ofx4js.meta.Element_add;\n\t                    /**\n\t                     * Bank transactions that are part of an investment account statement. Wraps a {@link Transaction}.\n\t                     * @see \"Section 13.9.2.3, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var InvestmentBankTransaction = (function () {\n\t                        function InvestmentBankTransaction() {\n\t                        }\n\t                        /**\n\t                         * Gets the wrapped transaction aggregate.\n\t                         * @return the wrapped transaction\n\t                         */\n\t                        InvestmentBankTransaction.prototype.getTransaction = function () {\n\t                            return this.transaction;\n\t                        };\n\t                        /**\n\t                         * Sets the wrapped transaction aggregate.\n\t                         * @param transaction the wrapped transaction\n\t                         */\n\t                        InvestmentBankTransaction.prototype.setTransaction = function (transaction) {\n\t                            this.transaction = transaction;\n\t                        };\n\t                        /**\n\t                         * Gets the sub account type that the security is from (e.g. CASH, MARGIN, SHORT, OTHER).\n\t                         * @see \"Section 13.9.2.4.2, OFX Spec\"\n\t                         *\n\t                         * @return the sub account fund for the transaction\n\t                         */\n\t                        InvestmentBankTransaction.prototype.getSubAccountFund = function () {\n\t                            return this.subAccountFund;\n\t                        };\n\t                        /**\n\t                         * Sets the sub account type that the security is from (e.g. CASH, MARGIN, SHORT, OTHER).\n\t                         * @see \"Section 13.9.2.4.2, OFX Spec\"\n\t                         *\n\t                         * @param subAccountFund the sub account fund for the transaction\n\t                         */\n\t                        InvestmentBankTransaction.prototype.setSubAccountFund = function (subAccountFund) {\n\t                            this.subAccountFund = subAccountFund;\n\t                        };\n\t                        /**\n\t                         * Gets the result of getSubAccountFund as one of the well-known types.\n\t                         *\n\t                         * @return the type of null if it wasn't one of the well known types\n\t                         */\n\t                        InvestmentBankTransaction.prototype.getSubAccountFundEnum = function () {\n\t                            return SubAccountType_fromOfx(this.getSubAccountFund());\n\t                        };\n\t                        return InvestmentBankTransaction;\n\t                    })();\n\t                    transactions.InvestmentBankTransaction = InvestmentBankTransaction;\n\t                    Aggregate_add(InvestmentBankTransaction, \"INVBANKTRAN\");\n\t                    ChildAggregate_add(InvestmentBankTransaction, { order: 10, type: Transaction, read: InvestmentBankTransaction.prototype.getTransaction, write: InvestmentBankTransaction.prototype.setTransaction });\n\t                    Element_add(InvestmentBankTransaction, { name: \"SUBACCTFUND\", required: true, order: 20, type: String, read: InvestmentBankTransaction.prototype.getSubAccountFund, write: InvestmentBankTransaction.prototype.setSubAccountFund });\n\t                })(transactions = investment.transactions || (investment.transactions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../../../meta/Element_add'/>\n\t///<reference path='BaseOtherInvestmentTransaction'/>\n\t///<reference path='InvestmentBankTransaction'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var transactions;\n\t                (function (transactions_1) {\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                    var Element_add = ofx4js.meta.Element_add;\n\t                    /**\n\t                     * The transaction list aggregate.\n\t                     * @see \"Section 13.9.1.2, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var InvestmentTransactionList = (function () {\n\t                        function InvestmentTransactionList() {\n\t                        }\n\t                        /**\n\t                         * Gets the start date. This is a required field according to the OFX spec.\n\t                         *\n\t                         * @return The start date\n\t                         */\n\t                        InvestmentTransactionList.prototype.getStart = function () {\n\t                            return this.start;\n\t                        };\n\t                        /**\n\t                         * Sets the start date. This is a required field according to the OFX spec.\n\t                         *\n\t                         * @param start The start date\n\t                         */\n\t                        InvestmentTransactionList.prototype.setStart = function (start) {\n\t                            this.start = start;\n\t                        };\n\t                        /**\n\t                         * Gets the end date. This is a required field according to the OFX spec.\n\t                         *\n\t                         * @return he end date\n\t                         */\n\t                        InvestmentTransactionList.prototype.getEnd = function () {\n\t                            return this.end;\n\t                        };\n\t                        /**\n\t                         * Sets the end date. This is a required field according to the OFX spec.\n\t                         *\n\t                         * @param end the end date\n\t                         */\n\t                        InvestmentTransactionList.prototype.setEnd = function (end) {\n\t                            this.end = end;\n\t                        };\n\t                        /**\n\t                         * Gets the investment transaction list. This is a heterogenous list of different types of\n\t                         * transactions returned in the order the brokerage provides them.\n\t                         *\n\t                         * @return the investment transaction list\n\t                         */\n\t                        InvestmentTransactionList.prototype.getInvestmentTransactions = function () {\n\t                            return this.transactions;\n\t                        };\n\t                        /**\n\t                         * Sets the investment transaction list. This is a heterogenous list of different types of\n\t                         * transactions returned in the order the brokerage provides them.\n\t                         *\n\t                         * @param transactions the investment transaction list\n\t                         */\n\t                        InvestmentTransactionList.prototype.setInvestmentTransactions = function (transactions) {\n\t                            this.transactions = transactions;\n\t                        };\n\t                        /**\n\t                         * Gets the bank transaction list.\n\t                         *\n\t                         * @return the bank transaction list\n\t                         */\n\t                        InvestmentTransactionList.prototype.getBankTransactions = function () {\n\t                            return this.bankTransactions;\n\t                        };\n\t                        /**\n\t                         * Sets the bank transaction list.\n\t                         *\n\t                         * @param bankTransactions the bank transaction list\n\t                         */\n\t                        InvestmentTransactionList.prototype.setBankTransactions = function (bankTransactions) {\n\t                            this.bankTransactions = bankTransactions;\n\t                        };\n\t                        return InvestmentTransactionList;\n\t                    })();\n\t                    transactions_1.InvestmentTransactionList = InvestmentTransactionList;\n\t                    Aggregate_add(InvestmentTransactionList, \"INVTRANLIST\");\n\t                    Element_add(InvestmentTransactionList, { name: \"DTSTART\", required: true, order: 0, type: Date, read: InvestmentTransactionList.prototype.getStart, write: InvestmentTransactionList.prototype.setStart });\n\t                    Element_add(InvestmentTransactionList, { name: \"DTEND\", required: true, order: 10, type: Date, read: InvestmentTransactionList.prototype.getEnd, write: InvestmentTransactionList.prototype.setEnd });\n\t                    ChildAggregate_add(InvestmentTransactionList, { order: 20, type: Array, collectionEntryType: transactions_1.BaseInvestmentTransaction, read: InvestmentTransactionList.prototype.getInvestmentTransactions, write: InvestmentTransactionList.prototype.setInvestmentTransactions });\n\t                    ChildAggregate_add(InvestmentTransactionList, { order: 30, type: Array, collectionEntryType: transactions_1.InvestmentBankTransaction, read: InvestmentTransactionList.prototype.getBankTransactions, write: InvestmentTransactionList.prototype.setBankTransactions });\n\t                })(transactions = investment.transactions || (investment.transactions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\t///<reference path='Currency'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var common;\n\t            (function (common) {\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                (function (BalanceRecordType) {\n\t                    BalanceRecordType[BalanceRecordType[\"DOLLAR\"] = 0] = \"DOLLAR\";\n\t                    BalanceRecordType[BalanceRecordType[\"PERCENT\"] = 1] = \"PERCENT\";\n\t                    BalanceRecordType[BalanceRecordType[\"NUMBER\"] = 2] = \"NUMBER\";\n\t                })(common.BalanceRecordType || (common.BalanceRecordType = {}));\n\t                var BalanceRecordType = common.BalanceRecordType;\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 * @see \"Section 3.1.3, OFX Spec\"\n\t                 */\n\t                var BalanceRecord = (function () {\n\t                    function BalanceRecord() {\n\t                    }\n\t                    /**\n\t                     * Name of the balance.\n\t                     *\n\t                     * @return Name of the balance.\n\t                     */\n\t                    BalanceRecord.prototype.getName = function () {\n\t                        return this.name;\n\t                    };\n\t                    /**\n\t                     * Name of the balance.\n\t                     *\n\t                     * @param name Name of the balance.\n\t                     */\n\t                    BalanceRecord.prototype.setName = function (name) {\n\t                        this.name = name;\n\t                    };\n\t                    /**\n\t                     * Description of the balance.\n\t                     *\n\t                     * @return Description of the balance.\n\t                     */\n\t                    BalanceRecord.prototype.getDescription = function () {\n\t                        return this.description;\n\t                    };\n\t                    /**\n\t                     * Description of the balance.\n\t                     *\n\t                     * @param description Description of the balance.\n\t                     */\n\t                    BalanceRecord.prototype.setDescription = function (description) {\n\t                        this.description = description;\n\t                    };\n\t                    /**\n\t                     * Type of the balance.\n\t                     *\n\t                     * @return Type of the balance.\n\t                     */\n\t                    BalanceRecord.prototype.getType = function () {\n\t                        return this.type;\n\t                    };\n\t                    /**\n\t                     * Type of the balance.\n\t                     *\n\t                     * @param type Type of the balance.\n\t                     */\n\t                    BalanceRecord.prototype.setType = function (type) {\n\t                        this.type = type;\n\t                    };\n\t                    /**\n\t                     * The value of the balance.\n\t                     *\n\t                     * @return The value of the balance.\n\t                     */\n\t                    BalanceRecord.prototype.getValue = function () {\n\t                        return this.value;\n\t                    };\n\t                    /**\n\t                     * The value of the balance.\n\t                     *\n\t                     * @param value The value of the balance.\n\t                     */\n\t                    BalanceRecord.prototype.setValue = function (value) {\n\t                        this.value = value;\n\t                    };\n\t                    /**\n\t                     * Timestamp of the balance.\n\t                     *\n\t                     * @return Timestamp of the balance.\n\t                     */\n\t                    BalanceRecord.prototype.getTimestamp = function () {\n\t                        return this.timestamp;\n\t                    };\n\t                    /**\n\t                     * Timestamp of the balance.\n\t                     *\n\t                     * @param timestamp Timestamp of the balance.\n\t                     */\n\t                    BalanceRecord.prototype.setTimestamp = function (timestamp) {\n\t                        this.timestamp = timestamp;\n\t                    };\n\t                    /**\n\t                     * Currency.\n\t                     *\n\t                     * @return Currency.\n\t                     */\n\t                    BalanceRecord.prototype.getCurrency = function () {\n\t                        return this.currency;\n\t                    };\n\t                    /**\n\t                     * Currency.\n\t                     *\n\t                     * @param currency Currency.\n\t                     */\n\t                    BalanceRecord.prototype.setCurrency = function (currency) {\n\t                        this.currency = currency;\n\t                    };\n\t                    return BalanceRecord;\n\t                })();\n\t                common.BalanceRecord = BalanceRecord;\n\t                Aggregate_add(BalanceRecord, \"BAL\");\n\t                Element_add(BalanceRecord, { name: \"NAME\", required: true, order: 0, type: String, read: BalanceRecord.prototype.getName, write: BalanceRecord.prototype.setName });\n\t                Element_add(BalanceRecord, { name: \"DESC\", required: true, order: 10, type: String, read: BalanceRecord.prototype.getDescription, write: BalanceRecord.prototype.setDescription });\n\t                Element_add(BalanceRecord, { name: \"BALTYPE\", required: true, order: 20, type: BalanceRecordType, read: BalanceRecord.prototype.getType, write: BalanceRecord.prototype.setType });\n\t                Element_add(BalanceRecord, { name: \"VALUE\", required: true, order: 30, type: String, read: BalanceRecord.prototype.getValue, write: BalanceRecord.prototype.setValue });\n\t                Element_add(BalanceRecord, { name: \"DTASOF\", order: 40, type: Date, read: BalanceRecord.prototype.getTimestamp, write: BalanceRecord.prototype.setTimestamp });\n\t                ChildAggregate_add(BalanceRecord, { order: 50, type: common.Currency, read: BalanceRecord.prototype.getCurrency, write: BalanceRecord.prototype.setCurrency });\n\t            })(common = data.common || (data.common = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../../../meta/Element_add'/>\n\t///<reference path='../../common/BalanceRecord'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var statements;\n\t                (function (statements) {\n\t                    var BalanceRecord = ofx4js.domain.data.common.BalanceRecord;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                    /**\n\t                     * Aggregate for the investment balance list.\n\t                     * @see \"Section 13.9.2.7, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var BalanceList = (function () {\n\t                        function BalanceList() {\n\t                        }\n\t                        /**\n\t                         * Gets the list of balance records.\n\t                         *\n\t                         * @return the list of balance records.\n\t                         */\n\t                        BalanceList.prototype.getBalanceRecords = function () {\n\t                            return this.balanceRecords;\n\t                        };\n\t                        /**\n\t                         * Sets the list of balance records.\n\t                         *\n\t                         * @param balanceRecords the list of balance records.\n\t                         */\n\t                        BalanceList.prototype.setBalanceRecords = function (balanceRecords) {\n\t                            this.balanceRecords = balanceRecords;\n\t                        };\n\t                        return BalanceList;\n\t                    })();\n\t                    statements.BalanceList = BalanceList;\n\t                    Aggregate_add(BalanceList, \"BALLIST\");\n\t                    ChildAggregate_add(BalanceList, { order: 10, type: Array, collectionEntryType: BalanceRecord, read: BalanceList.prototype.getBalanceRecords, write: BalanceList.prototype.setBalanceRecords });\n\t                })(statements = investment.statements || (investment.statements = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../../../meta/Element_add'/>\n\t///<reference path='BalanceList'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var statements;\n\t                (function (statements) {\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                    var Element_add = ofx4js.meta.Element_add;\n\t                    /**\n\t                     * Aggregate for the investment balance.\n\t                     * @see \"Section 13.9.2.7, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var InvestmentBalance = (function () {\n\t                        function InvestmentBalance() {\n\t                        }\n\t                        /**\n\t                         * Gets the available cash balance across all sub-accounts, including sweep funds. This is\n\t                         * required field according to the OFX spec.\n\t                         *\n\t                         * @return the available cash balance\n\t                         */\n\t                        InvestmentBalance.prototype.getAvailableCash = function () {\n\t                            return this.availableCash;\n\t                        };\n\t                        /**\n\t                         * Sets the available cash balance across all sub-accounts, including sweep funds. This is\n\t                         * required field according to the OFX spec.\n\t                         *\n\t                         * @param availableCash the available cash balance\n\t                         */\n\t                        InvestmentBalance.prototype.setAvailableCash = function (availableCash) {\n\t                            this.availableCash = availableCash;\n\t                        };\n\t                        /**\n\t                         * Gets the margin account balance. A positive balance indicates a positive cash balance, while\n\t                         * a negative balance indicates the customer borrowed funds. This is a required field according\n\t                         * to the OFX spec.\n\t                         *\n\t                         * @return the margin account balance\n\t                         */\n\t                        InvestmentBalance.prototype.getMarginBalance = function () {\n\t                            return this.marginBalance;\n\t                        };\n\t                        /**\n\t                         * Sets the margin account balance. A positive balance indicates a positive cash balance, while\n\t                         * a negative balance indicates the customer borrowed funds. This is a required field according\n\t                         * to the OFX spec.\n\t                         *\n\t                         * @param marginBalance the margin account balance\n\t                         */\n\t                        InvestmentBalance.prototype.setMarginBalance = function (marginBalance) {\n\t                            this.marginBalance = marginBalance;\n\t                        };\n\t                        /**\n\t                         * Gets the market value of all short positions. This is a positive balance. This is a required\n\t                         * field according to the OFX spec.\n\t                         *\n\t                         * @return the market value of all short positions\n\t                         */\n\t                        InvestmentBalance.prototype.getShortBalance = function () {\n\t                            return this.shortBalance;\n\t                        };\n\t                        /**\n\t                         * Sets the market value of all short positions. This is a positive balance. This is a required\n\t                         * field according to the OFX spec.\n\t                         *\n\t                         * @param shortBalance the market value of all short positions\n\t                         */\n\t                        InvestmentBalance.prototype.setShortBalance = function (shortBalance) {\n\t                            this.shortBalance = shortBalance;\n\t                        };\n\t                        /**\n\t                         * Gets the buying power amount. This is an optional field according to the OFX spec.\n\t                         *\n\t                         * @return the buying power\n\t                         */\n\t                        InvestmentBalance.prototype.getBuyingPower = function () {\n\t                            return this.buyingPower;\n\t                        };\n\t                        /**\n\t                         * Sets the buying power amount. This is an optional field according to the OFX spec.\n\t                         *\n\t                         * @param buyingPower the buying power\n\t                         */\n\t                        InvestmentBalance.prototype.setBuyingPower = function (buyingPower) {\n\t                            this.buyingPower = buyingPower;\n\t                        };\n\t                        /**\n\t                         * Gets the investment balance list. This is an optional field according to the OFX spec.\n\t                         *\n\t                         * @return the investment balance list\n\t                         */\n\t                        InvestmentBalance.prototype.getBalanceList = function () {\n\t                            return this.balanceList;\n\t                        };\n\t                        /**\n\t                         * Sets the investment balance list. This is an optional field according to the OFX spec.\n\t                         *\n\t                         * @param balanceList the investment balance list\n\t                         */\n\t                        InvestmentBalance.prototype.setBalanceList = function (balanceList) {\n\t                            this.balanceList = balanceList;\n\t                        };\n\t                        return InvestmentBalance;\n\t                    })();\n\t                    statements.InvestmentBalance = InvestmentBalance;\n\t                    Aggregate_add(InvestmentBalance, \"INVBAL\");\n\t                    Element_add(InvestmentBalance, { name: \"AVAILCASH\", required: true, order: 10, type: Number, read: InvestmentBalance.prototype.getAvailableCash, write: InvestmentBalance.prototype.setAvailableCash });\n\t                    Element_add(InvestmentBalance, { name: \"MARGINBALANCE\", required: true, order: 20, type: Number, read: InvestmentBalance.prototype.getMarginBalance, write: InvestmentBalance.prototype.setMarginBalance });\n\t                    Element_add(InvestmentBalance, { name: \"SHORTBALANCE\", required: true, order: 30, type: Number, read: InvestmentBalance.prototype.getShortBalance, write: InvestmentBalance.prototype.setShortBalance });\n\t                    Element_add(InvestmentBalance, { name: \"BUYPOWER\", order: 40, type: Number, read: InvestmentBalance.prototype.getBuyingPower, write: InvestmentBalance.prototype.setBuyingPower });\n\t                    ChildAggregate_add(InvestmentBalance, { order: 50, type: statements.BalanceList, read: InvestmentBalance.prototype.getBalanceList, write: InvestmentBalance.prototype.setBalanceList });\n\t                })(statements = investment.statements || (investment.statements = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../../../meta/Element_add'/>\n\t///<reference path='../../common/StatementResponse'/>\n\t///<reference path='../../investment/accounts/InvestmentAccountDetails'/>\n\t///<reference path='../../investment/positions/InvestmentPositionList'/>\n\t///<reference path='../../seclist/SecurityList'/>\n\t///<reference path='../../seclist/SecurityListResponse'/>\n\t///<reference path='../../investment/transactions/InvestmentTransactionList'/>\n\t///<reference path='InvestmentBalance'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var statements;\n\t                (function (statements) {\n\t                    var StatementResponse = ofx4js.domain.data.common.StatementResponse;\n\t                    var InvestmentAccountDetails = ofx4js.domain.data.investment.accounts.InvestmentAccountDetails;\n\t                    var InvestmentPositionList = ofx4js.domain.data.investment.positions.InvestmentPositionList;\n\t                    var InvestmentTransactionList = ofx4js.domain.data.investment.transactions.InvestmentTransactionList;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                    var Element_add = ofx4js.meta.Element_add;\n\t                    /**\n\t                     * Aggregate for the investment statement download response.\n\t                     * @see \"Section 13.9.2.2, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var InvestmentStatementResponse = (function (_super) {\n\t                        __extends(InvestmentStatementResponse, _super);\n\t                        function InvestmentStatementResponse() {\n\t                            _super.apply(this, arguments);\n\t                        }\n\t                        /**\n\t                         * Gets the name of the response message.\n\t                         *\n\t                         * @return the name of the response message\n\t                         */\n\t                        //@Override\n\t                        InvestmentStatementResponse.prototype.getResponseMessageName = function () {\n\t                            return \"investment statement\";\n\t                        };\n\t                        /**\n\t                         * Gets the date and time for the statement download. This is a required field according to the\n\t                         * OFX spec.\n\t                         *\n\t                         * @return the date and time for the statement download\n\t                         */\n\t                        InvestmentStatementResponse.prototype.getDateOfStatement = function () {\n\t                            return this.dateOfStatement;\n\t                        };\n\t                        /**\n\t                         * Sets the date and time for the statement download. This is a required field according to the\n\t                         * OFX spec.\n\t                         *\n\t                         * @param dateOfStatement the date and time for the statement download\n\t                         */\n\t                        InvestmentStatementResponse.prototype.setDateOfStatement = function (dateOfStatement) {\n\t                            this.dateOfStatement = dateOfStatement;\n\t                        };\n\t                        /**\n\t                         * Gets the account for the statement. This is a required field according to the OFX spec.\n\t                         *\n\t                         * @return the account for the statement\n\t                         */\n\t                        InvestmentStatementResponse.prototype.getAccount = function () {\n\t                            return this.account;\n\t                        };\n\t                        /**\n\t                         * Sets the account for the statement. This is a required field according to the OFX spec.\n\t                         *\n\t                         * @param account the account for the statement\n\t                         */\n\t                        InvestmentStatementResponse.prototype.setAccount = function (account) {\n\t                            this.account = account;\n\t                        };\n\t                        /**\n\t                         * Gets the transaction list aggregate. This is an optional field according to the OFX spec.\n\t                         *\n\t                         * @return the transaction list aggregate\n\t                         */\n\t                        InvestmentStatementResponse.prototype.getInvestmentTransactionList = function () {\n\t                            return this.investmentTransactionList;\n\t                        };\n\t                        /**\n\t                         * Sets the transaction list aggregate. This is an optional field according to the OFX spec.\n\t                         *\n\t                         * @param transactionList the transaction list aggregate\n\t                         */\n\t                        InvestmentStatementResponse.prototype.setInvestmentTransactionList = function (transactionList) {\n\t                            this.investmentTransactionList = transactionList;\n\t                        };\n\t                        /**\n\t                         * Gets the position list aggreate. This is an optional field according to the OFX spec.\n\t                         *\n\t                         * @return the position list aggregate\n\t                         */\n\t                        InvestmentStatementResponse.prototype.getPositionList = function () {\n\t                            return this.positionList;\n\t                        };\n\t                        /**\n\t                         * Sets the position list aggreate. This is an optional field according to the OFX spec.\n\t                         *\n\t                         * @param positionList the position list aggregate\n\t                         */\n\t                        InvestmentStatementResponse.prototype.setPositionList = function (positionList) {\n\t                            this.positionList = positionList;\n\t                        };\n\t                        /**\n\t                         * Gets the account balance. This is an optional field according to the OFX spec.\n\t                         *\n\t                         * @return the account balance\n\t                         */\n\t                        InvestmentStatementResponse.prototype.getAccountBalance = function () {\n\t                            return this.accountBalance;\n\t                        };\n\t                        /**\n\t                         * Sets the account balance. This is an optional field according to the OFX spec.\n\t                         *\n\t                         * @param accountBalance the account balance\n\t                         */\n\t                        InvestmentStatementResponse.prototype.setAccountBalance = function (accountBalance) {\n\t                            this.accountBalance = accountBalance;\n\t                        };\n\t                        /**\n\t                         * Gets the security list aggregate.\n\t                         * <br>\n\t                         * This is not actually technically part of the investment statement responsr aggregate, but\n\t                         * according to Section 13.8.4, OFX spec, this aggregate can appear the overall response and\n\t                         * we provide it here for convenience.\n\t                         *\n\t                         * @return the security list aggregate\n\t                         */\n\t                        InvestmentStatementResponse.prototype.getSecurityList = function () {\n\t                            return this.securityList;\n\t                        };\n\t                        /**\n\t                         * Sets the security list aggregate.\n\t                         * <br>\n\t                         * This is not actually technically part of the investment statement responsr aggregate, but\n\t                         * according to Section 13.8.4, OFX spec, this aggregate can appear the overall response and\n\t                         * we provide it here for convenience.\n\t                         *\n\t                         * @param securityList the security list aggregate\n\t                         */\n\t                        InvestmentStatementResponse.prototype.setSecurityList = function (securityList) {\n\t                            this.securityList = securityList;\n\t                        };\n\t                        return InvestmentStatementResponse;\n\t                    })(StatementResponse);\n\t                    statements.InvestmentStatementResponse = InvestmentStatementResponse;\n\t                    Aggregate_add(InvestmentStatementResponse, \"INVSTMTRS\");\n\t                    Element_add(InvestmentStatementResponse, { name: \"DTASOF\", required: true, order: 60, type: Date, read: InvestmentStatementResponse.prototype.getDateOfStatement, write: InvestmentStatementResponse.prototype.setDateOfStatement });\n\t                    ChildAggregate_add(InvestmentStatementResponse, { name: \"INVACCTFROM\", required: true, order: 10, type: InvestmentAccountDetails, read: InvestmentStatementResponse.prototype.getAccount, write: InvestmentStatementResponse.prototype.setAccount });\n\t                    ChildAggregate_add(InvestmentStatementResponse, { order: 70, type: InvestmentTransactionList, read: InvestmentStatementResponse.prototype.getInvestmentTransactionList, write: InvestmentStatementResponse.prototype.setInvestmentTransactionList });\n\t                    ChildAggregate_add(InvestmentStatementResponse, { order: 80, type: InvestmentPositionList, read: InvestmentStatementResponse.prototype.getPositionList, write: InvestmentStatementResponse.prototype.setPositionList });\n\t                    ChildAggregate_add(InvestmentStatementResponse, { order: 90, type: statements.InvestmentBalance, read: InvestmentStatementResponse.prototype.getAccountBalance, write: InvestmentStatementResponse.prototype.setAccountBalance });\n\t                })(statements = investment.statements || (investment.statements = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\t///<reference path='SecurityId'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var seclist;\n\t            (function (seclist) {\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                /**\n\t                 * Security request aggregate.\n\t                 * @see \"Section 13.8.2.2, OFX Spec\"\n\t                 *\n\t                 * @author Jon Perlow\n\t                 */\n\t                var SecurityRequest = (function () {\n\t                    function SecurityRequest() {\n\t                    }\n\t                    SecurityRequest.prototype.getSecurityId = function () {\n\t                        return this.securityId;\n\t                    };\n\t                    SecurityRequest.prototype.setSecurityId = function (securityId) {\n\t                        this.securityId = securityId;\n\t                        this.tickerSymbol = null;\n\t                        this.fiId = null;\n\t                    };\n\t                    SecurityRequest.prototype.getTickerSymbol = function () {\n\t                        return this.tickerSymbol;\n\t                    };\n\t                    SecurityRequest.prototype.setTickerSymbol = function (tickerSymbol) {\n\t                        this.tickerSymbol = tickerSymbol;\n\t                        this.securityId = null;\n\t                        this.fiId = null;\n\t                    };\n\t                    SecurityRequest.prototype.getFiId = function () {\n\t                        return this.fiId;\n\t                    };\n\t                    SecurityRequest.prototype.setFiId = function (fiId) {\n\t                        this.fiId = fiId;\n\t                        this.securityId = null;\n\t                        this.tickerSymbol = null;\n\t                    };\n\t                    return SecurityRequest;\n\t                })();\n\t                seclist.SecurityRequest = SecurityRequest;\n\t                Aggregate_add(SecurityRequest, \"SECRQ\");\n\t                Element_add(SecurityRequest, { name: \"SECID\", order: 10, type: seclist.SecurityId, read: SecurityRequest.prototype.getSecurityId, write: SecurityRequest.prototype.setSecurityId });\n\t                Element_add(SecurityRequest, { name: \"TICKER\", order: 20, type: String, read: SecurityRequest.prototype.getTickerSymbol, write: SecurityRequest.prototype.setTickerSymbol });\n\t                Element_add(SecurityRequest, { name: \"FIID\", order: 30, type: String, read: SecurityRequest.prototype.getFiId, write: SecurityRequest.prototype.setFiId });\n\t            })(seclist = data.seclist || (data.seclist = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../OFXException'/>\n\t///<reference path='../domain/data/investment/accounts/InvestmentAccountDetails'/>\n\t///<reference path='../domain/data/investment/statements/InvestmentStatementResponse'/>\n\t///<reference path='../domain/data/seclist/SecurityList'/>\n\t///<reference path='../domain/data/seclist/SecurityListResponse'/>\n\t///<reference path='../domain/data/seclist/SecurityRequest'/>\n\t///<reference path='FinancialInstitutionAccount'/>\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../OFXException'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var client;\n\t    (function (client) {\n\t        var OFXException = ofx4js.OFXException;\n\t        /**\n\t         * @author Ryan Heaton\n\t         */\n\t        var NoOFXResponseException = (function (_super) {\n\t            __extends(NoOFXResponseException, _super);\n\t            function NoOFXResponseException(message) {\n\t                if (message === void 0) { message = null; }\n\t                _super.call(this, message);\n\t            }\n\t            return NoOFXResponseException;\n\t        })(OFXException);\n\t        client.NoOFXResponseException = NoOFXResponseException;\n\t    })(client = ofx4js.client || (ofx4js.client = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='OFXApplicationContext'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var client;\n\t    (function (client) {\n\t        var context;\n\t        (function (context) {\n\t            /**\n\t             * Default application context.\n\t             *\n\t             * @author Ryan Heaton\n\t             */\n\t            var DefaultApplicationContext = (function () {\n\t                function DefaultApplicationContext(appId, appVersion) {\n\t                    this.appId = appId;\n\t                    this.appVersion = appVersion;\n\t                }\n\t                DefaultApplicationContext.prototype.getAppId = function () {\n\t                    return this.appId;\n\t                };\n\t                DefaultApplicationContext.prototype.getAppVersion = function () {\n\t                    return this.appVersion;\n\t                };\n\t                return DefaultApplicationContext;\n\t            })();\n\t            context.DefaultApplicationContext = DefaultApplicationContext;\n\t        })(context = client.context || (client.context = {}));\n\t    })(client = ofx4js.client || (ofx4js.client = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='OFXApplicationContext'/>\n\t///<reference path='DefaultApplicationContext'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var client;\n\t    (function (client) {\n\t        var context;\n\t        (function (context_1) {\n\t            /**\n\t             * @author Ryan Heaton\n\t             */\n\t            var OFXApplicationContextHolder = (function () {\n\t                function OFXApplicationContextHolder() {\n\t                }\n\t                /**\n\t                 * Get the current (thread-safe) context.\n\t                 *\n\t                 * @return The thread-safe context.\n\t                 */\n\t                OFXApplicationContextHolder.getCurrentContext = function () {\n\t                    //todo: implement a strategy (perhaps for thread-local access or something)?\n\t                    return this.CURRENT_CONTEXT;\n\t                };\n\t                /**\n\t                 * Set the current context.\n\t                 *\n\t                 * @param context The context.\n\t                 */\n\t                OFXApplicationContextHolder.setCurrentContext = function (context) {\n\t                    this.CURRENT_CONTEXT = context;\n\t                };\n\t                OFXApplicationContextHolder.CURRENT_CONTEXT = new context_1.DefaultApplicationContext(\"Money\", \"1600\"); //some apps fail unless you're Quicken or Money...\n\t                return OFXApplicationContextHolder;\n\t            })();\n\t            context_1.OFXApplicationContextHolder = OFXApplicationContextHolder;\n\t        })(context = client.context || (client.context = {}));\n\t    })(client = ofx4js.client || (ofx4js.client = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            /**\n\t             * A message applicable to a request message set.\n\t             *\n\t             * @author Ryan Heaton\n\t             */\n\t            var RequestMessage = (function () {\n\t                function RequestMessage() {\n\t                }\n\t                return RequestMessage;\n\t            })();\n\t            data.RequestMessage = RequestMessage;\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var common;\n\t            (function (common) {\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 */\n\t                var StatementRange = (function () {\n\t                    function StatementRange() {\n\t                        this.includeTransactions = true;\n\t                    }\n\t                    /**\n\t                     * The start of the statement range.\n\t                     *\n\t                     * @return The start of the statement range.\n\t                     */\n\t                    StatementRange.prototype.getStart = function () {\n\t                        return this.start;\n\t                    };\n\t                    /**\n\t                     * The start of the statement range.\n\t                     *\n\t                     * @param start The start of the statement range.\n\t                     */\n\t                    StatementRange.prototype.setStart = function (start) {\n\t                        this.start = start;\n\t                    };\n\t                    /**\n\t                     * The end of the statement range.\n\t                     *\n\t                     * @return The end of the statement range.\n\t                     */\n\t                    StatementRange.prototype.getEnd = function () {\n\t                        return this.end;\n\t                    };\n\t                    /**\n\t                     * The end of the statement range.\n\t                     *\n\t                     * @param end The end of the statement range.\n\t                     */\n\t                    StatementRange.prototype.setEnd = function (end) {\n\t                        this.end = end;\n\t                    };\n\t                    /**\n\t                     * Whether to include transactions.\n\t                     *\n\t                     * @return Whether to include transactions.\n\t                     */\n\t                    StatementRange.prototype.getIncludeTransactions = function () {\n\t                        return this.includeTransactions;\n\t                    };\n\t                    /**\n\t                     * Whether to include transactions.\n\t                     *\n\t                     * @param includeTransactions Whether to include transactions.\n\t                     */\n\t                    StatementRange.prototype.setIncludeTransactions = function (includeTransactions) {\n\t                        this.includeTransactions = includeTransactions;\n\t                    };\n\t                    return StatementRange;\n\t                })();\n\t                common.StatementRange = StatementRange;\n\t                Aggregate_add(StatementRange, \"INCTRAN\");\n\t                Element_add(StatementRange, { name: \"DTSTART\", order: 0, type: Date, read: StatementRange.prototype.getStart, write: StatementRange.prototype.setStart });\n\t                Element_add(StatementRange, { name: \"DTEND\", order: 10, type: Date, read: StatementRange.prototype.getEnd, write: StatementRange.prototype.setEnd });\n\t                Element_add(StatementRange, { name: \"INCLUDE\", required: true, order: 20, type: Boolean, read: StatementRange.prototype.getIncludeTransactions, write: StatementRange.prototype.setIncludeTransactions });\n\t            })(common = data.common || (data.common = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../RequestMessage'/>\n\t///<reference path='StatementRange'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var common;\n\t            (function (common) {\n\t                var RequestMessage = ofx4js.domain.data.RequestMessage;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 */\n\t                var StatementRequest = (function (_super) {\n\t                    __extends(StatementRequest, _super);\n\t                    function StatementRequest() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    /**\n\t                     * The statement range.\n\t                     *\n\t                     * @return The statement range.\n\t                     */\n\t                    StatementRequest.prototype.getStatementRange = function () {\n\t                        return this.statementRange;\n\t                    };\n\t                    /**\n\t                     * The statement range.\n\t                     *\n\t                     * @param statementRange The statement range.\n\t                     */\n\t                    StatementRequest.prototype.setStatementRange = function (statementRange) {\n\t                        this.statementRange = statementRange;\n\t                    };\n\t                    return StatementRequest;\n\t                })(RequestMessage);\n\t                common.StatementRequest = StatementRequest;\n\t                Aggregate_add(StatementRequest, \"STMTRQ\");\n\t                ChildAggregate_add(StatementRequest, { name: \"INCTRAN\", required: false, order: 10, type: common.StatementRange, read: StatementRequest.prototype.getStatementRange, write: StatementRequest.prototype.setStatementRange });\n\t            })(common = data.common || (data.common = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='ResponseMessage'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            /**\n\t             * A message set enclosed in a response envelope.\n\t             *\n\t             * @author Ryan Heaton\n\t             */\n\t            var ResponseMessageSet /*implements Comparable<ResponseMessageSet>*/ = (function () {\n\t                function ResponseMessageSet /*implements Comparable<ResponseMessageSet>*/() {\n\t                    this.version = \"1\";\n\t                }\n\t                ResponseMessageSet /*implements Comparable<ResponseMessageSet>*/.prototype.getType = function () { throw new ofx4js.OFXException(\"abstract\"); };\n\t                /**\n\t                 * The version of this message set.\n\t                 *\n\t                 * @return The version of this message set.\n\t                 */\n\t                ResponseMessageSet /*implements Comparable<ResponseMessageSet>*/.prototype.getVersion = function () {\n\t                    return this.version;\n\t                };\n\t                /**\n\t                 * The version of this message set.\n\t                 *\n\t                 * @param version The version of this message set.\n\t                 */\n\t                ResponseMessageSet /*implements Comparable<ResponseMessageSet>*/.prototype.setVersion = function (version) {\n\t                    this.version = version;\n\t                };\n\t                /**\n\t                 * The list of response messages.\n\t                 *\n\t                 * @return The list of response messages.\n\t                 */\n\t                ResponseMessageSet /*implements Comparable<ResponseMessageSet>*/.prototype.getResponseMessages = function () { throw new ofx4js.OFXException(\"abstract\"); };\n\t                /*\n\t                  // Inherited.\n\t                  public compareTo(o: ResponseMessageSet): number {\n\t                    return getType().compareTo(o.getType());\n\t                  }\n\t                */\n\t                ResponseMessageSet /*implements Comparable<ResponseMessageSet>*/.contentCompare = function (left, right) {\n\t                    return left.getType() - right.getType();\n\t                };\n\t                return ResponseMessageSet /*implements Comparable<ResponseMessageSet>*/;\n\t            })();\n\t            data.ResponseMessageSet /*implements Comparable<ResponseMessageSet>*/ = ResponseMessageSet /*implements Comparable<ResponseMessageSet>*/;\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='Status'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var common;\n\t            (function (common) {\n\t                function instanceof_StatusHolder(obj) {\n\t                    return (obj instanceof Object\n\t                        && (typeof obj.getStatusHolderName === 'function')\n\t                        && (typeof obj.getStatus === 'function'));\n\t                }\n\t                common.instanceof_StatusHolder = instanceof_StatusHolder;\n\t            })(common = data.common || (data.common = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../meta/Aggregate_add'/>\n\t///<reference path='../../meta/ChildAggregate_add'/>\n\t///<reference path='../../meta/Element_add'/>\n\t///<reference path='../../io/AggregateInfo'/>\n\t///<reference path='common/Status'/>\n\t///<reference path='common/StatusHolder'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var Status = ofx4js.domain.data.common.Status;\n\t            var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t            var Element_add = ofx4js.meta.Element_add;\n\t            /**\n\t             * A response message wrapped in a transaction.\n\t             *\n\t             * @author Ryan Heaton\n\t             * @see \"Section 2.4.6, OFX Spec\"\n\t             */\n\t            var TransactionWrappedResponseMessage = (function (_super) {\n\t                __extends(TransactionWrappedResponseMessage, _super);\n\t                function TransactionWrappedResponseMessage() {\n\t                    _super.apply(this, arguments);\n\t                }\n\t                /**\n\t                 * UID of this transaction.\n\t                 *\n\t                 * @return UID of this transaction.\n\t                 */\n\t                TransactionWrappedResponseMessage.prototype.getUID = function () {\n\t                    return this.UID;\n\t                };\n\t                /**\n\t                 * UID of this transaction.\n\t                 *\n\t                 * @param UID UID of this transaction.\n\t                 */\n\t                TransactionWrappedResponseMessage.prototype.setUID = function (UID) {\n\t                    this.UID = UID;\n\t                };\n\t                /**\n\t                 * Client cookie (echoed back by the response).\n\t                 *\n\t                 * @return Client cookie (echoed back by the response).\n\t                 */\n\t                TransactionWrappedResponseMessage.prototype.getClientCookie = function () {\n\t                    return this.clientCookie;\n\t                };\n\t                /**\n\t                 * Client cookie (echoed back by the response).\n\t                 *\n\t                 * @param clientCookie Client cookie (echoed back by the response).\n\t                 */\n\t                TransactionWrappedResponseMessage.prototype.setClientCookie = function (clientCookie) {\n\t                    this.clientCookie = clientCookie;\n\t                };\n\t                // Inherited.\n\t                TransactionWrappedResponseMessage.prototype.getStatusHolderName = function () {\n\t                    return this.getResponseMessageName();\n\t                };\n\t                // Inherited.\n\t                TransactionWrappedResponseMessage.prototype.getResponseMessageName = function () {\n\t                    var name = \"transaction response\";\n\t                    if (this.getWrappedMessage() != null) {\n\t                        name = this.getWrappedMessage().getResponseMessageName() + \" transaction\";\n\t                    }\n\t                    //    else if ((<any>(<Object>this).constructor).Aggregate) {\n\t                    //      // TODO- does this work?\n\t                    //      var aggregate: AggregateInfo = (<any>(<Object>this).constructor).Aggregate;\n\t                    //      name = aggregate.getName() + \" transaction\";\n\t                    //    }\n\t                    return name;\n\t                };\n\t                /**\n\t                 * Status of the transaction.\n\t                 *\n\t                 * @return Status of the transaction.\n\t                 */\n\t                TransactionWrappedResponseMessage.prototype.getStatus = function () {\n\t                    return this.status;\n\t                };\n\t                /**\n\t                 * Status of the transaction.\n\t                 *\n\t                 * @param status Status of the transaction.\n\t                 */\n\t                TransactionWrappedResponseMessage.prototype.setStatus = function (status) {\n\t                    this.status = status;\n\t                };\n\t                /**\n\t                 * Get the wrapped message.\n\t                 *\n\t                 * @return The wrapped message.\n\t                 */\n\t                TransactionWrappedResponseMessage.prototype.getWrappedMessage = function () { throw new ofx4js.OFXException(\"abstract\"); };\n\t                return TransactionWrappedResponseMessage;\n\t            })(data.ResponseMessage);\n\t            data.TransactionWrappedResponseMessage = TransactionWrappedResponseMessage;\n\t            Element_add(TransactionWrappedResponseMessage, { name: \"TRNUID\", required: true, order: 0, type: String, read: TransactionWrappedResponseMessage.prototype.getUID, write: TransactionWrappedResponseMessage.prototype.setUID });\n\t            Element_add(TransactionWrappedResponseMessage, { name: \"CLTCOOKIE\", order: 20, type: String, read: TransactionWrappedResponseMessage.prototype.getClientCookie, write: TransactionWrappedResponseMessage.prototype.setClientCookie });\n\t            ChildAggregate_add(TransactionWrappedResponseMessage, { required: true, order: 10, type: Status, read: TransactionWrappedResponseMessage.prototype.getStatus, write: TransactionWrappedResponseMessage.prototype.setStatus });\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../common/StatementResponse'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var banking;\n\t            (function (banking) {\n\t                var StatementResponse = ofx4js.domain.data.common.StatementResponse;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 */\n\t                var BankStatementResponse = (function (_super) {\n\t                    __extends(BankStatementResponse, _super);\n\t                    function BankStatementResponse() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    BankStatementResponse.prototype.getResponseMessageName = function () {\n\t                        return \"bank statement\";\n\t                    };\n\t                    /**\n\t                     * The account for the statement.\n\t                     *\n\t                     * @return The account for the statement.\n\t                     */\n\t                    BankStatementResponse.prototype.getAccount = function () {\n\t                        return this.account;\n\t                    };\n\t                    /**\n\t                     * The account for the statement.\n\t                     *\n\t                     * @param account The account for the statement.\n\t                     */\n\t                    BankStatementResponse.prototype.setAccount = function (account) {\n\t                        this.account = account;\n\t                    };\n\t                    return BankStatementResponse;\n\t                })(StatementResponse);\n\t                banking.BankStatementResponse = BankStatementResponse;\n\t                Aggregate_add(BankStatementResponse, \"STMTRS\");\n\t                ChildAggregate_add(BankStatementResponse, { name: \"BANKACCTFROM\", order: 10, type: banking.BankAccountDetails, read: BankStatementResponse.prototype.getAccount, write: BankStatementResponse.prototype.setAccount });\n\t            })(banking = data.banking || (data.banking = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../TransactionWrappedResponseMessage'/>\n\t///<reference path='BankStatementResponse'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var banking;\n\t            (function (banking) {\n\t                var TransactionWrappedResponseMessage = ofx4js.domain.data.TransactionWrappedResponseMessage;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 */\n\t                var BankStatementResponseTransaction = (function (_super) {\n\t                    __extends(BankStatementResponseTransaction, _super);\n\t                    function BankStatementResponseTransaction() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    /**\n\t                     * The message.\n\t                     *\n\t                     * @return The message.\n\t                     */\n\t                    BankStatementResponseTransaction.prototype.getMessage = function () {\n\t                        return this.message;\n\t                    };\n\t                    /**\n\t                     * The message.\n\t                     *\n\t                     * @param message The message.\n\t                     */\n\t                    BankStatementResponseTransaction.prototype.setMessage = function (message) {\n\t                        this.message = message;\n\t                    };\n\t                    // Inherited.\n\t                    BankStatementResponseTransaction.prototype.getWrappedMessage = function () {\n\t                        return this.getMessage();\n\t                    };\n\t                    return BankStatementResponseTransaction;\n\t                })(TransactionWrappedResponseMessage);\n\t                banking.BankStatementResponseTransaction = BankStatementResponseTransaction;\n\t                Aggregate_add(BankStatementResponseTransaction, \"STMTTRNRS\");\n\t                ChildAggregate_add(BankStatementResponseTransaction, { required: true, order: 30, type: banking.BankStatementResponse, read: BankStatementResponseTransaction.prototype.getMessage, write: BankStatementResponseTransaction.prototype.setMessage });\n\t            })(banking = data.banking || (data.banking = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../MessageSetType'/>\n\t///<reference path='../ResponseMessage'/>\n\t///<reference path='../ResponseMessageSet'/>\n\t///<reference path='BankStatementResponseTransaction'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var banking;\n\t            (function (banking) {\n\t                var MessageSetType = ofx4js.domain.data.MessageSetType;\n\t                var ResponseMessageSet = ofx4js.domain.data.ResponseMessageSet;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 */\n\t                var BankingResponseMessageSet = (function (_super) {\n\t                    __extends(BankingResponseMessageSet, _super);\n\t                    function BankingResponseMessageSet() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    BankingResponseMessageSet.prototype.getType = function () {\n\t                        return MessageSetType.banking;\n\t                    };\n\t                    /**\n\t                     * The statement response list.\n\t                     *\n\t                     * Most OFX files have a single statement response, except MT2OFX\n\t                     * which outputs OFX with multiple statement responses\n\t                     * in a single banking response message set.\n\t                     *\n\t                     * @return The statement response list.\n\t                     */\n\t                    BankingResponseMessageSet.prototype.getStatementResponses = function () {\n\t                        return this.statementResponses;\n\t                    };\n\t                    /**\n\t                     * The statement response.\n\t                     *\n\t                     * @param statementResponses The statement responses.\n\t                     */\n\t                    BankingResponseMessageSet.prototype.setStatementResponses = function (statementResponses) {\n\t                        this.statementResponses = statementResponses;\n\t                    };\n\t                    // Inherited.\n\t                    BankingResponseMessageSet.prototype.getResponseMessages = function () {\n\t                        return this.statementResponses;\n\t                    };\n\t                    /**\n\t                     * The first statement response.\n\t                     *\n\t                     * @return the first bank statement response.\n\t                     * @deprecated Use getStatementResponses() because sometimes there are multiple responses\n\t                     */\n\t                    BankingResponseMessageSet.prototype.getStatementResponse = function () {\n\t                        return this.statementResponses == null || this.statementResponses.length == 0 ? null : this.statementResponses[0];\n\t                    };\n\t                    BankingResponseMessageSet.prototype.setStatementResponse = function (statementResponse) {\n\t                        this.statementResponses = [statementResponse];\n\t                    };\n\t                    return BankingResponseMessageSet;\n\t                })(ResponseMessageSet);\n\t                banking.BankingResponseMessageSet = BankingResponseMessageSet;\n\t                Aggregate_add(BankingResponseMessageSet, \"BANKMSGSRSV1\");\n\t                ChildAggregate_add(BankingResponseMessageSet, { order: 0, type: Array, collectionEntryType: banking.BankStatementResponseTransaction, read: BankingResponseMessageSet.prototype.getStatementResponses, write: BankingResponseMessageSet.prototype.setStatementResponses });\n\t            })(banking = data.banking || (data.banking = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../common/StatementRequest'/>\n\t///<reference path='BankAccountDetails'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var banking;\n\t            (function (banking) {\n\t                var StatementRequest = ofx4js.domain.data.common.StatementRequest;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 */\n\t                var BankStatementRequest = (function (_super) {\n\t                    __extends(BankStatementRequest, _super);\n\t                    function BankStatementRequest() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    /**\n\t                     * The account details.\n\t                     *\n\t                     * @return The account details.\n\t                     */\n\t                    BankStatementRequest.prototype.getAccount = function () {\n\t                        return this.account;\n\t                    };\n\t                    /**\n\t                     * The account details.\n\t                     *\n\t                     * @param account The account details.\n\t                     */\n\t                    BankStatementRequest.prototype.setAccount = function (account) {\n\t                        this.account = account;\n\t                    };\n\t                    return BankStatementRequest;\n\t                })(StatementRequest);\n\t                banking.BankStatementRequest = BankStatementRequest;\n\t                Aggregate_add(BankStatementRequest, \"STMTRQ\");\n\t                ChildAggregate_add(BankStatementRequest, { name: \"BANKACCTFROM\", required: true, order: 0, type: banking.BankAccountDetails, read: BankStatementRequest.prototype.getAccount, write: BankStatementRequest.prototype.setAccount });\n\t            })(banking = data.banking || (data.banking = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='MessageSetType'/>\n\t///<reference path='RequestMessage'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            /**\n\t             * A message set enclosed in an OFX request envelope.\n\t             *\n\t             * @author Ryan Heaton\n\t             */\n\t            var RequestMessageSet /*implements Comparable<RequestMessageSet>*/ = (function () {\n\t                function RequestMessageSet /*implements Comparable<RequestMessageSet>*/() {\n\t                    this.version = \"1\";\n\t                }\n\t                RequestMessageSet /*implements Comparable<RequestMessageSet>*/.prototype.getType = function () { throw new ofx4js.OFXException(\"abstract\"); };\n\t                /**\n\t                 * The version of this request message.\n\t                 *\n\t                 * @return The version of this request message.\n\t                 */\n\t                RequestMessageSet /*implements Comparable<RequestMessageSet>*/.prototype.getVersion = function () {\n\t                    return this.version;\n\t                };\n\t                /**\n\t                 * The version of this request message.\n\t                 *\n\t                 * @param version The version of this request message.\n\t                 */\n\t                RequestMessageSet /*implements Comparable<RequestMessageSet>*/.prototype.setVersion = function (version) {\n\t                    this.version = version;\n\t                };\n\t                /**\n\t                 * The request messages for this request message set.\n\t                 *\n\t                 * @return The request messages for this request message set.\n\t                 */\n\t                RequestMessageSet /*implements Comparable<RequestMessageSet>*/.prototype.getRequestMessages = function () { throw new ofx4js.OFXException(\"abstract\"); };\n\t                // Inherited.\n\t                /*public compareTo(o: RequestMessageSet): number {\n\t                  return getType().compareTo(o.getType());\n\t                }*/\n\t                RequestMessageSet /*implements Comparable<RequestMessageSet>*/.contentCompare = function (left, right) {\n\t                    return left.getType() - right.getType();\n\t                };\n\t                return RequestMessageSet /*implements Comparable<RequestMessageSet>*/;\n\t            })();\n\t            data.RequestMessageSet /*implements Comparable<RequestMessageSet>*/ = RequestMessageSet /*implements Comparable<RequestMessageSet>*/;\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../project.d.ts'/>\n\t///<reference path='../../meta/Element_add'/>\n\t///<reference path='RequestMessage'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var Element_add = ofx4js.meta.Element_add;\n\t            var UUID = __webpack_require__(1);\n\t            /**\n\t             * A request message wrapped in a transaction.\n\t             *\n\t             * @author Ryan Heaton\n\t             * @see \"Section 2.4.6, OFX Spec\"\n\t             */\n\t            var TransactionWrappedRequestMessage = (function (_super) {\n\t                __extends(TransactionWrappedRequestMessage, _super);\n\t                function TransactionWrappedRequestMessage(UID) {\n\t                    if (UID === void 0) { UID = UUID.v1(); }\n\t                    _super.call(this);\n\t                    this.UID = UID;\n\t                }\n\t                /**\n\t                 * UID of this transaction.\n\t                 *\n\t                 * @return UID of this transaction.\n\t                 */\n\t                TransactionWrappedRequestMessage.prototype.getUID = function () {\n\t                    return this.UID;\n\t                };\n\t                /**\n\t                 * UID of this transaction.\n\t                 *\n\t                 * @param UID UID of this transaction.\n\t                 */\n\t                TransactionWrappedRequestMessage.prototype.setUID = function (UID) {\n\t                    this.UID = UID;\n\t                };\n\t                /**\n\t                 * Client cookie (echoed back by the response).\n\t                 *\n\t                 * @return Client cookie (echoed back by the response).\n\t                 */\n\t                TransactionWrappedRequestMessage.prototype.getClientCookie = function () {\n\t                    return this.clientCookie;\n\t                };\n\t                /**\n\t                 * Client cookie (echoed back by the response).\n\t                 *\n\t                 * @param clientCookie Client cookie (echoed back by the response).\n\t                 */\n\t                TransactionWrappedRequestMessage.prototype.setClientCookie = function (clientCookie) {\n\t                    this.clientCookie = clientCookie;\n\t                };\n\t                /**\n\t                 * The transaction authorization number.\n\t                 *\n\t                 * @return The transaction authorization number.\n\t                 */\n\t                TransactionWrappedRequestMessage.prototype.getTransactionAuthorizationNumber = function () {\n\t                    return this.transactionAuthorizationNumber;\n\t                };\n\t                /**\n\t                 * The transaction authorization number.\n\t                 *\n\t                 * @param transactionAuthorizationNumber The transaction authorization number.\n\t                 */\n\t                TransactionWrappedRequestMessage.prototype.setTransactionAuthorizationNumber = function (transactionAuthorizationNumber) {\n\t                    this.transactionAuthorizationNumber = transactionAuthorizationNumber;\n\t                };\n\t                /**\n\t                 * Set the wrapped message.\n\t                 *\n\t                 * @param message The wrapped message.\n\t                 */\n\t                TransactionWrappedRequestMessage.prototype.setWrappedMessage = function (message) { throw new ofx4js.OFXException(\"abstract\"); };\n\t                return TransactionWrappedRequestMessage;\n\t            })(data.RequestMessage);\n\t            data.TransactionWrappedRequestMessage = TransactionWrappedRequestMessage;\n\t            Element_add(TransactionWrappedRequestMessage, { name: \"TRNUID\", required: true, order: 0, type: String, read: TransactionWrappedRequestMessage.prototype.getUID, write: TransactionWrappedRequestMessage.prototype.setUID });\n\t            Element_add(TransactionWrappedRequestMessage, { name: \"CLTCOOKIE\", order: 10, type: String, read: TransactionWrappedRequestMessage.prototype.getClientCookie, write: TransactionWrappedRequestMessage.prototype.setClientCookie });\n\t            Element_add(TransactionWrappedRequestMessage, { name: \"TAN\", order: 20, type: String, read: TransactionWrappedRequestMessage.prototype.getTransactionAuthorizationNumber, write: TransactionWrappedRequestMessage.prototype.setTransactionAuthorizationNumber });\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../TransactionWrappedRequestMessage'/>\n\t///<reference path='BankStatementRequest'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var banking;\n\t            (function (banking) {\n\t                var TransactionWrappedRequestMessage = ofx4js.domain.data.TransactionWrappedRequestMessage;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 */\n\t                var BankStatementRequestTransaction = (function (_super) {\n\t                    __extends(BankStatementRequestTransaction, _super);\n\t                    function BankStatementRequestTransaction() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    /**\n\t                     * The message.\n\t                     *\n\t                     * @return The message.\n\t                     */\n\t                    BankStatementRequestTransaction.prototype.getMessage = function () {\n\t                        return this.message;\n\t                    };\n\t                    /**\n\t                     * The message.\n\t                     *\n\t                     * @param message The message.\n\t                     *\n\t                     */\n\t                    BankStatementRequestTransaction.prototype.setMessage = function (message) {\n\t                        this.message = message;\n\t                    };\n\t                    // Inherited.\n\t                    BankStatementRequestTransaction.prototype.setWrappedMessage = function (message) {\n\t                        this.setMessage(message);\n\t                    };\n\t                    return BankStatementRequestTransaction;\n\t                })(TransactionWrappedRequestMessage);\n\t                banking.BankStatementRequestTransaction = BankStatementRequestTransaction;\n\t                Aggregate_add(BankStatementRequestTransaction, \"STMTTRNRQ\");\n\t                ChildAggregate_add(BankStatementRequestTransaction, { required: true, order: 30, type: banking.BankStatementRequest, read: BankStatementRequestTransaction.prototype.getMessage, write: BankStatementRequestTransaction.prototype.setMessage });\n\t            })(banking = data.banking || (data.banking = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../MessageSetType'/>\n\t///<reference path='../RequestMessageSet'/>\n\t///<reference path='BankStatementRequestTransaction'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var banking;\n\t            (function (banking) {\n\t                var MessageSetType = ofx4js.domain.data.MessageSetType;\n\t                var RequestMessageSet = ofx4js.domain.data.RequestMessageSet;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 */\n\t                var BankingRequestMessageSet = (function (_super) {\n\t                    __extends(BankingRequestMessageSet, _super);\n\t                    function BankingRequestMessageSet() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    BankingRequestMessageSet.prototype.getType = function () {\n\t                        return MessageSetType.banking;\n\t                    };\n\t                    /**\n\t                     * The statement request.\n\t                     *\n\t                     * @return The statement request.\n\t                     */\n\t                    BankingRequestMessageSet.prototype.getStatementRequest = function () {\n\t                        return this.statementRequest;\n\t                    };\n\t                    /**\n\t                     * The statement request.\n\t                     *\n\t                     * @param statementRequest The statement request.\n\t                     */\n\t                    BankingRequestMessageSet.prototype.setStatementRequest = function (statementRequest) {\n\t                        this.statementRequest = statementRequest;\n\t                    };\n\t                    // Inherited.\n\t                    BankingRequestMessageSet.prototype.getRequestMessages = function () {\n\t                        var requestMessages = [];\n\t                        if (this.getStatementRequest() != null) {\n\t                            requestMessages.push(this.getStatementRequest());\n\t                        }\n\t                        return requestMessages;\n\t                    };\n\t                    return BankingRequestMessageSet;\n\t                })(RequestMessageSet);\n\t                banking.BankingRequestMessageSet = BankingRequestMessageSet;\n\t                Aggregate_add(BankingRequestMessageSet, \"BANKMSGSRQV1\");\n\t                ChildAggregate_add(BankingRequestMessageSet, { order: 0, type: banking.BankStatementRequestTransaction, read: BankingRequestMessageSet.prototype.getStatementRequest, write: BankingRequestMessageSet.prototype.setStatementRequest });\n\t            })(banking = data.banking || (data.banking = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../OFXException'/>\n\t///<reference path='../../client/AccountStatement'/>\n\t///<reference path='../../client/FinancialInstitutionAccount'/>\n\t///<reference path='../../domain/data/common/StatementRange'/>\n\t///<reference path='../../domain/data/common/StatementRequest'/>\n\t///<reference path='../../domain/data/common/StatementResponse'/>\n\t///<reference path='../../domain/data/creditcard/CreditCardAccountDetails'/>\n\t///<reference path='../../domain/data/investment/accounts/InvestmentAccountDetails'/>\n\t///<reference path='../../domain/data/MessageSetType'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var client;\n\t    (function (client) {\n\t        var impl;\n\t        (function (impl) {\n\t            var OFXException = ofx4js.OFXException;\n\t            //import data.* = ofx4js.domain.data.*;\n\t            var MessageSetType = ofx4js.domain.data.MessageSetType;\n\t            var BankAccountDetails = ofx4js.domain.data.banking.BankAccountDetails;\n\t            var StatementRange = ofx4js.domain.data.common.StatementRange;\n\t            var CreditCardAccountDetails = ofx4js.domain.data.creditcard.CreditCardAccountDetails;\n\t            var InvestmentAccountDetails = ofx4js.domain.data.investment.accounts.InvestmentAccountDetails;\n\t            /**\n\t             * Base account implementation. Supports banking and credit card accounts.\n\t             *\n\t             * @author Ryan Heaton\n\t             */\n\t            var BaseAccountImpl = (function () {\n\t                function BaseAccountImpl(details, username, password, institution) {\n\t                    this.details = details;\n\t                    this.username = username;\n\t                    this.password = password;\n\t                    this.institution = institution;\n\t                    this.messageType = this.getMessageSetType(details);\n\t                }\n\t                /**\n\t                 * Get the message set type of the specified details.\n\t                 *\n\t                 * @param details The details.\n\t                 * @return The message set type.\n\t                 */\n\t                BaseAccountImpl.prototype.getMessageSetType = function (details) {\n\t                    var messageType;\n\t                    if (details instanceof BankAccountDetails) {\n\t                        messageType = MessageSetType.banking;\n\t                    }\n\t                    else if (this.getDetails() instanceof CreditCardAccountDetails) {\n\t                        messageType = MessageSetType.creditcard;\n\t                    }\n\t                    else if (this.getDetails() instanceof InvestmentAccountDetails) {\n\t                        messageType = MessageSetType.investment;\n\t                    }\n\t                    else {\n\t                        throw new OFXException(\"Illegal details\");\n\t                    }\n\t                    return messageType;\n\t                };\n\t                BaseAccountImpl.prototype.readStatement = function (start, end) {\n\t                    var _this = this;\n\t                    var range = new StatementRange();\n\t                    range.setIncludeTransactions(true);\n\t                    range.setStart(start);\n\t                    range.setEnd(end);\n\t                    var request = this.institution.createAuthenticatedRequest(this.username, this.password);\n\t                    var requestTransaction = this.createTransaction();\n\t                    requestTransaction.setWrappedMessage(this.createStatementRequest(this.getDetails(), range));\n\t                    request.getMessageSets().insert(this.createRequestMessageSet(requestTransaction));\n\t                    return this.institution.sendRequest(request)\n\t                        .then(function (response) {\n\t                        _this.institution.doGeneralValidationChecks(request, response);\n\t                        return _this.unwrapStatementResponse(response);\n\t                    });\n\t                };\n\t                /**\n\t                 * Unwrap the statement response from the specified response envelope.\n\t                 *\n\t                 * @param response The response envelope to unwrap.\n\t                 * @return The response.\n\t                 */\n\t                BaseAccountImpl.prototype.unwrapStatementResponse = function (response) { throw new OFXException(\"abstract\"); };\n\t                /**\n\t                 * Create a request message set from the specified transaction.\n\t                 *\n\t                 * @param transaction The transaction.\n\t                 * @return The request message set.\n\t                 */\n\t                BaseAccountImpl.prototype.createRequestMessageSet = function (transaction) { throw new OFXException(\"abstract\"); };\n\t                /**\n\t                 * Create a transaction.\n\t                 *\n\t                 * @return The transaction.\n\t                 */\n\t                BaseAccountImpl.prototype.createTransaction = function () { throw new OFXException(\"abstract\"); };\n\t                /**\n\t                 * Create a statement request.\n\t                 *\n\t                 * @param details The details.\n\t                 * @param range the range.\n\t                 * @return The statement request.\n\t                 */\n\t                BaseAccountImpl.prototype.createStatementRequest = function (details, range) { throw new OFXException(\"abstract\"); };\n\t                /**\n\t                 * The details of this account.\n\t                 *\n\t                 * @return The details of this account.\n\t                 */\n\t                BaseAccountImpl.prototype.getDetails = function () {\n\t                    return this.details;\n\t                };\n\t                /**\n\t                 * The message set type.\n\t                 *\n\t                 * @return The message set type.\n\t                 */\n\t                BaseAccountImpl.prototype.getMessageType = function () {\n\t                    return this.messageType;\n\t                };\n\t                return BaseAccountImpl;\n\t            })();\n\t            impl.BaseAccountImpl = BaseAccountImpl;\n\t        })(impl = client.impl || (client.impl = {}));\n\t    })(client = ofx4js.client || (ofx4js.client = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var signon;\n\t            (function (signon) {\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 */\n\t                var FinancialInstitution = (function () {\n\t                    function FinancialInstitution() {\n\t                    }\n\t                    /**\n\t                     * Financial institution id.\n\t                     *\n\t                     * @return Financial institution id.\n\t                     */\n\t                    FinancialInstitution.prototype.getId = function () {\n\t                        return this.id;\n\t                    };\n\t                    /**\n\t                     * Financial institution id.\n\t                     *\n\t                     * @param id Financial institution id.\n\t                     */\n\t                    FinancialInstitution.prototype.setId = function (id) {\n\t                        this.id = id;\n\t                    };\n\t                    /**\n\t                     * The organization.\n\t                     *\n\t                     * @return The organization.\n\t                     */\n\t                    FinancialInstitution.prototype.getOrganization = function () {\n\t                        return this.organization;\n\t                    };\n\t                    /**\n\t                     * The organization.\n\t                     *\n\t                     * @param organization The organization.\n\t                     */\n\t                    FinancialInstitution.prototype.setOrganization = function (organization) {\n\t                        this.organization = organization;\n\t                    };\n\t                    return FinancialInstitution;\n\t                })();\n\t                signon.FinancialInstitution = FinancialInstitution;\n\t                Aggregate_add(FinancialInstitution, \"FI\");\n\t                Element_add(FinancialInstitution, { name: \"FID\", order: 10, type: String, read: FinancialInstitution.prototype.getId, write: FinancialInstitution.prototype.setId });\n\t                Element_add(FinancialInstitution, { name: \"ORG\", required: true, order: 0, type: String, read: FinancialInstitution.prototype.getOrganization, write: FinancialInstitution.prototype.setOrganization });\n\t            })(signon = data.signon || (data.signon = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\t///<reference path='../RequestMessage'/>\n\t///<reference path='FinancialInstitution'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var signon;\n\t            (function (signon) {\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                var RequestMessage = ofx4js.domain.data.RequestMessage;\n\t                /**\n\t                 * Sign-on request\n\t                 *\n\t                 * @author Ryan Heaton\n\t                 * @see \"Section 2.5.1.2, OFX Spec.\"\n\t                 */\n\t                var SignonRequest = (function (_super) {\n\t                    __extends(SignonRequest, _super);\n\t                    function SignonRequest() {\n\t                        _super.call(this);\n\t                        this.language = \"ENG\"; //Locale.US.getISO3Language().toUpperCase();\n\t                        this.applicationId = \"Money\"; //many institutions just won't work with an unrecognized app id...\n\t                        this.applicationVersion = \"1600\"; //many institutions just won't work with an unrecognized app id...\n\t                    }\n\t                    /**\n\t                     * The date and time of the request.\n\t                     *\n\t                     * @return The date and time of the request.\n\t                     */\n\t                    SignonRequest.prototype.getTimestamp = function () {\n\t                        return this.timestamp;\n\t                    };\n\t                    /**\n\t                     * The date and time of the request.\n\t                     *\n\t                     * @param timestamp The date and time of the request.\n\t                     */\n\t                    SignonRequest.prototype.setTimestamp = function (timestamp) {\n\t                        this.timestamp = timestamp;\n\t                    };\n\t                    /**\n\t                     * The user id.\n\t                     *\n\t                     * @return The user id.\n\t                     */\n\t                    SignonRequest.prototype.getUserId = function () {\n\t                        return this.userId;\n\t                    };\n\t                    /**\n\t                     * The user id.\n\t                     *\n\t                     * @param userId The user id.\n\t                     */\n\t                    SignonRequest.prototype.setUserId = function (userId) {\n\t                        this.userId = userId;\n\t                    };\n\t                    /**\n\t                     * The password.\n\t                     *\n\t                     * @return The password.\n\t                     */\n\t                    SignonRequest.prototype.getPassword = function () {\n\t                        return this.password;\n\t                    };\n\t                    /**\n\t                     * The password.\n\t                     *\n\t                     * @param password The password.\n\t                     */\n\t                    SignonRequest.prototype.setPassword = function (password) {\n\t                        this.password = password;\n\t                    };\n\t                    /**\n\t                     * The user key provided by the server so as not to require further username/password authentication.\n\t                     *\n\t                     * @return The user key provided by the server so as not to require further username/password authentication.\n\t                     */\n\t                    SignonRequest.prototype.getUserKey = function () {\n\t                        return this.userKey;\n\t                    };\n\t                    /**\n\t                     * The user key provided by the server so as not to require further username/password authentication.\n\t                     *\n\t                     * @param userKey The user key provided by the server so as not to require further username/password authentication.\n\t                     */\n\t                    SignonRequest.prototype.setUserKey = function (userKey) {\n\t                        this.userKey = userKey;\n\t                    };\n\t                    /**\n\t                     * Whether to request the server to generate a user key.\n\t                     *\n\t                     * @return Whether to request the server to generate a user key.\n\t                     */\n\t                    SignonRequest.prototype.getGenerateUserKey = function () {\n\t                        return this.generateUserKey;\n\t                    };\n\t                    /**\n\t                     * Whether to request the server to generate a user key.\n\t                     *\n\t                     * @param generateUserKey Whether to request the server to generate a user key.\n\t                     */\n\t                    SignonRequest.prototype.setGenerateUserKey = function (generateUserKey) {\n\t                        this.generateUserKey = generateUserKey;\n\t                    };\n\t                    /**\n\t                     * The three-letter langauge code.\n\t                     *\n\t                     * @return The three-letter langauge code.\n\t                     * @see java.util.Locale#getISO3Language()\n\t                     */\n\t                    SignonRequest.prototype.getLanguage = function () {\n\t                        return this.language;\n\t                    };\n\t                    /**\n\t                     * The three-letter langauge code.\n\t                     *\n\t                     * @param language The three-letter langauge code.\n\t                     */\n\t                    SignonRequest.prototype.setLanguage = function (language) {\n\t                        this.language = language;\n\t                    };\n\t                    /**\n\t                     * The financial institution.\n\t                     *\n\t                     * @return The financial institution.\n\t                     */\n\t                    SignonRequest.prototype.getFinancialInstitution = function () {\n\t                        return this.financialInstitution;\n\t                    };\n\t                    /**\n\t                     * The financial institution.\n\t                     *\n\t                     * @param financialInstitution The financial institution.\n\t                     */\n\t                    SignonRequest.prototype.setFinancialInstitution = function (financialInstitution) {\n\t                        this.financialInstitution = financialInstitution;\n\t                    };\n\t                    /**\n\t                     * The server-supplied session id.\n\t                     *\n\t                     * @return The server-supplied session id.\n\t                     */\n\t                    SignonRequest.prototype.getSessionId = function () {\n\t                        return this.sessionId;\n\t                    };\n\t                    /**\n\t                     * The server-supplied session id.\n\t                     *\n\t                     * @param sessionId The server-supplied session id.\n\t                     */\n\t                    SignonRequest.prototype.setSessionId = function (sessionId) {\n\t                        this.sessionId = sessionId;\n\t                    };\n\t                    /**\n\t                     * The application id.\n\t                     *\n\t                     * @return The application id.\n\t                     */\n\t                    SignonRequest.prototype.getApplicationId = function () {\n\t                        return this.applicationId;\n\t                    };\n\t                    /**\n\t                     * The application id.\n\t                     *\n\t                     * @param applicationId The application id.\n\t                     */\n\t                    SignonRequest.prototype.setApplicationId = function (applicationId) {\n\t                        this.applicationId = applicationId;\n\t                    };\n\t                    /**\n\t                     * The application version.\n\t                     *\n\t                     * @return The application version.\n\t                     */\n\t                    SignonRequest.prototype.getApplicationVersion = function () {\n\t                        return this.applicationVersion;\n\t                    };\n\t                    /**\n\t                     * The application version.\n\t                     *\n\t                     * @param applicationVersion The application version.\n\t                     */\n\t                    SignonRequest.prototype.setApplicationVersion = function (applicationVersion) {\n\t                        this.applicationVersion = applicationVersion;\n\t                    };\n\t                    /**\n\t                     * The client-supplied UID.\n\t                     *\n\t                     * @return The client-supplied UID.\n\t                     */\n\t                    SignonRequest.prototype.getClientUID = function () {\n\t                        return this.clientUID;\n\t                    };\n\t                    /**\n\t                     * The client-supplied UID.\n\t                     *\n\t                     * @param clientUID The client-supplied UID.\n\t                     */\n\t                    SignonRequest.prototype.setClientUID = function (clientUID) {\n\t                        this.clientUID = clientUID;\n\t                    };\n\t                    /**\n\t                     * Any additional credentials.\n\t                     *\n\t                     * @return Any additional credentials.\n\t                     */\n\t                    SignonRequest.prototype.getAdditionalCredentials1 = function () {\n\t                        return this.additionalCredentials1;\n\t                    };\n\t                    /**\n\t                     * Any additional credentials.\n\t                     *\n\t                     * @param additionalCredentials1 Any additional credentials.\n\t                     */\n\t                    SignonRequest.prototype.setAdditionalCredentials1 = function (additionalCredentials1) {\n\t                        this.additionalCredentials1 = additionalCredentials1;\n\t                    };\n\t                    /**\n\t                     * Any additional credentials.\n\t                     *\n\t                     * @return Any additional credentials.\n\t                     */\n\t                    SignonRequest.prototype.getAdditionalCredentials2 = function () {\n\t                        return this.additionalCredentials2;\n\t                    };\n\t                    /**\n\t                     * Any additional credentials.\n\t                     *\n\t                     * @param additionalCredentials2 Any additional credentials.\n\t                     */\n\t                    SignonRequest.prototype.setAdditionalCredentials2 = function (additionalCredentials2) {\n\t                        this.additionalCredentials2 = additionalCredentials2;\n\t                    };\n\t                    /**\n\t                     * The authentication token.\n\t                     *\n\t                     * @return The authentication token.\n\t                     */\n\t                    SignonRequest.prototype.getAuthToken = function () {\n\t                        return this.authToken;\n\t                    };\n\t                    /**\n\t                     * The authentication token.\n\t                     *\n\t                     * @param authToken The authentication token.\n\t                     */\n\t                    SignonRequest.prototype.setAuthToken = function (authToken) {\n\t                        this.authToken = authToken;\n\t                    };\n\t                    /**\n\t                     * The access key.\n\t                     *\n\t                     * @return The access key.\n\t                     */\n\t                    SignonRequest.prototype.getAccessKey = function () {\n\t                        return this.accessKey;\n\t                    };\n\t                    /**\n\t                     * The access key.\n\t                     *\n\t                     * @param accessKey The access key.\n\t                     */\n\t                    SignonRequest.prototype.setAccessKey = function (accessKey) {\n\t                        this.accessKey = accessKey;\n\t                    };\n\t                    /**\n\t                     * @see \"Section 2.5.1\"\n\t                     */\n\t                    SignonRequest.ANONYMOUS_USER = \"anonymous00000000000000000000000\";\n\t                    return SignonRequest;\n\t                })(RequestMessage);\n\t                signon.SignonRequest = SignonRequest;\n\t                Aggregate_add(SignonRequest, \"SONRQ\");\n\t                Element_add(SignonRequest, { name: \"DTCLIENT\", required: true, order: 0, type: Date, read: SignonRequest.prototype.getTimestamp, write: SignonRequest.prototype.setTimestamp });\n\t                Element_add(SignonRequest, { name: \"USERID\", order: 10, type: String, read: SignonRequest.prototype.getUserId, write: SignonRequest.prototype.setUserId });\n\t                Element_add(SignonRequest, { name: \"USERPASS\", order: 20, type: String, read: SignonRequest.prototype.getPassword, write: SignonRequest.prototype.setPassword });\n\t                Element_add(SignonRequest, { name: \"USERKEY\", order: 30, type: String, read: SignonRequest.prototype.getUserKey, write: SignonRequest.prototype.setUserKey });\n\t                Element_add(SignonRequest, { name: \"GENUSERKEY\", order: 40, type: Boolean, read: SignonRequest.prototype.getGenerateUserKey, write: SignonRequest.prototype.setGenerateUserKey });\n\t                Element_add(SignonRequest, { name: \"LANGUAGE\", required: true, order: 50, type: String, read: SignonRequest.prototype.getLanguage, write: SignonRequest.prototype.setLanguage });\n\t                ChildAggregate_add(SignonRequest, { order: 60, type: signon.FinancialInstitution, read: SignonRequest.prototype.getFinancialInstitution, write: SignonRequest.prototype.setFinancialInstitution });\n\t                Element_add(SignonRequest, { name: \"SESSCOOKIE\", order: 70, type: String, read: SignonRequest.prototype.getSessionId, write: SignonRequest.prototype.setSessionId });\n\t                Element_add(SignonRequest, { name: \"APPID\", required: true, order: 80, type: String, read: SignonRequest.prototype.getApplicationId, write: SignonRequest.prototype.setApplicationId });\n\t                Element_add(SignonRequest, { name: \"APPVER\", required: true, order: 90, type: String, read: SignonRequest.prototype.getApplicationVersion, write: SignonRequest.prototype.setApplicationVersion });\n\t                Element_add(SignonRequest, { name: \"CLIENTUID\", order: 100, type: String, read: SignonRequest.prototype.getClientUID, write: SignonRequest.prototype.setClientUID });\n\t                Element_add(SignonRequest, { name: \"USERCRED1\", order: 110, type: String, read: SignonRequest.prototype.getAdditionalCredentials1, write: SignonRequest.prototype.setAdditionalCredentials1 });\n\t                Element_add(SignonRequest, { name: \"USERCRED2\", order: 120, type: String, read: SignonRequest.prototype.getAdditionalCredentials2, write: SignonRequest.prototype.setAdditionalCredentials2 });\n\t                Element_add(SignonRequest, { name: \"AUTHTOKEN\", order: 130, type: String, read: SignonRequest.prototype.getAuthToken, write: SignonRequest.prototype.setAuthToken });\n\t                Element_add(SignonRequest, { name: \"ACCESSKEY\", order: 140, type: String, read: SignonRequest.prototype.getAccessKey, write: SignonRequest.prototype.setAccessKey });\n\t            })(signon = data.signon || (data.signon = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\t///<reference path='../RequestMessage'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var signon;\n\t            (function (signon) {\n\t                var RequestMessage = ofx4js.domain.data.RequestMessage;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                /**\n\t                 * Request to change a user password.\n\t                 *\n\t                 * @author Ryan Heaton\n\t                 * @see \"Section 2.5.2.1, OFX Spec.\"\n\t                 */\n\t                var PasswordChangeRequest = (function (_super) {\n\t                    __extends(PasswordChangeRequest, _super);\n\t                    function PasswordChangeRequest() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    /**\n\t                     * The id of the user changing password.\n\t                     *\n\t                     * @return The id of the user changing password.\n\t                     */\n\t                    PasswordChangeRequest.prototype.getUserId = function () {\n\t                        return this.userId;\n\t                    };\n\t                    /**\n\t                     * The id of the user changing password.\n\t                     *\n\t                     * @param userId The id of the user changing password.\n\t                     */\n\t                    PasswordChangeRequest.prototype.setUserId = function (userId) {\n\t                        this.userId = userId;\n\t                    };\n\t                    /**\n\t                     * The new password.\n\t                     *\n\t                     * @return The new password.\n\t                     */\n\t                    PasswordChangeRequest.prototype.getNewPassword = function () {\n\t                        return this.newPassword;\n\t                    };\n\t                    /**\n\t                     * The new password.\n\t                     *\n\t                     * @param newPassword The new password.\n\t                     */\n\t                    PasswordChangeRequest.prototype.setNewPassword = function (newPassword) {\n\t                        this.newPassword = newPassword;\n\t                    };\n\t                    return PasswordChangeRequest;\n\t                })(RequestMessage);\n\t                signon.PasswordChangeRequest = PasswordChangeRequest;\n\t                Aggregate_add(PasswordChangeRequest, \"PINCHRQ\");\n\t                Element_add(PasswordChangeRequest, { name: \"USERID\", required: true, order: 0, type: String, read: PasswordChangeRequest.prototype.getUserId, write: PasswordChangeRequest.prototype.setUserId });\n\t                Element_add(PasswordChangeRequest, { name: \"NEWUSERPASS\", required: true, order: 10, type: String, read: PasswordChangeRequest.prototype.getNewPassword, write: PasswordChangeRequest.prototype.setNewPassword });\n\t            })(signon = data.signon || (data.signon = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../TransactionWrappedRequestMessage'/>\n\t///<reference path='PasswordChangeRequest'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var signon;\n\t            (function (signon) {\n\t                var TransactionWrappedRequestMessage = ofx4js.domain.data.TransactionWrappedRequestMessage;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 */\n\t                var PasswordChangeRequestTransaction = (function (_super) {\n\t                    __extends(PasswordChangeRequestTransaction, _super);\n\t                    function PasswordChangeRequestTransaction() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    /**\n\t                     * The wrapped message.\n\t                     *\n\t                     * @return The wrapped message.\n\t                     */\n\t                    PasswordChangeRequestTransaction.prototype.getMessage = function () {\n\t                        return this.message;\n\t                    };\n\t                    /**\n\t                     * The wrapped message.\n\t                     *\n\t                     * @param message The wrapped message.\n\t                     */\n\t                    PasswordChangeRequestTransaction.prototype.setMessage = function (message) {\n\t                        this.message = message;\n\t                    };\n\t                    // Inherited.\n\t                    PasswordChangeRequestTransaction.prototype.setWrappedMessage = function (message) {\n\t                        this.setMessage(message);\n\t                    };\n\t                    return PasswordChangeRequestTransaction;\n\t                })(TransactionWrappedRequestMessage);\n\t                signon.PasswordChangeRequestTransaction = PasswordChangeRequestTransaction;\n\t                Aggregate_add(PasswordChangeRequestTransaction, \"PINCHTRNRQ\");\n\t                ChildAggregate_add(PasswordChangeRequestTransaction, { required: true, order: 30, type: signon.PasswordChangeRequest, read: PasswordChangeRequestTransaction.prototype.getMessage, write: PasswordChangeRequestTransaction.prototype.setMessage });\n\t            })(signon = data.signon || (data.signon = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../MessageSetType'/>\n\t///<reference path='../RequestMessageSet'/>\n\t///<reference path='../RequestMessage'/>\n\t///<reference path='SignonRequest'/>\n\t///<reference path='PasswordChangeRequestTransaction'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var signon;\n\t            (function (signon) {\n\t                var MessageSetType = ofx4js.domain.data.MessageSetType;\n\t                var RequestMessageSet = ofx4js.domain.data.RequestMessageSet;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                /**\n\t                 * The sign-on request message set.\n\t                 *\n\t                 * @author Ryan Heaton\n\t                 * @see \"Section 2.5, OFX Spec.\"\n\t                 */\n\t                var SignonRequestMessageSet = (function (_super) {\n\t                    __extends(SignonRequestMessageSet, _super);\n\t                    function SignonRequestMessageSet() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    SignonRequestMessageSet.prototype.getType = function () {\n\t                        return MessageSetType.signon;\n\t                    };\n\t                    /**\n\t                     * The message for this message set.\n\t                     *\n\t                     * @return The message for this message set.\n\t                     */\n\t                    SignonRequestMessageSet.prototype.getSignonRequest = function () {\n\t                        return this.signonRequest;\n\t                    };\n\t                    /**\n\t                     * The message for this message set.\n\t                     *\n\t                     * @param signonRequest The message for this message set.\n\t                     */\n\t                    SignonRequestMessageSet.prototype.setSignonRequest = function (signonRequest) {\n\t                        this.signonRequest = signonRequest;\n\t                    };\n\t                    /**\n\t                     * The password change request.\n\t                     *\n\t                     * @return The password change request.\n\t                     */\n\t                    SignonRequestMessageSet.prototype.getPasswordChangeRequest = function () {\n\t                        return this.passwordChangeRequest;\n\t                    };\n\t                    /**\n\t                     * The password change request.\n\t                     *\n\t                     * @param passwordChangeRequest The password change request.\n\t                     */\n\t                    SignonRequestMessageSet.prototype.setPasswordChangeRequest = function (passwordChangeRequest) {\n\t                        this.passwordChangeRequest = passwordChangeRequest;\n\t                    };\n\t                    //todo: challenge request/response\n\t                    // Inherited.\n\t                    SignonRequestMessageSet.prototype.getRequestMessages = function () {\n\t                        var requestMessages = new Array();\n\t                        if (this.getSignonRequest() != null) {\n\t                            requestMessages.push(this.getSignonRequest());\n\t                        }\n\t                        if (this.getPasswordChangeRequest() != null) {\n\t                            requestMessages.push(this.getPasswordChangeRequest());\n\t                        }\n\t                        return requestMessages;\n\t                    };\n\t                    return SignonRequestMessageSet;\n\t                })(RequestMessageSet);\n\t                signon.SignonRequestMessageSet = SignonRequestMessageSet;\n\t                Aggregate_add(SignonRequestMessageSet, \"SIGNONMSGSRQV1\");\n\t                ChildAggregate_add(SignonRequestMessageSet, { required: true, order: 0, type: signon.SignonRequest, read: SignonRequestMessageSet.prototype.getSignonRequest, write: SignonRequestMessageSet.prototype.setSignonRequest });\n\t                ChildAggregate_add(SignonRequestMessageSet, { order: 10, type: signon.PasswordChangeRequestTransaction, read: SignonRequestMessageSet.prototype.getPasswordChangeRequest, write: SignonRequestMessageSet.prototype.setPasswordChangeRequest });\n\t            })(signon = data.signon || (data.signon = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\t///<reference path='../RequestMessage'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var signup;\n\t            (function (signup) {\n\t                var RequestMessage = ofx4js.domain.data.RequestMessage;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 */\n\t                var AccountInfoRequest = (function (_super) {\n\t                    __extends(AccountInfoRequest, _super);\n\t                    function AccountInfoRequest() {\n\t                        _super.call(this);\n\t                        this.lastUpdated = new Date(0); //default is never updated.\n\t                    }\n\t                    /**\n\t                     * When the account info was last updated.\n\t                     *\n\t                     * @return When the account info was last updated.\n\t                     */\n\t                    AccountInfoRequest.prototype.getLastUpdated = function () {\n\t                        return this.lastUpdated;\n\t                    };\n\t                    /**\n\t                     * When the account info was last updated.\n\t                     *\n\t                     * @param lastUpdated When the account info was last updated.\n\t                     */\n\t                    AccountInfoRequest.prototype.setLastUpdated = function (lastUpdated) {\n\t                        this.lastUpdated = lastUpdated;\n\t                    };\n\t                    return AccountInfoRequest;\n\t                })(RequestMessage);\n\t                signup.AccountInfoRequest = AccountInfoRequest;\n\t                Aggregate_add(AccountInfoRequest, \"ACCTINFORQ\");\n\t                Element_add(AccountInfoRequest, { name: \"DTACCTUP\", required: true, order: 0, type: Date, read: AccountInfoRequest.prototype.getLastUpdated, write: AccountInfoRequest.prototype.setLastUpdated });\n\t            })(signup = data.signup || (data.signup = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../TransactionWrappedRequestMessage'/>\n\t///<reference path='AccountInfoRequest'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var signup;\n\t            (function (signup) {\n\t                var TransactionWrappedRequestMessage = ofx4js.domain.data.TransactionWrappedRequestMessage;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 */\n\t                var AccountInfoRequestTransaction = (function (_super) {\n\t                    __extends(AccountInfoRequestTransaction, _super);\n\t                    function AccountInfoRequestTransaction() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    /**\n\t                     * The wrapped message.\n\t                     *\n\t                     * @return The wrapped message.\n\t                     */\n\t                    AccountInfoRequestTransaction.prototype.getMessage = function () {\n\t                        return this.message;\n\t                    };\n\t                    /**\n\t                     * The wrapped message.\n\t                     *\n\t                     * @param message The wrapped message.\n\t                     */\n\t                    AccountInfoRequestTransaction.prototype.setMessage = function (message) {\n\t                        this.message = message;\n\t                    };\n\t                    // Inherited.\n\t                    AccountInfoRequestTransaction.prototype.setWrappedMessage = function (message) {\n\t                        this.setMessage(message);\n\t                    };\n\t                    return AccountInfoRequestTransaction;\n\t                })(TransactionWrappedRequestMessage);\n\t                signup.AccountInfoRequestTransaction = AccountInfoRequestTransaction;\n\t                Aggregate_add(AccountInfoRequestTransaction, \"ACCTINFOTRNRQ\");\n\t                ChildAggregate_add(AccountInfoRequestTransaction, { required: true, order: 30, type: signup.AccountInfoRequest, read: AccountInfoRequestTransaction.prototype.getMessage, write: AccountInfoRequestTransaction.prototype.setMessage });\n\t            })(signup = data.signup || (data.signup = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../RequestMessageSet'/>\n\t///<reference path='AccountInfoRequestTransaction'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var signup;\n\t            (function (signup) {\n\t                var RequestMessageSet = ofx4js.domain.data.RequestMessageSet;\n\t                var MessageSetType = ofx4js.domain.data.MessageSetType;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 */\n\t                var SignupRequestMessageSet = (function (_super) {\n\t                    __extends(SignupRequestMessageSet, _super);\n\t                    function SignupRequestMessageSet() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    SignupRequestMessageSet.prototype.getType = function () {\n\t                        return MessageSetType.signup;\n\t                    };\n\t                    /**\n\t                     * The account info request.\n\t                     *\n\t                     * @return The account info request.\n\t                     */\n\t                    SignupRequestMessageSet.prototype.getAccountInfoRequest = function () {\n\t                        return this.accountInfoRequest;\n\t                    };\n\t                    /**\n\t                     * The account info request.\n\t                     *\n\t                     * @param accountInfoRequest The account info request.\n\t                     */\n\t                    SignupRequestMessageSet.prototype.setAccountInfoRequest = function (accountInfoRequest) {\n\t                        this.accountInfoRequest = accountInfoRequest;\n\t                    };\n\t                    /**\n\t                     * The request messages.\n\t                     *\n\t                     * @return The request messages.\n\t                     */\n\t                    SignupRequestMessageSet.prototype.getRequestMessages = function () {\n\t                        var messages = new Array();\n\t                        if (this.getAccountInfoRequest() != null) {\n\t                            messages.push(this.getAccountInfoRequest());\n\t                        }\n\t                        return messages;\n\t                    };\n\t                    return SignupRequestMessageSet;\n\t                })(RequestMessageSet);\n\t                signup.SignupRequestMessageSet = SignupRequestMessageSet;\n\t                Aggregate_add(SignupRequestMessageSet, \"SIGNUPMSGSRQV1\");\n\t                ChildAggregate_add(SignupRequestMessageSet, { order: 0, type: signup.AccountInfoRequestTransaction, read: SignupRequestMessageSet.prototype.getAccountInfoRequest, write: SignupRequestMessageSet.prototype.setAccountInfoRequest });\n\t            })(signup = data.signup || (data.signup = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\t///<reference path='../ResponseMessage'/>\n\t///<reference path='AccountProfile'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var signup;\n\t            (function (signup) {\n\t                var ResponseMessage = ofx4js.domain.data.ResponseMessage;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 */\n\t                var AccountInfoResponse = (function (_super) {\n\t                    __extends(AccountInfoResponse, _super);\n\t                    function AccountInfoResponse() {\n\t                        _super.call(this);\n\t                        this.lastUpdated = new Date(0); //default is never updated.\n\t                    }\n\t                    AccountInfoResponse.prototype.getResponseMessageName = function () {\n\t                        return \"account info\";\n\t                    };\n\t                    /**\n\t                     * When the account info was last updated.\n\t                     *\n\t                     * @return When the account info was last updated.\n\t                     */\n\t                    AccountInfoResponse.prototype.getLastUpdated = function () {\n\t                        return this.lastUpdated;\n\t                    };\n\t                    /**\n\t                     * When the account info was last updated.\n\t                     *\n\t                     * @param lastUpdated When the account info was last updated.\n\t                     */\n\t                    AccountInfoResponse.prototype.setLastUpdated = function (lastUpdated) {\n\t                        this.lastUpdated = lastUpdated;\n\t                    };\n\t                    /**\n\t                     * The accounts.\n\t                     *\n\t                     * @return The accounts.\n\t                     */\n\t                    AccountInfoResponse.prototype.getAccounts = function () {\n\t                        return this.accounts;\n\t                    };\n\t                    /**\n\t                     * The accounts.\n\t                     *\n\t                     * @param accounts The accounts.\n\t                     */\n\t                    AccountInfoResponse.prototype.setAccounts = function (accounts) {\n\t                        this.accounts = accounts;\n\t                    };\n\t                    return AccountInfoResponse;\n\t                })(ResponseMessage);\n\t                signup.AccountInfoResponse = AccountInfoResponse;\n\t                Aggregate_add(AccountInfoResponse, \"ACCTINFORS\");\n\t                Element_add(AccountInfoResponse, { name: \"DTACCTUP\", required: true, order: 0, type: Date, read: AccountInfoResponse.prototype.getLastUpdated, write: AccountInfoResponse.prototype.setLastUpdated });\n\t                ChildAggregate_add(AccountInfoResponse, { order: 10, type: Array, collectionEntryType: signup.AccountProfile, read: AccountInfoResponse.prototype.getAccounts, write: AccountInfoResponse.prototype.setAccounts });\n\t            })(signup = data.signup || (data.signup = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../TransactionWrappedResponseMessage'/>\n\t///<reference path='AccountInfoResponse'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var signup;\n\t            (function (signup) {\n\t                var TransactionWrappedResponseMessage = ofx4js.domain.data.TransactionWrappedResponseMessage;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 */\n\t                var AccountInfoResponseTransaction = (function (_super) {\n\t                    __extends(AccountInfoResponseTransaction, _super);\n\t                    function AccountInfoResponseTransaction() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    /**\n\t                     * The wrapped message.\n\t                     *\n\t                     * @return The wrapped message.\n\t                     */\n\t                    AccountInfoResponseTransaction.prototype.getMessage = function () {\n\t                        return this.message;\n\t                    };\n\t                    /**\n\t                     * The wrapped message.\n\t                     *\n\t                     * @param message The wrapped message.\n\t                     */\n\t                    AccountInfoResponseTransaction.prototype.setMessage = function (message) {\n\t                        this.message = message;\n\t                    };\n\t                    // Inherited.\n\t                    AccountInfoResponseTransaction.prototype.getWrappedMessage = function () {\n\t                        return this.getMessage();\n\t                    };\n\t                    return AccountInfoResponseTransaction;\n\t                })(TransactionWrappedResponseMessage);\n\t                signup.AccountInfoResponseTransaction = AccountInfoResponseTransaction;\n\t                Aggregate_add(AccountInfoResponseTransaction, \"ACCTINFOTRNRS\");\n\t                ChildAggregate_add(AccountInfoResponseTransaction, { required: true, order: 30, type: signup.AccountInfoResponse, read: AccountInfoResponseTransaction.prototype.getMessage, write: AccountInfoResponseTransaction.prototype.setMessage });\n\t            })(signup = data.signup || (data.signup = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../ResponseMessageSet'/>\n\t///<reference path='../MessageSetType'/>\n\t///<reference path='AccountInfoResponseTransaction'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var signup;\n\t            (function (signup) {\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 */\n\t                var SignupResponseMessageSet = (function (_super) {\n\t                    __extends(SignupResponseMessageSet, _super);\n\t                    function SignupResponseMessageSet() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    SignupResponseMessageSet.prototype.getType = function () {\n\t                        return data.MessageSetType.signup;\n\t                    };\n\t                    /**\n\t                     * The account info response.\n\t                     *\n\t                     * @return The account info response.\n\t                     */\n\t                    SignupResponseMessageSet.prototype.getAccountInfoResponse = function () {\n\t                        return this.accountInfoResponse;\n\t                    };\n\t                    /**\n\t                     * The account info response.\n\t                     *\n\t                     * @param accountInfoResponse The account info response.\n\t                     */\n\t                    SignupResponseMessageSet.prototype.setAccountInfoResponse = function (accountInfoResponse) {\n\t                        this.accountInfoResponse = accountInfoResponse;\n\t                    };\n\t                    /**\n\t                     * The response messages.\n\t                     *\n\t                     * @return The response messages.\n\t                     */\n\t                    SignupResponseMessageSet.prototype.getResponseMessages = function () {\n\t                        var messages = new Array();\n\t                        if (this.getAccountInfoResponse() != null) {\n\t                            messages.push(this.getAccountInfoResponse());\n\t                        }\n\t                        return messages;\n\t                    };\n\t                    return SignupResponseMessageSet;\n\t                })(data.ResponseMessageSet);\n\t                signup.SignupResponseMessageSet = SignupResponseMessageSet;\n\t                Aggregate_add(SignupResponseMessageSet, \"SIGNUPMSGSRSV1\");\n\t                ChildAggregate_add(SignupResponseMessageSet, { order: 0, type: signup.AccountInfoResponseTransaction, read: SignupResponseMessageSet.prototype.getAccountInfoResponse, write: SignupResponseMessageSet.prototype.setAccountInfoResponse });\n\t            })(signup = data.signup || (data.signup = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile) {\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 * @see \"Section 7.1.5, OFX Spec\"\n\t                 */\n\t                (function (ClientRoutingCapability) {\n\t                    ClientRoutingCapability[ClientRoutingCapability[\"NONE\"] = 0] = \"NONE\";\n\t                    ClientRoutingCapability[ClientRoutingCapability[\"SERVICE\"] = 1] = \"SERVICE\";\n\t                    ClientRoutingCapability[ClientRoutingCapability[\"MESSAGE_SET\"] = 2] = \"MESSAGE_SET\";\n\t                })(profile.ClientRoutingCapability || (profile.ClientRoutingCapability = {}));\n\t                var ClientRoutingCapability = profile.ClientRoutingCapability;\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\t///<reference path='../RequestMessage'/>\n\t///<reference path='ClientRoutingCapability'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile) {\n\t                var RequestMessage = ofx4js.domain.data.RequestMessage;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 * @see \"Section 7.1.5, OFX Spec\"\n\t                 */\n\t                var ProfileRequest = (function (_super) {\n\t                    __extends(ProfileRequest, _super);\n\t                    function ProfileRequest() {\n\t                        _super.call(this);\n\t                        this.routingCapability = profile.ClientRoutingCapability.MESSAGE_SET;\n\t                    }\n\t                    /**\n\t                     * The client routing capability.\n\t                     *\n\t                     * @return The client routing capability.\n\t                     */\n\t                    ProfileRequest.prototype.getRoutingCapability = function () {\n\t                        return this.routingCapability;\n\t                    };\n\t                    /**\n\t                     * The client routing capability.\n\t                     *\n\t                     * @param routingCapability The client routing capability.\n\t                     */\n\t                    ProfileRequest.prototype.setRoutingCapability = function (routingCapability) {\n\t                        this.routingCapability = routingCapability;\n\t                    };\n\t                    /**\n\t                     * The date the profile was last updated.\n\t                     *\n\t                     * @return The date the profile was last updated.\n\t                     */\n\t                    ProfileRequest.prototype.getProfileLastUpdated = function () {\n\t                        return this.profileLastUpdated;\n\t                    };\n\t                    /**\n\t                     * The date the profile was last updated.\n\t                     *\n\t                     * @param profileLastUpdated The date the profile was last updated.\n\t                     */\n\t                    ProfileRequest.prototype.setProfileLastUpdated = function (profileLastUpdated) {\n\t                        this.profileLastUpdated = profileLastUpdated;\n\t                    };\n\t                    return ProfileRequest;\n\t                })(RequestMessage);\n\t                profile.ProfileRequest = ProfileRequest;\n\t                Aggregate_add(ProfileRequest, \"PROFRQ\");\n\t                Element_add(ProfileRequest, { name: \"CLIENTROUTING\", order: 0, type: profile.ClientRoutingCapability, read: ProfileRequest.prototype.getRoutingCapability, write: ProfileRequest.prototype.setRoutingCapability });\n\t                Element_add(ProfileRequest, { name: \"DTPROFUP\", order: 10, type: Date, read: ProfileRequest.prototype.getProfileLastUpdated, write: ProfileRequest.prototype.setProfileLastUpdated });\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../TransactionWrappedRequestMessage'/>\n\t///<reference path='ProfileRequest'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile) {\n\t                var TransactionWrappedRequestMessage = ofx4js.domain.data.TransactionWrappedRequestMessage;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 */\n\t                var ProfileRequestTransaction = (function (_super) {\n\t                    __extends(ProfileRequestTransaction, _super);\n\t                    function ProfileRequestTransaction() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    /**\n\t                     * The wrapped message.\n\t                     *\n\t                     * @return The wrapped message.\n\t                     */\n\t                    ProfileRequestTransaction.prototype.getMessage = function () {\n\t                        return this.message;\n\t                    };\n\t                    /**\n\t                     * The wrapped message.\n\t                     *\n\t                     * @param message The wrapped message.\n\t                     */\n\t                    ProfileRequestTransaction.prototype.setMessage = function (message) {\n\t                        this.message = message;\n\t                    };\n\t                    // Inherited.\n\t                    ProfileRequestTransaction.prototype.setWrappedMessage = function (message) {\n\t                        this.setMessage(message);\n\t                    };\n\t                    return ProfileRequestTransaction;\n\t                })(TransactionWrappedRequestMessage);\n\t                profile.ProfileRequestTransaction = ProfileRequestTransaction;\n\t                Aggregate_add(ProfileRequestTransaction, \"PROFTRNRQ\");\n\t                ChildAggregate_add(ProfileRequestTransaction, { required: true, order: 30, type: profile.ProfileRequest, read: ProfileRequestTransaction.prototype.getMessage, write: ProfileRequestTransaction.prototype.setMessage });\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../MessageSetType'/>\n\t///<reference path='../RequestMessageSet'/>\n\t///<reference path='ProfileRequestTransaction'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile) {\n\t                var MessageSetType = ofx4js.domain.data.MessageSetType;\n\t                var RequestMessageSet = ofx4js.domain.data.RequestMessageSet;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 * @see \"Section 7 OFX Spec\"\n\t                 */\n\t                var ProfileRequestMessageSet = (function (_super) {\n\t                    __extends(ProfileRequestMessageSet, _super);\n\t                    function ProfileRequestMessageSet() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    ProfileRequestMessageSet.prototype.getType = function () {\n\t                        return MessageSetType.profile;\n\t                    };\n\t                    /**\n\t                     * The profile request.\n\t                     *\n\t                     * @return The profile request.\n\t                     */\n\t                    ProfileRequestMessageSet.prototype.getProfileRequest = function () {\n\t                        return this.profileRequest;\n\t                    };\n\t                    /**\n\t                     * The profile request.\n\t                     *\n\t                     * @param profileRequest The profile request.\n\t                     */\n\t                    ProfileRequestMessageSet.prototype.setProfileRequest = function (profileRequest) {\n\t                        this.profileRequest = profileRequest;\n\t                    };\n\t                    // Inherited.\n\t                    ProfileRequestMessageSet.prototype.getRequestMessages = function () {\n\t                        var requestMessages = new Array();\n\t                        if (this.getProfileRequest() != null) {\n\t                            requestMessages.push(this.getProfileRequest());\n\t                        }\n\t                        return requestMessages;\n\t                    };\n\t                    return ProfileRequestMessageSet;\n\t                })(RequestMessageSet);\n\t                profile.ProfileRequestMessageSet = ProfileRequestMessageSet;\n\t                Aggregate_add(ProfileRequestMessageSet, \"PROFMSGSRQV1\");\n\t                ChildAggregate_add(ProfileRequestMessageSet, { required: true, order: 0, type: profile.ProfileRequestTransaction, read: ProfileRequestMessageSet.prototype.getProfileRequest, write: ProfileRequestMessageSet.prototype.setProfileRequest });\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\t///<reference path='../ApplicationSecurity'/>\n\t///<reference path='SynchronizationCapability'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile) {\n\t                var ApplicationSecurity = ofx4js.domain.data.ApplicationSecurity;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                /**\n\t                 * Core information about a specific version of a specific message set.\n\t                 *\n\t                 * @author Ryan Heaton\n\t                 * @see \"Section 7.2.1, OFX Spec\"\n\t                 */\n\t                var CoreMessageSetInfo = (function () {\n\t                    function CoreMessageSetInfo() {\n\t                        this.version = \"1\";\n\t                        this.language = \"ENG\"; //Locale.US.getISO3Language();\n\t                    }\n\t                    /**\n\t                     * Version of the message set.\n\t                     *\n\t                     * @return The version of the message set.\n\t                     */\n\t                    CoreMessageSetInfo.prototype.getVersion = function () {\n\t                        return this.version;\n\t                    };\n\t                    /**\n\t                     * The version of the message set.\n\t                     *\n\t                     * @param version The version of the message set.\n\t                     */\n\t                    CoreMessageSetInfo.prototype.setVersion = function (version) {\n\t                        this.version = version;\n\t                    };\n\t                    /**\n\t                     * The name of the service provider (sometimes the message set processing is outsourced).\n\t                     *\n\t                     * @return The name of the service provider (sometimes the message set processing is outsourced).\n\t                     */\n\t                    CoreMessageSetInfo.prototype.getServiceProviderName = function () {\n\t                        return this.serviceProviderName;\n\t                    };\n\t                    /**\n\t                     * The name of the service provider (sometimes the message set processing is outsourced).\n\t                     *\n\t                     * @param serviceProviderName The name of the service provider (sometimes the message set processing is outsourced).\n\t                     */\n\t                    CoreMessageSetInfo.prototype.setServiceProviderName = function (serviceProviderName) {\n\t                        this.serviceProviderName = serviceProviderName;\n\t                    };\n\t                    /**\n\t                     * The URL at which the message set is processed.\n\t                     *\n\t                     * @return The URL at which the message set is processed.\n\t                     */\n\t                    CoreMessageSetInfo.prototype.getUrl = function () {\n\t                        return this.url;\n\t                    };\n\t                    /**\n\t                     * The URL at which the message set is processed.\n\t                     *\n\t                     * @param url The URL at which the message set is processed.\n\t                     */\n\t                    CoreMessageSetInfo.prototype.setUrl = function (url) {\n\t                        this.url = url;\n\t                    };\n\t                    /**\n\t                     * The application-level security required for this message set.\n\t                     *\n\t                     * @return The application-level security required for this message set.\n\t                     */\n\t                    CoreMessageSetInfo.prototype.getSecurity = function () {\n\t                        return this.security;\n\t                    };\n\t                    /**\n\t                     * The application-level security required for this message set.\n\t                     *\n\t                     * @param security The application-level security required for this message set.\n\t                     */\n\t                    CoreMessageSetInfo.prototype.setSecurity = function (security) {\n\t                        this.security = security;\n\t                    };\n\t                    /**\n\t                     * Whether transport-level security is required for this message set.\n\t                     *\n\t                     * @return Whether transport-level security is required for this message set.\n\t                     */\n\t                    CoreMessageSetInfo.prototype.getSslRequired = function () {\n\t                        return this.sslRequired;\n\t                    };\n\t                    /**\n\t                     * Whether transport-level security is required for this message set.\n\t                     *\n\t                     * @param sslRequired Whether transport-level security is required for this message set.\n\t                     */\n\t                    CoreMessageSetInfo.prototype.setSslRequired = function (sslRequired) {\n\t                        this.sslRequired = sslRequired;\n\t                    };\n\t                    /**\n\t                     * The sign-on realm.\n\t                     *\n\t                     * @return The sign-on realm.\n\t                     */\n\t                    CoreMessageSetInfo.prototype.getRealm = function () {\n\t                        return this.realm;\n\t                    };\n\t                    /**\n\t                     * The sign-on realm.\n\t                     *\n\t                     * @param realm The sign-on realm.\n\t                     */\n\t                    CoreMessageSetInfo.prototype.setRealm = function (realm) {\n\t                        this.realm = realm;\n\t                    };\n\t                    /**\n\t                     * The language.\n\t                     *\n\t                     * @return The language.\n\t                     * @see java.util.Locale#getISO3Language()\n\t                     */\n\t                    CoreMessageSetInfo.prototype.getLanguage = function () {\n\t                        return this.language;\n\t                    };\n\t                    /**\n\t                     * The language.\n\t                     *\n\t                     * @param language The language.\n\t                     */\n\t                    CoreMessageSetInfo.prototype.setLanguage = function (language) {\n\t                        this.language = language;\n\t                    };\n\t                    /**\n\t                     * The synchronization capability for this message set.\n\t                     *\n\t                     * @return The synchronization capability for this message set.\n\t                     */\n\t                    CoreMessageSetInfo.prototype.getSyncCapability = function () {\n\t                        return this.syncCapability;\n\t                    };\n\t                    /**\n\t                     * The synchronization capability for this message set.\n\t                     *\n\t                     * @param syncCapability The synchronization capability for this message set.\n\t                     */\n\t                    CoreMessageSetInfo.prototype.setSyncCapability = function (syncCapability) {\n\t                        this.syncCapability = syncCapability;\n\t                    };\n\t                    /**\n\t                     * Whether there exists support for resposne-file based error recovery.\n\t                     *\n\t                     * @return Whether there exists support for resposne-file based error recovery.\n\t                     */\n\t                    CoreMessageSetInfo.prototype.getFileBasedErrorRecoverySupport = function () {\n\t                        return this.fileBasedErrorRecoverySupport;\n\t                    };\n\t                    /**\n\t                     * Whether there exists support for resposne-file based error recovery.\n\t                     *\n\t                     * @param fileBasedErrorRecoverySupport Whether there exists support for resposne-file based error recovery.\n\t                     */\n\t                    CoreMessageSetInfo.prototype.setFileBasedErrorRecoverySupport = function (fileBasedErrorRecoverySupport) {\n\t                        this.fileBasedErrorRecoverySupport = fileBasedErrorRecoverySupport;\n\t                    };\n\t                    /**\n\t                     * Gets the \"INTU.TIMEOUT\" field. There's no public documentation of this field but E*TRADE sends\n\t                     * it. It likely is some type of timeout in seconds.\n\t                     *\n\t                     * @return the \"INTU.TIMEOUT\" property\n\t                     */\n\t                    CoreMessageSetInfo.prototype.getIntuTimeout = function () {\n\t                        return this.timeout;\n\t                    };\n\t                    /**\n\t                     * Sets the \"INTU.TIMEOUT\" field. There's no public documentation of this field but E*TRADE sends\n\t                     * it. It likely is some type of timeout in seconds.\n\t                     *\n\t                     * @param timeout the \"INTU.TIMEOUT\" property\n\t                     */\n\t                    CoreMessageSetInfo.prototype.setIntuTimeout = function (timeout) {\n\t                        this.timeout = timeout;\n\t                    };\n\t                    return CoreMessageSetInfo;\n\t                })();\n\t                profile.CoreMessageSetInfo = CoreMessageSetInfo;\n\t                Aggregate_add(CoreMessageSetInfo, \"MSGSETCORE\");\n\t                Element_add(CoreMessageSetInfo, { name: \"VER\", required: true, order: 0, type: String, read: CoreMessageSetInfo.prototype.getVersion, write: CoreMessageSetInfo.prototype.setVersion });\n\t                Element_add(CoreMessageSetInfo, { name: \"SPNAME\", order: 10, type: String, read: CoreMessageSetInfo.prototype.getServiceProviderName, write: CoreMessageSetInfo.prototype.setServiceProviderName });\n\t                Element_add(CoreMessageSetInfo, { name: \"URL\", required: true, order: 20, type: String, read: CoreMessageSetInfo.prototype.getUrl, write: CoreMessageSetInfo.prototype.setUrl });\n\t                Element_add(CoreMessageSetInfo, { name: \"OFXSEC\", required: true, order: 30, type: ApplicationSecurity, read: CoreMessageSetInfo.prototype.getSecurity, write: CoreMessageSetInfo.prototype.setSecurity });\n\t                Element_add(CoreMessageSetInfo, { name: \"TRANSPSEC\", required: true, order: 40, type: Boolean, read: CoreMessageSetInfo.prototype.getSslRequired, write: CoreMessageSetInfo.prototype.setSslRequired });\n\t                Element_add(CoreMessageSetInfo, { name: \"SIGNONREALM\", required: true, order: 50, type: String, read: CoreMessageSetInfo.prototype.getRealm, write: CoreMessageSetInfo.prototype.setRealm });\n\t                Element_add(CoreMessageSetInfo, { name: \"LANGUAGE\", required: true, order: 60, type: String, read: CoreMessageSetInfo.prototype.getLanguage, write: CoreMessageSetInfo.prototype.setLanguage });\n\t                Element_add(CoreMessageSetInfo, { name: \"SYNCMODE\", required: true, order: 70, type: profile.SynchronizationCapability, read: CoreMessageSetInfo.prototype.getSyncCapability, write: CoreMessageSetInfo.prototype.setSyncCapability });\n\t                Element_add(CoreMessageSetInfo, { name: \"RESPFILEER\", required: true, order: 80, type: Boolean, read: CoreMessageSetInfo.prototype.getFileBasedErrorRecoverySupport, write: CoreMessageSetInfo.prototype.setFileBasedErrorRecoverySupport });\n\t                Element_add(CoreMessageSetInfo, { name: \"INTU.TIMEOUT\", order: 90, type: Number, read: CoreMessageSetInfo.prototype.getIntuTimeout, write: CoreMessageSetInfo.prototype.setIntuTimeout });\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../MessageSetProfile'/>\n\t///<reference path='../MessageSetType'/>\n\t///<reference path='CoreMessageSetInfo'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile) {\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                /**\n\t                 * Information specific to a version of a message set.\n\t                 *\n\t                 * @author Ryan Heaton\n\t                 * @see \"Section 7.2.1, OFX Spec\"\n\t                 */\n\t                var VersionSpecificMessageSetInfo = (function () {\n\t                    function VersionSpecificMessageSetInfo() {\n\t                    }\n\t                    /**\n\t                     * The information core.\n\t                     *\n\t                     * @return The information core.\n\t                     */\n\t                    VersionSpecificMessageSetInfo.prototype.getCore = function () {\n\t                        return this.core;\n\t                    };\n\t                    /**\n\t                     * The information core.\n\t                     *\n\t                     * @param core The information core.\n\t                     */\n\t                    VersionSpecificMessageSetInfo.prototype.setCore = function (core) {\n\t                        this.core = core;\n\t                    };\n\t                    /**\n\t                     * The message set type.\n\t                     *\n\t                     * @return The message set type.\n\t                     */\n\t                    VersionSpecificMessageSetInfo.prototype.getMessageSetType = function () { throw new ofx4js.OFXException(\"abstract\"); };\n\t                    VersionSpecificMessageSetInfo.prototype.getVersion = function () {\n\t                        return this.core != null ? this.core.getVersion() : null;\n\t                    };\n\t                    VersionSpecificMessageSetInfo.prototype.getServiceProviderName = function () {\n\t                        return this.core != null ? this.core.getServiceProviderName() : null;\n\t                    };\n\t                    VersionSpecificMessageSetInfo.prototype.getUrl = function () {\n\t                        return this.core != null ? this.core.getUrl() : null;\n\t                    };\n\t                    VersionSpecificMessageSetInfo.prototype.getSecurity = function () {\n\t                        return this.core != null ? this.core.getSecurity() : null;\n\t                    };\n\t                    VersionSpecificMessageSetInfo.prototype.isSslRequired = function () {\n\t                        return this.core != null && this.core.getSslRequired() != null ? this.core.getSslRequired() : true;\n\t                    };\n\t                    VersionSpecificMessageSetInfo.prototype.getRealm = function () {\n\t                        return this.core != null ? this.core.getRealm() : null;\n\t                    };\n\t                    VersionSpecificMessageSetInfo.prototype.getLanguage = function () {\n\t                        return this.core != null ? this.core.getLanguage() : null;\n\t                    };\n\t                    VersionSpecificMessageSetInfo.prototype.getSyncCapability = function () {\n\t                        return this.core != null ? this.core.getSyncCapability() : null;\n\t                    };\n\t                    VersionSpecificMessageSetInfo.prototype.hasFileBasedErrorRecoverySupport = function () {\n\t                        return this.core != null && this.core.getFileBasedErrorRecoverySupport() != null ? this.core.getFileBasedErrorRecoverySupport() : false;\n\t                    };\n\t                    return VersionSpecificMessageSetInfo;\n\t                })();\n\t                profile.VersionSpecificMessageSetInfo = VersionSpecificMessageSetInfo;\n\t                ChildAggregate_add(VersionSpecificMessageSetInfo, { order: 0, type: profile.CoreMessageSetInfo, read: VersionSpecificMessageSetInfo.prototype.getCore, write: VersionSpecificMessageSetInfo.prototype.setCore });\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='VersionSpecificMessageSetInfo'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile) {\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                /**\n\t                 * Information about a message set.\n\t                 *\n\t                 * @author Ryan Heaton\n\t                 * @see \"Section 7.2.1, OFX Spec\"\n\t                 */\n\t                var AbstractMessageSetInfo = (function () {\n\t                    function AbstractMessageSetInfo() {\n\t                    }\n\t                    /**\n\t                     * List of information about a message set for each version supported.\n\t                     *\n\t                     * @return List of information about a message set for each version supported.\n\t                     */\n\t                    AbstractMessageSetInfo.prototype.getVersionSpecificInformationList = function () {\n\t                        return this.versionSpecificInformationList;\n\t                    };\n\t                    /**\n\t                     * List of information about a message set for each version supported.\n\t                     *\n\t                     * @param versionSpecificInformationList List of information about a message set for each version supported.\n\t                     */\n\t                    AbstractMessageSetInfo.prototype.setVersionSpecificInformationList = function (versionSpecificInformationList) {\n\t                        this.versionSpecificInformationList = versionSpecificInformationList;\n\t                    };\n\t                    return AbstractMessageSetInfo;\n\t                })();\n\t                profile.AbstractMessageSetInfo = AbstractMessageSetInfo;\n\t                ChildAggregate_add(AbstractMessageSetInfo, { order: 0, type: Array, collectionEntryType: profile.VersionSpecificMessageSetInfo, read: AbstractMessageSetInfo.prototype.getVersionSpecificInformationList, write: AbstractMessageSetInfo.prototype.setVersionSpecificInformationList });\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='AbstractMessageSetInfo'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile) {\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 * @see \"Section 7.2, OFX Spec\"\n\t                 */\n\t                var MessageSetInfoList = (function () {\n\t                    function MessageSetInfoList() {\n\t                    }\n\t                    /**\n\t                     * The list of information for each message set.\n\t                     *\n\t                     * @return The list of information for each message set.\n\t                     */\n\t                    MessageSetInfoList.prototype.getInformationList = function () {\n\t                        return this.informationList;\n\t                    };\n\t                    /**\n\t                     * The list of information for each message set.\n\t                     *\n\t                     * @param informationList The list of information for each message set.\n\t                     */\n\t                    MessageSetInfoList.prototype.setInformationList = function (informationList) {\n\t                        this.informationList = informationList;\n\t                    };\n\t                    return MessageSetInfoList;\n\t                })();\n\t                profile.MessageSetInfoList = MessageSetInfoList;\n\t                Aggregate_add(MessageSetInfoList, \"MSGSETLIST\");\n\t                ChildAggregate_add(MessageSetInfoList, { order: 0, type: Array, collectionEntryType: profile.AbstractMessageSetInfo, read: MessageSetInfoList.prototype.getInformationList, write: MessageSetInfoList.prototype.setInformationList });\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\t///<reference path='../SignonProfile'/>\n\t///<reference path='CharacterType'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile) {\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                /**\n\t                 * Sign-on information\n\t                 *\n\t                 * @author Ryan Heaton\n\t                 * @see \"Section 7.2.2, OFX Spec\"\n\t                 */\n\t                var SignonInfo = (function () {\n\t                    function SignonInfo() {\n\t                        this.passwordCaseSensitive = true;\n\t                        this.passwordSpecialCharsAllowed = true;\n\t                        this.passwordSpacesAllowed = true;\n\t                    }\n\t                    /**\n\t                     * The name of the sign-on realm.\n\t                     *\n\t                     * @return The name of the sign-on realm.\n\t                     */\n\t                    SignonInfo.prototype.getRealm = function () {\n\t                        return this.realm;\n\t                    };\n\t                    /**\n\t                     * The name of the sign-on realm.\n\t                     *\n\t                     * @param realm The name of the sign-on realm.\n\t                     */\n\t                    SignonInfo.prototype.setRealm = function (realm) {\n\t                        this.realm = realm;\n\t                    };\n\t                    /**\n\t                     * The minimum number of password characters.\n\t                     *\n\t                     * @return The minimum number of password characters.\n\t                     */\n\t                    SignonInfo.prototype.getMinPasswordCharacters = function () {\n\t                        return this.minPasswordCharacters;\n\t                    };\n\t                    /**\n\t                     * The minimum number of password characters.\n\t                     *\n\t                     * @param minPasswordCharacters The minimum number of password characters.\n\t                     */\n\t                    SignonInfo.prototype.setMinPasswordCharacters = function (minPasswordCharacters) {\n\t                        this.minPasswordCharacters = minPasswordCharacters;\n\t                    };\n\t                    /**\n\t                     * The maximum number of password characters.\n\t                     *\n\t                     * @return The maximum number of password characters.\n\t                     */\n\t                    SignonInfo.prototype.getMaxPasswordCharacters = function () {\n\t                        return this.maxPasswordCharacters;\n\t                    };\n\t                    /**\n\t                     * The maximum number of password characters.\n\t                     *\n\t                     * @param maxPasswordCharacters The maximum number of password characters.\n\t                     */\n\t                    SignonInfo.prototype.setMaxPasswordCharacters = function (maxPasswordCharacters) {\n\t                        this.maxPasswordCharacters = maxPasswordCharacters;\n\t                    };\n\t                    /**\n\t                     * The type of password characters supported.\n\t                     *\n\t                     * @return The type of password characters supported.\n\t                     */\n\t                    SignonInfo.prototype.getPasswordCharacterType = function () {\n\t                        return this.passwordCharacterType;\n\t                    };\n\t                    /**\n\t                     * The type of password characters supported.\n\t                     *\n\t                     * @param passwordCharacterType The type of password characters supported.\n\t                     */\n\t                    SignonInfo.prototype.setPasswordCharacterType = function (passwordCharacterType) {\n\t                        this.passwordCharacterType = passwordCharacterType;\n\t                    };\n\t                    /**\n\t                     * Whether the password is case-sensitive.\n\t                     *\n\t                     * @return Whether the password is case-sensitive.\n\t                     */\n\t                    SignonInfo.prototype.getPasswordCaseSensitive = function () {\n\t                        return this.passwordCaseSensitive;\n\t                    };\n\t                    /**\n\t                     * Whether the password is case-sensitive.\n\t                     *\n\t                     * @param passwordCaseSensitive Whether the password is case-sensitive.\n\t                     */\n\t                    SignonInfo.prototype.setPasswordCaseSensitive = function (passwordCaseSensitive) {\n\t                        this.passwordCaseSensitive = passwordCaseSensitive;\n\t                    };\n\t                    /**\n\t                     * Whether special characters are allowed in the password.\n\t                     *\n\t                     * @return Whether special characters are allowed in the password.\n\t                     */\n\t                    SignonInfo.prototype.getPasswordSpecialCharsAllowed = function () {\n\t                        return this.passwordSpecialCharsAllowed;\n\t                    };\n\t                    /**\n\t                     * Whether special characters are allowed in the password.\n\t                     *\n\t                     * @param passwordSpecialCharsAllowed Whether special characters are allowed in the password.\n\t                     */\n\t                    SignonInfo.prototype.setPasswordSpecialCharsAllowed = function (passwordSpecialCharsAllowed) {\n\t                        this.passwordSpecialCharsAllowed = passwordSpecialCharsAllowed;\n\t                    };\n\t                    /**\n\t                     * Whether spaces are allowed in the password.\n\t                     *\n\t                     * @return Whether spaces are allowed in the password.\n\t                     */\n\t                    SignonInfo.prototype.getPasswordSpacesAllowed = function () {\n\t                        return this.passwordSpacesAllowed;\n\t                    };\n\t                    /**\n\t                     * Whether spaces are allowed in the password.\n\t                     *\n\t                     * @param passwordSpacesAllowed Whether spaces are allowed in the password.\n\t                     */\n\t                    SignonInfo.prototype.setPasswordSpacesAllowed = function (passwordSpacesAllowed) {\n\t                        this.passwordSpacesAllowed = passwordSpacesAllowed;\n\t                    };\n\t                    /**\n\t                     * Whether the server can process a password change request for this realm.\n\t                     *\n\t                     * @return Whether the server can process a password change request for this realm.\n\t                     */\n\t                    SignonInfo.prototype.getChangePasswordSupported = function () {\n\t                        return this.changePasswordSupported;\n\t                    };\n\t                    /**\n\t                     * Whether the server can process a password change request for this realm.\n\t                     *\n\t                     * @param changePasswordSupported Whether the server can process a password change request for this realm.\n\t                     */\n\t                    SignonInfo.prototype.setChangePasswordSupported = function (changePasswordSupported) {\n\t                        this.changePasswordSupported = changePasswordSupported;\n\t                    };\n\t                    /**\n\t                     * Whether the server requires the user to change their password as part of their first signon.\n\t                     *\n\t                     * @return Whether the server requires the user to change their password as part of their first signon.\n\t                     */\n\t                    SignonInfo.prototype.getChangePasswordFirstRequired = function () {\n\t                        return this.changePasswordFirstRequired;\n\t                    };\n\t                    /**\n\t                     * Whether the server requires the user to change their password as part of their first signon.\n\t                     *\n\t                     * @param changePasswordFirstRequired Whether the server requires the user to change their password as part of their first signon.\n\t                     */\n\t                    SignonInfo.prototype.setChangePasswordFirstRequired = function (changePasswordFirstRequired) {\n\t                        this.changePasswordFirstRequired = changePasswordFirstRequired;\n\t                    };\n\t                    /**\n\t                     * Label for a set of additional credentials that the user must supply.\n\t                     *\n\t                     * @return Label for a set of additional credentials that the user must supply.\n\t                     */\n\t                    SignonInfo.prototype.getAdditionalCredientialsLabel1 = function () {\n\t                        return this.additionalCredientialsLabel1;\n\t                    };\n\t                    /**\n\t                     * Label for a set of additional credentials that the user must supply.\n\t                     *\n\t                     * @param additionalCredientialsLabel1 Label for a set of additional credentials that the user must supply.\n\t                     */\n\t                    SignonInfo.prototype.setAdditionalCredientialsLabel1 = function (additionalCredientialsLabel1) {\n\t                        this.additionalCredientialsLabel1 = additionalCredientialsLabel1;\n\t                    };\n\t                    /**\n\t                     * Label for a set of additional credentials that the user must supply.\n\t                     *\n\t                     * @return Label for a set of additional credentials that the user must supply.\n\t                     */\n\t                    SignonInfo.prototype.getAdditionalCredientialsLabel2 = function () {\n\t                        return this.additionalCredientialsLabel2;\n\t                    };\n\t                    /**\n\t                     * Label for a set of additional credentials that the user must supply.\n\t                     *\n\t                     * @param additionalCredientialsLabel2 Label for a set of additional credentials that the user must supply.\n\t                     */\n\t                    SignonInfo.prototype.setAdditionalCredientialsLabel2 = function (additionalCredientialsLabel2) {\n\t                        this.additionalCredientialsLabel2 = additionalCredientialsLabel2;\n\t                    };\n\t                    /**\n\t                     * Whether a client UID is required for teh sign-on.\n\t                     *\n\t                     * @return Whether a client UID is required for teh sign-on.\n\t                     */\n\t                    SignonInfo.prototype.getClientUIDRequired = function () {\n\t                        return this.clientUIDRequired;\n\t                    };\n\t                    /**\n\t                     * Whether a client UID is required for teh sign-on.\n\t                     *\n\t                     * @param clientUIDRequired Whether a client UID is required for teh sign-on.\n\t                     */\n\t                    SignonInfo.prototype.setClientUIDRequired = function (clientUIDRequired) {\n\t                        this.clientUIDRequired = clientUIDRequired;\n\t                    };\n\t                    /**\n\t                     * Whether an auth token is required for the sign-on.\n\t                     *\n\t                     * @return Whether an auth token is required for the sign-on.\n\t                     */\n\t                    SignonInfo.prototype.getAuthTokenRequiredForFirstSignon = function () {\n\t                        return this.authTokenRequiredForFirstSignon;\n\t                    };\n\t                    /**\n\t                     * Whether an auth token is required for the sign-on.\n\t                     *\n\t                     * @param authTokenRequiredForFirstSignon\n\t                     *         Whether an auth token is required for the sign-on.\n\t                     */\n\t                    SignonInfo.prototype.setAuthTokenRequiredForFirstSignon = function (authTokenRequiredForFirstSignon) {\n\t                        this.authTokenRequiredForFirstSignon = authTokenRequiredForFirstSignon;\n\t                    };\n\t                    /**\n\t                     * The label of the auth token.\n\t                     *\n\t                     * @return The label of the auth token.\n\t                     */\n\t                    SignonInfo.prototype.getAuthTokenLabel = function () {\n\t                        return this.authTokenLabel;\n\t                    };\n\t                    /**\n\t                     * The label of the auth token.\n\t                     *\n\t                     * @param authTokenLabel The label of the auth token.\n\t                     */\n\t                    SignonInfo.prototype.setAuthTokenLabel = function (authTokenLabel) {\n\t                        this.authTokenLabel = authTokenLabel;\n\t                    };\n\t                    /**\n\t                     * The URL for the auth token information.\n\t                     *\n\t                     * @return The URL for the auth token information.\n\t                     */\n\t                    SignonInfo.prototype.getAuthTokenInfoURL = function () {\n\t                        return this.authTokenInfoURL;\n\t                    };\n\t                    /**\n\t                     * The URL for the auth token information.\n\t                     *\n\t                     * @param authTokenInfoURL The URL for the auth token information.\n\t                     */\n\t                    SignonInfo.prototype.setAuthTokenInfoURL = function (authTokenInfoURL) {\n\t                        this.authTokenInfoURL = authTokenInfoURL;\n\t                    };\n\t                    /**\n\t                     * Whether MFA is supported.\n\t                     *\n\t                     * @return Whether MFA is supported.\n\t                     */\n\t                    SignonInfo.prototype.getMfaSupported = function () {\n\t                        return this.mfaSupported;\n\t                    };\n\t                    /**\n\t                     * Whether MFA is supported.\n\t                     *\n\t                     * @param mfaSupported Whether MFA is supported.\n\t                     */\n\t                    SignonInfo.prototype.setMfaSupported = function (mfaSupported) {\n\t                        this.mfaSupported = mfaSupported;\n\t                    };\n\t                    /**\n\t                     * Whether an MFA challenge request is required for the first sign-on into this realm.\n\t                     *\n\t                     * @return Whether an MFA challenge request is required for the first sign-on into this realm.\n\t                     */\n\t                    SignonInfo.prototype.getMfaChallengeRequiredForFirstSignon = function () {\n\t                        return this.mfaChallengeRequiredForFirstSignon;\n\t                    };\n\t                    /**\n\t                     * Whether an MFA challenge request is required for the first sign-on into this realm.\n\t                     *\n\t                     * @param mfaChallengeRequiredForFirstSignon\n\t                     *         Whether an MFA challenge request is required for the first sign-on into this realm.\n\t                     */\n\t                    SignonInfo.prototype.setMfaChallengeRequiredForFirstSignon = function (mfaChallengeRequiredForFirstSignon) {\n\t                        this.mfaChallengeRequiredForFirstSignon = mfaChallengeRequiredForFirstSignon;\n\t                    };\n\t                    return SignonInfo;\n\t                })();\n\t                profile.SignonInfo = SignonInfo;\n\t                Aggregate_add(SignonInfo, \"SIGNONINFO\");\n\t                Element_add(SignonInfo, { name: \"SIGNONREALM\", required: true, order: 0, type: String, read: SignonInfo.prototype.getRealm, write: SignonInfo.prototype.setRealm });\n\t                Element_add(SignonInfo, { name: \"MIN\", required: true, order: 10, type: Number, read: SignonInfo.prototype.getMinPasswordCharacters, write: SignonInfo.prototype.setMinPasswordCharacters });\n\t                Element_add(SignonInfo, { name: \"MAX\", required: true, order: 20, type: Number, read: SignonInfo.prototype.getMaxPasswordCharacters, write: SignonInfo.prototype.setMaxPasswordCharacters });\n\t                Element_add(SignonInfo, { name: \"CHARTYPE\", required: true, order: 30, type: profile.CharacterType, read: SignonInfo.prototype.getPasswordCharacterType, write: SignonInfo.prototype.setPasswordCharacterType });\n\t                Element_add(SignonInfo, { name: \"CASESEN\", required: true, order: 40, type: Boolean, read: SignonInfo.prototype.getPasswordCaseSensitive, write: SignonInfo.prototype.setPasswordCaseSensitive });\n\t                Element_add(SignonInfo, { name: \"SPECIAL\", required: true, order: 50, type: Boolean, read: SignonInfo.prototype.getPasswordSpecialCharsAllowed, write: SignonInfo.prototype.setPasswordSpecialCharsAllowed });\n\t                Element_add(SignonInfo, { name: \"SPACES\", required: true, order: 60, type: Boolean, read: SignonInfo.prototype.getPasswordSpacesAllowed, write: SignonInfo.prototype.setPasswordSpacesAllowed });\n\t                Element_add(SignonInfo, { name: \"PINCH\", required: true, order: 70, type: Boolean, read: SignonInfo.prototype.getChangePasswordSupported, write: SignonInfo.prototype.setChangePasswordSupported });\n\t                Element_add(SignonInfo, { name: \"CHGPINFIRST\", required: true, order: 80, type: Boolean, read: SignonInfo.prototype.getChangePasswordFirstRequired, write: SignonInfo.prototype.setChangePasswordFirstRequired });\n\t                Element_add(SignonInfo, { name: \"USERCRED1LABEL\", order: 90, type: String, read: SignonInfo.prototype.getAdditionalCredientialsLabel1, write: SignonInfo.prototype.setAdditionalCredientialsLabel1 });\n\t                Element_add(SignonInfo, { name: \"USERCRED2LABEL\", order: 100, type: String, read: SignonInfo.prototype.getAdditionalCredientialsLabel2, write: SignonInfo.prototype.setAdditionalCredientialsLabel2 });\n\t                Element_add(SignonInfo, { name: \"CLIENTUIDREQ\", order: 110, type: Boolean, read: SignonInfo.prototype.getClientUIDRequired, write: SignonInfo.prototype.setClientUIDRequired });\n\t                Element_add(SignonInfo, { name: \"AUTHTOKENFIRST\", order: 120, type: Boolean, read: SignonInfo.prototype.getAuthTokenRequiredForFirstSignon, write: SignonInfo.prototype.setAuthTokenRequiredForFirstSignon });\n\t                Element_add(SignonInfo, { name: \"AUTHTOKENLABEL\", order: 130, type: String, read: SignonInfo.prototype.getAuthTokenLabel, write: SignonInfo.prototype.setAuthTokenLabel });\n\t                Element_add(SignonInfo, { name: \"AUTHTOKENINFOURL\", order: 140, type: String, read: SignonInfo.prototype.getAuthTokenInfoURL, write: SignonInfo.prototype.setAuthTokenInfoURL });\n\t                Element_add(SignonInfo, { name: \"MFACHALLENGESUPT\", order: 150, type: Boolean, read: SignonInfo.prototype.getMfaSupported, write: SignonInfo.prototype.setMfaSupported });\n\t                Element_add(SignonInfo, { name: \"MFACHALLENGEFIRST\", order: 160, type: Boolean, read: SignonInfo.prototype.getMfaChallengeRequiredForFirstSignon, write: SignonInfo.prototype.setMfaChallengeRequiredForFirstSignon });\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='SignonInfo'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile) {\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                /**\n\t                 * List of signon information.\n\t                 *\n\t                 * @author Ryan Heaton\n\t                 * @see \"Section 7.2.2, OFX Spec\"\n\t                 */\n\t                var SignonInfoList = (function () {\n\t                    function SignonInfoList() {\n\t                    }\n\t                    /**\n\t                     * List of sign-on information.\n\t                     *\n\t                     * @return List of sign-on information.\n\t                     */\n\t                    SignonInfoList.prototype.getInfoList = function () {\n\t                        return this.infoList;\n\t                    };\n\t                    /**\n\t                     * List of sign-on information.\n\t                     *\n\t                     * @param infoList List of sign-on information.\n\t                     */\n\t                    SignonInfoList.prototype.setInfoList = function (infoList) {\n\t                        this.infoList = infoList;\n\t                    };\n\t                    return SignonInfoList;\n\t                })();\n\t                profile.SignonInfoList = SignonInfoList;\n\t                Aggregate_add(SignonInfoList, \"SIGNONINFOLIST\");\n\t                ChildAggregate_add(SignonInfoList, { order: 0, type: Array, collectionEntryType: profile.SignonInfo, read: SignonInfoList.prototype.getInfoList, write: SignonInfoList.prototype.setInfoList });\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\t///<reference path='../MessageSetProfile'/>\n\t///<reference path='../MessageSetType'/>\n\t///<reference path='../ResponseMessage'/>\n\t///<reference path='../SignonProfile'/>\n\t///<reference path='../../../client/FinancialInstitutionProfile'/>\n\t///<reference path='MessageSetInfoList'/>\n\t///<reference path='SignonInfoList'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile_1) {\n\t                var ResponseMessage = ofx4js.domain.data.ResponseMessage;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                //import java.net.URL;\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 * @see \"Section 7.2 OFX Spec\"\n\t                 */\n\t                var ProfileResponse = (function (_super) {\n\t                    __extends(ProfileResponse, _super);\n\t                    function ProfileResponse() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    /**\n\t                     * List of message set information.\n\t                     * @return List of message set information.\n\t                     */\n\t                    ProfileResponse.prototype.getMessageSetList = function () {\n\t                        return this.messageSetList;\n\t                    };\n\t                    /**\n\t                     * List of message set information.\n\t                     *\n\t                     * @param messageSetList List of message set information.\n\t                     */\n\t                    ProfileResponse.prototype.setMessageSetList = function (messageSetList) {\n\t                        this.messageSetList = messageSetList;\n\t                    };\n\t                    /**\n\t                     * List of signon information.\n\t                     *\n\t                     * @return List of signon information.\n\t                     */\n\t                    ProfileResponse.prototype.getSignonInfoList = function () {\n\t                        return this.signonInfoList;\n\t                    };\n\t                    /**\n\t                     * List of signon information.\n\t                     *\n\t                     * @param signonInfoList List of signon information.\n\t                     */\n\t                    ProfileResponse.prototype.setSignonInfoList = function (signonInfoList) {\n\t                        this.signonInfoList = signonInfoList;\n\t                    };\n\t                    // Inherited.\n\t                    ProfileResponse.prototype.getResponseMessageName = function () {\n\t                        return \"profile\";\n\t                    };\n\t                    // Inherited.\n\t                    ProfileResponse.prototype.getLastUpdated = function () {\n\t                        return this.getTimestamp();\n\t                    };\n\t                    /**\n\t                     * The timestamp of this profile update.\n\t                     *\n\t                     * @return The timestamp of this profile update.\n\t                     */\n\t                    ProfileResponse.prototype.getTimestamp = function () {\n\t                        return this.timestamp;\n\t                    };\n\t                    /**\n\t                     * The timestamp of this profile update.\n\t                     *\n\t                     * @param timestamp The timestamp of this profile update.\n\t                     */\n\t                    ProfileResponse.prototype.setTimestamp = function (timestamp) {\n\t                        this.timestamp = timestamp;\n\t                    };\n\t                    /**\n\t                     * The name of the financial institution.\n\t                     *\n\t                     * @return The name of the financial institution.\n\t                     */\n\t                    ProfileResponse.prototype.getFinancialInstitutionName = function () {\n\t                        return this.financialInstitutionName;\n\t                    };\n\t                    /**\n\t                     * The name of the financial institution.\n\t                     *\n\t                     * @param financialInstitutionName The name of the financial institution.\n\t                     */\n\t                    ProfileResponse.prototype.setFinancialInstitutionName = function (financialInstitutionName) {\n\t                        this.financialInstitutionName = financialInstitutionName;\n\t                    };\n\t                    /**\n\t                     * The address of the financial institution.\n\t                     *\n\t                     * @return The address of the financial institution.\n\t                     */\n\t                    ProfileResponse.prototype.getAddress1 = function () {\n\t                        return this.address1;\n\t                    };\n\t                    /**\n\t                     * The address of the financial institution.\n\t                     *\n\t                     * @param address1 The address of the financial institution.\n\t                     */\n\t                    ProfileResponse.prototype.setAddress1 = function (address1) {\n\t                        this.address1 = address1;\n\t                    };\n\t                    /**\n\t                     * The address of the financial institution.\n\t                     *\n\t                     * @return The address of the financial institution.\n\t                     */\n\t                    ProfileResponse.prototype.getAddress2 = function () {\n\t                        return this.address2;\n\t                    };\n\t                    /**\n\t                     * The address of the financial institution.\n\t                     *\n\t                     * @param address2 The address of the financial institution.\n\t                     */\n\t                    ProfileResponse.prototype.setAddress2 = function (address2) {\n\t                        this.address2 = address2;\n\t                    };\n\t                    /**\n\t                     * The address of the financial institution.\n\t                     *\n\t                     * @return The address of the financial institution.\n\t                     */\n\t                    ProfileResponse.prototype.getAddress3 = function () {\n\t                        return this.address3;\n\t                    };\n\t                    /**\n\t                     * The address of the financial institution.\n\t                     *\n\t                     * @param address3 The address of the financial institution.\n\t                     */\n\t                    ProfileResponse.prototype.setAddress3 = function (address3) {\n\t                        this.address3 = address3;\n\t                    };\n\t                    /**\n\t                     * The city of the financial institution.\n\t                     *\n\t                     * @return The city of the financial institution.\n\t                     */\n\t                    ProfileResponse.prototype.getCity = function () {\n\t                        return this.city;\n\t                    };\n\t                    /**\n\t                     * The city of the financial institution.\n\t                     *\n\t                     * @param city The city of the financial institution.\n\t                     */\n\t                    ProfileResponse.prototype.setCity = function (city) {\n\t                        this.city = city;\n\t                    };\n\t                    /**\n\t                     * The state of this financial institution.\n\t                     *\n\t                     * @return The state of this financial institution.\n\t                     */\n\t                    ProfileResponse.prototype.getState = function () {\n\t                        return this.state;\n\t                    };\n\t                    /**\n\t                     * The state of this financial institution.\n\t                     *\n\t                     * @param state The state of this financial institution.\n\t                     */\n\t                    ProfileResponse.prototype.setState = function (state) {\n\t                        this.state = state;\n\t                    };\n\t                    /**\n\t                     * The postal code of this financial institution.\n\t                     *\n\t                     * @return The postal code of this financial institution.\n\t                     */\n\t                    ProfileResponse.prototype.getZip = function () {\n\t                        return this.zip;\n\t                    };\n\t                    /**\n\t                     * The postal code of this financial institution.\n\t                     *\n\t                     * @param zip The postal code of this financial institution.\n\t                     */\n\t                    ProfileResponse.prototype.setZip = function (zip) {\n\t                        this.zip = zip;\n\t                    };\n\t                    /**\n\t                     * The country code for this financial institution.\n\t                     *\n\t                     * @return The country code for this financial institution.\n\t                     * @see java.util.Locale#getISO3Country()\n\t                     */\n\t                    ProfileResponse.prototype.getCountry = function () {\n\t                        return this.country;\n\t                    };\n\t                    /**\n\t                     * The country code for this financial institution.\n\t                     *\n\t                     * @param country The country code for this financial institution.\n\t                     */\n\t                    ProfileResponse.prototype.setCountry = function (country) {\n\t                        this.country = country;\n\t                    };\n\t                    /**\n\t                     * The phone number to customer service.\n\t                     *\n\t                     * @return The phone number to customer service.\n\t                     */\n\t                    ProfileResponse.prototype.getCustomerServicePhone = function () {\n\t                        return this.customerServicePhone;\n\t                    };\n\t                    /**\n\t                     * The phone number to customer service.\n\t                     *\n\t                     * @param customerServicePhone The phone number to customer service.\n\t                     */\n\t                    ProfileResponse.prototype.setCustomerServicePhone = function (customerServicePhone) {\n\t                        this.customerServicePhone = customerServicePhone;\n\t                    };\n\t                    /**\n\t                     * The phone number to tech support.\n\t                     *\n\t                     * @return The phone number to tech support.\n\t                     */\n\t                    ProfileResponse.prototype.getTechnicalSupportPhone = function () {\n\t                        return this.technicalSupportPhone;\n\t                    };\n\t                    /**\n\t                     * The phone number to tech support.\n\t                     *\n\t                     * @param technicalSupportPhone The phone number to tech support.\n\t                     */\n\t                    ProfileResponse.prototype.setTechnicalSupportPhone = function (technicalSupportPhone) {\n\t                        this.technicalSupportPhone = technicalSupportPhone;\n\t                    };\n\t                    /**\n\t                     * The fax number.\n\t                     *\n\t                     * @return The fax number.\n\t                     */\n\t                    ProfileResponse.prototype.getFax = function () {\n\t                        return this.fax;\n\t                    };\n\t                    /**\n\t                     * The fax number.\n\t                     *\n\t                     * @param fax The fax number.\n\t                     */\n\t                    ProfileResponse.prototype.setFax = function (fax) {\n\t                        this.fax = fax;\n\t                    };\n\t                    /**\n\t                     * URL for the financial institution.\n\t                     *\n\t                     * @return URL for the financial institution.\n\t                     */\n\t                    ProfileResponse.prototype.getSiteURL = function () {\n\t                        return this.siteURL;\n\t                    };\n\t                    /**\n\t                     * URL for the financial institution.\n\t                     *\n\t                     * @param siteURL URL for the financial institution.\n\t                     */\n\t                    ProfileResponse.prototype.setSiteURL = function (siteURL) {\n\t                        this.siteURL = siteURL;\n\t                    };\n\t                    /**\n\t                     * The email for this FI\n\t                     *\n\t                     * @return The email for this FI\n\t                     */\n\t                    ProfileResponse.prototype.getEmail = function () {\n\t                        return this.email;\n\t                    };\n\t                    /**\n\t                     * The email for this FI\n\t                     *\n\t                     * @param email The email for this FI\n\t                     */\n\t                    ProfileResponse.prototype.setEmail = function (email) {\n\t                        this.email = email;\n\t                    };\n\t                    ProfileResponse.prototype.getMessageSetProfile = function (type, version) {\n\t                        if (version === void 0) { version = null; }\n\t                        return (version === null) ?\n\t                            this.getMessageSetProfile_noversion(type) :\n\t                            this.getMessageSetProfile_version(type, version);\n\t                    };\n\t                    ProfileResponse.prototype.getMessageSetProfile_noversion = function (type) {\n\t                        var profiles = this.getProfiles(type);\n\t                        if (profiles.length > 1) {\n\t                            throw new ofx4js.OFXException(\"More than one profile of type \" + type);\n\t                        }\n\t                        else if (profiles.length == 0) {\n\t                            return null;\n\t                        }\n\t                        else {\n\t                            return profiles[0];\n\t                        }\n\t                    };\n\t                    /**\n\t                     * Get all the profiles of the specified type.\n\t                     *\n\t                     * @param type The type.\n\t                     * @return The profiles.\n\t                     */\n\t                    ProfileResponse.prototype.getProfiles = function (type) {\n\t                        var profiles = new Array();\n\t                        if (this.getMessageSetList() != null && this.getMessageSetList().getInformationList() != null) {\n\t                            for (var _i = 0, _a = this.getMessageSetList().getInformationList(); _i < _a.length; _i++) {\n\t                                var info = _a[_i];\n\t                                if (info.getVersionSpecificInformationList() != null) {\n\t                                    for (var _b = 0, _c = info.getVersionSpecificInformationList(); _b < _c.length; _b++) {\n\t                                        var versionSpecificInfo = _c[_b];\n\t                                        if (versionSpecificInfo.getMessageSetType() == type) {\n\t                                            profiles.push(versionSpecificInfo);\n\t                                        }\n\t                                    }\n\t                                }\n\t                            }\n\t                        }\n\t                        return profiles;\n\t                    };\n\t                    ProfileResponse.prototype.getMessageSetProfile_version = function (type, version) {\n\t                        for (var _i = 0, _a = this.getProfiles(type); _i < _a.length; _i++) {\n\t                            var profile = _a[_i];\n\t                            if (version == null) {\n\t                                if (profile.getVersion() == null) {\n\t                                    return profile;\n\t                                }\n\t                            }\n\t                            else if (version === profile.getVersion()) {\n\t                                return profile;\n\t                            }\n\t                        }\n\t                        return null;\n\t                    };\n\t                    ProfileResponse.prototype.getSignonProfile = function (messageSet) {\n\t                        if (this.getSignonInfoList() != null && this.getSignonInfoList().getInfoList() != null) {\n\t                            for (var _i = 0, _a = this.getSignonInfoList().getInfoList(); _i < _a.length; _i++) {\n\t                                var signonInfo = _a[_i];\n\t                                if (messageSet.getRealm() == null) {\n\t                                    if (signonInfo.getRealm() == null) {\n\t                                        return signonInfo;\n\t                                    }\n\t                                }\n\t                                else if (messageSet.getRealm() === signonInfo.getRealm()) {\n\t                                    return signonInfo;\n\t                                }\n\t                            }\n\t                        }\n\t                        return null;\n\t                    };\n\t                    return ProfileResponse;\n\t                })(ResponseMessage);\n\t                profile_1.ProfileResponse = ProfileResponse;\n\t                Aggregate_add(ProfileResponse, \"PROFRS\");\n\t                ChildAggregate_add(ProfileResponse, { order: 0, type: profile_1.MessageSetInfoList, read: ProfileResponse.prototype.getMessageSetList, write: ProfileResponse.prototype.setMessageSetList });\n\t                ChildAggregate_add(ProfileResponse, { order: 10, type: profile_1.SignonInfoList, read: ProfileResponse.prototype.getSignonInfoList, write: ProfileResponse.prototype.setSignonInfoList });\n\t                Element_add(ProfileResponse, { name: \"DTPROFUP\", order: 20, type: Date, read: ProfileResponse.prototype.getTimestamp, write: ProfileResponse.prototype.setTimestamp });\n\t                Element_add(ProfileResponse, { name: \"FINAME\", order: 30, type: String, read: ProfileResponse.prototype.getFinancialInstitutionName, write: ProfileResponse.prototype.setFinancialInstitutionName });\n\t                Element_add(ProfileResponse, { name: \"ADDR1\", required: true, order: 40, type: String, read: ProfileResponse.prototype.getAddress1, write: ProfileResponse.prototype.setAddress1 });\n\t                Element_add(ProfileResponse, { name: \"ADDR2\", order: 50, type: String, read: ProfileResponse.prototype.getAddress2, write: ProfileResponse.prototype.setAddress2 });\n\t                Element_add(ProfileResponse, { name: \"ADDR3\", order: 60, type: String, read: ProfileResponse.prototype.getAddress3, write: ProfileResponse.prototype.setAddress3 });\n\t                Element_add(ProfileResponse, { name: \"CITY\", required: true, order: 70, type: String, read: ProfileResponse.prototype.getCity, write: ProfileResponse.prototype.setCity });\n\t                Element_add(ProfileResponse, { name: \"STATE\", required: true, order: 80, type: String, read: ProfileResponse.prototype.getState, write: ProfileResponse.prototype.setState });\n\t                Element_add(ProfileResponse, { name: \"POSTALCODE\", required: true, order: 90, type: String, read: ProfileResponse.prototype.getZip, write: ProfileResponse.prototype.setZip });\n\t                Element_add(ProfileResponse, { name: \"COUNTRY\", required: true, order: 100, type: String, read: ProfileResponse.prototype.getCountry, write: ProfileResponse.prototype.setCountry });\n\t                Element_add(ProfileResponse, { name: \"CSPHONE\", order: 110, type: String, read: ProfileResponse.prototype.getCustomerServicePhone, write: ProfileResponse.prototype.setCustomerServicePhone });\n\t                Element_add(ProfileResponse, { name: \"TSPHONE\", order: 120, type: String, read: ProfileResponse.prototype.getTechnicalSupportPhone, write: ProfileResponse.prototype.setTechnicalSupportPhone });\n\t                Element_add(ProfileResponse, { name: \"FAXPHONE\", order: 130, type: String, read: ProfileResponse.prototype.getFax, write: ProfileResponse.prototype.setFax });\n\t                Element_add(ProfileResponse, { name: \"URL\", order: 140, type: String, read: ProfileResponse.prototype.getSiteURL, write: ProfileResponse.prototype.setSiteURL });\n\t                Element_add(ProfileResponse, { name: \"EMAIL\", order: 150, type: String, read: ProfileResponse.prototype.getEmail, write: ProfileResponse.prototype.setEmail });\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../TransactionWrappedResponseMessage'/>\n\t///<reference path='ProfileResponse'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile) {\n\t                var TransactionWrappedResponseMessage = ofx4js.domain.data.TransactionWrappedResponseMessage;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 */\n\t                var ProfileResponseTransaction = (function (_super) {\n\t                    __extends(ProfileResponseTransaction, _super);\n\t                    function ProfileResponseTransaction() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    /**\n\t                     * The message.\n\t                     *\n\t                     * @return The message.\n\t                     */\n\t                    ProfileResponseTransaction.prototype.getMessage = function () {\n\t                        return this.message;\n\t                    };\n\t                    /**\n\t                     * The message.\n\t                     *\n\t                     * @param message The message.\n\t                     */\n\t                    ProfileResponseTransaction.prototype.setMessage = function (message) {\n\t                        this.message = message;\n\t                    };\n\t                    // Inherited.\n\t                    ProfileResponseTransaction.prototype.getWrappedMessage = function () {\n\t                        return this.getMessage();\n\t                    };\n\t                    return ProfileResponseTransaction;\n\t                })(TransactionWrappedResponseMessage);\n\t                profile.ProfileResponseTransaction = ProfileResponseTransaction;\n\t                Aggregate_add(ProfileResponseTransaction, \"PROFTRNRS\");\n\t                ChildAggregate_add(ProfileResponseTransaction, { required: true, order: 30, type: profile.ProfileResponse, read: ProfileResponseTransaction.prototype.getMessage, write: ProfileResponseTransaction.prototype.setMessage });\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../MessageSetType'/>\n\t///<reference path='../ResponseMessageSet'/>\n\t///<reference path='ProfileResponseTransaction'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile) {\n\t                var MessageSetType = ofx4js.domain.data.MessageSetType;\n\t                var ResponseMessageSet = ofx4js.domain.data.ResponseMessageSet;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 * @see \"Section 7 OFX Spec\"\n\t                 */\n\t                var ProfileResponseMessageSet = (function (_super) {\n\t                    __extends(ProfileResponseMessageSet, _super);\n\t                    function ProfileResponseMessageSet() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    ProfileResponseMessageSet.prototype.getType = function () {\n\t                        return MessageSetType.profile;\n\t                    };\n\t                    /**\n\t                     * The profile response.\n\t                     *\n\t                     * @return The profile response.\n\t                     */\n\t                    ProfileResponseMessageSet.prototype.getProfileResponse = function () {\n\t                        return this.profileResponse;\n\t                    };\n\t                    /**\n\t                     * The profile response.\n\t                     *\n\t                     * @param profileResponse The profile response.\n\t                     */\n\t                    ProfileResponseMessageSet.prototype.setProfileResponse = function (profileResponse) {\n\t                        this.profileResponse = profileResponse;\n\t                    };\n\t                    // Inherited.\n\t                    ProfileResponseMessageSet.prototype.getResponseMessages = function () {\n\t                        var messages = new Array();\n\t                        if (this.getProfileResponse() != null) {\n\t                            messages.push(this.getProfileResponse());\n\t                        }\n\t                        return messages;\n\t                    };\n\t                    return ProfileResponseMessageSet;\n\t                })(ResponseMessageSet);\n\t                profile.ProfileResponseMessageSet = ProfileResponseMessageSet;\n\t                Aggregate_add(ProfileResponseMessageSet, \"PROFMSGSRSV1\");\n\t                ChildAggregate_add(ProfileResponseMessageSet, { required: true, order: 0, type: profile.ProfileResponseTransaction, read: ProfileResponseMessageSet.prototype.getProfileResponse, write: ProfileResponseMessageSet.prototype.setProfileResponse });\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../io/AggregateIntrospector'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var meta;\n\t    (function (meta) {\n\t        var AggregateIntrospector = ofx4js.io.AggregateIntrospector;\n\t        function Header_add(clazz, params) {\n\t            console.assert(params.type != null);\n\t            AggregateIntrospector.addHeader(clazz, new meta.Header(params));\n\t        }\n\t        meta.Header_add = Header_add;\n\t    })(meta = ofx4js.meta || (ofx4js.meta = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../project.d.ts'/>\n\t///<reference path='../../collections/SortedSet'/>\n\t///<reference path='../../meta/Aggregate_add'/>\n\t///<reference path='../../meta/ChildAggregate_add'/>\n\t///<reference path='../../meta/Header_add'/>\n\t///<reference path='ApplicationSecurity'/>\n\t///<reference path='RequestMessageSet'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var SortedSet = ofx4js.collections.SortedSet;\n\t            var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t            var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t            var Header_add = ofx4js.meta.Header_add;\n\t            var UUID = __webpack_require__(1);\n\t            // import java.util.SortedSet;\n\t            // import java.util.UUID;\n\t            /**\n\t             * Envelope for enclosing an OFX request.\n\t             *\n\t             * @author Ryan Heaton\n\t             * @see \"Section 2.4.3, OFX Spec\"\n\t             */\n\t            var RequestEnvelope = (function () {\n\t                function RequestEnvelope(UID) {\n\t                    if (UID === void 0) { UID = UUID.v1(); }\n\t                    this.security = data.ApplicationSecurity.NONE;\n\t                    this.UID = UID;\n\t                }\n\t                /**\n\t                 * The security of this envelope.\n\t                 *\n\t                 * @return The security of this envelope.\n\t                 * @see \"Section 2.2, OFX spec\"\n\t                 */\n\t                RequestEnvelope.prototype.getSecurity = function () {\n\t                    return this.security;\n\t                };\n\t                /**\n\t                 * The security of this envelope.\n\t                 *\n\t                 * @param security The security of this envelope.\n\t                 * @see \"Section 2.2, OFX spec\"\n\t                 */\n\t                RequestEnvelope.prototype.setSecurity = function (security) {\n\t                    this.security = security;\n\t                };\n\t                /**\n\t                 * The UID for the envelope.\n\t                 *\n\t                 * @return The UID for the envelope.\n\t                 * @see \"Section 2.2, OFX spec\"\n\t                 */\n\t                RequestEnvelope.prototype.getUID = function () {\n\t                    return this.UID;\n\t                };\n\t                /**\n\t                 * The UID for the envelope.\n\t                 *\n\t                 * @param UID The UID for the envelope.\n\t                 * @see \"Section 2.2, OFX spec\"\n\t                 */\n\t                RequestEnvelope.prototype.setUID = function (UID) {\n\t                    this.UID = UID;\n\t                };\n\t                /**\n\t                 * The UID of the last-processed request/response (used for file-based error recovery).\n\t                 *\n\t                 * @return The UID of the last-processed request/response (used for file-based error recovery).\n\t                 * @see \"Section 2.2, OFX spec\"\n\t                 */\n\t                RequestEnvelope.prototype.getLastProcessedUID = function () {\n\t                    return this.lastProcessedUID;\n\t                };\n\t                /**\n\t                 * The UID of the last-processed request/response (used for file-based error recovery).\n\t                 *\n\t                 * @param lastProcessedUID The UID of the last-processed request/response (used for file-based error recovery).\n\t                 * @see \"Section 2.2, OFX spec\"\n\t                 */\n\t                RequestEnvelope.prototype.setLastProcessedUID = function (lastProcessedUID) {\n\t                    this.lastProcessedUID = lastProcessedUID;\n\t                };\n\t                /**\n\t                 * The message sets that make up the content of this request.\n\t                 *\n\t                 * @return The message sets that make up the content of this request.\n\t                 * @see \"Section 2.4.5, OFX Spec\"\n\t                 */\n\t                RequestEnvelope.prototype.getMessageSets = function () {\n\t                    return this.messageSets;\n\t                };\n\t                /**\n\t                 * The message sets that make up the content of this request.\n\t                 *\n\t                 * @param messageSets The message sets that make up the content of this request.\n\t                 * @see \"Section 2.4.5, OFX Spec\"\n\t                 */\n\t                RequestEnvelope.prototype.setMessageSets = function (messageSets) {\n\t                    this.messageSets = messageSets;\n\t                };\n\t                return RequestEnvelope;\n\t            })();\n\t            data.RequestEnvelope = RequestEnvelope;\n\t            Aggregate_add(RequestEnvelope, \"OFX\");\n\t            Header_add(RequestEnvelope, { name: \"SECURITY\", type: data.ApplicationSecurity, read: RequestEnvelope.prototype.getSecurity, write: RequestEnvelope.prototype.setSecurity });\n\t            Header_add(RequestEnvelope, { name: \"NEWFILEUID\", type: String, read: RequestEnvelope.prototype.getUID, write: RequestEnvelope.prototype.setUID });\n\t            Header_add(RequestEnvelope, { name: \"OLDFILEUID\", type: String, read: RequestEnvelope.prototype.getLastProcessedUID, write: RequestEnvelope.prototype.setLastProcessedUID });\n\t            ChildAggregate_add(RequestEnvelope, { order: 1, type: SortedSet, collectionEntryType: data.RequestMessageSet, read: RequestEnvelope.prototype.getMessageSets, write: RequestEnvelope.prototype.setMessageSets });\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\t///<reference path='../ResponseMessage'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var signon;\n\t            (function (signon) {\n\t                var ResponseMessage = ofx4js.domain.data.ResponseMessage;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                /**\n\t                 * Response to a change a user password request.\n\t                 *\n\t                 * @author Ryan Heaton\n\t                 * @see \"Section 2.5.2.2, OFX Spec.\"\n\t                 */\n\t                var PasswordChangeResponse = (function (_super) {\n\t                    __extends(PasswordChangeResponse, _super);\n\t                    function PasswordChangeResponse() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    /**\n\t                     * The id of the user changing password.\n\t                     *\n\t                     * @return The id of the user changing password.\n\t                     */\n\t                    PasswordChangeResponse.prototype.getUserId = function () {\n\t                        return this.userId;\n\t                    };\n\t                    // Inherited.\n\t                    PasswordChangeResponse.prototype.getResponseMessageName = function () {\n\t                        return \"password change\";\n\t                    };\n\t                    /**\n\t                     * The id of the user changing password.\n\t                     *\n\t                     * @param userId The id of the user changing password.\n\t                     */\n\t                    PasswordChangeResponse.prototype.setUserId = function (userId) {\n\t                        this.userId = userId;\n\t                    };\n\t                    /**\n\t                     * The timestamp of the password change.\n\t                     *\n\t                     * @return The timestamp of the password change.\n\t                     */\n\t                    PasswordChangeResponse.prototype.getChangeTimestamp = function () {\n\t                        return this.changeTimestamp;\n\t                    };\n\t                    /**\n\t                     * The timestamp of the password change.\n\t                     *\n\t                     * @param changeTimestamp The timestamp of the password change.\n\t                     */\n\t                    PasswordChangeResponse.prototype.setChangeTimestamp = function (changeTimestamp) {\n\t                        this.changeTimestamp = changeTimestamp;\n\t                    };\n\t                    return PasswordChangeResponse;\n\t                })(ResponseMessage);\n\t                signon.PasswordChangeResponse = PasswordChangeResponse;\n\t                Aggregate_add(PasswordChangeResponse, \"PINCHRQ\");\n\t                Element_add(PasswordChangeResponse, { name: \"USERID\", required: true, order: 0, type: String, read: PasswordChangeResponse.prototype.getUserId, write: PasswordChangeResponse.prototype.setUserId });\n\t                Element_add(PasswordChangeResponse, { name: \"DTCHANGED\", order: 10, type: Date, read: PasswordChangeResponse.prototype.getChangeTimestamp, write: PasswordChangeResponse.prototype.setChangeTimestamp });\n\t            })(signon = data.signon || (data.signon = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../TransactionWrappedResponseMessage'/>\n\t///<reference path='PasswordChangeResponse'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var signon;\n\t            (function (signon) {\n\t                var TransactionWrappedResponseMessage = ofx4js.domain.data.TransactionWrappedResponseMessage;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 */\n\t                var PasswordChangeResponseTransaction = (function (_super) {\n\t                    __extends(PasswordChangeResponseTransaction, _super);\n\t                    function PasswordChangeResponseTransaction() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    /**\n\t                     * The message.\n\t                     *\n\t                     * @return The message.\n\t                     */\n\t                    PasswordChangeResponseTransaction.prototype.getMessage = function () {\n\t                        return this.message;\n\t                    };\n\t                    /**\n\t                     * The message.\n\t                     *\n\t                     * @param message The message.\n\t                     */\n\t                    PasswordChangeResponseTransaction.prototype.setMessage = function (message) {\n\t                        this.message = message;\n\t                    };\n\t                    // Inherited.\n\t                    PasswordChangeResponseTransaction.prototype.getWrappedMessage = function () {\n\t                        return this.getMessage();\n\t                    };\n\t                    return PasswordChangeResponseTransaction;\n\t                })(TransactionWrappedResponseMessage);\n\t                signon.PasswordChangeResponseTransaction = PasswordChangeResponseTransaction;\n\t                Aggregate_add(PasswordChangeResponseTransaction, \"PINCHTRNRS\");\n\t                ChildAggregate_add(PasswordChangeResponseTransaction, { required: true, order: 30, type: signon.PasswordChangeResponse, read: PasswordChangeResponseTransaction.prototype.getMessage, write: PasswordChangeResponseTransaction.prototype.setMessage });\n\t            })(signon = data.signon || (data.signon = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../common/Status'/>\n\t///<reference path='../common/StatusHolder'/>\n\t///<reference path='FinancialInstitution'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var signon;\n\t            (function (signon) {\n\t                var Status = ofx4js.domain.data.common.Status;\n\t                var ResponseMessage = ofx4js.domain.data.ResponseMessage;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                /**\n\t                 * The signon response message.\n\t                 *\n\t                 * @author Ryan Heaton\n\t                 * @see \"Section 2.5.1.2, OFX Spec.\"\n\t                 */\n\t                var SignonResponse = (function (_super) {\n\t                    __extends(SignonResponse, _super);\n\t                    function SignonResponse() {\n\t                        _super.call(this);\n\t                        this.language = \"ENG\"; //Locale.US.getISO3Language();\n\t                    }\n\t                    SignonResponse.prototype.getResponseMessageName = function () {\n\t                        return \"signon\";\n\t                    };\n\t                    SignonResponse.prototype.getStatusHolderName = function () {\n\t                        return this.getResponseMessageName();\n\t                    };\n\t                    /**\n\t                     * The signon response status.\n\t                     *\n\t                     * @return The signon response status.\n\t                     */\n\t                    SignonResponse.prototype.getStatus = function () {\n\t                        return this.status;\n\t                    };\n\t                    /**\n\t                     * The signon response status.\n\t                     *\n\t                     * @param status The signon response status.\n\t                     */\n\t                    SignonResponse.prototype.setStatus = function (status) {\n\t                        this.status = status;\n\t                    };\n\t                    /**\n\t                     * The timestamp of this response.\n\t                     *\n\t                     * @return The timestamp of this response.\n\t                     */\n\t                    SignonResponse.prototype.getTimestamp = function () {\n\t                        return this.timestamp;\n\t                    };\n\t                    /**\n\t                     * The timestamp of this response.\n\t                     *\n\t                     * @param timestamp The timestamp of this response.\n\t                     */\n\t                    SignonResponse.prototype.setTimestamp = function (timestamp) {\n\t                        this.timestamp = timestamp;\n\t                    };\n\t                    /**\n\t                     * The userkey that can be used instead of the username/password.\n\t                     *\n\t                     * @return The userkey that can be used instead of the username/password.\n\t                     */\n\t                    SignonResponse.prototype.getUserKey = function () {\n\t                        return this.userKey;\n\t                    };\n\t                    /**\n\t                     * The userkey that can be used instead of the username/password.\n\t                     *\n\t                     * @param userKey The userkey that can be used instead of the username/password.\n\t                     */\n\t                    SignonResponse.prototype.setUserKey = function (userKey) {\n\t                        this.userKey = userKey;\n\t                    };\n\t                    /**\n\t                     * The date/time of the expiration of the user key.\n\t                     *\n\t                     * @return The date/time of the expiration of the user key.\n\t                     */\n\t                    SignonResponse.prototype.getUserKeyExpiration = function () {\n\t                        return this.userKeyExpiration;\n\t                    };\n\t                    /**\n\t                     * The date/time of the expiration of the user key.\n\t                     *\n\t                     * @param userKeyExpiration The date/time of the expiration of the user key.\n\t                     */\n\t                    SignonResponse.prototype.setUserKeyExpiration = function (userKeyExpiration) {\n\t                        this.userKeyExpiration = userKeyExpiration;\n\t                    };\n\t                    /**\n\t                     * The three-letter langauge code.\n\t                     *\n\t                     * @return The three-letter langauge code.\n\t                     * @see java.util.Locale#getISO3Language()\n\t                     */\n\t                    SignonResponse.prototype.getLanguage = function () {\n\t                        return this.language;\n\t                    };\n\t                    /**\n\t                     * The three-letter langauge code.\n\t                     *\n\t                     * @param language The three-letter langauge code.\n\t                     */\n\t                    SignonResponse.prototype.setLanguage = function (language) {\n\t                        this.language = language;\n\t                    };\n\t                    /**\n\t                     * The date/time that the FI profile was last updated.\n\t                     *\n\t                     * @return The date/time that the FI profile was last updated.\n\t                     */\n\t                    SignonResponse.prototype.getProfileLastUpdated = function () {\n\t                        return this.profileLastUpdated;\n\t                    };\n\t                    /**\n\t                     * The date/time that the FI profile was last updated.\n\t                     *\n\t                     * @param profileLastUpdated The date/time that the FI profile was last updated.\n\t                     */\n\t                    SignonResponse.prototype.setProfileLastUpdated = function (profileLastUpdated) {\n\t                        this.profileLastUpdated = profileLastUpdated;\n\t                    };\n\t                    /**\n\t                     * The date/time that the user's account information was updated.\n\t                     *\n\t                     * @return The date/time that the user's account information was updated.\n\t                     */\n\t                    SignonResponse.prototype.getAccountLastUpdated = function () {\n\t                        return this.accountLastUpdated;\n\t                    };\n\t                    /**\n\t                     * The date/time that the user's account information was updated.\n\t                     *\n\t                     * @param accountLastUpdated The date/time that the user's account information was updated.\n\t                     */\n\t                    SignonResponse.prototype.setAccountLastUpdated = function (accountLastUpdated) {\n\t                        this.accountLastUpdated = accountLastUpdated;\n\t                    };\n\t                    /**\n\t                     * The financial instutution identity information.\n\t                     *\n\t                     * @return The financial instutution identity information.\n\t                     */\n\t                    SignonResponse.prototype.getFinancialInstitution = function () {\n\t                        return this.financialInstitution;\n\t                    };\n\t                    /**\n\t                     * The financial instutution identity information.\n\t                     *\n\t                     * @param financialInstitution The financial instutution identity information.\n\t                     */\n\t                    SignonResponse.prototype.setFinancialInstitution = function (financialInstitution) {\n\t                        this.financialInstitution = financialInstitution;\n\t                    };\n\t                    /**\n\t                     * The session id for the client.\n\t                     *\n\t                     * @return The session id for the client.\n\t                     */\n\t                    SignonResponse.prototype.getSessionId = function () {\n\t                        return this.sessionId;\n\t                    };\n\t                    /**\n\t                     * The session id for the client.\n\t                     *\n\t                     * @param sessionId The session id for the client.\n\t                     */\n\t                    SignonResponse.prototype.setSessionId = function (sessionId) {\n\t                        this.sessionId = sessionId;\n\t                    };\n\t                    /**\n\t                     * The access key that the client should return in the next sign-on requuest.\n\t                     *\n\t                     * @return The access key that the client should return in the next sign-on requuest.\n\t                     */\n\t                    SignonResponse.prototype.getAccessKey = function () {\n\t                        return this.accessKey;\n\t                    };\n\t                    /**\n\t                     * The access key that the client should return in the next sign-on requuest.\n\t                     *\n\t                     * @param accessKey The access key that the client should return in the next sign-on requuest.\n\t                     */\n\t                    SignonResponse.prototype.setAccessKey = function (accessKey) {\n\t                        this.accessKey = accessKey;\n\t                    };\n\t                    return SignonResponse;\n\t                })(ResponseMessage);\n\t                signon.SignonResponse = SignonResponse;\n\t                Aggregate_add(SignonResponse, \"SONRS\");\n\t                ChildAggregate_add(SignonResponse, { required: true, order: 0, type: Status, read: SignonResponse.prototype.getStatus, write: SignonResponse.prototype.setStatus });\n\t                Element_add(SignonResponse, { name: \"DTSERVER\", required: true, order: 10, type: Date, read: SignonResponse.prototype.getTimestamp, write: SignonResponse.prototype.setTimestamp });\n\t                Element_add(SignonResponse, { name: \"USERKEY\", order: 20, type: String, read: SignonResponse.prototype.getUserKey, write: SignonResponse.prototype.setUserKey });\n\t                Element_add(SignonResponse, { name: \"TSKEYEXPIRE\", order: 30, type: Date, read: SignonResponse.prototype.getUserKeyExpiration, write: SignonResponse.prototype.setUserKeyExpiration });\n\t                Element_add(SignonResponse, { name: \"LANGUAGE\", required: true, order: 40, type: String, read: SignonResponse.prototype.getLanguage, write: SignonResponse.prototype.setLanguage });\n\t                Element_add(SignonResponse, { name: \"DTPROFUP\", order: 50, type: Date, read: SignonResponse.prototype.getProfileLastUpdated, write: SignonResponse.prototype.setProfileLastUpdated });\n\t                Element_add(SignonResponse, { name: \"DTACCTUP\", order: 60, type: Date, read: SignonResponse.prototype.getAccountLastUpdated, write: SignonResponse.prototype.setAccountLastUpdated });\n\t                ChildAggregate_add(SignonResponse, { order: 70, type: signon.FinancialInstitution, read: SignonResponse.prototype.getFinancialInstitution, write: SignonResponse.prototype.setFinancialInstitution });\n\t                Element_add(SignonResponse, { name: \"SESSCOOKIE\", order: 80, type: String, read: SignonResponse.prototype.getSessionId, write: SignonResponse.prototype.setSessionId });\n\t                Element_add(SignonResponse, { name: \"ACCESSKEY\", order: 90, type: String, read: SignonResponse.prototype.getAccessKey, write: SignonResponse.prototype.setAccessKey });\n\t            })(signon = data.signon || (data.signon = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../MessageSetType'/>\n\t///<reference path='../ResponseMessageSet'/>\n\t///<reference path='../ResponseMessage'/>\n\t///<reference path='PasswordChangeResponseTransaction'/>\n\t///<reference path='SignonResponse'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var signon;\n\t            (function (signon) {\n\t                var MessageSetType = ofx4js.domain.data.MessageSetType;\n\t                var ResponseMessageSet = ofx4js.domain.data.ResponseMessageSet;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                /**\n\t                 * The sign-on response message set.\n\t                 *\n\t                 * @author Ryan Heaton\n\t                 * @see \"Section 2.5, OFX Spec.\"\n\t                 */\n\t                var SignonResponseMessageSet = (function (_super) {\n\t                    __extends(SignonResponseMessageSet, _super);\n\t                    function SignonResponseMessageSet() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    SignonResponseMessageSet.prototype.getType = function () {\n\t                        return MessageSetType.signon;\n\t                    };\n\t                    /**\n\t                     * The message for this message set.\n\t                     *\n\t                     * @return The message for this message set.\n\t                     */\n\t                    SignonResponseMessageSet.prototype.getSignonResponse = function () {\n\t                        return this.signonResponse;\n\t                    };\n\t                    /**\n\t                     * The message for this message set.\n\t                     *\n\t                     * @param signonResponse The message for this message set.\n\t                     */\n\t                    SignonResponseMessageSet.prototype.setSignonResponse = function (signonResponse) {\n\t                        this.signonResponse = signonResponse;\n\t                    };\n\t                    /**\n\t                     * The password change response.\n\t                     *\n\t                     * @return The password change response.\n\t                     */\n\t                    SignonResponseMessageSet.prototype.getPasswordChangeResponse = function () {\n\t                        return this.passwordChangeResponse;\n\t                    };\n\t                    /**\n\t                     * The password change response.\n\t                     *\n\t                     * @param passwordChangeResponse The password change response.\n\t                     */\n\t                    SignonResponseMessageSet.prototype.setPasswordChangeResponse = function (passwordChangeResponse) {\n\t                        this.passwordChangeResponse = passwordChangeResponse;\n\t                    };\n\t                    //todo: challenge request/response\n\t                    // Inherited.\n\t                    SignonResponseMessageSet.prototype.getResponseMessages = function () {\n\t                        var messages = new Array();\n\t                        if (this.getSignonResponse() != null) {\n\t                            messages.push(this.getSignonResponse());\n\t                        }\n\t                        return messages;\n\t                    };\n\t                    return SignonResponseMessageSet;\n\t                })(ResponseMessageSet);\n\t                signon.SignonResponseMessageSet = SignonResponseMessageSet;\n\t                Aggregate_add(SignonResponseMessageSet, \"SIGNONMSGSRSV1\");\n\t                ChildAggregate_add(SignonResponseMessageSet, { order: 0, type: signon.SignonResponse, read: SignonResponseMessageSet.prototype.getSignonResponse, write: SignonResponseMessageSet.prototype.setSignonResponse });\n\t                ChildAggregate_add(SignonResponseMessageSet, { order: 10, type: signon.PasswordChangeResponseTransaction, read: SignonResponseMessageSet.prototype.getPasswordChangeResponse, write: SignonResponseMessageSet.prototype.setPasswordChangeResponse });\n\t            })(signon = data.signon || (data.signon = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../project.d.ts'/>\n\t///<reference path='../../collections/SortedSet'/>\n\t///<reference path='../../meta/Aggregate_add'/>\n\t///<reference path='../../meta/ChildAggregate_add'/>\n\t///<reference path='../../meta/Header_add'/>\n\t///<reference path='signon/SignonResponseMessageSet'/>\n\t///<reference path='signon/SignonResponse'/>\n\t///<reference path='ApplicationSecurity'/>\n\t///<reference path='ApplicationSecurity'/>\n\t///<reference path='MessageSetType'/>\n\t///<reference path='ResponseMessageSet'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var SortedSet = ofx4js.collections.SortedSet;\n\t            var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t            var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t            var Header_add = ofx4js.meta.Header_add;\n\t            //import java.util.SortedSet;\n\t            /**\n\t             * Envelope for enclosing an OFX response.\n\t             *\n\t             * @author Ryan Heaton\n\t             * @see \"Section 2.4.3, OFX Spec\"\n\t             */\n\t            var ResponseEnvelope = (function () {\n\t                function ResponseEnvelope() {\n\t                }\n\t                /**\n\t                 * The security of this envelope.\n\t                 *\n\t                 * @return The security of this envelope.\n\t                 * @see \"Section 2.2, OFX spec\"\n\t                 */\n\t                ResponseEnvelope.prototype.getSecurity = function () {\n\t                    return this.security;\n\t                };\n\t                /**\n\t                 * The security of this envelope.\n\t                 *\n\t                 * @param security The security of this envelope.\n\t                 * @see \"Section 2.2, OFX spec\"\n\t                 */\n\t                ResponseEnvelope.prototype.setSecurity = function (security) {\n\t                    this.security = security;\n\t                };\n\t                /**\n\t                 * The UID for the envelope.\n\t                 *\n\t                 * @return The UID for the envelope.\n\t                 * @see \"Section 2.2, OFX spec\"\n\t                 */\n\t                ResponseEnvelope.prototype.getUID = function () {\n\t                    return this.UID;\n\t                };\n\t                /**\n\t                 * The UID for the envelope.\n\t                 *\n\t                 * @param UID The UID for the envelope.\n\t                 * @see \"Section 2.2, OFX spec\"\n\t                 */\n\t                ResponseEnvelope.prototype.setUID = function (UID) {\n\t                    this.UID = UID;\n\t                };\n\t                /**\n\t                 * The message sets that make up the content of this response.\n\t                 *\n\t                 * @return The message sets that make up the content of this response.\n\t                 * @see \"Section 2.4.5, OFX Spec\"\n\t                 */\n\t                ResponseEnvelope.prototype.getMessageSets = function () {\n\t                    return this.messageSets;\n\t                };\n\t                /**\n\t                 * The message sets that make up the content of this response.\n\t                 *\n\t                 * @param messageSets The message sets that make up the content of this response.\n\t                 * @see \"Section 2.4.5, OFX Spec\"\n\t                 */\n\t                ResponseEnvelope.prototype.setMessageSets = function (messageSets) {\n\t                    this.messageSets = messageSets;\n\t                };\n\t                /**\n\t                 * Helper method for looking up the signon response.\n\t                 *\n\t                 * @return The signon response, or null if none found.\n\t                 */\n\t                ResponseEnvelope.prototype.getSignonResponse = function () {\n\t                    var type = data.MessageSetType.signon;\n\t                    var message = this.getMessageSet(type);\n\t                    if (message != null) {\n\t                        return message.getSignonResponse();\n\t                    }\n\t                    else {\n\t                        return null;\n\t                    }\n\t                };\n\t                /**\n\t                 * Get the message set of the specified type.\n\t                 *\n\t                 * @param type The type.\n\t                 * @return The message set, or null.\n\t                 */\n\t                ResponseEnvelope.prototype.getMessageSet = function (type) {\n\t                    var message = null;\n\t                    if (this.messageSets != null) {\n\t                        for (var i in this.messageSets.values()) {\n\t                            var messageSet = this.messageSets.values()[i];\n\t                            if (messageSet.getType() == type) {\n\t                                message = messageSet;\n\t                                break;\n\t                            }\n\t                        }\n\t                    }\n\t                    return message;\n\t                };\n\t                return ResponseEnvelope;\n\t            })();\n\t            data.ResponseEnvelope = ResponseEnvelope;\n\t            Aggregate_add(ResponseEnvelope, \"OFX\");\n\t            Header_add(ResponseEnvelope, { name: \"SECURITY\", type: data.ApplicationSecurity, read: ResponseEnvelope.prototype.getSecurity, write: ResponseEnvelope.prototype.setSecurity });\n\t            Header_add(ResponseEnvelope, { name: \"NEWFILEUID\", type: String, read: ResponseEnvelope.prototype.getUID, write: ResponseEnvelope.prototype.setUID });\n\t            ChildAggregate_add(ResponseEnvelope, { order: 1, type: SortedSet, collectionEntryType: data.ResponseMessageSet, read: ResponseEnvelope.prototype.getMessageSets, write: ResponseEnvelope.prototype.setMessageSets });\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../domain/data/RequestEnvelope'/>\n\t///<reference path='../../domain/data/ResponseEnvelope'/>\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../OFXException'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var client;\n\t    (function (client) {\n\t        var net;\n\t        (function (net) {\n\t            var OFXException = ofx4js.OFXException;\n\t            /**\n\t             * Error with a particular OFX connection.\n\t             *\n\t             * @author Ryan Heaton\n\t             */\n\t            var OFXConnectionException = (function (_super) {\n\t                __extends(OFXConnectionException, _super);\n\t                function OFXConnectionException(message, e) {\n\t                    if (e === void 0) { e = null; }\n\t                    _super.call(this, message, e);\n\t                }\n\t                return OFXConnectionException;\n\t            })(OFXException);\n\t            net.OFXConnectionException = OFXConnectionException;\n\t        })(net = client.net || (client.net = {}));\n\t    })(client = ofx4js.client || (ofx4js.client = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/Element_add'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var statements;\n\t                (function (statements) {\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var Element_add = ofx4js.meta.Element_add;\n\t                    /**\n\t                     * Aggreate to indicate whether position information is requested as part of the statement\n\t                     * @see \"Section 13.9.1.2, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var IncludePosition = (function () {\n\t                        function IncludePosition() {\n\t                            this.includePositions = true;\n\t                        }\n\t                        /**\n\t                         * Gets the date that the position should be sent down for. This is an optional field according\n\t                         * to the OFX spec.\n\t                         *\n\t                         * @return the date for the position\n\t                         */\n\t                        IncludePosition.prototype.getDateSentDown = function () {\n\t                            return this.sentDownDate;\n\t                        };\n\t                        /**\n\t                         * Sets the date that the position should be sent down for. This is an optional field according\n\t                         * to the OFX spec.\n\t                         *\n\t                         * @param sentDownDate the date for the position\n\t                         */\n\t                        IncludePosition.prototype.setDateSentDown = function (sentDownDate) {\n\t                            this.sentDownDate = sentDownDate;\n\t                        };\n\t                        /**\n\t                         * Gets whether to include positions in the statement download.\n\t                         *\n\t                         * @return whether to include positions in the statement download\n\t                         */\n\t                        IncludePosition.prototype.getIncludePositions = function () {\n\t                            return this.includePositions;\n\t                        };\n\t                        /**\n\t                         * Sets whether to include positions in the statement download.\n\t                         *\n\t                         * @param includePositions whether to include positions in the statement download\n\t                         */\n\t                        IncludePosition.prototype.setIncludePositions = function (includePositions) {\n\t                            this.includePositions = includePositions;\n\t                        };\n\t                        return IncludePosition;\n\t                    })();\n\t                    statements.IncludePosition = IncludePosition;\n\t                    Aggregate_add(IncludePosition, \"INCPOS\");\n\t                    Element_add(IncludePosition, { name: \"DTASOF\", order: 0, type: Date, read: IncludePosition.prototype.getDateSentDown, write: IncludePosition.prototype.setDateSentDown });\n\t                    Element_add(IncludePosition, { name: \"INCLUDE\", order: 10, type: Boolean, read: IncludePosition.prototype.getIncludePositions, write: IncludePosition.prototype.setIncludePositions });\n\t                })(statements = investment.statements || (investment.statements = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../../../meta/Element_add'/>\n\t///<reference path='../../common/StatementRequest'/>\n\t///<reference path='../../investment/accounts/InvestmentAccountDetails'/>\n\t///<reference path='IncludePosition'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var statements;\n\t                (function (statements) {\n\t                    var StatementRequest = ofx4js.domain.data.common.StatementRequest;\n\t                    var InvestmentAccountDetails = ofx4js.domain.data.investment.accounts.InvestmentAccountDetails;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                    var Element_add = ofx4js.meta.Element_add;\n\t                    /**\n\t                     * Aggregate for the investment statement download request.\n\t                     * @see \"Section 13.9.1.1, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var InvestmentStatementRequest = (function (_super) {\n\t                        __extends(InvestmentStatementRequest, _super);\n\t                        function InvestmentStatementRequest() {\n\t                            _super.call(this);\n\t                            this.includeOpenOrders = false;\n\t                            this.includeBalance = true;\n\t                        }\n\t                        /**\n\t                         * The account details.\n\t                         *\n\t                         * @return The account details.\n\t                         */\n\t                        InvestmentStatementRequest.prototype.getAccount = function () {\n\t                            return this.account;\n\t                        };\n\t                        /**\n\t                         * The account details.\n\t                         *\n\t                         * @param account The account details.\n\t                         */\n\t                        InvestmentStatementRequest.prototype.setAccount = function (account) {\n\t                            this.account = account;\n\t                        };\n\t                        /**\n\t                         * Gets whether to include open orders. This is an optional field according to the OFX spec.\n\t                         * <br>\n\t                         * Note, open orders are not yet implemented.\n\t                         *\n\t                         * @return whether to include open orders\n\t                         */\n\t                        InvestmentStatementRequest.prototype.getIncludeOpenOrders = function () {\n\t                            return this.includeOpenOrders;\n\t                        };\n\t                        /**\n\t                         * Sets whether to include open orders. This is an optional field according to the OFX spec.\n\t                         * <br>\n\t                         * Note, open orders are not yet implemented.\n\t                         *\n\t                         * @param includeOpenOrders whether to include open orders\n\t                         */\n\t                        InvestmentStatementRequest.prototype.setIncludeOpenOrders = function (includeOpenOrders) {\n\t                            this.includeOpenOrders = includeOpenOrders;\n\t                        };\n\t                        /**\n\t                         * Gets the include position child aggregate. This is a required field according to the OFX spec.\n\t                         *\n\t                         * @return the include position child aggregate\n\t                         */\n\t                        InvestmentStatementRequest.prototype.getIncludePosition = function () {\n\t                            return this.includePosition;\n\t                        };\n\t                        /**\n\t                         * Gets the include position child aggregate. This is a required field according to the OFX spec.\n\t                         *\n\t                         * @param includePosition the include position child aggregate\n\t                         */\n\t                        InvestmentStatementRequest.prototype.setIncludePosition = function (includePosition) {\n\t                            this.includePosition = includePosition;\n\t                        };\n\t                        /**\n\t                         * Gets whether to include balance info in the response. This is a required field according to\n\t                         * the OFX spec.\n\t                         *\n\t                         * @return whether to include balance info in the response\n\t                         */\n\t                        InvestmentStatementRequest.prototype.getIncludeBalance = function () {\n\t                            return this.includeBalance;\n\t                        };\n\t                        /**\n\t                         * Sets whether to include balance info in the response. This is a required field according to\n\t                         * the OFX spec.\n\t                         *\n\t                         * @param includeBalance whether to include balance info in the response\n\t                         */\n\t                        InvestmentStatementRequest.prototype.setIncludeBalance = function (includeBalance) {\n\t                            this.includeBalance = includeBalance;\n\t                        };\n\t                        return InvestmentStatementRequest;\n\t                    })(StatementRequest);\n\t                    statements.InvestmentStatementRequest = InvestmentStatementRequest;\n\t                    Aggregate_add(InvestmentStatementRequest, \"INVSTMTRQ\");\n\t                    ChildAggregate_add(InvestmentStatementRequest, { name: \"INVACCTFROM\", required: true, order: 0, type: InvestmentAccountDetails, read: InvestmentStatementRequest.prototype.getAccount, write: InvestmentStatementRequest.prototype.setAccount });\n\t                    Element_add(InvestmentStatementRequest, { name: \"INCOO\", order: 20, type: Boolean, read: InvestmentStatementRequest.prototype.getIncludeOpenOrders, write: InvestmentStatementRequest.prototype.setIncludeOpenOrders });\n\t                    ChildAggregate_add(InvestmentStatementRequest, { name: \"INCPOS\", required: true, order: 30, type: statements.IncludePosition, read: InvestmentStatementRequest.prototype.getIncludePosition, write: InvestmentStatementRequest.prototype.setIncludePosition });\n\t                    Element_add(InvestmentStatementRequest, { name: \"INCBAL\", required: true, order: 40, type: Boolean, read: InvestmentStatementRequest.prototype.getIncludeBalance, write: InvestmentStatementRequest.prototype.setIncludeBalance });\n\t                })(statements = investment.statements || (investment.statements = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../TransactionWrappedRequestMessage'/>\n\t///<reference path='InvestmentStatementRequest'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var statements;\n\t                (function (statements) {\n\t                    var TransactionWrappedRequestMessage = ofx4js.domain.data.TransactionWrappedRequestMessage;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                    /**\n\t                     * Investment statement transaction request.\n\t                     * @see \"Section 13.9.1.1, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var InvestmentStatementRequestTransaction = (function (_super) {\n\t                        __extends(InvestmentStatementRequestTransaction, _super);\n\t                        function InvestmentStatementRequestTransaction() {\n\t                            _super.apply(this, arguments);\n\t                        }\n\t                        /**\n\t                         * Gets the the statement request message.\n\t                         *\n\t                         * @return the statement request message.\n\t                         */\n\t                        InvestmentStatementRequestTransaction.prototype.getMessage = function () {\n\t                            return this.message;\n\t                        };\n\t                        /**\n\t                         * Sets the the statement request message.\n\t                         *\n\t                         * @param message the statement request message.\n\t                         */\n\t                        InvestmentStatementRequestTransaction.prototype.setMessage = function (message) {\n\t                            this.message = message;\n\t                        };\n\t                        // Inherited.\n\t                        InvestmentStatementRequestTransaction.prototype.setWrappedMessage = function (message) {\n\t                            this.setMessage(message);\n\t                        };\n\t                        return InvestmentStatementRequestTransaction;\n\t                    })(TransactionWrappedRequestMessage);\n\t                    statements.InvestmentStatementRequestTransaction = InvestmentStatementRequestTransaction;\n\t                    Aggregate_add(InvestmentStatementRequestTransaction, \"INVSTMTTRNRQ\");\n\t                    ChildAggregate_add(InvestmentStatementRequestTransaction, { required: true, order: 30, type: statements.InvestmentStatementRequest, read: InvestmentStatementRequestTransaction.prototype.getMessage, write: InvestmentStatementRequestTransaction.prototype.setMessage });\n\t                })(statements = investment.statements || (investment.statements = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../MessageSetType'/>\n\t///<reference path='../../RequestMessage'/>\n\t///<reference path='../../RequestMessageSet'/>\n\t///<reference path='InvestmentStatementRequestTransaction'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var statements;\n\t                (function (statements) {\n\t                    var MessageSetType = ofx4js.domain.data.MessageSetType;\n\t                    var RequestMessageSet = ofx4js.domain.data.RequestMessageSet;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                    /**\n\t                     * Investment statement request message set.\n\t                     * @see \"Section 13.7.1.2.1, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var InvestmentStatementRequestMessageSet = (function (_super) {\n\t                        __extends(InvestmentStatementRequestMessageSet, _super);\n\t                        function InvestmentStatementRequestMessageSet() {\n\t                            _super.apply(this, arguments);\n\t                        }\n\t                        InvestmentStatementRequestMessageSet.prototype.getType = function () {\n\t                            return MessageSetType.investment;\n\t                        };\n\t                        /**\n\t                         * Gets the statement request.\n\t                         *\n\t                         * @return the request\n\t                         */\n\t                        InvestmentStatementRequestMessageSet.prototype.getStatementRequest = function () {\n\t                            return this.statementRequest;\n\t                        };\n\t                        /**\n\t                         * Sets the statement request.\n\t                         *\n\t                         * @param statementRequest the request\n\t                         */\n\t                        InvestmentStatementRequestMessageSet.prototype.setStatementRequest = function (statementRequest) {\n\t                            this.statementRequest = statementRequest;\n\t                        };\n\t                        // Inherited.\n\t                        InvestmentStatementRequestMessageSet.prototype.getRequestMessages = function () {\n\t                            var requestMessages = new Array();\n\t                            if (this.getStatementRequest() != null) {\n\t                                requestMessages.push(this.getStatementRequest());\n\t                            }\n\t                            return requestMessages;\n\t                        };\n\t                        return InvestmentStatementRequestMessageSet;\n\t                    })(RequestMessageSet);\n\t                    statements.InvestmentStatementRequestMessageSet = InvestmentStatementRequestMessageSet;\n\t                    Aggregate_add(InvestmentStatementRequestMessageSet, \"INVSTMTMSGSRQV1\");\n\t                    ChildAggregate_add(InvestmentStatementRequestMessageSet, { order: 0, type: statements.InvestmentStatementRequestTransaction, read: InvestmentStatementRequestMessageSet.prototype.getStatementRequest, write: InvestmentStatementRequestMessageSet.prototype.setStatementRequest });\n\t                })(statements = investment.statements || (investment.statements = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../TransactionWrappedResponseMessage'/>\n\t///<reference path='InvestmentStatementResponse'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var statements;\n\t                (function (statements) {\n\t                    var TransactionWrappedResponseMessage = ofx4js.domain.data.TransactionWrappedResponseMessage;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                    /**\n\t                     * Investment statement transaction response.\n\t                     * @see \"Section 13.9.2.1, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var InvestmentStatementResponseTransaction = (function (_super) {\n\t                        __extends(InvestmentStatementResponseTransaction, _super);\n\t                        function InvestmentStatementResponseTransaction() {\n\t                            _super.apply(this, arguments);\n\t                        }\n\t                        /**\n\t                         * Gets the the statement response message.\n\t                         *\n\t                         * @return the statement response message.\n\t                         */\n\t                        InvestmentStatementResponseTransaction.prototype.getMessage = function () {\n\t                            return this.message;\n\t                        };\n\t                        /**\n\t                         * Sets the the statement response message.\n\t                         *\n\t                         * @param message the statement response message.\n\t                         */\n\t                        InvestmentStatementResponseTransaction.prototype.setMessage = function (message) {\n\t                            this.message = message;\n\t                        };\n\t                        // Inherited.\n\t                        InvestmentStatementResponseTransaction.prototype.getWrappedMessage = function () {\n\t                            return this.getMessage();\n\t                        };\n\t                        return InvestmentStatementResponseTransaction;\n\t                    })(TransactionWrappedResponseMessage);\n\t                    statements.InvestmentStatementResponseTransaction = InvestmentStatementResponseTransaction;\n\t                    Aggregate_add(InvestmentStatementResponseTransaction, \"INVSTMTTRNRS\");\n\t                    ChildAggregate_add(InvestmentStatementResponseTransaction, { required: true, order: 30, type: statements.InvestmentStatementResponse, read: InvestmentStatementResponseTransaction.prototype.getMessage, write: InvestmentStatementResponseTransaction.prototype.setMessage });\n\t                })(statements = investment.statements || (investment.statements = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../MessageSetType'/>\n\t///<reference path='../../ResponseMessage'/>\n\t///<reference path='../../ResponseMessageSet'/>\n\t///<reference path='InvestmentStatementResponseTransaction'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var statements;\n\t                (function (statements) {\n\t                    var MessageSetType = ofx4js.domain.data.MessageSetType;\n\t                    var ResponseMessageSet = ofx4js.domain.data.ResponseMessageSet;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                    /**\n\t                     * Investment statement response message set.\n\t                     * @see \"Section 13.7.1.2.2, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var InvestmentStatementResponseMessageSet = (function (_super) {\n\t                        __extends(InvestmentStatementResponseMessageSet, _super);\n\t                        function InvestmentStatementResponseMessageSet() {\n\t                            _super.apply(this, arguments);\n\t                        }\n\t                        InvestmentStatementResponseMessageSet.prototype.getType = function () {\n\t                            return MessageSetType.investment;\n\t                        };\n\t                        /**\n\t                         * Gets the statement response list. Most OFX files have a single statement response.\n\t                         *\n\t                         * @return the statement response list\n\t                         */\n\t                        InvestmentStatementResponseMessageSet.prototype.getStatementResponses = function () {\n\t                            return this.statementResponses;\n\t                        };\n\t                        /**\n\t                         * Sets the statement reponse list. Most OFX files have a single statement response.\n\t                         *\n\t                         * @param statementResponses the statement response list\n\t                         */\n\t                        InvestmentStatementResponseMessageSet.prototype.setStatementResponses = function (statementResponses) {\n\t                            this.statementResponses = statementResponses;\n\t                        };\n\t                        /**\n\t                         * Gets the first statement response. Use getStatementResponses() if you are expecting multiple\n\t                         * responses.\n\t                         *\n\t                         * @return the first investment statement response.\n\t                         */\n\t                        InvestmentStatementResponseMessageSet.prototype.getStatementResponse = function () {\n\t                            return this.statementResponses == null || this.statementResponses.length == 0 ? null : this.statementResponses[0];\n\t                        };\n\t                        /**\n\t                         * Sets the statement response if there is a single response.\n\t                         *\n\t                         * @param statementResponse The statement response.\n\t                         */\n\t                        InvestmentStatementResponseMessageSet.prototype.setStatementResponse = function (statementResponse) {\n\t                            this.statementResponses = [statementResponse];\n\t                        };\n\t                        // Inherited.\n\t                        InvestmentStatementResponseMessageSet.prototype.getResponseMessages = function () {\n\t                            return this.statementResponses;\n\t                        };\n\t                        return InvestmentStatementResponseMessageSet;\n\t                    })(ResponseMessageSet);\n\t                    statements.InvestmentStatementResponseMessageSet = InvestmentStatementResponseMessageSet;\n\t                    Aggregate_add(InvestmentStatementResponseMessageSet, \"INVSTMTMSGSRSV1\");\n\t                    ChildAggregate_add(InvestmentStatementResponseMessageSet, { order: 0, type: Array, collectionEntryType: statements.InvestmentStatementResponseTransaction, read: InvestmentStatementResponseMessageSet.prototype.getStatementResponses, write: InvestmentStatementResponseMessageSet.prototype.setStatementResponses });\n\t                })(statements = investment.statements || (investment.statements = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../RequestMessage'/>\n\t///<reference path='SecurityRequest'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var seclist;\n\t            (function (seclist) {\n\t                var RequestMessage = ofx4js.domain.data.RequestMessage;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                /**\n\t                 * Request aggregate for the security list.\n\t                 * @see \"Section 13.8.2.2, OFX Spec\"\n\t                 *\n\t                 * @author Jon Perlow\n\t                 */\n\t                var SecurityListRequest = (function (_super) {\n\t                    __extends(SecurityListRequest, _super);\n\t                    function SecurityListRequest() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    SecurityListRequest.prototype.getSecurityRequests = function () {\n\t                        return this.securityRequests;\n\t                    };\n\t                    SecurityListRequest.prototype.setSecurityRequests = function (securityRequests) {\n\t                        this.securityRequests = securityRequests;\n\t                    };\n\t                    return SecurityListRequest;\n\t                })(RequestMessage);\n\t                seclist.SecurityListRequest = SecurityListRequest;\n\t                Aggregate_add(SecurityListRequest, \"SECLISTRQ\");\n\t                ChildAggregate_add(SecurityListRequest, { required: true, order: 10, type: Array, collectionEntryType: seclist.SecurityRequest, read: SecurityListRequest.prototype.getSecurityRequests, write: SecurityListRequest.prototype.setSecurityRequests });\n\t            })(seclist = data.seclist || (data.seclist = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../TransactionWrappedRequestMessage'/>\n\t///<reference path='SecurityListRequest'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var seclist;\n\t            (function (seclist) {\n\t                var TransactionWrappedRequestMessage = ofx4js.domain.data.TransactionWrappedRequestMessage;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                /**\n\t                 * Security list transaction request.\n\t                 * @see \"Section 13.8.2.1, OFX Spec\"\n\t                 *\n\t                 * @author Jon Perlow\n\t                 */\n\t                var SecurityListRequestTransaction = (function (_super) {\n\t                    __extends(SecurityListRequestTransaction, _super);\n\t                    function SecurityListRequestTransaction() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    /**\n\t                     * The message.\n\t                     *\n\t                     * @return The message.\n\t                     */\n\t                    SecurityListRequestTransaction.prototype.getMessage = function () {\n\t                        return this.message;\n\t                    };\n\t                    /**\n\t                     * The message.\n\t                     *\n\t                     * @param message The message.\n\t                     *\n\t                     */\n\t                    SecurityListRequestTransaction.prototype.setMessage = function (message) {\n\t                        this.message = message;\n\t                    };\n\t                    // Inherited.\n\t                    SecurityListRequestTransaction.prototype.setWrappedMessage = function (message) {\n\t                        this.setMessage(message);\n\t                    };\n\t                    return SecurityListRequestTransaction;\n\t                })(TransactionWrappedRequestMessage);\n\t                seclist.SecurityListRequestTransaction = SecurityListRequestTransaction;\n\t                Aggregate_add(SecurityListRequestTransaction, \"SECLISTTRNRQ\");\n\t                ChildAggregate_add(SecurityListRequestTransaction, { required: true, order: 30, type: seclist.SecurityListRequest, read: SecurityListRequestTransaction.prototype.getMessage, write: SecurityListRequestTransaction.prototype.setMessage });\n\t            })(seclist = data.seclist || (data.seclist = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../MessageSetType'/>\n\t///<reference path='../RequestMessage'/>\n\t///<reference path='../RequestMessageSet'/>\n\t///<reference path='../investment/statements/InvestmentStatementRequestTransaction'/>\n\t///<reference path='SecurityListRequestTransaction'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var seclist;\n\t            (function (seclist) {\n\t                var MessageSetType = ofx4js.domain.data.MessageSetType;\n\t                var RequestMessageSet = ofx4js.domain.data.RequestMessageSet;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                /**\n\t                 * Security list request message set.\n\t                 * @see \"Section 13.7.2.2.1, OFX Spec\"\n\t                 *\n\t                 * @author Jon Perlow\n\t                 */\n\t                var SecurityListRequestMessageSet = (function (_super) {\n\t                    __extends(SecurityListRequestMessageSet, _super);\n\t                    function SecurityListRequestMessageSet() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    SecurityListRequestMessageSet.prototype.getType = function () {\n\t                        return MessageSetType.investment;\n\t                    };\n\t                    /**\n\t                     * Gets the security list request.\n\t                     *\n\t                     * @return the request\n\t                     */\n\t                    SecurityListRequestMessageSet.prototype.getSecurityListRequest = function () {\n\t                        return this.securityListRequest;\n\t                    };\n\t                    /**\n\t                     * Sets the security list request.\n\t                     *\n\t                     * @param statementRequest the request\n\t                     */\n\t                    SecurityListRequestMessageSet.prototype.setSecurityListRequest = function (statementRequest) {\n\t                        this.securityListRequest = statementRequest;\n\t                    };\n\t                    // Inherited.\n\t                    SecurityListRequestMessageSet.prototype.getRequestMessages = function () {\n\t                        var requestMessages = new Array();\n\t                        if (this.getSecurityListRequest() != null) {\n\t                            requestMessages.push(this.getSecurityListRequest());\n\t                        }\n\t                        return requestMessages;\n\t                    };\n\t                    return SecurityListRequestMessageSet;\n\t                })(RequestMessageSet);\n\t                seclist.SecurityListRequestMessageSet = SecurityListRequestMessageSet;\n\t                Aggregate_add(SecurityListRequestMessageSet, \"SECLISTMSGSRQV1\");\n\t                ChildAggregate_add(SecurityListRequestMessageSet, { order: 0, type: seclist.SecurityListRequestTransaction, read: SecurityListRequestMessageSet.prototype.getSecurityListRequest, write: SecurityListRequestMessageSet.prototype.setSecurityListRequest });\n\t            })(seclist = data.seclist || (data.seclist = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../TransactionWrappedResponseMessage'/>\n\t///<reference path='SecurityListResponse'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var seclist;\n\t            (function (seclist) {\n\t                var TransactionWrappedResponseMessage = ofx4js.domain.data.TransactionWrappedResponseMessage;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                /**\n\t                 * Security list transaction response.\n\t                 * @see \"Section 13.8.3.1, OFX Spec\"\n\t                 *\n\t                 * @author Jon Perlow\n\t                 */\n\t                var SecurityListResponseTransaction = (function (_super) {\n\t                    __extends(SecurityListResponseTransaction, _super);\n\t                    function SecurityListResponseTransaction() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    /**\n\t                     * The message.\n\t                     *\n\t                     * @return The message.\n\t                     */\n\t                    SecurityListResponseTransaction.prototype.getMessage = function () {\n\t                        return this.message;\n\t                    };\n\t                    /**\n\t                     * The message.\n\t                     *\n\t                     * @param message The message.\n\t                     */\n\t                    SecurityListResponseTransaction.prototype.setMessage = function (message) {\n\t                        this.message = message;\n\t                    };\n\t                    // Inherited.\n\t                    SecurityListResponseTransaction.prototype.getWrappedMessage = function () {\n\t                        return this.getMessage();\n\t                    };\n\t                    return SecurityListResponseTransaction;\n\t                })(TransactionWrappedResponseMessage);\n\t                seclist.SecurityListResponseTransaction = SecurityListResponseTransaction;\n\t                Aggregate_add(SecurityListResponseTransaction, \"SECLISTTRNRS\");\n\t                ChildAggregate_add(SecurityListResponseTransaction, { required: true, order: 30, type: seclist.SecurityListResponse, read: SecurityListResponseTransaction.prototype.getMessage, write: SecurityListResponseTransaction.prototype.setMessage });\n\t            })(seclist = data.seclist || (data.seclist = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../MessageSetType'/>\n\t///<reference path='../ResponseMessage'/>\n\t///<reference path='../ResponseMessageSet'/>\n\t///<reference path='SecurityList'/>\n\t///<reference path='SecurityListResponseTransaction'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var seclist;\n\t            (function (seclist) {\n\t                var MessageSetType = ofx4js.domain.data.MessageSetType;\n\t                var ResponseMessageSet = ofx4js.domain.data.ResponseMessageSet;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                /**\n\t                 * @author Jon Perlow\n\t                 */\n\t                var SecurityListResponseMessageSet = (function (_super) {\n\t                    __extends(SecurityListResponseMessageSet, _super);\n\t                    function SecurityListResponseMessageSet() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    SecurityListResponseMessageSet.prototype.getType = function () {\n\t                        return MessageSetType.investment_security;\n\t                    };\n\t                    /**\n\t                     * The security list response list transaction.\n\t                     *\n\t                     * Most OFX files have a single security response.\n\t                     *\n\t                     * @return The security list response list.\n\t                     */\n\t                    SecurityListResponseMessageSet.prototype.getSecurityListResponse = function () {\n\t                        return this.securityListResponse;\n\t                    };\n\t                    /**\n\t                     * The security list response.\n\t                     *\n\t                     * @param securityListResponse The security list response.\n\t                     */\n\t                    SecurityListResponseMessageSet.prototype.setSecurityListResponse = function (securityListResponse) {\n\t                        this.securityListResponse = securityListResponse;\n\t                    };\n\t                    SecurityListResponseMessageSet.prototype.getSecurityList = function () {\n\t                        return this.securityList;\n\t                    };\n\t                    SecurityListResponseMessageSet.prototype.setSecurityList = function (securityList) {\n\t                        this.securityList = securityList;\n\t                    };\n\t                    // Inherited.\n\t                    SecurityListResponseMessageSet.prototype.getResponseMessages = function () {\n\t                        var ret = new Array();\n\t                        ret.push(this.securityListResponse);\n\t                        return ret;\n\t                    };\n\t                    return SecurityListResponseMessageSet;\n\t                })(ResponseMessageSet);\n\t                seclist.SecurityListResponseMessageSet = SecurityListResponseMessageSet;\n\t                Aggregate_add(SecurityListResponseMessageSet, \"SECLISTMSGSRSV1\");\n\t                ChildAggregate_add(SecurityListResponseMessageSet, { order: 0, type: seclist.SecurityListResponseTransaction, read: SecurityListResponseMessageSet.prototype.getSecurityListResponse, write: SecurityListResponseMessageSet.prototype.setSecurityListResponse });\n\t                ChildAggregate_add(SecurityListResponseMessageSet, { order: 10, type: seclist.SecurityList, read: SecurityListResponseMessageSet.prototype.getSecurityList, write: SecurityListResponseMessageSet.prototype.setSecurityList });\n\t            })(seclist = data.seclist || (data.seclist = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../OFXException'/>\n\t///<reference path='../../client/InvestmentAccount'/>\n\t///<reference path='../../domain/data/RequestEnvelope'/>\n\t///<reference path='../../domain/data/ResponseEnvelope'/>\n\t///<reference path='../../domain/data/common/StatementRange'/>\n\t///<reference path='../../domain/data/common/StatementRequest'/>\n\t///<reference path='../../domain/data/investment/statements/InvestmentStatementRequest'/>\n\t///<reference path='../../domain/data/investment/statements/InvestmentStatementRequestMessageSet'/>\n\t///<reference path='../../domain/data/investment/statements/InvestmentStatementResponse'/>\n\t///<reference path='../../domain/data/investment/statements/InvestmentStatementRequestTransaction'/>\n\t///<reference path='../../domain/data/investment/statements/InvestmentStatementResponseMessageSet'/>\n\t///<reference path='../../domain/data/investment/statements/IncludePosition'/>\n\t///<reference path='../../domain/data/seclist/SecurityListRequestTransaction'/>\n\t///<reference path='../../domain/data/seclist/SecurityRequest'/>\n\t///<reference path='../../domain/data/seclist/SecurityListRequestMessageSet'/>\n\t///<reference path='../../domain/data/seclist/SecurityListResponseMessageSet'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var client;\n\t    (function (client) {\n\t        var impl;\n\t        (function (impl) {\n\t            var OFXException = ofx4js.OFXException;\n\t            var StatementRange = ofx4js.domain.data.common.StatementRange;\n\t            // import .* = ofx4js.domain.data.seclist.*;\n\t            // import .* = ofx4js.domain.data.investment.statements.*;\n\t            var IncludePosition = ofx4js.domain.data.investment.statements.IncludePosition;\n\t            var InvestmentStatementRequest = ofx4js.domain.data.investment.statements.InvestmentStatementRequest;\n\t            var InvestmentStatementRequestMessageSet = ofx4js.domain.data.investment.statements.InvestmentStatementRequestMessageSet;\n\t            var InvestmentStatementRequestTransaction = ofx4js.domain.data.investment.statements.InvestmentStatementRequestTransaction;\n\t            var MessageSetType = ofx4js.domain.data.MessageSetType;\n\t            var SecurityListRequestTransaction = ofx4js.domain.data.seclist.SecurityListRequestTransaction;\n\t            var SecurityListRequest = ofx4js.domain.data.seclist.SecurityListRequest;\n\t            var SecurityListRequestMessageSet = ofx4js.domain.data.seclist.SecurityListRequestMessageSet;\n\t            /**\n\t             * @author Jon Perlow\n\t             */\n\t            var InvestmentAccountImpl = (function () {\n\t                function InvestmentAccountImpl(details, username, password, institution) {\n\t                    this.details = details;\n\t                    this.username = username;\n\t                    this.password = password;\n\t                    this.institution = institution;\n\t                }\n\t                InvestmentAccountImpl.prototype.readStatement = function (start, end) {\n\t                    var _this = this;\n\t                    var range = new StatementRange();\n\t                    range.setIncludeTransactions(true);\n\t                    range.setStart(start);\n\t                    range.setEnd(end);\n\t                    var request = this.institution.createAuthenticatedRequest(this.username, this.password);\n\t                    var requestTransaction = new InvestmentStatementRequestTransaction();\n\t                    requestTransaction.setWrappedMessage(this.createStatementRequest(this.getDetails(), range));\n\t                    request.getMessageSets().insert(this.createStatementRequestMessageSet(requestTransaction));\n\t                    return this.institution.sendRequest(request)\n\t                        .then(function (response) {\n\t                        _this.institution.doGeneralValidationChecks(request, response);\n\t                        return _this.unwrapStatementResponse(response);\n\t                    });\n\t                };\n\t                InvestmentAccountImpl.prototype.readSecurityList = function (securities) {\n\t                    var _this = this;\n\t                    var request = this.institution.createAuthenticatedRequest(this.username, this.password);\n\t                    var requestTransaction = new SecurityListRequestTransaction();\n\t                    requestTransaction.setWrappedMessage(this.createSecurityListRequest(securities));\n\t                    request.getMessageSets().insert(this.createSecurityListRequestMessageSet(requestTransaction));\n\t                    return this.institution.sendRequest(request)\n\t                        .then(function (response) {\n\t                        _this.institution.doGeneralValidationChecks(request, response);\n\t                        return _this.unwrapSecurityList(response);\n\t                    });\n\t                };\n\t                /**\n\t                 * The details of this account.\n\t                 *\n\t                 * @return The details of this account.\n\t                 */\n\t                InvestmentAccountImpl.prototype.getDetails = function () {\n\t                    return this.details;\n\t                };\n\t                InvestmentAccountImpl.prototype.unwrapStatementResponse = function (response) {\n\t                    var investmentStatementSet = response.getMessageSet(MessageSetType.investment);\n\t                    if (investmentStatementSet == null) {\n\t                        throw new OFXException(\"No investment response message set.\");\n\t                    }\n\t                    var statementTransactionResponse = investmentStatementSet.getStatementResponse();\n\t                    if (statementTransactionResponse == null) {\n\t                        throw new OFXException(\"No investment statement response transaction.\");\n\t                    }\n\t                    var statement = statementTransactionResponse.getMessage();\n\t                    if (statement == null) {\n\t                        throw new OFXException(\"No investment statement in the transaction.\");\n\t                    }\n\t                    // See if there's a security list -- often sent back with an account statement by servers.\n\t                    var securityListMessageSet = response.getMessageSet(MessageSetType.investment_security);\n\t                    if (securityListMessageSet != null) {\n\t                        statement.setSecurityList(securityListMessageSet.getSecurityList());\n\t                    }\n\t                    return statement;\n\t                };\n\t                InvestmentAccountImpl.prototype.createStatementRequestMessageSet = function (transaction) {\n\t                    var investmentStatementRequest = new InvestmentStatementRequestMessageSet();\n\t                    investmentStatementRequest.setStatementRequest(transaction);\n\t                    return investmentStatementRequest;\n\t                };\n\t                InvestmentAccountImpl.prototype.createStatementRequest = function (details, range) {\n\t                    var investRequest = new InvestmentStatementRequest();\n\t                    investRequest.setAccount(details);\n\t                    investRequest.setStatementRange(range);\n\t                    investRequest.setIncludePosition(new IncludePosition());\n\t                    return investRequest;\n\t                };\n\t                InvestmentAccountImpl.prototype.createSecurityListRequestMessageSet = function (transaction) {\n\t                    var securityListRequest = new SecurityListRequestMessageSet();\n\t                    securityListRequest.setSecurityListRequest(transaction);\n\t                    return securityListRequest;\n\t                };\n\t                InvestmentAccountImpl.prototype.createSecurityListRequest = function (securities) {\n\t                    var securityListRequest = new SecurityListRequest();\n\t                    securityListRequest.setSecurityRequests(securities);\n\t                    return securityListRequest;\n\t                };\n\t                InvestmentAccountImpl.prototype.unwrapSecurityList = function (response) {\n\t                    var securityListSet = response.getMessageSet(MessageSetType.investment_security);\n\t                    if (securityListSet == null) {\n\t                        throw new OFXException(\"No security list response message set.\");\n\t                    }\n\t                    var securityList = securityListSet.getSecurityList();\n\t                    if (securityList == null) {\n\t                        throw new OFXException(\"No security list response transaction.\");\n\t                    }\n\t                    return securityList;\n\t                };\n\t                return InvestmentAccountImpl;\n\t            })();\n\t            impl.InvestmentAccountImpl = InvestmentAccountImpl;\n\t        })(impl = client.impl || (client.impl = {}));\n\t    })(client = ofx4js.client || (ofx4js.client = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../collections/SortedSet'/>\n\t///<reference path='../../OFXException'/>\n\t///<reference path='../../OFXStatusException'/>\n\t///<reference path='../../client/NoOFXResponseException'/>\n\t///<reference path='../../UnsupportedOFXSecurityTypeException'/>\n\t///<reference path='../../OFXTransactionException'/>\n\t///<reference path='../context/OFXApplicationContextHolder'/>\n\t///<reference path='../../domain/data/signon/SignonRequest'/>\n\t///<reference path='../../domain/data/signon/SignonRequestMessageSet'/>\n\t///<reference path='../../domain/data/signup/SignupRequestMessageSet'/>\n\t///<reference path='../../domain/data/signup/SignupResponseMessageSet'/>\n\t///<reference path='../../domain/data/common/StatusHolder'/>\n\t///<reference path='../../domain/data/profile/ProfileRequestMessageSet'/>\n\t///<reference path='../../domain/data/profile/ProfileRequestTransaction'/>\n\t///<reference path='../../domain/data/profile/ProfileResponse'/>\n\t///<reference path='../../domain/data/profile/ProfileResponseMessageSet'/>\n\t///<reference path='../../domain/data/profile/ProfileResponseTransaction'/>\n\t///<reference path='../../domain/data/signup/AccountProfile'/>\n\t///<reference path='../../domain/data/signup/AccountInfoRequest'/>\n\t///<reference path='../../domain/data/signup/AccountInfoResponse'/>\n\t///<reference path='../../domain/data/ApplicationSecurity'/>\n\t///<reference path='../../domain/data/RequestEnvelope'/>\n\t///<reference path='../../domain/data/RequestMessageSet'/>\n\t///<reference path='../../domain/data/ResponseMessageSet'/>\n\t///<reference path='../net/OFXConnection'/>\n\t///<reference path='../net/OFXConnectionException'/>\n\t///<reference path='../BankAccount'/>\n\t///<reference path='../FinancialInstitution'/>\n\t///<reference path='BankingAccountImpl'/>\n\t///<reference path='InvestmentAccountImpl'/>\n\t///<reference path='../../collections/collections'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var client;\n\t    (function (client) {\n\t        var impl;\n\t        (function (impl) {\n\t            var SortedSet = ofx4js.collections.SortedSet;\n\t            var OFXException = ofx4js.OFXException;\n\t            var OFXStatusException = ofx4js.OFXStatusException;\n\t            var UnsupportedOFXSecurityTypeException = ofx4js.UnsupportedOFXSecurityTypeException;\n\t            var OFXTransactionException = ofx4js.OFXTransactionException;\n\t            var NoOFXResponseException = ofx4js.client.NoOFXResponseException;\n\t            //import client.* = ofx4js.client.*;\n\t            var OFXApplicationContextHolder = ofx4js.client.context.OFXApplicationContextHolder;\n\t            //import data.* = ofx4js.domain.data.*;\n\t            var MessageSetType = ofx4js.domain.data.MessageSetType;\n\t            var RequestMessageSet = ofx4js.domain.data.RequestMessageSet;\n\t            var TransactionWrappedRequestMessage = ofx4js.domain.data.TransactionWrappedRequestMessage;\n\t            var TransactionWrappedResponseMessage = ofx4js.domain.data.TransactionWrappedResponseMessage;\n\t            var AccountInfoRequest = ofx4js.domain.data.signup.AccountInfoRequest;\n\t            var AccountInfoRequestTransaction = ofx4js.domain.data.signup.AccountInfoRequestTransaction;\n\t            var ApplicationSecurity = ofx4js.domain.data.ApplicationSecurity;\n\t            var RequestEnvelope = ofx4js.domain.data.RequestEnvelope;\n\t            var ProfileRequest = ofx4js.domain.data.profile.ProfileRequest;\n\t            var ProfileRequestMessageSet = ofx4js.domain.data.profile.ProfileRequestMessageSet;\n\t            var ProfileRequestTransaction = ofx4js.domain.data.profile.ProfileRequestTransaction;\n\t            var KnownCode = ofx4js.domain.data.common.KnownCode;\n\t            var instanceof_StatusHolder = ofx4js.domain.data.common.instanceof_StatusHolder;\n\t            var SignonRequest = ofx4js.domain.data.signon.SignonRequest;\n\t            //import profile.* = ofx4js.domain.data.signon.SignonRequest;\n\t            var SignonRequestMessageSet = ofx4js.domain.data.signon.SignonRequestMessageSet;\n\t            var SignupRequestMessageSet = ofx4js.domain.data.signup.SignupRequestMessageSet;\n\t            //import java.net.URL;\n\t            /**\n\t             * Base implementation for the financial institution.\n\t             *\n\t             * @author Ryan Heaton\n\t             */\n\t            var FinancialInstitutionImpl = (function () {\n\t                function FinancialInstitutionImpl(data, connection) {\n\t                    if (data == null) {\n\t                        throw new OFXException(\"Data cannot be null\");\n\t                    }\n\t                    if (connection == null) {\n\t                        throw new OFXException(\"An OFX connection must be supplied\");\n\t                    }\n\t                    this.data = data;\n\t                    this.connection = connection;\n\t                }\n\t                // Inherited.\n\t                FinancialInstitutionImpl.prototype.readProfile = function () {\n\t                    var _this = this;\n\t                    var request = this.createAuthenticatedRequest(SignonRequest.ANONYMOUS_USER, SignonRequest.ANONYMOUS_USER);\n\t                    var profileRequest = new ProfileRequestMessageSet();\n\t                    profileRequest.setProfileRequest(this.createProfileTransaction());\n\t                    request.getMessageSets().insert(profileRequest);\n\t                    return this.sendRequest(request, this.getData().getOFXURL())\n\t                        .then(function (response) {\n\t                        _this.doGeneralValidationChecks(request, response);\n\t                        return _this.getProfile(response);\n\t                    });\n\t                };\n\t                // Inherited.\n\t                FinancialInstitutionImpl.prototype.readAccountProfiles = function (username, password) {\n\t                    var _this = this;\n\t                    var request = this.createAuthenticatedRequest(username, password);\n\t                    var signupRequest = new SignupRequestMessageSet();\n\t                    signupRequest.setAccountInfoRequest(this.createAccountInfoTransaction());\n\t                    request.getMessageSets().insert(signupRequest);\n\t                    return this.sendRequest(request, this.getData().getOFXURL())\n\t                        .then(function (response) {\n\t                        _this.doGeneralValidationChecks(request, response);\n\t                        return _this.getAccountProfiles(response);\n\t                    });\n\t                };\n\t                // Inherited.\n\t                FinancialInstitutionImpl.prototype.loadBankAccount = function (details, username, password) {\n\t                    return new impl.BankingAccountImpl(details, username, password, this);\n\t                };\n\t                // Inherited.\n\t                FinancialInstitutionImpl.prototype.loadCreditCardAccount = function (details, username, password) {\n\t                    return new impl.CreditCardAccountImpl(details, username, password, this);\n\t                };\n\t                // Inherited\n\t                FinancialInstitutionImpl.prototype.loadInvestmentAccount = function (details, username, password) {\n\t                    return new impl.InvestmentAccountImpl(details, username, password, this);\n\t                };\n\t                /**\n\t                 * Create an authenticated request envelope.\n\t                 *\n\t                 * @param username The username.\n\t                 * @param password The password.\n\t                 * @return The request envelope.\n\t                 */\n\t                FinancialInstitutionImpl.prototype.createAuthenticatedRequest = function (username, password) {\n\t                    var request = new RequestEnvelope();\n\t                    var messageSets = new SortedSet(RequestMessageSet.contentCompare);\n\t                    var signonRequest = new SignonRequestMessageSet();\n\t                    signonRequest.setSignonRequest(this.createSignonRequest(username, password));\n\t                    messageSets.insert(signonRequest);\n\t                    request.setMessageSets(messageSets);\n\t                    return request;\n\t                };\n\t                //  /**\n\t                //   * Send a request.\n\t                //   *\n\t                //   * @param request The request.\n\t                //   * @return The request.\n\t                //   */\n\t                //  protected sendRequest(request: RequestEnvelope) /*throws OFXConnectionException*/: ResponseEnvelope {\n\t                //    return this.getConnection().sendRequest(request, getData().getOFXURL());\n\t                //  }\n\t                /**\n\t                 * Send a request to a specific URL.\n\t                 *\n\t                 * @param request The request.\n\t                 * @param url The url.\n\t                 * @return The request.\n\t                 */\n\t                FinancialInstitutionImpl.prototype.sendRequest = function (request, url) {\n\t                    if (url === void 0) { url = this.getData().getOFXURL(); }\n\t                    return this.getConnection().sendRequest(request, url);\n\t                };\n\t                /**\n\t                 * Open the specified response envelope and look for the profile.\n\t                 *\n\t                 * @param response The response envelope.\n\t                 * @return The profile.\n\t                 */\n\t                FinancialInstitutionImpl.prototype.getProfile = function (response) {\n\t                    var profileSet = response.getMessageSet(MessageSetType.profile);\n\t                    if (profileSet == null) {\n\t                        throw new OFXException(\"No profile response set.\");\n\t                    }\n\t                    var transactionResponse = profileSet.getProfileResponse();\n\t                    if (transactionResponse == null) {\n\t                        throw new OFXException(\"No profile transaction wrapper.\");\n\t                    }\n\t                    var message = transactionResponse.getMessage();\n\t                    if (message == null) {\n\t                        throw new OFXException(\"No profile message.\");\n\t                    }\n\t                    return message;\n\t                };\n\t                /**\n\t                 * General validation checks on the specified response.\n\t                 *\n\t                 * @param request The request.\n\t                 * @param response Their response.\n\t                 * @throws OFXException Upon invalid response.\n\t                 */\n\t                FinancialInstitutionImpl.prototype.doGeneralValidationChecks = function (request, response) {\n\t                    if (response.getSecurity() != ApplicationSecurity.NONE) {\n\t                        throw new UnsupportedOFXSecurityTypeException(\"Unable to participate in \" + response.getSecurity() + \" security.\");\n\t                    }\n\t                    if (request.getUID() !== response.getUID()) {\n\t                        throw new OFXException(\"Invalid transaction ID '\" + response.getUID() + \"' in response.  Expected: \" + request);\n\t                    }\n\t                    for (var _i = 0, _a = request.getMessageSets().values(); _i < _a.length; _i++) {\n\t                        var requestSet = _a[_i];\n\t                        var responseSet = response.getMessageSet(requestSet.getType());\n\t                        if (responseSet == null) {\n\t                            throw new NoOFXResponseException(\"No response for the \" + requestSet.getType() + \" request.\");\n\t                        }\n\t                        if (responseSet.getType() == MessageSetType.signon) {\n\t                            var signonResponse = responseSet.getSignonResponse();\n\t                            if (signonResponse == null) {\n\t                                throw new NoOFXResponseException(\"No signon response.\");\n\t                            }\n\t                        }\n\t                        var transactionIds = {};\n\t                        for (var _b = 0, _c = requestSet.getRequestMessages(); _b < _c.length; _b++) {\n\t                            var requestMessage = _c[_b];\n\t                            if (requestMessage instanceof TransactionWrappedRequestMessage) {\n\t                                transactionIds[requestMessage.getUID()] = true;\n\t                            }\n\t                        }\n\t                        for (var _d = 0, _e = responseSet.getResponseMessages(); _d < _e.length; _d++) {\n\t                            var responseMessage = _e[_d];\n\t                            if (instanceof_StatusHolder(responseMessage)) {\n\t                                this.validateStatus(responseMessage);\n\t                            }\n\t                            if (responseMessage instanceof TransactionWrappedResponseMessage) {\n\t                                var uid = responseMessage.getUID();\n\t                                if (uid == null) {\n\t                                    throw new OFXTransactionException(\"Invalid response transaction: no UID.\");\n\t                                }\n\t                                else if (!(uid in transactionIds)) {\n\t                                    throw new OFXTransactionException(\"Response to an unknown transaction: \" + uid + \".\");\n\t                                }\n\t                                else {\n\t                                    delete transactionIds[uid];\n\t                                }\n\t                            }\n\t                        }\n\t                        if (Object.keys(transactionIds).length != 0) {\n\t                            throw new OFXTransactionException(\"No response to the following transactions: \" + transactionIds);\n\t                        }\n\t                    }\n\t                };\n\t                /**\n\t                 * Validate the status of the given status holder.\n\t                 *\n\t                 * @param statusHolder The status holder.\n\t                 */\n\t                FinancialInstitutionImpl.prototype.validateStatus = function (statusHolder) {\n\t                    var status = statusHolder.getStatus();\n\t                    if (status == null) {\n\t                        throw new OFXException(\"Invalid OFX response: no status returned in the \" + statusHolder.getStatusHolderName() + \" response.\");\n\t                    }\n\t                    if (KnownCode.SUCCESS != status.getCode()) {\n\t                        var message = status.getMessage();\n\t                        if (message == null) {\n\t                            message = \"No response status code.\";\n\t                            if (status.getCode() != null) {\n\t                                message = status.getCode().getMessage();\n\t                            }\n\t                        }\n\t                        throw new OFXStatusException(status, \"Invalid \" + statusHolder.getStatusHolderName() + \": \" + message);\n\t                    }\n\t                };\n\t                /**\n\t                 * Create a transaction message for a profile request.\n\t                 *\n\t                 * @return The transaction message.\n\t                 */\n\t                FinancialInstitutionImpl.prototype.createProfileTransaction = function () {\n\t                    var profileTx = new ProfileRequestTransaction();\n\t                    profileTx.setMessage(this.createProfileRequest());\n\t                    return profileTx;\n\t                };\n\t                /**\n\t                 * Create a profile request.\n\t                 *\n\t                 * @return The profile request.\n\t                 */\n\t                FinancialInstitutionImpl.prototype.createProfileRequest = function () {\n\t                    var profileRequest = new ProfileRequest();\n\t                    profileRequest.setProfileLastUpdated(new Date(0));\n\t                    return profileRequest;\n\t                };\n\t                /**\n\t                 * Create a sign-on request for the specified user.\n\t                 *\n\t                 * @param username The username.\n\t                 * @param password The password.\n\t                 * @return The signon request.\n\t                 */\n\t                FinancialInstitutionImpl.prototype.createSignonRequest = function (username, password) {\n\t                    var signonRequest = new SignonRequest();\n\t                    signonRequest.setTimestamp(new Date());\n\t                    var fi = new ofx4js.domain.data.signon.FinancialInstitution();\n\t                    fi.setId(this.getData().getFinancialInstitutionId());\n\t                    fi.setOrganization(this.getData().getOrganization());\n\t                    signonRequest.setFinancialInstitution(fi);\n\t                    signonRequest.setUserId(username);\n\t                    signonRequest.setPassword(password);\n\t                    signonRequest.setApplicationId(OFXApplicationContextHolder.getCurrentContext().getAppId());\n\t                    signonRequest.setApplicationVersion(OFXApplicationContextHolder.getCurrentContext().getAppVersion());\n\t                    return signonRequest;\n\t                };\n\t                /**\n\t                 * Create a transaction for an account info request.\n\t                 *\n\t                 * @return The transaction.\n\t                 */\n\t                FinancialInstitutionImpl.prototype.createAccountInfoTransaction = function () {\n\t                    var transaction = new AccountInfoRequestTransaction();\n\t                    transaction.setMessage(this.createAccountInfoRequest());\n\t                    return transaction;\n\t                };\n\t                /**\n\t                 * Create an account info request.\n\t                 *\n\t                 * @return The account info request.\n\t                 */\n\t                FinancialInstitutionImpl.prototype.createAccountInfoRequest = function () {\n\t                    return new AccountInfoRequest();\n\t                };\n\t                /**\n\t                 * Get the account profiles for the specified response envelope.\n\t                 *\n\t                 * @param response The response envelope.\n\t                 * @return The account profiles.\n\t                 */\n\t                FinancialInstitutionImpl.prototype.getAccountProfiles = function (response) {\n\t                    var messageSet = response.getMessageSet(MessageSetType.signup);\n\t                    if (messageSet == null) {\n\t                        throw new OFXException(\"No signup response message set.\");\n\t                    }\n\t                    var transaction = messageSet.getAccountInfoResponse();\n\t                    if (transaction == null) {\n\t                        throw new OFXException(\"No account info transaction in the signup response.\");\n\t                    }\n\t                    var infoResponse = transaction.getMessage();\n\t                    if (infoResponse == null) {\n\t                        throw new OFXException(\"No account info response in the transaction.\");\n\t                    }\n\t                    return infoResponse.getAccounts();\n\t                };\n\t                /**\n\t                 * The connection used by this implementation.\n\t                 *\n\t                 * @return The connection used by this implementation.\n\t                 */\n\t                FinancialInstitutionImpl.prototype.getConnection = function () {\n\t                    return this.connection;\n\t                };\n\t                /**\n\t                 * The financial institution data.\n\t                 *\n\t                 * @return The financial institution data.\n\t                 */\n\t                FinancialInstitutionImpl.prototype.getData = function () {\n\t                    return this.data;\n\t                };\n\t                return FinancialInstitutionImpl;\n\t            })();\n\t            impl.FinancialInstitutionImpl = FinancialInstitutionImpl;\n\t        })(impl = client.impl || (client.impl = {}));\n\t    })(client = ofx4js.client || (ofx4js.client = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../domain/data/common/StatementResponse'/>\n\t///<reference path='../../domain/data/common/StatementRequest'/>\n\t///<reference path='../../domain/data/banking/BankingResponseMessageSet'/>\n\t///<reference path='../../domain/data/banking/BankStatementRequest'/>\n\t///<reference path='../../domain/data/banking/BankingRequestMessageSet'/>\n\t///<reference path='../../OFXException'/>\n\t///<reference path='../../client/BankAccount'/>\n\t///<reference path='BaseAccountImpl'/>\n\t///<reference path='FinancialInstitutionImpl'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var client;\n\t    (function (client) {\n\t        var impl;\n\t        (function (impl) {\n\t            var MessageSetType = ofx4js.domain.data.MessageSetType;\n\t            var BankStatementRequest = ofx4js.domain.data.banking.BankStatementRequest;\n\t            var BankingRequestMessageSet = ofx4js.domain.data.banking.BankingRequestMessageSet;\n\t            var BankStatementRequestTransaction = ofx4js.domain.data.banking.BankStatementRequestTransaction;\n\t            var OFXException = ofx4js.OFXException;\n\t            /**\n\t             * @author Ryan Heaton\n\t             */\n\t            var BankingAccountImpl = (function (_super) {\n\t                __extends(BankingAccountImpl, _super);\n\t                function BankingAccountImpl(details, username, password, institution) {\n\t                    _super.call(this, details, username, password, institution);\n\t                }\n\t                BankingAccountImpl.prototype.unwrapStatementResponse = function (response) {\n\t                    var bankingSet = response.getMessageSet(MessageSetType.banking);\n\t                    if (bankingSet == null) {\n\t                        throw new OFXException(\"No banking response message set.\");\n\t                    }\n\t                    var statementTransactionResponse = bankingSet.getStatementResponse();\n\t                    if (statementTransactionResponse == null) {\n\t                        throw new OFXException(\"No banking statement response transaction.\");\n\t                    }\n\t                    var statement = statementTransactionResponse.getMessage();\n\t                    if (statement == null) {\n\t                        throw new OFXException(\"No banking statement in the transaction.\");\n\t                    }\n\t                    return statement;\n\t                };\n\t                BankingAccountImpl.prototype.createRequestMessageSet = function (transaction) {\n\t                    var bankingRequest = new BankingRequestMessageSet();\n\t                    bankingRequest.setStatementRequest(transaction);\n\t                    return bankingRequest;\n\t                };\n\t                BankingAccountImpl.prototype.createTransaction = function () {\n\t                    return new BankStatementRequestTransaction();\n\t                };\n\t                BankingAccountImpl.prototype.createStatementRequest = function (details, range) {\n\t                    var bankRequest = new BankStatementRequest();\n\t                    bankRequest.setAccount(details);\n\t                    bankRequest.setStatementRange(range);\n\t                    return bankRequest;\n\t                };\n\t                return BankingAccountImpl;\n\t            })(impl.BaseAccountImpl);\n\t            impl.BankingAccountImpl = BankingAccountImpl;\n\t        })(impl = client.impl || (client.impl = {}));\n\t    })(client = ofx4js.client || (ofx4js.client = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../client/FinancialInstitutionData'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var client;\n\t    (function (client) {\n\t        var impl;\n\t        (function (impl) {\n\t            //import java.net.URL;\n\t            /**\n\t             * Base bean for FI data.\n\t             *\n\t             * @author Ryan Heaton\n\t             */\n\t            var BaseFinancialInstitutionData = (function () {\n\t                function BaseFinancialInstitutionData(id) {\n\t                    this.id = id;\n\t                }\n\t                BaseFinancialInstitutionData.prototype.getId = function () {\n\t                    return this.id;\n\t                };\n\t                BaseFinancialInstitutionData.prototype.setId = function (id) {\n\t                    this.id = id;\n\t                };\n\t                BaseFinancialInstitutionData.prototype.getFinancialInstitutionId = function () {\n\t                    return this.fid;\n\t                };\n\t                BaseFinancialInstitutionData.prototype.setFinancialInstitutionId = function (id) {\n\t                    this.fid = id;\n\t                };\n\t                BaseFinancialInstitutionData.prototype.getName = function () {\n\t                    return this.name;\n\t                };\n\t                BaseFinancialInstitutionData.prototype.setName = function (name) {\n\t                    this.name = name;\n\t                };\n\t                BaseFinancialInstitutionData.prototype.getOrganization = function () {\n\t                    return this.organization;\n\t                };\n\t                BaseFinancialInstitutionData.prototype.setOrganization = function (organization) {\n\t                    this.organization = organization;\n\t                };\n\t                BaseFinancialInstitutionData.prototype.getOFXURL = function () {\n\t                    return this.ofxUrl;\n\t                };\n\t                BaseFinancialInstitutionData.prototype.setOFXURL = function (OFXURL) {\n\t                    this.ofxUrl = OFXURL;\n\t                };\n\t                BaseFinancialInstitutionData.prototype.getBrokerId = function () {\n\t                    return this.brokerId;\n\t                };\n\t                BaseFinancialInstitutionData.prototype.setBrokerId = function (brokerId) {\n\t                    this.brokerId = brokerId;\n\t                };\n\t                return BaseFinancialInstitutionData;\n\t            })();\n\t            impl.BaseFinancialInstitutionData = BaseFinancialInstitutionData;\n\t        })(impl = client.impl || (client.impl = {}));\n\t    })(client = ofx4js.client || (ofx4js.client = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../common/StatementRequest'/>\n\t///<reference path='CreditCardAccountDetails'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var creditcard;\n\t            (function (creditcard) {\n\t                var StatementRequest = ofx4js.domain.data.common.StatementRequest;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 */\n\t                var CreditCardStatementRequest = (function (_super) {\n\t                    __extends(CreditCardStatementRequest, _super);\n\t                    function CreditCardStatementRequest() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    /**\n\t                     * The account details.\n\t                     *\n\t                     * @return The account details.\n\t                     */\n\t                    CreditCardStatementRequest.prototype.getAccount = function () {\n\t                        return this.account;\n\t                    };\n\t                    /**\n\t                     * The account details.\n\t                     *\n\t                     * @param account The account details.\n\t                     */\n\t                    CreditCardStatementRequest.prototype.setAccount = function (account) {\n\t                        this.account = account;\n\t                    };\n\t                    return CreditCardStatementRequest;\n\t                })(StatementRequest);\n\t                creditcard.CreditCardStatementRequest = CreditCardStatementRequest;\n\t                Aggregate_add(CreditCardStatementRequest, \"CCSTMTRQ\");\n\t                ChildAggregate_add(CreditCardStatementRequest, { name: \"CCACCTFROM\", required: true, order: 0, type: creditcard.CreditCardAccountDetails, read: CreditCardStatementRequest.prototype.getAccount, write: CreditCardStatementRequest.prototype.setAccount });\n\t            })(creditcard = data.creditcard || (data.creditcard = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../TransactionWrappedRequestMessage'/>\n\t///<reference path='CreditCardStatementRequest'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var creditcard;\n\t            (function (creditcard) {\n\t                var TransactionWrappedRequestMessage = ofx4js.domain.data.TransactionWrappedRequestMessage;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 */\n\t                var CreditCardStatementRequestTransaction = (function (_super) {\n\t                    __extends(CreditCardStatementRequestTransaction, _super);\n\t                    function CreditCardStatementRequestTransaction() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    /**\n\t                     * The message.\n\t                     *\n\t                     * @return The message.\n\t                     */\n\t                    CreditCardStatementRequestTransaction.prototype.getMessage = function () {\n\t                        return this.message;\n\t                    };\n\t                    /**\n\t                     * The message.\n\t                     *\n\t                     * @param message The message.\n\t                     *\n\t                     */\n\t                    CreditCardStatementRequestTransaction.prototype.setMessage = function (message) {\n\t                        this.message = message;\n\t                    };\n\t                    // Inherited.\n\t                    CreditCardStatementRequestTransaction.prototype.setWrappedMessage = function (message) {\n\t                        this.setMessage(message);\n\t                    };\n\t                    return CreditCardStatementRequestTransaction;\n\t                })(TransactionWrappedRequestMessage);\n\t                creditcard.CreditCardStatementRequestTransaction = CreditCardStatementRequestTransaction;\n\t                Aggregate_add(CreditCardStatementRequestTransaction, \"CCSTMTTRNRQ\");\n\t                ChildAggregate_add(CreditCardStatementRequestTransaction, { required: true, order: 30, type: creditcard.CreditCardStatementRequest, read: CreditCardStatementRequestTransaction.prototype.getMessage, write: CreditCardStatementRequestTransaction.prototype.setMessage });\n\t            })(creditcard = data.creditcard || (data.creditcard = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../MessageSetType'/>\n\t///<reference path='../RequestMessageSet'/>\n\t///<reference path='CreditCardStatementRequestTransaction'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var creditcard;\n\t            (function (creditcard) {\n\t                var MessageSetType = ofx4js.domain.data.MessageSetType;\n\t                var RequestMessageSet = ofx4js.domain.data.RequestMessageSet;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                //import java.util.List;\n\t                //import java.util.ArrayList;\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 */\n\t                var CreditCardRequestMessageSet = (function (_super) {\n\t                    __extends(CreditCardRequestMessageSet, _super);\n\t                    function CreditCardRequestMessageSet() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    CreditCardRequestMessageSet.prototype.getType = function () {\n\t                        return MessageSetType.creditcard;\n\t                    };\n\t                    /**\n\t                     * The request.\n\t                     *\n\t                     * @return The request.\n\t                     */\n\t                    CreditCardRequestMessageSet.prototype.getStatementRequest = function () {\n\t                        return this.statementRequest;\n\t                    };\n\t                    /**\n\t                     * The request.\n\t                     *\n\t                     * @param statementRequest The request.\n\t                     */\n\t                    CreditCardRequestMessageSet.prototype.setStatementRequest = function (statementRequest) {\n\t                        this.statementRequest = statementRequest;\n\t                    };\n\t                    // Inherited.\n\t                    CreditCardRequestMessageSet.prototype.getRequestMessages = function () {\n\t                        var requestMessages = [];\n\t                        if (this.getStatementRequest() != null) {\n\t                            requestMessages.push(this.getStatementRequest());\n\t                        }\n\t                        return requestMessages;\n\t                    };\n\t                    return CreditCardRequestMessageSet;\n\t                })(RequestMessageSet);\n\t                creditcard.CreditCardRequestMessageSet = CreditCardRequestMessageSet;\n\t                Aggregate_add(CreditCardRequestMessageSet, \"CREDITCARDMSGSRQV1\");\n\t                ChildAggregate_add(CreditCardRequestMessageSet, { order: 0, type: creditcard.CreditCardStatementRequestTransaction, read: CreditCardRequestMessageSet.prototype.getStatementRequest, write: CreditCardRequestMessageSet.prototype.setStatementRequest });\n\t            })(creditcard = data.creditcard || (data.creditcard = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../common/StatementResponse'/>\n\t///<reference path='CreditCardAccountDetails'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var creditcard;\n\t            (function (creditcard) {\n\t                var StatementResponse = ofx4js.domain.data.common.StatementResponse;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 */\n\t                var CreditCardStatementResponse = (function (_super) {\n\t                    __extends(CreditCardStatementResponse, _super);\n\t                    function CreditCardStatementResponse() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    CreditCardStatementResponse.prototype.getResponseMessageName = function () {\n\t                        return \"credit card statement\";\n\t                    };\n\t                    /**\n\t                     * The account for the statement.\n\t                     *\n\t                     * @return The account for the statement.\n\t                     */\n\t                    CreditCardStatementResponse.prototype.getAccount = function () {\n\t                        return this.account;\n\t                    };\n\t                    /**\n\t                     * The account for the statement.\n\t                     *\n\t                     * @param account The account for the statement.\n\t                     */\n\t                    CreditCardStatementResponse.prototype.setAccount = function (account) {\n\t                        this.account = account;\n\t                    };\n\t                    return CreditCardStatementResponse;\n\t                })(StatementResponse);\n\t                creditcard.CreditCardStatementResponse = CreditCardStatementResponse;\n\t                Aggregate_add(CreditCardStatementResponse, \"CCSTMTRS\");\n\t                ChildAggregate_add(CreditCardStatementResponse, { name: \"CCACCTFROM\", order: 10, type: creditcard.CreditCardAccountDetails, read: CreditCardStatementResponse.prototype.getAccount, write: CreditCardStatementResponse.prototype.setAccount });\n\t            })(creditcard = data.creditcard || (data.creditcard = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../TransactionWrappedResponseMessage'/>\n\t///<reference path='CreditCardStatementResponse'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var creditcard;\n\t            (function (creditcard) {\n\t                var TransactionWrappedResponseMessage = ofx4js.domain.data.TransactionWrappedResponseMessage;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 */\n\t                var CreditCardStatementResponseTransaction = (function (_super) {\n\t                    __extends(CreditCardStatementResponseTransaction, _super);\n\t                    function CreditCardStatementResponseTransaction() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    /**\n\t                     * The message.\n\t                     *\n\t                     * @return The message.\n\t                     */\n\t                    CreditCardStatementResponseTransaction.prototype.getMessage = function () {\n\t                        return this.message;\n\t                    };\n\t                    /**\n\t                     * The message.\n\t                     *\n\t                     * @param message The message.\n\t                     */\n\t                    CreditCardStatementResponseTransaction.prototype.setMessage = function (message) {\n\t                        this.message = message;\n\t                    };\n\t                    // Inherited.\n\t                    CreditCardStatementResponseTransaction.prototype.getWrappedMessage = function () {\n\t                        return this.getMessage();\n\t                    };\n\t                    return CreditCardStatementResponseTransaction;\n\t                })(TransactionWrappedResponseMessage);\n\t                creditcard.CreditCardStatementResponseTransaction = CreditCardStatementResponseTransaction;\n\t                Aggregate_add(CreditCardStatementResponseTransaction, \"CCSTMTTRNRS\");\n\t                ChildAggregate_add(CreditCardStatementResponseTransaction, { required: true, order: 30, type: creditcard.CreditCardStatementResponse, read: CreditCardStatementResponseTransaction.prototype.getMessage, write: CreditCardStatementResponseTransaction.prototype.setMessage });\n\t            })(creditcard = data.creditcard || (data.creditcard = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../MessageSetType'/>\n\t///<reference path='../ResponseMessage'/>\n\t///<reference path='../ResponseMessageSet'/>\n\t///<reference path='CreditCardStatementResponseTransaction'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var creditcard;\n\t            (function (creditcard) {\n\t                var MessageSetType = ofx4js.domain.data.MessageSetType;\n\t                var ResponseMessageSet = ofx4js.domain.data.ResponseMessageSet;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 */\n\t                var CreditCardResponseMessageSet = (function (_super) {\n\t                    __extends(CreditCardResponseMessageSet, _super);\n\t                    function CreditCardResponseMessageSet() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    CreditCardResponseMessageSet.prototype.getType = function () {\n\t                        return MessageSetType.creditcard;\n\t                    };\n\t                    /**\n\t                     * The statement response list.\n\t                     *\n\t                     * Most OFX files have a single statement response, except MT2OFX\n\t                     * which outputs OFX with multiple statement responses\n\t                     * in a single banking response message set.\n\t                     *\n\t                     * @return The statement response list.\n\t                     */\n\t                    CreditCardResponseMessageSet.prototype.getStatementResponses = function () {\n\t                        return this.statementResponses;\n\t                    };\n\t                    /**\n\t                     * The statement reponse list.\n\t                     *\n\t                     * @param statementResponses The statement response list.\n\t                     */\n\t                    CreditCardResponseMessageSet.prototype.setStatementResponses = function (statementResponses) {\n\t                        this.statementResponses = statementResponses;\n\t                    };\n\t                    /**\n\t                     * The first statement response.\n\t                     *\n\t                     * @return the first bank statement response.\n\t                     * @deprecated Use getStatementResponses() because sometimes there are multiple responses\n\t                     */\n\t                    CreditCardResponseMessageSet.prototype.getStatementResponse = function () {\n\t                        return this.statementResponses == null || this.statementResponses.length == 0 ? null : this.statementResponses[0];\n\t                    };\n\t                    /**\n\t                     * The statement response.\n\t                     *\n\t                     * @param statementResponse The statement response.\n\t                     */\n\t                    CreditCardResponseMessageSet.prototype.setStatementResponse = function (statementResponse) {\n\t                        this.statementResponses = [statementResponse];\n\t                    };\n\t                    // Inherited.\n\t                    CreditCardResponseMessageSet.prototype.getResponseMessages = function () {\n\t                        return this.statementResponses;\n\t                    };\n\t                    return CreditCardResponseMessageSet;\n\t                })(ResponseMessageSet);\n\t                creditcard.CreditCardResponseMessageSet = CreditCardResponseMessageSet;\n\t                Aggregate_add(CreditCardResponseMessageSet, \"CREDITCARDMSGSRSV1\");\n\t                ChildAggregate_add(CreditCardResponseMessageSet, { order: 0, type: Array, collectionEntryType: creditcard.CreditCardStatementResponseTransaction, read: CreditCardResponseMessageSet.prototype.getStatementResponses, write: CreditCardResponseMessageSet.prototype.setStatementResponses });\n\t            })(creditcard = data.creditcard || (data.creditcard = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../domain/data/common/StatementResponse'/>\n\t///<reference path='../../domain/data/common/StatementRequest'/>\n\t///<reference path='../../domain/data/common/StatementRange'/>\n\t///<reference path='../../domain/data/ResponseEnvelope'/>\n\t///<reference path='../../domain/data/creditcard/CreditCardStatementRequest'/>\n\t///<reference path='../../domain/data/creditcard/CreditCardRequestMessageSet'/>\n\t///<reference path='../../domain/data/creditcard/CreditCardResponseMessageSet'/>\n\t///<reference path='../../domain/data/creditcard/CreditCardStatementResponse'/>\n\t///<reference path='../../OFXException'/>\n\t///<reference path='../CreditCardAccount'/>\n\t///<reference path='BaseAccountImpl'/>\n\t///<reference path='FinancialInstitutionImpl'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var client;\n\t    (function (client) {\n\t        var impl;\n\t        (function (impl) {\n\t            var MessageSetType = ofx4js.domain.data.MessageSetType;\n\t            var CreditCardRequestMessageSet = ofx4js.domain.data.creditcard.CreditCardRequestMessageSet;\n\t            var CreditCardStatementRequest = ofx4js.domain.data.creditcard.CreditCardStatementRequest;\n\t            var CreditCardStatementRequestTransaction = ofx4js.domain.data.creditcard.CreditCardStatementRequestTransaction;\n\t            var OFXException = ofx4js.OFXException;\n\t            /**\n\t             * @author Ryan Heaton\n\t             */\n\t            var CreditCardAccountImpl = (function (_super) {\n\t                __extends(CreditCardAccountImpl, _super);\n\t                function CreditCardAccountImpl(details, username, password, institution) {\n\t                    _super.call(this, details, username, password, institution);\n\t                }\n\t                CreditCardAccountImpl.prototype.unwrapStatementResponse = function (response) {\n\t                    var creditCardSet = response.getMessageSet(MessageSetType.creditcard);\n\t                    if (creditCardSet == null) {\n\t                        throw new OFXException(\"No credit card response message set.\");\n\t                    }\n\t                    var statementTransactionResponse = creditCardSet.getStatementResponse();\n\t                    if (statementTransactionResponse == null) {\n\t                        throw new OFXException(\"No credit card statement response transaction.\");\n\t                    }\n\t                    var statement = statementTransactionResponse.getMessage();\n\t                    if (statement == null) {\n\t                        throw new OFXException(\"No credit card statement in the transaction.\");\n\t                    }\n\t                    return statement;\n\t                };\n\t                CreditCardAccountImpl.prototype.createRequestMessageSet = function (transaction) {\n\t                    var creditCardRequest = new CreditCardRequestMessageSet();\n\t                    creditCardRequest.setStatementRequest(transaction);\n\t                    return creditCardRequest;\n\t                };\n\t                CreditCardAccountImpl.prototype.createTransaction = function () {\n\t                    return new CreditCardStatementRequestTransaction();\n\t                };\n\t                CreditCardAccountImpl.prototype.createStatementRequest = function (details, range) {\n\t                    var bankRequest = new CreditCardStatementRequest();\n\t                    bankRequest.setAccount(details);\n\t                    bankRequest.setStatementRange(range);\n\t                    return bankRequest;\n\t                };\n\t                return CreditCardAccountImpl;\n\t            })(impl.BaseAccountImpl);\n\t            impl.CreditCardAccountImpl = CreditCardAccountImpl;\n\t        })(impl = client.impl || (client.impl = {}));\n\t    })(client = ofx4js.client || (ofx4js.client = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='OFXConnectionException'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var client;\n\t    (function (client) {\n\t        var net;\n\t        (function (net) {\n\t            /**\n\t             * @author Ryan Heaton\n\t             */\n\t            var OFXServerException = (function (_super) {\n\t                __extends(OFXServerException, _super);\n\t                function OFXServerException(message, httpCode) {\n\t                    _super.call(this, message);\n\t                    this.httpCode = httpCode;\n\t                }\n\t                OFXServerException.prototype.getHttpCode = function () {\n\t                    return this.httpCode;\n\t                };\n\t                return OFXServerException;\n\t            })(net.OFXConnectionException);\n\t            net.OFXServerException = OFXServerException;\n\t        })(net = client.net || (client.net = {}));\n\t    })(client = ofx4js.client || (ofx4js.client = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../OFXException'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var io;\n\t    (function (io) {\n\t        /**\n\t         * @author Ryan Heaton\n\t         */\n\t        var OFXParseException = (function (_super) {\n\t            __extends(OFXParseException, _super);\n\t            function OFXParseException(message) {\n\t                _super.call(this, message);\n\t            }\n\t            return OFXParseException;\n\t        })(ofx4js.OFXException);\n\t        io.OFXParseException = OFXParseException;\n\t    })(io = ofx4js.io || (ofx4js.io = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../collections/collections'/>\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='StatusCode'/>\n\t///<reference path='Status'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var common;\n\t            (function (common) {\n\t                /**\n\t                 * Holder for an unknown status code.\n\t                 *\n\t                 * @author Ryan Heaton\n\t                 */\n\t                var UnknownStatusCode = (function (_super) {\n\t                    __extends(UnknownStatusCode, _super);\n\t                    function UnknownStatusCode(code, message, defaultSeverity) {\n\t                        _super.call(this);\n\t                        this.code = code;\n\t                        this.message = message;\n\t                        this.defaultSeverity = defaultSeverity;\n\t                    }\n\t                    UnknownStatusCode.prototype.getCode = function () {\n\t                        return this.code;\n\t                    };\n\t                    UnknownStatusCode.prototype.getMessage = function () {\n\t                        return this.message;\n\t                    };\n\t                    UnknownStatusCode.prototype.getDefaultSeverity = function () {\n\t                        return this.defaultSeverity;\n\t                    };\n\t                    //@Override\n\t                    UnknownStatusCode.prototype.toString = function () {\n\t                        return this.code.toString();\n\t                    };\n\t                    return UnknownStatusCode;\n\t                })(common.StatusCode);\n\t                common.UnknownStatusCode = UnknownStatusCode;\n\t            })(common = data.common || (data.common = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../domain/data/common/Status'/>\n\t///<reference path='../domain/data/common/StatusCode'/>\n\t///<reference path='../domain/data/common/UnknownStatusCode'/>\n\t///<reference path='../meta/PropertyDescriptor'/>\n\t///<reference path='StringConversion'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var io;\n\t    (function (io) {\n\t        var StatusCode = ofx4js.domain.data.common.StatusCode;\n\t        var Severity = ofx4js.domain.data.common.Severity;\n\t        var KnownCode = ofx4js.domain.data.common.KnownCode;\n\t        var UnknownStatusCode = ofx4js.domain.data.common.UnknownStatusCode;\n\t        var isAssignableFrom = ofx4js.meta.isAssignableFrom;\n\t        /**\n\t         * Utility class for conversion to/from OFX strings.\n\t         *\n\t         * @author Ryan Heaton\n\t         */\n\t        var DefaultStringConversion = (function () {\n\t            function DefaultStringConversion() {\n\t            }\n\t            DefaultStringConversion.prototype.toString = function (value) {\n\t                if (!value) {\n\t                    return null;\n\t                }\n\t                else if (typeof value === \"boolean\") {\n\t                    return value ? \"Y\" : \"N\";\n\t                }\n\t                else if (value instanceof Date) {\n\t                    return this.formatDate(value);\n\t                }\n\t                else if (typeof value === \"number\") {\n\t                    return value + \"\";\n\t                }\n\t                else {\n\t                    return value.toString();\n\t                }\n\t            };\n\t            DefaultStringConversion.prototype.fromString = function (clazz, value) {\n\t                if (!value) {\n\t                    return null;\n\t                }\n\t                else if (clazz === StatusCode) {\n\t                    var code = value;\n\t                    var statusCode = KnownCode.fromCode(code);\n\t                    if (!statusCode) {\n\t                        statusCode = new UnknownStatusCode(code, \"Unknown status code.\", Severity.ERROR);\n\t                    }\n\t                    return statusCode;\n\t                }\n\t                else if (isAssignableFrom(Number, clazz)) {\n\t                    return parseFloat(value);\n\t                }\n\t                else if (isAssignableFrom(Boolean, clazz)) {\n\t                    return (\"Y\" === value.toUpperCase());\n\t                }\n\t                else if (isAssignableFrom(Date, clazz)) {\n\t                    return this.parseDate(value);\n\t                }\n\t                else if (typeof clazz === \"object\") {\n\t                    // enum\n\t                    console.assert(value in clazz);\n\t                    if (value in clazz) {\n\t                        return clazz[value];\n\t                    }\n\t                }\n\t                return value;\n\t            };\n\t            /**\n\t             * Parses a date according to OFX.\n\t             *\n\t             * @param value The value of the date.\n\t             * @return The date value.\n\t             */\n\t            DefaultStringConversion.prototype.parseDate = function (value) {\n\t                var year = parseInt(value.substr(0, 4));\n\t                var month = parseInt(value.substr(4, 2)) - 1; // javascript month numbers are zero-based\n\t                var day = parseInt(value.substr(6, 2));\n\t                var hour = parseInt(value.substr(8, 2));\n\t                var minute = parseInt(value.substr(10, 2));\n\t                var second = parseInt(value.substr(12, 2)) || 0;\n\t                var milli = parseInt(value.substr(15, 3)) || 0;\n\t                // add timezone offset\n\t                var bracket = value.indexOf(\"[\");\n\t                if (bracket != -1) {\n\t                    var close = value.indexOf(\":\");\n\t                    if (close === -1) {\n\t                        close = value.indexOf(\"]\");\n\t                    }\n\t                    var gmtOffset = value.substring(bracket + 1, close);\n\t                    hour -= 1.0 * gmtOffset;\n\t                }\n\t                // create date as UTC\n\t                return new Date(Date.UTC(year, month, day, hour, minute, second, milli));\n\t            };\n\t            /**\n\t             * Format the date according to the OFX spec.\n\t             *\n\t             * @param date The date.\n\t             * @return The date format.\n\t             */\n\t            DefaultStringConversion.prototype.formatDate = function (date) {\n\t                var gmt = new Date(date.valueOf() + date.getTimezoneOffset() * 60000);\n\t                return this.pad(gmt.getFullYear(), 4) +\n\t                    this.pad(gmt.getMonth() + 1, 2) +\n\t                    this.pad(gmt.getDay(), 2) +\n\t                    this.pad(gmt.getHours(), 2) +\n\t                    this.pad(gmt.getMinutes(), 2) +\n\t                    this.pad(gmt.getSeconds(), 2) +\n\t                    \".\" +\n\t                    this.dpad(gmt.getMilliseconds(), 3);\n\t            };\n\t            /**\n\t             * Pad a number with leading zeroes until it is of <tt>size</tt> length\n\t             *\n\t             * @param num number\n\t             * @param size number of digits in final number\n\t             * @return padded number\n\t             */\n\t            DefaultStringConversion.prototype.pad = function (num, size) {\n\t                var s = num + \"\";\n\t                while (s.length < size) {\n\t                    s = \"0\" + s;\n\t                }\n\t                return s;\n\t            };\n\t            /**\n\t             * Pad a number with trailing zeroes until it is of <tt>size</tt> length.\n\t             * Intended for numbers after a decimal point to get a fixed number of decimals\n\t             *\n\t             * @param num number\n\t             * @param size number of digits in final number\n\t             * @return padded number\n\t             */\n\t            DefaultStringConversion.prototype.dpad = function (num, size) {\n\t                var s = num + \"\";\n\t                while (s.length < size) {\n\t                    s = s + \"0\";\n\t                }\n\t                return s;\n\t            };\n\t            return DefaultStringConversion;\n\t        })();\n\t        io.DefaultStringConversion = DefaultStringConversion;\n\t    })(io = ofx4js.io || (ofx4js.io = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../collections/SortedSet'/>\n\t///<reference path='../collections/collections'/>\n\t///<reference path='StringConversion'/>\n\t///<reference path='DefaultStringConversion'/>\n\t///<reference path='AggregateIntrospector'/>\n\t///<reference path='AggregateInfo'/>\n\t///<reference path='AggregateAttribute'/>\n\t///<reference path='OFXWriter'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var io;\n\t    (function (io) {\n\t        var SortedSet = ofx4js.collections.SortedSet;\n\t        var LogFactory = ofx4js.log.LogFactory;\n\t        var LOG;\n\t        /**\n\t         * Marshaller for aggregate objects.\n\t         *\n\t         * @author Ryan Heaton\n\t         */\n\t        var AggregateMarshaller = (function () {\n\t            function AggregateMarshaller() {\n\t                this.conversion = new io.DefaultStringConversion();\n\t            }\n\t            /**\n\t             * Marshal the specified aggregate object.\n\t             *\n\t             * @param aggregate The aggregate to marshal.\n\t             * @param writer    The writer.\n\t             */\n\t            AggregateMarshaller.prototype.marshal = function (aggregate, writer) {\n\t                var aggregateInfo = io.AggregateIntrospector.getAggregateInfo(aggregate.constructor);\n\t                if (aggregateInfo == null) {\n\t                    throw new ofx4js.OFXException(\"Unable to marshal object (no aggregate metadata found).\");\n\t                }\n\t                if (aggregateInfo.hasHeaders()) {\n\t                    var headerValues = aggregateInfo.getHeaders(aggregate);\n\t                    var convertedValues = {};\n\t                    for (var header in headerValues) {\n\t                        convertedValues[header] = this.getConversion().toString(headerValues[header]);\n\t                    }\n\t                    writer.writeHeaders(convertedValues);\n\t                }\n\t                writer.writeStartAggregate(aggregateInfo.getName());\n\t                var AggregateAttributes = aggregateInfo.getAttributes();\n\t                this.writeAggregateAttributes(aggregate, writer, AggregateAttributes);\n\t                writer.writeEndAggregate(aggregateInfo.getName());\n\t            };\n\t            /**\n\t             * Write the aggregate attributes for the specified aggregate.\n\t             *\n\t             * @param aggregate           The aggregate.\n\t             * @param writer              The writer.\n\t             * @param aggregateAttributes The aggregate attributes.\n\t             */\n\t            AggregateMarshaller.prototype.writeAggregateAttributes = function (aggregate, writer, aggregateAttributes) {\n\t                for (var i in aggregateAttributes.values()) {\n\t                    var aggregateAttribute = aggregateAttributes.values()[i];\n\t                    var childValue = null;\n\t                    try {\n\t                        childValue = aggregateAttribute.get(aggregate);\n\t                    }\n\t                    catch (e) {\n\t                        LOG.error(\"Unable to get \" + aggregateAttribute.toString(), e);\n\t                    }\n\t                    if (childValue != null) {\n\t                        switch (aggregateAttribute.getType()) {\n\t                            case io.AggregateAttributeType.CHILD_AGGREGATE:\n\t                                var childValues;\n\t                                if (childValue instanceof Array) {\n\t                                    childValues = childValue;\n\t                                }\n\t                                else if (childValue instanceof SortedSet) {\n\t                                    childValues = childValue.values();\n\t                                }\n\t                                else {\n\t                                    childValues = [childValue];\n\t                                }\n\t                                for (var _i = 0; _i < childValues.length; _i++) {\n\t                                    var objValue = childValues[_i];\n\t                                    var aggregateInfo = io.AggregateIntrospector.getAggregateInfo(objValue.constructor);\n\t                                    if (aggregateInfo == null) {\n\t                                        throw new ofx4js.OFXException(\"Unable to marshal object of type \" + objValue.constructor.name + \" (no aggregate metadata found).\");\n\t                                    }\n\t                                    var attributeName = aggregateAttribute.getName();\n\t                                    if (aggregateAttribute.isArray()) {\n\t                                        attributeName = aggregateInfo.getName();\n\t                                    }\n\t                                    writer.writeStartAggregate(attributeName);\n\t                                    this.writeAggregateAttributes(objValue, writer, aggregateInfo.getAttributes());\n\t                                    writer.writeEndAggregate(attributeName);\n\t                                }\n\t                                break;\n\t                            case io.AggregateAttributeType.ELEMENT:\n\t                                var strValue = this.getConversion().toString(childValue);\n\t                                if ((strValue != null) && (\"\" !== strValue.trim())) {\n\t                                    writer.writeElement(aggregateAttribute.getName(), strValue);\n\t                                }\n\t                                break;\n\t                            default:\n\t                                throw new ofx4js.OFXException(\"Unknown aggregate attribute type: \" + aggregateAttribute.getType());\n\t                        }\n\t                    }\n\t                    else if (aggregateAttribute.isRequired()) {\n\t                        throw new ofx4js.OFXException(\"Required \" + aggregateAttribute.toString() + \" is null or empty.\");\n\t                    }\n\t                }\n\t            };\n\t            /**\n\t             * The conversion.\n\t             *\n\t             * @return The conversion.\n\t             */\n\t            AggregateMarshaller.prototype.getConversion = function () {\n\t                return this.conversion;\n\t            };\n\t            /**\n\t             * The conversion.\n\t             *\n\t             * @param conversion The conversion.\n\t             */\n\t            AggregateMarshaller.prototype.setConversion = function (conversion) {\n\t                this.conversion = conversion;\n\t            };\n\t            return AggregateMarshaller;\n\t        })();\n\t        io.AggregateMarshaller = AggregateMarshaller;\n\t        LOG = LogFactory.getLog(AggregateMarshaller);\n\t    })(io = ofx4js.io || (ofx4js.io = {}));\n\t})(ofx4js || (ofx4js = {}));\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var collections;\n\t    (function (collections) {\n\t        var Stack = (function () {\n\t            function Stack() {\n\t                this.values = [];\n\t            }\n\t            Stack.prototype.push = function () {\n\t                var values = [];\n\t                for (var _i = 0; _i < arguments.length; _i++) {\n\t                    values[_i - 0] = arguments[_i];\n\t                }\n\t                return Array.prototype.push.apply(this.values, arguments);\n\t            };\n\t            Stack.prototype.pop = function () {\n\t                return Array.prototype.pop.call(this.values);\n\t            };\n\t            Stack.prototype.peek = function () {\n\t                if (this.values.length === 0) {\n\t                    return null;\n\t                }\n\t                else {\n\t                    return this.values[this.values.length - 1];\n\t                }\n\t            };\n\t            Stack.prototype.isEmpty = function () {\n\t                return this.values.length === 0;\n\t            };\n\t            return Stack;\n\t        })();\n\t        collections.Stack = Stack;\n\t    })(collections = ofx4js.collections || (ofx4js.collections = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='OFXParseException'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var io;\n\t    (function (io) {\n\t        /**\n\t         * @author Ryan Heaton\n\t         */\n\t        var OFXSyntaxException = (function (_super) {\n\t            __extends(OFXSyntaxException, _super);\n\t            function OFXSyntaxException(message) {\n\t                _super.call(this, message);\n\t            }\n\t            return OFXSyntaxException;\n\t        })(io.OFXParseException);\n\t        io.OFXSyntaxException = OFXSyntaxException;\n\t    })(io = ofx4js.io || (ofx4js.io = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../collections/Stack'/>\n\t///<reference path='OFXHandler'/>\n\t///<reference path='AggregateInfo'/>\n\t///<reference path='AggregateAttribute'/>\n\t///<reference path='OFXSyntaxException'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var io;\n\t    (function (io) {\n\t        var LogFactory = ofx4js.log.LogFactory;\n\t        var Stack = ofx4js.collections.Stack;\n\t        var LOG;\n\t        var AggregateInfoHolder = (function () {\n\t            function AggregateInfoHolder(arg1, arg2, arg3) {\n\t                this.currentAttributeIndex = 0;\n\t                switch (arguments.length) {\n\t                    case 1:\n\t                        this.AggregateInfoHolder1.apply(this, arguments);\n\t                        break;\n\t                    case 3:\n\t                        this.AggregateInfoHolder3.apply(this, arguments);\n\t                        break;\n\t                    default:\n\t                        throw new ofx4js.OFXException(\"invalid number of arguments\");\n\t                }\n\t            }\n\t            AggregateInfoHolder.prototype.AggregateInfoHolder1 = function (ignoredAggregateName) {\n\t                this.aggregate = null;\n\t                this.info = null;\n\t                this.aggregateName = ignoredAggregateName;\n\t            };\n\t            AggregateInfoHolder.prototype.AggregateInfoHolder3 = function (aggregate, info, aggregateName) {\n\t                this.aggregateName = aggregateName;\n\t                this.aggregate = aggregate;\n\t                this.info = info;\n\t            };\n\t            AggregateInfoHolder.prototype.isBeingSkipped = function () {\n\t                return this.aggregate == null || this.info == null;\n\t            };\n\t            AggregateInfoHolder.prototype.isSkipping = function (aggregateName) {\n\t                return this.isBeingSkipped() && aggregateName === this.aggregateName;\n\t            };\n\t            return AggregateInfoHolder;\n\t        })();\n\t        /**\n\t         * Content handler that manages the aggregate using a stack-based implementation.\n\t         *\n\t         * @author Ryan Heaton\n\t         */\n\t        var AggregateStackContentHandler = (function () {\n\t            function AggregateStackContentHandler(root, conversion) {\n\t                this.stack = new Stack();\n\t                this.parsingRoot = false;\n\t                this.stack = new Stack();\n\t                this.parsingRoot = false;\n\t                var aggregateInfo = io.AggregateIntrospector.getAggregateInfo(root.constructor);\n\t                if (aggregateInfo == null) {\n\t                    throw new ofx4js.OFXException(\"Unable to marshal object of type '\" + root.constructor.name + \"' (no aggregate metadata found).\");\n\t                }\n\t                this.stack.push(new AggregateInfoHolder(root, aggregateInfo, aggregateInfo.getName()));\n\t                this.conversion = conversion;\n\t            }\n\t            AggregateStackContentHandler.prototype.onHeader = function (name, value) {\n\t                var headerType = this.stack.peek().info.getHeaderType(name);\n\t                if (headerType != null) {\n\t                    this.stack.peek().info.setHeader(this.stack.peek().aggregate, name, this.conversion.fromString(headerType, value));\n\t                }\n\t            };\n\t            AggregateStackContentHandler.prototype.onElement = function (name, value) {\n\t                if (!this.stack.peek().isBeingSkipped()) {\n\t                    var attribute = this.stack.peek().info.getAttribute(name, this.stack.peek().currentAttributeIndex);\n\t                    if (attribute != null && attribute.getType() == io.AggregateAttributeType.ELEMENT) {\n\t                        try {\n\t                            attribute.set(this.conversion.fromString(attribute.getAttributeType(), value), this.stack.peek().aggregate);\n\t                        }\n\t                        catch (e) {\n\t                            LOG.error(\"Unable to set \" + attribute.toString(), e);\n\t                        }\n\t                        this.stack.peek().currentAttributeIndex = attribute.getOrder();\n\t                    }\n\t                    else if (LOG.isInfoEnabled()) {\n\t                        LOG.info(\"Element \" + name + \" is not supported on aggregate \" + this.stack.peek().info.getName() + \" at index \" + this.stack.peek().currentAttributeIndex);\n\t                    }\n\t                }\n\t            };\n\t            AggregateStackContentHandler.prototype.startAggregate = function (aggregateName) {\n\t                if (this.stack.peek().isBeingSkipped()) {\n\t                    this.stack.push(new AggregateInfoHolder(aggregateName));\n\t                }\n\t                else if (!this.parsingRoot) {\n\t                    if (aggregateName !== this.stack.peek().info.getName()) {\n\t                        throw new ofx4js.OFXException(\"Unexpected root element: \" + aggregateName);\n\t                    }\n\t                    this.parsingRoot = true;\n\t                }\n\t                else {\n\t                    var infoHolder;\n\t                    var attribute = this.stack.peek().info.getAttribute(aggregateName, this.stack.peek().currentAttributeIndex);\n\t                    if (attribute != null) {\n\t                        if (attribute.getType() == io.AggregateAttributeType.CHILD_AGGREGATE) {\n\t                            var aggregateType;\n\t                            if (attribute.isArray()) {\n\t                                aggregateType = io.AggregateIntrospector.findAggregateByName(aggregateName);\n\t                            }\n\t                            else {\n\t                                aggregateType = attribute.getAttributeType();\n\t                            }\n\t                            if (aggregateType != null) {\n\t                                var aggregateInfo = io.AggregateIntrospector.getAggregateInfo(aggregateType);\n\t                                if (aggregateInfo == null) {\n\t                                    throw new ofx4js.OFXException(\"Unable to locate aggregate info for type \" + aggregateType.getName());\n\t                                }\n\t                                var aggregate = aggregate = new aggregateType();\n\t                                infoHolder = new AggregateInfoHolder(aggregate, aggregateInfo, aggregateName);\n\t                            }\n\t                            else {\n\t                                if (LOG.isInfoEnabled()) {\n\t                                    LOG.info(\"Child aggregate \" + aggregateName + \" is not supported on aggregate \" + this.stack.peek().info.getName() + \": name not assigned a type.\");\n\t                                }\n\t                                //element not supported.  push a skipping aggregate on the stack.\n\t                                infoHolder = new AggregateInfoHolder(aggregateName);\n\t                            }\n\t                            this.stack.peek().currentAttributeIndex = attribute.getOrder();\n\t                        }\n\t                        else {\n\t                            if (LOG.isInfoEnabled()) {\n\t                                LOG.info(\"Child aggregate \" + aggregateName + \" is not supported on aggregate \" + this.stack.peek().info.getName() + \": no child aggregate, but there does exist an element by that name.\");\n\t                            }\n\t                            //child aggregate not supported.  push a skipping aggregate on the stack.\n\t                            infoHolder = new AggregateInfoHolder(aggregateName);\n\t                        }\n\t                    }\n\t                    else {\n\t                        if (LOG.isInfoEnabled()) {\n\t                            LOG.info(\"Child aggregate \" + aggregateName + \" is not supported on aggregate \" + this.stack.peek().info.getName() + \": no attributes found by that name after index \" + this.stack.peek().currentAttributeIndex);\n\t                        }\n\t                        //child aggregate not supported.  push a skipping aggregate on the stack.\n\t                        infoHolder = new AggregateInfoHolder(aggregateName);\n\t                    }\n\t                    this.stack.push(infoHolder);\n\t                }\n\t            };\n\t            AggregateStackContentHandler.prototype.endAggregate = function (aggregateName) {\n\t                var infoHolder = this.stack.pop();\n\t                if (aggregateName !== infoHolder.aggregateName) {\n\t                    throw new io.OFXSyntaxException(\"Unexpected end aggregate \" + aggregateName + \". (Perhaps \" +\n\t                        infoHolder.aggregateName + \" is an element with an empty value, making it impossible to parse.)\");\n\t                }\n\t                if (!this.stack.isEmpty()) {\n\t                    if (!infoHolder.isSkipping(aggregateName)) {\n\t                        //we're not skipping the top aggregate, so process it.\n\t                        var attribute = this.stack.peek().info.getAttribute(aggregateName, this.stack.peek().currentAttributeIndex, infoHolder.aggregate.constructor);\n\t                        try {\n\t                            if (attribute != null) {\n\t                                attribute.set(infoHolder.aggregate, this.stack.peek().aggregate);\n\t                            }\n\t                            else {\n\t                                if (LOG.isInfoEnabled()) {\n\t                                    LOG.info(\"Child aggregate \" + aggregateName + \" is not supported on aggregate \" + this.stack.peek().info.getName() + \": no attributes found by that name after index \" + this.stack.peek().currentAttributeIndex);\n\t                                }\n\t                            }\n\t                        }\n\t                        catch (e) {\n\t                            LOG.error(\"Unable to set \" + attribute.toString(), e);\n\t                        }\n\t                        if (attribute != null) {\n\t                            this.stack.peek().currentAttributeIndex = attribute.getOrder();\n\t                        }\n\t                    }\n\t                }\n\t                else {\n\t                }\n\t            };\n\t            return AggregateStackContentHandler;\n\t        })();\n\t        io.AggregateStackContentHandler = AggregateStackContentHandler;\n\t        LOG = LogFactory.getLog(AggregateStackContentHandler);\n\t    })(io = ofx4js.io || (ofx4js.io = {}));\n\t})(ofx4js || (ofx4js = {}));\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var io;\n\t    (function (io) {\n\t        var StringReader = (function () {\n\t            function StringReader(text) {\n\t                this._text = text;\n\t                this._cursor = 0;\n\t                this._mark = 0;\n\t            }\n\t            StringReader.prototype.read = function (cbuf, offset, length) {\n\t                if (this._cursor >= this._text.length) {\n\t                    return -1;\n\t                }\n\t                else {\n\t                    if (arguments.length === 0) {\n\t                        return this.readChar();\n\t                    }\n\t                    else {\n\t                        offset = offset || 0;\n\t                        length = length || cbuf.length;\n\t                        length = Math.min(length, this._text.length - this._cursor);\n\t                        for (var i = 0; i < length; i++) {\n\t                            cbuf[offset + i] = this.readChar();\n\t                        }\n\t                        return length;\n\t                    }\n\t                }\n\t            };\n\t            StringReader.prototype.readChar = function () {\n\t                console.assert(this._cursor < this._text.length);\n\t                var ch = this._text[this._cursor];\n\t                this._cursor++;\n\t                return ch;\n\t            };\n\t            StringReader.prototype.close = function () {\n\t                this._text = null;\n\t                this._cursor = null;\n\t                this._mark = null;\n\t            };\n\t            StringReader.prototype.mark = function () {\n\t                this._mark = this._cursor;\n\t            };\n\t            StringReader.prototype.reset = function () {\n\t                this._cursor = this._mark;\n\t            };\n\t            StringReader.prototype.remainder = function () {\n\t                return this._text.substring(this._cursor);\n\t            };\n\t            return StringReader;\n\t        })();\n\t        io.StringReader = StringReader;\n\t    })(io = ofx4js.io || (ofx4js.io = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='OFXHandler'/>\n\t///<reference path='StringReader'/>\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='OFXHandler'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var io;\n\t    (function (io) {\n\t        /**\n\t         * Default (no-op) implementation of an OFX handler.\n\t         *\n\t         * @author Ryan Heaton\n\t         */\n\t        var DefaultHandler = (function () {\n\t            function DefaultHandler() {\n\t            }\n\t            DefaultHandler.prototype.onHeader = function (name, value) {\n\t            };\n\t            DefaultHandler.prototype.onElement = function (name, value) {\n\t            };\n\t            DefaultHandler.prototype.startAggregate = function (aggregateName) {\n\t            };\n\t            DefaultHandler.prototype.endAggregate = function (aggregateName) {\n\t            };\n\t            return DefaultHandler;\n\t        })();\n\t        io.DefaultHandler = DefaultHandler;\n\t    })(io = ofx4js.io || (ofx4js.io = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var io;\n\t    (function (io) {\n\t        (function (OFXParseEventType) {\n\t            OFXParseEventType[OFXParseEventType[\"CHARACTERS\"] = 0] = \"CHARACTERS\";\n\t            OFXParseEventType[OFXParseEventType[\"ELEMENT\"] = 1] = \"ELEMENT\";\n\t        })(io.OFXParseEventType || (io.OFXParseEventType = {}));\n\t        var OFXParseEventType = io.OFXParseEventType;\n\t        /**\n\t         * An event during OFX parsing.\n\t         *\n\t         * @author Ryan Heaton\n\t         */\n\t        var OFXParseEvent = (function () {\n\t            function OFXParseEvent(eventType, eventValue) {\n\t                this.eventType = eventType;\n\t                this.eventValue = eventValue;\n\t            }\n\t            OFXParseEvent.prototype.getEventType = function () {\n\t                return this.eventType;\n\t            };\n\t            OFXParseEvent.prototype.getEventValue = function () {\n\t                return this.eventValue;\n\t            };\n\t            return OFXParseEvent;\n\t        })();\n\t        io.OFXParseEvent = OFXParseEvent;\n\t    })(io = ofx4js.io || (ofx4js.io = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../collections/Stack'/>\n\t///<reference path='OFXParseEvent'/>\n\t///<reference path='OFXHandler'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var io;\n\t    (function (io) {\n\t        var LogFactory = ofx4js.log.LogFactory;\n\t        var Stack = ofx4js.collections.Stack;\n\t        var LOG;\n\t        /**\n\t         * @author Ryan Heaton\n\t         */\n\t        var OFXV2ContentHandler = (function () {\n\t            function OFXV2ContentHandler(ofxHandler) {\n\t                this.eventStack = new Stack();\n\t                this.startedEvents = new Array();\n\t                if (ofxHandler == null) {\n\t                    throw new ofx4js.OFXException(\"An OFX handler must be supplied.\");\n\t                }\n\t                this.ofxHandler = ofxHandler;\n\t            }\n\t            OFXV2ContentHandler.prototype.install = function (parser) {\n\t                parser.ontext = this.ontext.bind(this);\n\t                parser.onopentag = this.onopentag.bind(this);\n\t                parser.onclosetag = this.onclosetag.bind(this);\n\t            };\n\t            OFXV2ContentHandler.prototype.onopentag = function (node) {\n\t                var qName = node.name;\n\t                if (LOG.isDebugEnabled()) {\n\t                    LOG.debug(\"START ELEMENT: \" + qName);\n\t                }\n\t                if ((!this.eventStack.isEmpty()) && (this.eventStack.peek().getEventType() == io.OFXParseEventType.ELEMENT) && (!this.isAlreadyStarted(this.eventStack.peek()))) {\n\t                    var eventValue = this.eventStack.peek().getEventValue();\n\t                    if (LOG.isDebugEnabled()) {\n\t                        LOG.debug(\"Element \" + qName + \" is starting aggregate \" + eventValue);\n\t                    }\n\t                    //the last element started was not ended; we are assuming we've started a new aggregate.\n\t                    this.ofxHandler.startAggregate(eventValue);\n\t                    this.startedEvents.push(this.eventStack.peek());\n\t                }\n\t                this.eventStack.push(new io.OFXParseEvent(io.OFXParseEventType.ELEMENT, qName));\n\t            };\n\t            /**\n\t             * Whether the specified element aggregate has already been started.\n\t             *\n\t             * @param event The event containing the start.\n\t             * @return Whether the specified element aggregate has already been started.\n\t             */\n\t            OFXV2ContentHandler.prototype.isAlreadyStarted = function (event) {\n\t                return this.startedEvents.indexOf(event) != -1;\n\t            };\n\t            OFXV2ContentHandler.prototype.onclosetag = function (qName) {\n\t                if (LOG.isDebugEnabled()) {\n\t                    LOG.debug(\"END ELEMENT: \" + qName);\n\t                }\n\t                var eventToFinish = this.eventStack.pop();\n\t                if (eventToFinish.getEventType() == io.OFXParseEventType.CHARACTERS) {\n\t                    var chars = eventToFinish.getEventValue().trim();\n\t                    if (this.eventStack.isEmpty()) {\n\t                        throw new ofx4js.OFXException(\"Illegal character data outside main OFX root element: \\\"\" + chars + \"\\\".\");\n\t                    }\n\t                    else {\n\t                        var elementEvent = this.eventStack.pop();\n\t                        if (elementEvent.getEventType() != io.OFXParseEventType.ELEMENT) {\n\t                            throw new ofx4js.OFXException(\"Illegal OFX event before characters \\\"\" + chars + \"\\\" (\" + elementEvent.getEventType() + \")!\");\n\t                        }\n\t                        else {\n\t                            var value = elementEvent.getEventValue();\n\t                            if (LOG.isDebugEnabled()) {\n\t                                LOG.debug(\"Element \" + value + \" processed with value \" + chars);\n\t                            }\n\t                            this.ofxHandler.onElement(value, chars);\n\t                        }\n\t                    }\n\t                }\n\t                else if (eventToFinish.getEventType() == io.OFXParseEventType.ELEMENT) {\n\t                    //we're ending an aggregate (no character data on the stack).\n\t                    if (qName === eventToFinish.getEventValue()) {\n\t                        //the last element on the stack is ours; we're ending an OFX aggregate.\n\t                        var value = eventToFinish.getEventValue();\n\t                        if (LOG.isDebugEnabled()) {\n\t                            LOG.debug(\"Ending aggregate \" + value);\n\t                        }\n\t                        this.ofxHandler.endAggregate(value);\n\t                        var i = this.startedEvents.indexOf(eventToFinish);\n\t                        console.assert(i !== -1);\n\t                        if (i > -1) {\n\t                            this.startedEvents.splice(i, 1);\n\t                        }\n\t                    }\n\t                    else {\n\t                        throw new ofx4js.OFXException(\"Unexpected end tag: \" + eventToFinish.getEventValue());\n\t                    }\n\t                }\n\t                else {\n\t                    throw new ofx4js.OFXException(\"Illegal OFX event: \" + eventToFinish.getEventType());\n\t                }\n\t            };\n\t            OFXV2ContentHandler.prototype.ontext = function (value) {\n\t                if (value.trim().length > 0) {\n\t                    var event;\n\t                    if ((!this.eventStack.isEmpty()) && (this.eventStack.peek().getEventType() == io.OFXParseEventType.CHARACTERS)) {\n\t                        //append the characters...\n\t                        event = new io.OFXParseEvent(io.OFXParseEventType.CHARACTERS, this.eventStack.pop().getEventValue() + value);\n\t                    }\n\t                    else {\n\t                        event = new io.OFXParseEvent(io.OFXParseEventType.CHARACTERS, value);\n\t                    }\n\t                    this.eventStack.push(event);\n\t                }\n\t            };\n\t            return OFXV2ContentHandler;\n\t        })();\n\t        io.OFXV2ContentHandler = OFXV2ContentHandler;\n\t        LOG = LogFactory.getLog(OFXV2ContentHandler);\n\t    })(io = ofx4js.io || (ofx4js.io = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../project.d.ts'/>\n\t///<reference path='OFXHandler'/>\n\t///<reference path='DefaultHandler'/>\n\t///<reference path='OFXParseException'/>\n\t///<reference path='OFXV2ContentHandler'/>\n\t///<reference path='StringReader'/>\n\t///<reference path='OFXReader'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var io;\n\t    (function (io) {\n\t        var LogFactory = ofx4js.log.LogFactory;\n\t        var sax = __webpack_require__(3);\n\t        var LOG;\n\t        function arraysEqual(a1, a2) {\n\t            if (a1.length !== a2.length) {\n\t                return false;\n\t            }\n\t            for (var i = 0; i < a1.length; i++) {\n\t                if (a1[i] !== a2[i]) {\n\t                    return false;\n\t                }\n\t            }\n\t            return true;\n\t        }\n\t        /**\n\t         * Base class for an OFX reader.  Parses the headers and determines whether we're parsing an\n\t         * OFX v2 or OFX v1 element.  For OFX v2, uses a standard SAX library.\n\t         *\n\t         * @author Ryan Heaton\n\t         */\n\t        var BaseOFXReader = (function () {\n\t            function BaseOFXReader() {\n\t                this.contentHandler = new io.DefaultHandler();\n\t            }\n\t            /**\n\t             * The content handler.\n\t             *\n\t             * @return The content handler.\n\t             */\n\t            BaseOFXReader.prototype.getContentHandler = function () {\n\t                return this.contentHandler;\n\t            };\n\t            /**\n\t             * The content handler.\n\t             *\n\t             * @param handler The content handler.\n\t             */\n\t            BaseOFXReader.prototype.setContentHandler = function (handler) {\n\t                this.contentHandler = handler;\n\t            };\n\t            /**\n\t             * Parse the reader, including the headers.\n\t             *\n\t             * @param reader The reader.\n\t             */\n\t            BaseOFXReader.prototype.parse = function (reader) {\n\t                var header = \"\";\n\t                var firstElementStart = this.getFirstElementStart();\n\t                var buffer = new Array(firstElementStart.length);\n\t                reader.mark();\n\t                var ch = reader.read(buffer);\n\t                while ((ch != -1) && (!arraysEqual(buffer, firstElementStart))) {\n\t                    if (!this.contains(buffer, '<')) {\n\t                        //if the buffer contains a '<', then we might already have marked the beginning.\n\t                        reader.mark();\n\t                    }\n\t                    ch = reader.read();\n\t                    var shifted = this.shiftAndAppend(buffer, ch);\n\t                    header += shifted;\n\t                }\n\t                if (ch == -1) {\n\t                    throw new io.OFXParseException(\"Invalid OFX: no root <OFX> element!\");\n\t                }\n\t                else {\n\t                    var matches = BaseOFXReader.OFX_2_PROCESSING_INSTRUCTION_PATTERN.exec(header);\n\t                    if (matches) {\n\t                        if (LOG.isInfoEnabled()) {\n\t                            LOG.info(\"Processing OFX 2 header...\");\n\t                        }\n\t                        this.processOFXv2Headers(matches[1]);\n\t                        reader.reset();\n\t                        this.parseV2FromFirstElement(reader.remainder());\n\t                    }\n\t                    else {\n\t                        LOG.info(\"Processing OFX 1 headers...\");\n\t                        this.processOFXv1Headers(header);\n\t                        reader.reset();\n\t                        this.parseV1FromFirstElement(reader.remainder());\n\t                    }\n\t                }\n\t            };\n\t            /**\n\t             * The first characters of the first OFX element, '<', 'O', 'F', 'X'\n\t             *\n\t             * @return The first characters of the OFX element.\n\t             */\n\t            BaseOFXReader.prototype.getFirstElementStart = function () {\n\t                return ['<', 'O', 'F', 'X'];\n\t            };\n\t            /**\n\t             * Whether the specified buffer contains the specified character.\n\t             *\n\t             * @param buffer The buffer.\n\t             * @param c The character to search for.\n\t             * @return Whether the specified buffer contains the specified character.\n\t             */\n\t            BaseOFXReader.prototype.contains = function (buffer, c) {\n\t                for (var i = 0; i < buffer.length; i++) {\n\t                    var ch = buffer[i];\n\t                    if (ch === c) {\n\t                        return true;\n\t                    }\n\t                }\n\t                return false;\n\t            };\n\t            BaseOFXReader.prototype.shiftAndAppend = function (buffer, c) {\n\t                var shifted = buffer[0];\n\t                for (var i = 0; i + 1 < buffer.length; i++) {\n\t                    buffer[i] = buffer[i + 1];\n\t                }\n\t                buffer[buffer.length - 1] = c;\n\t                return shifted;\n\t            };\n\t            /**\n\t             * Parse an OFX version 1 stream from the first OFX element (defined by the {@link #getFirstElementStart() first element characters}).\n\t             *\n\t             * @param text The text.\n\t             */\n\t            BaseOFXReader.prototype.parseV1FromFirstElement = function (text) {\n\t                var strict = false;\n\t                var parser = sax.parser(strict);\n\t                var handler = new io.OFXV2ContentHandler(this.getContentHandler());\n\t                handler.install(parser);\n\t                parser.write(text);\n\t            };\n\t            /**\n\t             * Parse an OFX version 2 stream from the first OFX element (defined by the {@link #getFirstElementStart() first element characters}).\n\t             *\n\t             * @param text The text.\n\t             */\n\t            BaseOFXReader.prototype.parseV2FromFirstElement = function (text) {\n\t                var strict = true;\n\t                var parser = sax.parser(strict);\n\t                var handler = new io.OFXV2ContentHandler(this.getContentHandler());\n\t                handler.install(parser);\n\t                parser.write(text);\n\t            };\n\t            /**\n\t             * Process the given characters as OFX version 1 headers.\n\t             *\n\t             * @param chars The characters to process.\n\t             */\n\t            BaseOFXReader.prototype.processOFXv1Headers = function (chars) {\n\t                var lines = chars.split(/(\\n|\\r\\n)/);\n\t                for (var i = 0; i < lines.length; i++) {\n\t                    var line = lines[i];\n\t                    var colonIndex = line.indexOf(':');\n\t                    if (colonIndex >= 0) {\n\t                        var name = line.substring(0, colonIndex);\n\t                        var value = line.length > colonIndex ? line.substring(colonIndex + 1) : \"\";\n\t                        this.contentHandler.onHeader(name, value);\n\t                    }\n\t                }\n\t            };\n\t            /**\n\t             * Process the given characters as OFX version 2 headers.\n\t             *\n\t             * @param chars The characters to process.\n\t             */\n\t            BaseOFXReader.prototype.processOFXv2Headers = function (chars) {\n\t                var nameValuePairs = chars.split(\"\\\\s+\");\n\t                for (var _i = 0; _i < nameValuePairs.length; _i++) {\n\t                    var nameValuePair = nameValuePairs[_i];\n\t                    var equalsIndex = nameValuePair.indexOf('=');\n\t                    if (equalsIndex >= 0) {\n\t                        var name = nameValuePair.substring(0, equalsIndex);\n\t                        var value = nameValuePair.length > equalsIndex ? nameValuePair.substring(equalsIndex + 1) : \"\";\n\t                        value = value.replace('\"', ' ');\n\t                        value = value.replace('\\'', ' ');\n\t                        value = value.trim();\n\t                        this.contentHandler.onHeader(name, value);\n\t                    }\n\t                }\n\t            };\n\t            BaseOFXReader.OFX_2_PROCESSING_INSTRUCTION_PATTERN = /<\\\\?OFX ([^\\\\?]+)\\\\?>/;\n\t            return BaseOFXReader;\n\t        })();\n\t        io.BaseOFXReader = BaseOFXReader;\n\t        LOG = LogFactory.getLog(BaseOFXReader);\n\t    })(io = ofx4js.io || (ofx4js.io = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='StringConversion'/>\n\t///<reference path='DefaultStringConversion'/>\n\t///<reference path='AggregateStackContentHandler'/>\n\t///<reference path='OFXReader'/>\n\t///<reference path='BaseOFXReader'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var io;\n\t    (function (io) {\n\t        /**\n\t         * Unmarshaller for aggregate objects.\n\t         *\n\t         * @author Ryan Heaton\n\t         */\n\t        var AggregateUnmarshaller = (function () {\n\t            function AggregateUnmarshaller(clazz) {\n\t                this.clazz = clazz;\n\t                this.conversion = new io.DefaultStringConversion();\n\t            }\n\t            AggregateUnmarshaller.prototype.unmarshal = function (arg) {\n\t                var stream = (arg instanceof io.StringReader) ? arg : new io.StringReader(arg);\n\t                var aggregate = new this.clazz();\n\t                var reader = this.newReader();\n\t                reader.setContentHandler(new io.AggregateStackContentHandler(aggregate, this.getConversion()));\n\t                reader.parse(stream);\n\t                return aggregate;\n\t            };\n\t            /**\n\t             * New OFX reader.\n\t             *\n\t             * @return new OFX reader.\n\t             */\n\t            AggregateUnmarshaller.prototype.newReader = function () {\n\t                return new io.BaseOFXReader();\n\t            };\n\t            /**\n\t             * The conversion.\n\t             *\n\t             * @return The conversion.\n\t             */\n\t            AggregateUnmarshaller.prototype.getConversion = function () {\n\t                return this.conversion;\n\t            };\n\t            /**\n\t             * The conversion.\n\t             *\n\t             * @param conversion The conversion.\n\t             */\n\t            AggregateUnmarshaller.prototype.setConversion = function (conversion) {\n\t                this.conversion = conversion;\n\t            };\n\t            return AggregateUnmarshaller;\n\t        })();\n\t        io.AggregateUnmarshaller = AggregateUnmarshaller;\n\t    })(io = ofx4js.io || (ofx4js.io = {}));\n\t})(ofx4js || (ofx4js = {}));\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var io;\n\t    (function (io) {\n\t        var OutputBuffer = (function () {\n\t            function OutputBuffer() {\n\t                this.data = [];\n\t            }\n\t            OutputBuffer.prototype.toString = function (encoding) {\n\t                return this.data.join('');\n\t            };\n\t            OutputBuffer.prototype.append = function (data) {\n\t                this.data.push(data);\n\t            };\n\t            OutputBuffer.prototype.size = function () {\n\t                return this.data.reduce(function (previousValue, currentValue) {\n\t                    return currentValue.length;\n\t                }, 0);\n\t            };\n\t            return OutputBuffer;\n\t        })();\n\t        io.OutputBuffer = OutputBuffer;\n\t        var StreamWriter = (function () {\n\t            function StreamWriter(out, encoding) {\n\t                this.out = out;\n\t                this.encoding = encoding;\n\t            }\n\t            StreamWriter.prototype.flush = function () {\n\t            };\n\t            StreamWriter.prototype.close = function () {\n\t            };\n\t            StreamWriter.prototype.write = function (data) {\n\t                this.out.append(data);\n\t                //TODO\n\t                //Array.prototype.push.apply(this.out, data.split(''));\n\t            };\n\t            return StreamWriter;\n\t        })();\n\t        io.StreamWriter = StreamWriter;\n\t    })(io = ofx4js.io || (ofx4js.io = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../project.d.ts'/>\n\t///<reference path='../../collections/collections'/>\n\t///<reference path='../OFXWriter'/>\n\t///<reference path='../StreamWriter'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var io;\n\t    (function (io) {\n\t        var v1;\n\t        (function (v1) {\n\t            //import Map = java.util.Map;\n\t            /**\n\t             * OFX writer to SGML, suitable for OFX versions < 2.0.\n\t             *\n\t             * @author Ryan Heaton\n\t             */\n\t            var OFXV1Writer = (function () {\n\t                function OFXV1Writer(out) {\n\t                    this.LINE_SEPARATOR = \"\\r\\n\";\n\t                    this.headersWritten = false;\n\t                    this.writeAttributesOnNewLine = false;\n\t                    if (out instanceof io.StreamWriter) {\n\t                        this.writer = out;\n\t                    }\n\t                    else if (out instanceof io.OutputBuffer) {\n\t                        this.writer = this.newWriter(out);\n\t                    }\n\t                    else {\n\t                        throw new ofx4js.OFXException(\"invalid parameter type\");\n\t                    }\n\t                }\n\t                OFXV1Writer.prototype.newWriter = function (out) {\n\t                    return new io.StreamWriter(out, \"ISO-8859-1\");\n\t                };\n\t                OFXV1Writer.prototype.writeHeaders = function (headers) {\n\t                    if (this.headersWritten) {\n\t                        throw new ofx4js.OFXException(\"Headers have already been written!\");\n\t                    }\n\t                    //write out the 1.0 headers\n\t                    this.println(\"OFXHEADER:100\");\n\t                    this.println(\"DATA:OFXSGML\");\n\t                    this.println(\"VERSION:102\");\n\t                    this.print(\"SECURITY:\");\n\t                    var security = headers[\"SECURITY\"];\n\t                    if (security == null) {\n\t                        security = \"NONE\";\n\t                    }\n\t                    this.println(security);\n\t                    this.println(\"ENCODING:USASCII\"); //too many ofx v1 servers don't read unicode...\n\t                    this.println(\"CHARSET:1252\"); //windows-compatible.\n\t                    this.println(\"COMPRESSION:NONE\");\n\t                    this.print(\"OLDFILEUID:\");\n\t                    var olduid = headers[\"OLDFILEUID\"];\n\t                    if (olduid == null) {\n\t                        olduid = \"NONE\";\n\t                    }\n\t                    this.println(olduid);\n\t                    this.print(\"NEWFILEUID:\");\n\t                    var uid = headers[\"NEWFILEUID\"];\n\t                    if (uid == null) {\n\t                        uid = \"NONE\";\n\t                    }\n\t                    this.println(uid);\n\t                    this.println();\n\t                    this.headersWritten = true;\n\t                };\n\t                OFXV1Writer.prototype.writeStartAggregate = function (aggregateName) {\n\t                    this.print('<');\n\t                    this.print(aggregateName);\n\t                    this.print('>');\n\t                    if (this.isWriteAttributesOnNewLine()) {\n\t                        this.println();\n\t                    }\n\t                };\n\t                OFXV1Writer.prototype.writeElement = function (name, value) {\n\t                    if ((value == null) || (\"\" === value)) {\n\t                        throw new ofx4js.OFXException(\"Illegal element value for element '\" + name + \"' (value must not be null or empty).\");\n\t                    }\n\t                    //todo: optimize performance of the character escaping\n\t                    if (value.indexOf('&') >= 0) {\n\t                        value = value.replace(/\\\\&/g, \"&amp;\");\n\t                    }\n\t                    if (value.indexOf('<') >= 0) {\n\t                        value = value.replace(/</g, \"&lt;\");\n\t                    }\n\t                    if (value.indexOf('>') >= 0) {\n\t                        value = value.replace(/>/g, \"&gt;\");\n\t                    }\n\t                    this.print('<');\n\t                    this.print(name);\n\t                    this.print('>');\n\t                    this.print(value);\n\t                    if (this.isWriteAttributesOnNewLine()) {\n\t                        this.println();\n\t                    }\n\t                };\n\t                OFXV1Writer.prototype.writeEndAggregate = function (aggregateName) {\n\t                    this.print(\"</\");\n\t                    this.print(aggregateName);\n\t                    this.print('>');\n\t                    if (this.isWriteAttributesOnNewLine()) {\n\t                        this.println();\n\t                    }\n\t                };\n\t                OFXV1Writer.prototype.isWriteAttributesOnNewLine = function () {\n\t                    return this.writeAttributesOnNewLine;\n\t                };\n\t                OFXV1Writer.prototype.setWriteAttributesOnNewLine = function (writeAttributesOnNewLine) {\n\t                    this.writeAttributesOnNewLine = writeAttributesOnNewLine;\n\t                };\n\t                OFXV1Writer.prototype.close = function () {\n\t                    this.flush();\n\t                    this.writer.close();\n\t                };\n\t                OFXV1Writer.prototype.flush = function () {\n\t                    this.writer.flush();\n\t                };\n\t                /*protected*/ OFXV1Writer.prototype.println = function (line) {\n\t                    if (line === void 0) { line = null; }\n\t                    if (line != null) {\n\t                        this.print(line);\n\t                    }\n\t                    this.writer.write(this.LINE_SEPARATOR);\n\t                };\n\t                /*protected*/ OFXV1Writer.prototype.print = function (line) {\n\t                    this.writer.write(line == null ? \"null\" : line);\n\t                };\n\t                return OFXV1Writer;\n\t            })();\n\t            v1.OFXV1Writer = OFXV1Writer;\n\t        })(v1 = io.v1 || (io.v1 = {}));\n\t    })(io = ofx4js.io || (ofx4js.io = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../domain/data/RequestEnvelope'/>\n\t///<reference path='../../domain/data/ResponseEnvelope'/>\n\t///<reference path='../../io/OFXParseException'/>\n\t///<reference path='../../io/OFXWriter'/>\n\t///<reference path='../../io/AggregateMarshaller'/>\n\t///<reference path='../../io/AggregateUnmarshaller'/>\n\t///<reference path='../../io/v1/OFXV1Writer'/>\n\t///<reference path='../../io/StreamWriter'/>\n\t///<reference path='../../io/StringReader'/>\n\t///<reference path='../../log/Log'/>\n\t///<reference path='OFXConnection'/>\n\t///<reference path='OFXConnectionException'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var client;\n\t    (function (client) {\n\t        var net;\n\t        (function (net) {\n\t            var ResponseEnvelope = ofx4js.domain.data.ResponseEnvelope;\n\t            var AggregateMarshaller = ofx4js.io.AggregateMarshaller;\n\t            var OFXV1Writer = ofx4js.io.v1.OFXV1Writer;\n\t            var AggregateUnmarshaller = ofx4js.io.AggregateUnmarshaller;\n\t            var StringReader = ofx4js.io.StringReader;\n\t            var OutputBuffer = ofx4js.io.OutputBuffer;\n\t            var LogFactory = ofx4js.log.LogFactory;\n\t            // import java.io.*;\n\t            // import java.net.HttpURLConnection;\n\t            // import java.net.URL;\n\t            // import org.apache.commons.logging.Log;\n\t            // import org.apache.commons.logging.LogFactory;\n\t            var LOG;\n\t            function DefaultAjaxHandler(url, verb, headers, data, async) {\n\t                return new Promise(function (resolve, reject) {\n\t                    var request = new XMLHttpRequest();\n\t                    var onloadCalled = false;\n\t                    request.open(\"POST\", url, async);\n\t                    for (var header in headers) {\n\t                        request.setRequestHeader(header, headers[header]);\n\t                    }\n\t                    request.onload = function () {\n\t                        onloadCalled = true;\n\t                        if (request.status >= 200 && request.status < 300) {\n\t                            resolve(request.responseText);\n\t                        }\n\t                        else if (request.status >= 400 && request.status < 500) {\n\t                            reject(new ofx4js.OFXException(\"Error \" + request.status + \" with client request: \" + request.responseText));\n\t                        }\n\t                        else {\n\t                            reject(new ofx4js.OFXException(\"Invalid response code from OFX server: \" + request.status));\n\t                        }\n\t                    };\n\t                    request.onerror = function () {\n\t                        reject(new ofx4js.OFXException(\"Network error\"));\n\t                    };\n\t                    request.send(data);\n\t                    if (!async && !onloadCalled) {\n\t                        request.onload();\n\t                    }\n\t                });\n\t            }\n\t            /**\n\t             * Base implementation for an OFX connection.\n\t             *\n\t             * @author Ryan Heaton\n\t             */\n\t            var OFXV1Connection = (function () {\n\t                function OFXV1Connection() {\n\t                    this.async = true;\n\t                    this.marshaller = new AggregateMarshaller();\n\t                    this.unmarshaller = new AggregateUnmarshaller(ResponseEnvelope);\n\t                    this.ajax = DefaultAjaxHandler;\n\t                }\n\t                // Inherited.\n\t                OFXV1Connection.prototype.sendRequest = function (request, url) {\n\t                    //    if (!url.protocol().toLowerCase().startsWith(\"http\")) {\n\t                    //      throw new OFXException(\"Invalid URL: \" + url + \" only http(s) is supported.\");\n\t                    //    }\n\t                    var _this = this;\n\t                    //marshal to memory so we can determine the size...\n\t                    var outBuffer = new OutputBuffer();\n\t                    var ofxWriter = this.newOFXWriter(outBuffer);\n\t                    this.getMarshaller().marshal(request, ofxWriter);\n\t                    ofxWriter.close();\n\t                    this.logRequest(outBuffer);\n\t                    return this.sendBuffer(url, outBuffer)\n\t                        .then(function (in_) {\n\t                        _this.logResponse(in_);\n\t                        return _this.unmarshal(in_);\n\t                    });\n\t                };\n\t                /**\n\t                 * Log a request buffer.\n\t                 *\n\t                 * @param outBuffer The buffer to log.\n\t                 */\n\t                OFXV1Connection.prototype.logRequest = function (outBuffer) {\n\t                    if (LOG.isInfoEnabled()) {\n\t                        LOG.info(\"Marshalling \" + outBuffer.size() + \" bytes of the OFX request.\");\n\t                        if (LOG.isDebugEnabled()) {\n\t                            LOG.debug(outBuffer.toString(\"utf-8\"));\n\t                        }\n\t                    }\n\t                };\n\t                OFXV1Connection.prototype.logResponse = function (inBuffer) {\n\t                    if (LOG.isInfoEnabled()) {\n\t                        if (LOG.isDebugEnabled()) {\n\t                            LOG.debug(\"Received OFX response:\", inBuffer);\n\t                        }\n\t                    }\n\t                };\n\t                /**\n\t                 * Send the specified buffer to the specified URL.\n\t                 *\n\t                 * @param url The URL.\n\t                 * @param outBuffer The buffer.\n\t                 * @return a promise that resolves with the response.\n\t                 */\n\t                OFXV1Connection.prototype.sendBuffer = function (url, outBuffer) {\n\t                    var outText = outBuffer.toString();\n\t                    var async = this.getAsync();\n\t                    var headers = {\n\t                        \"Content-Type\": \"application/x-ofx\",\n\t                        \"Accept\": \"*/*, application/x-ofx\"\n\t                    };\n\t                    return this.ajax(url, \"POST\", headers, outText, async);\n\t                };\n\t                /**\n\t                 * Unmarshal the input stream.\n\t                 *\n\t                 * @param in The input stream.\n\t                 * @return The response envelope.\n\t                 */\n\t                OFXV1Connection.prototype.unmarshal = function (in_) {\n\t                    try {\n\t                        var reader = new StringReader(in_);\n\t                        return this.getUnmarshaller().unmarshal(reader);\n\t                    }\n\t                    catch (e) {\n\t                        throw new net.OFXConnectionException(\"Unable to parse the OFX response.\", e);\n\t                    }\n\t                };\n\t                /**\n\t                 * Create a new OFX writer.\n\t                 *\n\t                 * @param out The output stream for the writer.\n\t                 * @return The OFX writer.\n\t                 */\n\t                OFXV1Connection.prototype.newOFXWriter = function (out) {\n\t                    return new OFXV1Writer(out);\n\t                };\n\t                /**\n\t                 * The marshaller.\n\t                 *\n\t                 * @return The marshaller.\n\t                 */\n\t                OFXV1Connection.prototype.getMarshaller = function () {\n\t                    return this.marshaller;\n\t                };\n\t                /**\n\t                 * The marshaller.\n\t                 *\n\t                 * @param marshaller The marshaller.\n\t                 */\n\t                OFXV1Connection.prototype.setMarshaller = function (marshaller) {\n\t                    this.marshaller = marshaller;\n\t                };\n\t                /**\n\t                 * The unmarshaller.\n\t                 *\n\t                 * @return The unmarshaller.\n\t                 */\n\t                OFXV1Connection.prototype.getUnmarshaller = function () {\n\t                    return this.unmarshaller;\n\t                };\n\t                /**\n\t                 * The unmarshaller.\n\t                 *\n\t                 * @param unmarshaller The unmarshaller.\n\t                 */\n\t                OFXV1Connection.prototype.setUnmarshaller = function (unmarshaller) {\n\t                    this.unmarshaller = unmarshaller;\n\t                };\n\t                /**\n\t                 * Async mode\n\t                 *\n\t                 * @return {bool} Whether in async mode.\n\t                 */\n\t                OFXV1Connection.prototype.getAsync = function () {\n\t                    return this.async;\n\t                };\n\t                /**\n\t                 * Async mode\n\t                 *\n\t                 * @param {bool} async async mode.\n\t                 */\n\t                OFXV1Connection.prototype.setAsync = function (async) {\n\t                    this.async = async;\n\t                };\n\t                /**\n\t                 * Async mode\n\t                 *\n\t                 * @return {bool} Whether in async mode.\n\t                 */\n\t                OFXV1Connection.prototype.getAjax = function () {\n\t                    return this.ajax;\n\t                };\n\t                /**\n\t                 * Async mode\n\t                 *\n\t                 * @param {bool} async async mode.\n\t                 */\n\t                OFXV1Connection.prototype.setAjax = function (ajax) {\n\t                    this.ajax = ajax;\n\t                };\n\t                return OFXV1Connection;\n\t            })();\n\t            net.OFXV1Connection = OFXV1Connection;\n\t            LOG = LogFactory.getLog(OFXV1Connection);\n\t        })(net = client.net || (client.net = {}));\n\t    })(client = ofx4js.client || (ofx4js.client = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../v1/OFXV1Writer'/>\n\t///<reference path='../../collections/collections'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var io;\n\t    (function (io) {\n\t        var v2;\n\t        (function (v2) {\n\t            var OFXV1Writer = ofx4js.io.v1.OFXV1Writer;\n\t            //import Map = java.util.Map;\n\t            /**\n\t             * OFX writer to XML, suitable for OFX version 2.0.\n\t             *\n\t             * @author Ryan Heaton\n\t             */\n\t            var OFXV2Writer = (function (_super) {\n\t                __extends(OFXV2Writer, _super);\n\t                function OFXV2Writer(out) {\n\t                    _super.call(this, out);\n\t                }\n\t                //@Override\n\t                OFXV2Writer.prototype.newWriter = function (out) {\n\t                    return new io.StreamWriter(out, \"UTF-8\");\n\t                };\n\t                OFXV2Writer.prototype.writeHeaders = function (headers) {\n\t                    if (this.headersWritten) {\n\t                        throw new ofx4js.OFXException(\"Headers have already been written!\");\n\t                    }\n\t                    //write out the XML PI\n\t                    this.print(\"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\" ?>\");\n\t                    var security = headers[\"SECURITY\"];\n\t                    if (security == null) {\n\t                        security = \"NONE\";\n\t                    }\n\t                    var olduid = headers[\"OLDFILEUID\"];\n\t                    if (olduid == null) {\n\t                        olduid = \"NONE\";\n\t                    }\n\t                    // println(olduid);\n\t                    var uid = headers[\"NEWFILEUID\"];\n\t                    if (uid == null) {\n\t                        uid = \"NONE\";\n\t                    }\n\t                    this.print(\"<?OFX OFXHEADER=\\\"200\\\" VERSION=\\\"202\\\" SECURITY=\\\"\" + security + \"\\\" OLDFILEUID=\\\"\" + olduid + \"\\\" NEWFILEUID=\\\"\" + uid + \"\\\"?>\");\n\t                    this.headersWritten = true;\n\t                };\n\t                OFXV2Writer.prototype.writeElement = function (name, value) {\n\t                    _super.prototype.writeElement.call(this, name, value);\n\t                    this.print(\"</\");\n\t                    this.print(name);\n\t                    this.print('>');\n\t                };\n\t                //@Override\n\t                OFXV2Writer.prototype.isWriteAttributesOnNewLine = function () {\n\t                    return false;\n\t                };\n\t                return OFXV2Writer;\n\t            })(OFXV1Writer);\n\t            v2.OFXV2Writer = OFXV2Writer;\n\t        })(v2 = io.v2 || (io.v2 = {}));\n\t    })(io = ofx4js.io || (ofx4js.io = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../io/OFXWriter'/>\n\t///<reference path='../../io/v2/OFXV2Writer'/>\n\t///<reference path='OFXV1Connection'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var client;\n\t    (function (client) {\n\t        var net;\n\t        (function (net) {\n\t            var OFXV2Writer = ofx4js.io.v2.OFXV2Writer;\n\t            /**\n\t             * @author Ryan Heaton\n\t             */\n\t            var OFXV2Connection = (function (_super) {\n\t                __extends(OFXV2Connection, _super);\n\t                function OFXV2Connection() {\n\t                    _super.apply(this, arguments);\n\t                }\n\t                //@Override\n\t                OFXV2Connection.prototype.newOFXWriter = function (out) {\n\t                    return new OFXV2Writer(out);\n\t                };\n\t                return OFXV2Connection;\n\t            })(net.OFXV1Connection);\n\t            net.OFXV2Connection = OFXV2Connection;\n\t        })(net = client.net || (client.net = {}));\n\t    })(client = ofx4js.client || (ofx4js.client = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t/*\n\t * Copyright 2012 TheStash\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var common;\n\t            (function (common) {\n\t                /**\n\t                 * Day of week used in \"PROCDAYSOFF\" lists.\n\t                 *\n\t                 * @author Scott Priddy\n\t                 * @see \"OFX Spec, Section 13.6.2\"\n\t                 */\n\t                (function (ProcessorDayOff) {\n\t                    ProcessorDayOff[ProcessorDayOff[\"MONDAY\"] = 0] = \"MONDAY\";\n\t                    ProcessorDayOff[ProcessorDayOff[\"TUESDAY\"] = 1] = \"TUESDAY\";\n\t                    ProcessorDayOff[ProcessorDayOff[\"WEDNESDAY\"] = 2] = \"WEDNESDAY\";\n\t                    ProcessorDayOff[ProcessorDayOff[\"THURSDAY\"] = 3] = \"THURSDAY\";\n\t                    ProcessorDayOff[ProcessorDayOff[\"FRIDAY\"] = 4] = \"FRIDAY\";\n\t                    ProcessorDayOff[ProcessorDayOff[\"SATURDAY\"] = 5] = \"SATURDAY\";\n\t                    ProcessorDayOff[ProcessorDayOff[\"SUNDAY\"] = 6] = \"SUNDAY\";\n\t                })(common.ProcessorDayOff || (common.ProcessorDayOff = {}));\n\t                var ProcessorDayOff = common.ProcessorDayOff;\n\t                function ProcessorDayOff_fromOfx(ofxVal) {\n\t                    if (\"MONDAY\" === ofxVal) {\n\t                        return ProcessorDayOff.MONDAY;\n\t                    }\n\t                    else if (\"TUESDAY\" === ofxVal) {\n\t                        return ProcessorDayOff.TUESDAY;\n\t                    }\n\t                    else if (\"WEDNESDAY\" === ofxVal) {\n\t                        return ProcessorDayOff.WEDNESDAY;\n\t                    }\n\t                    else if (\"THURSDAY\" === ofxVal) {\n\t                        return ProcessorDayOff.THURSDAY;\n\t                    }\n\t                    else if (\"FRIDAY\" === ofxVal) {\n\t                        return ProcessorDayOff.FRIDAY;\n\t                    }\n\t                    else if (\"SATURDAY\" === ofxVal) {\n\t                        return ProcessorDayOff.SATURDAY;\n\t                    }\n\t                    else if (\"SUNDAY\" === ofxVal) {\n\t                        return ProcessorDayOff.SUNDAY;\n\t                    }\n\t                    else {\n\t                        return null;\n\t                    }\n\t                }\n\t                common.ProcessorDayOff_fromOfx = ProcessorDayOff_fromOfx;\n\t            })(common = data.common || (data.common = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../RequestMessage'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var common;\n\t            (function (common) {\n\t                var RequestMessage = ofx4js.domain.data.RequestMessage;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                /**\n\t                 * @author Aparna Gawali\n\t                 * aparna.gawali@sungard.com\n\t                 */\n\t                var T1099Request = (function (_super) {\n\t                    __extends(T1099Request, _super);\n\t                    function T1099Request() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    return T1099Request;\n\t                })(RequestMessage);\n\t                common.T1099Request = T1099Request;\n\t                Aggregate_add(T1099Request, \"STMTRQ\");\n\t            })(common = data.common || (data.common = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\t///<reference path='../ResponseMessage'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var common;\n\t            (function (common) {\n\t                var ResponseMessage = ofx4js.domain.data.ResponseMessage;\n\t                //import java.util.Locale;\n\t                /**\n\t                 * @author Aparna Gawali\n\t                 * aparna.gawali@sungard.com\n\t                 */\n\t                var T1099Response = (function (_super) {\n\t                    __extends(T1099Response, _super);\n\t                    function T1099Response() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    return T1099Response;\n\t                })(ResponseMessage);\n\t                common.T1099Response = T1099Response;\n\t            })(common = data.common || (data.common = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\t///<reference path='../banking/BankAccountDetails'/>\n\t///<reference path='../creditcard/CreditCardAccountDetails'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var common;\n\t            (function (common) {\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                var BankAccountDetails = ofx4js.domain.data.banking.BankAccountDetails;\n\t                var CreditCardAccountDetails = ofx4js.domain.data.creditcard.CreditCardAccountDetails;\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 */\n\t                var TransferInfo = (function () {\n\t                    function TransferInfo() {\n\t                    }\n\t                    /**\n\t                     * The bank account to transfer from.\n\t                     *\n\t                     * @return The bank account to transfer from.\n\t                     */\n\t                    TransferInfo.prototype.getBankAccountFrom = function () {\n\t                        return this.bankAccountFrom;\n\t                    };\n\t                    /**\n\t                     * The bank account to transfer from.\n\t                     *\n\t                     * @param bankAccountFrom The bank account to transfer from.\n\t                     */\n\t                    TransferInfo.prototype.setBankAccountFrom = function (bankAccountFrom) {\n\t                        this.creditCardAccountFrom = null;\n\t                        this.bankAccountFrom = bankAccountFrom;\n\t                    };\n\t                    /**\n\t                     * The account to transfer from.\n\t                     *\n\t                     * @param acct The account to transfer from.\n\t                     */\n\t                    TransferInfo.prototype.setAccountFrom = function (acct) {\n\t                        if (acct instanceof BankAccountDetails) {\n\t                            this.setBankAccountFrom(acct);\n\t                        }\n\t                        else {\n\t                            this.setCreditCardAccountFrom(acct);\n\t                        }\n\t                    };\n\t                    /**\n\t                     * The credit card to transfer from.\n\t                     *\n\t                     * @return The credit card to transfer from.\n\t                     */\n\t                    TransferInfo.prototype.getCreditCardAccountFrom = function () {\n\t                        return this.creditCardAccountFrom;\n\t                    };\n\t                    /**\n\t                     * The credit card to transfer from.\n\t                     *\n\t                     * @param creditCardAccountFrom The credit card to transfer from.\n\t                     */\n\t                    TransferInfo.prototype.setCreditCardAccountFrom = function (creditCardAccountFrom) {\n\t                        this.bankAccountFrom = null;\n\t                        this.creditCardAccountFrom = creditCardAccountFrom;\n\t                    };\n\t                    /**\n\t                     * The bank account to transfer to.\n\t                     *\n\t                     * @return The bank account to transfer to.\n\t                     */\n\t                    TransferInfo.prototype.getBankAccountTo = function () {\n\t                        return this.bankAccountTo;\n\t                    };\n\t                    /**\n\t                     * The bank account to transfer to.\n\t                     *\n\t                     * @param bankAccountTo The bank account to transfer to.\n\t                     */\n\t                    TransferInfo.prototype.setBankAccountTo = function (bankAccountTo) {\n\t                        this.creditCardAccountTo = null;\n\t                        this.bankAccountTo = bankAccountTo;\n\t                    };\n\t                    /**\n\t                     * The bank or credit card account to transfer to.\n\t                     *\n\t                     * @param accountTo The account to transfer to.\n\t                     */\n\t                    TransferInfo.prototype.setAccountTo = function (accountTo) {\n\t                        if (accountTo instanceof BankAccountDetails)\n\t                            this.setBankAccountTo(accountTo);\n\t                        else if (accountTo instanceof CreditCardAccountDetails)\n\t                            this.setCreditCardAccountTo(accountTo);\n\t                        else\n\t                            throw new ofx4js.OFXException(\"invalid type\");\n\t                    };\n\t                    /**\n\t                     * The credit card account to transfer to.\n\t                     *\n\t                     * @return The credit card account to transfer to.\n\t                     */\n\t                    TransferInfo.prototype.getCreditCardAccountTo = function () {\n\t                        return this.creditCardAccountTo;\n\t                    };\n\t                    /**\n\t                     * The credit card account to transfer to.\n\t                     *\n\t                     * @param creditCardAccountTo The credit card account to transfer to.\n\t                     */\n\t                    TransferInfo.prototype.setCreditCardAccountTo = function (creditCardAccountTo) {\n\t                        this.bankAccountTo = null;\n\t                        this.creditCardAccountTo = creditCardAccountTo;\n\t                    };\n\t                    /**\n\t                     * The amount.\n\t                     *\n\t                     * @return The amount.\n\t                     */\n\t                    TransferInfo.prototype.getAmount = function () {\n\t                        return this.amount;\n\t                    };\n\t                    /**\n\t                     * The amount.\n\t                     *\n\t                     * @param amount The amount.\n\t                     */\n\t                    TransferInfo.prototype.setAmount = function (amount) {\n\t                        this.amount = amount;\n\t                    };\n\t                    /**\n\t                     * The due date.\n\t                     *\n\t                     * @return The due date.\n\t                     */\n\t                    TransferInfo.prototype.getDue = function () {\n\t                        return this.due;\n\t                    };\n\t                    /**\n\t                     * The due date.\n\t                     *\n\t                     * @param due The due date.\n\t                     */\n\t                    TransferInfo.prototype.setDue = function (due) {\n\t                        this.due = due;\n\t                    };\n\t                    return TransferInfo;\n\t                })();\n\t                common.TransferInfo = TransferInfo;\n\t                Aggregate_add(TransferInfo, \"XFERINFO\");\n\t                ChildAggregate_add(TransferInfo, { name: \"BANKACCTFROM\", order: 0, type: BankAccountDetails, read: TransferInfo.prototype.getBankAccountFrom, write: TransferInfo.prototype.setBankAccountFrom });\n\t                ChildAggregate_add(TransferInfo, { name: \"CCACCTFROM\", order: 10, type: CreditCardAccountDetails, read: TransferInfo.prototype.getCreditCardAccountFrom, write: TransferInfo.prototype.setCreditCardAccountFrom });\n\t                ChildAggregate_add(TransferInfo, { name: \"BANKACCTTO\", order: 20, type: BankAccountDetails, read: TransferInfo.prototype.getBankAccountTo, write: TransferInfo.prototype.setBankAccountTo });\n\t                ChildAggregate_add(TransferInfo, { name: \"CCACCTTO\", order: 30, type: CreditCardAccountDetails, read: TransferInfo.prototype.getCreditCardAccountTo, write: TransferInfo.prototype.setCreditCardAccountTo });\n\t                Element_add(TransferInfo, { name: \"TRNAMT\", required: true, order: 40, type: Number, read: TransferInfo.prototype.getAmount, write: TransferInfo.prototype.setAmount });\n\t                Element_add(TransferInfo, { name: \"DTDUE\", order: 50, type: Date, read: TransferInfo.prototype.getDue, write: TransferInfo.prototype.setDue });\n\t            })(common = data.common || (data.common = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var common;\n\t            (function (common) {\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 */\n\t                (function (TransferStatusEvent) {\n\t                    TransferStatusEvent[TransferStatusEvent[\"WILLPROCESSON\"] = 0] = \"WILLPROCESSON\";\n\t                    TransferStatusEvent[TransferStatusEvent[\"POSTEDON\"] = 1] = \"POSTEDON\";\n\t                    TransferStatusEvent[TransferStatusEvent[\"NOFUNDSON\"] = 2] = \"NOFUNDSON\";\n\t                    TransferStatusEvent[TransferStatusEvent[\"CANCELEDON\"] = 3] = \"CANCELEDON\";\n\t                    TransferStatusEvent[TransferStatusEvent[\"FAILEDON\"] = 4] = \"FAILEDON\";\n\t                })(common.TransferStatusEvent || (common.TransferStatusEvent = {}));\n\t                var TransferStatusEvent = common.TransferStatusEvent;\n\t            })(common = data.common || (data.common = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\t///<reference path='TransferStatusEvent'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var common;\n\t            (function (common) {\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                /**\n\t                 * @author Ryan Heaton\n\t                 */\n\t                var TransferStatus = (function () {\n\t                    function TransferStatus() {\n\t                    }\n\t                    /**\n\t                     * The event.\n\t                     *\n\t                     * @return The event.\n\t                     */\n\t                    TransferStatus.prototype.getEvent = function () {\n\t                        return this.event;\n\t                    };\n\t                    /**\n\t                     * The event.\n\t                     *\n\t                     * @param event The event.\n\t                     */\n\t                    TransferStatus.prototype.setEvent = function (event) {\n\t                        this.event = event;\n\t                    };\n\t                    /**\n\t                     * The date of the event.\n\t                     *\n\t                     * @return The date of the event.\n\t                     */\n\t                    TransferStatus.prototype.getDate = function () {\n\t                        return this.date;\n\t                    };\n\t                    /**\n\t                     * The date of the event.\n\t                     *\n\t                     * @param date The date of the event.\n\t                     */\n\t                    TransferStatus.prototype.setDate = function (date) {\n\t                        this.date = date;\n\t                    };\n\t                    return TransferStatus;\n\t                })();\n\t                common.TransferStatus = TransferStatus;\n\t                Aggregate_add(TransferStatus, \"XFERPRCSTS\");\n\t                Element_add(TransferStatus, { name: \"XFERPRCCODE\", required: true, order: 0, type: common.TransferStatusEvent, read: TransferStatus.prototype.getEvent, write: TransferStatus.prototype.setEvent });\n\t                Element_add(TransferStatus, { name: \"DTXFERPRC\", required: true, order: 10, type: Date, read: TransferStatus.prototype.getDate, write: TransferStatus.prototype.setDate });\n\t            })(common = data.common || (data.common = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='BasePosition'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var positions;\n\t                (function (positions) {\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    /**\n\t                     * Represents a debt position.\n\t                     * @see \"Section 13.9.2.6.1, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var DebtPosition = (function (_super) {\n\t                        __extends(DebtPosition, _super);\n\t                        function DebtPosition() {\n\t                            _super.apply(this, arguments);\n\t                        }\n\t                        return DebtPosition;\n\t                    })(positions.BasePosition);\n\t                    positions.DebtPosition = DebtPosition;\n\t                    Aggregate_add(DebtPosition, \"POSDEBT\");\n\t                })(positions = investment.positions || (investment.positions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/Element_add'/>\n\t///<reference path='BasePosition'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var positions;\n\t                (function (positions) {\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var Element_add = ofx4js.meta.Element_add;\n\t                    /**\n\t                     * Represents a mutual fund position.\n\t                     * @see \"Section 13.9.2.6.1, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var MutualFundPosition = (function (_super) {\n\t                        __extends(MutualFundPosition, _super);\n\t                        function MutualFundPosition() {\n\t                            _super.apply(this, arguments);\n\t                        }\n\t                        /**\n\t                         * Gets the number of units in the financial insititution's street name.\n\t                         *\n\t                         * @return the number of units in the financial insititution's street name.\n\t                         */\n\t                        MutualFundPosition.prototype.getUnitsStreet = function () {\n\t                            return this.unitsStreet;\n\t                        };\n\t                        /**\n\t                         * Sets the number of units in the financial insititution's street name.\n\t                         *\n\t                         * @param unitsStreet the number of units in the financial insititution's street name.\n\t                         */\n\t                        MutualFundPosition.prototype.setUnitsStreet = function (unitsStreet) {\n\t                            this.unitsStreet = unitsStreet;\n\t                        };\n\t                        /**\n\t                         * Gets the number of units in the user's name.\n\t                         *\n\t                         * @return the number of units in the user's name.\n\t                         */\n\t                        MutualFundPosition.prototype.getUnitsUser = function () {\n\t                            return this.unitsUser;\n\t                        };\n\t                        /**\n\t                         * Sets the number of units in the user's name.\n\t                         *\n\t                         * @param unitsUser the number of units in the user's name.\n\t                         */\n\t                        MutualFundPosition.prototype.setUnitsUser = function (unitsUser) {\n\t                            this.unitsUser = unitsUser;\n\t                        };\n\t                        /**\n\t                         * Gets whether dividends are automatically reinvested.\n\t                         *\n\t                         * @return whether dividends are automatically reinvested\n\t                         */\n\t                        MutualFundPosition.prototype.getReinvestDividends = function () {\n\t                            return this.reinvestDividends;\n\t                        };\n\t                        /**\n\t                         * Sets whether dividends are automatically reinvested.\n\t                         *\n\t                         * @param reinvestDividends whether dividends are automatically reinvested\n\t                         */\n\t                        MutualFundPosition.prototype.setReinvestDividends = function (reinvestDividends) {\n\t                            this.reinvestDividends = reinvestDividends;\n\t                        };\n\t                        /**\n\t                         * Gets whether capital gains are automatically reinvested.\n\t                         *\n\t                         * @return whether capital gains are automatically reinvested\n\t                         */\n\t                        MutualFundPosition.prototype.getReinvestCapitalGains = function () {\n\t                            return this.reinvestCapitalGains;\n\t                        };\n\t                        /**\n\t                         * Sets whether capital gains are automatically reinvested.\n\t                         *\n\t                         * @param reinvestCapitalGains whether capital gains are automatically reinvested\n\t                         */\n\t                        MutualFundPosition.prototype.setReinvestCapitalGains = function (reinvestCapitalGains) {\n\t                            this.reinvestCapitalGains = reinvestCapitalGains;\n\t                        };\n\t                        return MutualFundPosition;\n\t                    })(positions.BasePosition);\n\t                    positions.MutualFundPosition = MutualFundPosition;\n\t                    Aggregate_add(MutualFundPosition, \"POSMF\");\n\t                    Element_add(MutualFundPosition, { name: \"UNITSSTREET\", order: 20, type: Number, read: MutualFundPosition.prototype.getUnitsStreet, write: MutualFundPosition.prototype.setUnitsStreet });\n\t                    Element_add(MutualFundPosition, { name: \"UNITSUSER\", order: 30, type: Number, read: MutualFundPosition.prototype.getUnitsUser, write: MutualFundPosition.prototype.setUnitsUser });\n\t                    Element_add(MutualFundPosition, { name: \"REINVDIV\", order: 50, type: Boolean, read: MutualFundPosition.prototype.getReinvestDividends, write: MutualFundPosition.prototype.setReinvestDividends });\n\t                    Element_add(MutualFundPosition, { name: \"REINVCG\", order: 60, type: Boolean, read: MutualFundPosition.prototype.getReinvestCapitalGains, write: MutualFundPosition.prototype.setReinvestCapitalGains });\n\t                })(positions = investment.positions || (investment.positions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var positions;\n\t                (function (positions) {\n\t                    /**\n\t                     * How a short option is secured.\n\t                     * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    (function (ShortOptionSecurity) {\n\t                        ShortOptionSecurity[ShortOptionSecurity[\"NAKED\"] = 0] = \"NAKED\";\n\t                        ShortOptionSecurity[ShortOptionSecurity[\"COVERED\"] = 1] = \"COVERED\";\n\t                    })(positions.ShortOptionSecurity || (positions.ShortOptionSecurity = {}));\n\t                    var ShortOptionSecurity = positions.ShortOptionSecurity;\n\t                    function ShortOptionSecurity_fromOfx(ofxVal) {\n\t                        if (\"NAKED\" === ofxVal) {\n\t                            return ShortOptionSecurity.NAKED;\n\t                        }\n\t                        else if (\"COVERED\" === ofxVal) {\n\t                            return ShortOptionSecurity.COVERED;\n\t                        }\n\t                        else {\n\t                            return null;\n\t                        }\n\t                    }\n\t                    positions.ShortOptionSecurity_fromOfx = ShortOptionSecurity_fromOfx;\n\t                })(positions = investment.positions || (investment.positions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/Element_add'/>\n\t///<reference path='BasePosition'/>\n\t///<reference path='ShortOptionSecurity'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var positions;\n\t                (function (positions) {\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var Element_add = ofx4js.meta.Element_add;\n\t                    /**\n\t                     * Represents an options position.\n\t                     * @see \"Section 13.9.2.6.1, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var OptionsPosition = (function (_super) {\n\t                        __extends(OptionsPosition, _super);\n\t                        function OptionsPosition() {\n\t                            _super.apply(this, arguments);\n\t                        }\n\t                        /**\n\t                         * Gets how the options position is secured (for short positions).\n\t                         *\n\t                         * @return how the options position is secured\n\t                         */\n\t                        OptionsPosition.prototype.getSecured = function () {\n\t                            return this.secured;\n\t                        };\n\t                        /**\n\t                         * Sets how the options position is secured (for short positions).\n\t                         *\n\t                         * @param secured how the options position is secured\n\t                         */\n\t                        OptionsPosition.prototype.setSecured = function (secured) {\n\t                            this.secured = secured;\n\t                        };\n\t                        /**\n\t                         * Gets how the options position is secured as a well-known type.\n\t                         *\n\t                         * @return how the option position is secured or null if it's not a well-known type\n\t                         */\n\t                        OptionsPosition.prototype.getSecuredEnum = function () {\n\t                            return positions.ShortOptionSecurity_fromOfx(this.getSecured());\n\t                        };\n\t                        return OptionsPosition;\n\t                    })(positions.BasePosition);\n\t                    positions.OptionsPosition = OptionsPosition;\n\t                    Aggregate_add(OptionsPosition, \"POSOPT\");\n\t                    Element_add(OptionsPosition, { name: \"SECURED\", order: 20, type: String, read: OptionsPosition.prototype.getSecured, write: OptionsPosition.prototype.setSecured });\n\t                })(positions = investment.positions || (investment.positions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='BasePosition'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var positions;\n\t                (function (positions) {\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    /**\n\t                     * Represents other types of positions.\n\t                     * @see \"Section 13.9.2.6.1, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var OtherPosition = (function (_super) {\n\t                        __extends(OtherPosition, _super);\n\t                        function OtherPosition() {\n\t                            _super.apply(this, arguments);\n\t                        }\n\t                        return OtherPosition;\n\t                    })(positions.BasePosition);\n\t                    positions.OtherPosition = OtherPosition;\n\t                    Aggregate_add(OtherPosition, \"POSOTHER\");\n\t                })(positions = investment.positions || (investment.positions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/Element_add'/>\n\t///<reference path='BasePosition'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var positions;\n\t                (function (positions) {\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var Element_add = ofx4js.meta.Element_add;\n\t                    /**\n\t                     * Represents a stock position.\n\t                     * @see \"Section 13.9.2.6.1, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var StockPosition = (function (_super) {\n\t                        __extends(StockPosition, _super);\n\t                        function StockPosition() {\n\t                            _super.apply(this, arguments);\n\t                        }\n\t                        /**\n\t                         * Gets the number of units in the financial insititution's street name.\n\t                         *\n\t                         * @return the number of units in the financial insititution's street name.\n\t                         */\n\t                        StockPosition.prototype.getUnitsStreet = function () {\n\t                            return this.unitsStreet;\n\t                        };\n\t                        /**\n\t                         * Sets the number of units in the financial insititution's street name.\n\t                         *\n\t                         * @param unitsStreet the number of units in the financial insititution's street name.\n\t                         */\n\t                        StockPosition.prototype.setUnitsStreet = function (unitsStreet) {\n\t                            this.unitsStreet = unitsStreet;\n\t                        };\n\t                        /**\n\t                         * Gets the number of units in the user's name.\n\t                         *\n\t                         * @return the number of units in the user's name.\n\t                         */\n\t                        StockPosition.prototype.getUnitsUser = function () {\n\t                            return this.unitsUser;\n\t                        };\n\t                        /**\n\t                         * Sets the number of units in the user's name.\n\t                         *\n\t                         * @param unitsUser the number of units in the user's name.\n\t                         */\n\t                        StockPosition.prototype.setUnitsUser = function (unitsUser) {\n\t                            this.unitsUser = unitsUser;\n\t                        };\n\t                        /**\n\t                         * Gets whether dividends are automatically reinvested.\n\t                         *\n\t                         * @return whether dividends are automatically reinvested\n\t                         */\n\t                        StockPosition.prototype.getReinvestDividends = function () {\n\t                            return this.reinvestDividends;\n\t                        };\n\t                        /**\n\t                         * Sets whether dividends are automatically reinvested.\n\t                         *\n\t                         * @param reinvestDividends whether dividends are automatically reinvested\n\t                         */\n\t                        StockPosition.prototype.setReinvestDividends = function (reinvestDividends) {\n\t                            this.reinvestDividends = reinvestDividends;\n\t                        };\n\t                        return StockPosition;\n\t                    })(positions.BasePosition);\n\t                    positions.StockPosition = StockPosition;\n\t                    Aggregate_add(StockPosition, \"POSSTOCK\");\n\t                    Element_add(StockPosition, { name: \"UNITSSTREET\", order: 20, type: Number, read: StockPosition.prototype.getUnitsStreet, write: StockPosition.prototype.setUnitsStreet });\n\t                    Element_add(StockPosition, { name: \"UNITSUSER\", order: 30, type: Number, read: StockPosition.prototype.getUnitsUser, write: StockPosition.prototype.setUnitsUser });\n\t                    Element_add(StockPosition, { name: \"REINVDIV\", order: 40, type: Boolean, read: StockPosition.prototype.getReinvestDividends, write: StockPosition.prototype.setReinvestDividends });\n\t                })(positions = investment.positions || (investment.positions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../seclist/SecurityId'/>\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/Element_add'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var transactions;\n\t                (function (transactions) {\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var Element_add = ofx4js.meta.Element_add;\n\t                    /**\n\t                     * Original currency aggregate (\"ORIGCURRENCY\"). For investment transactions in other currencies,\n\t                     * the financial institution can report the transaction as converted into the default currency\n\t                     * and then include this child aggregate to report what the original currency was and what the\n\t                     * rate of conversion was.\n\t                     * @see \"Section 5.2, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var OriginalCurrency = (function () {\n\t                        function OriginalCurrency() {\n\t                        }\n\t                        /**\n\t                         * Gets the rate of currency conversion. This is the ratio of \"CURDEF\" (the default currency in\n\t                         * the transaction response) to \"CURSYM\" (the original currency code below).\n\t                         *\n\t                         * @return the currency rate\n\t                         */\n\t                        OriginalCurrency.prototype.getCurrencyRate = function () {\n\t                            return this.currencyRate;\n\t                        };\n\t                        /**\n\t                         * Sets the rate of currency conversion. This is the ratio of \"CURDEF\" (the default currency in\n\t                         * the transaction response) to \"CURSYM\" (the original currency code below).\n\t                         *\n\t                         * @param currencyRate the currency rate\n\t                         */\n\t                        OriginalCurrency.prototype.setCurrencyRate = function (currencyRate) {\n\t                            this.currencyRate = currencyRate;\n\t                        };\n\t                        /**\n\t                         * Gets the ISO-4217 3-letter currency identifier of the original currency.\n\t                         * @see java.util.Currency#getCurrencyCode()\n\t                         *\n\t                         * @return the currency code\n\t                         */\n\t                        OriginalCurrency.prototype.getCurrencyCode = function () {\n\t                            return this.currencyCode;\n\t                        };\n\t                        /**\n\t                         * Sets the ISO-4217 3-letter currency identifier of the original currency.\n\t                         * @see java.util.Currency#getCurrencyCode()\n\t                         *\n\t                         * @param currencyCode the currency code\n\t                         */\n\t                        OriginalCurrency.prototype.setCurrencyCode = function (currencyCode) {\n\t                            this.currencyCode = currencyCode;\n\t                        };\n\t                        return OriginalCurrency;\n\t                    })();\n\t                    transactions.OriginalCurrency = OriginalCurrency;\n\t                    Aggregate_add(OriginalCurrency, \"ORIGCURRENCY\");\n\t                    Element_add(OriginalCurrency, { name: \"CURRATE\", required: true, order: 10, type: Number, read: OriginalCurrency.prototype.getCurrencyRate, write: OriginalCurrency.prototype.setCurrencyRate });\n\t                    Element_add(OriginalCurrency, { name: \"CURSYM\", required: true, order: 20, type: String, read: OriginalCurrency.prototype.getCurrencyCode, write: OriginalCurrency.prototype.setCurrencyCode });\n\t                })(transactions = investment.transactions || (investment.transactions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/Element_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../investment/accounts/SubAccountType'/>\n\t///<reference path='BaseBuyInvestmentTransaction'/>\n\t///<reference path='OriginalCurrency'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var transactions;\n\t                (function (transactions) {\n\t                    var SubAccountType_fromOfx = ofx4js.domain.data.investment.accounts.SubAccountType_fromOfx;\n\t                    var SecurityId = ofx4js.domain.data.seclist.SecurityId;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                    var Element_add = ofx4js.meta.Element_add;\n\t                    /**\n\t                     * Buy investment transaction aggregate (\"INVBUY\").\n\t                     * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var BuyInvestmentTransaction = (function () {\n\t                        function BuyInvestmentTransaction() {\n\t                        }\n\t                        /**\n\t                         * Gets the investment transaction child aggregate.\n\t                         *\n\t                         * @return the investment transaction child aggregate\n\t                         */\n\t                        BuyInvestmentTransaction.prototype.getInvestmentTransaction = function () {\n\t                            return this.investmentTransaction;\n\t                        };\n\t                        /**\n\t                         * Sets the investment transaction child aggregate.\n\t                         *\n\t                         * @param investmentTransaction the investment transaction child aggregate\n\t                         */\n\t                        BuyInvestmentTransaction.prototype.setInvestmentTransaction = function (investmentTransaction) {\n\t                            this.investmentTransaction = investmentTransaction;\n\t                        };\n\t                        /**\n\t                         * Gets the id of the security that was bought. This is a required field according to the OFX\n\t                         * spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the security id of the security that was bought\n\t                         */\n\t                        BuyInvestmentTransaction.prototype.getSecurityId = function () {\n\t                            return this.securityId;\n\t                        };\n\t                        /**\n\t                         * Sets the id of the security that was bought. This is a required field according to the OFX\n\t                         * spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param securityId the security id of the security that was bought\n\t                         */\n\t                        BuyInvestmentTransaction.prototype.setSecurityId = function (securityId) {\n\t                            this.securityId = securityId;\n\t                        };\n\t                        /**\n\t                         * Gets the number of units of the security that was bought. For security-based actions other\n\t                         * than stock splits, this is the quantity bought. For stocks, mutual funds, and others, this\n\t                         * is the number of shares. For bonds, this is the face value. For options, this is the number of\n\t                         * contacts. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the number of units purchased.\n\t                         */\n\t                        BuyInvestmentTransaction.prototype.getUnits = function () {\n\t                            return this.units;\n\t                        };\n\t                        /**\n\t                         * Sets the number of units of the security that was bought. For security-based actions other\n\t                         * than stock splits, this is the quantity bought. For stocks, mutual funds, and others, this\n\t                         * is the number of shares. For bonds, this is the face value. For options, this is the number of\n\t                         * contacts. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param units the number of units purchased.\n\t                         */\n\t                        BuyInvestmentTransaction.prototype.setUnits = function (units) {\n\t                            this.units = units;\n\t                        };\n\t                        /**\n\t                         * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n\t                         * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n\t                         * per contact) price. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the per unit price\n\t                         */\n\t                        BuyInvestmentTransaction.prototype.getUnitPrice = function () {\n\t                            return this.unitPrice;\n\t                        };\n\t                        /**\n\t                         * Sets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n\t                         * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n\t                         * per contact) price. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param unitPrice the per unit price\n\t                         */\n\t                        BuyInvestmentTransaction.prototype.setUnitPrice = function (unitPrice) {\n\t                            this.unitPrice = unitPrice;\n\t                        };\n\t                        /**\n\t                         * Gets the portion of the unit price that is attributed to the dealer markup. This is an\n\t                         * optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the per unit markeup price\n\t                         */\n\t                        BuyInvestmentTransaction.prototype.getMarkup = function () {\n\t                            return this.markup;\n\t                        };\n\t                        /**\n\t                         * Sets the portion of the unit price that is attributed to the dealer markup. This is an\n\t                         * optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param markup the per unit markeup price\n\t                         */\n\t                        BuyInvestmentTransaction.prototype.setMarkup = function (markup) {\n\t                            this.markup = markup;\n\t                        };\n\t                        /**\n\t                         * Gets the transaction commission for the purchase. This is an optional field according to the\n\t                         * OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the transaction commision\n\t                         */\n\t                        BuyInvestmentTransaction.prototype.getCommission = function () {\n\t                            return this.commission;\n\t                        };\n\t                        /**\n\t                         * Sets the transaction commission for the purchase. This is an optional field according to the\n\t                         * OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param commission the transaction commision\n\t                         */\n\t                        BuyInvestmentTransaction.prototype.setCommission = function (commission) {\n\t                            this.commission = commission;\n\t                        };\n\t                        /**\n\t                         * Gets the taxes for the purchase. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the transaction taxes\n\t                         */\n\t                        BuyInvestmentTransaction.prototype.getTaxes = function () {\n\t                            return this.taxes;\n\t                        };\n\t                        /**\n\t                         * Sets the taxes for the purchase. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param taxes the transaction taxes\n\t                         */\n\t                        BuyInvestmentTransaction.prototype.setTaxes = function (taxes) {\n\t                            this.taxes = taxes;\n\t                        };\n\t                        /**\n\t                         * Gets the fees for the purchase. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the transaction fees\n\t                         */\n\t                        BuyInvestmentTransaction.prototype.getFees = function () {\n\t                            return this.fees;\n\t                        };\n\t                        /**\n\t                         * Sets the fees for the purchase. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param fees the transaction fees\n\t                         */\n\t                        BuyInvestmentTransaction.prototype.setFees = function (fees) {\n\t                            this.fees = fees;\n\t                        };\n\t                        /**\n\t                         * Gets the load for the purchase. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the load\n\t                         */\n\t                        BuyInvestmentTransaction.prototype.getLoad = function () {\n\t                            return this.load;\n\t                        };\n\t                        /**\n\t                         * Sets the load for the purchase. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param load the load\n\t                         */\n\t                        BuyInvestmentTransaction.prototype.setLoad = function (load) {\n\t                            this.load = load;\n\t                        };\n\t                        /**\n\t                         * Gets the total for the purchase. Should be equal to\n\t                         * (units * (unitPrice + markup)) + (commision + fees + taxes) according to the OFX\n\t                         * spec. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the total\n\t                         */\n\t                        BuyInvestmentTransaction.prototype.getTotal = function () {\n\t                            return this.total;\n\t                        };\n\t                        /**\n\t                         * Sets the total for the purchase. Should be equal to\n\t                         * (units * (unitPrice + markup)) + (commision + fees + taxes) according to the OFX\n\t                         * spec. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param total the total\n\t                         */\n\t                        BuyInvestmentTransaction.prototype.setTotal = function (total) {\n\t                            this.total = total;\n\t                        };\n\t                        /**\n\t                         * Gets the currency code for the transaction. Only one of currency code or original currency\n\t                         * info should be set according to the OFX spec. If neither are set, means the default currency.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the currency code for the transaction.\n\t                         */\n\t                        BuyInvestmentTransaction.prototype.getCurrencyCode = function () {\n\t                            return this.currencyCode;\n\t                        };\n\t                        /**\n\t                         * Sets the currency code for the transaction. Only one of currency code or original currency\n\t                         * info may be set according to the OFX spec. If neither are set, means the default currency.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param currencyCode the currency code for the transaction.\n\t                         */\n\t                        BuyInvestmentTransaction.prototype.setCurrencyCode = function (currencyCode) {\n\t                            this.currencyCode = currencyCode;\n\t                            this.originalCurrencyInfo = null;\n\t                        };\n\t                        /**\n\t                         * Gets the original currency info for the transaction.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the original currency info for the transaction\n\t                         */\n\t                        BuyInvestmentTransaction.prototype.getOriginalCurrencyInfo = function () {\n\t                            return this.originalCurrencyInfo;\n\t                        };\n\t                        /**\n\t                         * Sets the original currency info for the transaction\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param originalCurrencyInfo the original currency info for the transaction\n\t                         */\n\t                        BuyInvestmentTransaction.prototype.setOriginalCurrencyInfo = function (originalCurrencyInfo) {\n\t                            this.originalCurrencyInfo = originalCurrencyInfo;\n\t                            this.currencyCode = null;\n\t                        };\n\t                        /**\n\t                          * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n\t                          * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                          *\n\t                          * @return the sub account type\n\t                          */\n\t                        BuyInvestmentTransaction.prototype.getSubAccountSecurity = function () {\n\t                            return this.subAccountSecurity;\n\t                        };\n\t                        /**\n\t                          * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n\t                          * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                          *\n\t                          * @param subAccountSecurity the sub account type\n\t                          */\n\t                        BuyInvestmentTransaction.prototype.setSubAccountSecurity = function (subAccountSecurity) {\n\t                            this.subAccountSecurity = subAccountSecurity;\n\t                        };\n\t                        /**\n\t                         * Gets the result of getSubAccountSecurity as one of the well-known types.\n\t                         *\n\t                         * @return the type of null if it wasn't one of the well known types.\n\t                         */\n\t                        BuyInvestmentTransaction.prototype.getSubAccountSecurityEnum = function () {\n\t                            return SubAccountType_fromOfx(this.getSubAccountSecurity());\n\t                        };\n\t                        /**\n\t                         * Gets the sub account type that the money came from. (e.g. CASH, MARGIN, SHORT, OTHER).\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the sub account fund\n\t                         */\n\t                        BuyInvestmentTransaction.prototype.getSubAccountFund = function () {\n\t                            return this.subAccountFund;\n\t                        };\n\t                        /**\n\t                         * Sets the sub account type that the money came from. (e.g. CASH, MARGIN, SHORT, OTHER).\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param subAcctFund the sub account fund\n\t                         */\n\t                        BuyInvestmentTransaction.prototype.setSubAccountFund = function (subAcctFund) {\n\t                            this.subAccountFund = subAcctFund;\n\t                        };\n\t                        /**\n\t                         * Gets the result of getSubAccountFund as one of the well-known types.\n\t                         *\n\t                         * @return the type or null if it wasn't one of the well known types.\n\t                         */\n\t                        BuyInvestmentTransaction.prototype.getSubAccountFundEnum = function () {\n\t                            return SubAccountType_fromOfx(this.getSubAccountFund());\n\t                        };\n\t                        return BuyInvestmentTransaction;\n\t                    })();\n\t                    transactions.BuyInvestmentTransaction = BuyInvestmentTransaction;\n\t                    Aggregate_add(BuyInvestmentTransaction, \"INVBUY\");\n\t                    ChildAggregate_add(BuyInvestmentTransaction, { order: 10, type: transactions.InvestmentTransaction, read: BuyInvestmentTransaction.prototype.getInvestmentTransaction, write: BuyInvestmentTransaction.prototype.setInvestmentTransaction });\n\t                    ChildAggregate_add(BuyInvestmentTransaction, { required: true, order: 20, type: SecurityId, read: BuyInvestmentTransaction.prototype.getSecurityId, write: BuyInvestmentTransaction.prototype.setSecurityId });\n\t                    Element_add(BuyInvestmentTransaction, { name: \"UNITS\", required: true, order: 30, type: Number, read: BuyInvestmentTransaction.prototype.getUnits, write: BuyInvestmentTransaction.prototype.setUnits });\n\t                    Element_add(BuyInvestmentTransaction, { name: \"UNITPRICE\", required: true, order: 40, type: Number, read: BuyInvestmentTransaction.prototype.getUnitPrice, write: BuyInvestmentTransaction.prototype.setUnitPrice });\n\t                    Element_add(BuyInvestmentTransaction, { name: \"MARKUP\", order: 50, type: Number, read: BuyInvestmentTransaction.prototype.getMarkup, write: BuyInvestmentTransaction.prototype.setMarkup });\n\t                    Element_add(BuyInvestmentTransaction, { name: \"COMMISSION\", order: 60, type: Number, read: BuyInvestmentTransaction.prototype.getCommission, write: BuyInvestmentTransaction.prototype.setCommission });\n\t                    Element_add(BuyInvestmentTransaction, { name: \"TAXES\", order: 70, type: Number, read: BuyInvestmentTransaction.prototype.getTaxes, write: BuyInvestmentTransaction.prototype.setTaxes });\n\t                    Element_add(BuyInvestmentTransaction, { name: \"FEES\", order: 80, type: Number, read: BuyInvestmentTransaction.prototype.getFees, write: BuyInvestmentTransaction.prototype.setFees });\n\t                    Element_add(BuyInvestmentTransaction, { name: \"LOAD\", order: 90, type: Number, read: BuyInvestmentTransaction.prototype.getLoad, write: BuyInvestmentTransaction.prototype.setLoad });\n\t                    Element_add(BuyInvestmentTransaction, { name: \"TOTAL\", required: true, order: 100, type: Number, read: BuyInvestmentTransaction.prototype.getTotal, write: BuyInvestmentTransaction.prototype.setTotal });\n\t                    Element_add(BuyInvestmentTransaction, { name: \"CURRENCY\", order: 110, type: String, read: BuyInvestmentTransaction.prototype.getCurrencyCode, write: BuyInvestmentTransaction.prototype.setCurrencyCode });\n\t                    ChildAggregate_add(BuyInvestmentTransaction, { order: 120, type: transactions.OriginalCurrency, read: BuyInvestmentTransaction.prototype.getOriginalCurrencyInfo, write: BuyInvestmentTransaction.prototype.setOriginalCurrencyInfo });\n\t                    Element_add(BuyInvestmentTransaction, { name: \"SUBACCTSEC\", order: 130, type: String, read: BuyInvestmentTransaction.prototype.getSubAccountSecurity, write: BuyInvestmentTransaction.prototype.setSubAccountSecurity });\n\t                    Element_add(BuyInvestmentTransaction, { name: \"SUBACCTFUND\", order: 140, type: String, read: BuyInvestmentTransaction.prototype.getSubAccountFund, write: BuyInvestmentTransaction.prototype.setSubAccountFund });\n\t                })(transactions = investment.transactions || (investment.transactions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../investment/accounts/SubAccountType'/>\n\t///<reference path='../../seclist/SecurityId'/>\n\t///<reference path='BaseInvestmentTransaction'/>\n\t///<reference path='TransactionWithSecurity'/>\n\t///<reference path='BuyInvestmentTransaction'/>\n\t///<reference path='TransactionType'/>\n\t///<reference path='InvestmentTransaction'/>\n\t///<reference path='OriginalCurrency'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var transactions;\n\t                (function (transactions) {\n\t                    var SubAccountType_fromOfx = ofx4js.domain.data.investment.accounts.SubAccountType_fromOfx;\n\t                    var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                    /**\n\t                     * Base class for all investment transactions for buying securities.\n\t                     * <br>\n\t                     * This class exposes a read-only view of the flattened aggregates that are\n\t                     * common to all buy investment transactions as a convenience to application\n\t                     * developers who may not find the ofx aggregation model intuitive.\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var BaseBuyInvestmentTransaction = (function (_super) {\n\t                        __extends(BaseBuyInvestmentTransaction, _super);\n\t                        function BaseBuyInvestmentTransaction(transactionType) {\n\t                            _super.call(this, transactionType);\n\t                        }\n\t                        /**\n\t                         * Gets the buy investment transaction child aggregate.\n\t                         *\n\t                         * @return the buy investment transaction child aggregate\n\t                         */\n\t                        BaseBuyInvestmentTransaction.prototype.getBuyInvestment = function () {\n\t                            return this.buyInvestment;\n\t                        };\n\t                        /**\n\t                         * Sets the buy investment transaction child aggregate.\n\t                         *\n\t                         * @param buyInvestment the buy investment transaction child aggregate\n\t                         */\n\t                        BaseBuyInvestmentTransaction.prototype.setBuyInvestment = function (buyInvestment) {\n\t                            this.buyInvestment = buyInvestment;\n\t                        };\n\t                        /**\n\t                         * Gets the investment transaction aggregate.\n\t                         *\n\t                         * @return the investment transaction aggregate\n\t                         */\n\t                        // @Overridden\n\t                        BaseBuyInvestmentTransaction.prototype.getInvestmentTransaction = function () {\n\t                            return this.getBuyInvestment().getInvestmentTransaction();\n\t                        };\n\t                        /**\n\t                         * Gets the id of the security that was bought. This is a required field according to the OFX\n\t                         * spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the security id of the security that was bought\n\t                         */\n\t                        BaseBuyInvestmentTransaction.prototype.getSecurityId = function () {\n\t                            return this.getBuyInvestment().getSecurityId();\n\t                        };\n\t                        /**\n\t                         * Gets the number of units of the security that was bought. For security-based actions other\n\t                         * than stock splits, this is the quantity bought. For stocks, mutual funds, and others, this\n\t                         * is the number of shares. For bonds, this is the face value. For options, this is the number of\n\t                         * contacts. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the number of units purchased.\n\t                         */\n\t                        BaseBuyInvestmentTransaction.prototype.getUnits = function () {\n\t                            return this.getBuyInvestment().getUnits();\n\t                        };\n\t                        /**\n\t                         * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n\t                         * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n\t                         * per contact) price. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the per unit price\n\t                         */\n\t                        BaseBuyInvestmentTransaction.prototype.getUnitPrice = function () {\n\t                            return this.getBuyInvestment().getUnitPrice();\n\t                        };\n\t                        /**\n\t                         * Gets the portion of the unit price that is attributed to the dealer markup. This is an\n\t                         * optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the per unit markeup price\n\t                         */\n\t                        BaseBuyInvestmentTransaction.prototype.getMarkup = function () {\n\t                            return this.getBuyInvestment().getMarkup();\n\t                        };\n\t                        /**\n\t                         * Gets the transaction commission for the purchase. This is an optional field according to the\n\t                         * OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the transaction commision\n\t                         */\n\t                        BaseBuyInvestmentTransaction.prototype.getCommission = function () {\n\t                            return this.getBuyInvestment().getCommission();\n\t                        };\n\t                        /**\n\t                         * Gets the taxes for the purchase. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the transaction taxes\n\t                         */\n\t                        BaseBuyInvestmentTransaction.prototype.getTaxes = function () {\n\t                            return this.getBuyInvestment().getTaxes();\n\t                        };\n\t                        /**\n\t                         * Gets the fees for the purchase. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the transaction fees\n\t                         */\n\t                        BaseBuyInvestmentTransaction.prototype.getFees = function () {\n\t                            return this.getBuyInvestment().getFees();\n\t                        };\n\t                        /**\n\t                         * Gets the load for the purchase. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the load\n\t                         */\n\t                        BaseBuyInvestmentTransaction.prototype.getLoad = function () {\n\t                            return this.getBuyInvestment().getLoad();\n\t                        };\n\t                        /**\n\t                         * Gets the total for the purchase. Should be equal to\n\t                         * (units * (unitPrice + markup)) + (commision + fees + load + taxes) according to the OFX\n\t                         * spec. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the total\n\t                         */\n\t                        BaseBuyInvestmentTransaction.prototype.getTotal = function () {\n\t                            return this.getBuyInvestment().getTotal();\n\t                        };\n\t                        /**\n\t                         * Gets the currency code for the transaction. Only one of currency code or original currency\n\t                         * info should be set according to the OFX spec. If neither are set, means the default currency.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the currency code for the transaction\n\t                         */\n\t                        BaseBuyInvestmentTransaction.prototype.getCurrencyCode = function () {\n\t                            return this.getBuyInvestment().getCurrencyCode();\n\t                        };\n\t                        /**\n\t                         * Gets the original currency info for the transaction.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the original currency info for the transaction\n\t                         */\n\t                        BaseBuyInvestmentTransaction.prototype.getOriginalCurrencyInfo = function () {\n\t                            return this.getBuyInvestment().getOriginalCurrencyInfo();\n\t                        };\n\t                        /**\n\t                         * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the sub account type\n\t                         */\n\t                        BaseBuyInvestmentTransaction.prototype.getSubAccountSecurity = function () {\n\t                            return this.getBuyInvestment().getSubAccountSecurity();\n\t                        };\n\t                        /**\n\t                         * Gets the result of getSubAccountSecurity as one of the well-known types.\n\t                         *\n\t                         * @return the type of null if it wasn't one of the well known types\n\t                         */\n\t                        BaseBuyInvestmentTransaction.prototype.getSubAccountSecurityEnum = function () {\n\t                            return SubAccountType_fromOfx(this.getSubAccountSecurity());\n\t                        };\n\t                        /**\n\t                         * Gets the sub account type that the money came from. (e.g. CASH, MARGIN, SHORT, OTHER).\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the sub account fund\n\t                         */\n\t                        BaseBuyInvestmentTransaction.prototype.getSubAccountFund = function () {\n\t                            return this.getBuyInvestment().getSubAccountFund();\n\t                        };\n\t                        /**\n\t                         * Gets the result of getSubAccountFund as one of the well-known types.\n\t                         *\n\t                         * @return the type or null if it wasn't one of the well known types.\n\t                         */\n\t                        BaseBuyInvestmentTransaction.prototype.getSubAccountFundEnum = function () {\n\t                            return SubAccountType_fromOfx(this.getSubAccountFund());\n\t                        };\n\t                        return BaseBuyInvestmentTransaction;\n\t                    })(transactions.BaseInvestmentTransaction);\n\t                    transactions.BaseBuyInvestmentTransaction = BaseBuyInvestmentTransaction;\n\t                    ChildAggregate_add(BaseBuyInvestmentTransaction, { order: 10, type: transactions.BuyInvestmentTransaction, read: BaseBuyInvestmentTransaction.prototype.getBuyInvestment, write: BaseBuyInvestmentTransaction.prototype.setBuyInvestment });\n\t                })(transactions = investment.transactions || (investment.transactions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../../../meta/Element_add'/>\n\t///<reference path='../../investment/accounts/SubAccountType'/>\n\t///<reference path='../../investment/positions/Inv401KSource'/>\n\t///<reference path='../../seclist/SecurityId'/>\n\t///<reference path='InvestmentTransaction'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var transactions;\n\t                (function (transactions) {\n\t                    var SubAccountType_fromOfx = ofx4js.domain.data.investment.accounts.SubAccountType_fromOfx;\n\t                    var Inv401KSource_fromOfx = ofx4js.domain.data.investment.positions.Inv401KSource_fromOfx;\n\t                    var SecurityId = ofx4js.domain.data.seclist.SecurityId;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                    var Element_add = ofx4js.meta.Element_add;\n\t                    /**\n\t                     * Sell investment transaction aggregate (\"INVSELL\").\n\t                     * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var SellInvestmentTransaction = (function () {\n\t                        function SellInvestmentTransaction() {\n\t                        }\n\t                        /**\n\t                         * Gets the investment transaction child aggregate.\n\t                         *\n\t                         * @return the investment transaction child aggregate\n\t                         */\n\t                        SellInvestmentTransaction.prototype.getInvestmentTransaction = function () {\n\t                            return this.investmentTransaction;\n\t                        };\n\t                        /**\n\t                         * Sets the investment transaction child aggregate.\n\t                         *\n\t                         * @param investmentTransaction the investment transaction child aggregate\n\t                         */\n\t                        SellInvestmentTransaction.prototype.setInvestmentTransaction = function (investmentTransaction) {\n\t                            this.investmentTransaction = investmentTransaction;\n\t                        };\n\t                        /**\n\t                         * Gets the id of the security that was sold. This is a required field according to the OFX\n\t                         * spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the security id of the security that was sold\n\t                         */\n\t                        SellInvestmentTransaction.prototype.getSecurityId = function () {\n\t                            return this.securityId;\n\t                        };\n\t                        /**\n\t                         * Sets the id of the security that was sold. This is a required field according to the OFX\n\t                         * spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param securityId the security id of the security that was sold\n\t                         */\n\t                        SellInvestmentTransaction.prototype.setSecurityId = function (securityId) {\n\t                            this.securityId = securityId;\n\t                        };\n\t                        /**\n\t                         * Gets the number of units of the security that was sold. For security-based actions other\n\t                         * than stock splits, this is the quantity sold. For stocks, mutual funds, and others, this\n\t                         * is the number of shares. For bonds, this is the face value. For options, this is the number of\n\t                         * contacts. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the number of units sold\n\t                         */\n\t                        SellInvestmentTransaction.prototype.getUnits = function () {\n\t                            return this.units;\n\t                        };\n\t                        /**\n\t                         * Sets the number of units of the security that was sold. For security-based actions other\n\t                         * than stock splits, this is the quantity sold. For stocks, mutual funds, and others, this\n\t                         * is the number of shares. For bonds, this is the face value. For options, this is the number of\n\t                         * contacts. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param units the number of units sold\n\t                         */\n\t                        SellInvestmentTransaction.prototype.setUnits = function (units) {\n\t                            this.units = units;\n\t                        };\n\t                        /**\n\t                         * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n\t                         * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n\t                         * per contact) price. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the per unit price\n\t                         */\n\t                        SellInvestmentTransaction.prototype.getUnitPrice = function () {\n\t                            return this.unitPrice;\n\t                        };\n\t                        /**\n\t                         * Sets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n\t                         * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n\t                         * per contact) price. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param unitPrice the per unit price\n\t                         */\n\t                        SellInvestmentTransaction.prototype.setUnitPrice = function (unitPrice) {\n\t                            this.unitPrice = unitPrice;\n\t                        };\n\t                        /**\n\t                         * Gets the portion of the unit price that is attributed to the dealer markdown. This is an\n\t                         * optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the per unit markedown price\n\t                         */\n\t                        SellInvestmentTransaction.prototype.getMarkdown = function () {\n\t                            return this.markdown;\n\t                        };\n\t                        /**\n\t                         * Sets the portion of the unit price that is attributed to the dealer markdown. This is an\n\t                         * optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param markdown the per unit markedown price\n\t                         */\n\t                        SellInvestmentTransaction.prototype.setMarkdown = function (markdown) {\n\t                            this.markdown = markdown;\n\t                        };\n\t                        /**\n\t                         * Gets the transaction commission for the sale. This is an optional field according to the\n\t                         * OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the transaction commision\n\t                         */\n\t                        SellInvestmentTransaction.prototype.getCommission = function () {\n\t                            return this.commission;\n\t                        };\n\t                        /**\n\t                         * Sets the transaction commission for the sale. This is an optional field according to the\n\t                         * OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param commission the transaction commision\n\t                         */\n\t                        SellInvestmentTransaction.prototype.setCommission = function (commission) {\n\t                            this.commission = commission;\n\t                        };\n\t                        /**\n\t                         * Gets the taxes for the sale. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the transaction taxes\n\t                         */\n\t                        SellInvestmentTransaction.prototype.getTaxes = function () {\n\t                            return this.taxes;\n\t                        };\n\t                        /**\n\t                         * Sets the taxes for the sale. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param taxes the transaction taxes\n\t                         */\n\t                        SellInvestmentTransaction.prototype.setTaxes = function (taxes) {\n\t                            this.taxes = taxes;\n\t                        };\n\t                        /**\n\t                         * Gets the fees for the sale. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the transaction fees\n\t                         */\n\t                        SellInvestmentTransaction.prototype.getFees = function () {\n\t                            return this.fees;\n\t                        };\n\t                        /**\n\t                         * Sets the fees for the sale. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param fees the transaction fees\n\t                         */\n\t                        SellInvestmentTransaction.prototype.setFees = function (fees) {\n\t                            this.fees = fees;\n\t                        };\n\t                        /**\n\t                         * Gets the load for the sale. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the load\n\t                         */\n\t                        SellInvestmentTransaction.prototype.getLoad = function () {\n\t                            return this.load;\n\t                        };\n\t                        /**\n\t                         * Sets the load for the sale. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param load the load\n\t                         */\n\t                        SellInvestmentTransaction.prototype.setLoad = function (load) {\n\t                            this.load = load;\n\t                        };\n\t                        /**\n\t                         * Gets the withholding for the sale. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the withholding\n\t                         */\n\t                        SellInvestmentTransaction.prototype.getWithholding = function () {\n\t                            return this.withholding;\n\t                        };\n\t                        /**\n\t                         * Sets the withholding for the sale. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param withholding the withholding\n\t                         */\n\t                        SellInvestmentTransaction.prototype.setWithholding = function (withholding) {\n\t                            this.withholding = withholding;\n\t                        };\n\t                        /**\n\t                         * Gets whether the sale was tax exempt. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return whether the transaction was tax exempt\n\t                         */\n\t                        SellInvestmentTransaction.prototype.getTaxExempt = function () {\n\t                            return this.taxExempt;\n\t                        };\n\t                        /**\n\t                         * Sets whether the sale was tax exempt. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param taxExempt whether the transaction was tax exempt\n\t                         */\n\t                        SellInvestmentTransaction.prototype.setTaxExempt = function (taxExempt) {\n\t                            this.taxExempt = taxExempt;\n\t                        };\n\t                        /**\n\t                         * Gets the total for the sale. Should be equal to\n\t                         * (units * (unitPrice + markdown)) + (commision + fees + load + taxes + penalty + withholding +\n\t                         * statewithholding) according to the OFX spec. This is a required field according to the OFX\n\t                         * spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the total\n\t                         */\n\t                        SellInvestmentTransaction.prototype.getTotal = function () {\n\t                            return this.total;\n\t                        };\n\t                        /**\n\t                         * Sets the total for the sale. Should be equal to\n\t                         * (units * (unitPrice + markdown)) + (commision + fees + load + taxes + penalty + withholding +\n\t                         * statewithholding) according to the OFX spec. This is a required field according to the OFX\n\t                         * spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param total the total\n\t                         */\n\t                        SellInvestmentTransaction.prototype.setTotal = function (total) {\n\t                            this.total = total;\n\t                        };\n\t                        /**\n\t                         * Gets the gain sale. This is aan optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the gain for the sale\n\t                         */\n\t                        SellInvestmentTransaction.prototype.getGain = function () {\n\t                            return this.gain;\n\t                        };\n\t                        /**\n\t                         * Sets the gain sale. This is aan optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param gain the gain for the sale\n\t                         */\n\t                        SellInvestmentTransaction.prototype.setGain = function (gain) {\n\t                            this.gain = gain;\n\t                        };\n\t                        /**\n\t                         * Gets the currency code for the transaction. Only one of currency code or original currency\n\t                         * code should be set according to the OFX spec. If neither are set, means the default currency.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the currency code for the transaction\n\t                         */\n\t                        SellInvestmentTransaction.prototype.getCurrencyCode = function () {\n\t                            return this.currencyCode;\n\t                        };\n\t                        /**\n\t                         * sets the currency code for the transaction. Only one of currency code or original currency\n\t                         * code should be set according to the OFX spec. If neither are set, means the default currency.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param currencyCode the currency code for the transaction\n\t                         */\n\t                        SellInvestmentTransaction.prototype.setCurrencyCode = function (currencyCode) {\n\t                            this.currencyCode = currencyCode;\n\t                            this.originalCurrencyInfo = null;\n\t                        };\n\t                        /**\n\t                         * Gets the original currency info for the transaction.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the original currency info for the transaction\n\t                         */\n\t                        SellInvestmentTransaction.prototype.getOriginalCurrencyInfo = function () {\n\t                            return this.originalCurrencyInfo;\n\t                        };\n\t                        /**\n\t                         * Sets the original currency info for the transaction.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param originalCurrencyInfo the original currency info for the transaction\n\t                         */\n\t                        SellInvestmentTransaction.prototype.setOriginalCurrencyInfo = function (originalCurrencyInfo) {\n\t                            this.originalCurrencyInfo = originalCurrencyInfo;\n\t                            this.currencyCode = null;\n\t                        };\n\t                        /**\n\t                         * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the sub account type\n\t                         */\n\t                        SellInvestmentTransaction.prototype.getSubAccountSecurity = function () {\n\t                            return this.subAccountSecurity;\n\t                        };\n\t                        /**\n\t                         * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param subAccountSecurity the sub account type\n\t                         */\n\t                        SellInvestmentTransaction.prototype.setSubAccountSecurity = function (subAccountSecurity) {\n\t                            this.subAccountSecurity = subAccountSecurity;\n\t                        };\n\t                        /**\n\t                         * Gets the result of getSubAccountSecurity as one of the well-known types.\n\t                         *\n\t                         * @return the type of null if it wasn't one of the well known types.\n\t                         */\n\t                        SellInvestmentTransaction.prototype.getSubAccountSecurityEnum = function () {\n\t                            return SubAccountType_fromOfx(this.getSubAccountSecurity());\n\t                        };\n\t                        /**\n\t                         * Gets the sub account type that the security is being transfered from\n\t                         * (e.g. CASH, MARGIN, SHORT, OTHER).\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the sub account fund\n\t                         */\n\t                        SellInvestmentTransaction.prototype.getSubAccountFund = function () {\n\t                            return this.subAccountFund;\n\t                        };\n\t                        /**\n\t                         * Sets the sub account type that the security is being transfered from\n\t                         * (e.g. CASH, MARGIN, SHORT, OTHER).\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param subAccountFund the sub account fund\n\t                         */\n\t                        SellInvestmentTransaction.prototype.setSubAccountFund = function (subAccountFund) {\n\t                            this.subAccountFund = subAccountFund;\n\t                        };\n\t                        /**\n\t                         * Gets the result of getSubAccountFund as one of the well-known types.\n\t                         *\n\t                         * @return the type of null if it wasn't one of the well known types\n\t                         */\n\t                        SellInvestmentTransaction.prototype.getSubAccountFundEnum = function () {\n\t                            return SubAccountType_fromOfx(this.getSubAccountFund());\n\t                        };\n\t                        /**\n\t                         * Gets the loan id if this transaction was due to a loan or loan repayment on a 401k. This is an\n\t                         * optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the loan id\n\t                         */\n\t                        SellInvestmentTransaction.prototype.getLoanId = function () {\n\t                            return this.loanId;\n\t                        };\n\t                        /**\n\t                         * Sets the loan id if this transaction was due to a loan or loan repayment on a 401k. This is an\n\t                         * optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param loanId the loan id\n\t                         */\n\t                        SellInvestmentTransaction.prototype.setLoanId = function (loanId) {\n\t                            this.loanId = loanId;\n\t                        };\n\t                        /**\n\t                         * Gets the state withholding for the sale. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the state withholding\n\t                         */\n\t                        SellInvestmentTransaction.prototype.getStateWithholding = function () {\n\t                            return this.stateWithholding;\n\t                        };\n\t                        /**\n\t                         * Sets the state withholding for the sale. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param stateWithholding the state withholding\n\t                         */\n\t                        SellInvestmentTransaction.prototype.setStateWithholding = function (stateWithholding) {\n\t                            this.stateWithholding = stateWithholding;\n\t                        };\n\t                        /**\n\t                         * Gets the penalty for the sale. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the state withholding\n\t                         */\n\t                        SellInvestmentTransaction.prototype.getPenalty = function () {\n\t                            return this.penalty;\n\t                        };\n\t                        /**\n\t                         * Sets the penalty for the sale. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param penalty the state withholding\n\t                         */\n\t                        SellInvestmentTransaction.prototype.setPenalty = function (penalty) {\n\t                            this.penalty = penalty;\n\t                        };\n\t                        /**\n\t                         * Gets the 401K source for the sale. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n\t                         * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n\t                         * according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the 401k source\n\t                         */\n\t                        SellInvestmentTransaction.prototype.get401kSource = function () {\n\t                            return this.inv401kSource;\n\t                        };\n\t                        /**\n\t                         * Sets the 401K source for the sale. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n\t                         * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n\t                         * according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param inv401kSource the 401k source\n\t                         */\n\t                        SellInvestmentTransaction.prototype.set401kSource = function (inv401kSource) {\n\t                            this.inv401kSource = inv401kSource;\n\t                        };\n\t                        /**\n\t                         * Gets the 401k source as one of the well-known types.\n\t                         *\n\t                         * @return the 401k source or null if its not one of the well-known types\n\t                         */\n\t                        SellInvestmentTransaction.prototype.get401kSourceEnum = function () {\n\t                            return Inv401KSource_fromOfx(this.get401kSource());\n\t                        };\n\t                        return SellInvestmentTransaction;\n\t                    })();\n\t                    transactions.SellInvestmentTransaction = SellInvestmentTransaction;\n\t                    Aggregate_add(SellInvestmentTransaction, \"INVSELL\");\n\t                    ChildAggregate_add(SellInvestmentTransaction, { order: 10, type: transactions.InvestmentTransaction, read: SellInvestmentTransaction.prototype.getInvestmentTransaction, write: SellInvestmentTransaction.prototype.setInvestmentTransaction });\n\t                    ChildAggregate_add(SellInvestmentTransaction, { required: true, order: 20, type: SecurityId, read: SellInvestmentTransaction.prototype.getSecurityId, write: SellInvestmentTransaction.prototype.setSecurityId });\n\t                    Element_add(SellInvestmentTransaction, { name: \"UNITS\", required: true, order: 30, type: Number, read: SellInvestmentTransaction.prototype.getUnits, write: SellInvestmentTransaction.prototype.setUnits });\n\t                    Element_add(SellInvestmentTransaction, { name: \"UNITPRICE\", required: true, order: 40, type: Number, read: SellInvestmentTransaction.prototype.getUnitPrice, write: SellInvestmentTransaction.prototype.setUnitPrice });\n\t                    Element_add(SellInvestmentTransaction, { name: \"MARKDOWN\", order: 50, type: Number, read: SellInvestmentTransaction.prototype.getMarkdown, write: SellInvestmentTransaction.prototype.setMarkdown });\n\t                    Element_add(SellInvestmentTransaction, { name: \"COMMISSION\", order: 60, type: Number, read: SellInvestmentTransaction.prototype.getCommission, write: SellInvestmentTransaction.prototype.setCommission });\n\t                    Element_add(SellInvestmentTransaction, { name: \"TAXES\", order: 70, type: Number, read: SellInvestmentTransaction.prototype.getTaxes, write: SellInvestmentTransaction.prototype.setTaxes });\n\t                    Element_add(SellInvestmentTransaction, { name: \"FEES\", order: 80, type: Number, read: SellInvestmentTransaction.prototype.getFees, write: SellInvestmentTransaction.prototype.setFees });\n\t                    Element_add(SellInvestmentTransaction, { name: \"LOAD\", order: 90, type: Number, read: SellInvestmentTransaction.prototype.getLoad, write: SellInvestmentTransaction.prototype.setLoad });\n\t                    Element_add(SellInvestmentTransaction, { name: \"WITHHOLDING\", order: 93, type: Number, read: SellInvestmentTransaction.prototype.getWithholding, write: SellInvestmentTransaction.prototype.setWithholding });\n\t                    Element_add(SellInvestmentTransaction, { name: \"TAXEXEMPT\", order: 97, type: Boolean, read: SellInvestmentTransaction.prototype.getTaxExempt, write: SellInvestmentTransaction.prototype.setTaxExempt });\n\t                    Element_add(SellInvestmentTransaction, { name: \"TOTAL\", required: true, order: 100, type: Number, read: SellInvestmentTransaction.prototype.getTotal, write: SellInvestmentTransaction.prototype.setTotal });\n\t                    Element_add(SellInvestmentTransaction, { name: \"GAIN\", order: 105, type: Number, read: SellInvestmentTransaction.prototype.getGain, write: SellInvestmentTransaction.prototype.setGain });\n\t                    Element_add(SellInvestmentTransaction, { name: \"CURRENCY\", order: 110, type: String, read: SellInvestmentTransaction.prototype.getCurrencyCode, write: SellInvestmentTransaction.prototype.setCurrencyCode });\n\t                    Element_add(SellInvestmentTransaction, { name: \"ORIGCURRENCY\", order: 120, type: transactions.OriginalCurrency, read: SellInvestmentTransaction.prototype.getOriginalCurrencyInfo, write: SellInvestmentTransaction.prototype.setOriginalCurrencyInfo });\n\t                    Element_add(SellInvestmentTransaction, { name: \"SUBACCTSEC\", order: 130, type: String, read: SellInvestmentTransaction.prototype.getSubAccountSecurity, write: SellInvestmentTransaction.prototype.setSubAccountSecurity });\n\t                    Element_add(SellInvestmentTransaction, { name: \"SUBACCTFUND\", order: 140, type: String, read: SellInvestmentTransaction.prototype.getSubAccountFund, write: SellInvestmentTransaction.prototype.setSubAccountFund });\n\t                    Element_add(SellInvestmentTransaction, { name: \"LOANID\", order: 150, type: String, read: SellInvestmentTransaction.prototype.getLoanId, write: SellInvestmentTransaction.prototype.setLoanId });\n\t                    Element_add(SellInvestmentTransaction, { name: \"STATEWITHHOLDING\", order: 160, type: Number, read: SellInvestmentTransaction.prototype.getStateWithholding, write: SellInvestmentTransaction.prototype.setStateWithholding });\n\t                    Element_add(SellInvestmentTransaction, { name: \"PENALTY\", order: 170, type: Number, read: SellInvestmentTransaction.prototype.getPenalty, write: SellInvestmentTransaction.prototype.setPenalty });\n\t                    Element_add(SellInvestmentTransaction, { name: \"INV401KSOURCE\", order: 180, type: String, read: SellInvestmentTransaction.prototype.get401kSource, write: SellInvestmentTransaction.prototype.set401kSource });\n\t                })(transactions = investment.transactions || (investment.transactions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../investment/positions/Inv401KSource'/>\n\t///<reference path='../../investment/accounts/SubAccountType'/>\n\t///<reference path='../../seclist/SecurityId'/>\n\t///<reference path='BaseInvestmentTransaction'/>\n\t///<reference path='TransactionWithSecurity'/>\n\t///<reference path='SellInvestmentTransaction'/>\n\t///<reference path='InvestmentTransaction'/>\n\t///<reference path='OriginalCurrency'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var transactions;\n\t                (function (transactions) {\n\t                    var Inv401KSource_fromOfx = ofx4js.domain.data.investment.positions.Inv401KSource_fromOfx;\n\t                    var SubAccountType_fromOfx = ofx4js.domain.data.investment.accounts.SubAccountType_fromOfx;\n\t                    var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                    /**\n\t                     * Base class for all investment transactions for selling securities.\n\t                     * <br>\n\t                     * This class exposes a read-only view of the flattened aggregates that are\n\t                     * common to all sell investment transactions as a convenience to application\n\t                     * developers who may not find the ofx aggregation model intuitive.\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var BaseSellInvestmentTransaction = (function (_super) {\n\t                        __extends(BaseSellInvestmentTransaction, _super);\n\t                        function BaseSellInvestmentTransaction(transactionType) {\n\t                            _super.call(this, transactionType);\n\t                        }\n\t                        /**\n\t                         * Gets the sell investment transaction child aggregate.\n\t                         *\n\t                         * @return the sell investment transaction child aggregate\n\t                         */\n\t                        // @Override\n\t                        BaseSellInvestmentTransaction.prototype.getSellInvestment = function () {\n\t                            return this.sellInvestment;\n\t                        };\n\t                        /**\n\t                         * Sets the sell investment transaction child aggregate.\n\t                         *\n\t                         * @param sellInvestment the sell investment transaction child aggregate\n\t                         */\n\t                        BaseSellInvestmentTransaction.prototype.setSellInvestment = function (sellInvestment) {\n\t                            this.sellInvestment = sellInvestment;\n\t                        };\n\t                        /**\n\t                         * Gets the investment transaction aggregate.\n\t                         *\n\t                         * @return the investment transaction aggregate\n\t                         */\n\t                        // @Overridden\n\t                        BaseSellInvestmentTransaction.prototype.getInvestmentTransaction = function () {\n\t                            return this.getSellInvestment().getInvestmentTransaction();\n\t                        };\n\t                        /**\n\t                         * Gets the id of the security that was sold. This is a required field according to the OFX\n\t                         * spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the security id of the security that was bought\n\t                         */\n\t                        BaseSellInvestmentTransaction.prototype.getSecurityId = function () {\n\t                            return this.getSellInvestment().getSecurityId();\n\t                        };\n\t                        /**\n\t                         * Gets the number of units of the security that was sold. For security-based actions other\n\t                         * than stock splits, this is the quantity sold. For stocks, mutual funds, and others, this\n\t                         * is the number of shares. For bonds, this is the face value. For options, this is the number of\n\t                         * contacts. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the number of units purchased.\n\t                         */\n\t                        BaseSellInvestmentTransaction.prototype.getUnits = function () {\n\t                            return this.getSellInvestment().getUnits();\n\t                        };\n\t                        /**\n\t                         * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n\t                         * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n\t                         * per contact) price. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the per unit price\n\t                         */\n\t                        BaseSellInvestmentTransaction.prototype.getUnitPrice = function () {\n\t                            return this.getSellInvestment().getUnitPrice();\n\t                        };\n\t                        /**\n\t                         * Gets the portion of the unit price that is attributed to the dealer markdown. This is an\n\t                         * optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the per unit markedown price\n\t                         */\n\t                        BaseSellInvestmentTransaction.prototype.getMarkdown = function () {\n\t                            return this.getSellInvestment().getMarkdown();\n\t                        };\n\t                        /**\n\t                         * Gets the transaction commission for the sale. This is an optional field according to the\n\t                         * OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the transaction commision\n\t                         */\n\t                        BaseSellInvestmentTransaction.prototype.getCommission = function () {\n\t                            return this.getSellInvestment().getCommission();\n\t                        };\n\t                        /**\n\t                         * Gets the taxes for the sale. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the transaction taxes\n\t                         */\n\t                        BaseSellInvestmentTransaction.prototype.getTaxes = function () {\n\t                            return this.getSellInvestment().getTaxes();\n\t                        };\n\t                        /**\n\t                         * Gets the fees for the sale. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the transaction fees\n\t                         */\n\t                        BaseSellInvestmentTransaction.prototype.getFees = function () {\n\t                            return this.getSellInvestment().getFees();\n\t                        };\n\t                        /**\n\t                         * Gets the load for the sale. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the load\n\t                         */\n\t                        BaseSellInvestmentTransaction.prototype.getLoad = function () {\n\t                            return this.getSellInvestment().getLoad();\n\t                        };\n\t                        /**\n\t                         * Gets the withholding for the sale. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the withholding\n\t                         */\n\t                        BaseSellInvestmentTransaction.prototype.getWithholding = function () {\n\t                            return this.getSellInvestment().getWithholding();\n\t                        };\n\t                        /**\n\t                         * Gets whether the sale was tax exempt. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return whether the transaction was tax exempt\n\t                         */\n\t                        BaseSellInvestmentTransaction.prototype.getTaxExempt = function () {\n\t                            return this.getSellInvestment().getTaxExempt();\n\t                        };\n\t                        /**\n\t                         * Gets the total for the sale. Should be equal to\n\t                         * (units * (unitPrice + markdown)) + (commision + fees + load + taxes + penalty + withholding +\n\t                         * statewithholding) according to the OFX spec. This is a required field according to the OFX\n\t                         * spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the total\n\t                         */\n\t                        BaseSellInvestmentTransaction.prototype.getTotal = function () {\n\t                            return this.getSellInvestment().getTotal();\n\t                        };\n\t                        /**\n\t                         * Gets the gain sale. This is aan optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the gain for the sale\n\t                         */\n\t                        BaseSellInvestmentTransaction.prototype.getGain = function () {\n\t                            return this.getSellInvestment().getGain();\n\t                        };\n\t                        /**\n\t                         * Gets the currency code for the transaction. Only one of currency code or original currency\n\t                         * info should be set according to the OFX spec. If neither are set, means the default currency.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the currency code for the transaction.\n\t                         */\n\t                        BaseSellInvestmentTransaction.prototype.getCurrencyCode = function () {\n\t                            return this.getSellInvestment().getCurrencyCode();\n\t                        };\n\t                        /**\n\t                         * Gets the origianl currency info for the transaction.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the currency info for the transaction.\n\t                         */\n\t                        BaseSellInvestmentTransaction.prototype.getOriginalCurrencyInfo = function () {\n\t                            return this.getSellInvestment().getOriginalCurrencyInfo();\n\t                        };\n\t                        /**\n\t                         * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the sub account type\n\t                         */\n\t                        BaseSellInvestmentTransaction.prototype.getSubAccountSecurity = function () {\n\t                            return this.getSellInvestment().getSubAccountSecurity();\n\t                        };\n\t                        /**\n\t                         * Gets the result of getSubAccountSecurity as one of the well-known types.\n\t                         *\n\t                         * @return the type of null if it wasn't one of the well known types.\n\t                         */\n\t                        BaseSellInvestmentTransaction.prototype.getSubAccountSecurityEnum = function () {\n\t                            return SubAccountType_fromOfx(this.getSubAccountSecurity());\n\t                        };\n\t                        /**\n\t                         * Gets the sub account type that the money went to  (e.g. CASH, MARGIN, SHORT, OTHER).\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the sub account fund\n\t                         */\n\t                        BaseSellInvestmentTransaction.prototype.getSubAccountFund = function () {\n\t                            return this.getSellInvestment().getSubAccountFund();\n\t                        };\n\t                        /**\n\t                         * Gets the result of getSubAccountFund as one of the well-known types.\n\t                         *\n\t                         * @return the type of null if it wasn't one of the well known types.\n\t                         */\n\t                        BaseSellInvestmentTransaction.prototype.getSubAccountFundEnum = function () {\n\t                            return SubAccountType_fromOfx(this.getSubAccountFund());\n\t                        };\n\t                        /**\n\t                         * Gets the loan id if this transaction was due to a loan or loan repayment on a 401k. This is an\n\t                         * optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the loan id\n\t                         */\n\t                        BaseSellInvestmentTransaction.prototype.getLoadId = function () {\n\t                            return this.getSellInvestment().getLoanId();\n\t                        };\n\t                        /**\n\t                         * Gets the state withholding for the sale. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the state withholding\n\t                         */\n\t                        BaseSellInvestmentTransaction.prototype.getStateWithholding = function () {\n\t                            return this.getSellInvestment().getStateWithholding();\n\t                        };\n\t                        /**\n\t                         * Gets the penalty for the sale. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the state withholding\n\t                         */\n\t                        BaseSellInvestmentTransaction.prototype.getPenalty = function () {\n\t                            return this.getSellInvestment().getPenalty();\n\t                        };\n\t                        /**\n\t                         * Gets the 401K source for the sale. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n\t                         * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n\t                         * according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the 401k source\n\t                         */\n\t                        BaseSellInvestmentTransaction.prototype.get401kSource = function () {\n\t                            return this.getSellInvestment().get401kSource();\n\t                        };\n\t                        /**\n\t                         * Gets the 401k source as one of the well-known types.\n\t                         *\n\t                         * @return the 401k source or null if its not one of the well-known types\n\t                         */\n\t                        BaseSellInvestmentTransaction.prototype.get401kSourceEnum = function () {\n\t                            return Inv401KSource_fromOfx(this.get401kSource());\n\t                        };\n\t                        return BaseSellInvestmentTransaction;\n\t                    })(transactions.BaseInvestmentTransaction);\n\t                    transactions.BaseSellInvestmentTransaction = BaseSellInvestmentTransaction;\n\t                    ChildAggregate_add(BaseSellInvestmentTransaction, { order: 10, type: transactions.SellInvestmentTransaction, read: BaseSellInvestmentTransaction.prototype.getSellInvestment, write: BaseSellInvestmentTransaction.prototype.setSellInvestment });\n\t                })(transactions = investment.transactions || (investment.transactions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/Element_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='BaseBuyInvestmentTransaction'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var transactions;\n\t                (function (transactions) {\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var Element_add = ofx4js.meta.Element_add;\n\t                    /**\n\t                     * Transaction for buying debt (i.e. bonds, CDs, etc.,).\n\t                     * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var BuyDebtTransaction = (function (_super) {\n\t                        __extends(BuyDebtTransaction, _super);\n\t                        function BuyDebtTransaction() {\n\t                            _super.call(this, transactions.TransactionType.BUY_DEBT);\n\t                        }\n\t                        /**\n\t                         * Gets the amount of accrued interest on the debt. This is an optional field according to the\n\t                         * OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @return the amount of accrued interest\n\t                         */\n\t                        BuyDebtTransaction.prototype.getAccruedInterest = function () {\n\t                            return this.accruedInterest;\n\t                        };\n\t                        /**\n\t                         * Sets the amount of accrued interest on the debt. This is an optional field according to the\n\t                         * OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @param accruedInterest the amount of accrued interest\n\t                         */\n\t                        BuyDebtTransaction.prototype.setAccruedInterest = function (accruedInterest) {\n\t                            this.accruedInterest = accruedInterest;\n\t                        };\n\t                        return BuyDebtTransaction;\n\t                    })(transactions.BaseBuyInvestmentTransaction);\n\t                    transactions.BuyDebtTransaction = BuyDebtTransaction;\n\t                    Aggregate_add(BuyDebtTransaction, \"BUYDEBT\");\n\t                    Element_add(BuyDebtTransaction, { name: \"ACCRDINT\", order: 20, type: Number, read: BuyDebtTransaction.prototype.getAccruedInterest, write: BuyDebtTransaction.prototype.setAccruedInterest });\n\t                })(transactions = investment.transactions || (investment.transactions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var transactions;\n\t                (function (transactions) {\n\t                    /**\n\t                     * Type of purchase for stocks and mutual funds.\n\t                     * @see \"Section 13.9.2.4.2, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    (function (BuyType) {\n\t                        BuyType[BuyType[\"BUY\"] = 0] = \"BUY\";\n\t                        BuyType[BuyType[\"BUY_TO_COVER\"] = 1] = \"BUY_TO_COVER\";\n\t                    })(transactions.BuyType || (transactions.BuyType = {}));\n\t                    var BuyType = transactions.BuyType;\n\t                    function BuyType_fromOfx(ofxVal) {\n\t                        if (\"BUY\" === ofxVal) {\n\t                            return BuyType.BUY;\n\t                        }\n\t                        else if (\"BUYTOCOVER\" === ofxVal) {\n\t                            return BuyType.BUY_TO_COVER;\n\t                        }\n\t                        else {\n\t                            return null;\n\t                        }\n\t                    }\n\t                    transactions.BuyType_fromOfx = BuyType_fromOfx;\n\t                })(transactions = investment.transactions || (investment.transactions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/Element_add'/>\n\t///<reference path='BaseBuyInvestmentTransaction'/>\n\t///<reference path='BuyType'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var transactions;\n\t                (function (transactions) {\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var Element_add = ofx4js.meta.Element_add;\n\t                    /**\n\t                     * Transaction for buying mutual funds.\n\t                     * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var BuyMutualFundTransaction = (function (_super) {\n\t                        __extends(BuyMutualFundTransaction, _super);\n\t                        function BuyMutualFundTransaction() {\n\t                            _super.call(this, transactions.TransactionType.BUY_MUTUAL_FUND);\n\t                        }\n\t                        /**\n\t                         * Gets the type of purchase (i.e. \"BUY\" or \"BUYTOCOVER\"). This is a required field according to\n\t                         * the OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @return the buy type\n\t                         */\n\t                        BuyMutualFundTransaction.prototype.getBuyType = function () {\n\t                            return this.buyType;\n\t                        };\n\t                        /**\n\t                         * Sets the type of purchase (i.e. \"BUY\" or \"BUYTOCOVER\"). This is a required field according to\n\t                         * the OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @param buyType the buy type\n\t                         */\n\t                        BuyMutualFundTransaction.prototype.setBuyType = function (buyType) {\n\t                            this.buyType = buyType;\n\t                        };\n\t                        /**\n\t                         * Gets the buy type as one of the well-known types.\n\t                         *\n\t                         * @return the type of purchase or null if it's not known\n\t                         */\n\t                        BuyMutualFundTransaction.prototype.getBuyTypeEnum = function () {\n\t                            return transactions.BuyType_fromOfx(this.buyType);\n\t                        };\n\t                        /**\n\t                         * Gets any related transaction id for a mutual fund purchase (e.g. for a mutual fund exchange).\n\t                         * This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @return the related transaction id\n\t                         */\n\t                        BuyMutualFundTransaction.prototype.getRelatedTransactionId = function () {\n\t                            return this.relatedTransactionId;\n\t                        };\n\t                        /**\n\t                         * Sets any related transaction id for a mutual fund purchase (e.g. for a mutual fund exchange).\n\t                         * This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @param relatedTransactionId the related transaction id\n\t                         */\n\t                        BuyMutualFundTransaction.prototype.setRelatedTransactionId = function (relatedTransactionId) {\n\t                            this.relatedTransactionId = relatedTransactionId;\n\t                        };\n\t                        return BuyMutualFundTransaction;\n\t                    })(transactions.BaseBuyInvestmentTransaction);\n\t                    transactions.BuyMutualFundTransaction = BuyMutualFundTransaction;\n\t                    Aggregate_add(BuyMutualFundTransaction, \"BUYMF\");\n\t                    Element_add(BuyMutualFundTransaction, { name: \"BUYTYPE\", required: true, order: 20, type: String, read: BuyMutualFundTransaction.prototype.getBuyType, write: BuyMutualFundTransaction.prototype.setBuyType });\n\t                    Element_add(BuyMutualFundTransaction, { name: \"RELFITID\", order: 30, type: String, read: BuyMutualFundTransaction.prototype.getRelatedTransactionId, write: BuyMutualFundTransaction.prototype.setRelatedTransactionId });\n\t                })(transactions = investment.transactions || (investment.transactions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var transactions;\n\t                (function (transactions) {\n\t                    /**\n\t                     * Type of purchase for options.\n\t                     * @see \"Section 13.9.2.4.2, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    (function (OptionBuyType) {\n\t                        OptionBuyType[OptionBuyType[\"BUY_TO_OPEN\"] = 0] = \"BUY_TO_OPEN\";\n\t                        OptionBuyType[OptionBuyType[\"BUY_TO_CLOSE\"] = 1] = \"BUY_TO_CLOSE\";\n\t                    })(transactions.OptionBuyType || (transactions.OptionBuyType = {}));\n\t                    var OptionBuyType = transactions.OptionBuyType;\n\t                    function OptionBuyType_fromOfx(ofxVal) {\n\t                        if (\"BUYTOOPEN\" === ofxVal) {\n\t                            return OptionBuyType.BUY_TO_OPEN;\n\t                        }\n\t                        else if (\"BUYTOCLOSE\" === ofxVal) {\n\t                            return OptionBuyType.BUY_TO_CLOSE;\n\t                        }\n\t                        else {\n\t                            return null;\n\t                        }\n\t                    }\n\t                    transactions.OptionBuyType_fromOfx = OptionBuyType_fromOfx;\n\t                })(transactions = investment.transactions || (investment.transactions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/Element_add'/>\n\t///<reference path='BaseBuyInvestmentTransaction'/>\n\t///<reference path='OptionBuyType'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var transactions;\n\t                (function (transactions) {\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var Element_add = ofx4js.meta.Element_add;\n\t                    /**\n\t                     * Transaction for buying options.\n\t                     * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var BuyOptionTransaction = (function (_super) {\n\t                        __extends(BuyOptionTransaction, _super);\n\t                        function BuyOptionTransaction() {\n\t                            _super.call(this, transactions.TransactionType.BUY_OPTION);\n\t                        }\n\t                        /**\n\t                         * Gets the type of option purchase (i.e. \"BUYTOOPEN\" or \"BUYTOCLOSE\"). This is a required field\n\t                         * according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @return the option buy type\n\t                         */\n\t                        BuyOptionTransaction.prototype.getOptionBuyType = function () {\n\t                            return this.optionBuyType;\n\t                        };\n\t                        /**\n\t                         * Sets the type of option purchase (i.e. \"BUYTOOPEN\" or \"BUYTOCLOSE\"). This is a required field\n\t                         * according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @param optionBuyType the option buy type\n\t                         */\n\t                        BuyOptionTransaction.prototype.setOptionBuyType = function (optionBuyType) {\n\t                            this.optionBuyType = optionBuyType;\n\t                        };\n\t                        /**\n\t                         * Gets the option buy type as one of the well-known types.\n\t                         *\n\t                         * @return the type of purchase or null if it's not known\n\t                         */\n\t                        BuyOptionTransaction.prototype.getOptionBuyTypeEnum = function () {\n\t                            return transactions.OptionBuyType_fromOfx(this.optionBuyType);\n\t                        };\n\t                        /**\n\t                         * Gets the number of shares per contact. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @return the number of shares per contact\n\t                         */\n\t                        BuyOptionTransaction.prototype.getSharesPerContract = function () {\n\t                            return this.sharesPerContact;\n\t                        };\n\t                        /**\n\t                         * Sets the number of shares per contact. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @param sharesPerContact the number of shares per contact\n\t                         */\n\t                        BuyOptionTransaction.prototype.setSharesPerContract = function (sharesPerContact) {\n\t                            this.sharesPerContact = sharesPerContact;\n\t                        };\n\t                        return BuyOptionTransaction;\n\t                    })(transactions.BaseBuyInvestmentTransaction);\n\t                    transactions.BuyOptionTransaction = BuyOptionTransaction;\n\t                    Aggregate_add(BuyOptionTransaction, \"BUYOPT\");\n\t                    Element_add(BuyOptionTransaction, { name: \"OPTBUYTYPE\", required: true, order: 20, type: String, read: BuyOptionTransaction.prototype.getOptionBuyType, write: BuyOptionTransaction.prototype.setOptionBuyType });\n\t                    Element_add(BuyOptionTransaction, { name: \"SHPERCTRCT\", required: true, order: 30, type: Number, read: BuyOptionTransaction.prototype.getSharesPerContract, write: BuyOptionTransaction.prototype.setSharesPerContract });\n\t                })(transactions = investment.transactions || (investment.transactions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='BaseBuyInvestmentTransaction'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var transactions;\n\t                (function (transactions) {\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    /**\n\t                     * Transaction for buying other types of securities.\n\t                     * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var BuyOtherTransaction = (function (_super) {\n\t                        __extends(BuyOtherTransaction, _super);\n\t                        function BuyOtherTransaction() {\n\t                            _super.call(this, transactions.TransactionType.BUY_OTHER);\n\t                        }\n\t                        return BuyOtherTransaction;\n\t                    })(transactions.BaseBuyInvestmentTransaction);\n\t                    transactions.BuyOtherTransaction = BuyOtherTransaction;\n\t                    Aggregate_add(BuyOtherTransaction, \"BUYOTHER\");\n\t                })(transactions = investment.transactions || (investment.transactions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/Element_add'/>\n\t///<reference path='BaseBuyInvestmentTransaction'/>\n\t///<reference path='BuyType'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var transactions;\n\t                (function (transactions) {\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var Element_add = ofx4js.meta.Element_add;\n\t                    /**\n\t                     * Transaction for buying stock.\n\t                     * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var BuyStockTransaction = (function (_super) {\n\t                        __extends(BuyStockTransaction, _super);\n\t                        function BuyStockTransaction() {\n\t                            _super.call(this, transactions.TransactionType.BUY_STOCK);\n\t                        }\n\t                        /**\n\t                         * Gets the type of stock purchase (i.e. \"BUY\" or \"BUYTOCOVER\"). This is a required field\n\t                         * according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @return the buy type\n\t                         */\n\t                        BuyStockTransaction.prototype.getBuyType = function () {\n\t                            return this.buyType;\n\t                        };\n\t                        /**\n\t                         * Sets the type of stock purchase (i.e. \"BUY\" or \"BUYTOCOVER\"). This is a required field\n\t                         * according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @param buyType the buy type\n\t                         */\n\t                        BuyStockTransaction.prototype.setBuyType = function (buyType) {\n\t                            this.buyType = buyType;\n\t                        };\n\t                        /**\n\t                         * Gets the buy type as one of the well-known types.\n\t                         *\n\t                         * @return the type of purchase or null if it's not well known\n\t                         */\n\t                        BuyStockTransaction.prototype.getBuyTypeEnum = function () {\n\t                            return transactions.BuyType_fromOfx(this.buyType);\n\t                        };\n\t                        return BuyStockTransaction;\n\t                    })(transactions.BaseBuyInvestmentTransaction);\n\t                    transactions.BuyStockTransaction = BuyStockTransaction;\n\t                    Aggregate_add(BuyStockTransaction, \"BUYSTOCK\");\n\t                    Element_add(BuyStockTransaction, { name: \"BUYTYPE\", required: true, order: 20, type: String, read: BuyStockTransaction.prototype.getBuyType, write: BuyStockTransaction.prototype.setBuyType });\n\t                })(transactions = investment.transactions || (investment.transactions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var transactions;\n\t                (function (transactions) {\n\t                    /**\n\t                     * Type of action for closing a stock option.\n\t                     * @see \"Section 13.9.2.4.2, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    (function (CloseOptionAction) {\n\t                        CloseOptionAction[CloseOptionAction[\"EXERCISE\"] = 0] = \"EXERCISE\";\n\t                        CloseOptionAction[CloseOptionAction[\"ASSIGN\"] = 1] = \"ASSIGN\";\n\t                        CloseOptionAction[CloseOptionAction[\"EXPIRE\"] = 2] = \"EXPIRE\";\n\t                    })(transactions.CloseOptionAction || (transactions.CloseOptionAction = {}));\n\t                    var CloseOptionAction = transactions.CloseOptionAction;\n\t                    function CloseOptionAction_fromOfx(ofxVal) {\n\t                        if (\"EXERCISE\" === ofxVal) {\n\t                            return CloseOptionAction.EXERCISE;\n\t                        }\n\t                        else if (\"ASSIGN\" === ofxVal) {\n\t                            return CloseOptionAction.ASSIGN;\n\t                        }\n\t                        else if (\"EXPIRE\" === ofxVal) {\n\t                            return CloseOptionAction.EXPIRE;\n\t                        }\n\t                        else {\n\t                            return null;\n\t                        }\n\t                    }\n\t                    transactions.CloseOptionAction_fromOfx = CloseOptionAction_fromOfx;\n\t                })(transactions = investment.transactions || (investment.transactions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../../../meta/Element_add'/>\n\t///<reference path='../../investment/accounts/SubAccountType'/>\n\t///<reference path='../../seclist/SecurityId'/>\n\t///<reference path='BaseOtherInvestmentTransaction'/>\n\t///<reference path='TransactionWithSecurity'/>\n\t///<reference path='CloseOptionAction'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var transactions;\n\t                (function (transactions) {\n\t                    var SubAccountType_fromOfx = ofx4js.domain.data.investment.accounts.SubAccountType_fromOfx;\n\t                    var SecurityId = ofx4js.domain.data.seclist.SecurityId;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                    var Element_add = ofx4js.meta.Element_add;\n\t                    /**\n\t                     * Transaction for closing an option position due to expiration, exercise, or assignment.\n\t                     * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var CloseOptionTransaction = (function (_super) {\n\t                        __extends(CloseOptionTransaction, _super);\n\t                        function CloseOptionTransaction() {\n\t                            _super.call(this, transactions.TransactionType.CLOSE_OPTION);\n\t                        }\n\t                        /**\n\t                         * Gets the security id of the option.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @return the security id of the option\n\t                         */\n\t                        CloseOptionTransaction.prototype.getSecurityId = function () {\n\t                            return this.securityId;\n\t                        };\n\t                        /**\n\t                         * Sets the security id of the option.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @param securityId the security id of the option\n\t                         */\n\t                        CloseOptionTransaction.prototype.setSecurityId = function (securityId) {\n\t                            this.securityId = securityId;\n\t                        };\n\t                        /**\n\t                         * Gets the action being performed (i.e. \"EXERCISE\", \"ASSIGN\", \"EXPIRE\" This is a required field\n\t                         * according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @return the option action\n\t                         */\n\t                        CloseOptionTransaction.prototype.getOptionAction = function () {\n\t                            return this.optionAction;\n\t                        };\n\t                        /**\n\t                         * Sets the action being performed (i.e. \"EXERCISE\", \"ASSIGN\", \"EXPIRE\" This is a required field\n\t                         * according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @param optionAction the option action\n\t                         */\n\t                        CloseOptionTransaction.prototype.setOptionAction = function (optionAction) {\n\t                            this.optionAction = optionAction;\n\t                        };\n\t                        /**\n\t                         * Gets the action as one of the well-known types.\n\t                         *\n\t                         * @return the type of close or null if it's not a well-known type\n\t                         */\n\t                        CloseOptionTransaction.prototype.getOptionActionEnum = function () {\n\t                            return transactions.CloseOptionAction_fromOfx(this.getOptionAction());\n\t                        };\n\t                        /**\n\t                         * Gets the number of units of the option that were closed. This is a required field according\n\t                         * to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @return the number of units closed\n\t                         */\n\t                        CloseOptionTransaction.prototype.getUnits = function () {\n\t                            return this.units;\n\t                        };\n\t                        /**\n\t                         * Sets the number of units of the option that were closed. This is a required field according\n\t                         * to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @param units the number of units closed\n\t                         */\n\t                        CloseOptionTransaction.prototype.setUnits = function (units) {\n\t                            this.units = units;\n\t                        };\n\t                        /**\n\t                         * Gets the number of shares per contact. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @return the number of shares per contact\n\t                         */\n\t                        CloseOptionTransaction.prototype.getSharesPerContact = function () {\n\t                            return this.sharesPerContact;\n\t                        };\n\t                        /**\n\t                         * Sets the number of shares per contact. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @param sharesPerContact the number of shares per contact\n\t                         */\n\t                        CloseOptionTransaction.prototype.setSharesPerContact = function (sharesPerContact) {\n\t                            this.sharesPerContact = sharesPerContact;\n\t                        };\n\t                        /**\n\t                         * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @return the sub account type\n\t                         */\n\t                        CloseOptionTransaction.prototype.getSubAccountSecurity = function () {\n\t                            return this.subAccountSecurity;\n\t                        };\n\t                        /**\n\t                         * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @param subAccountSecurity the sub account type\n\t                         */\n\t                        CloseOptionTransaction.prototype.setSubAccountSecurity = function (subAccountSecurity) {\n\t                            this.subAccountSecurity = subAccountSecurity;\n\t                        };\n\t                        /**\n\t                         * Gets the result of getSubAccountFund as one of the well-known types.\n\t                         *\n\t                         * @return the type of null if it wasn't one of the well known types\n\t                         */\n\t                        CloseOptionTransaction.prototype.getSubAccountSecurityEnum = function () {\n\t                            return SubAccountType_fromOfx(this.getSubAccountSecurity());\n\t                        };\n\t                        /**\n\t                         * Gets the related transaction id for the related buy or sell corresponding to the\n\t                         * EXERCISE or ASSIGN action. This is a required field according to the OFX spec if the\n\t                         * action or EXERCISE or ASSIGN.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @return the related transaction id\n\t                         */\n\t                        CloseOptionTransaction.prototype.getRelatedTransactionId = function () {\n\t                            return this.relatedTransactionId;\n\t                        };\n\t                        /**\n\t                         * Sets the related transaction id for the related buy or sell corresponding to the\n\t                         * EXERCISE or ASSIGN action. This is a required field according to the OFX spec if the\n\t                         * action or EXERCISE or ASSIGN.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @param relatedTransactionId the related transaction id\n\t                         */\n\t                        CloseOptionTransaction.prototype.setRelatedTransactionId = function (relatedTransactionId) {\n\t                            this.relatedTransactionId = relatedTransactionId;\n\t                        };\n\t                        /**\n\t                         * Gets the gain related to the transaction. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @return the gain related to the transaction\n\t                         */\n\t                        CloseOptionTransaction.prototype.getGain = function () {\n\t                            return this.gain;\n\t                        };\n\t                        /**\n\t                         * Sets the gain related to the transaction. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @param gain the gain related to the transaction\n\t                         */\n\t                        CloseOptionTransaction.prototype.setGain = function (gain) {\n\t                            this.gain = gain;\n\t                        };\n\t                        return CloseOptionTransaction;\n\t                    })(transactions.BaseOtherInvestmentTransaction);\n\t                    transactions.CloseOptionTransaction = CloseOptionTransaction;\n\t                    Aggregate_add(CloseOptionTransaction, \"CLOSUREOPT\");\n\t                    ChildAggregate_add(CloseOptionTransaction, { order: 20, type: SecurityId, read: CloseOptionTransaction.prototype.getSecurityId, write: CloseOptionTransaction.prototype.setSecurityId });\n\t                    Element_add(CloseOptionTransaction, { name: \"OPTACTION\", required: true, order: 30, type: String, read: CloseOptionTransaction.prototype.getOptionAction, write: CloseOptionTransaction.prototype.setOptionAction });\n\t                    Element_add(CloseOptionTransaction, { name: \"UNITS\", required: true, order: 40, type: Number, read: CloseOptionTransaction.prototype.getUnits, write: CloseOptionTransaction.prototype.setUnits });\n\t                    Element_add(CloseOptionTransaction, { name: \"SHPERCTRCT\", required: true, order: 50, type: Number, read: CloseOptionTransaction.prototype.getSharesPerContact, write: CloseOptionTransaction.prototype.setSharesPerContact });\n\t                    Element_add(CloseOptionTransaction, { name: \"SUBACCTSEC\", required: true, order: 60, type: String, read: CloseOptionTransaction.prototype.getSubAccountSecurity, write: CloseOptionTransaction.prototype.setSubAccountSecurity });\n\t                    Element_add(CloseOptionTransaction, { name: \"RELFITID\", order: 70, type: String, read: CloseOptionTransaction.prototype.getRelatedTransactionId, write: CloseOptionTransaction.prototype.setRelatedTransactionId });\n\t                    Element_add(CloseOptionTransaction, { name: \"GAIN\", order: 80, type: Number, read: CloseOptionTransaction.prototype.getGain, write: CloseOptionTransaction.prototype.setGain });\n\t                })(transactions = investment.transactions || (investment.transactions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var transactions;\n\t                (function (transactions) {\n\t                    /**\n\t                     * Type of income.\n\t                     * @see \"Section 13.9.2.4.2, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    (function (IncomeType) {\n\t                        IncomeType[IncomeType[\"LONG_TERM_CAP_GAINS\"] = 0] = \"LONG_TERM_CAP_GAINS\";\n\t                        IncomeType[IncomeType[\"SHORT_TERM_CAP_GAINS\"] = 1] = \"SHORT_TERM_CAP_GAINS\";\n\t                        IncomeType[IncomeType[\"DIVIDEND\"] = 2] = \"DIVIDEND\";\n\t                        IncomeType[IncomeType[\"INTEREST\"] = 3] = \"INTEREST\";\n\t                        IncomeType[IncomeType[\"MISC\"] = 4] = \"MISC\";\n\t                    })(transactions.IncomeType || (transactions.IncomeType = {}));\n\t                    var IncomeType = transactions.IncomeType;\n\t                    function IncomeType_fromOfx(ofxVal) {\n\t                        if (\"CGLONG\" === ofxVal) {\n\t                            return IncomeType.LONG_TERM_CAP_GAINS;\n\t                        }\n\t                        else if (\"CGSHORT\" === ofxVal) {\n\t                            return IncomeType.SHORT_TERM_CAP_GAINS;\n\t                        }\n\t                        else if (\"DIV\" === ofxVal) {\n\t                            return IncomeType.DIVIDEND;\n\t                        }\n\t                        else if (\"INTEREST\" === ofxVal) {\n\t                            return IncomeType.INTEREST;\n\t                        }\n\t                        else if (\"MISC\" === ofxVal) {\n\t                            return IncomeType.MISC;\n\t                        }\n\t                        else {\n\t                            return null;\n\t                        }\n\t                    }\n\t                    transactions.IncomeType_fromOfx = IncomeType_fromOfx;\n\t                })(transactions = investment.transactions || (investment.transactions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../../../meta/Element_add'/>\n\t///<reference path='../../investment/accounts/SubAccountType'/>\n\t///<reference path='../../investment/positions/Inv401KSource'/>\n\t///<reference path='../../seclist/SecurityId'/>\n\t///<reference path='BaseOtherInvestmentTransaction'/>\n\t///<reference path='IncomeType'/>\n\t///<reference path='OriginalCurrency'/>\n\t///<reference path='TransactionWithSecurity'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var transactions;\n\t                (function (transactions) {\n\t                    var SubAccountType_fromOfx = ofx4js.domain.data.investment.accounts.SubAccountType_fromOfx;\n\t                    var Inv401KSource_fromOfx = ofx4js.domain.data.investment.positions.Inv401KSource_fromOfx;\n\t                    var SecurityId = ofx4js.domain.data.seclist.SecurityId;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                    var Element_add = ofx4js.meta.Element_add;\n\t                    /**\n\t                     * Transaction for investment income that is realized as cash into the investment account.\n\t                     * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var IncomeTransaction = (function (_super) {\n\t                        __extends(IncomeTransaction, _super);\n\t                        function IncomeTransaction() {\n\t                            _super.call(this, transactions.TransactionType.INCOME);\n\t                        }\n\t                        /**\n\t                         * Gets the id of the security that the income was for. This is a required field according to the\n\t                         * OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @return the security id of the security that the income was for\n\t                         */\n\t                        IncomeTransaction.prototype.getSecurityId = function () {\n\t                            return this.securityId;\n\t                        };\n\t                        /**\n\t                         * Sets the id of the security that the income was for. This is a required field according to the\n\t                         * OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @param securityId the security id of the security that the income was for\n\t                         */\n\t                        IncomeTransaction.prototype.setSecurityId = function (securityId) {\n\t                            this.securityId = securityId;\n\t                        };\n\t                        /**\n\t                         * Gets the type of income. One of \"CGLONG\" (long term capital gains), \"CGSHORT\" (short term\n\t                         * capital gains), \"DIV\" (dividend), INTEREST, or MISC>\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\" This is a required field according to the OFX spec.\n\t                         *\n\t                         * @return the type of income\n\t                         */\n\t                        IncomeTransaction.prototype.getIncomeType = function () {\n\t                            return this.incomeType;\n\t                        };\n\t                        /**\n\t                         * Sets the type of income. One of \"CGLONG\" (long term capital gains), \"CGSHORT\" (short term\n\t                         * capital gains), \"DIV\" (dividend), INTEREST, or MISC>\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\" This is a required field according to the OFX spec.\n\t                         *\n\t                         * @param incomeType the type of income\n\t                         */\n\t                        IncomeTransaction.prototype.setIncomeType = function (incomeType) {\n\t                            this.incomeType = incomeType;\n\t                        };\n\t                        /**\n\t                         * Gets the income type as one of the well-known types.\n\t                         *\n\t                         * @return the income type or null if it's not well known\n\t                         */\n\t                        IncomeTransaction.prototype.getIncomeTypeEnum = function () {\n\t                            return transactions.IncomeType_fromOfx(this.getIncomeType());\n\t                        };\n\t                        /**\n\t                         * Gets the total income received.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @return the total\n\t                         */\n\t                        IncomeTransaction.prototype.getTotal = function () {\n\t                            return this.total;\n\t                        };\n\t                        /**\n\t                         * Sets the total income received.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @param total the total\n\t                         */\n\t                        IncomeTransaction.prototype.setTotal = function (total) {\n\t                            this.total = total;\n\t                        };\n\t                        /**\n\t                         * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the sub account type\n\t                         */\n\t                        IncomeTransaction.prototype.getSubAccountSecurity = function () {\n\t                            return this.subAccountSecurity;\n\t                        };\n\t                        /**\n\t                         * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param subAcctSec the sub account type\n\t                         */\n\t                        IncomeTransaction.prototype.setSubAccountSecurity = function (subAcctSec) {\n\t                            this.subAccountSecurity = subAcctSec;\n\t                        };\n\t                        /**\n\t                         * Gets the result of getSubAccountSecurity as one of the well-known types.\n\t                         *\n\t                         * @return the type of null if it wasn't one of the well known types.\n\t                         */\n\t                        IncomeTransaction.prototype.getSubAccountSecurityEnum = function () {\n\t                            return SubAccountType_fromOfx(this.getSubAccountSecurity());\n\t                        };\n\t                        /**\n\t                         * Gets the sub account type that the security is from (e.g. CASH, MARGIN, SHORT, OTHER).\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the sub account fund for the transaction\n\t                         */\n\t                        IncomeTransaction.prototype.getSubAccountFund = function () {\n\t                            return this.subAccountFund;\n\t                        };\n\t                        /**\n\t                         * Sets the sub account type that the security is from (e.g. CASH, MARGIN, SHORT, OTHER).\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param subAcctFund the sub account fund for the transaction\n\t                         */\n\t                        IncomeTransaction.prototype.setSubAccountFund = function (subAcctFund) {\n\t                            this.subAccountFund = subAcctFund;\n\t                        };\n\t                        /**\n\t                         * Gets the result of getSubAccountFund as one of the well-known types.\n\t                         *\n\t                         * @return the type of null if it wasn't one of the well known types\n\t                         */\n\t                        IncomeTransaction.prototype.getSubAccountFundEnum = function () {\n\t                            return SubAccountType_fromOfx(this.getSubAccountFund());\n\t                        };\n\t                        /**\n\t                         * Gets whether the income was tax exempt. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return whether the transaction was tax exempt\n\t                         */\n\t                        IncomeTransaction.prototype.getTaxExempt = function () {\n\t                            return this.taxExempt;\n\t                        };\n\t                        /**\n\t                         * Sets whether the income was tax exempt. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param taxExempt whether the transaction was tax exempt\n\t                         */\n\t                        IncomeTransaction.prototype.setTaxExempt = function (taxExempt) {\n\t                            this.taxExempt = taxExempt;\n\t                        };\n\t                        /**\n\t                         * Gets the withholding for the income. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the withholding\n\t                         */\n\t                        IncomeTransaction.prototype.getWithholding = function () {\n\t                            return this.withholding;\n\t                        };\n\t                        /**\n\t                         * Sets the withholding for the income. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param withholding the withholding\n\t                         */\n\t                        IncomeTransaction.prototype.setWithholding = function (withholding) {\n\t                            this.withholding = withholding;\n\t                        };\n\t                        /**\n\t                         * Gets the currency code for the transaction. Only one of currency code or original currency\n\t                         * info should be set according to the OFX spec. If neither are set, means the default currency.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the currency code for the transaction\n\t                         */\n\t                        IncomeTransaction.prototype.getCurrencyCode = function () {\n\t                            return this.currencyCode;\n\t                        };\n\t                        /**\n\t                         * Sets the currency code for the transaction. Only one of currency code or original currency\n\t                         * info should be set according to the OFX spec. If neither are set, means the default currency.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param currencyCode the currency code for the transaction\n\t                         */\n\t                        IncomeTransaction.prototype.setCurrencyCode = function (currencyCode) {\n\t                            this.currencyCode = currencyCode;\n\t                            this.originalCurrencyInfo = null;\n\t                        };\n\t                        /**\n\t                         * Gets the original currency info for the transaction.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the currency info for the transaction\n\t                         */\n\t                        IncomeTransaction.prototype.getOriginalCurrencyInfo = function () {\n\t                            return this.originalCurrencyInfo;\n\t                        };\n\t                        /**\n\t                         * Sets the original currency info for the transaction.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param originalCurrencyInfo the currency info for the transaction\n\t                         */\n\t                        IncomeTransaction.prototype.setOriginalCurrencyInfo = function (originalCurrencyInfo) {\n\t                            this.originalCurrencyInfo = originalCurrencyInfo;\n\t                            this.currencyCode = null;\n\t                        };\n\t                        /**\n\t                         * Gets the 401K source for the sale. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n\t                         * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n\t                         * according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the state withholding\n\t                         */\n\t                        IncomeTransaction.prototype.get401kSource = function () {\n\t                            return this.inv401kSource;\n\t                        };\n\t                        /**\n\t                         * Sets the 401K source for the sale. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n\t                         * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n\t                         * according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param inv401kSource the state withholding\n\t                         */\n\t                        IncomeTransaction.prototype.set401kSource = function (inv401kSource) {\n\t                            this.inv401kSource = inv401kSource;\n\t                        };\n\t                        /**\n\t                         * Gets the 401(k) source as one of the well-known types.\n\t                         *\n\t                         * @return the type of close or null if it's not well known.\n\t                         */\n\t                        IncomeTransaction.prototype.get401kSourceEnum = function () {\n\t                            return Inv401KSource_fromOfx(this.get401kSource());\n\t                        };\n\t                        return IncomeTransaction;\n\t                    })(transactions.BaseOtherInvestmentTransaction);\n\t                    transactions.IncomeTransaction = IncomeTransaction;\n\t                    Aggregate_add(IncomeTransaction, \"INCOME\");\n\t                    ChildAggregate_add(IncomeTransaction, { required: true, order: 20, type: SecurityId, read: IncomeTransaction.prototype.getSecurityId, write: IncomeTransaction.prototype.setSecurityId });\n\t                    Element_add(IncomeTransaction, { name: \"INCOMETYPE\", required: true, order: 30, type: String, read: IncomeTransaction.prototype.getIncomeType, write: IncomeTransaction.prototype.setIncomeType });\n\t                    Element_add(IncomeTransaction, { name: \"TOTAL\", required: true, order: 40, type: Number, read: IncomeTransaction.prototype.getTotal, write: IncomeTransaction.prototype.setTotal });\n\t                    Element_add(IncomeTransaction, { name: \"SUBACCTSEC\", order: 50, type: String, read: IncomeTransaction.prototype.getSubAccountSecurity, write: IncomeTransaction.prototype.setSubAccountSecurity });\n\t                    Element_add(IncomeTransaction, { name: \"SUBACCTFUND\", order: 60, type: String, read: IncomeTransaction.prototype.getSubAccountFund, write: IncomeTransaction.prototype.setSubAccountFund });\n\t                    Element_add(IncomeTransaction, { name: \"TAXEXEMPT\", order: 70, type: Boolean, read: IncomeTransaction.prototype.getTaxExempt, write: IncomeTransaction.prototype.setTaxExempt });\n\t                    Element_add(IncomeTransaction, { name: \"WITHHOLDING\", order: 80, type: Number, read: IncomeTransaction.prototype.getWithholding, write: IncomeTransaction.prototype.setWithholding });\n\t                    Element_add(IncomeTransaction, { name: \"CURRENCY\", order: 90, type: String, read: IncomeTransaction.prototype.getCurrencyCode, write: IncomeTransaction.prototype.setCurrencyCode });\n\t                    ChildAggregate_add(IncomeTransaction, { order: 120, type: transactions.OriginalCurrency, read: IncomeTransaction.prototype.getOriginalCurrencyInfo, write: IncomeTransaction.prototype.setOriginalCurrencyInfo });\n\t                    Element_add(IncomeTransaction, { name: \"INV401KSOURCE\", order: 110, type: String, read: IncomeTransaction.prototype.get401kSource, write: IncomeTransaction.prototype.set401kSource });\n\t                })(transactions = investment.transactions || (investment.transactions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../../../meta/Element_add'/>\n\t///<reference path='../../investment/accounts/SubAccountType'/>\n\t///<reference path='../../investment/positions/Inv401KSource'/>\n\t///<reference path='../../seclist/SecurityId'/>\n\t///<reference path='BaseOtherInvestmentTransaction'/>\n\t///<reference path='OriginalCurrency'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var transactions;\n\t                (function (transactions) {\n\t                    var SubAccountType_fromOfx = ofx4js.domain.data.investment.accounts.SubAccountType_fromOfx;\n\t                    var Inv401KSource_fromOfx = ofx4js.domain.data.investment.positions.Inv401KSource_fromOfx;\n\t                    var SecurityId = ofx4js.domain.data.seclist.SecurityId;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                    var Element_add = ofx4js.meta.Element_add;\n\t                    /**\n\t                     * Transaction for an investment expense\n\t                     * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var InvestmentExpenseTransaction = (function (_super) {\n\t                        __extends(InvestmentExpenseTransaction, _super);\n\t                        function InvestmentExpenseTransaction() {\n\t                            _super.call(this, transactions.TransactionType.INVESTMENT_EXPENSE);\n\t                        }\n\t                        /**\n\t                         * Gets the id of the security for the expense. This is a required field according to the OFX\n\t                         * spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the security id of the security for the expsense\n\t                         */\n\t                        InvestmentExpenseTransaction.prototype.getSecurityId = function () {\n\t                            return this.securityId;\n\t                        };\n\t                        /**\n\t                         * Sets the id of the security for the expense. This is a required field according to the OFX\n\t                         * spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param securityId the security id of the security for the expsense\n\t                         */\n\t                        InvestmentExpenseTransaction.prototype.setSecurityId = function (securityId) {\n\t                            this.securityId = securityId;\n\t                        };\n\t                        /**\n\t                         * Gets the total for the expense.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the total\n\t                         */\n\t                        InvestmentExpenseTransaction.prototype.getTotal = function () {\n\t                            return this.total;\n\t                        };\n\t                        /**\n\t                         * Sets the total for the expense.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param total the total\n\t                         */\n\t                        InvestmentExpenseTransaction.prototype.setTotal = function (total) {\n\t                            this.total = total;\n\t                        };\n\t                        /**\n\t                         * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the sub account type\n\t                         */\n\t                        InvestmentExpenseTransaction.prototype.getSubAccountSecurity = function () {\n\t                            return this.subAccountSecurity;\n\t                        };\n\t                        /**\n\t                         * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param subAccountSecurity the sub account type\n\t                         */\n\t                        InvestmentExpenseTransaction.prototype.setSubAccountSecurity = function (subAccountSecurity) {\n\t                            this.subAccountSecurity = subAccountSecurity;\n\t                        };\n\t                        /**\n\t                         * Gets the result of getSubAccountSecurity as one of the well-known types.\n\t                         *\n\t                         * @return the type of null if it wasn't one of the well known types.\n\t                         */\n\t                        InvestmentExpenseTransaction.prototype.getSubAccountSecurityEnum = function () {\n\t                            return SubAccountType_fromOfx(this.getSubAccountSecurity());\n\t                        };\n\t                        /**\n\t                         * Gets the sub account type for the fund. (e.g. CASH, MARGIN, SHORT, OTHER).\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the sub account fund\n\t                         */\n\t                        InvestmentExpenseTransaction.prototype.getSubAccountFund = function () {\n\t                            return this.subAccountFund;\n\t                        };\n\t                        /**\n\t                         * Sets the sub account type for the fund. (e.g. CASH, MARGIN, SHORT, OTHER).\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param subAccountFund the sub account fund\n\t                         */\n\t                        InvestmentExpenseTransaction.prototype.setSubAccountFund = function (subAccountFund) {\n\t                            this.subAccountFund = subAccountFund;\n\t                        };\n\t                        /**\n\t                         * Gets the result of getSubAccountFund as one of the well-known types.\n\t                         *\n\t                         * @return the type of null if it wasn't one of the well known types\n\t                         */\n\t                        InvestmentExpenseTransaction.prototype.getSubAccountFundEnum = function () {\n\t                            return SubAccountType_fromOfx(this.getSubAccountFund());\n\t                        };\n\t                        /**\n\t                         * Gets the currency code for the transaction. Only one of currency code or original currency\n\t                         * code should be set according to the OFX spec. If neither are set, means the default currency.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the currency code for the transaction\n\t                         */\n\t                        InvestmentExpenseTransaction.prototype.getCurrencyCode = function () {\n\t                            return this.currencyCode;\n\t                        };\n\t                        /**\n\t                         * sets the currency code for the transaction. Only one of currency code or original currency\n\t                         * code should be set according to the OFX spec. If neither are set, means the default currency.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param currencyCode the currency code for the transaction\n\t                         */\n\t                        InvestmentExpenseTransaction.prototype.setCurrencyCode = function (currencyCode) {\n\t                            this.currencyCode = currencyCode;\n\t                            this.originalCurrencyInfo = null;\n\t                        };\n\t                        /**\n\t                         * Gets the original currency info for the transaction.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the original currency info for the transaction\n\t                         */\n\t                        InvestmentExpenseTransaction.prototype.getOriginalCurrencyInfo = function () {\n\t                            return this.originalCurrencyInfo;\n\t                        };\n\t                        /**\n\t                         * Sets the original currency info for the transaction.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param originalCurrencyInfo the original currency info for the transaction\n\t                         */\n\t                        InvestmentExpenseTransaction.prototype.setOriginalCurrencyInfo = function (originalCurrencyInfo) {\n\t                            this.originalCurrencyInfo = originalCurrencyInfo;\n\t                            this.currencyCode = null;\n\t                        };\n\t                        /**\n\t                         * Gets the 401K source for the transaction. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n\t                         * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n\t                         * according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the 401k source\n\t                         */\n\t                        InvestmentExpenseTransaction.prototype.get401kSource = function () {\n\t                            return this.inv401kSource;\n\t                        };\n\t                        /**\n\t                         * Sets the 401K source for the transaction. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n\t                         * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n\t                         * according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param inv401kSource the 401k source\n\t                         */\n\t                        InvestmentExpenseTransaction.prototype.set401kSource = function (inv401kSource) {\n\t                            this.inv401kSource = inv401kSource;\n\t                        };\n\t                        /**\n\t                         * Gets the 401k source as one of the well-known types.\n\t                         *\n\t                         * @return the 401k source or null if its not one of the well-known types\n\t                         */\n\t                        InvestmentExpenseTransaction.prototype.get401kSourceEnum = function () {\n\t                            return Inv401KSource_fromOfx(this.get401kSource());\n\t                        };\n\t                        return InvestmentExpenseTransaction;\n\t                    })(transactions.BaseOtherInvestmentTransaction);\n\t                    transactions.InvestmentExpenseTransaction = InvestmentExpenseTransaction;\n\t                    Aggregate_add(InvestmentExpenseTransaction, \"INVEXPENSE\");\n\t                    ChildAggregate_add(InvestmentExpenseTransaction, { required: true, order: 20, type: SecurityId, read: InvestmentExpenseTransaction.prototype.getSecurityId, write: InvestmentExpenseTransaction.prototype.setSecurityId });\n\t                    Element_add(InvestmentExpenseTransaction, { name: \"TOTAL\", required: true, order: 30, type: Number, read: InvestmentExpenseTransaction.prototype.getTotal, write: InvestmentExpenseTransaction.prototype.setTotal });\n\t                    Element_add(InvestmentExpenseTransaction, { name: \"SUBACCTSEC\", order: 40, type: String, read: InvestmentExpenseTransaction.prototype.getSubAccountSecurity, write: InvestmentExpenseTransaction.prototype.setSubAccountSecurity });\n\t                    Element_add(InvestmentExpenseTransaction, { name: \"SUBACCTFUND\", order: 50, type: String, read: InvestmentExpenseTransaction.prototype.getSubAccountFund, write: InvestmentExpenseTransaction.prototype.setSubAccountFund });\n\t                    Element_add(InvestmentExpenseTransaction, { name: \"CURRENCY\", order: 60, type: String, read: InvestmentExpenseTransaction.prototype.getCurrencyCode, write: InvestmentExpenseTransaction.prototype.setCurrencyCode });\n\t                    Element_add(InvestmentExpenseTransaction, { name: \"ORIGCURRENCY\", order: 70, type: transactions.OriginalCurrency, read: InvestmentExpenseTransaction.prototype.getOriginalCurrencyInfo, write: InvestmentExpenseTransaction.prototype.setOriginalCurrencyInfo });\n\t                    Element_add(InvestmentExpenseTransaction, { name: \"INV401KSOURCE\", order: 180, type: String, read: InvestmentExpenseTransaction.prototype.get401kSource, write: InvestmentExpenseTransaction.prototype.set401kSource });\n\t                })(transactions = investment.transactions || (investment.transactions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../../../meta/Element_add'/>\n\t///<reference path='../../investment/accounts/SubAccountType'/>\n\t///<reference path='BaseOtherInvestmentTransaction'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var transactions;\n\t                (function (transactions) {\n\t                    var SubAccountType_fromOfx = ofx4js.domain.data.investment.accounts.SubAccountType_fromOfx;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var Element_add = ofx4js.meta.Element_add;\n\t                    /**\n\t                     * Transaction for journal fund transactions between sub-accounts within the same investment\n\t                     * account.\n\t                     * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var JournalFundTransaction = (function (_super) {\n\t                        __extends(JournalFundTransaction, _super);\n\t                        function JournalFundTransaction() {\n\t                            _super.call(this, transactions.TransactionType.JOURNAL_FUND);\n\t                        }\n\t                        /**\n\t                         * Gets the sub account type the transer is from (e.g. CASH, MARGIN, SHORT, OTHER).\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @return the sub account type\n\t                         */\n\t                        JournalFundTransaction.prototype.getFromSubAccountFund = function () {\n\t                            return this.subAccountFrom;\n\t                        };\n\t                        /**\n\t                         * Sets the sub account type the transer is from (e.g. CASH, MARGIN, SHORT, OTHER).\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @param subAccountFrom the sub account type\n\t                         */\n\t                        JournalFundTransaction.prototype.setFromSubAccountFund = function (subAccountFrom) {\n\t                            this.subAccountFrom = subAccountFrom;\n\t                        };\n\t                        /**\n\t                         * Gets the result of getFromSubAccountFund as one of the well-known types.\n\t                         *\n\t                         * @return the type of null if it wasn't one of the well known types.\n\t                         */\n\t                        JournalFundTransaction.prototype.getFromSubAccountFundEnum = function () {\n\t                            return SubAccountType_fromOfx(this.getFromSubAccountFund());\n\t                        };\n\t                        /**\n\t                         * Gets the sub account type that the transfer is to (e.g. CASH, MARGIN, SHORT, OTHER).\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @return the sub account fund\n\t                         */\n\t                        JournalFundTransaction.prototype.getToSubAccountFund = function () {\n\t                            return this.subAccountTo;\n\t                        };\n\t                        /**\n\t                         * Sets the sub account type that the transfer is to (e.g. CASH, MARGIN, SHORT, OTHER).\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @param subAccountTo the sub account fund\n\t                         */\n\t                        JournalFundTransaction.prototype.setToSubAccountFund = function (subAccountTo) {\n\t                            this.subAccountTo = subAccountTo;\n\t                        };\n\t                        /**\n\t                         * Gets the result of getToSubAccountFund as one of the well-known types.\n\t                         *\n\t                         * @return the type of null if it wasn't one of the well known types.\n\t                         */\n\t                        JournalFundTransaction.prototype.getToSubAccountFundEnum = function () {\n\t                            return SubAccountType_fromOfx(this.getToSubAccountFund());\n\t                        };\n\t                        /**\n\t                         * Gets the total for the transaction.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @return the total\n\t                         */\n\t                        JournalFundTransaction.prototype.getTotal = function () {\n\t                            return this.total;\n\t                        };\n\t                        /**\n\t                         * Sets the total for the transaction.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @param total the total\n\t                         */\n\t                        JournalFundTransaction.prototype.setTotal = function (total) {\n\t                            this.total = total;\n\t                        };\n\t                        return JournalFundTransaction;\n\t                    })(transactions.BaseOtherInvestmentTransaction);\n\t                    transactions.JournalFundTransaction = JournalFundTransaction;\n\t                    Aggregate_add(JournalFundTransaction, \"JRNLFUND\");\n\t                    Element_add(JournalFundTransaction, { name: \"SUBACCTFROM\", order: 20, type: String, read: JournalFundTransaction.prototype.getFromSubAccountFund, write: JournalFundTransaction.prototype.setFromSubAccountFund });\n\t                    Element_add(JournalFundTransaction, { name: \"SUBACCTTO\", order: 30, type: String, read: JournalFundTransaction.prototype.getToSubAccountFund, write: JournalFundTransaction.prototype.setToSubAccountFund });\n\t                    Element_add(JournalFundTransaction, { name: \"TOTAL\", order: 40, type: Number, read: JournalFundTransaction.prototype.getTotal, write: JournalFundTransaction.prototype.setTotal });\n\t                })(transactions = investment.transactions || (investment.transactions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../../../meta/Element_add'/>\n\t///<reference path='../../investment/accounts/SubAccountType'/>\n\t///<reference path='../../seclist/SecurityId'/>\n\t///<reference path='BaseOtherInvestmentTransaction'/>\n\t///<reference path='TransactionWithSecurity'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var transactions;\n\t                (function (transactions) {\n\t                    var SubAccountType_fromOfx = ofx4js.domain.data.investment.accounts.SubAccountType_fromOfx;\n\t                    var SecurityId = ofx4js.domain.data.seclist.SecurityId;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                    var Element_add = ofx4js.meta.Element_add;\n\t                    /**\n\t                     * Transaction for journal security transactions between sub-accounts within the same investment\n\t                     * account.\n\t                     * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var JournalSecurityTransaction = (function (_super) {\n\t                        __extends(JournalSecurityTransaction, _super);\n\t                        function JournalSecurityTransaction() {\n\t                            _super.call(this, transactions.TransactionType.JOURNAL_SECURITY);\n\t                        }\n\t                        /**\n\t                         * Gets the id of the security that was transferred. This is a required field according to the OFX\n\t                         * spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the security id of the security that was bought\n\t                         */\n\t                        JournalSecurityTransaction.prototype.getSecurityId = function () {\n\t                            return this.securityId;\n\t                        };\n\t                        /**\n\t                         * Sets the id of the security that was transferred. This is a required field according to the OFX\n\t                         * spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param securityId the security id of the security that was bought\n\t                         */\n\t                        JournalSecurityTransaction.prototype.setSecurityId = function (securityId) {\n\t                            this.securityId = securityId;\n\t                        };\n\t                        /**\n\t                         * Gets the sub account type the transer is from (e.g. CASH, MARGIN, SHORT, OTHER).\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @return the sub account type\n\t                         */\n\t                        JournalSecurityTransaction.prototype.getFromSubAccountFund = function () {\n\t                            return this.subAccountFrom;\n\t                        };\n\t                        /**\n\t                         * Sets the sub account type the transer is from (e.g. CASH, MARGIN, SHORT, OTHER).\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @param subAccountFrom the sub account type\n\t                         */\n\t                        JournalSecurityTransaction.prototype.setFromSubAccountFund = function (subAccountFrom) {\n\t                            this.subAccountFrom = subAccountFrom;\n\t                        };\n\t                        /**\n\t                         * Gets the result of getFromSubAccountFund as one of the well-known types.\n\t                         *\n\t                         * @return the type of null if it wasn't one of the well known types.\n\t                         */\n\t                        JournalSecurityTransaction.prototype.getFromSubAccountFundEnum = function () {\n\t                            return SubAccountType_fromOfx(this.getFromSubAccountFund());\n\t                        };\n\t                        /**\n\t                         * Gets the sub account type that the transfer is to (e.g. CASH, MARGIN, SHORT, OTHER).\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @return the sub account fund\n\t                         */\n\t                        JournalSecurityTransaction.prototype.getToSubAccountFund = function () {\n\t                            return this.subAccountTo;\n\t                        };\n\t                        /**\n\t                         * sets the sub account type that the transfer is to (e.g. CASH, MARGIN, SHORT, OTHER).\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @param subAccountTo the sub account fund\n\t                         */\n\t                        JournalSecurityTransaction.prototype.setToSubAccountFund = function (subAccountTo) {\n\t                            this.subAccountTo = subAccountTo;\n\t                        };\n\t                        /**\n\t                         * Gets the result of getToSubAccountFund as one of the well-known types.\n\t                         *\n\t                         * @return the type of null if it wasn't one of the well known types.\n\t                         */\n\t                        JournalSecurityTransaction.prototype.getToSubAccountFundEnum = function () {\n\t                            return SubAccountType_fromOfx(this.getToSubAccountFund());\n\t                        };\n\t                        /**\n\t                         * Gets the total for the transaction.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @return the total\n\t                         */\n\t                        JournalSecurityTransaction.prototype.getTotal = function () {\n\t                            return this.total;\n\t                        };\n\t                        /**\n\t                         * Sets the total for the transaction.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @param total the total\n\t                         */\n\t                        JournalSecurityTransaction.prototype.setTotal = function (total) {\n\t                            this.total = total;\n\t                        };\n\t                        return JournalSecurityTransaction;\n\t                    })(transactions.BaseOtherInvestmentTransaction);\n\t                    transactions.JournalSecurityTransaction = JournalSecurityTransaction;\n\t                    Aggregate_add(JournalSecurityTransaction, \"JRNLSEC\");\n\t                    ChildAggregate_add(JournalSecurityTransaction, { required: true, order: 20, type: SecurityId, read: JournalSecurityTransaction.prototype.getSecurityId, write: JournalSecurityTransaction.prototype.setSecurityId });\n\t                    Element_add(JournalSecurityTransaction, { name: \"SUBACCTFROM\", order: 30, type: String, read: JournalSecurityTransaction.prototype.getFromSubAccountFund, write: JournalSecurityTransaction.prototype.setFromSubAccountFund });\n\t                    Element_add(JournalSecurityTransaction, { name: \"SUBACCTTO\", order: 40, type: String, read: JournalSecurityTransaction.prototype.getToSubAccountFund, write: JournalSecurityTransaction.prototype.setToSubAccountFund });\n\t                    Element_add(JournalSecurityTransaction, { name: \"TOTAL\", order: 50, type: Number, read: JournalSecurityTransaction.prototype.getTotal, write: JournalSecurityTransaction.prototype.setTotal });\n\t                })(transactions = investment.transactions || (investment.transactions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../../../meta/Element_add'/>\n\t///<reference path='../../investment/accounts/SubAccountType'/>\n\t///<reference path='BaseOtherInvestmentTransaction'/>\n\t///<reference path='OriginalCurrency'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var transactions;\n\t                (function (transactions) {\n\t                    var SubAccountType = ofx4js.domain.data.investment.accounts.SubAccountType;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var Element_add = ofx4js.meta.Element_add;\n\t                    /**\n\t                     * Transaction for journal security transactions between sub-accounts within the same investment\n\t                     * account.\n\t                     * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var MarginInterestTransaction = (function (_super) {\n\t                        __extends(MarginInterestTransaction, _super);\n\t                        function MarginInterestTransaction() {\n\t                            _super.call(this, transactions.TransactionType.MARGIN_INTEREST);\n\t                        }\n\t                        /**\n\t                         * Gets the sub account type the margin interest affects (e.g. CASH, MARGIN, SHORT, OTHER).\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @return the sub account type\n\t                         */\n\t                        MarginInterestTransaction.prototype.getSubAccountFund = function () {\n\t                            return this.subAccountFund;\n\t                        };\n\t                        /**\n\t                         * Sets the sub account type the margin interest affects (e.g. CASH, MARGIN, SHORT, OTHER).\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @param subAccountFund the sub account type\n\t                         */\n\t                        MarginInterestTransaction.prototype.setSubAccountFund = function (subAccountFund) {\n\t                            this.subAccountFund = subAccountFund;\n\t                        };\n\t                        /**\n\t                         * Gets the result of getSubAccountFund as one of the well-known types.\n\t                         *\n\t                         * @return the type of null if it wasn't one of the well known types.\n\t                         */\n\t                        MarginInterestTransaction.prototype.getSubAccountFundEnum = function () {\n\t                            var type = this.getSubAccountFund();\n\t                            return type != null ? SubAccountType[type] : null;\n\t                        };\n\t                        /**\n\t                         * Gets the total for the transaction.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @return the total\n\t                         */\n\t                        MarginInterestTransaction.prototype.getTotal = function () {\n\t                            return this.total;\n\t                        };\n\t                        /**\n\t                         * Sets the total for the transaction.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @param total the total\n\t                         */\n\t                        MarginInterestTransaction.prototype.setTotal = function (total) {\n\t                            this.total = total;\n\t                        };\n\t                        /**\n\t                         * Gets the currency code for the transaction. Only one of currency code or original currency\n\t                         * info should be set according to the OFX spec. If neither are set, means the default currency.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the currency code for the transaction.\n\t                         */\n\t                        MarginInterestTransaction.prototype.getCurrencyCode = function () {\n\t                            return this.currencyCode;\n\t                        };\n\t                        /**\n\t                         * Sets the currency code for the transaction. Only one of currency code or original currency\n\t                         * info should be set according to the OFX spec. If neither are set, means the default currency.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param currencyCode the currency code for the transaction.\n\t                         */\n\t                        MarginInterestTransaction.prototype.setCurrencyCode = function (currencyCode) {\n\t                            this.currencyCode = currencyCode;\n\t                            this.originalCurrencyInfo = null;\n\t                        };\n\t                        /**\n\t                         * Gets the original currency info for the transaction.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the original currency info for the transaction.\n\t                         */\n\t                        MarginInterestTransaction.prototype.getOriginalCurrencyInfo = function () {\n\t                            return this.originalCurrencyInfo;\n\t                        };\n\t                        /**\n\t                         * Sets the original currency info for the transaction.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param originalCurrency the original currency info for the transaction.\n\t                         */\n\t                        MarginInterestTransaction.prototype.setOriginalCurrencyInfo = function (originalCurrency) {\n\t                            this.originalCurrencyInfo = originalCurrency;\n\t                            this.currencyCode = null;\n\t                        };\n\t                        return MarginInterestTransaction;\n\t                    })(transactions.BaseOtherInvestmentTransaction);\n\t                    transactions.MarginInterestTransaction = MarginInterestTransaction;\n\t                    Aggregate_add(MarginInterestTransaction, \"MARGININTEREST\");\n\t                    Element_add(MarginInterestTransaction, { name: \"SUBACCTFUND\", order: 30, type: String, read: MarginInterestTransaction.prototype.getSubAccountFund, write: MarginInterestTransaction.prototype.setSubAccountFund });\n\t                    Element_add(MarginInterestTransaction, { name: \"TOTAL\", order: 40, type: Number, read: MarginInterestTransaction.prototype.getTotal, write: MarginInterestTransaction.prototype.setTotal });\n\t                    Element_add(MarginInterestTransaction, { name: \"CURRENCY\", order: 110, type: String, read: MarginInterestTransaction.prototype.getCurrencyCode, write: MarginInterestTransaction.prototype.setCurrencyCode });\n\t                    Element_add(MarginInterestTransaction, { name: \"ORIGCURRENCY\", order: 120, type: transactions.OriginalCurrency, read: MarginInterestTransaction.prototype.getOriginalCurrencyInfo, write: MarginInterestTransaction.prototype.setOriginalCurrencyInfo });\n\t                })(transactions = investment.transactions || (investment.transactions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var transactions;\n\t                (function (transactions) {\n\t                    /**\n\t                     * Type of sale for options.\n\t                     * @see \"Section 13.9.2.4.2, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    (function (OptionSellType) {\n\t                        OptionSellType[OptionSellType[\"SELL_TO_CLOSE\"] = 0] = \"SELL_TO_CLOSE\";\n\t                        OptionSellType[OptionSellType[\"SELL_TO_OPEN\"] = 1] = \"SELL_TO_OPEN\";\n\t                    })(transactions.OptionSellType || (transactions.OptionSellType = {}));\n\t                    var OptionSellType = transactions.OptionSellType;\n\t                    function OptionSellType_fromOfx(ofxVal) {\n\t                        if (\"SELLTOOPEN\" === ofxVal) {\n\t                            return OptionSellType.SELL_TO_OPEN;\n\t                        }\n\t                        else if (\"SELLTOCLOSE\" === ofxVal) {\n\t                            return OptionSellType.SELL_TO_CLOSE;\n\t                        }\n\t                        else {\n\t                            return null;\n\t                        }\n\t                    }\n\t                    transactions.OptionSellType_fromOfx = OptionSellType_fromOfx;\n\t                })(transactions = investment.transactions || (investment.transactions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../../../meta/Element_add'/>\n\t///<reference path='../../investment/accounts/SubAccountType'/>\n\t///<reference path='../../investment/positions/Inv401KSource'/>\n\t///<reference path='../../seclist/SecurityId'/>\n\t///<reference path='BaseOtherInvestmentTransaction'/>\n\t///<reference path='TransactionWithSecurity'/>\n\t///<reference path='OriginalCurrency'/>\n\t///<reference path='IncomeType'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var transactions;\n\t                (function (transactions) {\n\t                    var SubAccountType_fromOfx = ofx4js.domain.data.investment.accounts.SubAccountType_fromOfx;\n\t                    var Inv401KSource_fromOfx = ofx4js.domain.data.investment.positions.Inv401KSource_fromOfx;\n\t                    var SecurityId = ofx4js.domain.data.seclist.SecurityId;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                    var Element_add = ofx4js.meta.Element_add;\n\t                    /**\n\t                     * Transaction for reinvestment transactions.\n\t                     * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var ReinvestIncomeTransaction = (function (_super) {\n\t                        __extends(ReinvestIncomeTransaction, _super);\n\t                        function ReinvestIncomeTransaction() {\n\t                            _super.call(this, transactions.TransactionType.REINVEST_INCOME);\n\t                        }\n\t                        /**\n\t                         * Gets the id of the security that was reinvested in. This is a required field according to the\n\t                         * OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the security id of the security that was reinvested in\n\t                         */\n\t                        ReinvestIncomeTransaction.prototype.getSecurityId = function () {\n\t                            return this.securityId;\n\t                        };\n\t                        /**\n\t                         * Sets the id of the security that was reinvested in. This is a required field according to the\n\t                         * OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param securityId the security id of the security that was reinvested in\n\t                         */\n\t                        ReinvestIncomeTransaction.prototype.setSecurityId = function (securityId) {\n\t                            this.securityId = securityId;\n\t                        };\n\t                        /**\n\t                         * Gets the type of income. One of \"CGLONG\" (long term capital gains), \"CGSHORT\" (short term\n\t                         * capital gains), \"DIV\" (dividend), INTEREST, or MISC. This is a required field according to the\n\t                         * OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\" This is a required field according to the OFX spec.\n\t                         *\n\t                         * @return the type of income\n\t                         */\n\t                        ReinvestIncomeTransaction.prototype.getIncomeType = function () {\n\t                            return this.incomeType;\n\t                        };\n\t                        /**\n\t                         * Sets the type of income. One of \"CGLONG\" (long term capital gains), \"CGSHORT\" (short term\n\t                         * capital gains), \"DIV\" (dividend), INTEREST, or MISC. This is a required field according to the\n\t                         * OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\" This is a required field according to the OFX spec.\n\t                         *\n\t                         * @param incomeType the type of income\n\t                         */\n\t                        ReinvestIncomeTransaction.prototype.setIncomeType = function (incomeType) {\n\t                            this.incomeType = incomeType;\n\t                        };\n\t                        /**\n\t                         * Gets the type of income as one of the well-known types.\n\t                         *\n\t                         * @return the income type or null if it's not one of the well-known types\n\t                         */\n\t                        ReinvestIncomeTransaction.prototype.getIncomeTypeEnum = function () {\n\t                            return transactions.IncomeType_fromOfx(this.getIncomeType());\n\t                        };\n\t                        /**\n\t                         * Gets the total income received. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @return the total\n\t                         */\n\t                        ReinvestIncomeTransaction.prototype.getTotal = function () {\n\t                            return this.total;\n\t                        };\n\t                        /**\n\t                         * Sets the total income received. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @param total the total\n\t                         */\n\t                        ReinvestIncomeTransaction.prototype.setTotal = function (total) {\n\t                            this.total = total;\n\t                        };\n\t                        /**\n\t                         * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER). This is a\n\t                         * required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the sub account type\n\t                         */\n\t                        ReinvestIncomeTransaction.prototype.getSubAccountSecurity = function () {\n\t                            return this.subAccountSecurity;\n\t                        };\n\t                        /**\n\t                         * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER). This is a\n\t                         * required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param subAccountSecurity the sub account type\n\t                         */\n\t                        ReinvestIncomeTransaction.prototype.setSubAccountSecurity = function (subAccountSecurity) {\n\t                            this.subAccountSecurity = subAccountSecurity;\n\t                        };\n\t                        /**\n\t                         * Gets the result of getSubAccountSecurity as one of the well-known types.\n\t                         *\n\t                         * @return the type of null if it wasn't one of the well known types\n\t                         */\n\t                        ReinvestIncomeTransaction.prototype.getSubAccountSecurityEnum = function () {\n\t                            return SubAccountType_fromOfx(this.getSubAccountSecurity());\n\t                        };\n\t                        /**\n\t                         * Gets the number of units of the security that was reinvested in. This is a required field\n\t                         * according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the number of units purchased\n\t                         */\n\t                        ReinvestIncomeTransaction.prototype.getUnits = function () {\n\t                            return this.units;\n\t                        };\n\t                        /**\n\t                         * Sets the number of units of the security that was reinvested in. This is a required field\n\t                         * according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param units the number of units purchased\n\t                         */\n\t                        ReinvestIncomeTransaction.prototype.setUnits = function (units) {\n\t                            this.units = units;\n\t                        };\n\t                        /**\n\t                         * Gets the price per commonly-quoted unit. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the per unit price\n\t                         */\n\t                        ReinvestIncomeTransaction.prototype.getUnitPrice = function () {\n\t                            return this.unitPrice;\n\t                        };\n\t                        /**\n\t                         * Sets the price per commonly-quoted unit. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param unitPrice the per unit price\n\t                         */\n\t                        ReinvestIncomeTransaction.prototype.setUnitPrice = function (unitPrice) {\n\t                            this.unitPrice = unitPrice;\n\t                        };\n\t                        /**\n\t                         * Gets the transaction commission for the reinvestment. This is an optional field according to\n\t                         * the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the transaction commision\n\t                         */\n\t                        ReinvestIncomeTransaction.prototype.getCommission = function () {\n\t                            return this.commission;\n\t                        };\n\t                        /**\n\t                         * Sets the transaction commission for the reinvestment. This is an optional field according to\n\t                         * the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param commission the transaction commision\n\t                         */\n\t                        ReinvestIncomeTransaction.prototype.setCommission = function (commission) {\n\t                            this.commission = commission;\n\t                        };\n\t                        /**\n\t                         * Gets the taxes for the reinvestment. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the transaction taxes\n\t                         */\n\t                        ReinvestIncomeTransaction.prototype.getTaxes = function () {\n\t                            return this.taxes;\n\t                        };\n\t                        /**\n\t                         * Sets the taxes for the reinvestment. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param taxes the transaction taxes\n\t                         */\n\t                        ReinvestIncomeTransaction.prototype.setTaxes = function (taxes) {\n\t                            this.taxes = taxes;\n\t                        };\n\t                        /**\n\t                         * Gets the fees for the reinvestment. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the transaction fees\n\t                         */\n\t                        ReinvestIncomeTransaction.prototype.getFees = function () {\n\t                            return this.fees;\n\t                        };\n\t                        /**\n\t                         * Sets the fees for the reinvestment. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param fees the transaction fees\n\t                         */\n\t                        ReinvestIncomeTransaction.prototype.setFees = function (fees) {\n\t                            this.fees = fees;\n\t                        };\n\t                        /**\n\t                         * Gets the load for the reinvestment. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the load\n\t                         */\n\t                        ReinvestIncomeTransaction.prototype.getLoad = function () {\n\t                            return this.load;\n\t                        };\n\t                        /**\n\t                         * Sets the load for the reinvestment. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param load the load\n\t                         */\n\t                        ReinvestIncomeTransaction.prototype.setLoad = function (load) {\n\t                            this.load = load;\n\t                        };\n\t                        /**\n\t                         * Gets whether the income was tax exempt. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return whether the transaction was tax exempt\n\t                         */\n\t                        ReinvestIncomeTransaction.prototype.getTaxExempt = function () {\n\t                            return this.taxExempt;\n\t                        };\n\t                        /**\n\t                         * Sets whether the income was tax exempt. This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param taxExempt whether the transaction was tax exempt\n\t                         */\n\t                        ReinvestIncomeTransaction.prototype.setTaxExempt = function (taxExempt) {\n\t                            this.taxExempt = taxExempt;\n\t                        };\n\t                        /**\n\t                         * Gets the currency code for the transaction. Only one of currency code or original currency\n\t                         * info should be set according to the OFX spec. If neither are set, means the default currency.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the currency code for the transaction\n\t                         */\n\t                        ReinvestIncomeTransaction.prototype.getCurrencyCode = function () {\n\t                            return this.currencyCode;\n\t                        };\n\t                        /**\n\t                         * Sets the currency code for the transaction. Only one of currency code or original currency\n\t                         * info should be set according to the OFX spec. If neither are set, means the default currency.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param currencyCode the currency code for the transaction\n\t                         */\n\t                        ReinvestIncomeTransaction.prototype.setCurrencyCode = function (currencyCode) {\n\t                            this.currencyCode = currencyCode;\n\t                            this.originalCurrencyInfo = null;\n\t                        };\n\t                        /**\n\t                         * Gets the original currency info for the transaction.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the original currency info for the transaction.\n\t                         */\n\t                        ReinvestIncomeTransaction.prototype.getOriginalCurrencyInfo = function () {\n\t                            return this.originalCurrencyInfo;\n\t                        };\n\t                        /**\n\t                         * Sets the original currency info for the transaction.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param originalCurrencyInfo the original currency info for the transaction.\n\t                         */\n\t                        ReinvestIncomeTransaction.prototype.setOriginalCurrencyInfo = function (originalCurrencyInfo) {\n\t                            this.originalCurrencyInfo = originalCurrencyInfo;\n\t                            this.currencyCode = null;\n\t                        };\n\t                        /**\n\t                         * Gets the 401K source for the reinvestment. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n\t                         * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n\t                         * according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the state withholding\n\t                         */\n\t                        ReinvestIncomeTransaction.prototype.get401kSource = function () {\n\t                            return this.inv401kSource;\n\t                        };\n\t                        /**\n\t                         * Sets the 401K source for the reinvestment. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n\t                         * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n\t                         * according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param inv401kSource the state withholding\n\t                         */\n\t                        ReinvestIncomeTransaction.prototype.set401kSource = function (inv401kSource) {\n\t                            this.inv401kSource = inv401kSource;\n\t                        };\n\t                        /**\n\t                         * Gets the 401(k) source as one of the well-known types.\n\t                         *\n\t                         * @return the type of close or null if it's not well known\n\t                         */\n\t                        ReinvestIncomeTransaction.prototype.get401kSourceEnum = function () {\n\t                            return Inv401KSource_fromOfx(this.get401kSource());\n\t                        };\n\t                        return ReinvestIncomeTransaction;\n\t                    })(transactions.BaseOtherInvestmentTransaction);\n\t                    transactions.ReinvestIncomeTransaction = ReinvestIncomeTransaction;\n\t                    Aggregate_add(ReinvestIncomeTransaction, \"REINVEST\");\n\t                    ChildAggregate_add(ReinvestIncomeTransaction, { required: true, order: 20, type: SecurityId, read: ReinvestIncomeTransaction.prototype.getSecurityId, write: ReinvestIncomeTransaction.prototype.setSecurityId });\n\t                    Element_add(ReinvestIncomeTransaction, { name: \"INCOMETYPE\", required: true, order: 30, type: String, read: ReinvestIncomeTransaction.prototype.getIncomeType, write: ReinvestIncomeTransaction.prototype.setIncomeType });\n\t                    Element_add(ReinvestIncomeTransaction, { name: \"TOTAL\", required: true, order: 40, type: Number, read: ReinvestIncomeTransaction.prototype.getTotal, write: ReinvestIncomeTransaction.prototype.setTotal });\n\t                    Element_add(ReinvestIncomeTransaction, { name: \"SUBACCTSEC\", order: 50, type: String, read: ReinvestIncomeTransaction.prototype.getSubAccountSecurity, write: ReinvestIncomeTransaction.prototype.setSubAccountSecurity });\n\t                    Element_add(ReinvestIncomeTransaction, { name: \"UNITS\", required: true, order: 60, type: Number, read: ReinvestIncomeTransaction.prototype.getUnits, write: ReinvestIncomeTransaction.prototype.setUnits });\n\t                    Element_add(ReinvestIncomeTransaction, { name: \"UNITPRICE\", required: true, order: 70, type: Number, read: ReinvestIncomeTransaction.prototype.getUnitPrice, write: ReinvestIncomeTransaction.prototype.setUnitPrice });\n\t                    Element_add(ReinvestIncomeTransaction, { name: \"COMMISSION\", order: 80, type: Number, read: ReinvestIncomeTransaction.prototype.getCommission, write: ReinvestIncomeTransaction.prototype.setCommission });\n\t                    Element_add(ReinvestIncomeTransaction, { name: \"TAXES\", order: 90, type: Number, read: ReinvestIncomeTransaction.prototype.getTaxes, write: ReinvestIncomeTransaction.prototype.setTaxes });\n\t                    Element_add(ReinvestIncomeTransaction, { name: \"FEES\", order: 100, type: Number, read: ReinvestIncomeTransaction.prototype.getFees, write: ReinvestIncomeTransaction.prototype.setFees });\n\t                    Element_add(ReinvestIncomeTransaction, { name: \"LOAD\", order: 110, type: Number, read: ReinvestIncomeTransaction.prototype.getLoad, write: ReinvestIncomeTransaction.prototype.setLoad });\n\t                    Element_add(ReinvestIncomeTransaction, { name: \"TAXEXEMPT\", order: 120, type: Boolean, read: ReinvestIncomeTransaction.prototype.getTaxExempt, write: ReinvestIncomeTransaction.prototype.setTaxExempt });\n\t                    Element_add(ReinvestIncomeTransaction, { name: \"CURRENCY\", order: 130, type: String, read: ReinvestIncomeTransaction.prototype.getCurrencyCode, write: ReinvestIncomeTransaction.prototype.setCurrencyCode });\n\t                    Element_add(ReinvestIncomeTransaction, { name: \"ORIGCURRENCY\", order: 140, type: transactions.OriginalCurrency, read: ReinvestIncomeTransaction.prototype.getOriginalCurrencyInfo, write: ReinvestIncomeTransaction.prototype.setOriginalCurrencyInfo });\n\t                    Element_add(ReinvestIncomeTransaction, { name: \"INV401KSOURCE\", order: 150, type: String, read: ReinvestIncomeTransaction.prototype.get401kSource, write: ReinvestIncomeTransaction.prototype.set401kSource });\n\t                })(transactions = investment.transactions || (investment.transactions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var transactions;\n\t                (function (transactions) {\n\t                    /**\n\t                     * Related option transaction type.\n\t                     * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    (function (RelatedOptionType) {\n\t                        RelatedOptionType[RelatedOptionType[\"SPREAD\"] = 0] = \"SPREAD\";\n\t                        RelatedOptionType[RelatedOptionType[\"STRADDLE\"] = 1] = \"STRADDLE\";\n\t                        RelatedOptionType[RelatedOptionType[\"NONE\"] = 2] = \"NONE\";\n\t                        RelatedOptionType[RelatedOptionType[\"OTHER\"] = 3] = \"OTHER\";\n\t                    })(transactions.RelatedOptionType || (transactions.RelatedOptionType = {}));\n\t                    var RelatedOptionType = transactions.RelatedOptionType;\n\t                    function RelatedOptionType_fromOfx(ofxVal) {\n\t                        if (\"SPREAD\" === ofxVal) {\n\t                            return RelatedOptionType.SPREAD;\n\t                        }\n\t                        else if (\"STRADDLE\" === ofxVal) {\n\t                            return RelatedOptionType.STRADDLE;\n\t                        }\n\t                        else if (\"NONE\" === ofxVal) {\n\t                            return RelatedOptionType.NONE;\n\t                        }\n\t                        else if (\"OTHER\" === ofxVal) {\n\t                            return RelatedOptionType.OTHER;\n\t                        }\n\t                        else {\n\t                            return null;\n\t                        }\n\t                    }\n\t                    transactions.RelatedOptionType_fromOfx = RelatedOptionType_fromOfx;\n\t                })(transactions = investment.transactions || (investment.transactions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../../../meta/Element_add'/>\n\t///<reference path='../../investment/accounts/SubAccountType'/>\n\t///<reference path='../../investment/positions/Inv401KSource'/>\n\t///<reference path='../../seclist/SecurityId'/>\n\t///<reference path='BaseOtherInvestmentTransaction'/>\n\t///<reference path='TransactionWithSecurity'/>\n\t///<reference path='OriginalCurrency'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var transactions;\n\t                (function (transactions) {\n\t                    var SubAccountType_fromOfx = ofx4js.domain.data.investment.accounts.SubAccountType_fromOfx;\n\t                    var Inv401KSource_fromOfx = ofx4js.domain.data.investment.positions.Inv401KSource_fromOfx;\n\t                    var SecurityId = ofx4js.domain.data.seclist.SecurityId;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                    var Element_add = ofx4js.meta.Element_add;\n\t                    /**\n\t                     * Transaction for return of capital transactions.\n\t                     * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var ReturnOfCapitalTransaction = (function (_super) {\n\t                        __extends(ReturnOfCapitalTransaction, _super);\n\t                        function ReturnOfCapitalTransaction() {\n\t                            _super.call(this, transactions.TransactionType.RETURN_OF_CAPITAL);\n\t                        }\n\t                        /**\n\t                         * Gets the id of the security that capital was returned from. This is a required field according\n\t                         * to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the security id of the security that capital was returned from\n\t                         */\n\t                        ReturnOfCapitalTransaction.prototype.getSecurityId = function () {\n\t                            return this.securityId;\n\t                        };\n\t                        /**\n\t                         * Sets the id of the security that capital was returned from. This is a required field according\n\t                         * to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param securityId the security id of the security that capital was returned from\n\t                         */\n\t                        ReturnOfCapitalTransaction.prototype.setSecurityId = function (securityId) {\n\t                            this.securityId = securityId;\n\t                        };\n\t                        /**\n\t                         * Gets the total amount of capital returned. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @return the total\n\t                         */\n\t                        ReturnOfCapitalTransaction.prototype.getTotal = function () {\n\t                            return this.total;\n\t                        };\n\t                        /**\n\t                         * Sets the total amount of capital returned. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @param total the total\n\t                         */\n\t                        ReturnOfCapitalTransaction.prototype.setTotal = function (total) {\n\t                            this.total = total;\n\t                        };\n\t                        /**\n\t                         * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER). This is a\n\t                         * required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the sub account type\n\t                         */\n\t                        ReturnOfCapitalTransaction.prototype.getSubAccountSecurity = function () {\n\t                            return this.subAccountSecurity;\n\t                        };\n\t                        /**\n\t                         * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER). This is a\n\t                         * required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param subAccountSecurity the sub account type\n\t                         */\n\t                        ReturnOfCapitalTransaction.prototype.setSubAccountSecurity = function (subAccountSecurity) {\n\t                            this.subAccountSecurity = subAccountSecurity;\n\t                        };\n\t                        /**\n\t                         * Gets the result of getSubAccountSecurity as one of the well-known types.\n\t                         *\n\t                         * @return the type of null if it wasn't one of the well known types.\n\t                         */\n\t                        ReturnOfCapitalTransaction.prototype.getSubAccountSecurityEnum = function () {\n\t                            return SubAccountType_fromOfx(this.getSubAccountSecurity());\n\t                        };\n\t                        /**\n\t                         * Gets the sub account type that the transaction affects.\n\t                         * (e.g. CASH, MARGIN, SHORT, OTHER). This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the sub account fund\n\t                         */\n\t                        ReturnOfCapitalTransaction.prototype.getSubAccountFund = function () {\n\t                            return this.subAccountFund;\n\t                        };\n\t                        /**\n\t                         * Sets the sub account type that the transaction affects.\n\t                         * (e.g. CASH, MARGIN, SHORT, OTHER). This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param subAccountFund the sub account fund\n\t                         */\n\t                        ReturnOfCapitalTransaction.prototype.setSubAccountFund = function (subAccountFund) {\n\t                            this.subAccountFund = subAccountFund;\n\t                        };\n\t                        /**\n\t                         * Gets the result of getSubAccountFund as one of the well-known types.\n\t                         *\n\t                         * @return the type of null if it wasn't one of the well known types\n\t                         */\n\t                        ReturnOfCapitalTransaction.prototype.getSubAccountFundEnum = function () {\n\t                            return SubAccountType_fromOfx(this.getSubAccountFund());\n\t                        };\n\t                        /**\n\t                         * Gets the currency code for the transaction. Only one of currency code or original currency\n\t                         * info should be set according to the OFX spec. If neither are set, means the default currency.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the currency code for the transaction\n\t                         */\n\t                        ReturnOfCapitalTransaction.prototype.getCurrencyCode = function () {\n\t                            return this.currencyCode;\n\t                        };\n\t                        /**\n\t                         * Sets the currency code for the transaction. Only one of currency code or original currency\n\t                         * info should be set according to the OFX spec. If neither are set, means the default currency.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param currencyCode the currency code for the transaction\n\t                         */\n\t                        ReturnOfCapitalTransaction.prototype.setCurrencyCode = function (currencyCode) {\n\t                            this.currencyCode = currencyCode;\n\t                            this.originalCurrencyInfo = null;\n\t                        };\n\t                        /**\n\t                         * Gets the original currency info for the transaction.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the currency code for the transaction.\n\t                         */\n\t                        ReturnOfCapitalTransaction.prototype.getOriginalCurrencyInfo = function () {\n\t                            return this.originalCurrencyInfo;\n\t                        };\n\t                        /**\n\t                         * Sets the original currency info for the transaction.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param originalCurrencyInfo the currency code for the transaction.\n\t                         */\n\t                        ReturnOfCapitalTransaction.prototype.setOriginalCurrencyInfo = function (originalCurrencyInfo) {\n\t                            this.originalCurrencyInfo = originalCurrencyInfo;\n\t                            this.currencyCode = null;\n\t                        };\n\t                        /**\n\t                         * Gets the 401K source for the reinvestment. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n\t                         * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n\t                         * according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the state withholding\n\t                         */\n\t                        ReturnOfCapitalTransaction.prototype.get401kSource = function () {\n\t                            return this.inv401kSource;\n\t                        };\n\t                        /**\n\t                         * Sets the 401K source for the reinvestment. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n\t                         * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n\t                         * according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param inv401kSource the state withholding\n\t                         */\n\t                        ReturnOfCapitalTransaction.prototype.set401kSource = function (inv401kSource) {\n\t                            this.inv401kSource = inv401kSource;\n\t                        };\n\t                        /**\n\t                         * Gets the 401(k) source as one of the well-known types.\n\t                         *\n\t                         * @return the type of close or null if it's not well known.\n\t                         */\n\t                        ReturnOfCapitalTransaction.prototype.get401kSourceEnum = function () {\n\t                            return Inv401KSource_fromOfx(this.get401kSource());\n\t                        };\n\t                        return ReturnOfCapitalTransaction;\n\t                    })(transactions.BaseOtherInvestmentTransaction);\n\t                    transactions.ReturnOfCapitalTransaction = ReturnOfCapitalTransaction;\n\t                    Aggregate_add(ReturnOfCapitalTransaction, \"RETOFCAP\");\n\t                    ChildAggregate_add(ReturnOfCapitalTransaction, { required: true, order: 20, type: SecurityId, read: ReturnOfCapitalTransaction.prototype.getSecurityId, write: ReturnOfCapitalTransaction.prototype.setSecurityId });\n\t                    Element_add(ReturnOfCapitalTransaction, { name: \"TOTAL\", required: true, order: 40, type: Number, read: ReturnOfCapitalTransaction.prototype.getTotal, write: ReturnOfCapitalTransaction.prototype.setTotal });\n\t                    Element_add(ReturnOfCapitalTransaction, { name: \"SUBACCTSEC\", order: 50, type: String, read: ReturnOfCapitalTransaction.prototype.getSubAccountSecurity, write: ReturnOfCapitalTransaction.prototype.setSubAccountSecurity });\n\t                    Element_add(ReturnOfCapitalTransaction, { name: \"SUBACCTFUND\", order: 140, type: String, read: ReturnOfCapitalTransaction.prototype.getSubAccountFund, write: ReturnOfCapitalTransaction.prototype.setSubAccountFund });\n\t                    Element_add(ReturnOfCapitalTransaction, { name: \"CURRENCY\", order: 110, type: String, read: ReturnOfCapitalTransaction.prototype.getCurrencyCode, write: ReturnOfCapitalTransaction.prototype.setCurrencyCode });\n\t                    Element_add(ReturnOfCapitalTransaction, { name: \"ORIGCURRENCY\", order: 120, type: transactions.OriginalCurrency, read: ReturnOfCapitalTransaction.prototype.getOriginalCurrencyInfo, write: ReturnOfCapitalTransaction.prototype.setOriginalCurrencyInfo });\n\t                    Element_add(ReturnOfCapitalTransaction, { name: \"INV401KSOURCE\", order: 180, type: String, read: ReturnOfCapitalTransaction.prototype.get401kSource, write: ReturnOfCapitalTransaction.prototype.set401kSource });\n\t                })(transactions = investment.transactions || (investment.transactions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var transactions;\n\t                (function (transactions) {\n\t                    /**\n\t                     * Reason debt was sold.\n\t                     * @see \"Section 13.9.2.4.2, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    (function (SellDebtReason) {\n\t                        SellDebtReason[SellDebtReason[\"CALL\"] = 0] = \"CALL\";\n\t                        SellDebtReason[SellDebtReason[\"SELL\"] = 1] = \"SELL\";\n\t                        SellDebtReason[SellDebtReason[\"MATURITY\"] = 2] = \"MATURITY\";\n\t                    })(transactions.SellDebtReason || (transactions.SellDebtReason = {}));\n\t                    var SellDebtReason = transactions.SellDebtReason;\n\t                    function SellDebtReason_fromOfx(ofxVal) {\n\t                        if (\"CALL\" === ofxVal) {\n\t                            return SellDebtReason.CALL;\n\t                        }\n\t                        else if (\"SELL\" === ofxVal) {\n\t                            return SellDebtReason.SELL;\n\t                        }\n\t                        else if (\"MATURITY\" === ofxVal) {\n\t                            return SellDebtReason.MATURITY;\n\t                        }\n\t                        else {\n\t                            return null;\n\t                        }\n\t                    }\n\t                    transactions.SellDebtReason_fromOfx = SellDebtReason_fromOfx;\n\t                })(transactions = investment.transactions || (investment.transactions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../../../meta/Element_add'/>\n\t///<reference path='BaseSellInvestmentTransaction'/>\n\t///<reference path='SellDebtReason'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var transactions;\n\t                (function (transactions) {\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var Element_add = ofx4js.meta.Element_add;\n\t                    /**\n\t                     * Transaction for selling debt (i.e. bonds, CDs, etc.,).\n\t                     * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var SellDebtTransaction = (function (_super) {\n\t                        __extends(SellDebtTransaction, _super);\n\t                        function SellDebtTransaction() {\n\t                            _super.call(this, transactions.TransactionType.SELL_DEBT);\n\t                        }\n\t                        /**\n\t                         * Gets the reason for the sale. One of \"CALL\" (the debt was called), \"SELL\" (the debt was sold),\n\t                         * \"MATURITY\" (the debt reached maturity).\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @return The reason for the sale\n\t                         */\n\t                        SellDebtTransaction.prototype.getSellReason = function () {\n\t                            return this.sellReason;\n\t                        };\n\t                        /**\n\t                         * Sets the reason for the sale. One of \"CALL\" (the debt was called), \"SELL\" (the debt was sold),\n\t                         * \"MATURITY\" (the debt reached maturity).\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @param sellReason The reason for the sale\n\t                         */\n\t                        SellDebtTransaction.prototype.setSellReason = function (sellReason) {\n\t                            this.sellReason = sellReason;\n\t                        };\n\t                        /**\n\t                         * Gets the sell reason as one of the well-known types.\n\t                         *\n\t                         * @return the sell reason or null if it's not well known\n\t                         */\n\t                        SellDebtTransaction.prototype.getSellReasonEnum = function () {\n\t                            return transactions.SellDebtReason_fromOfx(this.getSellReason());\n\t                        };\n\t                        /**\n\t                         * Gets the amount of accrued interest on the debt. This is an optional field according to the\n\t                         * OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @return the amount of accrued interest\n\t                         */\n\t                        SellDebtTransaction.prototype.getAccruedInterest = function () {\n\t                            return this.accruedInterest;\n\t                        };\n\t                        /**\n\t                         * Sets the amount of accrued interest on the debt. This is an optional field according to the\n\t                         * OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @param accruedInterest the amount of accrued interest\n\t                         */\n\t                        SellDebtTransaction.prototype.setAccruedInterest = function (accruedInterest) {\n\t                            this.accruedInterest = accruedInterest;\n\t                        };\n\t                        return SellDebtTransaction;\n\t                    })(transactions.BaseSellInvestmentTransaction);\n\t                    transactions.SellDebtTransaction = SellDebtTransaction;\n\t                    Aggregate_add(SellDebtTransaction, \"SELLDEBT\");\n\t                    Element_add(SellDebtTransaction, { name: \"SELLREASON\", order: 30, type: String, read: SellDebtTransaction.prototype.getSellReason, write: SellDebtTransaction.prototype.setSellReason });\n\t                    Element_add(SellDebtTransaction, { name: \"ACCRDINT\", order: 40, type: Number, read: SellDebtTransaction.prototype.getAccruedInterest, write: SellDebtTransaction.prototype.setAccruedInterest });\n\t                })(transactions = investment.transactions || (investment.transactions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var transactions;\n\t                (function (transactions) {\n\t                    /**\n\t                     * Type of sale for stocks and mutual funds.\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    (function (SellType) {\n\t                        SellType[SellType[\"SELL\"] = 0] = \"SELL\";\n\t                        SellType[SellType[\"SELL_SHORT\"] = 1] = \"SELL_SHORT\";\n\t                    })(transactions.SellType || (transactions.SellType = {}));\n\t                    var SellType = transactions.SellType;\n\t                    function SellType_fromOfx(ofxVal) {\n\t                        if (\"SELL\" === ofxVal) {\n\t                            return SellType.SELL;\n\t                        }\n\t                        else if (\"SELLSHORT\" === ofxVal) {\n\t                            return SellType.SELL_SHORT;\n\t                        }\n\t                        else {\n\t                            return null;\n\t                        }\n\t                    }\n\t                    transactions.SellType_fromOfx = SellType_fromOfx;\n\t                })(transactions = investment.transactions || (investment.transactions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/Element_add'/>\n\t///<reference path='BaseSellInvestmentTransaction'/>\n\t///<reference path='SellType'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var transactions;\n\t                (function (transactions) {\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var Element_add = ofx4js.meta.Element_add;\n\t                    /**\n\t                     * Transaction for selling mutual fund.\n\t                     * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var SellMutualFundTransaction = (function (_super) {\n\t                        __extends(SellMutualFundTransaction, _super);\n\t                        function SellMutualFundTransaction() {\n\t                            _super.call(this, transactions.TransactionType.SELL_MUTUAL_FUND);\n\t                        }\n\t                        /**\n\t                         * Gets the type of sale. One of \"SELL\" or \"SELLSHORT\".\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @return The type of sale\n\t                         */\n\t                        SellMutualFundTransaction.prototype.getSellType = function () {\n\t                            return this.sellType;\n\t                        };\n\t                        /**\n\t                         * Sets the type of sale. One of \"SELL\" or \"SELLSHORT\".\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @param sellType The type of sale\n\t                         */\n\t                        SellMutualFundTransaction.prototype.setSellType = function (sellType) {\n\t                            this.sellType = sellType;\n\t                        };\n\t                        /**\n\t                         * Gets the sell type as one of the well-known types.\n\t                         *\n\t                         * @return the type of sale or null if it's not known.\n\t                         */\n\t                        SellMutualFundTransaction.prototype.getSellTypeEnum = function () {\n\t                            return transactions.SellType_fromOfx(this.sellType);\n\t                        };\n\t                        /**\n\t                         * Gets the average cost basis of the sale.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @return The average cost basis of the sale\n\t                         */\n\t                        SellMutualFundTransaction.prototype.getAverageCostBasis = function () {\n\t                            return this.averageCostBasis;\n\t                        };\n\t                        /**\n\t                         * Sets the average cost basis of the sale.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @param averageCostBasis The average cost basis of the sale\n\t                         */\n\t                        SellMutualFundTransaction.prototype.setAverageCostBasis = function (averageCostBasis) {\n\t                            this.averageCostBasis = averageCostBasis;\n\t                        };\n\t                        /**\n\t                         * Gets any related transaction id for a mutual fund sale (e.g. for a mutual fund exchange).\n\t                         * This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @return the related transaction id\n\t                         */\n\t                        SellMutualFundTransaction.prototype.getRelatedTransactionId = function () {\n\t                            return this.relatedTransactionId;\n\t                        };\n\t                        /**\n\t                         * Sets any related transaction id for a mutual fund sale (e.g. for a mutual fund exchange).\n\t                         * This is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @param relatedTransactionId the related transaction id\n\t                         */\n\t                        SellMutualFundTransaction.prototype.setRelatedTransactionId = function (relatedTransactionId) {\n\t                            this.relatedTransactionId = relatedTransactionId;\n\t                        };\n\t                        return SellMutualFundTransaction;\n\t                    })(transactions.BaseSellInvestmentTransaction);\n\t                    transactions.SellMutualFundTransaction = SellMutualFundTransaction;\n\t                    Aggregate_add(SellMutualFundTransaction, \"SELLMF\");\n\t                    Element_add(SellMutualFundTransaction, { name: \"SELLTYPE\", order: 20, type: String, read: SellMutualFundTransaction.prototype.getSellType, write: SellMutualFundTransaction.prototype.setSellType });\n\t                    Element_add(SellMutualFundTransaction, { name: \"AVGCOSTBASIS\", order: 30, type: Number, read: SellMutualFundTransaction.prototype.getAverageCostBasis, write: SellMutualFundTransaction.prototype.setAverageCostBasis });\n\t                    Element_add(SellMutualFundTransaction, { name: \"RELFITID\", order: 40, type: String, read: SellMutualFundTransaction.prototype.getRelatedTransactionId, write: SellMutualFundTransaction.prototype.setRelatedTransactionId });\n\t                })(transactions = investment.transactions || (investment.transactions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../../../meta/Element_add'/>\n\t///<reference path='../../investment/positions/ShortOptionSecurity'/>\n\t///<reference path='BaseSellInvestmentTransaction'/>\n\t///<reference path='OptionSellType'/>\n\t///<reference path='RelatedOptionType'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var transactions;\n\t                (function (transactions) {\n\t                    var ShortOptionSecurity_fromOfx = ofx4js.domain.data.investment.positions.ShortOptionSecurity_fromOfx;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var Element_add = ofx4js.meta.Element_add;\n\t                    /**\n\t                     * Transaction for selling options.\n\t                     * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var SellOptionTransaction = (function (_super) {\n\t                        __extends(SellOptionTransaction, _super);\n\t                        function SellOptionTransaction() {\n\t                            _super.call(this, transactions.TransactionType.SELL_OPTION);\n\t                        }\n\t                        /**\n\t                         * Gets the type of option sale (i.e. \"SELLTOCLOSE\" or \"SELLTOOPEN\"). This is a required field\n\t                         * according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @return the option sell type\n\t                         */\n\t                        SellOptionTransaction.prototype.getOptionSellType = function () {\n\t                            return this.optionSellType;\n\t                        };\n\t                        /**\n\t                         * Sets the type of option sale (i.e. \"SELLTOCLOSE\" or \"SELLTOOPEN\"). This is a required field\n\t                         * according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @param optionSellType the option sell type\n\t                         */\n\t                        SellOptionTransaction.prototype.setOptionSellType = function (optionSellType) {\n\t                            this.optionSellType = optionSellType;\n\t                        };\n\t                        /**\n\t                         * Gets the option sell type as one of the well-known types.\n\t                         *\n\t                         * @return the type of sale or null if it's not known.\n\t                         */\n\t                        SellOptionTransaction.prototype.getOptionSellTypeEnum = function () {\n\t                            return transactions.OptionSellType_fromOfx(this.optionSellType);\n\t                        };\n\t                        /**\n\t                         * Gets the number of shares per contact. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @return the number of shares per contact\n\t                         */\n\t                        SellOptionTransaction.prototype.getSharesPerContact = function () {\n\t                            return this.sharesPerContact;\n\t                        };\n\t                        /**\n\t                         * Sets the number of shares per contact. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @param sharesPerContact the number of shares per contact\n\t                         */\n\t                        SellOptionTransaction.prototype.setSharesPerContact = function (sharesPerContact) {\n\t                            this.sharesPerContact = sharesPerContact;\n\t                        };\n\t                        /**\n\t                         * Gets a related transaction for the option sale for complex option transactions. This\n\t                         * is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @return The related transaction id\n\t                         */\n\t                        SellOptionTransaction.prototype.getRelatedTransactionId = function () {\n\t                            return this.relatedTransactionId;\n\t                        };\n\t                        /**\n\t                         * Sets a related transaction for the option sale for complex option transactions. This\n\t                         * is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @param relatedTransactionId The related transaction id\n\t                         */\n\t                        SellOptionTransaction.prototype.setRelatedTransactionId = function (relatedTransactionId) {\n\t                            this.relatedTransactionId = relatedTransactionId;\n\t                        };\n\t                        /**\n\t                         * Gets the type for the related transaction. One of \"SPREAD\", \"STRADDLE\", \"NONE\", \"OTHER\". This\n\t                         * is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @return The related tansaction type\n\t                         */\n\t                        SellOptionTransaction.prototype.getRelatedType = function () {\n\t                            return this.relatedType;\n\t                        };\n\t                        /**\n\t                         * Sets the type for the related transaction. One of \"SPREAD\", \"STRADDLE\", \"NONE\", \"OTHER\". This\n\t                         * is an optional field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @param relatedType The related tansaction type\n\t                         */\n\t                        SellOptionTransaction.prototype.setRelatedType = function (relatedType) {\n\t                            this.relatedType = relatedType;\n\t                        };\n\t                        /**\n\t                         * Gets the related transaction as one of the well-known types.\n\t                         *\n\t                         * @return the related tansaction type or null if it's not well known\n\t                         */\n\t                        SellOptionTransaction.prototype.getRelatedTypeEnum = function () {\n\t                            return transactions.RelatedOptionType_fromOfx(this.getRelatedType());\n\t                        };\n\t                        /**\n\t                         * Gets how the option sale is secured. One of \"NAKED\" or \"COVERED\". This is an optional field\n\t                         * according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @return how the option sale is secured\n\t                         */\n\t                        SellOptionTransaction.prototype.getSecured = function () {\n\t                            return this.secured;\n\t                        };\n\t                        /**\n\t                         * Sets how the option sale is secured. One of \"NAKED\" or \"COVERED\". This is an optional field\n\t                         * according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @param secured how the option sale is secured\n\t                         */\n\t                        SellOptionTransaction.prototype.setSecured = function (secured) {\n\t                            this.secured = secured;\n\t                        };\n\t                        /**\n\t                         * Gets how the option sale is secured as one of the well-known types.\n\t                         *\n\t                         * @return the type indicating how the option is secured or null if it's not well known.\n\t                         */\n\t                        SellOptionTransaction.prototype.getSecuredEnum = function () {\n\t                            return ShortOptionSecurity_fromOfx(this.getSecured());\n\t                        };\n\t                        return SellOptionTransaction;\n\t                    })(transactions.BaseSellInvestmentTransaction);\n\t                    transactions.SellOptionTransaction = SellOptionTransaction;\n\t                    Aggregate_add(SellOptionTransaction, \"SELLOPT\");\n\t                    Element_add(SellOptionTransaction, { name: \"OPTSELLTYPE\", required: true, order: 20, type: String, read: SellOptionTransaction.prototype.getOptionSellType, write: SellOptionTransaction.prototype.setOptionSellType });\n\t                    Element_add(SellOptionTransaction, { name: \"SHPERCTRCT\", required: true, order: 30, type: Number, read: SellOptionTransaction.prototype.getSharesPerContact, write: SellOptionTransaction.prototype.setSharesPerContact });\n\t                    Element_add(SellOptionTransaction, { name: \"RELFITID\", order: 40, type: String, read: SellOptionTransaction.prototype.getRelatedTransactionId, write: SellOptionTransaction.prototype.setRelatedTransactionId });\n\t                    Element_add(SellOptionTransaction, { name: \"RELTYPE\", order: 50, type: String, read: SellOptionTransaction.prototype.getRelatedType, write: SellOptionTransaction.prototype.setRelatedType });\n\t                    Element_add(SellOptionTransaction, { name: \"SECURED\", order: 60, type: String, read: SellOptionTransaction.prototype.getSecured, write: SellOptionTransaction.prototype.setSecured });\n\t                })(transactions = investment.transactions || (investment.transactions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='BaseSellInvestmentTransaction'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var transactions;\n\t                (function (transactions) {\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    /**\n\t                     * Transaction for buying other types of securities.\n\t                     * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var SellOtherTransaction = (function (_super) {\n\t                        __extends(SellOtherTransaction, _super);\n\t                        function SellOtherTransaction() {\n\t                            _super.call(this, transactions.TransactionType.SELL_OTHER);\n\t                        }\n\t                        return SellOtherTransaction;\n\t                    })(transactions.BaseSellInvestmentTransaction);\n\t                    transactions.SellOtherTransaction = SellOtherTransaction;\n\t                    Aggregate_add(SellOtherTransaction, \"SELLOTHER\");\n\t                })(transactions = investment.transactions || (investment.transactions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../../../meta/Element_add'/>\n\t///<reference path='BaseSellInvestmentTransaction'/>\n\t///<reference path='SellType'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var transactions;\n\t                (function (transactions) {\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var Element_add = ofx4js.meta.Element_add;\n\t                    /**\n\t                     * Transaction for selling stock.\n\t                     * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var SellStockTransaction = (function (_super) {\n\t                        __extends(SellStockTransaction, _super);\n\t                        function SellStockTransaction() {\n\t                            _super.call(this, transactions.TransactionType.SELL_STOCK);\n\t                        }\n\t                        /**\n\t                         * Gets the type of stock sale (i.e. \"SELL\" or \"SELLSHORT\"). This is a required field\n\t                         * according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @return the sell type\n\t                         */\n\t                        SellStockTransaction.prototype.getSellType = function () {\n\t                            return this.sellType;\n\t                        };\n\t                        /**\n\t                         * Sets the type of stock sale (i.e. \"SELL\" or \"SELLSHORT\"). This is a required field\n\t                         * according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                         *\n\t                         * @param sellType the sell type\n\t                         */\n\t                        SellStockTransaction.prototype.setSellType = function (sellType) {\n\t                            this.sellType = sellType;\n\t                        };\n\t                        /**\n\t                         * Gets the sell type as one of the well-known types.\n\t                         *\n\t                         * @return the type of sale or null if it's not known\n\t                         */\n\t                        SellStockTransaction.prototype.getSellTypeEnum = function () {\n\t                            return transactions.SellType_fromOfx(this.sellType);\n\t                        };\n\t                        return SellStockTransaction;\n\t                    })(transactions.BaseSellInvestmentTransaction);\n\t                    transactions.SellStockTransaction = SellStockTransaction;\n\t                    Aggregate_add(SellStockTransaction, \"SELLSTOCK\");\n\t                    Element_add(SellStockTransaction, { name: \"SELLTYPE\", required: true, order: 20, type: String, read: SellStockTransaction.prototype.getSellType, write: SellStockTransaction.prototype.setSellType });\n\t                })(transactions = investment.transactions || (investment.transactions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../../../meta/Element_add'/>\n\t///<reference path='../../investment/accounts/SubAccountType'/>\n\t///<reference path='../../investment/positions/Inv401KSource'/>\n\t///<reference path='../../seclist/SecurityId'/>\n\t///<reference path='BaseOtherInvestmentTransaction'/>\n\t///<reference path='OriginalCurrency'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var transactions;\n\t                (function (transactions) {\n\t                    var SubAccountType_fromOfx = ofx4js.domain.data.investment.accounts.SubAccountType_fromOfx;\n\t                    var Inv401KSource_fromOfx = ofx4js.domain.data.investment.positions.Inv401KSource_fromOfx;\n\t                    var SecurityId = ofx4js.domain.data.seclist.SecurityId;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                    var Element_add = ofx4js.meta.Element_add;\n\t                    /**\n\t                     * Transaction for a stock split.\n\t                     * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var SplitTransaction = (function (_super) {\n\t                        __extends(SplitTransaction, _super);\n\t                        function SplitTransaction() {\n\t                            _super.call(this, transactions.TransactionType.SPLIT);\n\t                        }\n\t                        /**\n\t                         * Gets the id of the security for the split. This is a required field according to the OFX\n\t                         * spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the security id of the security for the expsense\n\t                         */\n\t                        SplitTransaction.prototype.getSecurityId = function () {\n\t                            return this.securityId;\n\t                        };\n\t                        /**\n\t                         * Sets the id of the security for the split. This is a required field according to the OFX\n\t                         * spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param securityId the security id of the security for the expsense\n\t                         */\n\t                        SplitTransaction.prototype.setSecurityId = function (securityId) {\n\t                            this.securityId = securityId;\n\t                        };\n\t                        /**\n\t                         * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER). This is a\n\t                         * required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the sub account type\n\t                         */\n\t                        SplitTransaction.prototype.getSubAccountSecurity = function () {\n\t                            return this.subAccountSecurity;\n\t                        };\n\t                        /**\n\t                         * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER). This is a\n\t                         * required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param subAccountSecurity the sub account type\n\t                         */\n\t                        SplitTransaction.prototype.setSubAccountSecurity = function (subAccountSecurity) {\n\t                            this.subAccountSecurity = subAccountSecurity;\n\t                        };\n\t                        /**\n\t                         * Gets the result of getSubAccountSecurity as one of the well-known types.\n\t                         *\n\t                         * @return the type of null if it wasn't one of the well known types.\n\t                         */\n\t                        SplitTransaction.prototype.getSubAccountSecurityEnum = function () {\n\t                            return SubAccountType_fromOfx(this.getSubAccountSecurity());\n\t                        };\n\t                        /**\n\t                         * Gets the old number of units for the split. This is a required field according to the OFX\n\t                         * spec.\n\t                         *\n\t                         * @return the old number of units.\n\t                         */\n\t                        SplitTransaction.prototype.getOldUnits = function () {\n\t                            return this.oldUnits;\n\t                        };\n\t                        /**\n\t                         * Sets the old number of units for the split. This is a  equired field according to the OFX\n\t                         * spec.\n\t                         *\n\t                         * @param oldUnits the old number of units.\n\t                         */\n\t                        SplitTransaction.prototype.setOldUnits = function (oldUnits) {\n\t                            this.oldUnits = oldUnits;\n\t                        };\n\t                        /**\n\t                         * Gets the new number of units for the split. This is a required field according to the OFX\n\t                         * spec.\n\t                         *\n\t                         * @return the new number of units.\n\t                         */\n\t                        SplitTransaction.prototype.getNewUnits = function () {\n\t                            return this.newUnits;\n\t                        };\n\t                        /**\n\t                         * Sets the new number of units for the split. This is a required field according to the OFX\n\t                         * spec.\n\t                         *\n\t                         * @param newUnits the new number of units.\n\t                         */\n\t                        SplitTransaction.prototype.setNewUnits = function (newUnits) {\n\t                            this.newUnits = newUnits;\n\t                        };\n\t                        /**\n\t                         * Gets the numerator for the split ratio. This is a required field according to the OFX spec.\n\t                         *\n\t                         * @return the numerator for the split ratio\n\t                         */\n\t                        SplitTransaction.prototype.getNumerator = function () {\n\t                            return this.numerator;\n\t                        };\n\t                        /**\n\t                         * Sets the numerator for the split ratio. This is a required field according to the OFX spec.\n\t                         *\n\t                         * @param numerator the numerator for the split ratio\n\t                         */\n\t                        SplitTransaction.prototype.setNumerator = function (numerator) {\n\t                            this.numerator = numerator;\n\t                        };\n\t                        /**\n\t                         * Gets the denominator for the split ratio. This is a required field according to the OFX spec.\n\t                         *\n\t                         * @return the numerator for the split ratio\n\t                         */\n\t                        SplitTransaction.prototype.getDenominator = function () {\n\t                            return this.denominator;\n\t                        };\n\t                        /**\n\t                         * Sets the denominator for the split ratio. This is a required field according to the OFX spec.\n\t                         *\n\t                         * @param denominator the numerator for the split ratio\n\t                         */\n\t                        SplitTransaction.prototype.setDenominator = function (denominator) {\n\t                            this.denominator = denominator;\n\t                        };\n\t                        /**\n\t                         * Gets the currency code for the transaction. Only one of currency code or original currency\n\t                         * code should be set according to the OFX spec. If neither are set, means the default currency.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the currency code for the transaction\n\t                         */\n\t                        SplitTransaction.prototype.getCurrencyCode = function () {\n\t                            return this.currencyCode;\n\t                        };\n\t                        /**\n\t                         * sets the currency code for the transaction. Only one of currency code or original currency\n\t                         * code should be set according to the OFX spec. If neither are set, means the default currency.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the currency code for the transaction\n\t                         */\n\t                        SplitTransaction.prototype.setCurrencyCode = function (currencyCode) {\n\t                            this.currencyCode = currencyCode;\n\t                            this.originalCurrencyInfo = null;\n\t                        };\n\t                        /**\n\t                         * Gets the original currency info for the transaction.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the original currency info for the transaction\n\t                         */\n\t                        SplitTransaction.prototype.getOriginalCurrencyInfo = function () {\n\t                            return this.originalCurrencyInfo;\n\t                        };\n\t                        /**\n\t                         * Sets the original currency info for the transaction.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the original currency info for the transaction\n\t                         */\n\t                        SplitTransaction.prototype.setOriginalCurrencyInfo = function (originalCurrencyInfo) {\n\t                            this.originalCurrencyInfo = originalCurrencyInfo;\n\t                            this.currencyCode = null;\n\t                        };\n\t                        /**\n\t                         * Gets the cash for fractional units.\n\t                         *\n\t                         * @return the cash for fractional units\n\t                         */\n\t                        SplitTransaction.prototype.getCashForFractionalUnits = function () {\n\t                            return this.cashForFractionalUnits;\n\t                        };\n\t                        /**\n\t                         * Sets the cash for fractional units.\n\t                         *\n\t                         * @param cashForFractionalUnits the cash for fractional units\n\t                         */\n\t                        SplitTransaction.prototype.setCashForFractionalUnits = function (cashForFractionalUnits) {\n\t                            this.cashForFractionalUnits = cashForFractionalUnits;\n\t                        };\n\t                        /**\n\t                         * Gets the sub account type for the fund. (e.g. CASH, MARGIN, SHORT, OTHER).\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the sub account fund\n\t                         */\n\t                        SplitTransaction.prototype.getSubAccountFund = function () {\n\t                            return this.subAccountFund;\n\t                        };\n\t                        /**\n\t                         * Sets the sub account type for the fund. (e.g. CASH, MARGIN, SHORT, OTHER).\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param subAccountFund the sub account fund\n\t                         */\n\t                        SplitTransaction.prototype.setSubAccountFund = function (subAccountFund) {\n\t                            this.subAccountFund = subAccountFund;\n\t                        };\n\t                        /**\n\t                         * Gets the result of getSubAccountFund as one of the well-known types.\n\t                         *\n\t                         * @return the type of null if it wasn't one of the well known types\n\t                         */\n\t                        SplitTransaction.prototype.getSubAccountFundEnum = function () {\n\t                            return SubAccountType_fromOfx(this.getSubAccountFund());\n\t                        };\n\t                        /**\n\t                         * Gets the 401K source for the transaction. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n\t                         * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n\t                         * according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the 401k source\n\t                         */\n\t                        SplitTransaction.prototype.get401kSource = function () {\n\t                            return this.inv401kSource;\n\t                        };\n\t                        /**\n\t                         * Sets the 401K source for the transaction. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n\t                         * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n\t                         * according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param inv401kSource the 401k source\n\t                         */\n\t                        SplitTransaction.prototype.set401kSource = function (inv401kSource) {\n\t                            this.inv401kSource = inv401kSource;\n\t                        };\n\t                        /**\n\t                         * Gets the 401k source as one of the well-known types.\n\t                         *\n\t                         * @return the 401k source or null if its not one of the well-known types\n\t                         */\n\t                        SplitTransaction.prototype.get401kSourceEnum = function () {\n\t                            return Inv401KSource_fromOfx(this.get401kSource());\n\t                        };\n\t                        return SplitTransaction;\n\t                    })(transactions.BaseOtherInvestmentTransaction);\n\t                    transactions.SplitTransaction = SplitTransaction;\n\t                    Aggregate_add(SplitTransaction, \"SPLIT\");\n\t                    ChildAggregate_add(SplitTransaction, { required: true, order: 20, type: SecurityId, read: SplitTransaction.prototype.getSecurityId, write: SplitTransaction.prototype.setSecurityId });\n\t                    Element_add(SplitTransaction, { name: \"SUBACCTSEC\", order: 30, type: String, read: SplitTransaction.prototype.getSubAccountSecurity, write: SplitTransaction.prototype.setSubAccountSecurity });\n\t                    Element_add(SplitTransaction, { name: \"OLDUNITS\", order: 40, type: Number, read: SplitTransaction.prototype.getOldUnits, write: SplitTransaction.prototype.setOldUnits });\n\t                    Element_add(SplitTransaction, { name: \"NEWUNITS\", order: 50, type: Number, read: SplitTransaction.prototype.getNewUnits, write: SplitTransaction.prototype.setNewUnits });\n\t                    Element_add(SplitTransaction, { name: \"NUMERATOR\", order: 60, type: Number, read: SplitTransaction.prototype.getNumerator, write: SplitTransaction.prototype.setNumerator });\n\t                    Element_add(SplitTransaction, { name: \"DENOMINATOR\", order: 70, type: Number, read: SplitTransaction.prototype.getDenominator, write: SplitTransaction.prototype.setDenominator });\n\t                    Element_add(SplitTransaction, { name: \"CURRENCY\", order: 80, type: String, read: SplitTransaction.prototype.getCurrencyCode, write: SplitTransaction.prototype.setCurrencyCode });\n\t                    Element_add(SplitTransaction, { name: \"ORIGCURRENCY\", order: 90, type: transactions.OriginalCurrency, read: SplitTransaction.prototype.getOriginalCurrencyInfo, write: SplitTransaction.prototype.setOriginalCurrencyInfo });\n\t                    Element_add(SplitTransaction, { name: \"FRACCASH\", order: 100, type: Number, read: SplitTransaction.prototype.getCashForFractionalUnits, write: SplitTransaction.prototype.setCashForFractionalUnits });\n\t                    Element_add(SplitTransaction, { name: \"SUBACCTFUND\", order: 110, type: String, read: SplitTransaction.prototype.getSubAccountFund, write: SplitTransaction.prototype.setSubAccountFund });\n\t                    Element_add(SplitTransaction, { name: \"INV401KSOURCE\", order: 120, type: String, read: SplitTransaction.prototype.get401kSource, write: SplitTransaction.prototype.set401kSource });\n\t                })(transactions = investment.transactions || (investment.transactions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var transactions;\n\t                (function (transactions) {\n\t                    /**\n\t                     * Type of transfer.\n\t                     * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    (function (TransferAction) {\n\t                        TransferAction[TransferAction[\"IN\"] = 0] = \"IN\";\n\t                        TransferAction[TransferAction[\"OUT\"] = 1] = \"OUT\";\n\t                    })(transactions.TransferAction || (transactions.TransferAction = {}));\n\t                    var TransferAction = transactions.TransferAction;\n\t                    function TransferAction_fromOfx(ofxVal) {\n\t                        if (\"IN\" === ofxVal) {\n\t                            return TransferAction.IN;\n\t                        }\n\t                        else if (\"OUT\" === ofxVal) {\n\t                            return TransferAction.OUT;\n\t                        }\n\t                        else {\n\t                            return null;\n\t                        }\n\t                    }\n\t                    transactions.TransferAction_fromOfx = TransferAction_fromOfx;\n\t                })(transactions = investment.transactions || (investment.transactions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../../../meta/Element_add'/>\n\t///<reference path='../../investment/accounts/SubAccountType'/>\n\t///<reference path='../../investment/positions/Inv401KSource'/>\n\t///<reference path='../../investment/positions/PositionType'/>\n\t///<reference path='../../seclist/SecurityId'/>\n\t///<reference path='BaseOtherInvestmentTransaction'/>\n\t///<reference path='TransferAction'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var investment;\n\t            (function (investment) {\n\t                var transactions;\n\t                (function (transactions) {\n\t                    var SubAccountType_fromOfx = ofx4js.domain.data.investment.accounts.SubAccountType_fromOfx;\n\t                    var Inv401KSource_fromOfx = ofx4js.domain.data.investment.positions.Inv401KSource_fromOfx;\n\t                    var PositionType_fromOfx = ofx4js.domain.data.investment.positions.PositionType_fromOfx;\n\t                    var SecurityId = ofx4js.domain.data.seclist.SecurityId;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                    var Element_add = ofx4js.meta.Element_add;\n\t                    /**\n\t                     * Transaction for transfers.\n\t                     * @see \"Section 13.9.2.4.4, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var TransferInvestmentTransaction = (function (_super) {\n\t                        __extends(TransferInvestmentTransaction, _super);\n\t                        // TODO (jonp) -- INVACCTFROM\n\t                        function TransferInvestmentTransaction() {\n\t                            _super.call(this, transactions.TransactionType.TRANSFER);\n\t                        }\n\t                        /**\n\t                         * Gets the id of the security that was transferred. This is a required field according to the OFX\n\t                         * spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the security id of the security that was transferred\n\t                         */\n\t                        TransferInvestmentTransaction.prototype.getSecurityId = function () {\n\t                            return this.securityId;\n\t                        };\n\t                        /**\n\t                         * Sets the id of the security that was transferred. This is a required field according to the OFX\n\t                         * spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param securityId the security id of the security that was transferred\n\t                         */\n\t                        TransferInvestmentTransaction.prototype.setSecurityId = function (securityId) {\n\t                            this.securityId = securityId;\n\t                        };\n\t                        /**\n\t                          * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n\t                          * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                          *\n\t                          * @return the sub account type\n\t                          */\n\t                        TransferInvestmentTransaction.prototype.getSubAccountSecurity = function () {\n\t                            return this.subAccountSecurity;\n\t                        };\n\t                        /**\n\t                          * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n\t                          * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                          *\n\t                          * @param subAccountSecurity the sub account type\n\t                          */\n\t                        TransferInvestmentTransaction.prototype.setSubAccountSecurity = function (subAccountSecurity) {\n\t                            this.subAccountSecurity = subAccountSecurity;\n\t                        };\n\t                        /**\n\t                         * Gets the result of getSubAccountSecurity as one of the well-known types.\n\t                         *\n\t                         * @return the type of null if it wasn't one of the well known types.\n\t                         */\n\t                        TransferInvestmentTransaction.prototype.getSubAccountSecurityEnum = function () {\n\t                            return SubAccountType_fromOfx(this.getSubAccountSecurity());\n\t                        };\n\t                        /**\n\t                         * Gets the number of units of the security that was transferred. For security-based actions other\n\t                         * than stock splits, this is the quantity bought. For stocks, mutual funds, and others, this\n\t                         * is the number of shares. For bonds, this is the face value. For options, this is the number of\n\t                         * contacts. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the number of units transferred\n\t                         */\n\t                        TransferInvestmentTransaction.prototype.getUnits = function () {\n\t                            return this.units;\n\t                        };\n\t                        /**\n\t                         * Sets the number of units of the security that was transferred. For security-based actions other\n\t                         * than stock splits, this is the quantity bought. For stocks, mutual funds, and others, this\n\t                         * is the number of shares. For bonds, this is the face value. For options, this is the number of\n\t                         * contacts. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param units the number of units transferred\n\t                         */\n\t                        TransferInvestmentTransaction.prototype.setUnits = function (units) {\n\t                            this.units = units;\n\t                        };\n\t                        /**\n\t                         * Gets the type of transfer. One of \"IN\" or \"OUT\". This is a required field according to the\n\t                         * OFX spec.\n\t                         *\n\t                         * @return the type of transfer\n\t                         */\n\t                        TransferInvestmentTransaction.prototype.getTransferAction = function () {\n\t                            return this.transferAction;\n\t                        };\n\t                        /**\n\t                         * Sets the type of transfer. One of \"IN\" or \"OUT\". This is a required field according to the\n\t                         * OFX spec.\n\t                         *\n\t                         * @param transferAction the type of transfer\n\t                         */\n\t                        TransferInvestmentTransaction.prototype.setTransferAction = function (transferAction) {\n\t                            this.transferAction = transferAction;\n\t                        };\n\t                        /**\n\t                         * Gets the transfer action as one of the well-known types.\n\t                         *\n\t                         * @return the type of transfer or null if it's not well known\n\t                         */\n\t                        TransferInvestmentTransaction.prototype.getTransferActionEnum = function () {\n\t                            return transactions.TransferAction_fromOfx(this.getTransferAction());\n\t                        };\n\t                        /**\n\t                         * Gets the type of position. One of \"LONG\" or \"SHORT\". This is a required field according to the\n\t                         * OFX spec.\n\t                         *\n\t                         * @return the position type\n\t                         */\n\t                        TransferInvestmentTransaction.prototype.getPositionType = function () {\n\t                            return this.positionType;\n\t                        };\n\t                        /**\n\t                         * Sets the type of position. One of \"LONG\" or \"SHORT\". This is a required field according to the\n\t                         * OFX spec.\n\t                         *\n\t                         * @param positionType the position type\n\t                         */\n\t                        TransferInvestmentTransaction.prototype.setPositionType = function (positionType) {\n\t                            this.positionType = positionType;\n\t                        };\n\t                        /**\n\t                         * Gets the position type as one of the well-known types.\n\t                         *\n\t                         * @return the position type or null if it's not well known\n\t                         */\n\t                        TransferInvestmentTransaction.prototype.getPositionTypeEnum = function () {\n\t                            return PositionType_fromOfx(this.getPositionType());\n\t                        };\n\t                        /**\n\t                         * Gets the average cost basis for the securities being transfered. This is an optional field\n\t                         * according to the ofx spec.\n\t                         *\n\t                         * @return the average cost basis\n\t                         */\n\t                        TransferInvestmentTransaction.prototype.getAverageCostBasis = function () {\n\t                            return this.averageCostBasis;\n\t                        };\n\t                        /**\n\t                         * Sets the average cost basis for the securities being transfered. This is an optional field\n\t                         * according to the ofx spec.\n\t                         *\n\t                         * @param averageCostBasis the average cost basis\n\t                         */\n\t                        TransferInvestmentTransaction.prototype.setAverageCostBasis = function (averageCostBasis) {\n\t                            this.averageCostBasis = averageCostBasis;\n\t                        };\n\t                        /**\n\t                         * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n\t                         * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n\t                         * per contact) price. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the per unit price\n\t                         */\n\t                        TransferInvestmentTransaction.prototype.getUnitPrice = function () {\n\t                            return this.unitPrice;\n\t                        };\n\t                        /**\n\t                         * Sets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n\t                         * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n\t                         * per contact) price. This is a required field according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param unitPrice the per unit price\n\t                         */\n\t                        TransferInvestmentTransaction.prototype.setUnitPrice = function (unitPrice) {\n\t                            this.unitPrice = unitPrice;\n\t                        };\n\t                        /**\n\t                         * Gets the original date of purchase for the securities. This is an optional field according to\n\t                         * the ofx spec.\n\t                         *\n\t                         * @return the original date of purchase\n\t                         */\n\t                        TransferInvestmentTransaction.prototype.getPurchaseDate = function () {\n\t                            return this.purchaseDate;\n\t                        };\n\t                        /**\n\t                         * Sets the original date of purchase for the securities. This is an optional field according to\n\t                         * the ofx spec.\n\t                         *\n\t                         * @param purchaseDate the original date of purchase\n\t                         */\n\t                        TransferInvestmentTransaction.prototype.setPurchaseDate = function (purchaseDate) {\n\t                            this.purchaseDate = purchaseDate;\n\t                        };\n\t                        /**\n\t                         * Gets the 401K source for the transfer. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n\t                         * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n\t                         * according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @return the state withholding\n\t                         */\n\t                        TransferInvestmentTransaction.prototype.get401kSource = function () {\n\t                            return this.inv401kSource;\n\t                        };\n\t                        /**\n\t                         * Sets the 401K source for the transfer. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n\t                         * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n\t                         * according to the OFX spec.\n\t                         * @see \"Section 13.9.2.4.3, OFX Spec\"\n\t                         *\n\t                         * @param inv401kSource the state withholding\n\t                         */\n\t                        TransferInvestmentTransaction.prototype.set401kSource = function (inv401kSource) {\n\t                            this.inv401kSource = inv401kSource;\n\t                        };\n\t                        /**\n\t                         * Gets the 401(k) source as one of the well-known types.\n\t                         *\n\t                         * @return the type of close or null if it's not well known.\n\t                         */\n\t                        TransferInvestmentTransaction.prototype.get401kSourceEnum = function () {\n\t                            return Inv401KSource_fromOfx(this.get401kSource());\n\t                        };\n\t                        return TransferInvestmentTransaction;\n\t                    })(transactions.BaseOtherInvestmentTransaction);\n\t                    transactions.TransferInvestmentTransaction = TransferInvestmentTransaction;\n\t                    Aggregate_add(TransferInvestmentTransaction, \"TRANSFER\");\n\t                    ChildAggregate_add(TransferInvestmentTransaction, { required: true, order: 20, type: SecurityId, read: TransferInvestmentTransaction.prototype.getSecurityId, write: TransferInvestmentTransaction.prototype.setSecurityId });\n\t                    Element_add(TransferInvestmentTransaction, { name: \"SUBACCTSEC\", order: 30, type: String, read: TransferInvestmentTransaction.prototype.getSubAccountSecurity, write: TransferInvestmentTransaction.prototype.setSubAccountSecurity });\n\t                    Element_add(TransferInvestmentTransaction, { name: \"UNITS\", required: true, order: 40, type: Number, read: TransferInvestmentTransaction.prototype.getUnits, write: TransferInvestmentTransaction.prototype.setUnits });\n\t                    Element_add(TransferInvestmentTransaction, { name: \"TFERACTION\", required: true, order: 50, type: String, read: TransferInvestmentTransaction.prototype.getTransferAction, write: TransferInvestmentTransaction.prototype.setTransferAction });\n\t                    Element_add(TransferInvestmentTransaction, { name: \"POSTYPE\", required: true, order: 60, type: String, read: TransferInvestmentTransaction.prototype.getPositionType, write: TransferInvestmentTransaction.prototype.setPositionType });\n\t                    Element_add(TransferInvestmentTransaction, { name: \"AVGCOSTBASIS\", order: 70, type: Number, read: TransferInvestmentTransaction.prototype.getAverageCostBasis, write: TransferInvestmentTransaction.prototype.setAverageCostBasis });\n\t                    Element_add(TransferInvestmentTransaction, { name: \"UNITPRICE\", required: true, order: 80, type: Number, read: TransferInvestmentTransaction.prototype.getUnitPrice, write: TransferInvestmentTransaction.prototype.setUnitPrice });\n\t                    Element_add(TransferInvestmentTransaction, { name: \"DTPURCHASE\", order: 90, type: Date, read: TransferInvestmentTransaction.prototype.getPurchaseDate, write: TransferInvestmentTransaction.prototype.setPurchaseDate });\n\t                    Element_add(TransferInvestmentTransaction, { name: \"INV401KSOURCE\", order: 100, type: String, read: TransferInvestmentTransaction.prototype.get401kSource, write: TransferInvestmentTransaction.prototype.set401kSource });\n\t                })(transactions = investment.transactions || (investment.transactions = {}));\n\t            })(investment = data.investment || (data.investment = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2012 TheStash\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../../meta/Element_add'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile) {\n\t                var info;\n\t                (function (info) {\n\t                    var banking;\n\t                    (function (banking) {\n\t                        var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                        var Element_add = ofx4js.meta.Element_add;\n\t                        /**\n\t                         * Email Profile\n\t                         * @author Scott Priddy\n\t                         * @see \"Section 11.13.2.3 OFX Spec\"\n\t                         */\n\t                        var EmailProfile = (function () {\n\t                            function EmailProfile() {\n\t                            }\n\t                            EmailProfile.prototype.getCanEmail = function () {\n\t                                return this.canEmail;\n\t                            };\n\t                            EmailProfile.prototype.setCanEmail = function (canEmail) {\n\t                                this.canEmail = canEmail;\n\t                            };\n\t                            EmailProfile.prototype.getCanNotify = function () {\n\t                                return this.canNotify;\n\t                            };\n\t                            EmailProfile.prototype.setCanNotify = function (canNotify) {\n\t                                this.canNotify = canNotify;\n\t                            };\n\t                            return EmailProfile;\n\t                        })();\n\t                        banking.EmailProfile = EmailProfile;\n\t                        Aggregate_add(EmailProfile, \"EMAILPROF\");\n\t                        Element_add(EmailProfile, { name: \"CANEMAIL\", required: true, order: 10, type: Boolean, read: EmailProfile.prototype.getCanEmail, write: EmailProfile.prototype.setCanEmail });\n\t                        Element_add(EmailProfile, { name: \"CANNOTIFY\", required: true, order: 20, type: Boolean, read: EmailProfile.prototype.getCanNotify, write: EmailProfile.prototype.setCanNotify });\n\t                    })(banking = info.banking || (info.banking = {}));\n\t                })(info = profile.info || (profile.info = {}));\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2012 TheStash\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../../meta/Element_add'/>\n\t///<reference path='../../../common/ProcessorDayOff'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile) {\n\t                var info;\n\t                (function (info) {\n\t                    var banking;\n\t                    (function (banking) {\n\t                        var ProcessorDayOff = ofx4js.domain.data.common.ProcessorDayOff;\n\t                        var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                        var Element_add = ofx4js.meta.Element_add;\n\t                        /**\n\t                         * Stop Check Profile\n\t                         * @author Scott Priddy\n\t                         * @see \"Section 11.13.2.3 OFX Spec\"\n\t                         */\n\t                        var StopCheckProfile = (function () {\n\t                            function StopCheckProfile() {\n\t                            }\n\t                            /**\n\t                             * Days of week that no processing occurs: MONDAY, TUESDAY, WEDNESDAY, THURSDAY,\n\t                             * FRIDAY, SATURDAY, or SUNDAY. 0 or more <PROCDAYSOFF> can be sent.\n\t                             * @return List of days during the week that no processing occurs.\n\t                             */\n\t                            StopCheckProfile.prototype.getProcessorDaysOff = function () {\n\t                                return this.processorDaysOff;\n\t                            };\n\t                            StopCheckProfile.prototype.setProcessorDaysOff = function (processorDaysOff) {\n\t                                this.processorDaysOff = processorDaysOff;\n\t                            };\n\t                            /**\n\t                             * Gets time of day that day's processing ends.\n\t                             *\n\t                             * Time formatted as \"HHMMSS.XXX[gmt offset[:tz name]]\",\n\t                             * the milliseconds and time zone are still optional, and default to GMT.\n\t                             * @see \"Section 3.2.8.3 OFX Spec\"\n\t                             * @return Time String formatted as \"HHMMSS.XXX[gmt offset[:tz name]]\"\n\t                             */\n\t                            StopCheckProfile.prototype.getProcessEndTime = function () {\n\t                                return this.processEndTime;\n\t                            };\n\t                            /**\n\t                             * Sets the time of day that day's processing ends.\n\t                             *\n\t                             * Time formatted as \"HHMMSS.XXX[gmt offset[:tz name]]\",\n\t                             * the milliseconds and time zone are still optional, and default to GMT.\n\t                          \n\t                             * @see \"Section 3.2.8.3 OFX Spec\"\n\t                             * @param processEndTime formatted as \"HHMMSS.XXX[gmt offset[:tz name]]\"\n\t                             */\n\t                            StopCheckProfile.prototype.setProcessEndTime = function (processEndTime) {\n\t                                this.processEndTime = processEndTime;\n\t                            };\n\t                            StopCheckProfile.prototype.getCanUseRange = function () {\n\t                                return this.canUseRange;\n\t                            };\n\t                            StopCheckProfile.prototype.setCanUseRange = function (canUseRange) {\n\t                                this.canUseRange = canUseRange;\n\t                            };\n\t                            StopCheckProfile.prototype.getCanUseDescription = function () {\n\t                                return this.canUseDescription;\n\t                            };\n\t                            StopCheckProfile.prototype.setCanUseDescription = function (canUseDescription) {\n\t                                this.canUseDescription = canUseDescription;\n\t                            };\n\t                            StopCheckProfile.prototype.getStopCheckFee = function () {\n\t                                return this.stopCheckFee;\n\t                            };\n\t                            StopCheckProfile.prototype.setStopCheckFee = function (stopCheckFee) {\n\t                                this.stopCheckFee = stopCheckFee;\n\t                            };\n\t                            return StopCheckProfile;\n\t                        })();\n\t                        banking.StopCheckProfile = StopCheckProfile;\n\t                        Aggregate_add(StopCheckProfile, \"STPCHKPROF\");\n\t                        Element_add(StopCheckProfile, { name: \"PROCDAYSOFF\", order: 0, type: Array, collectionEntryType: ProcessorDayOff, read: StopCheckProfile.prototype.getProcessorDaysOff, write: StopCheckProfile.prototype.setProcessorDaysOff });\n\t                        Element_add(StopCheckProfile, { name: \"PROCENDTM\", required: true, order: 10, type: String, read: StopCheckProfile.prototype.getProcessEndTime, write: StopCheckProfile.prototype.setProcessEndTime });\n\t                        Element_add(StopCheckProfile, { name: \"CANUSERANGE\", required: true, order: 20, type: Boolean, read: StopCheckProfile.prototype.getCanUseRange, write: StopCheckProfile.prototype.setCanUseRange });\n\t                        Element_add(StopCheckProfile, { name: \"CANUSEDESC\", required: true, order: 30, type: Boolean, read: StopCheckProfile.prototype.getCanUseDescription, write: StopCheckProfile.prototype.setCanUseDescription });\n\t                        Element_add(StopCheckProfile, { name: \"STPCHKFEE\", required: true, order: 40, type: Number, read: StopCheckProfile.prototype.getStopCheckFee, write: StopCheckProfile.prototype.setStopCheckFee });\n\t                    })(banking = info.banking || (info.banking = {}));\n\t                })(info = profile.info || (profile.info = {}));\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2012 TheStash\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../../meta/Element_add'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile) {\n\t                var info;\n\t                (function (info) {\n\t                    var common;\n\t                    (function (common) {\n\t                        var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                        var Element_add = ofx4js.meta.Element_add;\n\t                        /**\n\t                         * Image Profile\n\t                         * @author Scott Priddy\n\t                         * @see \"Section 3.1.6.2 OFX Spec\"\n\t                         */\n\t                        var ImageProfile = (function () {\n\t                            function ImageProfile() {\n\t                            }\n\t                            ImageProfile.prototype.getClosingImageAvailable = function () {\n\t                                return this.closingImageAvailable;\n\t                            };\n\t                            ImageProfile.prototype.setClosingImageAvailable = function (closingImageAvailable) {\n\t                                this.closingImageAvailable = closingImageAvailable;\n\t                            };\n\t                            ImageProfile.prototype.getTransactionImageAvailable = function () {\n\t                                return this.transactionImageAvailable;\n\t                            };\n\t                            ImageProfile.prototype.setTransactionImageAvailable = function (transactionImageAvailable) {\n\t                                this.transactionImageAvailable = transactionImageAvailable;\n\t                            };\n\t                            return ImageProfile;\n\t                        })();\n\t                        common.ImageProfile = ImageProfile;\n\t                        Aggregate_add(ImageProfile, \"IMAGEPROF\");\n\t                        Element_add(ImageProfile, { name: \"CLOSINGIMGAVAIL\", required: true, order: 10, type: Boolean, read: ImageProfile.prototype.getClosingImageAvailable, write: ImageProfile.prototype.setClosingImageAvailable });\n\t                        Element_add(ImageProfile, { name: \"TRANIMGAVAIL\", required: true, order: 20, type: Boolean, read: ImageProfile.prototype.getTransactionImageAvailable, write: ImageProfile.prototype.setTransactionImageAvailable });\n\t                    })(common = info.common || (info.common = {}));\n\t                })(info = profile.info || (profile.info = {}));\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2012 TheStash\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../../meta/Element_add'/>\n\t///<reference path='../../../common/ProcessorDayOff'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile) {\n\t                var info;\n\t                (function (info) {\n\t                    var common;\n\t                    (function (common) {\n\t                        var ProcessorDayOff = ofx4js.domain.data.common.ProcessorDayOff;\n\t                        var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                        var Element_add = ofx4js.meta.Element_add;\n\t                        /**\n\t                         * Funds Transfer Profile\n\t                         * @author Scott Priddy\n\t                         * @see \"Section 11.13.2.2 OFX Spec\"\n\t                         */\n\t                        var TransferProfile = (function () {\n\t                            function TransferProfile() {\n\t                            }\n\t                            /**\n\t                             * Days of week that no processing occurs: MONDAY, TUESDAY, WEDNESDAY, THURSDAY,\n\t                             * FRIDAY, SATURDAY, or SUNDAY. 0 or more <PROCDAYSOFF> can be sent.\n\t                             * @return List of days during the week that no processing occurs.\n\t                             */\n\t                            TransferProfile.prototype.getProcessorDaysOff = function () {\n\t                                return this.processorDaysOff;\n\t                            };\n\t                            TransferProfile.prototype.setProcessorDaysOff = function (processorDaysOff) {\n\t                                this.processorDaysOff = processorDaysOff;\n\t                            };\n\t                            /**\n\t                             * Gets time of day that day's processing ends.\n\t                             *\n\t                             * Time formatted as \"HHMMSS.XXX[gmt offset[:tz name]]\",\n\t                             * the milliseconds and time zone are still optional, and default to GMT.\n\t                             * @see \"Section 3.2.8.3 OFX Spec\"\n\t                             * @return Time String formatted as \"HHMMSS.XXX[gmt offset[:tz name]]\"\n\t                             */\n\t                            TransferProfile.prototype.getProcessEndTime = function () {\n\t                                return this.processEndTime;\n\t                            };\n\t                            /**\n\t                             * Sets the time of day that day's processing ends.\n\t                             *\n\t                             * Time formatted as \"HHMMSS.XXX[gmt offset[:tz name]]\",\n\t                             * the milliseconds and time zone are still optional, and default to GMT.\n\t                          \n\t                             * @see \"Section 3.2.8.3 OFX Spec\"\n\t                             * @param processEndTime formatted as \"HHMMSS.XXX[gmt offset[:tz name]]\"\n\t                             */\n\t                            TransferProfile.prototype.setProcessEndTime = function (processEndTime) {\n\t                                this.processEndTime = processEndTime;\n\t                            };\n\t                            TransferProfile.prototype.getSupportsScheduledTransfers = function () {\n\t                                return this.supportsScheduledTransfers;\n\t                            };\n\t                            TransferProfile.prototype.setSupportsScheduledTransfers = function (supportsScheduledTransfers) {\n\t                                this.supportsScheduledTransfers = supportsScheduledTransfers;\n\t                            };\n\t                            /**\n\t                             * Requires <CANSCHED>\n\t                             * @return Boolean whether supports recurring transfers\n\t                             */\n\t                            TransferProfile.prototype.getSupportsRecurringTransfers = function () {\n\t                                return this.supportsRecurringTransfers;\n\t                            };\n\t                            TransferProfile.prototype.setSupportsRecurringTransfers = function (supportsRecurringTransfers) {\n\t                                this.supportsRecurringTransfers = supportsRecurringTransfers;\n\t                            };\n\t                            /**\n\t                             * <CANLOAN>Y must be present for transfers to involve loans\n\t                             * @return Boolean whether supports loan transfers\n\t                             */\n\t                            TransferProfile.prototype.getSupportsLoanTransfers = function () {\n\t                                return this.supportsLoanTransfers;\n\t                            };\n\t                            TransferProfile.prototype.setSupportsLoanTransfers = function (supportsLoanTransfers) {\n\t                                this.supportsLoanTransfers = supportsLoanTransfers;\n\t                            };\n\t                            TransferProfile.prototype.getSupportsScheduledLoanTransfers = function () {\n\t                                return this.supportsScheduledLoanTransfers;\n\t                            };\n\t                            TransferProfile.prototype.setSupportsScheduledLoanTransfers = function (supportsScheduledLoanTransfers) {\n\t                                this.supportsScheduledLoanTransfers = supportsScheduledLoanTransfers;\n\t                            };\n\t                            TransferProfile.prototype.getSupportsRecurringLoanTransfers = function () {\n\t                                return this.supportsRecurringLoanTransfers;\n\t                            };\n\t                            TransferProfile.prototype.setSupportsRecurringLoanTransfers = function (supportsRecurringLoanTransfers) {\n\t                                this.supportsRecurringLoanTransfers = supportsRecurringLoanTransfers;\n\t                            };\n\t                            TransferProfile.prototype.getSupportsTransferModification = function () {\n\t                                return this.supportsTransferModification;\n\t                            };\n\t                            TransferProfile.prototype.setSupportsTransferModification = function (supportsTransferModification) {\n\t                                this.supportsTransferModification = supportsTransferModification;\n\t                            };\n\t                            TransferProfile.prototype.getSupportsModelModification = function () {\n\t                                return this.supportsModelModification;\n\t                            };\n\t                            TransferProfile.prototype.setSupportsModelModification = function (supportsModelModification) {\n\t                                this.supportsModelModification = supportsModelModification;\n\t                            };\n\t                            /**\n\t                             * Model window\n\t                             * the number of days before a recurring transaction is scheduled to be processed that it is\n\t                             * instantiated on the system\n\t                             * @return Number number of days before a recurring transaction is scheduled to be processed that it is instantiated on the system\n\t                             */\n\t                            TransferProfile.prototype.getModelWindow = function () {\n\t                                return this.modelWindow;\n\t                            };\n\t                            TransferProfile.prototype.setModelWindow = function (modelWindow) {\n\t                                this.modelWindow = modelWindow;\n\t                            };\n\t                            /**\n\t                             * Number of days before processing date that funds are withdrawn\n\t                             * @return Number number of days before processing date that funds are withdrawn\n\t                             */\n\t                            TransferProfile.prototype.getWithdrawnDays = function () {\n\t                                return this.withdrawnDays;\n\t                            };\n\t                            TransferProfile.prototype.setWithdrawnDays = function (withdrawnDays) {\n\t                                this.withdrawnDays = withdrawnDays;\n\t                            };\n\t                            /**\n\t                             * Default number of days to pay\n\t                             * @return Number Default number of days to pay\n\t                             */\n\t                            TransferProfile.prototype.getDefaultDaysToPay = function () {\n\t                                return this.defaultDaysToPay;\n\t                            };\n\t                            TransferProfile.prototype.setDefaultDaysToPay = function (defaultDaysToPay) {\n\t                                this.defaultDaysToPay = defaultDaysToPay;\n\t                            };\n\t                            return TransferProfile;\n\t                        })();\n\t                        common.TransferProfile = TransferProfile;\n\t                        Aggregate_add(TransferProfile, \"XFERPROF\");\n\t                        Element_add(TransferProfile, { name: \"PROCDAYSOFF\", order: 0, type: Array, collectionEntryType: ProcessorDayOff, read: TransferProfile.prototype.getProcessorDaysOff, write: TransferProfile.prototype.setProcessorDaysOff });\n\t                        Element_add(TransferProfile, { name: \"PROCENDTM\", required: true, order: 10, type: String, read: TransferProfile.prototype.getProcessEndTime, write: TransferProfile.prototype.setProcessEndTime });\n\t                        Element_add(TransferProfile, { name: \"CANSCHED\", required: true, order: 20, type: Boolean, read: TransferProfile.prototype.getSupportsScheduledTransfers, write: TransferProfile.prototype.setSupportsScheduledTransfers });\n\t                        Element_add(TransferProfile, { name: \"CANRECUR\", required: true, order: 30, type: Boolean, read: TransferProfile.prototype.getSupportsRecurringTransfers, write: TransferProfile.prototype.setSupportsRecurringTransfers });\n\t                        Element_add(TransferProfile, { name: \"CANLOAN\", order: 40, type: Boolean, read: TransferProfile.prototype.getSupportsLoanTransfers, write: TransferProfile.prototype.setSupportsLoanTransfers });\n\t                        Element_add(TransferProfile, { name: \"CANSCHEDLOAN\", order: 50, type: Boolean, read: TransferProfile.prototype.getSupportsScheduledLoanTransfers, write: TransferProfile.prototype.setSupportsScheduledLoanTransfers });\n\t                        Element_add(TransferProfile, { name: \"CANRECURLOAN\", order: 60, type: Boolean, read: TransferProfile.prototype.getSupportsRecurringLoanTransfers, write: TransferProfile.prototype.setSupportsRecurringLoanTransfers });\n\t                        Element_add(TransferProfile, { name: \"CANMODXFERS\", required: true, order: 70, type: Boolean, read: TransferProfile.prototype.getSupportsTransferModification, write: TransferProfile.prototype.setSupportsTransferModification });\n\t                        Element_add(TransferProfile, { name: \"CANMODMDLS\", required: true, order: 80, type: Boolean, read: TransferProfile.prototype.getSupportsModelModification, write: TransferProfile.prototype.setSupportsModelModification });\n\t                        Element_add(TransferProfile, { name: \"MODELWND\", required: true, order: 90, type: Number, read: TransferProfile.prototype.getModelWindow, write: TransferProfile.prototype.setModelWindow });\n\t                        Element_add(TransferProfile, { name: \"DAYSWITH\", required: true, order: 100, type: Number, read: TransferProfile.prototype.getWithdrawnDays, write: TransferProfile.prototype.setWithdrawnDays });\n\t                        Element_add(TransferProfile, { name: \"DFLTDAYSTOPAY\", required: true, order: 110, type: Number, read: TransferProfile.prototype.getDefaultDaysToPay, write: TransferProfile.prototype.setDefaultDaysToPay });\n\t                    })(common = info.common || (info.common = {}));\n\t                })(info = profile.info || (profile.info = {}));\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../banking/AccountType'/>\n\t///<reference path='banking/EmailProfile'/>\n\t///<reference path='banking/StopCheckProfile'/>\n\t///<reference path='common/ImageProfile'/>\n\t///<reference path='common/TransferProfile'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile) {\n\t                var info;\n\t                (function (info) {\n\t                    var AccountType = ofx4js.domain.data.banking.AccountType;\n\t                    var VersionSpecificMessageSetInfo = ofx4js.domain.data.profile.VersionSpecificMessageSetInfo;\n\t                    var MessageSetType = ofx4js.domain.data.MessageSetType;\n\t                    var EmailProfile = ofx4js.domain.data.profile.info.banking.EmailProfile;\n\t                    var ImageProfile = ofx4js.domain.data.profile.info.common.ImageProfile;\n\t                    var StopCheckProfile = ofx4js.domain.data.profile.info.banking.StopCheckProfile;\n\t                    var TransferProfile = ofx4js.domain.data.profile.info.common.TransferProfile;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                    var Element_add = ofx4js.meta.Element_add;\n\t                    /**\n\t                     * Banking Message Set Profile\n\t                     * @author Scott Priddy\n\t                     * @author Ryan Heaton\n\t                     * @see \"Section 11.13.2.1 OFX Spec\"\n\t                     */\n\t                    var BankingV1MessageSetInfo = (function (_super) {\n\t                        __extends(BankingV1MessageSetInfo, _super);\n\t                        function BankingV1MessageSetInfo() {\n\t                            _super.apply(this, arguments);\n\t                        }\n\t                        BankingV1MessageSetInfo.prototype.getMessageSetType = function () {\n\t                            return MessageSetType.banking;\n\t                        };\n\t                        /**\n\t                         * The invalidAccountTypes list.\n\t                         *\n\t                         * @return The invalidAccountTypes list.\n\t                         */\n\t                        BankingV1MessageSetInfo.prototype.getInvalidAccountTypes = function () {\n\t                            return this.invalidAccountTypes;\n\t                        };\n\t                        /**\n\t                         * The invalidAccountTypes list.\n\t                         *\n\t                         * @param invalidAccountTypes The invalidAccountTypes list.\n\t                         */\n\t                        BankingV1MessageSetInfo.prototype.setInvalidAccountTypes = function (invalidAccountTypes) {\n\t                            this.invalidAccountTypes = invalidAccountTypes;\n\t                        };\n\t                        /**\n\t                         * Gets whether closing statement information is available\n\t                         *\n\t                         * @return whether closing statement information is available\n\t                         */\n\t                        BankingV1MessageSetInfo.prototype.getClosingAvail = function () {\n\t                            return this.closingAvail;\n\t                        };\n\t                        /**\n\t                         * Sets whether closing statement information is available\n\t                         *\n\t                         * @param closingAvail whether closing statement information is available\n\t                         */\n\t                        BankingV1MessageSetInfo.prototype.setClosingAvail = function (closingAvail) {\n\t                            this.closingAvail = closingAvail;\n\t                        };\n\t                        BankingV1MessageSetInfo.prototype.getTransferProfile = function () {\n\t                            return this.transferProfile;\n\t                        };\n\t                        BankingV1MessageSetInfo.prototype.setTransferProfile = function (transferProfile) {\n\t                            this.transferProfile = transferProfile;\n\t                        };\n\t                        BankingV1MessageSetInfo.prototype.getStopCheckProfile = function () {\n\t                            return this.stopCheckProfile;\n\t                        };\n\t                        BankingV1MessageSetInfo.prototype.setStopCheckProfile = function (stopCheckProfile) {\n\t                            this.stopCheckProfile = stopCheckProfile;\n\t                        };\n\t                        BankingV1MessageSetInfo.prototype.getEmailProfile = function () {\n\t                            return this.emailProfile;\n\t                        };\n\t                        BankingV1MessageSetInfo.prototype.setEmailProfile = function (emailProfile) {\n\t                            this.emailProfile = emailProfile;\n\t                        };\n\t                        BankingV1MessageSetInfo.prototype.getImageProfile = function () {\n\t                            return this.imageProfile;\n\t                        };\n\t                        BankingV1MessageSetInfo.prototype.setImageProfile = function (imageProfile) {\n\t                            this.imageProfile = imageProfile;\n\t                        };\n\t                        return BankingV1MessageSetInfo;\n\t                    })(VersionSpecificMessageSetInfo);\n\t                    info.BankingV1MessageSetInfo = BankingV1MessageSetInfo;\n\t                    Aggregate_add(BankingV1MessageSetInfo, \"BANKMSGSETV1\");\n\t                    ChildAggregate_add(BankingV1MessageSetInfo, { order: 10, type: Array, collectionEntryType: AccountType, read: BankingV1MessageSetInfo.prototype.getInvalidAccountTypes, write: BankingV1MessageSetInfo.prototype.setInvalidAccountTypes });\n\t                    Element_add(BankingV1MessageSetInfo, { name: \"CLOSINGAVAIL\", required: true, order: 20, type: Boolean, read: BankingV1MessageSetInfo.prototype.getClosingAvail, write: BankingV1MessageSetInfo.prototype.setClosingAvail });\n\t                    ChildAggregate_add(BankingV1MessageSetInfo, { name: \"XFERPROF\", order: 30, type: TransferProfile, read: BankingV1MessageSetInfo.prototype.getTransferProfile, write: BankingV1MessageSetInfo.prototype.setTransferProfile });\n\t                    ChildAggregate_add(BankingV1MessageSetInfo, { name: \"STPCKPROF\", order: 40, type: StopCheckProfile, read: BankingV1MessageSetInfo.prototype.getStopCheckProfile, write: BankingV1MessageSetInfo.prototype.setStopCheckProfile });\n\t                    ChildAggregate_add(BankingV1MessageSetInfo, { name: \"EMAILPROF\", required: true, order: 50, type: EmailProfile, read: BankingV1MessageSetInfo.prototype.getEmailProfile, write: BankingV1MessageSetInfo.prototype.setEmailProfile });\n\t                    ChildAggregate_add(BankingV1MessageSetInfo, { name: \"IMAGEPROF\", order: 60, type: ImageProfile, read: BankingV1MessageSetInfo.prototype.getImageProfile, write: BankingV1MessageSetInfo.prototype.setImageProfile });\n\t                })(info = profile.info || (profile.info = {}));\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../AbstractMessageSetInfo'/>\n\t///<reference path='BankingV1MessageSetInfo'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile) {\n\t                var info;\n\t                (function (info) {\n\t                    var AbstractMessageSetInfo = ofx4js.domain.data.profile.AbstractMessageSetInfo;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                    /**\n\t                     * @author Ryan Heaton\n\t                     */\n\t                    var BankingMessageSetInfo = (function (_super) {\n\t                        __extends(BankingMessageSetInfo, _super);\n\t                        function BankingMessageSetInfo() {\n\t                            _super.apply(this, arguments);\n\t                        }\n\t                        BankingMessageSetInfo.prototype.getVersion1Info = function () {\n\t                            return this.version1Info;\n\t                        };\n\t                        BankingMessageSetInfo.prototype.setVersion1Info = function (version1Info) {\n\t                            this.version1Info = version1Info;\n\t                        };\n\t                        return BankingMessageSetInfo;\n\t                    })(AbstractMessageSetInfo);\n\t                    info.BankingMessageSetInfo = BankingMessageSetInfo;\n\t                    Aggregate_add(BankingMessageSetInfo, \"BANKMSGSET\");\n\t                    ChildAggregate_add(BankingMessageSetInfo, { order: 0, type: info.BankingV1MessageSetInfo, read: BankingMessageSetInfo.prototype.getVersion1Info, write: BankingMessageSetInfo.prototype.setVersion1Info });\n\t                })(info = profile.info || (profile.info = {}));\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/Element_add'/>\n\t///<reference path='../../common/ProcessorDayOff'/>\n\t///<reference path='../../profile/VersionSpecificMessageSetInfo'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile) {\n\t                var info;\n\t                (function (info) {\n\t                    var VersionSpecificMessageSetInfo = ofx4js.domain.data.profile.VersionSpecificMessageSetInfo;\n\t                    var MessageSetType = ofx4js.domain.data.MessageSetType;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var Element_add = ofx4js.meta.Element_add;\n\t                    /**\n\t                     * BillPay Message Set Profile\n\t                     * @author Scott Priddy\n\t                     * @author Ryan Heaton\n\t                     * @see \"Section 12.11.2 OFX Spec\"\n\t                     */\n\t                    var BillpayV1MessageSetInfo = (function (_super) {\n\t                        __extends(BillpayV1MessageSetInfo, _super);\n\t                        function BillpayV1MessageSetInfo() {\n\t                            _super.apply(this, arguments);\n\t                        }\n\t                        BillpayV1MessageSetInfo.prototype.getMessageSetType = function () {\n\t                            return MessageSetType.payments;\n\t                        };\n\t                        BillpayV1MessageSetInfo.prototype.getDaysWith = function () {\n\t                            return this.daysWith;\n\t                        };\n\t                        BillpayV1MessageSetInfo.prototype.setDaysWith = function (daysWith) {\n\t                            this.daysWith = daysWith;\n\t                        };\n\t                        BillpayV1MessageSetInfo.prototype.getDefaultDaysToPay = function () {\n\t                            return this.defaultDaysToPay;\n\t                        };\n\t                        BillpayV1MessageSetInfo.prototype.setDefaultDaysToPay = function (defaultDaysToPay) {\n\t                            this.defaultDaysToPay = defaultDaysToPay;\n\t                        };\n\t                        BillpayV1MessageSetInfo.prototype.getTransferDaysWith = function () {\n\t                            return this.transferDaysWith;\n\t                        };\n\t                        BillpayV1MessageSetInfo.prototype.setTransferDaysWith = function (transferDaysWith) {\n\t                            this.transferDaysWith = transferDaysWith;\n\t                        };\n\t                        BillpayV1MessageSetInfo.prototype.getTransferDefaultDaysToPay = function () {\n\t                            return this.transferDefaultDaysToPay;\n\t                        };\n\t                        BillpayV1MessageSetInfo.prototype.setTransferDefaultDaysToPay = function (transferDefaultDaysToPay) {\n\t                            this.transferDefaultDaysToPay = transferDefaultDaysToPay;\n\t                        };\n\t                        BillpayV1MessageSetInfo.prototype.getProcessorDaysOff = function () {\n\t                            return this.processorDaysOff;\n\t                        };\n\t                        BillpayV1MessageSetInfo.prototype.setProcessorDaysOff = function (processorDaysOff) {\n\t                            this.processorDaysOff = processorDaysOff;\n\t                        };\n\t                        BillpayV1MessageSetInfo.prototype.getProcessorEndTime = function () {\n\t                            return this.processorEndTime;\n\t                        };\n\t                        BillpayV1MessageSetInfo.prototype.setProcessorEndTime = function (processorEndTime) {\n\t                            this.processorEndTime = processorEndTime;\n\t                        };\n\t                        BillpayV1MessageSetInfo.prototype.getModelWindow = function () {\n\t                            return this.modelWindow;\n\t                        };\n\t                        BillpayV1MessageSetInfo.prototype.setModelWindow = function (modelWindow) {\n\t                            this.modelWindow = modelWindow;\n\t                        };\n\t                        BillpayV1MessageSetInfo.prototype.getPostProcessorWindow = function () {\n\t                            return this.postProcessorWindow;\n\t                        };\n\t                        BillpayV1MessageSetInfo.prototype.setPostProcessorWindow = function (postProcessorWindow) {\n\t                            this.postProcessorWindow = postProcessorWindow;\n\t                        };\n\t                        BillpayV1MessageSetInfo.prototype.getSupportsStatusUpdateViaPaymentModificationResponse = function () {\n\t                            return this.supportsStatusUpdateViaPaymentModificationResponse;\n\t                        };\n\t                        BillpayV1MessageSetInfo.prototype.setSupportsStatusUpdateViaPaymentModificationResponse = function (supportsStatusUpdateViaPaymentModificationResponse) {\n\t                            this.supportsStatusUpdateViaPaymentModificationResponse = supportsStatusUpdateViaPaymentModificationResponse;\n\t                        };\n\t                        BillpayV1MessageSetInfo.prototype.getSupportsPaymentByAddress = function () {\n\t                            return this.supportsPaymentByAddress;\n\t                        };\n\t                        BillpayV1MessageSetInfo.prototype.setSupportsPaymentByAddress = function (supportsPaymentByAddress) {\n\t                            this.supportsPaymentByAddress = supportsPaymentByAddress;\n\t                        };\n\t                        BillpayV1MessageSetInfo.prototype.getSupportsPaymentByTransfer = function () {\n\t                            return this.supportsPaymentByTransfer;\n\t                        };\n\t                        BillpayV1MessageSetInfo.prototype.setSupportsPaymentByTransfer = function (supportsPaymentByTransfer) {\n\t                            this.supportsPaymentByTransfer = supportsPaymentByTransfer;\n\t                        };\n\t                        BillpayV1MessageSetInfo.prototype.getSupportsPaymentByPayeeId = function () {\n\t                            return this.supportsPaymentByPayeeId;\n\t                        };\n\t                        BillpayV1MessageSetInfo.prototype.setSupportsPaymentByPayeeId = function (supportsPaymentByPayeeId) {\n\t                            this.supportsPaymentByPayeeId = supportsPaymentByPayeeId;\n\t                        };\n\t                        BillpayV1MessageSetInfo.prototype.getUserCanAddPayee = function () {\n\t                            return this.userCanAddPayee;\n\t                        };\n\t                        BillpayV1MessageSetInfo.prototype.setUserCanAddPayee = function (userCanAddPayee) {\n\t                            this.userCanAddPayee = userCanAddPayee;\n\t                        };\n\t                        BillpayV1MessageSetInfo.prototype.getSupportsExtendedPayment = function () {\n\t                            return this.supportsExtendedPayment;\n\t                        };\n\t                        BillpayV1MessageSetInfo.prototype.setSupportsExtendedPayment = function (supportsExtendedPayment) {\n\t                            this.supportsExtendedPayment = supportsExtendedPayment;\n\t                        };\n\t                        BillpayV1MessageSetInfo.prototype.getCanModifyPayments = function () {\n\t                            return this.canModifyPayments;\n\t                        };\n\t                        BillpayV1MessageSetInfo.prototype.setCanModifyPayments = function (canModifyPayments) {\n\t                            this.canModifyPayments = canModifyPayments;\n\t                        };\n\t                        BillpayV1MessageSetInfo.prototype.getCanModifyModels = function () {\n\t                            return this.canModifyModels;\n\t                        };\n\t                        BillpayV1MessageSetInfo.prototype.setCanModifyModels = function (canModifyModels) {\n\t                            this.canModifyModels = canModifyModels;\n\t                        };\n\t                        BillpayV1MessageSetInfo.prototype.getSupportsDifferentFirstPayment = function () {\n\t                            return this.supportsDifferentFirstPayment;\n\t                        };\n\t                        BillpayV1MessageSetInfo.prototype.setSupportsDifferentFirstPayment = function (supportsDifferentFirstPayment) {\n\t                            this.supportsDifferentFirstPayment = supportsDifferentFirstPayment;\n\t                        };\n\t                        BillpayV1MessageSetInfo.prototype.getSupportsDifferentLastPayment = function () {\n\t                            return this.supportsDifferentLastPayment;\n\t                        };\n\t                        BillpayV1MessageSetInfo.prototype.setSupportsDifferentLastPayment = function (supportsDifferentLastPayment) {\n\t                            this.supportsDifferentLastPayment = supportsDifferentLastPayment;\n\t                        };\n\t                        BillpayV1MessageSetInfo.prototype.getSupportsBillPresentmentContext = function () {\n\t                            return this.supportsBillPresentmentContext;\n\t                        };\n\t                        BillpayV1MessageSetInfo.prototype.setSupportsBillPresentmentContext = function (supportsBillPresentmentContext) {\n\t                            this.supportsBillPresentmentContext = supportsBillPresentmentContext;\n\t                        };\n\t                        return BillpayV1MessageSetInfo;\n\t                    })(VersionSpecificMessageSetInfo);\n\t                    info.BillpayV1MessageSetInfo = BillpayV1MessageSetInfo;\n\t                    Aggregate_add(BillpayV1MessageSetInfo, \"BILLPAYMSGSETV1\");\n\t                    Element_add(BillpayV1MessageSetInfo, { name: \"DAYSWITH\", required: true, order: 10, type: Number, read: BillpayV1MessageSetInfo.prototype.getDaysWith, write: BillpayV1MessageSetInfo.prototype.setDaysWith });\n\t                    Element_add(BillpayV1MessageSetInfo, { name: \"DFLTDAYSTOPAY\", required: true, order: 20, type: Number, read: BillpayV1MessageSetInfo.prototype.getDefaultDaysToPay, write: BillpayV1MessageSetInfo.prototype.setDefaultDaysToPay });\n\t                    Element_add(BillpayV1MessageSetInfo, { name: \"XFERDAYSWITH\", required: true, order: 30, type: Number, read: BillpayV1MessageSetInfo.prototype.getTransferDaysWith, write: BillpayV1MessageSetInfo.prototype.setTransferDaysWith });\n\t                    Element_add(BillpayV1MessageSetInfo, { name: \"XFERDFLTDAYSTOPAY\", required: true, order: 40, type: Number, read: BillpayV1MessageSetInfo.prototype.getTransferDefaultDaysToPay, write: BillpayV1MessageSetInfo.prototype.setTransferDefaultDaysToPay });\n\t                    Element_add(BillpayV1MessageSetInfo, { name: \"PROCDAYSOFF\", order: 50, type: Array, read: BillpayV1MessageSetInfo.prototype.getProcessorDaysOff, write: BillpayV1MessageSetInfo.prototype.setProcessorDaysOff });\n\t                    Element_add(BillpayV1MessageSetInfo, { name: \"PROCENDTM\", required: true, order: 60, type: String, read: BillpayV1MessageSetInfo.prototype.getProcessorEndTime, write: BillpayV1MessageSetInfo.prototype.setProcessorEndTime });\n\t                    Element_add(BillpayV1MessageSetInfo, { name: \"MODELWND\", required: true, order: 70, type: Number, read: BillpayV1MessageSetInfo.prototype.getModelWindow, write: BillpayV1MessageSetInfo.prototype.setModelWindow });\n\t                    Element_add(BillpayV1MessageSetInfo, { name: \"POSTPROCWND\", required: true, order: 80, type: Number, read: BillpayV1MessageSetInfo.prototype.getPostProcessorWindow, write: BillpayV1MessageSetInfo.prototype.setPostProcessorWindow });\n\t                    Element_add(BillpayV1MessageSetInfo, { name: \"STSVIAMODS\", required: true, order: 90, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getSupportsStatusUpdateViaPaymentModificationResponse, write: BillpayV1MessageSetInfo.prototype.setSupportsStatusUpdateViaPaymentModificationResponse });\n\t                    Element_add(BillpayV1MessageSetInfo, { name: \"PMTBYADDR\", required: true, order: 100, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getSupportsPaymentByAddress, write: BillpayV1MessageSetInfo.prototype.setSupportsPaymentByAddress });\n\t                    Element_add(BillpayV1MessageSetInfo, { name: \"PMTBYXFER\", required: true, order: 110, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getSupportsPaymentByTransfer, write: BillpayV1MessageSetInfo.prototype.setSupportsPaymentByTransfer });\n\t                    Element_add(BillpayV1MessageSetInfo, { name: \"PMTBYPAYEEID\", required: true, order: 120, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getSupportsPaymentByPayeeId, write: BillpayV1MessageSetInfo.prototype.setSupportsPaymentByPayeeId });\n\t                    Element_add(BillpayV1MessageSetInfo, { name: \"CANADDPAYEE\", required: true, order: 130, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getUserCanAddPayee, write: BillpayV1MessageSetInfo.prototype.setUserCanAddPayee });\n\t                    Element_add(BillpayV1MessageSetInfo, { name: \"HASEXTDPMT\", required: true, order: 140, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getSupportsExtendedPayment, write: BillpayV1MessageSetInfo.prototype.setSupportsExtendedPayment });\n\t                    Element_add(BillpayV1MessageSetInfo, { name: \"CANMODPMTS\", required: true, order: 150, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getCanModifyPayments, write: BillpayV1MessageSetInfo.prototype.setCanModifyPayments });\n\t                    Element_add(BillpayV1MessageSetInfo, { name: \"CANMODMDLS\", required: true, order: 160, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getCanModifyModels, write: BillpayV1MessageSetInfo.prototype.setCanModifyModels });\n\t                    Element_add(BillpayV1MessageSetInfo, { name: \"DIFFFIRSTPMT\", required: true, order: 170, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getSupportsDifferentFirstPayment, write: BillpayV1MessageSetInfo.prototype.setSupportsDifferentFirstPayment });\n\t                    Element_add(BillpayV1MessageSetInfo, { name: \"DIFFLASTPMT\", required: true, order: 180, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getSupportsDifferentLastPayment, write: BillpayV1MessageSetInfo.prototype.setSupportsDifferentLastPayment });\n\t                    Element_add(BillpayV1MessageSetInfo, { name: \"BILLPUBCONTEXT\", order: 190, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getSupportsBillPresentmentContext, write: BillpayV1MessageSetInfo.prototype.setSupportsBillPresentmentContext });\n\t                })(info = profile.info || (profile.info = {}));\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../AbstractMessageSetInfo'/>\n\t///<reference path='BillpayV1MessageSetInfo'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile) {\n\t                var info;\n\t                (function (info) {\n\t                    var AbstractMessageSetInfo = ofx4js.domain.data.profile.AbstractMessageSetInfo;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                    /**\n\t                     * @author Ryan Heaton\n\t                     */\n\t                    var BillpayMessageSetInfo = (function (_super) {\n\t                        __extends(BillpayMessageSetInfo, _super);\n\t                        function BillpayMessageSetInfo() {\n\t                            _super.apply(this, arguments);\n\t                        }\n\t                        BillpayMessageSetInfo.prototype.getVersion1Info = function () {\n\t                            return this.version1Info;\n\t                        };\n\t                        BillpayMessageSetInfo.prototype.setVersion1Info = function (version1Info) {\n\t                            this.version1Info = version1Info;\n\t                        };\n\t                        return BillpayMessageSetInfo;\n\t                    })(AbstractMessageSetInfo);\n\t                    info.BillpayMessageSetInfo = BillpayMessageSetInfo;\n\t                    Aggregate_add(BillpayMessageSetInfo, \"BILLPAYMSGSET\");\n\t                    ChildAggregate_add(BillpayMessageSetInfo, { order: 0, type: info.BillpayV1MessageSetInfo, read: BillpayMessageSetInfo.prototype.getVersion1Info, write: BillpayMessageSetInfo.prototype.setVersion1Info });\n\t                })(info = profile.info || (profile.info = {}));\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../../../meta/Element_add'/>\n\t///<reference path='../../profile/VersionSpecificMessageSetInfo'/>\n\t///<reference path='../../profile/info/common/ImageProfile'/>\n\t///<reference path='../../MessageSetType'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile) {\n\t                var info;\n\t                (function (info) {\n\t                    var VersionSpecificMessageSetInfo = ofx4js.domain.data.profile.VersionSpecificMessageSetInfo;\n\t                    var MessageSetType = ofx4js.domain.data.MessageSetType;\n\t                    var ImageProfile = ofx4js.domain.data.profile.info.common.ImageProfile;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                    var Element_add = ofx4js.meta.Element_add;\n\t                    /**\n\t                     * Credit Card Message Set Profile\n\t                     * @author Scott Priddy\n\t                     * @author Ryan Heaton\n\t                     * @see \"Section 11.13.3 OFX Spec\"\n\t                     */\n\t                    var CreditCardV1MessageSetInfo = (function (_super) {\n\t                        __extends(CreditCardV1MessageSetInfo, _super);\n\t                        function CreditCardV1MessageSetInfo() {\n\t                            _super.apply(this, arguments);\n\t                        }\n\t                        CreditCardV1MessageSetInfo.prototype.getMessageSetType = function () {\n\t                            return MessageSetType.creditcard;\n\t                        };\n\t                        /**\n\t                         * Closing statement information available\n\t                         * @return Boolean\n\t                         */\n\t                        CreditCardV1MessageSetInfo.prototype.getClosingAvail = function () {\n\t                            return this.closingAvail;\n\t                        };\n\t                        CreditCardV1MessageSetInfo.prototype.setClosingAvail = function (closingAvail) {\n\t                            this.closingAvail = closingAvail;\n\t                        };\n\t                        /**\n\t                         * Image profile (if supported)\n\t                         * @return ImageProfile\n\t                         */\n\t                        CreditCardV1MessageSetInfo.prototype.getImageProfile = function () {\n\t                            return this.imageProfile;\n\t                        };\n\t                        CreditCardV1MessageSetInfo.prototype.setImageProfile = function (imageProfile) {\n\t                            this.imageProfile = imageProfile;\n\t                        };\n\t                        return CreditCardV1MessageSetInfo;\n\t                    })(VersionSpecificMessageSetInfo);\n\t                    info.CreditCardV1MessageSetInfo = CreditCardV1MessageSetInfo;\n\t                    Aggregate_add(CreditCardV1MessageSetInfo, \"CREDITCARDMSGSETV1\");\n\t                    Element_add(CreditCardV1MessageSetInfo, { name: \"CLOSINGAVAIL\", required: true, order: 20, type: Boolean, read: CreditCardV1MessageSetInfo.prototype.getClosingAvail, write: CreditCardV1MessageSetInfo.prototype.setClosingAvail });\n\t                    ChildAggregate_add(CreditCardV1MessageSetInfo, { name: \"IMAGEPROF\", order: 10, type: ImageProfile, read: CreditCardV1MessageSetInfo.prototype.getImageProfile, write: CreditCardV1MessageSetInfo.prototype.setImageProfile });\n\t                })(info = profile.info || (profile.info = {}));\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../profile/AbstractMessageSetInfo'/>\n\t///<reference path='CreditCardV1MessageSetInfo'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile) {\n\t                var info;\n\t                (function (info) {\n\t                    var AbstractMessageSetInfo = ofx4js.domain.data.profile.AbstractMessageSetInfo;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                    /**\n\t                     * @author Ryan Heaton\n\t                     */\n\t                    var CreditCardMessageSetInfo = (function (_super) {\n\t                        __extends(CreditCardMessageSetInfo, _super);\n\t                        function CreditCardMessageSetInfo() {\n\t                            _super.apply(this, arguments);\n\t                        }\n\t                        CreditCardMessageSetInfo.prototype.getVersion1Info = function () {\n\t                            return this.version1Info;\n\t                        };\n\t                        CreditCardMessageSetInfo.prototype.setVersion1Info = function (version1Info) {\n\t                            this.version1Info = version1Info;\n\t                        };\n\t                        return CreditCardMessageSetInfo;\n\t                    })(AbstractMessageSetInfo);\n\t                    info.CreditCardMessageSetInfo = CreditCardMessageSetInfo;\n\t                    Aggregate_add(CreditCardMessageSetInfo, \"CREDITCARDMSGSET\");\n\t                    ChildAggregate_add(CreditCardMessageSetInfo, { order: 0, type: info.CreditCardV1MessageSetInfo, read: CreditCardMessageSetInfo.prototype.getVersion1Info, write: CreditCardMessageSetInfo.prototype.setVersion1Info });\n\t                })(info = profile.info || (profile.info = {}));\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/Element_add'/>\n\t///<reference path='../../profile/VersionSpecificMessageSetInfo'/>\n\t///<reference path='EmailV1MessageSetInfo'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile) {\n\t                var info;\n\t                (function (info) {\n\t                    var VersionSpecificMessageSetInfo = ofx4js.domain.data.profile.VersionSpecificMessageSetInfo;\n\t                    var MessageSetType = ofx4js.domain.data.MessageSetType;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var Element_add = ofx4js.meta.Element_add;\n\t                    /**\n\t                     * Email Message Set Profile Information\n\t                     * @author Scott Priddy\n\t                     * @author Ryan Heaton\n\t                     * @see \"Section 9.4.2 OFX Spec\"\n\t                     */\n\t                    var EmailV1MessageSetInfo = (function (_super) {\n\t                        __extends(EmailV1MessageSetInfo, _super);\n\t                        function EmailV1MessageSetInfo() {\n\t                            _super.apply(this, arguments);\n\t                        }\n\t                        EmailV1MessageSetInfo.prototype.getMessageSetType = function () {\n\t                            return MessageSetType.email;\n\t                        };\n\t                        /**\n\t                         * Y if server supports <MAILRQ> request.\n\t                         * N if server supports only the <MAILSYNCRQ> request.\n\t                         * @return Boolean\n\t                         */\n\t                        EmailV1MessageSetInfo.prototype.getSupportsMail = function () {\n\t                            return this.supportsMail;\n\t                        };\n\t                        EmailV1MessageSetInfo.prototype.setSupportsMail = function (supportsMail) {\n\t                            this.supportsMail = supportsMail;\n\t                        };\n\t                        /**\n\t                         * Y if server supports get MIME message\n\t                         * @return Boolean\n\t                         */\n\t                        EmailV1MessageSetInfo.prototype.getSupportsMimeType = function () {\n\t                            return this.supportsMimeType;\n\t                        };\n\t                        EmailV1MessageSetInfo.prototype.setSupportsMimeType = function (supportsMimeType) {\n\t                            this.supportsMimeType = supportsMimeType;\n\t                        };\n\t                        return EmailV1MessageSetInfo;\n\t                    })(VersionSpecificMessageSetInfo);\n\t                    info.EmailV1MessageSetInfo = EmailV1MessageSetInfo;\n\t                    Aggregate_add(EmailV1MessageSetInfo, \"EMAILMSGSETV1\");\n\t                    Element_add(EmailV1MessageSetInfo, { name: \"MAILSUP\", required: true, order: 10, type: Boolean, read: EmailV1MessageSetInfo.prototype.getSupportsMail, write: EmailV1MessageSetInfo.prototype.setSupportsMail });\n\t                    Element_add(EmailV1MessageSetInfo, { name: \"GETMIMESUP\", required: true, order: 20, type: Boolean, read: EmailV1MessageSetInfo.prototype.getSupportsMimeType, write: EmailV1MessageSetInfo.prototype.setSupportsMimeType });\n\t                })(info = profile.info || (profile.info = {}));\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../profile/AbstractMessageSetInfo'/>\n\t///<reference path='EmailV1MessageSetInfo'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile) {\n\t                var info;\n\t                (function (info) {\n\t                    var AbstractMessageSetInfo = ofx4js.domain.data.profile.AbstractMessageSetInfo;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                    /**\n\t                     * @author Ryan Heaton\n\t                     */\n\t                    var EmailMessageSetInfo = (function (_super) {\n\t                        __extends(EmailMessageSetInfo, _super);\n\t                        function EmailMessageSetInfo() {\n\t                            _super.apply(this, arguments);\n\t                        }\n\t                        EmailMessageSetInfo.prototype.getVersion1Info = function () {\n\t                            return this.version1Info;\n\t                        };\n\t                        EmailMessageSetInfo.prototype.setVersion1Info = function (version1Info) {\n\t                            this.version1Info = version1Info;\n\t                        };\n\t                        return EmailMessageSetInfo;\n\t                    })(AbstractMessageSetInfo);\n\t                    info.EmailMessageSetInfo = EmailMessageSetInfo;\n\t                    Aggregate_add(EmailMessageSetInfo, \"EMAILMSGSET\");\n\t                    ChildAggregate_add(EmailMessageSetInfo, { order: 0, type: info.EmailV1MessageSetInfo, read: EmailMessageSetInfo.prototype.getVersion1Info, write: EmailMessageSetInfo.prototype.setVersion1Info });\n\t                })(info = profile.info || (profile.info = {}));\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../../../meta/Element_add'/>\n\t///<reference path='../../profile/info/common/TransferProfile'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile) {\n\t                var info;\n\t                (function (info) {\n\t                    var VersionSpecificMessageSetInfo = ofx4js.domain.data.profile.VersionSpecificMessageSetInfo;\n\t                    var MessageSetType = ofx4js.domain.data.MessageSetType;\n\t                    var TransferProfile = ofx4js.domain.data.profile.info.common.TransferProfile;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                    var Element_add = ofx4js.meta.Element_add;\n\t                    /**\n\t                     * Interbank Funds Transfer Message Set Profile\n\t                     * @author Scott Priddy\n\t                     * @author Ryan Heaton\n\t                     * @see \"Section 11.13.4 OFX Spec\"\n\t                     */\n\t                    var InterbankTransferV1MessageSetInfo = (function (_super) {\n\t                        __extends(InterbankTransferV1MessageSetInfo, _super);\n\t                        function InterbankTransferV1MessageSetInfo() {\n\t                            _super.apply(this, arguments);\n\t                        }\n\t                        InterbankTransferV1MessageSetInfo.prototype.getMessageSetType = function () {\n\t                            return MessageSetType.interbank_transfer;\n\t                        };\n\t                        InterbankTransferV1MessageSetInfo.prototype.getTransferProfile = function () {\n\t                            return this.transferProfile;\n\t                        };\n\t                        InterbankTransferV1MessageSetInfo.prototype.setTransferProfile = function (transferProfile) {\n\t                            this.transferProfile = transferProfile;\n\t                        };\n\t                        InterbankTransferV1MessageSetInfo.prototype.getSupportsBillPay = function () {\n\t                            return this.supportsBillPay;\n\t                        };\n\t                        InterbankTransferV1MessageSetInfo.prototype.setSupportsBillPay = function (supportsBillPay) {\n\t                            this.supportsBillPay = supportsBillPay;\n\t                        };\n\t                        InterbankTransferV1MessageSetInfo.prototype.getCancelWindow = function () {\n\t                            return this.cancelWindow;\n\t                        };\n\t                        InterbankTransferV1MessageSetInfo.prototype.setCancelWindow = function (cancelWindow) {\n\t                            this.cancelWindow = cancelWindow;\n\t                        };\n\t                        InterbankTransferV1MessageSetInfo.prototype.getDomesticInterbankTransferFee = function () {\n\t                            return this.domesticInterbankTransferFee;\n\t                        };\n\t                        InterbankTransferV1MessageSetInfo.prototype.setDomesticInterbankTransferFee = function (domesticInterbankTransferFee) {\n\t                            this.domesticInterbankTransferFee = domesticInterbankTransferFee;\n\t                        };\n\t                        InterbankTransferV1MessageSetInfo.prototype.getInternationalInterbankTransferFee = function () {\n\t                            return this.internationalInterbankTransferFee;\n\t                        };\n\t                        InterbankTransferV1MessageSetInfo.prototype.setInternationalInterbankTransferFee = function (internationalInterbankTransferFee) {\n\t                            this.internationalInterbankTransferFee = internationalInterbankTransferFee;\n\t                        };\n\t                        return InterbankTransferV1MessageSetInfo;\n\t                    })(VersionSpecificMessageSetInfo);\n\t                    info.InterbankTransferV1MessageSetInfo = InterbankTransferV1MessageSetInfo;\n\t                    Aggregate_add(InterbankTransferV1MessageSetInfo, \"INTERXFERMSGSETV1\");\n\t                    ChildAggregate_add(InterbankTransferV1MessageSetInfo, { name: \"XFERPROF\", required: true, order: 10, type: TransferProfile, read: InterbankTransferV1MessageSetInfo.prototype.getTransferProfile, write: InterbankTransferV1MessageSetInfo.prototype.setTransferProfile });\n\t                    Element_add(InterbankTransferV1MessageSetInfo, { name: \"CANBILLPAY\", required: true, order: 20, type: Boolean, read: InterbankTransferV1MessageSetInfo.prototype.getSupportsBillPay, write: InterbankTransferV1MessageSetInfo.prototype.setSupportsBillPay });\n\t                    Element_add(InterbankTransferV1MessageSetInfo, { name: \"CANCELWND\", required: true, order: 30, type: Number, read: InterbankTransferV1MessageSetInfo.prototype.getCancelWindow, write: InterbankTransferV1MessageSetInfo.prototype.setCancelWindow });\n\t                    Element_add(InterbankTransferV1MessageSetInfo, { name: \"DOMXFERFEE\", required: true, order: 40, type: Number, read: InterbankTransferV1MessageSetInfo.prototype.getDomesticInterbankTransferFee, write: InterbankTransferV1MessageSetInfo.prototype.setDomesticInterbankTransferFee });\n\t                    Element_add(InterbankTransferV1MessageSetInfo, { name: \"INTLXFERFEE\", required: true, order: 50, type: Number, read: InterbankTransferV1MessageSetInfo.prototype.getInternationalInterbankTransferFee, write: InterbankTransferV1MessageSetInfo.prototype.setInternationalInterbankTransferFee });\n\t                })(info = profile.info || (profile.info = {}));\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../profile/AbstractMessageSetInfo'/>\n\t///<reference path='InterbankTransferV1MessageSetInfo'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile) {\n\t                var info;\n\t                (function (info) {\n\t                    var AbstractMessageSetInfo = ofx4js.domain.data.profile.AbstractMessageSetInfo;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                    /**\n\t                     * @author Ryan Heaton\n\t                     */\n\t                    var InterbankTransferMessageSetInfo = (function (_super) {\n\t                        __extends(InterbankTransferMessageSetInfo, _super);\n\t                        function InterbankTransferMessageSetInfo() {\n\t                            _super.apply(this, arguments);\n\t                        }\n\t                        InterbankTransferMessageSetInfo.prototype.getVersion1Info = function () {\n\t                            return this.version1Info;\n\t                        };\n\t                        InterbankTransferMessageSetInfo.prototype.setVersion1Info = function (version1Info) {\n\t                            this.version1Info = version1Info;\n\t                        };\n\t                        return InterbankTransferMessageSetInfo;\n\t                    })(AbstractMessageSetInfo);\n\t                    info.InterbankTransferMessageSetInfo = InterbankTransferMessageSetInfo;\n\t                    Aggregate_add(InterbankTransferMessageSetInfo, \"INTERXFERMSGSET\");\n\t                    ChildAggregate_add(InterbankTransferMessageSetInfo, { order: 0, type: info.InterbankTransferV1MessageSetInfo, read: InterbankTransferMessageSetInfo.prototype.getVersion1Info, write: InterbankTransferMessageSetInfo.prototype.setVersion1Info });\n\t                })(info = profile.info || (profile.info = {}));\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/Element_add'/>\n\t///<reference path='../../profile/VersionSpecificMessageSetInfo'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile) {\n\t                var info;\n\t                (function (info) {\n\t                    var VersionSpecificMessageSetInfo = ofx4js.domain.data.profile.VersionSpecificMessageSetInfo;\n\t                    var MessageSetType = ofx4js.domain.data.MessageSetType;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var Element_add = ofx4js.meta.Element_add;\n\t                    /**\n\t                     * @see \"Section 13.7.1.1, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     * @author Ryan Heaton\n\t                     */\n\t                    var InvestmentV1MessageSetInfo = (function (_super) {\n\t                        __extends(InvestmentV1MessageSetInfo, _super);\n\t                        function InvestmentV1MessageSetInfo() {\n\t                            _super.apply(this, arguments);\n\t                        }\n\t                        InvestmentV1MessageSetInfo.prototype.getMessageSetType = function () {\n\t                            return MessageSetType.investment;\n\t                        };\n\t                        InvestmentV1MessageSetInfo.prototype.getSupportsStatementsDownload = function () {\n\t                            return this.supportsStatementsDownload;\n\t                        };\n\t                        InvestmentV1MessageSetInfo.prototype.setSupportsStatementsDownload = function (supportsStatementsDownload) {\n\t                            this.supportsStatementsDownload = supportsStatementsDownload;\n\t                        };\n\t                        InvestmentV1MessageSetInfo.prototype.getSupportsOpenOrdersDownload = function () {\n\t                            return this.supportsOpenOrdersDownload;\n\t                        };\n\t                        InvestmentV1MessageSetInfo.prototype.setSupportsOpenOrdersDownload = function (supportsOpenOrdersDownload) {\n\t                            this.supportsOpenOrdersDownload = supportsOpenOrdersDownload;\n\t                        };\n\t                        InvestmentV1MessageSetInfo.prototype.getSupportsPositionsDownload = function () {\n\t                            return this.supportsPositionsDownload;\n\t                        };\n\t                        InvestmentV1MessageSetInfo.prototype.setSupportsPositionsDownload = function (supportsPositionsDownload) {\n\t                            this.supportsPositionsDownload = supportsPositionsDownload;\n\t                        };\n\t                        InvestmentV1MessageSetInfo.prototype.getSupportsBalanceDownload = function () {\n\t                            return this.supportsBalanceDownload;\n\t                        };\n\t                        InvestmentV1MessageSetInfo.prototype.setSupportsBalanceDownload = function (supportsBalanceDownload) {\n\t                            this.supportsBalanceDownload = supportsBalanceDownload;\n\t                        };\n\t                        InvestmentV1MessageSetInfo.prototype.getSupportsEmail = function () {\n\t                            return this.supportsEmail;\n\t                        };\n\t                        InvestmentV1MessageSetInfo.prototype.setSupportsEmail = function (supportsEmail) {\n\t                            this.supportsEmail = supportsEmail;\n\t                        };\n\t                        InvestmentV1MessageSetInfo.prototype.getSupports401kInformation = function () {\n\t                            return this.supports401kInformation;\n\t                        };\n\t                        InvestmentV1MessageSetInfo.prototype.setSupports401kInformation = function (supports401kInformation) {\n\t                            this.supports401kInformation = supports401kInformation;\n\t                        };\n\t                        InvestmentV1MessageSetInfo.prototype.getSupportsClosingStatements = function () {\n\t                            return this.supportsClosingStatements;\n\t                        };\n\t                        InvestmentV1MessageSetInfo.prototype.setSupportsClosingStatements = function (supportsClosingStatements) {\n\t                            this.supportsClosingStatements = supportsClosingStatements;\n\t                        };\n\t                        return InvestmentV1MessageSetInfo;\n\t                    })(VersionSpecificMessageSetInfo);\n\t                    info.InvestmentV1MessageSetInfo = InvestmentV1MessageSetInfo;\n\t                    Aggregate_add(InvestmentV1MessageSetInfo, \"INVSTMTMSGSETV1\");\n\t                    Element_add(InvestmentV1MessageSetInfo, { name: \"TRANDNLD\", required: true, order: 10, type: Boolean, read: InvestmentV1MessageSetInfo.prototype.getSupportsStatementsDownload, write: InvestmentV1MessageSetInfo.prototype.setSupportsStatementsDownload });\n\t                    Element_add(InvestmentV1MessageSetInfo, { name: \"OODNLD\", required: true, order: 20, type: Boolean, read: InvestmentV1MessageSetInfo.prototype.getSupportsOpenOrdersDownload, write: InvestmentV1MessageSetInfo.prototype.setSupportsOpenOrdersDownload });\n\t                    Element_add(InvestmentV1MessageSetInfo, { name: \"POSDNLD\", required: true, order: 30, type: Boolean, read: InvestmentV1MessageSetInfo.prototype.getSupportsPositionsDownload, write: InvestmentV1MessageSetInfo.prototype.setSupportsPositionsDownload });\n\t                    Element_add(InvestmentV1MessageSetInfo, { name: \"BALDNLD\", required: true, order: 40, type: Boolean, read: InvestmentV1MessageSetInfo.prototype.getSupportsBalanceDownload, write: InvestmentV1MessageSetInfo.prototype.setSupportsBalanceDownload });\n\t                    Element_add(InvestmentV1MessageSetInfo, { name: \"CANEMAIL\", required: true, order: 50, type: Boolean, read: InvestmentV1MessageSetInfo.prototype.getSupportsEmail, write: InvestmentV1MessageSetInfo.prototype.setSupportsEmail });\n\t                    Element_add(InvestmentV1MessageSetInfo, { name: \"INV401KDNLD\", order: 60, type: Boolean, read: InvestmentV1MessageSetInfo.prototype.getSupports401kInformation, write: InvestmentV1MessageSetInfo.prototype.setSupports401kInformation });\n\t                    Element_add(InvestmentV1MessageSetInfo, { name: \"CLOSINGAVAIL\", order: 70, type: Boolean, read: InvestmentV1MessageSetInfo.prototype.getSupportsClosingStatements, write: InvestmentV1MessageSetInfo.prototype.setSupportsClosingStatements });\n\t                })(info = profile.info || (profile.info = {}));\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../profile/AbstractMessageSetInfo'/>\n\t///<reference path='InvestmentV1MessageSetInfo'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile) {\n\t                var info;\n\t                (function (info) {\n\t                    var AbstractMessageSetInfo = ofx4js.domain.data.profile.AbstractMessageSetInfo;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                    /**\n\t                     * @author Ryan Heaton\n\t                     */\n\t                    var InvestmentMessageSetInfo = (function (_super) {\n\t                        __extends(InvestmentMessageSetInfo, _super);\n\t                        function InvestmentMessageSetInfo() {\n\t                            _super.apply(this, arguments);\n\t                        }\n\t                        InvestmentMessageSetInfo.prototype.getVersion1Info = function () {\n\t                            return this.version1Info;\n\t                        };\n\t                        InvestmentMessageSetInfo.prototype.setVersion1Info = function (version1Info) {\n\t                            this.version1Info = version1Info;\n\t                        };\n\t                        return InvestmentMessageSetInfo;\n\t                    })(AbstractMessageSetInfo);\n\t                    info.InvestmentMessageSetInfo = InvestmentMessageSetInfo;\n\t                    Aggregate_add(InvestmentMessageSetInfo, \"INVSTMTMSGSET\");\n\t                    ChildAggregate_add(InvestmentMessageSetInfo, { order: 0, type: info.InvestmentV1MessageSetInfo, read: InvestmentMessageSetInfo.prototype.getVersion1Info, write: InvestmentMessageSetInfo.prototype.setVersion1Info });\n\t                })(info = profile.info || (profile.info = {}));\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../profile/VersionSpecificMessageSetInfo'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile) {\n\t                var info;\n\t                (function (info) {\n\t                    var VersionSpecificMessageSetInfo = ofx4js.domain.data.profile.VersionSpecificMessageSetInfo;\n\t                    var MessageSetType = ofx4js.domain.data.MessageSetType;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    /**\n\t                     * @author Ryan Heaton\n\t                     */\n\t                    var ProfileV1MessageSetInfo = (function (_super) {\n\t                        __extends(ProfileV1MessageSetInfo, _super);\n\t                        function ProfileV1MessageSetInfo() {\n\t                            _super.apply(this, arguments);\n\t                        }\n\t                        ProfileV1MessageSetInfo.prototype.getMessageSetType = function () {\n\t                            return MessageSetType.profile;\n\t                        };\n\t                        return ProfileV1MessageSetInfo;\n\t                    })(VersionSpecificMessageSetInfo);\n\t                    info.ProfileV1MessageSetInfo = ProfileV1MessageSetInfo;\n\t                    Aggregate_add(ProfileV1MessageSetInfo, \"PROFMSGSETV1\");\n\t                })(info = profile.info || (profile.info = {}));\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../profile/AbstractMessageSetInfo'/>\n\t///<reference path='ProfileV1MessageSetInfo'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile) {\n\t                var info;\n\t                (function (info) {\n\t                    var AbstractMessageSetInfo = ofx4js.domain.data.profile.AbstractMessageSetInfo;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                    /**\n\t                     * @author Ryan Heaton\n\t                     */\n\t                    var ProfileMessageSetInfo = (function (_super) {\n\t                        __extends(ProfileMessageSetInfo, _super);\n\t                        function ProfileMessageSetInfo() {\n\t                            _super.apply(this, arguments);\n\t                        }\n\t                        ProfileMessageSetInfo.prototype.getVersion1Info = function () {\n\t                            return this.version1Info;\n\t                        };\n\t                        ProfileMessageSetInfo.prototype.setVersion1Info = function (version1Info) {\n\t                            this.version1Info = version1Info;\n\t                        };\n\t                        return ProfileMessageSetInfo;\n\t                    })(AbstractMessageSetInfo);\n\t                    info.ProfileMessageSetInfo = ProfileMessageSetInfo;\n\t                    Aggregate_add(ProfileMessageSetInfo, \"PROFMSGSET\");\n\t                    ChildAggregate_add(ProfileMessageSetInfo, { order: 0, type: info.ProfileV1MessageSetInfo, read: ProfileMessageSetInfo.prototype.getVersion1Info, write: ProfileMessageSetInfo.prototype.setVersion1Info });\n\t                })(info = profile.info || (profile.info = {}));\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/Element_add'/>\n\t///<reference path='../../profile/VersionSpecificMessageSetInfo'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile) {\n\t                var info;\n\t                (function (info) {\n\t                    var VersionSpecificMessageSetInfo = ofx4js.domain.data.profile.VersionSpecificMessageSetInfo;\n\t                    var MessageSetType = ofx4js.domain.data.MessageSetType;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var Element_add = ofx4js.meta.Element_add;\n\t                    /**\n\t                     * @see \"Section 13.7.2.1, OFX Spec\"\n\t                     *\n\t                     * @author Jon Perlow\n\t                     * @author Ryan Heaton\n\t                     */\n\t                    var SecurityListV1MessageSetInfo = (function (_super) {\n\t                        __extends(SecurityListV1MessageSetInfo, _super);\n\t                        function SecurityListV1MessageSetInfo() {\n\t                            _super.apply(this, arguments);\n\t                        }\n\t                        SecurityListV1MessageSetInfo.prototype.getMessageSetType = function () {\n\t                            return MessageSetType.investment_security;\n\t                        };\n\t                        SecurityListV1MessageSetInfo.prototype.getSupportsSecurityListDownload = function () {\n\t                            return this.supportsSecurityListDownload;\n\t                        };\n\t                        SecurityListV1MessageSetInfo.prototype.setSupportsSecurityListDownload = function (supportsSecurityListDownload) {\n\t                            this.supportsSecurityListDownload = supportsSecurityListDownload;\n\t                        };\n\t                        return SecurityListV1MessageSetInfo;\n\t                    })(VersionSpecificMessageSetInfo);\n\t                    info.SecurityListV1MessageSetInfo = SecurityListV1MessageSetInfo;\n\t                    Aggregate_add(SecurityListV1MessageSetInfo, \"SECLISTMSGSETV1\");\n\t                    Element_add(SecurityListV1MessageSetInfo, { name: \"SECLISTRQDNLD\", required: true, order: 10, type: Boolean, read: SecurityListV1MessageSetInfo.prototype.getSupportsSecurityListDownload, write: SecurityListV1MessageSetInfo.prototype.setSupportsSecurityListDownload });\n\t                })(info = profile.info || (profile.info = {}));\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../profile/AbstractMessageSetInfo'/>\n\t///<reference path='SecurityListV1MessageSetInfo'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile) {\n\t                var info;\n\t                (function (info) {\n\t                    var AbstractMessageSetInfo = ofx4js.domain.data.profile.AbstractMessageSetInfo;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                    /**\n\t                     * @author Ryan Heaton\n\t                     */\n\t                    var SecurityListMessageSetInfo = (function (_super) {\n\t                        __extends(SecurityListMessageSetInfo, _super);\n\t                        function SecurityListMessageSetInfo() {\n\t                            _super.apply(this, arguments);\n\t                        }\n\t                        SecurityListMessageSetInfo.prototype.getVersion1Info = function () {\n\t                            return this.version1Info;\n\t                        };\n\t                        SecurityListMessageSetInfo.prototype.setVersion1Info = function (version1Info) {\n\t                            this.version1Info = version1Info;\n\t                        };\n\t                        return SecurityListMessageSetInfo;\n\t                    })(AbstractMessageSetInfo);\n\t                    info.SecurityListMessageSetInfo = SecurityListMessageSetInfo;\n\t                    Aggregate_add(SecurityListMessageSetInfo, \"SECLISTMSGSET\");\n\t                    ChildAggregate_add(SecurityListMessageSetInfo, { order: 0, type: info.SecurityListV1MessageSetInfo, read: SecurityListMessageSetInfo.prototype.getVersion1Info, write: SecurityListMessageSetInfo.prototype.setVersion1Info });\n\t                })(info = profile.info || (profile.info = {}));\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../profile/VersionSpecificMessageSetInfo'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile) {\n\t                var info;\n\t                (function (info) {\n\t                    var MessageSetType = ofx4js.domain.data.MessageSetType;\n\t                    var VersionSpecificMessageSetInfo = ofx4js.domain.data.profile.VersionSpecificMessageSetInfo;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    /**\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var SignOnV1MessageSetInfo = (function (_super) {\n\t                        __extends(SignOnV1MessageSetInfo, _super);\n\t                        function SignOnV1MessageSetInfo() {\n\t                            _super.apply(this, arguments);\n\t                        }\n\t                        SignOnV1MessageSetInfo.prototype.getMessageSetType = function () {\n\t                            return MessageSetType.signon;\n\t                        };\n\t                        return SignOnV1MessageSetInfo;\n\t                    })(VersionSpecificMessageSetInfo);\n\t                    info.SignOnV1MessageSetInfo = SignOnV1MessageSetInfo;\n\t                    Aggregate_add(SignOnV1MessageSetInfo, \"SIGNONMSGSETV1\");\n\t                })(info = profile.info || (profile.info = {}));\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../profile/AbstractMessageSetInfo'/>\n\t///<reference path='SignOnV1MessageSetInfo'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile) {\n\t                var info;\n\t                (function (info) {\n\t                    var AbstractMessageSetInfo = ofx4js.domain.data.profile.AbstractMessageSetInfo;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                    /**\n\t                     * @author Jon Perlow\n\t                     */\n\t                    var SignOnMessageSetInfo = (function (_super) {\n\t                        __extends(SignOnMessageSetInfo, _super);\n\t                        function SignOnMessageSetInfo() {\n\t                            _super.apply(this, arguments);\n\t                        }\n\t                        SignOnMessageSetInfo.prototype.getVersion1Info = function () {\n\t                            return this.version1Info;\n\t                        };\n\t                        SignOnMessageSetInfo.prototype.setVersion1Info = function (version1Info) {\n\t                            this.version1Info = version1Info;\n\t                        };\n\t                        return SignOnMessageSetInfo;\n\t                    })(AbstractMessageSetInfo);\n\t                    info.SignOnMessageSetInfo = SignOnMessageSetInfo;\n\t                    Aggregate_add(SignOnMessageSetInfo, \"SIGNONMSGSET\");\n\t                    ChildAggregate_add(SignOnMessageSetInfo, { order: 0, type: info.SignOnV1MessageSetInfo, read: SignOnMessageSetInfo.prototype.getVersion1Info, write: SignOnMessageSetInfo.prototype.setVersion1Info });\n\t                })(info = profile.info || (profile.info = {}));\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2012 TheStash\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../../meta/Element_add'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile) {\n\t                var info;\n\t                (function (info) {\n\t                    var signup;\n\t                    (function (signup) {\n\t                        var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                        var Element_add = ofx4js.meta.Element_add;\n\t                        /**\n\t                         * Client Enrollment option, contains indicator as to whether the account number is required as part of enrollment\n\t                         * @author Scott Priddy\n\t                         * @see \"Section 8.8 OFX Spec\"\n\t                         */\n\t                        var ClientEnrollment = (function () {\n\t                            function ClientEnrollment() {\n\t                            }\n\t                            /**\n\t                             * Y if account number is required as part of enrollment\n\t                             * @return Boolean\n\t                             */\n\t                            ClientEnrollment.prototype.getAccountRequired = function () {\n\t                                return this.accountRequired;\n\t                            };\n\t                            ClientEnrollment.prototype.setAccountRequired = function (accountRequired) {\n\t                                this.accountRequired = accountRequired;\n\t                            };\n\t                            return ClientEnrollment;\n\t                        })();\n\t                        signup.ClientEnrollment = ClientEnrollment;\n\t                        Aggregate_add(ClientEnrollment, \"CLIENTENROLL\");\n\t                        Element_add(ClientEnrollment, { name: \"ACCTREQUIRED\", required: true, order: 0, type: Boolean, read: ClientEnrollment.prototype.getAccountRequired, write: ClientEnrollment.prototype.setAccountRequired });\n\t                    })(signup = info.signup || (info.signup = {}));\n\t                })(info = profile.info || (profile.info = {}));\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2012 TheStash\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../../meta/Element_add'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile) {\n\t                var info;\n\t                (function (info) {\n\t                    var signup;\n\t                    (function (signup) {\n\t                        var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                        var Element_add = ofx4js.meta.Element_add;\n\t                        /**\n\t                         * Other Enrollment option containing a text message directing users to some other method (such as a phone call)\n\t                         * @author Scott Priddy\n\t                         * @see \"Section 8.8 OFX Spec\"\n\t                         */\n\t                        var OtherEnrollment = (function () {\n\t                            function OtherEnrollment() {\n\t                            }\n\t                            /**\n\t                             * Message to consumer about what to do next (for example, a phone number),\n\t                             * @return String\n\t                             */\n\t                            OtherEnrollment.prototype.getMessage = function () {\n\t                                return this.message;\n\t                            };\n\t                            OtherEnrollment.prototype.setMessage = function (message) {\n\t                                this.message = message;\n\t                            };\n\t                            return OtherEnrollment;\n\t                        })();\n\t                        signup.OtherEnrollment = OtherEnrollment;\n\t                        Aggregate_add(OtherEnrollment, \"OTHERENROLL\");\n\t                        Element_add(OtherEnrollment, { name: \"MESSAGE\", required: true, order: 0, type: String, read: OtherEnrollment.prototype.getMessage, write: OtherEnrollment.prototype.setMessage });\n\t                    })(signup = info.signup || (info.signup = {}));\n\t                })(info = profile.info || (profile.info = {}));\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2012 TheStash\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../../meta/Element_add'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile) {\n\t                var info;\n\t                (function (info) {\n\t                    var signup;\n\t                    (function (signup) {\n\t                        var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                        var Element_add = ofx4js.meta.Element_add;\n\t                        /**\n\t                         * Web Enrollment option containing URL to direct user for web based enrollment, if supported.\n\t                         * @author Scott Priddy\n\t                         * @see \"Section 8.8 OFX Spec\"\n\t                         */\n\t                        var WebEnrollment = (function () {\n\t                            function WebEnrollment() {\n\t                            }\n\t                            /**\n\t                             * URL to start enrollment process\n\t                             * @return String\n\t                             */\n\t                            WebEnrollment.prototype.getUrl = function () {\n\t                                return this.url;\n\t                            };\n\t                            WebEnrollment.prototype.setUrl = function (url) {\n\t                                this.url = url;\n\t                            };\n\t                            return WebEnrollment;\n\t                        })();\n\t                        signup.WebEnrollment = WebEnrollment;\n\t                        Aggregate_add(WebEnrollment, \"WEBENROLL\");\n\t                        Element_add(WebEnrollment, { name: \"URL\", required: true, order: 0, type: String, read: WebEnrollment.prototype.getUrl, write: WebEnrollment.prototype.setUrl });\n\t                    })(signup = info.signup || (info.signup = {}));\n\t                })(info = profile.info || (profile.info = {}));\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../../../meta/Element_add'/>\n\t///<reference path='../../profile/VersionSpecificMessageSetInfo'/>\n\t///<reference path='../../profile/info/signup/ClientEnrollment'/>\n\t///<reference path='../../profile/info/signup/OtherEnrollment'/>\n\t///<reference path='../../profile/info/signup/WebEnrollment'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile) {\n\t                var info;\n\t                (function (info) {\n\t                    var VersionSpecificMessageSetInfo = ofx4js.domain.data.profile.VersionSpecificMessageSetInfo;\n\t                    var MessageSetType = ofx4js.domain.data.MessageSetType;\n\t                    var ClientEnrollment = ofx4js.domain.data.profile.info.signup.ClientEnrollment;\n\t                    var OtherEnrollment = ofx4js.domain.data.profile.info.signup.OtherEnrollment;\n\t                    var WebEnrollment = ofx4js.domain.data.profile.info.signup.WebEnrollment;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                    var Element_add = ofx4js.meta.Element_add;\n\t                    /**\n\t                     * Servers use the Signup Message Set Profile Information to define how enrollment should proceed.\n\t                     *\n\t                     * This aggregate should contain 1 Enrollment option among <CLIENTENROLL>, <WEBENROLL>, or <OTHERENROLL>.\n\t                     * todo: review how best to enforce this constraint\n\t                     *\n\t                     * @author Scott Priddy\n\t                     * @author Ryan Heaton\n\t                     * @see \"Section 8.8 OFX Spec\"\n\t                     */\n\t                    var SignupV1MessageSetInfo = (function (_super) {\n\t                        __extends(SignupV1MessageSetInfo, _super);\n\t                        function SignupV1MessageSetInfo() {\n\t                            _super.apply(this, arguments);\n\t                        }\n\t                        SignupV1MessageSetInfo.prototype.getMessageSetType = function () {\n\t                            return MessageSetType.signup;\n\t                        };\n\t                        SignupV1MessageSetInfo.prototype.getClientEnrollment = function () {\n\t                            return this.clientEnrollment;\n\t                        };\n\t                        SignupV1MessageSetInfo.prototype.setClientEnrollment = function (clientEnrollment) {\n\t                            this.clientEnrollment = clientEnrollment;\n\t                        };\n\t                        SignupV1MessageSetInfo.prototype.getWebEnrollment = function () {\n\t                            return this.webEnrollment;\n\t                        };\n\t                        SignupV1MessageSetInfo.prototype.setWebEnrollment = function (webEnrollment) {\n\t                            this.webEnrollment = webEnrollment;\n\t                        };\n\t                        SignupV1MessageSetInfo.prototype.getOtherEnrollment = function () {\n\t                            return this.otherEnrollment;\n\t                        };\n\t                        SignupV1MessageSetInfo.prototype.setOtherEnrollment = function (otherEnrollment) {\n\t                            this.otherEnrollment = otherEnrollment;\n\t                        };\n\t                        /**\n\t                         * Y if server supports client-based user information changes,\n\t                         * @return Boolean\n\t                         */\n\t                        SignupV1MessageSetInfo.prototype.getSupportsClientUserInfoChanges = function () {\n\t                            return this.supportsClientUserInfoChanges;\n\t                        };\n\t                        SignupV1MessageSetInfo.prototype.setSupportsClientUserInfoChanges = function (supportsClientUserInfoChanges) {\n\t                            this.supportsClientUserInfoChanges = supportsClientUserInfoChanges;\n\t                        };\n\t                        /**\n\t                         * Y if server can provide information on accounts with SVCSTATUS available,\n\t                         * N means client should expect to ask user for specific account information\n\t                         * @return Boolean\n\t                         */\n\t                        SignupV1MessageSetInfo.prototype.getSupportsAvailableAccounts = function () {\n\t                            return this.supportsAvailableAccounts;\n\t                        };\n\t                        SignupV1MessageSetInfo.prototype.setSupportsAvailableAccounts = function (supportsAvailableAccounts) {\n\t                            this.supportsAvailableAccounts = supportsAvailableAccounts;\n\t                        };\n\t                        /**\n\t                         * Y if server allows clients to make service activation requests (<ACCTRQ>),\n\t                         * N if server will only advise clients via synchronization of service additions,\n\t                         * changes, or deletions.\n\t                         * @return Boolean\n\t                         */\n\t                        SignupV1MessageSetInfo.prototype.getSupportsClientServiceActivationRequests = function () {\n\t                            return this.supportsClientServiceActivationRequests;\n\t                        };\n\t                        SignupV1MessageSetInfo.prototype.setSupportsClientServiceActivationRequests = function (supportsClientServiceActivationRequests) {\n\t                            this.supportsClientServiceActivationRequests = supportsClientServiceActivationRequests;\n\t                        };\n\t                        return SignupV1MessageSetInfo;\n\t                    })(VersionSpecificMessageSetInfo);\n\t                    info.SignupV1MessageSetInfo = SignupV1MessageSetInfo;\n\t                    Aggregate_add(SignupV1MessageSetInfo, \"SIGNUPMSGSETV1\");\n\t                    ChildAggregate_add(SignupV1MessageSetInfo, { name: \"CLIENTENROLL\", order: 10, type: ClientEnrollment, read: SignupV1MessageSetInfo.prototype.getClientEnrollment, write: SignupV1MessageSetInfo.prototype.setClientEnrollment });\n\t                    ChildAggregate_add(SignupV1MessageSetInfo, { name: \"WEBENROLL\", order: 20, type: WebEnrollment, read: SignupV1MessageSetInfo.prototype.getWebEnrollment, write: SignupV1MessageSetInfo.prototype.setWebEnrollment });\n\t                    ChildAggregate_add(SignupV1MessageSetInfo, { name: \"OTHERENROLL\", order: 30, type: OtherEnrollment, read: SignupV1MessageSetInfo.prototype.getOtherEnrollment, write: SignupV1MessageSetInfo.prototype.setOtherEnrollment });\n\t                    Element_add(SignupV1MessageSetInfo, { name: \"CHGUSERINFO\", required: true, order: 40, type: Boolean, read: SignupV1MessageSetInfo.prototype.getSupportsClientUserInfoChanges, write: SignupV1MessageSetInfo.prototype.setSupportsClientUserInfoChanges });\n\t                    Element_add(SignupV1MessageSetInfo, { name: \"AVAILACCTS\", required: true, order: 50, type: Boolean, read: SignupV1MessageSetInfo.prototype.getSupportsAvailableAccounts, write: SignupV1MessageSetInfo.prototype.setSupportsAvailableAccounts });\n\t                    Element_add(SignupV1MessageSetInfo, { name: \"CLIENTACTREQ\", required: true, order: 60, type: Boolean, read: SignupV1MessageSetInfo.prototype.getSupportsClientServiceActivationRequests, write: SignupV1MessageSetInfo.prototype.setSupportsClientServiceActivationRequests });\n\t                })(info = profile.info || (profile.info = {}));\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../profile/AbstractMessageSetInfo'/>\n\t///<reference path='SignupV1MessageSetInfo'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile) {\n\t                var info;\n\t                (function (info) {\n\t                    var AbstractMessageSetInfo = ofx4js.domain.data.profile.AbstractMessageSetInfo;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                    /**\n\t                     * @author Ryan Heaton\n\t                     */\n\t                    var SignupMessageSetInfo = (function (_super) {\n\t                        __extends(SignupMessageSetInfo, _super);\n\t                        function SignupMessageSetInfo() {\n\t                            _super.apply(this, arguments);\n\t                        }\n\t                        SignupMessageSetInfo.prototype.getVersion1Info = function () {\n\t                            return this.version1Info;\n\t                        };\n\t                        SignupMessageSetInfo.prototype.setVersion1Info = function (version1Info) {\n\t                            this.version1Info = version1Info;\n\t                        };\n\t                        return SignupMessageSetInfo;\n\t                    })(AbstractMessageSetInfo);\n\t                    info.SignupMessageSetInfo = SignupMessageSetInfo;\n\t                    Aggregate_add(SignupMessageSetInfo, \"SIGNUPMSGSET\");\n\t                    ChildAggregate_add(SignupMessageSetInfo, { order: 0, type: info.SignupV1MessageSetInfo, read: SignupMessageSetInfo.prototype.getVersion1Info, write: SignupMessageSetInfo.prototype.setVersion1Info });\n\t                })(info = profile.info || (profile.info = {}));\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/Element_add'/>\n\t///<reference path='../../common/ProcessorDayOff'/>\n\t///<reference path='../../profile/VersionSpecificMessageSetInfo'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile) {\n\t                var info;\n\t                (function (info) {\n\t                    var ProcessorDayOff = ofx4js.domain.data.common.ProcessorDayOff;\n\t                    var VersionSpecificMessageSetInfo = ofx4js.domain.data.profile.VersionSpecificMessageSetInfo;\n\t                    var MessageSetType = ofx4js.domain.data.MessageSetType;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var Element_add = ofx4js.meta.Element_add;\n\t                    /**\n\t                     * Wire Transfer Message Set Profile\n\t                     * @author Scott Priddy\n\t                     * @author Ryan Heaton\n\t                     * @see \"Section 11.13.5 OFX Spec\"\n\t                     */\n\t                    var WireTransferV1MessageSetInfo = (function (_super) {\n\t                        __extends(WireTransferV1MessageSetInfo, _super);\n\t                        function WireTransferV1MessageSetInfo() {\n\t                            _super.apply(this, arguments);\n\t                        }\n\t                        WireTransferV1MessageSetInfo.prototype.getMessageSetType = function () {\n\t                            return MessageSetType.wire_transfer;\n\t                        };\n\t                        WireTransferV1MessageSetInfo.prototype.getProcessorDaysOff = function () {\n\t                            return this.processorDaysOff;\n\t                        };\n\t                        WireTransferV1MessageSetInfo.prototype.setProcessorDaysOff = function (processorDaysOff) {\n\t                            this.processorDaysOff = processorDaysOff;\n\t                        };\n\t                        WireTransferV1MessageSetInfo.prototype.getProcessEndTime = function () {\n\t                            return this.processEndTime;\n\t                        };\n\t                        WireTransferV1MessageSetInfo.prototype.setProcessEndTime = function (processEndTime) {\n\t                            this.processEndTime = processEndTime;\n\t                        };\n\t                        WireTransferV1MessageSetInfo.prototype.getSupportsScheduledTransfers = function () {\n\t                            return this.supportsScheduledTransfers;\n\t                        };\n\t                        WireTransferV1MessageSetInfo.prototype.setSupportsScheduledTransfers = function (supportsScheduledTransfers) {\n\t                            this.supportsScheduledTransfers = supportsScheduledTransfers;\n\t                        };\n\t                        WireTransferV1MessageSetInfo.prototype.getDomesticWireTransferFee = function () {\n\t                            return this.domesticWireTransferFee;\n\t                        };\n\t                        WireTransferV1MessageSetInfo.prototype.setDomesticWireTransferFee = function (domesticWireTransferFee) {\n\t                            this.domesticWireTransferFee = domesticWireTransferFee;\n\t                        };\n\t                        WireTransferV1MessageSetInfo.prototype.getInternationalWireTransferFee = function () {\n\t                            return this.internationalWireTransferFee;\n\t                        };\n\t                        WireTransferV1MessageSetInfo.prototype.setInternationalWireTransferFee = function (internationalWireTransferFee) {\n\t                            this.internationalWireTransferFee = internationalWireTransferFee;\n\t                        };\n\t                        return WireTransferV1MessageSetInfo;\n\t                    })(VersionSpecificMessageSetInfo);\n\t                    info.WireTransferV1MessageSetInfo = WireTransferV1MessageSetInfo;\n\t                    Aggregate_add(WireTransferV1MessageSetInfo, \"WIREXFERMSGSETV1\");\n\t                    Element_add(WireTransferV1MessageSetInfo, { name: \"PROCDAYSOFF\", order: 10, type: Array, collectionEntryType: ProcessorDayOff, read: WireTransferV1MessageSetInfo.prototype.getProcessorDaysOff, write: WireTransferV1MessageSetInfo.prototype.setProcessorDaysOff });\n\t                    Element_add(WireTransferV1MessageSetInfo, { name: \"PROCENDTM\", required: true, order: 20, type: String, read: WireTransferV1MessageSetInfo.prototype.getProcessEndTime, write: WireTransferV1MessageSetInfo.prototype.setProcessEndTime });\n\t                    Element_add(WireTransferV1MessageSetInfo, { name: \"CANSCHED\", required: true, order: 30, type: Boolean, read: WireTransferV1MessageSetInfo.prototype.getSupportsScheduledTransfers, write: WireTransferV1MessageSetInfo.prototype.setSupportsScheduledTransfers });\n\t                    Element_add(WireTransferV1MessageSetInfo, { name: \"DOMXFERFEE\", required: true, order: 40, type: Number, read: WireTransferV1MessageSetInfo.prototype.getDomesticWireTransferFee, write: WireTransferV1MessageSetInfo.prototype.setDomesticWireTransferFee });\n\t                    Element_add(WireTransferV1MessageSetInfo, { name: \"INTLXFERFEE\", required: true, order: 50, type: Number, read: WireTransferV1MessageSetInfo.prototype.getInternationalWireTransferFee, write: WireTransferV1MessageSetInfo.prototype.setInternationalWireTransferFee });\n\t                })(info = profile.info || (profile.info = {}));\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../../meta/Aggregate_add'/>\n\t///<reference path='../../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../profile/AbstractMessageSetInfo'/>\n\t///<reference path='WireTransferV1MessageSetInfo'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var profile;\n\t            (function (profile) {\n\t                var info;\n\t                (function (info) {\n\t                    var AbstractMessageSetInfo = ofx4js.domain.data.profile.AbstractMessageSetInfo;\n\t                    var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                    var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                    /**\n\t                     * @author Ryan Heaton\n\t                     */\n\t                    var WireTransferMessageSetInfo = (function (_super) {\n\t                        __extends(WireTransferMessageSetInfo, _super);\n\t                        function WireTransferMessageSetInfo() {\n\t                            _super.apply(this, arguments);\n\t                        }\n\t                        WireTransferMessageSetInfo.prototype.getVersion1Info = function () {\n\t                            return this.version1Info;\n\t                        };\n\t                        WireTransferMessageSetInfo.prototype.setVersion1Info = function (version1Info) {\n\t                            this.version1Info = version1Info;\n\t                        };\n\t                        return WireTransferMessageSetInfo;\n\t                    })(AbstractMessageSetInfo);\n\t                    info.WireTransferMessageSetInfo = WireTransferMessageSetInfo;\n\t                    Aggregate_add(WireTransferMessageSetInfo, \"WIREXFERMSGSET\");\n\t                    ChildAggregate_add(WireTransferMessageSetInfo, { order: 0, type: info.WireTransferV1MessageSetInfo, read: WireTransferMessageSetInfo.prototype.getVersion1Info, write: WireTransferMessageSetInfo.prototype.setVersion1Info });\n\t                })(info = profile.info || (profile.info = {}));\n\t            })(profile = data.profile || (data.profile = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var seclist;\n\t            (function (seclist) {\n\t                /**\n\t                 * Asset class for debt.\n\t                 * @see \"Section 13.8.5.7, OFX Spec\"\n\t                 *\n\t                 * @author Jon Perlow\n\t                 */\n\t                (function (AssetClass) {\n\t                    /**\n\t                     * Government or corporate bonds issued in the United States.\n\t                     */\n\t                    AssetClass[AssetClass[\"DOMESTIC_BOND\"] = 0] = \"DOMESTIC_BOND\";\n\t                    /**\n\t                     * Government or corporate bonds issued in foreign countries or the United States.\n\t                     */\n\t                    AssetClass[AssetClass[\"INTL_BOND\"] = 1] = \"INTL_BOND\";\n\t                    /**\n\t                     * Stocks for US companies with market caps of $2B or more.\n\t                     */\n\t                    AssetClass[AssetClass[\"LARGE_STOCK\"] = 2] = \"LARGE_STOCK\";\n\t                    /**\n\t                     * Stocks for US companies with market caps of ~$100M to $2B.\n\t                     */\n\t                    AssetClass[AssetClass[\"SMALL_STOCK\"] = 3] = \"SMALL_STOCK\";\n\t                    /**\n\t                     * Publicallt traded stocks for companies based in foreign countries.\n\t                     */\n\t                    AssetClass[AssetClass[\"INTL_STOCK\"] = 4] = \"INTL_STOCK\";\n\t                    /**\n\t                     * Stable, short-term investments which provide income that rises and falls with short-term\n\t                     * interest rates.\n\t                     */\n\t                    AssetClass[AssetClass[\"MONEY_MARKET\"] = 5] = \"MONEY_MARKET\";\n\t                    /**\n\t                     * Investments which do not fit into any of the other types.\n\t                     */\n\t                    AssetClass[AssetClass[\"OTHER\"] = 6] = \"OTHER\";\n\t                })(seclist.AssetClass || (seclist.AssetClass = {}));\n\t                var AssetClass = seclist.AssetClass;\n\t                function AssetClass_fromOfx(ofxVal) {\n\t                    if (\"DOMESTICBOND\" === ofxVal) {\n\t                        return AssetClass.DOMESTIC_BOND;\n\t                    }\n\t                    else if (\"INTLBOND\" === ofxVal) {\n\t                        return AssetClass.INTL_BOND;\n\t                    }\n\t                    else if (\"LARGESTOCK\" === ofxVal) {\n\t                        return AssetClass.LARGE_STOCK;\n\t                    }\n\t                    else if (\"SMALLSTOCK\" === ofxVal) {\n\t                        return AssetClass.SMALL_STOCK;\n\t                    }\n\t                    else if (\"INTLSTOCK\" === ofxVal) {\n\t                        return AssetClass.INTL_STOCK;\n\t                    }\n\t                    else if (\"MONEYMARKET\" === ofxVal) {\n\t                        return AssetClass.MONEY_MARKET;\n\t                    }\n\t                    else if (\"OTHER\" === ofxVal) {\n\t                        return AssetClass.OTHER;\n\t                    }\n\t                    else {\n\t                        return null;\n\t                    }\n\t                }\n\t                seclist.AssetClass_fromOfx = AssetClass_fromOfx;\n\t            })(seclist = data.seclist || (data.seclist = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var seclist;\n\t            (function (seclist) {\n\t                /**\n\t                 * Call type for debt.\n\t                 * @see \"Section 13.8.5.2, OFX Spec\"\n\t                 *\n\t                 * @author Jon Perlow\n\t                 */\n\t                (function (CallType) {\n\t                    CallType[CallType[\"CALL\"] = 0] = \"CALL\";\n\t                    CallType[CallType[\"PUT\"] = 1] = \"PUT\";\n\t                    CallType[CallType[\"PREFUND\"] = 2] = \"PREFUND\";\n\t                    CallType[CallType[\"MATURITY\"] = 3] = \"MATURITY\";\n\t                })(seclist.CallType || (seclist.CallType = {}));\n\t                var CallType = seclist.CallType;\n\t                function CallType_fromOfx(ofxVal) {\n\t                    if (\"CALL\" === ofxVal) {\n\t                        return CallType.CALL;\n\t                    }\n\t                    else if (\"PUT\" === ofxVal) {\n\t                        return CallType.PUT;\n\t                    }\n\t                    else if (\"PREFUND\" === ofxVal) {\n\t                        return CallType.PREFUND;\n\t                    }\n\t                    else if (\"MATURITY\" === ofxVal) {\n\t                        return CallType.MATURITY;\n\t                    }\n\t                    else {\n\t                        return null;\n\t                    }\n\t                }\n\t                seclist.CallType_fromOfx = CallType_fromOfx;\n\t            })(seclist = data.seclist || (data.seclist = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var seclist;\n\t            (function (seclist) {\n\t                /**\n\t                 * Coupon freqency for debt.\n\t                 * @see \"Section 13.8.5.2, OFX Spec\"\n\t                 *\n\t                 * @author Jon Perlow\n\t                 */\n\t                (function (CouponFrequency) {\n\t                    CouponFrequency[CouponFrequency[\"MONTHLY\"] = 0] = \"MONTHLY\";\n\t                    CouponFrequency[CouponFrequency[\"QUARTERLY\"] = 1] = \"QUARTERLY\";\n\t                    CouponFrequency[CouponFrequency[\"SEMIANNUAL\"] = 2] = \"SEMIANNUAL\";\n\t                    CouponFrequency[CouponFrequency[\"ANNUAL\"] = 3] = \"ANNUAL\";\n\t                    CouponFrequency[CouponFrequency[\"OTHER\"] = 4] = \"OTHER\";\n\t                })(seclist.CouponFrequency || (seclist.CouponFrequency = {}));\n\t                var CouponFrequency = seclist.CouponFrequency;\n\t                function CouponFrequency_fromOfx(ofxVal) {\n\t                    if (\"MONTHLY\" === ofxVal) {\n\t                        return CouponFrequency.MONTHLY;\n\t                    }\n\t                    else if (\"QUARTERLY\" === ofxVal) {\n\t                        return CouponFrequency.QUARTERLY;\n\t                    }\n\t                    else if (\"SEMIANNUAL\" === ofxVal) {\n\t                        return CouponFrequency.SEMIANNUAL;\n\t                    }\n\t                    else if (\"ANNUAL\" === ofxVal) {\n\t                        return CouponFrequency.ANNUAL;\n\t                    }\n\t                    else if (\"OTHER\" === ofxVal) {\n\t                        return CouponFrequency.OTHER;\n\t                    }\n\t                    else {\n\t                        return null;\n\t                    }\n\t                }\n\t                seclist.CouponFrequency_fromOfx = CouponFrequency_fromOfx;\n\t            })(seclist = data.seclist || (data.seclist = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var seclist;\n\t            (function (seclist) {\n\t                /**\n\t                 * The class of debt.\n\t                 * @see \"Section 13.8.5.2, OFX Spec\"\n\t                 *\n\t                 * @author Jon Perlow\n\t                 */\n\t                (function (DebtClass) {\n\t                    DebtClass[DebtClass[\"TREASURY\"] = 0] = \"TREASURY\";\n\t                    DebtClass[DebtClass[\"MUNICIPAL\"] = 1] = \"MUNICIPAL\";\n\t                    DebtClass[DebtClass[\"CORPORATE\"] = 2] = \"CORPORATE\";\n\t                    DebtClass[DebtClass[\"OTHER\"] = 3] = \"OTHER\";\n\t                })(seclist.DebtClass || (seclist.DebtClass = {}));\n\t                var DebtClass = seclist.DebtClass;\n\t                function DebtClass_fromOfx(ofxVal) {\n\t                    if (\"TREASURY\" === ofxVal) {\n\t                        return DebtClass.TREASURY;\n\t                    }\n\t                    else if (\"MUNICIPAL\" === ofxVal) {\n\t                        return DebtClass.MUNICIPAL;\n\t                    }\n\t                    else if (\"CORPORATE\" === ofxVal) {\n\t                        return DebtClass.CORPORATE;\n\t                    }\n\t                    else if (\"OTHER\" === ofxVal) {\n\t                        return DebtClass.OTHER;\n\t                    }\n\t                    else {\n\t                        return null;\n\t                    }\n\t                }\n\t                seclist.DebtClass_fromOfx = DebtClass_fromOfx;\n\t            })(seclist = data.seclist || (data.seclist = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var seclist;\n\t            (function (seclist) {\n\t                /**\n\t                 * The type of debt.\n\t                 * @see \"Section 13.8.5.2, OFX Spec\"\n\t                 *\n\t                 * @author Jon Perlow\n\t                 */\n\t                (function (DebtType) {\n\t                    DebtType[DebtType[\"COUPON\"] = 0] = \"COUPON\";\n\t                    DebtType[DebtType[\"ZERO\"] = 1] = \"ZERO\";\n\t                })(seclist.DebtType || (seclist.DebtType = {}));\n\t                var DebtType = seclist.DebtType;\n\t                function DebtType_fromOfx(ofxVal) {\n\t                    if (\"COUPON\" === ofxVal) {\n\t                        return DebtType.COUPON;\n\t                    }\n\t                    else if (\"ZERO\" === ofxVal) {\n\t                        return DebtType.ZERO;\n\t                    }\n\t                    else {\n\t                        return null;\n\t                    }\n\t                }\n\t                seclist.DebtType_fromOfx = DebtType_fromOfx;\n\t            })(seclist = data.seclist || (data.seclist = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\t///<reference path='BaseSecurityInfo'/>\n\t///<reference path='DebtType'/>\n\t///<reference path='DebtClass'/>\n\t///<reference path='CouponFrequency'/>\n\t///<reference path='CallType'/>\n\t///<reference path='AssetClass'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var seclist;\n\t            (function (seclist) {\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                /**\n\t                 * Info about a debt security.\n\t                 * @see \"Section 13.8.5.2, OFX Spec\"\n\t                 *\n\t                 * @author Jon Perlow\n\t                 */\n\t                var DebtSecurityInfo = (function (_super) {\n\t                    __extends(DebtSecurityInfo, _super);\n\t                    function DebtSecurityInfo() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    /**\n\t                     * Gets the par value of the debt. This is a required field according to the OFX spec.\n\t                     *\n\t                     * @return the par value of the debt\n\t                     */\n\t                    DebtSecurityInfo.prototype.getParValue = function () {\n\t                        return this.parValue;\n\t                    };\n\t                    /**\n\t                     * Sets the par value of the debt. This is a required field according to the OFX spec.\n\t                     *\n\t                     * @param parValue the par value of the debt\n\t                     */\n\t                    DebtSecurityInfo.prototype.setParValue = function (parValue) {\n\t                        this.parValue = parValue;\n\t                    };\n\t                    /**\n\t                     * Gets the type of debt. One of \"COUPON\" or \"ZERO\". This is a required field according to the\n\t                     * OFX spec.\n\t                     *\n\t                     * @return the type of debt\n\t                     */\n\t                    DebtSecurityInfo.prototype.getDebtType = function () {\n\t                        return this.debtType;\n\t                    };\n\t                    /**\n\t                     * Sets the type of debt. One of \"COUPON\" or \"ZERO\". This is a required field according to the\n\t                     * OFX spec.\n\t                     *\n\t                     * @param debtType the type of debt\n\t                     */\n\t                    DebtSecurityInfo.prototype.setDebtType = function (debtType) {\n\t                        this.debtType = debtType;\n\t                    };\n\t                    /**\n\t                     * Gets the type of debt as one of the well-known types.\n\t                     *\n\t                     * @return the type of debt or null if it's not one of the well-known types\n\t                     */\n\t                    DebtSecurityInfo.prototype.getDebtTypeEnum = function () {\n\t                        return seclist.DebtType_fromOfx(this.getDebtType());\n\t                    };\n\t                    /**\n\t                     * Gets the class of debt. One of \"TREASURY\", \"MUNICIPAL\", \"CORPORATE\", or \"OTHER\".\n\t                     * This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @return the class of debt\n\t                     */\n\t                    DebtSecurityInfo.prototype.getDebtClass = function () {\n\t                        return this.debtClass;\n\t                    };\n\t                    /**\n\t                     * Sets the class of debt. One of \"TREASURY\", \"MUNICIPAL\", \"CORPORATE\", or \"OTHER\".\n\t                     * This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @param debtClass the class of debt\n\t                     */\n\t                    DebtSecurityInfo.prototype.setDebtClass = function (debtClass) {\n\t                        this.debtClass = debtClass;\n\t                    };\n\t                    /**\n\t                     * Gets the class of debt as one of the well-known types.\n\t                     *\n\t                     * @return the class of debt or null if it's not one of the well-known types\n\t                     */\n\t                    DebtSecurityInfo.prototype.getDebtClassEnum = function () {\n\t                        return seclist.DebtClass_fromOfx(this.debtClass);\n\t                    };\n\t                    /**\n\t                     * Gets the coupon rate of the debt for the next closest call date.\n\t                     * This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @return the coupon rate\n\t                     */\n\t                    DebtSecurityInfo.prototype.getCouponRate = function () {\n\t                        return this.couponRate;\n\t                    };\n\t                    /**\n\t                     * Sets the coupon rate of the debt for the next closest call date.\n\t                     * This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @param couponRate the coupon rate\n\t                     */\n\t                    DebtSecurityInfo.prototype.setCouponRate = function (couponRate) {\n\t                        this.couponRate = couponRate;\n\t                    };\n\t                    /**\n\t                     * Gets the next maturity date for the next coupon.\n\t                     * This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @return the maturity date for the next coupon\n\t                     */\n\t                    DebtSecurityInfo.prototype.getNextMaturityDate = function () {\n\t                        return this.nextMaturityDate;\n\t                    };\n\t                    /**\n\t                     * Sets the next maturity date for the next coupon.\n\t                     * This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @param nextMaturityDate the maturity date for the next coupon.\n\t                     */\n\t                    DebtSecurityInfo.prototype.setNextMaturityDate = function (nextMaturityDate) {\n\t                        this.nextMaturityDate = nextMaturityDate;\n\t                    };\n\t                    /**\n\t                     * Gets the coupon frequency. One of \"MONTHLY\", \"QUARTERLY\", \"SEMIANNUAL\", \"ANNUAL\", or \"OTHER\".\n\t                     * This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @return the coupon frequency\n\t                     */\n\t                    DebtSecurityInfo.prototype.getCouponFrequency = function () {\n\t                        return this.couponFrequency;\n\t                    };\n\t                    /**\n\t                     * Sets the coupon frequency. One of \"MONTHLY\", \"QUARTERLY\", \"SEMIANNUAL\", \"ANNUAL\", or \"OTHER\".\n\t                     * This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @param couponFrequency the coupon frequency\n\t                     */\n\t                    DebtSecurityInfo.prototype.setCouponFrequency = function (couponFrequency) {\n\t                        this.couponFrequency = couponFrequency;\n\t                    };\n\t                    /**\n\t                     * Gets the coupon frequency as one of the well-known types.\n\t                     *\n\t                     * @return the coupon frequency or null if it's not one of the well-known types\n\t                     */\n\t                    DebtSecurityInfo.prototype.getCouponFrequencyEnum = function () {\n\t                        return seclist.CouponFrequency_fromOfx(this.getCouponFrequency());\n\t                    };\n\t                    /**\n\t                     * Gets the bond price. This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @return the bond price\n\t                     */\n\t                    DebtSecurityInfo.prototype.getCallPrice = function () {\n\t                        return this.callPrice;\n\t                    };\n\t                    /**\n\t                     * Sets the bond price. This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @param callPrice the bond price\n\t                     */\n\t                    DebtSecurityInfo.prototype.setCallPrice = function (callPrice) {\n\t                        this.callPrice = callPrice;\n\t                    };\n\t                    /**\n\t                     * Gets the yield to call as a rate. This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @return the yield to call rate\n\t                     */\n\t                    DebtSecurityInfo.prototype.getYieldToCall = function () {\n\t                        return this.yieldToCall;\n\t                    };\n\t                    /**\n\t                     * Sets the yield to call as a rate. This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @param yieldToCall the yield to call rate\n\t                     */\n\t                    DebtSecurityInfo.prototype.setYieldToCall = function (yieldToCall) {\n\t                        this.yieldToCall = yieldToCall;\n\t                    };\n\t                    /**\n\t                     * Gets the next call date. This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @return the next call date.\n\t                     */\n\t                    DebtSecurityInfo.prototype.getNextCallDate = function () {\n\t                        return this.nextCallDate;\n\t                    };\n\t                    /**\n\t                     * Sets the next call date. This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @param nextCallDate the next call date.\n\t                     */\n\t                    DebtSecurityInfo.prototype.setNextCallDate = function (nextCallDate) {\n\t                        this.nextCallDate = nextCallDate;\n\t                    };\n\t                    /**\n\t                     * Gets the type of call.\n\t                     *\n\t                     * @return the type of call\n\t                     */\n\t                    DebtSecurityInfo.prototype.getCallType = function () {\n\t                        return this.callType;\n\t                    };\n\t                    /**\n\t                     * Sets the type of call.\n\t                     *\n\t                     * @param callType the type of call\n\t                     */\n\t                    DebtSecurityInfo.prototype.setCallType = function (callType) {\n\t                        this.callType = callType;\n\t                    };\n\t                    /**\n\t                     * Gets the type of call as one of the well-known types.\n\t                     *\n\t                     * @return the type of call or null if it's not one of the well-known types\n\t                     */\n\t                    DebtSecurityInfo.prototype.getCallTypeEnum = function () {\n\t                        return seclist.CallType_fromOfx(this.getCallType());\n\t                    };\n\t                    /**\n\t                     * Gets the yield to maturity as a rate. This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @return the yield to call rate\n\t                     */\n\t                    DebtSecurityInfo.prototype.getYieldToMaturity = function () {\n\t                        return this.yieldToMaturity;\n\t                    };\n\t                    /**\n\t                     * Sets the yield to maturity as a rate. This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @param yieldToMaturity the yield to call rate\n\t                     */\n\t                    DebtSecurityInfo.prototype.setYieldToMaturity = function (yieldToMaturity) {\n\t                        this.yieldToMaturity = yieldToMaturity;\n\t                    };\n\t                    /**\n\t                     * Gets the date when the debt matures. This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @return the date when the debt matures\n\t                     */\n\t                    DebtSecurityInfo.prototype.getDebtMaturityDate = function () {\n\t                        return this.debtMaturityDate;\n\t                    };\n\t                    /**\n\t                     * Sets the date when the debt matures. This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @param debtMaturityDate the date when the debt matures\n\t                     */\n\t                    DebtSecurityInfo.prototype.setDebtMaturityDate = function (debtMaturityDate) {\n\t                        this.debtMaturityDate = debtMaturityDate;\n\t                    };\n\t                    /**\n\t                     * Gets the asset class of the debt. This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @return the asset class of the debt\n\t                     */\n\t                    DebtSecurityInfo.prototype.getAssetClass = function () {\n\t                        return this.assetClass;\n\t                    };\n\t                    /**\n\t                     * Sets the asset class of the debt. This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @param assetClass the asset class of the debt\n\t                     */\n\t                    DebtSecurityInfo.prototype.setAssetClass = function (assetClass) {\n\t                        this.assetClass = assetClass;\n\t                    };\n\t                    /**\n\t                     * Gets the assert class as one of the well-known types.\n\t                     *\n\t                     * @return the asset class or null if it's not one of the well-known types\n\t                     */\n\t                    DebtSecurityInfo.prototype.getAssetClassEnum = function () {\n\t                        return seclist.AssetClass_fromOfx(this.getAssetClass());\n\t                    };\n\t                    /**\n\t                     * Gets the FI-defined asset class of the debt. This is an optional field according to the OFX\n\t                     * spec.\n\t                     *\n\t                     * @return the FI-defined asset class of the debt\n\t                     */\n\t                    DebtSecurityInfo.prototype.getFiAssetClass = function () {\n\t                        return this.fiAssetClass;\n\t                    };\n\t                    /**\n\t                     * Sets the FI-defined asset class of the debt. This is an optional field according to the OFX\n\t                     * spec.\n\t                     *\n\t                     * @param fiAssetClass the FI-defined asset class of the debt\n\t                     */\n\t                    DebtSecurityInfo.prototype.setFiAssetClass = function (fiAssetClass) {\n\t                        this.fiAssetClass = fiAssetClass;\n\t                    };\n\t                    return DebtSecurityInfo;\n\t                })(seclist.BaseSecurityInfo);\n\t                seclist.DebtSecurityInfo = DebtSecurityInfo;\n\t                Aggregate_add(DebtSecurityInfo, \"DEBTINFO\");\n\t                Element_add(DebtSecurityInfo, { name: \"PARVALUE\", required: true, order: 20, type: Number, read: DebtSecurityInfo.prototype.getParValue, write: DebtSecurityInfo.prototype.setParValue });\n\t                Element_add(DebtSecurityInfo, { name: \"DEBTTYPE\", required: true, order: 30, type: String, read: DebtSecurityInfo.prototype.getDebtType, write: DebtSecurityInfo.prototype.setDebtType });\n\t                Element_add(DebtSecurityInfo, { name: \"DEBTCLASS\", order: 40, type: String, read: DebtSecurityInfo.prototype.getDebtClass, write: DebtSecurityInfo.prototype.setDebtClass });\n\t                Element_add(DebtSecurityInfo, { name: \"COUPONRT\", order: 50, type: Number, read: DebtSecurityInfo.prototype.getCouponRate, write: DebtSecurityInfo.prototype.setCouponRate });\n\t                Element_add(DebtSecurityInfo, { name: \"DTCOUPON\", order: 60, type: Date, read: DebtSecurityInfo.prototype.getNextMaturityDate, write: DebtSecurityInfo.prototype.setNextMaturityDate });\n\t                Element_add(DebtSecurityInfo, { name: \"COUPONFREQ\", order: 70, type: String, read: DebtSecurityInfo.prototype.getCouponFrequency, write: DebtSecurityInfo.prototype.setCouponFrequency });\n\t                Element_add(DebtSecurityInfo, { name: \"CALLPRICE\", order: 80, type: Number, read: DebtSecurityInfo.prototype.getCallPrice, write: DebtSecurityInfo.prototype.setCallPrice });\n\t                Element_add(DebtSecurityInfo, { name: \"YIELDTOCALL\", order: 90, type: Number, read: DebtSecurityInfo.prototype.getYieldToCall, write: DebtSecurityInfo.prototype.setYieldToCall });\n\t                Element_add(DebtSecurityInfo, { name: \"DTCALL\", order: 100, type: Date, read: DebtSecurityInfo.prototype.getNextCallDate, write: DebtSecurityInfo.prototype.setNextCallDate });\n\t                Element_add(DebtSecurityInfo, { name: \"CALLTYPE\", order: 110, type: String, read: DebtSecurityInfo.prototype.getCallType, write: DebtSecurityInfo.prototype.setCallType });\n\t                Element_add(DebtSecurityInfo, { name: \"YIELDTOMAT\", order: 120, type: Number, read: DebtSecurityInfo.prototype.getYieldToMaturity, write: DebtSecurityInfo.prototype.setYieldToMaturity });\n\t                Element_add(DebtSecurityInfo, { name: \"DTMAT\", order: 130, type: Date, read: DebtSecurityInfo.prototype.getDebtMaturityDate, write: DebtSecurityInfo.prototype.setDebtMaturityDate });\n\t                Element_add(DebtSecurityInfo, { name: \"ASSETCLASS\", order: 140, type: String, read: DebtSecurityInfo.prototype.getAssetClass, write: DebtSecurityInfo.prototype.setAssetClass });\n\t                Element_add(DebtSecurityInfo, { name: \"FIASSETCLASS\", order: 150, type: String, read: DebtSecurityInfo.prototype.getFiAssetClass, write: DebtSecurityInfo.prototype.setFiAssetClass });\n\t            })(seclist = data.seclist || (data.seclist = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var seclist;\n\t            (function (seclist) {\n\t                /**\n\t                 * The type of mutual fund.\n\t                 * @see \"Section 13.8.5.2, OFX Spec\"\n\t                 *\n\t                 * @author Jon Perlow\n\t                 */\n\t                (function (MutualFundType) {\n\t                    MutualFundType[MutualFundType[\"OPEN_END\"] = 0] = \"OPEN_END\";\n\t                    MutualFundType[MutualFundType[\"CLOSE_END\"] = 1] = \"CLOSE_END\";\n\t                    MutualFundType[MutualFundType[\"OTHER\"] = 2] = \"OTHER\";\n\t                })(seclist.MutualFundType || (seclist.MutualFundType = {}));\n\t                var MutualFundType = seclist.MutualFundType;\n\t                function MutualFundType_fromOfx(ofxVal) {\n\t                    if (\"OPENEND\" === ofxVal) {\n\t                        return MutualFundType.OPEN_END;\n\t                    }\n\t                    else if (\"CLOSEEND\" === ofxVal) {\n\t                        return MutualFundType.CLOSE_END;\n\t                    }\n\t                    else if (\"OTHER\" === ofxVal) {\n\t                        return MutualFundType.OTHER;\n\t                    }\n\t                    else {\n\t                        return null;\n\t                    }\n\t                }\n\t                seclist.MutualFundType_fromOfx = MutualFundType_fromOfx;\n\t            })(seclist = data.seclist || (data.seclist = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\t///<reference path='BaseSecurityInfo'/>\n\t///<reference path='MutualFundType'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var seclist;\n\t            (function (seclist) {\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                /**\n\t                 * Info about a mutual fund security.\n\t                 * @see \"Section 13.8.5.3, OFX Spec\"\n\t                 *\n\t                 * @author Jon Perlow\n\t                 */\n\t                var MutualFundSecurityInfo = (function (_super) {\n\t                    __extends(MutualFundSecurityInfo, _super);\n\t                    function MutualFundSecurityInfo() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    /**\n\t                     * Gets the mutual fund type. One of \"OPENEND\", \"CLOSEEND\", or \"OTHER\". This is an optional field\n\t                     * according to the OFX spec.\n\t                     *\n\t                     * @return the mutual fund type\n\t                     */\n\t                    MutualFundSecurityInfo.prototype.getType = function () {\n\t                        return this.mfType;\n\t                    };\n\t                    /**\n\t                     * Sets the mutual fund type. One of \"OPENEND\", \"CLOSEEND\", or \"OTHER\". This is an optional field\n\t                     * according to the OFX spec.\n\t                     *\n\t                     * @param mfType the mutual fund type\n\t                     */\n\t                    MutualFundSecurityInfo.prototype.setType = function (mfType) {\n\t                        this.mfType = mfType;\n\t                    };\n\t                    /**\n\t                     * Gets the mutual fund type as one of the well-known types.\n\t                     *\n\t                     * @return the mutual fund type or null if it's not one of the well-known types\n\t                     */\n\t                    MutualFundSecurityInfo.prototype.getTypeEnum = function () {\n\t                        return seclist.MutualFundType_fromOfx(this.getType());\n\t                    };\n\t                    /**\n\t                     * Gets the yield as a rate. This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @return the yield as a rate\n\t                     */\n\t                    MutualFundSecurityInfo.prototype.getYield = function () {\n\t                        return this.yield;\n\t                    };\n\t                    /**\n\t                     * Sets the yield as a rate. This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @param yield the yield as a rate\n\t                     */\n\t                    MutualFundSecurityInfo.prototype.setYield = function (yield_) {\n\t                        this.yield = yield_;\n\t                    };\n\t                    /**\n\t                     * Gets the as-of date for the yield. This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @return the as-of date for the yield\n\t                     */\n\t                    MutualFundSecurityInfo.prototype.getDateYieldAsOf = function () {\n\t                        return this.dateYieldAsOf;\n\t                    };\n\t                    /**\n\t                     * Sets the as-of date for the yield. This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @param dateYieldAsOf the as-of date for the yield\n\t                     */\n\t                    MutualFundSecurityInfo.prototype.setDateYieldAsOf = function (dateYieldAsOf) {\n\t                        this.dateYieldAsOf = dateYieldAsOf;\n\t                    };\n\t                    return MutualFundSecurityInfo;\n\t                })(seclist.BaseSecurityInfo);\n\t                seclist.MutualFundSecurityInfo = MutualFundSecurityInfo;\n\t                Aggregate_add(MutualFundSecurityInfo, \"MFINFO\");\n\t                Element_add(MutualFundSecurityInfo, { name: \"MFTYPE\", order: 20, type: String, read: MutualFundSecurityInfo.prototype.getType, write: MutualFundSecurityInfo.prototype.setType });\n\t                Element_add(MutualFundSecurityInfo, { name: \"YIELD\", order: 30, type: Number, read: MutualFundSecurityInfo.prototype.getYield, write: MutualFundSecurityInfo.prototype.setYield });\n\t                Element_add(MutualFundSecurityInfo, { name: \"DTYIELDASOF\", order: 40, type: Date, read: MutualFundSecurityInfo.prototype.getDateYieldAsOf, write: MutualFundSecurityInfo.prototype.setDateYieldAsOf });\n\t            })(seclist = data.seclist || (data.seclist = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var seclist;\n\t            (function (seclist) {\n\t                /**\n\t                 * Type of option.\n\t                 * @see \"Section 13.8.5.4, OFX Spec\"\n\t                 *\n\t                 * @author Jon Perlow\n\t                 */\n\t                (function (OptionType) {\n\t                    OptionType[OptionType[\"PUT\"] = 0] = \"PUT\";\n\t                    OptionType[OptionType[\"CALL\"] = 1] = \"CALL\";\n\t                })(seclist.OptionType || (seclist.OptionType = {}));\n\t                var OptionType = seclist.OptionType;\n\t                function OptionType_fromOfx(ofxVal) {\n\t                    if (\"PUT\" === ofxVal) {\n\t                        return OptionType.PUT;\n\t                    }\n\t                    else if (\"CALL\" === ofxVal) {\n\t                        return OptionType.CALL;\n\t                    }\n\t                    else {\n\t                        return null;\n\t                    }\n\t                }\n\t                seclist.OptionType_fromOfx = OptionType_fromOfx;\n\t            })(seclist = data.seclist || (data.seclist = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\t///<reference path='BaseSecurityInfo'/>\n\t///<reference path='OptionType'/>\n\t///<reference path='AssetClass'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var seclist;\n\t            (function (seclist) {\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                /**\n\t                 * Info about an option security.\n\t                 * @see \"Section 13.8.5.4, OFX Spec\"\n\t                 *\n\t                 * @author Jon Perlow\n\t                 */\n\t                var OptionSecurityInfo = (function (_super) {\n\t                    __extends(OptionSecurityInfo, _super);\n\t                    function OptionSecurityInfo() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    /**\n\t                     * Gets the type of option. One of \"PUT\" or \"CALL\". This is a required field according to the\n\t                     * OFX spec.\n\t                     *\n\t                     * @return the option type\n\t                     */\n\t                    OptionSecurityInfo.prototype.getOptionType = function () {\n\t                        return this.optionType;\n\t                    };\n\t                    /**\n\t                     * Sets the type of option. One of \"PUT\" or \"CALL\". This is a required field according to the\n\t                     * OFX spec.\n\t                     *\n\t                     * @param optionType the option type\n\t                     */\n\t                    OptionSecurityInfo.prototype.setOptionType = function (optionType) {\n\t                        this.optionType = optionType;\n\t                    };\n\t                    /**\n\t                     * Gets the option type as a well-known enum value.\n\t                     *\n\t                     * @return the option type or null if it's not one of the well-known types\n\t                     */\n\t                    OptionSecurityInfo.prototype.getOptionTypeEnum = function () {\n\t                        return seclist.OptionType_fromOfx(this.getOptionType());\n\t                    };\n\t                    /**\n\t                     * Gets the strike price of the option. This is a required field according to the OFX spec.\n\t                     *\n\t                     * @return the option strike price\n\t                     */\n\t                    OptionSecurityInfo.prototype.getStrikePrice = function () {\n\t                        return this.strikePrice;\n\t                    };\n\t                    /**\n\t                     * Sets the strike price of the option. This is a required field according to the OFX spec.\n\t                     *\n\t                     * @param strikePrice the option strike price\n\t                     */\n\t                    OptionSecurityInfo.prototype.setStrikePrice = function (strikePrice) {\n\t                        this.strikePrice = strikePrice;\n\t                    };\n\t                    /**\n\t                     * Gets the expiration date of the option. This is a required field according to the OFX spec.\n\t                     *\n\t                     * @return the expiration date of the option\n\t                     */\n\t                    OptionSecurityInfo.prototype.getExpirationDate = function () {\n\t                        return this.expirationDate;\n\t                    };\n\t                    /**\n\t                     * Sets the expiration date of the option. This is a required field according to the OFX spec.\n\t                     *\n\t                     * @param expirationDate the expiration date of the option\n\t                     */\n\t                    OptionSecurityInfo.prototype.setExpirationDate = function (expirationDate) {\n\t                        this.expirationDate = expirationDate;\n\t                    };\n\t                    /**\n\t                     * Gets the number of shares per option contact. This is a required field according to the OFX\n\t                     * spec.\n\t                     *\n\t                     * @return the number of shares per option contact\n\t                     */\n\t                    OptionSecurityInfo.prototype.getSharesPerContact = function () {\n\t                        return this.sharesPerContact;\n\t                    };\n\t                    /**\n\t                     * Sets the number of shares per option contact. This is a required field according to the OFX\n\t                     * spec.\n\t                     *\n\t                     * @param sharesPerContact the number of shares per option contact\n\t                     */\n\t                    OptionSecurityInfo.prototype.setSharesPerContact = function (sharesPerContact) {\n\t                        this.sharesPerContact = sharesPerContact;\n\t                    };\n\t                    /**\n\t                     * Gets the security id of the underling security. This is an optional field according to the OFX\n\t                     * spec.\n\t                     *\n\t                     * @return the security id of the underlying security\n\t                     */\n\t                    OptionSecurityInfo.prototype.getUnderlyingSecurity = function () {\n\t                        return this.underlyingSecurity;\n\t                    };\n\t                    /**\n\t                     * Sets the security id of the underling security. This is an optional field according to the OFX\n\t                     * spec.\n\t                     *\n\t                     * @param underlyingSecurity the security id of the underlying security\n\t                     */\n\t                    OptionSecurityInfo.prototype.setUnderlyingSecurity = function (underlyingSecurity) {\n\t                        this.underlyingSecurity = underlyingSecurity;\n\t                    };\n\t                    /**\n\t                     * Gets the asset class of the option. This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @return the asset class of the option\n\t                     */\n\t                    OptionSecurityInfo.prototype.getAssetClass = function () {\n\t                        return this.assetClass;\n\t                    };\n\t                    /**\n\t                     * Sets the asset class of the option. This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @param assetClass the asset class of the option\n\t                     */\n\t                    OptionSecurityInfo.prototype.setAssetClass = function (assetClass) {\n\t                        this.assetClass = assetClass;\n\t                    };\n\t                    /**\n\t                     * Gets the assert class as one of the well-known types.\n\t                     *\n\t                     * @return the asset class or null if it's not one of the well-known types\n\t                     */\n\t                    OptionSecurityInfo.prototype.getAssetClassEnum = function () {\n\t                        return seclist.AssetClass_fromOfx(this.getAssetClass());\n\t                    };\n\t                    /**\n\t                     * Gets the FI-defined asset class of the option. This is an optional field according to the OFX\n\t                     * spec.\n\t                     *\n\t                     * @return the FI-defined asset class of the option\n\t                     */\n\t                    OptionSecurityInfo.prototype.getFiAssetClass = function () {\n\t                        return this.fiAssetClass;\n\t                    };\n\t                    /**\n\t                     * Sets the FI-defined asset class of the option. This is an optional field according to the OFX\n\t                     * spec.\n\t                     *\n\t                     * @param fiAssetClass the FI-defined asset class of the option\n\t                     */\n\t                    OptionSecurityInfo.prototype.setFiAssetClass = function (fiAssetClass) {\n\t                        this.fiAssetClass = fiAssetClass;\n\t                    };\n\t                    return OptionSecurityInfo;\n\t                })(seclist.BaseSecurityInfo);\n\t                seclist.OptionSecurityInfo = OptionSecurityInfo;\n\t                Aggregate_add(OptionSecurityInfo, \"OPTINFO\");\n\t                Element_add(OptionSecurityInfo, { name: \"OPTTYPE\", order: 20, type: String, read: OptionSecurityInfo.prototype.getOptionType, write: OptionSecurityInfo.prototype.setOptionType });\n\t                Element_add(OptionSecurityInfo, { name: \"STRIKEPRICE\", order: 30, type: Number, read: OptionSecurityInfo.prototype.getStrikePrice, write: OptionSecurityInfo.prototype.setStrikePrice });\n\t                Element_add(OptionSecurityInfo, { name: \"DTEXPIRE\", order: 40, type: Date, read: OptionSecurityInfo.prototype.getExpirationDate, write: OptionSecurityInfo.prototype.setExpirationDate });\n\t                Element_add(OptionSecurityInfo, { name: \"SHPERCTRCT\", order: 50, type: Number, read: OptionSecurityInfo.prototype.getSharesPerContact, write: OptionSecurityInfo.prototype.setSharesPerContact });\n\t                Element_add(OptionSecurityInfo, { name: \"SECID\", order: 60, type: seclist.SecurityId, read: OptionSecurityInfo.prototype.getUnderlyingSecurity, write: OptionSecurityInfo.prototype.setUnderlyingSecurity });\n\t                Element_add(OptionSecurityInfo, { name: \"ASSETCLASS\", order: 70, type: String, read: OptionSecurityInfo.prototype.getAssetClass, write: OptionSecurityInfo.prototype.setAssetClass });\n\t                Element_add(OptionSecurityInfo, { name: \"FIASSETCLASS\", order: 80, type: String, read: OptionSecurityInfo.prototype.getFiAssetClass, write: OptionSecurityInfo.prototype.setFiAssetClass });\n\t            })(seclist = data.seclist || (data.seclist = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\t///<reference path='BaseSecurityInfo'/>\n\t///<reference path='AssetClass'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var seclist;\n\t            (function (seclist) {\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                /**\n\t                 * Info about any other type of security.\n\t                 * @see \"Section 13.8.5.5, OFX Spec\"\n\t                 *\n\t                 * @author Jon Perlow\n\t                 */\n\t                var OtherSecurityInfo = (function (_super) {\n\t                    __extends(OtherSecurityInfo, _super);\n\t                    function OtherSecurityInfo() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    /**\n\t                     * Gets a description of the type of security. This is an optional field according to the OFX\n\t                     * spec.\n\t                     *\n\t                     * @return the description of the security\n\t                     */\n\t                    OtherSecurityInfo.prototype.getTypeDesc = function () {\n\t                        return this.typeDesc;\n\t                    };\n\t                    /**\n\t                     * Sets a description of the type of security. This is an optional field according to the OFX\n\t                     * spec.\n\t                     *\n\t                     * @param typeDesc the description of the security\n\t                     */\n\t                    OtherSecurityInfo.prototype.setTypeDesc = function (typeDesc) {\n\t                        this.typeDesc = typeDesc;\n\t                    };\n\t                    /**\n\t                     * Gets the asset class of the option. This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @return the asset class of the debt\n\t                     */\n\t                    OtherSecurityInfo.prototype.getAssetClass = function () {\n\t                        return this.assetClass;\n\t                    };\n\t                    /**\n\t                     * Sets the asset class of the debt. This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @param assetClass the asset class of the debt\n\t                     */\n\t                    OtherSecurityInfo.prototype.setAssetClass = function (assetClass) {\n\t                        this.assetClass = assetClass;\n\t                    };\n\t                    /**\n\t                     * Gets the assert class as one of the well-known types.\n\t                     *\n\t                     * @return the asset class or null if it's not one of the well-known types\n\t                     */\n\t                    OtherSecurityInfo.prototype.getAssetClassEnum = function () {\n\t                        return seclist.AssetClass_fromOfx(this.getAssetClass());\n\t                    };\n\t                    /**\n\t                     * Gets the FI-defined asset class of the debt. This is an optional field according to the OFX\n\t                     * spec.\n\t                     *\n\t                     * @return the FI-defined asset class of the debt\n\t                     */\n\t                    OtherSecurityInfo.prototype.getFiAssetClass = function () {\n\t                        return this.fiAssetClass;\n\t                    };\n\t                    /**\n\t                     * Sets the FI-defined asset class of the debt. This is an optional field according to the OFX\n\t                     * spec.\n\t                     *\n\t                     * @param fiAssetClass the FI-defined asset class of the debt\n\t                     */\n\t                    OtherSecurityInfo.prototype.setFiAssetClass = function (fiAssetClass) {\n\t                        this.fiAssetClass = fiAssetClass;\n\t                    };\n\t                    return OtherSecurityInfo;\n\t                })(seclist.BaseSecurityInfo);\n\t                seclist.OtherSecurityInfo = OtherSecurityInfo;\n\t                Aggregate_add(OtherSecurityInfo, \"OTHERINFO\");\n\t                Element_add(OtherSecurityInfo, { name: \"TYPEDESC\", order: 20, type: String, read: OtherSecurityInfo.prototype.getTypeDesc, write: OtherSecurityInfo.prototype.setTypeDesc });\n\t                Element_add(OtherSecurityInfo, { name: \"ASSETCLASS\", order: 30, type: String, read: OtherSecurityInfo.prototype.getAssetClass, write: OtherSecurityInfo.prototype.setAssetClass });\n\t                Element_add(OtherSecurityInfo, { name: \"FIASSETCLASS\", order: 40, type: String, read: OtherSecurityInfo.prototype.getFiAssetClass, write: OtherSecurityInfo.prototype.setFiAssetClass });\n\t            })(seclist = data.seclist || (data.seclist = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var seclist;\n\t            (function (seclist) {\n\t                /**\n\t                 * The type of debt.\n\t                 * @see \"Section 13.8.5.6, OFX Spec\"\n\t                 *\n\t                 * @author Jon Perlow\n\t                 */\n\t                (function (StockType) {\n\t                    StockType[StockType[\"COMMON\"] = 0] = \"COMMON\";\n\t                    StockType[StockType[\"PREFERRED\"] = 1] = \"PREFERRED\";\n\t                    StockType[StockType[\"CONVERTIBLE\"] = 2] = \"CONVERTIBLE\";\n\t                    StockType[StockType[\"OTHER\"] = 3] = \"OTHER\";\n\t                })(seclist.StockType || (seclist.StockType = {}));\n\t                var StockType = seclist.StockType;\n\t                function StockType_fromOfx(ofxVal) {\n\t                    if (\"COMMON\" === ofxVal) {\n\t                        return StockType.COMMON;\n\t                    }\n\t                    else if (\"PREFERRED\" === ofxVal) {\n\t                        return StockType.PREFERRED;\n\t                    }\n\t                    else if (\"CONVERTIBLE\" === ofxVal) {\n\t                        return StockType.CONVERTIBLE;\n\t                    }\n\t                    else if (\"OTHER\" === ofxVal) {\n\t                        return StockType.OTHER;\n\t                    }\n\t                    else {\n\t                        return null;\n\t                    }\n\t                }\n\t                seclist.StockType_fromOfx = StockType_fromOfx;\n\t            })(seclist = data.seclist || (data.seclist = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2010 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\t///<reference path='BaseSecurityInfo'/>\n\t///<reference path='StockType'/>\n\t///<reference path='AssetClass'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var seclist;\n\t            (function (seclist) {\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                /**\n\t                 * Info about a stock security.\n\t                 * @see \"Section 13.8.5.6, OFX Spec\"\n\t                 *\n\t                 * @author Jon Perlow\n\t                 */\n\t                var StockSecurityInfo = (function (_super) {\n\t                    __extends(StockSecurityInfo, _super);\n\t                    function StockSecurityInfo() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    /**\n\t                     * Gets the type of stock. One of \"COMMON\", \"PREFERRED\", \"CONVERTIBLE\", or \"OTHER\". This is an\n\t                     * optional field according to the OFX spec.\n\t                     *\n\t                     * @return the type of stock\n\t                     */\n\t                    StockSecurityInfo.prototype.getType = function () {\n\t                        return this.stockType;\n\t                    };\n\t                    /**\n\t                     * Sets the type of stock. One of \"COMMON\", \"PREFERRED\", \"CONVERTIBLE\", or \"OTHER\". This is an\n\t                     * optional field according to the OFX spec.\n\t                     *\n\t                     * @param stockType the type of stock\n\t                     */\n\t                    StockSecurityInfo.prototype.setType = function (stockType) {\n\t                        this.stockType = stockType;\n\t                    };\n\t                    /**\n\t                     * Gets the type of stock as one of the well-known types.\n\t                     *\n\t                     * @return the type of stock or null if it's not one of the well-known types\n\t                     */\n\t                    StockSecurityInfo.prototype.getTypeEnum = function () {\n\t                        return seclist.StockType_fromOfx(this.getType());\n\t                    };\n\t                    /**\n\t                     * Gets the current yield reported as the dividend expressed as a portion of the current stock\n\t                     * price, a rate. This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @return the dividend yield\n\t                     */\n\t                    StockSecurityInfo.prototype.getYield = function () {\n\t                        return this.yield;\n\t                    };\n\t                    /**\n\t                     * Sets the current yield reported as the dividend expressed as a portion of the current stock\n\t                     * price, a rate. This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @param yield the dividend yield\n\t                     */\n\t                    StockSecurityInfo.prototype.setYield = function (yield_) {\n\t                        this.yield = yield_;\n\t                    };\n\t                    /**\n\t                     * Gets the as-of date for the yield. This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @return the as-of date for the yield\n\t                     */\n\t                    StockSecurityInfo.prototype.getDateYieldAsOf = function () {\n\t                        return this.dateYieldAsOf;\n\t                    };\n\t                    /**\n\t                     * Sets the as-of date for the yield. This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @param dateYieldAsOf the as-of date for the yield\n\t                     */\n\t                    StockSecurityInfo.prototype.setDateYieldAsOf = function (dateYieldAsOf) {\n\t                        this.dateYieldAsOf = dateYieldAsOf;\n\t                    };\n\t                    /**\n\t                     * Gets the asset class of the stock. This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @return the asset class of the stock\n\t                     */\n\t                    StockSecurityInfo.prototype.getAssetClass = function () {\n\t                        return this.assetClass;\n\t                    };\n\t                    /**\n\t                     * Sets the asset class of the stock. This is an optional field according to the OFX spec.\n\t                     *\n\t                     * @param assetClass the asset class of the stock\n\t                     */\n\t                    StockSecurityInfo.prototype.setAssetClass = function (assetClass) {\n\t                        this.assetClass = assetClass;\n\t                    };\n\t                    /**\n\t                     * Gets the assert class as one of the well-known types.\n\t                     *\n\t                     * @return the asset class or null if it's not one of the well-known types\n\t                     */\n\t                    StockSecurityInfo.prototype.getAssetClassEnum = function () {\n\t                        return seclist.AssetClass_fromOfx(this.getAssetClass());\n\t                    };\n\t                    /**\n\t                     * Gets the FI-defined asset class of the stock. This is an optional field according to the OFX\n\t                     * spec.\n\t                     *\n\t                     * @return the FI-defined asset class of the stock\n\t                     */\n\t                    StockSecurityInfo.prototype.getFiAssetClass = function () {\n\t                        return this.fiAssetClass;\n\t                    };\n\t                    /**\n\t                     * Sets the FI-defined asset class of the stock. This is an optional field according to the OFX\n\t                     * spec.\n\t                     *\n\t                     * @param fiAssetClass the FI-defined asset class of the stock\n\t                     */\n\t                    StockSecurityInfo.prototype.setFiAssetClass = function (fiAssetClass) {\n\t                        this.fiAssetClass = fiAssetClass;\n\t                    };\n\t                    return StockSecurityInfo;\n\t                })(seclist.BaseSecurityInfo);\n\t                seclist.StockSecurityInfo = StockSecurityInfo;\n\t                Aggregate_add(StockSecurityInfo, \"STOCKINFO\");\n\t                Element_add(StockSecurityInfo, { name: \"STOCKTYPE\", order: 20, type: String, read: StockSecurityInfo.prototype.getType, write: StockSecurityInfo.prototype.setType });\n\t                Element_add(StockSecurityInfo, { name: \"YIELD\", order: 30, type: Number, read: StockSecurityInfo.prototype.getYield, write: StockSecurityInfo.prototype.setYield });\n\t                Element_add(StockSecurityInfo, { name: \"DTYIELDASOF\", order: 40, type: Date, read: StockSecurityInfo.prototype.getDateYieldAsOf, write: StockSecurityInfo.prototype.setDateYieldAsOf });\n\t                Element_add(StockSecurityInfo, { name: \"ASSETCLASS\", order: 50, type: String, read: StockSecurityInfo.prototype.getAssetClass, write: StockSecurityInfo.prototype.setAssetClass });\n\t                Element_add(StockSecurityInfo, { name: \"FIASSETCLASS\", order: 60, type: String, read: StockSecurityInfo.prototype.getFiAssetClass, write: StockSecurityInfo.prototype.setFiAssetClass });\n\t            })(seclist = data.seclist || (data.seclist = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var tax1099;\n\t            (function (tax1099) {\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                /**\n\t                 * @author Aparna Gawali\n\t                 * aparna.gawali@sungard.com\n\t                 */\n\t                var ProcDet = (function () {\n\t                    function ProcDet() {\n\t                    }\n\t                    /**\n\t                     * @return the dtAqd\n\t                     */\n\t                    ProcDet.prototype.getDtAqd = function () {\n\t                        return this.dtAqd;\n\t                    };\n\t                    /**\n\t                     * @param dtAqd the dtAqd to set\n\t                     */\n\t                    ProcDet.prototype.setDtAqd = function (dtAqd) {\n\t                        this.dtAqd = dtAqd;\n\t                    };\n\t                    /**\n\t                     * @return the dtSale\n\t                     */\n\t                    ProcDet.prototype.getDtSale = function () {\n\t                        return this.dtSale;\n\t                    };\n\t                    /**\n\t                     * @param dtSale the dtSale to set\n\t                     */\n\t                    ProcDet.prototype.setDtSale = function (dtSale) {\n\t                        this.dtSale = dtSale;\n\t                    };\n\t                    /**\n\t                     * @return the secName\n\t                     */\n\t                    ProcDet.prototype.getSecName = function () {\n\t                        return this.secName;\n\t                    };\n\t                    /**\n\t                     * @param secName the secName to set\n\t                     */\n\t                    ProcDet.prototype.setSecName = function (secName) {\n\t                        this.secName = secName;\n\t                    };\n\t                    /**\n\t                     * @return the costBasis\n\t                     */\n\t                    ProcDet.prototype.getCostBasis = function () {\n\t                        return this.costBasis;\n\t                    };\n\t                    /**\n\t                     * @param costBasis the costBasis to set\n\t                     */\n\t                    ProcDet.prototype.setCostBasis = function (costBasis) {\n\t                        this.costBasis = costBasis;\n\t                    };\n\t                    /**\n\t                     * @return the saleSpr\n\t                     */\n\t                    ProcDet.prototype.getSaleSpr = function () {\n\t                        return this.saleSpr;\n\t                    };\n\t                    /**\n\t                     * @param saleSpr the saleSpr to set\n\t                     */\n\t                    ProcDet.prototype.setSaleSpr = function (saleSpr) {\n\t                        this.saleSpr = saleSpr;\n\t                    };\n\t                    /**\n\t                     * @return the longShort\n\t                     */\n\t                    ProcDet.prototype.getLongShort = function () {\n\t                        return this.longShort;\n\t                    };\n\t                    /**\n\t                     * @param longShort the longShort to set\n\t                     */\n\t                    ProcDet.prototype.setLongShort = function (longShort) {\n\t                        this.longShort = longShort;\n\t                    };\n\t                    /**\n\t                     * @return the wasDisAllowed\n\t                     */\n\t                    ProcDet.prototype.getWasDisAllowed = function () {\n\t                        return this.wasDisAllowed;\n\t                    };\n\t                    /**\n\t                     * @param wasDisAllowed the wasDisAllowed to set\n\t                     */\n\t                    ProcDet.prototype.setWasDisAllowed = function (wasDisAllowed) {\n\t                        this.wasDisAllowed = wasDisAllowed;\n\t                    };\n\t                    /**\n\t                     * @return the noncoveredSec\n\t                     */\n\t                    ProcDet.prototype.getNoncoveredSec = function () {\n\t                        return this.noncoveredSec;\n\t                    };\n\t                    /**\n\t                     * @param noncoveredSec the noncoveredSec to set\n\t                     */\n\t                    ProcDet.prototype.setNoncoveredSec = function (noncoveredSec) {\n\t                        this.noncoveredSec = noncoveredSec;\n\t                    };\n\t                    /**\n\t                     * @return the basisNotshown\n\t                     */\n\t                    ProcDet.prototype.getBasisNotshown = function () {\n\t                        return this.basisNotshown;\n\t                    };\n\t                    /**\n\t                     * @param basisNotshown the basisNotshown to set\n\t                     */\n\t                    ProcDet.prototype.setBasisNotshown = function (basisNotshown) {\n\t                        this.basisNotshown = basisNotshown;\n\t                    };\n\t                    return ProcDet;\n\t                })();\n\t                tax1099.ProcDet = ProcDet;\n\t                Aggregate_add(ProcDet, \"PROCDET_V100\");\n\t                Element_add(ProcDet, { name: \"DTAQD\", required: false, order: 0, type: String, read: ProcDet.prototype.getDtAqd, write: ProcDet.prototype.setDtAqd });\n\t                Element_add(ProcDet, { name: \"DTSALE\", required: false, order: 2, type: String, read: ProcDet.prototype.getDtSale, write: ProcDet.prototype.setDtSale });\n\t                Element_add(ProcDet, { name: \"SECNAME\", required: false, order: 3, type: String, read: ProcDet.prototype.getSecName, write: ProcDet.prototype.setSecName });\n\t                Element_add(ProcDet, { name: \"COSTBASIS\", required: false, order: 4, type: String, read: ProcDet.prototype.getCostBasis, write: ProcDet.prototype.setCostBasis });\n\t                Element_add(ProcDet, { name: \"SALESPR\", required: false, order: 5, type: String, read: ProcDet.prototype.getSaleSpr, write: ProcDet.prototype.setSaleSpr });\n\t                Element_add(ProcDet, { name: \"LONGSHORT\", required: false, order: 6, type: String, read: ProcDet.prototype.getLongShort, write: ProcDet.prototype.setLongShort });\n\t                Element_add(ProcDet, { name: \"WASHSALELOSSDISALLOWED\", required: false, order: 7, type: String, read: ProcDet.prototype.getWasDisAllowed, write: ProcDet.prototype.setWasDisAllowed });\n\t                Element_add(ProcDet, { name: \"NONCOVEREDSECURITY\", required: false, order: 8, type: String, read: ProcDet.prototype.getNoncoveredSec, write: ProcDet.prototype.setNoncoveredSec });\n\t                Element_add(ProcDet, { name: \"BASISNOTSHOWN\", required: false, order: 9, type: String, read: ProcDet.prototype.getBasisNotshown, write: ProcDet.prototype.setBasisNotshown });\n\t            })(tax1099 = data.tax1099 || (data.tax1099 = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\t///<reference path='ProcDet'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var tax1099;\n\t            (function (tax1099) {\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                /**\n\t                 * @author Aparna Gawali\n\t                 * aparna.gawali@sungard.com\n\t                 */\n\t                var ExtDBInfo = (function () {\n\t                    function ExtDBInfo() {\n\t                    }\n\t                    /**\n\t                     * @return the procDet\n\t                     */\n\t                    ExtDBInfo.prototype.getProcDet = function () {\n\t                        return this.procDet;\n\t                    };\n\t                    /**\n\t                     * @param procDet the procDet to set\n\t                     */\n\t                    ExtDBInfo.prototype.setProcDet = function (procDet) {\n\t                        this.procDet = procDet;\n\t                    };\n\t                    /**\n\t                     * @return the teInterest\n\t                     */\n\t                    ExtDBInfo.prototype.getTeInterest = function () {\n\t                        return this.teInterest;\n\t                    };\n\t                    /**\n\t                     * @param teInterest the teInterest to set\n\t                     */\n\t                    ExtDBInfo.prototype.setTeInterest = function (teInterest) {\n\t                        this.teInterest = teInterest;\n\t                    };\n\t                    /**\n\t                     * @return the pabInterest\n\t                     */\n\t                    ExtDBInfo.prototype.getPabInterest = function () {\n\t                        return this.pabInterest;\n\t                    };\n\t                    /**\n\t                     * @param pabInterest the pabInterest to set\n\t                     */\n\t                    ExtDBInfo.prototype.setPabInterest = function (pabInterest) {\n\t                        this.pabInterest = pabInterest;\n\t                    };\n\t                    /**\n\t                     * @return the teIntDividend\n\t                     */\n\t                    ExtDBInfo.prototype.getTeIntDividend = function () {\n\t                        return this.teIntDividend;\n\t                    };\n\t                    /**\n\t                     * @param teIntDividend the teIntDividend to set\n\t                     */\n\t                    ExtDBInfo.prototype.setTeIntDividend = function (teIntDividend) {\n\t                        this.teIntDividend = teIntDividend;\n\t                    };\n\t                    /**\n\t                     * @return the pabDividend\n\t                     */\n\t                    ExtDBInfo.prototype.getPabDividend = function () {\n\t                        return this.pabDividend;\n\t                    };\n\t                    /**\n\t                     * @param pabDividend the pabDividend to set\n\t                     */\n\t                    ExtDBInfo.prototype.setPabDividend = function (pabDividend) {\n\t                        this.pabDividend = pabDividend;\n\t                    };\n\t                    return ExtDBInfo;\n\t                })();\n\t                tax1099.ExtDBInfo = ExtDBInfo;\n\t                Aggregate_add(ExtDBInfo, \"EXTDBINFO_V100\");\n\t                ChildAggregate_add(ExtDBInfo, { required: false, order: 0, type: Array, collectionEntryType: tax1099.ProcDet, read: ExtDBInfo.prototype.getProcDet, write: ExtDBInfo.prototype.setProcDet });\n\t                Element_add(ExtDBInfo, { name: \"TEINTEREST\", required: false, order: 1, type: String, read: ExtDBInfo.prototype.getTeInterest, write: ExtDBInfo.prototype.setTeInterest });\n\t                Element_add(ExtDBInfo, { name: \"PABINTEREST\", required: false, order: 2, type: String, read: ExtDBInfo.prototype.getPabInterest, write: ExtDBInfo.prototype.setPabInterest });\n\t                Element_add(ExtDBInfo, { name: \"TEINTDIVIDEND\", required: false, order: 3, type: String, read: ExtDBInfo.prototype.getTeIntDividend, write: ExtDBInfo.prototype.setTeIntDividend });\n\t                Element_add(ExtDBInfo, { name: \"PABDIVIDEND\", required: false, order: 4, type: String, read: ExtDBInfo.prototype.getPabDividend, write: ExtDBInfo.prototype.setPabDividend });\n\t            })(tax1099 = data.tax1099 || (data.tax1099 = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var tax1099;\n\t            (function (tax1099) {\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                /**\n\t                 * @author Aparna Gawali\n\t                 * aparna.gawali@sungard.com\n\t                 */\n\t                var PayerAddress = (function () {\n\t                    function PayerAddress() {\n\t                    }\n\t                    /**\n\t                     * @return the payerName1\n\t                     */\n\t                    PayerAddress.prototype.getPayerName1 = function () {\n\t                        return this.payerName1;\n\t                    };\n\t                    /**\n\t                     * @param payerName1 the payerName1 to set\n\t                     */\n\t                    PayerAddress.prototype.setPayerName1 = function (payerName1) {\n\t                        this.payerName1 = payerName1;\n\t                    };\n\t                    /**\n\t                     * @return the payerName2\n\t                     */\n\t                    PayerAddress.prototype.getPayerName2 = function () {\n\t                        return this.payerName2;\n\t                    };\n\t                    /**\n\t                     * @param payerName2 the payerName2 to set\n\t                     */\n\t                    PayerAddress.prototype.setPayerName2 = function (payerName2) {\n\t                        this.payerName2 = payerName2;\n\t                    };\n\t                    /**\n\t                     * @return the address1\n\t                     */\n\t                    PayerAddress.prototype.getAddress1 = function () {\n\t                        return this.address1;\n\t                    };\n\t                    /**\n\t                     * @param address1 the address1 to set\n\t                     */\n\t                    PayerAddress.prototype.setAddress1 = function (address1) {\n\t                        this.address1 = address1;\n\t                    };\n\t                    /**\n\t                     * @return the address2\n\t                     */\n\t                    PayerAddress.prototype.getAddress2 = function () {\n\t                        return this.address2;\n\t                    };\n\t                    /**\n\t                     * @param address2 the address2 to set\n\t                     */\n\t                    PayerAddress.prototype.setAddress2 = function (address2) {\n\t                        this.address2 = address2;\n\t                    };\n\t                    /**\n\t                     * @return the city\n\t                     */\n\t                    PayerAddress.prototype.getCity = function () {\n\t                        return this.city;\n\t                    };\n\t                    /**\n\t                     * @param city the city to set\n\t                     */\n\t                    PayerAddress.prototype.setCity = function (city) {\n\t                        this.city = city;\n\t                    };\n\t                    /**\n\t                     * @return the state\n\t                     */\n\t                    PayerAddress.prototype.getState = function () {\n\t                        return this.state;\n\t                    };\n\t                    /**\n\t                     * @param state the state to set\n\t                     */\n\t                    PayerAddress.prototype.setState = function (state) {\n\t                        this.state = state;\n\t                    };\n\t                    /**\n\t                     * @return the postalCode\n\t                     */\n\t                    PayerAddress.prototype.getPostalCode = function () {\n\t                        return this.postalCode;\n\t                    };\n\t                    /**\n\t                     * @param postalCode the postalCode to set\n\t                     */\n\t                    PayerAddress.prototype.setPostalCode = function (postalCode) {\n\t                        this.postalCode = postalCode;\n\t                    };\n\t                    /**\n\t                     * @return the phone\n\t                     */\n\t                    PayerAddress.prototype.getPhone = function () {\n\t                        return this.phone;\n\t                    };\n\t                    /**\n\t                     * @param phone the phone to set\n\t                     */\n\t                    PayerAddress.prototype.setPhone = function (phone) {\n\t                        this.phone = phone;\n\t                    };\n\t                    return PayerAddress;\n\t                })();\n\t                tax1099.PayerAddress = PayerAddress;\n\t                Aggregate_add(PayerAddress, \"PAYERADDR\");\n\t                Element_add(PayerAddress, { name: \"PAYERNAME1\", required: true, order: 0, type: String, read: PayerAddress.prototype.getPayerName1, write: PayerAddress.prototype.setPayerName1 });\n\t                Element_add(PayerAddress, { name: \"PAYERNAME2\", required: false, order: 1, type: String, read: PayerAddress.prototype.getPayerName2, write: PayerAddress.prototype.setPayerName2 });\n\t                Element_add(PayerAddress, { name: \"ADDR1\", required: true, order: 2, type: String, read: PayerAddress.prototype.getAddress1, write: PayerAddress.prototype.setAddress1 });\n\t                Element_add(PayerAddress, { name: \"ADDR2\", required: true, order: 3, type: String, read: PayerAddress.prototype.getAddress2, write: PayerAddress.prototype.setAddress2 });\n\t                Element_add(PayerAddress, { name: \"CITY\", required: true, order: 4, type: String, read: PayerAddress.prototype.getCity, write: PayerAddress.prototype.setCity });\n\t                Element_add(PayerAddress, { name: \"STATE\", required: true, order: 5, type: String, read: PayerAddress.prototype.getState, write: PayerAddress.prototype.setState });\n\t                Element_add(PayerAddress, { name: \"POSTALCODE\", required: true, order: 6, type: String, read: PayerAddress.prototype.getPostalCode, write: PayerAddress.prototype.setPostalCode });\n\t                Element_add(PayerAddress, { name: \"PHONE\", required: false, order: 7, type: String, read: PayerAddress.prototype.getPhone, write: PayerAddress.prototype.setPhone });\n\t            })(tax1099 = data.tax1099 || (data.tax1099 = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var tax1099;\n\t            (function (tax1099) {\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                /**\n\t                 * @author Aparna Gawali\n\t                 * aparna.gawali@sungard.com\n\t                 */\n\t                var RecAddress = (function () {\n\t                    function RecAddress() {\n\t                    }\n\t                    /**\n\t                     * @return the recName1\n\t                     */\n\t                    RecAddress.prototype.getRecName1 = function () {\n\t                        return this.recName1;\n\t                    };\n\t                    /**\n\t                     * @param recName1 the recName1 to set\n\t                     */\n\t                    RecAddress.prototype.setRecName1 = function (recName1) {\n\t                        this.recName1 = recName1;\n\t                    };\n\t                    /**\n\t                     * @return the recName2\n\t                     */\n\t                    RecAddress.prototype.getRecName2 = function () {\n\t                        return this.recName2;\n\t                    };\n\t                    /**\n\t                     * @param recName2 the recName2 to set\n\t                     */\n\t                    RecAddress.prototype.setRecName2 = function (recName2) {\n\t                        this.recName2 = recName2;\n\t                    };\n\t                    /**\n\t                     * @return the address1\n\t                     */\n\t                    RecAddress.prototype.getAddress1 = function () {\n\t                        return this.address1;\n\t                    };\n\t                    /**\n\t                     * @param address1 the address1 to set\n\t                     */\n\t                    RecAddress.prototype.setAddress1 = function (address1) {\n\t                        this.address1 = address1;\n\t                    };\n\t                    /**\n\t                     * @return the address2\n\t                     */\n\t                    RecAddress.prototype.getAddress2 = function () {\n\t                        return this.address2;\n\t                    };\n\t                    /**\n\t                     * @param address2 the address2 to set\n\t                     */\n\t                    RecAddress.prototype.setAddress2 = function (address2) {\n\t                        this.address2 = address2;\n\t                    };\n\t                    /**\n\t                     * @return the city\n\t                     */\n\t                    RecAddress.prototype.getCity = function () {\n\t                        return this.city;\n\t                    };\n\t                    /**\n\t                     * @param city the city to set\n\t                     */\n\t                    RecAddress.prototype.setCity = function (city) {\n\t                        this.city = city;\n\t                    };\n\t                    /**\n\t                     * @return the state\n\t                     */\n\t                    RecAddress.prototype.getState = function () {\n\t                        return this.state;\n\t                    };\n\t                    /**\n\t                     * @param state the state to set\n\t                     */\n\t                    RecAddress.prototype.setState = function (state) {\n\t                        this.state = state;\n\t                    };\n\t                    /**\n\t                     * @return the postalCode\n\t                     */\n\t                    RecAddress.prototype.getPostalCode = function () {\n\t                        return this.postalCode;\n\t                    };\n\t                    /**\n\t                     * @param postalCode the postalCode to set\n\t                     */\n\t                    RecAddress.prototype.setPostalCode = function (postalCode) {\n\t                        this.postalCode = postalCode;\n\t                    };\n\t                    /**\n\t                     * @return the phone\n\t                     */\n\t                    RecAddress.prototype.getPhone = function () {\n\t                        return this.phone;\n\t                    };\n\t                    /**\n\t                     * @param phone the phone to set\n\t                     */\n\t                    RecAddress.prototype.setPhone = function (phone) {\n\t                        this.phone = phone;\n\t                    };\n\t                    return RecAddress;\n\t                })();\n\t                tax1099.RecAddress = RecAddress;\n\t                Aggregate_add(RecAddress, \"RECADDR\");\n\t                Element_add(RecAddress, { name: \"RECNAME1\", required: true, order: 0, type: String, read: RecAddress.prototype.getRecName1, write: RecAddress.prototype.setRecName1 });\n\t                Element_add(RecAddress, { name: \"RECNAME2\", required: false, order: 1, type: String, read: RecAddress.prototype.getRecName2, write: RecAddress.prototype.setRecName2 });\n\t                Element_add(RecAddress, { name: \"ADDR1\", required: true, order: 2, type: String, read: RecAddress.prototype.getAddress1, write: RecAddress.prototype.setAddress1 });\n\t                Element_add(RecAddress, { name: \"ADDR2\", required: true, order: 3, type: String, read: RecAddress.prototype.getAddress2, write: RecAddress.prototype.setAddress2 });\n\t                Element_add(RecAddress, { name: \"CITY\", required: true, order: 4, type: String, read: RecAddress.prototype.getCity, write: RecAddress.prototype.setCity });\n\t                Element_add(RecAddress, { name: \"STATE\", required: true, order: 5, type: String, read: RecAddress.prototype.getState, write: RecAddress.prototype.setState });\n\t                Element_add(RecAddress, { name: \"POSTALCODE\", required: true, order: 6, type: String, read: RecAddress.prototype.getPostalCode, write: RecAddress.prototype.setPostalCode });\n\t                Element_add(RecAddress, { name: \"PHONE\", required: false, order: 7, type: String, read: RecAddress.prototype.getPhone, write: RecAddress.prototype.setPhone });\n\t            })(tax1099 = data.tax1099 || (data.tax1099 = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\t///<reference path='PayerAddress'/>\n\t///<reference path='RecAddress'/>\n\t///<reference path='ExtDBInfo'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var tax1099;\n\t            (function (tax1099) {\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                /**\n\t                 * @author Aparna Gawali\n\t                 * aparna.gawali@sungard.com\n\t                 */\n\t                var Tax1099B = (function () {\n\t                    function Tax1099B() {\n\t                    }\n\t                    Tax1099B.prototype.getSrvrtId = function () {\n\t                        return this.srvrtId;\n\t                    };\n\t                    Tax1099B.prototype.setSrvrtId = function (srvrtId) {\n\t                        this.srvrtId = srvrtId;\n\t                    };\n\t                    Tax1099B.prototype.getTaxYear = function () {\n\t                        return this.taxYear;\n\t                    };\n\t                    Tax1099B.prototype.setTaxYear = function (taxYear) {\n\t                        this.taxYear = taxYear;\n\t                    };\n\t                    /**\n\t                     * @return the extDBInfo\n\t                     */\n\t                    Tax1099B.prototype.getExtDBInfo = function () {\n\t                        return this.extDBInfo;\n\t                    };\n\t                    /**\n\t                     * @param extDBInfo the extDBInfo to set\n\t                     */\n\t                    Tax1099B.prototype.setExtDBInfo = function (extDBInfo) {\n\t                        this.extDBInfo = extDBInfo;\n\t                    };\n\t                    /**\n\t                     * @return the payerAddress\n\t                     */\n\t                    Tax1099B.prototype.getPayerAddress = function () {\n\t                        return this.payerAddress;\n\t                    };\n\t                    /**\n\t                     * @param payerAddress the payerAddress to set\n\t                     */\n\t                    Tax1099B.prototype.setPayerAddress = function (payerAddress) {\n\t                        this.payerAddress = payerAddress;\n\t                    };\n\t                    /**\n\t                     * @return the payerId\n\t                     */\n\t                    Tax1099B.prototype.getPayerId = function () {\n\t                        return this.payerId;\n\t                    };\n\t                    /**\n\t                     * @param payerId the payerId to set\n\t                     */\n\t                    Tax1099B.prototype.setPayerId = function (payerId) {\n\t                        this.payerId = payerId;\n\t                    };\n\t                    /**\n\t                     * @return the recAddress\n\t                     */\n\t                    Tax1099B.prototype.getRecAddress = function () {\n\t                        return this.recAddress;\n\t                    };\n\t                    /**\n\t                     * @param recAddress the recAddress to set\n\t                     */\n\t                    Tax1099B.prototype.setRecAddress = function (recAddress) {\n\t                        this.recAddress = recAddress;\n\t                    };\n\t                    /**\n\t                     * @return the recId\n\t                     */\n\t                    Tax1099B.prototype.getRecId = function () {\n\t                        return this.recId;\n\t                    };\n\t                    /**\n\t                     * @param recId the recId to set\n\t                     */\n\t                    Tax1099B.prototype.setRecId = function (recId) {\n\t                        this.recId = recId;\n\t                    };\n\t                    /**\n\t                     * @return the recAcct\n\t                     */\n\t                    Tax1099B.prototype.getRecAcct = function () {\n\t                        return this.recAcct;\n\t                    };\n\t                    /**\n\t                     * @param recAcct the recAcct to set\n\t                     */\n\t                    Tax1099B.prototype.setRecAcct = function (recAcct) {\n\t                        this.recAcct = recAcct;\n\t                    };\n\t                    return Tax1099B;\n\t                })();\n\t                tax1099.Tax1099B = Tax1099B;\n\t                Aggregate_add(Tax1099B, \"TAX1099B_V100\");\n\t                Element_add(Tax1099B, { name: \"SRVRTID\", required: true, order: 0, type: String, read: Tax1099B.prototype.getSrvrtId, write: Tax1099B.prototype.setSrvrtId });\n\t                Element_add(Tax1099B, { name: \"TAXYEAR\", required: true, order: 1, type: String, read: Tax1099B.prototype.getTaxYear, write: Tax1099B.prototype.setTaxYear });\n\t                ChildAggregate_add(Tax1099B, { required: true, order: 2, type: tax1099.ExtDBInfo, read: Tax1099B.prototype.getExtDBInfo, write: Tax1099B.prototype.setExtDBInfo });\n\t                ChildAggregate_add(Tax1099B, { required: true, order: 3, type: tax1099.PayerAddress, read: Tax1099B.prototype.getPayerAddress, write: Tax1099B.prototype.setPayerAddress });\n\t                Element_add(Tax1099B, { name: \"PAYERID\", required: true, order: 4, type: String, read: Tax1099B.prototype.getPayerId, write: Tax1099B.prototype.setPayerId });\n\t                ChildAggregate_add(Tax1099B, { required: true, order: 5, type: tax1099.RecAddress, read: Tax1099B.prototype.getRecAddress, write: Tax1099B.prototype.setRecAddress });\n\t                Element_add(Tax1099B, { name: \"RECID\", required: true, order: 6, type: String, read: Tax1099B.prototype.getRecId, write: Tax1099B.prototype.setRecId });\n\t                Element_add(Tax1099B, { name: \"RECACCT\", required: true, order: 7, type: String, read: Tax1099B.prototype.getRecAcct, write: Tax1099B.prototype.setRecAcct });\n\t            })(tax1099 = data.tax1099 || (data.tax1099 = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\t///<reference path='PayerAddress'/>\n\t///<reference path='RecAddress'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var tax1099;\n\t            (function (tax1099) {\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                /**\n\t                 * @author Aparna Gawali\n\t                 * aparna.gawali@sungard.com\n\t                 */\n\t                var Tax1099DIV = (function () {\n\t                    function Tax1099DIV() {\n\t                    }\n\t                    Tax1099DIV.prototype.getSrvrtId = function () {\n\t                        return this.srvrtId;\n\t                    };\n\t                    Tax1099DIV.prototype.setSrvrtId = function (srvrtId) {\n\t                        this.srvrtId = srvrtId;\n\t                    };\n\t                    Tax1099DIV.prototype.getTaxYear = function () {\n\t                        return this.taxYear;\n\t                    };\n\t                    Tax1099DIV.prototype.setTaxYear = function (taxYear) {\n\t                        this.taxYear = taxYear;\n\t                    };\n\t                    /**\n\t                     * @return the ordDiv\n\t                     */\n\t                    Tax1099DIV.prototype.getOrdDiv = function () {\n\t                        return this.ordDiv;\n\t                    };\n\t                    /**\n\t                     * @param ordDiv the ordDiv to set\n\t                     */\n\t                    Tax1099DIV.prototype.setOrdDiv = function (ordDiv) {\n\t                        this.ordDiv = ordDiv;\n\t                    };\n\t                    /**\n\t                     * @return the qualifiedDiv\n\t                     */\n\t                    Tax1099DIV.prototype.getQualifiedDiv = function () {\n\t                        return this.qualifiedDiv;\n\t                    };\n\t                    /**\n\t                     * @param qualifiedDiv the qualifiedDiv to set\n\t                     */\n\t                    Tax1099DIV.prototype.setQualifiedDiv = function (qualifiedDiv) {\n\t                        this.qualifiedDiv = qualifiedDiv;\n\t                    };\n\t                    /**\n\t                     * @return the totCapGain\n\t                     */\n\t                    Tax1099DIV.prototype.getTotCapGain = function () {\n\t                        return this.totCapGain;\n\t                    };\n\t                    /**\n\t                     * @param totCapGain the totCapGain to set\n\t                     */\n\t                    Tax1099DIV.prototype.setTotCapGain = function (totCapGain) {\n\t                        this.totCapGain = totCapGain;\n\t                    };\n\t                    /**\n\t                     * @return the p28Gain\n\t                     */\n\t                    Tax1099DIV.prototype.getP28Gain = function () {\n\t                        return this.p28Gain;\n\t                    };\n\t                    /**\n\t                     * @param p28Gain the p28Gain to set\n\t                     */\n\t                    Tax1099DIV.prototype.setP28Gain = function (p28Gain) {\n\t                        this.p28Gain = p28Gain;\n\t                    };\n\t                    /**\n\t                     * @return the unrecSec1250\n\t                     */\n\t                    Tax1099DIV.prototype.getUnrecSec1250 = function () {\n\t                        return this.unrecSec1250;\n\t                    };\n\t                    /**\n\t                     * @param unrecSec1250 the unrecSec1250 to set\n\t                     */\n\t                    Tax1099DIV.prototype.setUnrecSec1250 = function (unrecSec1250) {\n\t                        this.unrecSec1250 = unrecSec1250;\n\t                    };\n\t                    /**\n\t                     * @return the sec1202\n\t                     */\n\t                    Tax1099DIV.prototype.getSec1202 = function () {\n\t                        return this.sec1202;\n\t                    };\n\t                    /**\n\t                     * @param sec1202 the sec1202 to set\n\t                     */\n\t                    Tax1099DIV.prototype.setSec1202 = function (sec1202) {\n\t                        this.sec1202 = sec1202;\n\t                    };\n\t                    /**\n\t                     * @return the nonTaxDist\n\t                     */\n\t                    Tax1099DIV.prototype.getNonTaxDist = function () {\n\t                        return this.nonTaxDist;\n\t                    };\n\t                    /**\n\t                     * @param nonTaxDist the nonTaxDist to set\n\t                     */\n\t                    Tax1099DIV.prototype.setNonTaxDist = function (nonTaxDist) {\n\t                        this.nonTaxDist = nonTaxDist;\n\t                    };\n\t                    /**\n\t                     * @return the fedTaxWh\n\t                     */\n\t                    Tax1099DIV.prototype.getFedTaxWh = function () {\n\t                        return this.fedTaxWh;\n\t                    };\n\t                    /**\n\t                     * @param fedTaxWh the fedTaxWh to set\n\t                     */\n\t                    Tax1099DIV.prototype.setFedTaxWh = function (fedTaxWh) {\n\t                        this.fedTaxWh = fedTaxWh;\n\t                    };\n\t                    /**\n\t                     * @return the investExp\n\t                     */\n\t                    Tax1099DIV.prototype.getInvestExp = function () {\n\t                        return this.investExp;\n\t                    };\n\t                    /**\n\t                     * @param investExp the investExp to set\n\t                     */\n\t                    Tax1099DIV.prototype.setInvestExp = function (investExp) {\n\t                        this.investExp = investExp;\n\t                    };\n\t                    /**\n\t                     * @return the forTaxPd\n\t                     */\n\t                    Tax1099DIV.prototype.getForTaxPd = function () {\n\t                        return this.forTaxPd;\n\t                    };\n\t                    /**\n\t                     * @param forTaxPd the forTaxPd to set\n\t                     */\n\t                    Tax1099DIV.prototype.setForTaxPd = function (forTaxPd) {\n\t                        this.forTaxPd = forTaxPd;\n\t                    };\n\t                    /**\n\t                     * @return the cashLiq\n\t                     */\n\t                    Tax1099DIV.prototype.getCashLiq = function () {\n\t                        return this.cashLiq;\n\t                    };\n\t                    /**\n\t                     * @param cashLiq the cashLiq to set\n\t                     */\n\t                    Tax1099DIV.prototype.setCashLiq = function (cashLiq) {\n\t                        this.cashLiq = cashLiq;\n\t                    };\n\t                    /**\n\t                     * @return the nonCashLiq\n\t                     */\n\t                    Tax1099DIV.prototype.getNonCashLiq = function () {\n\t                        return this.nonCashLiq;\n\t                    };\n\t                    /**\n\t                     * @param nonCashLiq the nonCashLiq to set\n\t                     */\n\t                    Tax1099DIV.prototype.setNonCashLiq = function (nonCashLiq) {\n\t                        this.nonCashLiq = nonCashLiq;\n\t                    };\n\t                    /**\n\t                     * @return the payerAddress\n\t                     */\n\t                    Tax1099DIV.prototype.getPayerAddress = function () {\n\t                        return this.payerAddress;\n\t                    };\n\t                    /**\n\t                     * @param payerAddress the payerAddress to set\n\t                     */\n\t                    Tax1099DIV.prototype.setPayerAddress = function (payerAddress) {\n\t                        this.payerAddress = payerAddress;\n\t                    };\n\t                    /**\n\t                     * @return the payerId\n\t                     */\n\t                    Tax1099DIV.prototype.getPayerId = function () {\n\t                        return this.payerId;\n\t                    };\n\t                    /**\n\t                     * @param payerId the payerId to set\n\t                     */\n\t                    Tax1099DIV.prototype.setPayerId = function (payerId) {\n\t                        this.payerId = payerId;\n\t                    };\n\t                    /**\n\t                     * @return the recAddress\n\t                     */\n\t                    Tax1099DIV.prototype.getRecAddress = function () {\n\t                        return this.recAddress;\n\t                    };\n\t                    /**\n\t                     * @param recAddress the recAddress to set\n\t                     */\n\t                    Tax1099DIV.prototype.setRecAddress = function (recAddress) {\n\t                        this.recAddress = recAddress;\n\t                    };\n\t                    /**\n\t                     * @return the recId\n\t                     */\n\t                    Tax1099DIV.prototype.getRecId = function () {\n\t                        return this.recId;\n\t                    };\n\t                    /**\n\t                     * @param recId the recId to set\n\t                     */\n\t                    Tax1099DIV.prototype.setRecId = function (recId) {\n\t                        this.recId = recId;\n\t                    };\n\t                    /**\n\t                     * @return the recAcct\n\t                     */\n\t                    Tax1099DIV.prototype.getRecAcct = function () {\n\t                        return this.recAcct;\n\t                    };\n\t                    /**\n\t                     * @param recAcct the recAcct to set\n\t                     */\n\t                    Tax1099DIV.prototype.setRecAcct = function (recAcct) {\n\t                        this.recAcct = recAcct;\n\t                    };\n\t                    return Tax1099DIV;\n\t                })();\n\t                tax1099.Tax1099DIV = Tax1099DIV;\n\t                Aggregate_add(Tax1099DIV, \"TAX1099DIV_V100\");\n\t                Element_add(Tax1099DIV, { name: \"SRVRTID\", required: false, order: 0, type: String, read: Tax1099DIV.prototype.getSrvrtId, write: Tax1099DIV.prototype.setSrvrtId });\n\t                Element_add(Tax1099DIV, { name: \"TAXYEAR\", required: false, order: 1, type: String, read: Tax1099DIV.prototype.getTaxYear, write: Tax1099DIV.prototype.setTaxYear });\n\t                Element_add(Tax1099DIV, { name: \"ORDDIV\", required: false, order: 2, type: String, read: Tax1099DIV.prototype.getOrdDiv, write: Tax1099DIV.prototype.setOrdDiv });\n\t                Element_add(Tax1099DIV, { name: \"QUALIFIEDDIV\", required: false, order: 3, type: String, read: Tax1099DIV.prototype.getQualifiedDiv, write: Tax1099DIV.prototype.setQualifiedDiv });\n\t                Element_add(Tax1099DIV, { name: \"TOTCAPGAIN\", required: false, order: 4, type: String, read: Tax1099DIV.prototype.getTotCapGain, write: Tax1099DIV.prototype.setTotCapGain });\n\t                Element_add(Tax1099DIV, { name: \"P28GAIN\", required: false, order: 5, type: String, read: Tax1099DIV.prototype.getP28Gain, write: Tax1099DIV.prototype.setP28Gain });\n\t                Element_add(Tax1099DIV, { name: \"UNRECSEC1250\", required: false, order: 6, type: String, read: Tax1099DIV.prototype.getUnrecSec1250, write: Tax1099DIV.prototype.setUnrecSec1250 });\n\t                Element_add(Tax1099DIV, { name: \"SEC1202\", required: false, order: 7, type: String, read: Tax1099DIV.prototype.getSec1202, write: Tax1099DIV.prototype.setSec1202 });\n\t                Element_add(Tax1099DIV, { name: \"NONTAXDIST\", required: false, order: 8, type: String, read: Tax1099DIV.prototype.getNonTaxDist, write: Tax1099DIV.prototype.setNonTaxDist });\n\t                Element_add(Tax1099DIV, { name: \"FEDTAXWH\", required: false, order: 9, type: String, read: Tax1099DIV.prototype.getFedTaxWh, write: Tax1099DIV.prototype.setFedTaxWh });\n\t                Element_add(Tax1099DIV, { name: \"INVESTEXP\", required: false, order: 10, type: String, read: Tax1099DIV.prototype.getInvestExp, write: Tax1099DIV.prototype.setInvestExp });\n\t                Element_add(Tax1099DIV, { name: \"FORTAXPD\", required: false, order: 11, type: String, read: Tax1099DIV.prototype.getForTaxPd, write: Tax1099DIV.prototype.setForTaxPd });\n\t                Element_add(Tax1099DIV, { name: \"CASHLIQ\", required: false, order: 12, type: String, read: Tax1099DIV.prototype.getCashLiq, write: Tax1099DIV.prototype.setCashLiq });\n\t                Element_add(Tax1099DIV, { name: \"NONCASHLIQ\", required: false, order: 13, type: String, read: Tax1099DIV.prototype.getNonCashLiq, write: Tax1099DIV.prototype.setNonCashLiq });\n\t                ChildAggregate_add(Tax1099DIV, { required: true, order: 14, type: tax1099.PayerAddress, read: Tax1099DIV.prototype.getPayerAddress, write: Tax1099DIV.prototype.setPayerAddress });\n\t                Element_add(Tax1099DIV, { name: \"PAYERID\", required: true, order: 15, type: String, read: Tax1099DIV.prototype.getPayerId, write: Tax1099DIV.prototype.setPayerId });\n\t                ChildAggregate_add(Tax1099DIV, { required: true, order: 16, type: tax1099.RecAddress, read: Tax1099DIV.prototype.getRecAddress, write: Tax1099DIV.prototype.setRecAddress });\n\t                Element_add(Tax1099DIV, { name: \"RECID\", required: true, order: 17, type: String, read: Tax1099DIV.prototype.getRecId, write: Tax1099DIV.prototype.setRecId });\n\t                Element_add(Tax1099DIV, { name: \"RECACCT\", required: true, order: 18, type: String, read: Tax1099DIV.prototype.getRecAcct, write: Tax1099DIV.prototype.setRecAcct });\n\t            })(tax1099 = data.tax1099 || (data.tax1099 = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\t///<reference path='PayerAddress'/>\n\t///<reference path='RecAddress'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var tax1099;\n\t            (function (tax1099) {\n\t                var PayerAddress = ofx4js.domain.data.tax1099.PayerAddress;\n\t                var RecAddress = ofx4js.domain.data.tax1099.RecAddress;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                /**\n\t                 * @author Aparna Gawali\n\t                 * aparna.gawali@sungard.com\n\t                 */\n\t                var Tax1099INT = (function () {\n\t                    function Tax1099INT() {\n\t                    }\n\t                    Tax1099INT.prototype.getSrvrtId = function () {\n\t                        return this.srvrtId;\n\t                    };\n\t                    Tax1099INT.prototype.setSrvrtId = function (srvrtId) {\n\t                        this.srvrtId = srvrtId;\n\t                    };\n\t                    Tax1099INT.prototype.getTaxYear = function () {\n\t                        return this.taxYear;\n\t                    };\n\t                    Tax1099INT.prototype.setTaxYear = function (taxYear) {\n\t                        this.taxYear = taxYear;\n\t                    };\n\t                    /**\n\t                     * @return the intIncome\n\t                     */\n\t                    Tax1099INT.prototype.getIntIncome = function () {\n\t                        return this.intIncome;\n\t                    };\n\t                    /**\n\t                     * @param intIncome the intIncome to set\n\t                     */\n\t                    Tax1099INT.prototype.setIntIncome = function (intIncome) {\n\t                        this.intIncome = intIncome;\n\t                    };\n\t                    /**\n\t                     * @return the erlWithPen\n\t                     */\n\t                    Tax1099INT.prototype.getErlWithPen = function () {\n\t                        return this.erlWithPen;\n\t                    };\n\t                    /**\n\t                     * @param erlWithPen the erlWithPen to set\n\t                     */\n\t                    Tax1099INT.prototype.setErlWithPen = function (erlWithPen) {\n\t                        this.erlWithPen = erlWithPen;\n\t                    };\n\t                    /**\n\t                     * @return the intUsbndtrs\n\t                     */\n\t                    Tax1099INT.prototype.getIntUsbndtrs = function () {\n\t                        return this.intUsbndtrs;\n\t                    };\n\t                    /**\n\t                     * @param intUsbndtrs the intUsbndtrs to set\n\t                     */\n\t                    Tax1099INT.prototype.setIntUsbndtrs = function (intUsbndtrs) {\n\t                        this.intUsbndtrs = intUsbndtrs;\n\t                    };\n\t                    /**\n\t                     * @return the fedTaxWh\n\t                     */\n\t                    Tax1099INT.prototype.getFedTaxWh = function () {\n\t                        return this.fedTaxWh;\n\t                    };\n\t                    /**\n\t                     * @param fedTaxWh the fedTaxWh to set\n\t                     */\n\t                    Tax1099INT.prototype.setFedTaxWh = function (fedTaxWh) {\n\t                        this.fedTaxWh = fedTaxWh;\n\t                    };\n\t                    /**\n\t                     * @return the investExp\n\t                     */\n\t                    Tax1099INT.prototype.getInvestExp = function () {\n\t                        return this.investExp;\n\t                    };\n\t                    /**\n\t                     * @param investExp the investExp to set\n\t                     */\n\t                    Tax1099INT.prototype.setInvestExp = function (investExp) {\n\t                        this.investExp = investExp;\n\t                    };\n\t                    /**\n\t                     * @return the forTaxPd\n\t                     */\n\t                    Tax1099INT.prototype.getForTaxPd = function () {\n\t                        return this.forTaxPd;\n\t                    };\n\t                    /**\n\t                     * @param forTaxPd the forTaxPd to set\n\t                     */\n\t                    Tax1099INT.prototype.setForTaxPd = function (forTaxPd) {\n\t                        this.forTaxPd = forTaxPd;\n\t                    };\n\t                    /**\n\t                     * @return the payerAddress\n\t                     */\n\t                    Tax1099INT.prototype.getPayerAddress = function () {\n\t                        return this.payerAddress;\n\t                    };\n\t                    /**\n\t                     * @param payerAddress the payerAddress to set\n\t                     */\n\t                    Tax1099INT.prototype.setPayerAddress = function (payerAddress) {\n\t                        this.payerAddress = payerAddress;\n\t                    };\n\t                    /**\n\t                     * @return the payerId\n\t                     */\n\t                    Tax1099INT.prototype.getPayerId = function () {\n\t                        return this.payerId;\n\t                    };\n\t                    /**\n\t                     * @param payerId the payerId to set\n\t                     */\n\t                    Tax1099INT.prototype.setPayerId = function (payerId) {\n\t                        this.payerId = payerId;\n\t                    };\n\t                    /**\n\t                     * @return the recAddress\n\t                     */\n\t                    Tax1099INT.prototype.getRecAddress = function () {\n\t                        return this.recAddress;\n\t                    };\n\t                    /**\n\t                     * @param recAddress the recAddress to set\n\t                     */\n\t                    Tax1099INT.prototype.setRecAddress = function (recAddress) {\n\t                        this.recAddress = recAddress;\n\t                    };\n\t                    /**\n\t                     * @return the recId\n\t                     */\n\t                    Tax1099INT.prototype.getRecId = function () {\n\t                        return this.recId;\n\t                    };\n\t                    /**\n\t                     * @param recId the recId to set\n\t                     */\n\t                    Tax1099INT.prototype.setRecId = function (recId) {\n\t                        this.recId = recId;\n\t                    };\n\t                    /**\n\t                     * @return the recAcct\n\t                     */\n\t                    Tax1099INT.prototype.getRecAcct = function () {\n\t                        return this.recAcct;\n\t                    };\n\t                    /**\n\t                     * @param recAcct the recAcct to set\n\t                     */\n\t                    Tax1099INT.prototype.setRecAcct = function (recAcct) {\n\t                        this.recAcct = recAcct;\n\t                    };\n\t                    /**\n\t                     * @return the taxExemptInt\n\t                     */\n\t                    Tax1099INT.prototype.getTaxExemptInt = function () {\n\t                        return this.taxExemptInt;\n\t                    };\n\t                    /**\n\t                     * @param taxExemptInt the taxExemptInt to set\n\t                     */\n\t                    Tax1099INT.prototype.setTaxExemptInt = function (taxExemptInt) {\n\t                        this.taxExemptInt = taxExemptInt;\n\t                    };\n\t                    /**\n\t                     * @return the specifiedPabInt\n\t                     */\n\t                    Tax1099INT.prototype.getSpecifiedPabInt = function () {\n\t                        return this.specifiedPabInt;\n\t                    };\n\t                    /**\n\t                     * @param specifiedPabInt the specifiedPabInt to set\n\t                     */\n\t                    Tax1099INT.prototype.setSpecifiedPabInt = function (specifiedPabInt) {\n\t                        this.specifiedPabInt = specifiedPabInt;\n\t                    };\n\t                    return Tax1099INT;\n\t                })();\n\t                tax1099.Tax1099INT = Tax1099INT;\n\t                Aggregate_add(Tax1099INT, \"TAX1099INT_V100\");\n\t                Element_add(Tax1099INT, { name: \"SRVRTID\", required: true, order: 0, type: String, read: Tax1099INT.prototype.getSrvrtId, write: Tax1099INT.prototype.setSrvrtId });\n\t                Element_add(Tax1099INT, { name: \"TAXYEAR\", required: true, order: 1, type: String, read: Tax1099INT.prototype.getTaxYear, write: Tax1099INT.prototype.setTaxYear });\n\t                Element_add(Tax1099INT, { name: \"INTINCOME\", required: false, order: 2, type: String, read: Tax1099INT.prototype.getIntIncome, write: Tax1099INT.prototype.setIntIncome });\n\t                Element_add(Tax1099INT, { name: \"ERLWITHPEN\", required: false, order: 3, type: String, read: Tax1099INT.prototype.getErlWithPen, write: Tax1099INT.prototype.setErlWithPen });\n\t                Element_add(Tax1099INT, { name: \"INTUSBNDTRS\", required: false, order: 4, type: String, read: Tax1099INT.prototype.getIntUsbndtrs, write: Tax1099INT.prototype.setIntUsbndtrs });\n\t                Element_add(Tax1099INT, { name: \"FEDTAXWH\", required: false, order: 5, type: String, read: Tax1099INT.prototype.getFedTaxWh, write: Tax1099INT.prototype.setFedTaxWh });\n\t                Element_add(Tax1099INT, { name: \"INVESTEXP\", required: false, order: 6, type: String, read: Tax1099INT.prototype.getInvestExp, write: Tax1099INT.prototype.setInvestExp });\n\t                Element_add(Tax1099INT, { name: \"FORTAXPD\", required: false, order: 7, type: String, read: Tax1099INT.prototype.getForTaxPd, write: Tax1099INT.prototype.setForTaxPd });\n\t                ChildAggregate_add(Tax1099INT, { required: true, order: 8, type: PayerAddress, read: Tax1099INT.prototype.getPayerAddress, write: Tax1099INT.prototype.setPayerAddress });\n\t                Element_add(Tax1099INT, { name: \"PAYERID\", required: true, order: 9, type: String, read: Tax1099INT.prototype.getPayerId, write: Tax1099INT.prototype.setPayerId });\n\t                ChildAggregate_add(Tax1099INT, { required: true, order: 10, type: RecAddress, read: Tax1099INT.prototype.getRecAddress, write: Tax1099INT.prototype.setRecAddress });\n\t                Element_add(Tax1099INT, { name: \"RECID\", required: true, order: 11, type: String, read: Tax1099INT.prototype.getRecId, write: Tax1099INT.prototype.setRecId });\n\t                Element_add(Tax1099INT, { name: \"RECACCT\", required: true, order: 12, type: String, read: Tax1099INT.prototype.getRecAcct, write: Tax1099INT.prototype.setRecAcct });\n\t                Element_add(Tax1099INT, { name: \"TAXEXEMPTINT\", required: false, order: 13, type: String, read: Tax1099INT.prototype.getTaxExemptInt, write: Tax1099INT.prototype.setTaxExemptInt });\n\t                Element_add(Tax1099INT, { name: \"SPECIFIEDPABINT\", required: false, order: 14, type: String, read: Tax1099INT.prototype.getSpecifiedPabInt, write: Tax1099INT.prototype.setSpecifiedPabInt });\n\t            })(tax1099 = data.tax1099 || (data.tax1099 = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\t///<reference path='PayerAddress'/>\n\t///<reference path='RecAddress'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var tax1099;\n\t            (function (tax1099) {\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                /**\n\t                 * @author Aparna Gawali\n\t                 * aparna.gawali@sungard.com\n\t                 */\n\t                var Tax1099MISC = (function () {\n\t                    function Tax1099MISC() {\n\t                    }\n\t                    Tax1099MISC.prototype.getSrvrtId = function () {\n\t                        return this.srvrtId;\n\t                    };\n\t                    Tax1099MISC.prototype.setSrvrtId = function (srvrtId) {\n\t                        this.srvrtId = srvrtId;\n\t                    };\n\t                    Tax1099MISC.prototype.getTaxYear = function () {\n\t                        return this.taxYear;\n\t                    };\n\t                    Tax1099MISC.prototype.setTaxYear = function (taxYear) {\n\t                        this.taxYear = taxYear;\n\t                    };\n\t                    /**\n\t                     * @return the royalties\n\t                     */\n\t                    Tax1099MISC.prototype.getRoyalties = function () {\n\t                        return this.royalties;\n\t                    };\n\t                    /**\n\t                     * @param royalties the royalties to set\n\t                     */\n\t                    Tax1099MISC.prototype.setRoyalties = function (royalties) {\n\t                        this.royalties = royalties;\n\t                    };\n\t                    /**\n\t                     * @return the otherIncome\n\t                     */\n\t                    Tax1099MISC.prototype.getOtherIncome = function () {\n\t                        return this.otherIncome;\n\t                    };\n\t                    /**\n\t                     * @param otherIncome the otherIncome to set\n\t                     */\n\t                    Tax1099MISC.prototype.setOtherIncome = function (otherIncome) {\n\t                        this.otherIncome = otherIncome;\n\t                    };\n\t                    /**\n\t                     * @return the fedTaxWh\n\t                     */\n\t                    Tax1099MISC.prototype.getFedTaxWh = function () {\n\t                        return this.fedTaxWh;\n\t                    };\n\t                    /**\n\t                     * @param fedTaxWh the fedTaxWh to set\n\t                     */\n\t                    Tax1099MISC.prototype.setFedTaxWh = function (fedTaxWh) {\n\t                        this.fedTaxWh = fedTaxWh;\n\t                    };\n\t                    /**\n\t                     * @return the subPmts\n\t                     */\n\t                    Tax1099MISC.prototype.getSubPmts = function () {\n\t                        return this.subPmts;\n\t                    };\n\t                    /**\n\t                     * @param subPmts the subPmts to set\n\t                     */\n\t                    Tax1099MISC.prototype.setSubPmts = function (subPmts) {\n\t                        this.subPmts = subPmts;\n\t                    };\n\t                    /**\n\t                     * @return the payerAddress\n\t                     */\n\t                    Tax1099MISC.prototype.getPayerAddress = function () {\n\t                        return this.payerAddress;\n\t                    };\n\t                    /**\n\t                     * @param payerAddress the payerAddress to set\n\t                     */\n\t                    Tax1099MISC.prototype.setPayerAddress = function (payerAddress) {\n\t                        this.payerAddress = payerAddress;\n\t                    };\n\t                    /**\n\t                     * @return the payerId\n\t                     */\n\t                    Tax1099MISC.prototype.getPayerId = function () {\n\t                        return this.payerId;\n\t                    };\n\t                    /**\n\t                     * @param payerId the payerId to set\n\t                     */\n\t                    Tax1099MISC.prototype.setPayerId = function (payerId) {\n\t                        this.payerId = payerId;\n\t                    };\n\t                    /**\n\t                     * @return the recAddress\n\t                     */\n\t                    Tax1099MISC.prototype.getRecAddress = function () {\n\t                        return this.recAddress;\n\t                    };\n\t                    /**\n\t                     * @param recAddress the recAddress to set\n\t                     */\n\t                    Tax1099MISC.prototype.setRecAddress = function (recAddress) {\n\t                        this.recAddress = recAddress;\n\t                    };\n\t                    /**\n\t                     * @return the recId\n\t                     */\n\t                    Tax1099MISC.prototype.getRecId = function () {\n\t                        return this.recId;\n\t                    };\n\t                    /**\n\t                     * @param recId the recId to set\n\t                     */\n\t                    Tax1099MISC.prototype.setRecId = function (recId) {\n\t                        this.recId = recId;\n\t                    };\n\t                    /**\n\t                     * @return the recAcct\n\t                     */\n\t                    Tax1099MISC.prototype.getRecAcct = function () {\n\t                        return this.recAcct;\n\t                    };\n\t                    /**\n\t                     * @param recAcct the recAcct to set\n\t                     */\n\t                    Tax1099MISC.prototype.setRecAcct = function (recAcct) {\n\t                        this.recAcct = recAcct;\n\t                    };\n\t                    return Tax1099MISC;\n\t                })();\n\t                tax1099.Tax1099MISC = Tax1099MISC;\n\t                Aggregate_add(Tax1099MISC, \"TAX1099MISC_V100\");\n\t                Element_add(Tax1099MISC, { name: \"SRVRTID\", required: true, order: 0, type: String, read: Tax1099MISC.prototype.getSrvrtId, write: Tax1099MISC.prototype.setSrvrtId });\n\t                Element_add(Tax1099MISC, { name: \"TAXYEAR\", required: true, order: 1, type: String, read: Tax1099MISC.prototype.getTaxYear, write: Tax1099MISC.prototype.setTaxYear });\n\t                Element_add(Tax1099MISC, { name: \"ROYALTIES\", required: false, order: 2, type: String, read: Tax1099MISC.prototype.getRoyalties, write: Tax1099MISC.prototype.setRoyalties });\n\t                Element_add(Tax1099MISC, { name: \"OTHERINCOME\", required: false, order: 3, type: String, read: Tax1099MISC.prototype.getOtherIncome, write: Tax1099MISC.prototype.setOtherIncome });\n\t                Element_add(Tax1099MISC, { name: \"FEDTAXWH\", required: false, order: 4, type: String, read: Tax1099MISC.prototype.getFedTaxWh, write: Tax1099MISC.prototype.setFedTaxWh });\n\t                Element_add(Tax1099MISC, { name: \"SUBPMTS\", required: false, order: 5, type: String, read: Tax1099MISC.prototype.getSubPmts, write: Tax1099MISC.prototype.setSubPmts });\n\t                ChildAggregate_add(Tax1099MISC, { required: true, order: 6, type: tax1099.PayerAddress, read: Tax1099MISC.prototype.getPayerAddress, write: Tax1099MISC.prototype.setPayerAddress });\n\t                Element_add(Tax1099MISC, { name: \"PAYERID\", required: true, order: 7, type: String, read: Tax1099MISC.prototype.getPayerId, write: Tax1099MISC.prototype.setPayerId });\n\t                ChildAggregate_add(Tax1099MISC, { required: true, order: 8, type: tax1099.RecAddress, read: Tax1099MISC.prototype.getRecAddress, write: Tax1099MISC.prototype.setRecAddress });\n\t                Element_add(Tax1099MISC, { name: \"RECID\", required: true, order: 9, type: String, read: Tax1099MISC.prototype.getRecId, write: Tax1099MISC.prototype.setRecId });\n\t                Element_add(Tax1099MISC, { name: \"RECACCT\", required: true, order: 10, type: String, read: Tax1099MISC.prototype.getRecAcct, write: Tax1099MISC.prototype.setRecAcct });\n\t            })(tax1099 = data.tax1099 || (data.tax1099 = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\t///<reference path='PayerAddress'/>\n\t///<reference path='RecAddress'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var tax1099;\n\t            (function (tax1099) {\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                /**\n\t                 * @author Aparna Gawali\n\t                 * aparna.gawali@sungard.com\n\t                 */\n\t                var Tax1099OID = (function () {\n\t                    function Tax1099OID() {\n\t                    }\n\t                    Tax1099OID.prototype.getSrvrtId = function () {\n\t                        return this.srvrtId;\n\t                    };\n\t                    Tax1099OID.prototype.setSrvrtId = function (srvrtId) {\n\t                        this.srvrtId = srvrtId;\n\t                    };\n\t                    Tax1099OID.prototype.getTaxYear = function () {\n\t                        return this.taxYear;\n\t                    };\n\t                    Tax1099OID.prototype.setTaxYear = function (taxYear) {\n\t                        this.taxYear = taxYear;\n\t                    };\n\t                    /**\n\t                     * @return the originalDisc\n\t                     */\n\t                    Tax1099OID.prototype.getOriginalDisc = function () {\n\t                        return this.originalDisc;\n\t                    };\n\t                    /**\n\t                     * @param originalDisc the originalDisc to set\n\t                     */\n\t                    Tax1099OID.prototype.setOriginalDisc = function (originalDisc) {\n\t                        this.originalDisc = originalDisc;\n\t                    };\n\t                    /**\n\t                     * @return the otherPerInt\n\t                     */\n\t                    Tax1099OID.prototype.getOtherPerInt = function () {\n\t                        return this.otherPerInt;\n\t                    };\n\t                    /**\n\t                     * @param otherPerInt the otherPerInt to set\n\t                     */\n\t                    Tax1099OID.prototype.setOtherPerInt = function (otherPerInt) {\n\t                        this.otherPerInt = otherPerInt;\n\t                    };\n\t                    /**\n\t                     * @return the erlWithPen\n\t                     */\n\t                    Tax1099OID.prototype.getErlWithPen = function () {\n\t                        return this.erlWithPen;\n\t                    };\n\t                    /**\n\t                     * @param erlWithPen the erlWithPen to set\n\t                     */\n\t                    Tax1099OID.prototype.setErlWithPen = function (erlWithPen) {\n\t                        this.erlWithPen = erlWithPen;\n\t                    };\n\t                    /**\n\t                     * @return the fedTaxWh\n\t                     */\n\t                    Tax1099OID.prototype.getFedTaxWh = function () {\n\t                        return this.fedTaxWh;\n\t                    };\n\t                    /**\n\t                     * @param fedTaxWh the fedTaxWh to set\n\t                     */\n\t                    Tax1099OID.prototype.setFedTaxWh = function (fedTaxWh) {\n\t                        this.fedTaxWh = fedTaxWh;\n\t                    };\n\t                    /**\n\t                     * @return the desc\n\t                     */\n\t                    Tax1099OID.prototype.getDesc = function () {\n\t                        return this.desc;\n\t                    };\n\t                    /**\n\t                     * @param desc the desc to set\n\t                     */\n\t                    Tax1099OID.prototype.setDesc = function (desc) {\n\t                        this.desc = desc;\n\t                    };\n\t                    /**\n\t                     * @return the oidOnUstres\n\t                     */\n\t                    Tax1099OID.prototype.getOidOnUstres = function () {\n\t                        return this.oidOnUstres;\n\t                    };\n\t                    /**\n\t                     * @param oidOnUstres the oidOnUstres to set\n\t                     */\n\t                    Tax1099OID.prototype.setOidOnUstres = function (oidOnUstres) {\n\t                        this.oidOnUstres = oidOnUstres;\n\t                    };\n\t                    /**\n\t                     * @return the investExp\n\t                     */\n\t                    Tax1099OID.prototype.getInvestExp = function () {\n\t                        return this.investExp;\n\t                    };\n\t                    /**\n\t                     * @param investExp the investExp to set\n\t                     */\n\t                    Tax1099OID.prototype.setInvestExp = function (investExp) {\n\t                        this.investExp = investExp;\n\t                    };\n\t                    /**\n\t                     * @return the payerAddress\n\t                     */\n\t                    Tax1099OID.prototype.getPayerAddress = function () {\n\t                        return this.payerAddress;\n\t                    };\n\t                    /**\n\t                     * @param payerAddress the payerAddress to set\n\t                     */\n\t                    Tax1099OID.prototype.setPayerAddress = function (payerAddress) {\n\t                        this.payerAddress = payerAddress;\n\t                    };\n\t                    /**\n\t                     * @return the payerId\n\t                     */\n\t                    Tax1099OID.prototype.getPayerId = function () {\n\t                        return this.payerId;\n\t                    };\n\t                    /**\n\t                     * @param payerId the payerId to set\n\t                     */\n\t                    Tax1099OID.prototype.setPayerId = function (payerId) {\n\t                        this.payerId = payerId;\n\t                    };\n\t                    /**\n\t                     * @return the recAddress\n\t                     */\n\t                    Tax1099OID.prototype.getRecAddress = function () {\n\t                        return this.recAddress;\n\t                    };\n\t                    /**\n\t                     * @param recAddress the recAddress to set\n\t                     */\n\t                    Tax1099OID.prototype.setRecAddress = function (recAddress) {\n\t                        this.recAddress = recAddress;\n\t                    };\n\t                    /**\n\t                     * @return the recId\n\t                     */\n\t                    Tax1099OID.prototype.getRecId = function () {\n\t                        return this.recId;\n\t                    };\n\t                    /**\n\t                     * @param recId the recId to set\n\t                     */\n\t                    Tax1099OID.prototype.setRecId = function (recId) {\n\t                        this.recId = recId;\n\t                    };\n\t                    /**\n\t                     * @return the recAcct\n\t                     */\n\t                    Tax1099OID.prototype.getRecAcct = function () {\n\t                        return this.recAcct;\n\t                    };\n\t                    /**\n\t                     * @param recAcct the recAcct to set\n\t                     */\n\t                    Tax1099OID.prototype.setRecAcct = function (recAcct) {\n\t                        this.recAcct = recAcct;\n\t                    };\n\t                    return Tax1099OID;\n\t                })();\n\t                tax1099.Tax1099OID = Tax1099OID;\n\t                Aggregate_add(Tax1099OID, \"TAX1099OID_V100\");\n\t                Element_add(Tax1099OID, { name: \"SRVRTID\", required: true, order: 0, type: String, read: Tax1099OID.prototype.getSrvrtId, write: Tax1099OID.prototype.setSrvrtId });\n\t                Element_add(Tax1099OID, { name: \"TAXYEAR\", required: true, order: 1, type: String, read: Tax1099OID.prototype.getTaxYear, write: Tax1099OID.prototype.setTaxYear });\n\t                Element_add(Tax1099OID, { name: \"ORIGISDISC\", required: false, order: 2, type: String, read: Tax1099OID.prototype.getOriginalDisc, write: Tax1099OID.prototype.setOriginalDisc });\n\t                Element_add(Tax1099OID, { name: \"OTHERPERINT\", required: false, order: 3, type: String, read: Tax1099OID.prototype.getOtherPerInt, write: Tax1099OID.prototype.setOtherPerInt });\n\t                Element_add(Tax1099OID, { name: \"ERLWITHPEN\", required: false, order: 4, type: String, read: Tax1099OID.prototype.getErlWithPen, write: Tax1099OID.prototype.setErlWithPen });\n\t                Element_add(Tax1099OID, { name: \"FEDTAXWH\", required: false, order: 5, type: String, read: Tax1099OID.prototype.getFedTaxWh, write: Tax1099OID.prototype.setFedTaxWh });\n\t                Element_add(Tax1099OID, { name: \"DESCRIPTION\", required: true, order: 6, type: String, read: Tax1099OID.prototype.getDesc, write: Tax1099OID.prototype.setDesc });\n\t                Element_add(Tax1099OID, { name: \"OIDONUSTRES\", required: false, order: 7, type: String, read: Tax1099OID.prototype.getOidOnUstres, write: Tax1099OID.prototype.setOidOnUstres });\n\t                Element_add(Tax1099OID, { name: \"INVESTEXP\", required: false, order: 8, type: String, read: Tax1099OID.prototype.getInvestExp, write: Tax1099OID.prototype.setInvestExp });\n\t                ChildAggregate_add(Tax1099OID, { required: true, order: 9, type: tax1099.PayerAddress, read: Tax1099OID.prototype.getPayerAddress, write: Tax1099OID.prototype.setPayerAddress });\n\t                Element_add(Tax1099OID, { name: \"PAYERID\", required: true, order: 10, type: String, read: Tax1099OID.prototype.getPayerId, write: Tax1099OID.prototype.setPayerId });\n\t                ChildAggregate_add(Tax1099OID, { required: true, order: 11, type: tax1099.RecAddress, read: Tax1099OID.prototype.getRecAddress, write: Tax1099OID.prototype.setRecAddress });\n\t                Element_add(Tax1099OID, { name: \"RECID\", required: true, order: 12, type: String, read: Tax1099OID.prototype.getRecId, write: Tax1099OID.prototype.setRecId });\n\t                Element_add(Tax1099OID, { name: \"RECACCT\", required: true, order: 13, type: String, read: Tax1099OID.prototype.getRecAcct, write: Tax1099OID.prototype.setRecAcct });\n\t            })(tax1099 = data.tax1099 || (data.tax1099 = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\t///<reference path='PayerAddress'/>\n\t///<reference path='RecAddress'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var tax1099;\n\t            (function (tax1099) {\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                /**\n\t                 * @author Aparna Gawali\n\t                 * aparna.gawali@sungard.com\n\t                 */\n\t                var Tax1099R = (function () {\n\t                    function Tax1099R() {\n\t                    }\n\t                    Tax1099R.prototype.getSrvrtId = function () {\n\t                        return this.srvrtId;\n\t                    };\n\t                    Tax1099R.prototype.setSrvrtId = function (srvrtId) {\n\t                        this.srvrtId = srvrtId;\n\t                    };\n\t                    Tax1099R.prototype.getTaxYear = function () {\n\t                        return this.taxYear;\n\t                    };\n\t                    Tax1099R.prototype.setTaxYear = function (taxYear) {\n\t                        this.taxYear = taxYear;\n\t                    };\n\t                    /**\n\t                       * @return the grossDist\n\t                       */\n\t                    Tax1099R.prototype.getGrossDist = function () {\n\t                        return this.grossDist;\n\t                    };\n\t                    /**\n\t                     * @param grossDist the grossDist to set\n\t                     */\n\t                    Tax1099R.prototype.setGrossDist = function (grossDist) {\n\t                        this.grossDist = grossDist;\n\t                    };\n\t                    /**\n\t                     * @return the taxAmt\n\t                     */\n\t                    Tax1099R.prototype.getTaxAmt = function () {\n\t                        return this.taxAmt;\n\t                    };\n\t                    /**\n\t                     * @param taxAmt the taxAmt to set\n\t                     */\n\t                    Tax1099R.prototype.setTaxAmt = function (taxAmt) {\n\t                        this.taxAmt = taxAmt;\n\t                    };\n\t                    /**\n\t                     * @return the taxAmtNd\n\t                     */\n\t                    Tax1099R.prototype.getTaxAmtNd = function () {\n\t                        return this.taxAmtNd;\n\t                    };\n\t                    /**\n\t                     * @param taxAmtNd the taxAmtNd to set\n\t                     */\n\t                    Tax1099R.prototype.setTaxAmtNd = function (taxAmtNd) {\n\t                        this.taxAmtNd = taxAmtNd;\n\t                    };\n\t                    /**\n\t                     * @return the capGain\n\t                     */\n\t                    Tax1099R.prototype.getCapGain = function () {\n\t                        return this.capGain;\n\t                    };\n\t                    /**\n\t                     * @param capGain the capGain to set\n\t                     */\n\t                    Tax1099R.prototype.setCapGain = function (capGain) {\n\t                        this.capGain = capGain;\n\t                    };\n\t                    /**\n\t                     * @return the fedTaxWh\n\t                     */\n\t                    Tax1099R.prototype.getFedTaxWh = function () {\n\t                        return this.fedTaxWh;\n\t                    };\n\t                    /**\n\t                     * @param fedTaxWh the fedTaxWh to set\n\t                     */\n\t                    Tax1099R.prototype.setFedTaxWh = function (fedTaxWh) {\n\t                        this.fedTaxWh = fedTaxWh;\n\t                    };\n\t                    /**\n\t                     * @return the empContins\n\t                     */\n\t                    Tax1099R.prototype.getEmpContins = function () {\n\t                        return this.empContins;\n\t                    };\n\t                    /**\n\t                     * @param empContins the empContins to set\n\t                     */\n\t                    Tax1099R.prototype.setEmpContins = function (empContins) {\n\t                        this.empContins = empContins;\n\t                    };\n\t                    /**\n\t                     * @return the netUnapEmp\n\t                     */\n\t                    Tax1099R.prototype.getNetUnapEmp = function () {\n\t                        return this.netUnapEmp;\n\t                    };\n\t                    /**\n\t                     * @param netUnapEmp the netUnapEmp to set\n\t                     */\n\t                    Tax1099R.prototype.setNetUnapEmp = function (netUnapEmp) {\n\t                        this.netUnapEmp = netUnapEmp;\n\t                    };\n\t                    /**\n\t                     * @return the distCode\n\t                     */\n\t                    Tax1099R.prototype.getDistCode = function () {\n\t                        return this.distCode;\n\t                    };\n\t                    /**\n\t                     * @param distCode the distCode to set\n\t                     */\n\t                    Tax1099R.prototype.setDistCode = function (distCode) {\n\t                        this.distCode = distCode;\n\t                    };\n\t                    /**\n\t                     * @return the iraSepSimp\n\t                     */\n\t                    Tax1099R.prototype.getIraSepSimp = function () {\n\t                        return this.iraSepSimp;\n\t                    };\n\t                    /**\n\t                     * @param iraSepSimp the iraSepSimp to set\n\t                     */\n\t                    Tax1099R.prototype.setIraSepSimp = function (iraSepSimp) {\n\t                        this.iraSepSimp = iraSepSimp;\n\t                    };\n\t                    /**\n\t                     * @return the annCtrctDist\n\t                     */\n\t                    Tax1099R.prototype.getAnnCtrctDist = function () {\n\t                        return this.annCtrctDist;\n\t                    };\n\t                    /**\n\t                     * @param annCtrctDist the annCtrctDist to set\n\t                     */\n\t                    Tax1099R.prototype.setAnnCtrctDist = function (annCtrctDist) {\n\t                        this.annCtrctDist = annCtrctDist;\n\t                    };\n\t                    /**\n\t                     * @return the totEmpCount\n\t                     */\n\t                    Tax1099R.prototype.getTotEmpCount = function () {\n\t                        return this.totEmpCount;\n\t                    };\n\t                    /**\n\t                     * @param totEmpCount the totEmpCount to set\n\t                     */\n\t                    Tax1099R.prototype.setTotEmpCount = function (totEmpCount) {\n\t                        this.totEmpCount = totEmpCount;\n\t                    };\n\t                    /**\n\t                     * @return the payerAddress\n\t                     */\n\t                    Tax1099R.prototype.getPayerAddress = function () {\n\t                        return this.payerAddress;\n\t                    };\n\t                    /**\n\t                     * @param payerAddress the payerAddress to set\n\t                     */\n\t                    Tax1099R.prototype.setPayerAddress = function (payerAddress) {\n\t                        this.payerAddress = payerAddress;\n\t                    };\n\t                    /**\n\t                     * @return the payerId\n\t                     */\n\t                    Tax1099R.prototype.getPayerId = function () {\n\t                        return this.payerId;\n\t                    };\n\t                    /**\n\t                     * @param payerId the payerId to set\n\t                     */\n\t                    Tax1099R.prototype.setPayerId = function (payerId) {\n\t                        this.payerId = payerId;\n\t                    };\n\t                    /**\n\t                     * @return the recAddress\n\t                     */\n\t                    Tax1099R.prototype.getRecAddress = function () {\n\t                        return this.recAddress;\n\t                    };\n\t                    /**\n\t                     * @param recAddress the recAddress to set\n\t                     */\n\t                    Tax1099R.prototype.setRecAddress = function (recAddress) {\n\t                        this.recAddress = recAddress;\n\t                    };\n\t                    /**\n\t                     * @return the recId\n\t                     */\n\t                    Tax1099R.prototype.getRecId = function () {\n\t                        return this.recId;\n\t                    };\n\t                    /**\n\t                     * @param recId the recId to set\n\t                     */\n\t                    Tax1099R.prototype.setRecId = function (recId) {\n\t                        this.recId = recId;\n\t                    };\n\t                    /**\n\t                     * @return the recAcct\n\t                     */\n\t                    Tax1099R.prototype.getRecAcct = function () {\n\t                        return this.recAcct;\n\t                    };\n\t                    /**\n\t                     * @param recAcct the recAcct to set\n\t                     */\n\t                    Tax1099R.prototype.setRecAcct = function (recAcct) {\n\t                        this.recAcct = recAcct;\n\t                    };\n\t                    return Tax1099R;\n\t                })();\n\t                tax1099.Tax1099R = Tax1099R;\n\t                Aggregate_add(Tax1099R, \"TAX1099R_V100\");\n\t                Element_add(Tax1099R, { name: \"SRVRTID\", required: true, order: 0, type: String, read: Tax1099R.prototype.getSrvrtId, write: Tax1099R.prototype.setSrvrtId });\n\t                Element_add(Tax1099R, { name: \"TAXYEAR\", required: true, order: 1, type: String, read: Tax1099R.prototype.getTaxYear, write: Tax1099R.prototype.setTaxYear });\n\t                Element_add(Tax1099R, { name: \"GROSSDIST\", required: true, order: 2, type: String, read: Tax1099R.prototype.getGrossDist, write: Tax1099R.prototype.setGrossDist });\n\t                Element_add(Tax1099R, { name: \"TAXAMT\", required: false, order: 3, type: String, read: Tax1099R.prototype.getTaxAmt, write: Tax1099R.prototype.setTaxAmt });\n\t                Element_add(Tax1099R, { name: \"TAXAMTND\", required: false, order: 4, type: String, read: Tax1099R.prototype.getTaxAmtNd, write: Tax1099R.prototype.setTaxAmtNd });\n\t                Element_add(Tax1099R, { name: \"CAPGAIN\", required: false, order: 5, type: String, read: Tax1099R.prototype.getCapGain, write: Tax1099R.prototype.setCapGain });\n\t                Element_add(Tax1099R, { name: \"FEDTAXWH\", required: false, order: 6, type: String, read: Tax1099R.prototype.getFedTaxWh, write: Tax1099R.prototype.setFedTaxWh });\n\t                Element_add(Tax1099R, { name: \"EMPCONTINS\", required: false, order: 7, type: String, read: Tax1099R.prototype.getEmpContins, write: Tax1099R.prototype.setEmpContins });\n\t                Element_add(Tax1099R, { name: \"NETUNAPEMP\", required: false, order: 8, type: String, read: Tax1099R.prototype.getNetUnapEmp, write: Tax1099R.prototype.setNetUnapEmp });\n\t                Element_add(Tax1099R, { name: \"DISTCODE\", required: true, order: 9, type: String, read: Tax1099R.prototype.getDistCode, write: Tax1099R.prototype.setDistCode });\n\t                Element_add(Tax1099R, { name: \"IRASEPSIMP\", required: true, order: 10, type: String, read: Tax1099R.prototype.getIraSepSimp, write: Tax1099R.prototype.setIraSepSimp });\n\t                Element_add(Tax1099R, { name: \"ANNCTRCTDIST\", required: false, order: 11, type: String, read: Tax1099R.prototype.getAnnCtrctDist, write: Tax1099R.prototype.setAnnCtrctDist });\n\t                Element_add(Tax1099R, { name: \"TOTEMPCONT\", required: false, order: 12, type: String, read: Tax1099R.prototype.getTotEmpCount, write: Tax1099R.prototype.setTotEmpCount });\n\t                ChildAggregate_add(Tax1099R, { required: true, order: 13, type: tax1099.PayerAddress, read: Tax1099R.prototype.getPayerAddress, write: Tax1099R.prototype.setPayerAddress });\n\t                Element_add(Tax1099R, { name: \"PAYERID\", required: true, order: 14, type: String, read: Tax1099R.prototype.getPayerId, write: Tax1099R.prototype.setPayerId });\n\t                ChildAggregate_add(Tax1099R, { required: true, order: 15, type: tax1099.RecAddress, read: Tax1099R.prototype.getRecAddress, write: Tax1099R.prototype.setRecAddress });\n\t                Element_add(Tax1099R, { name: \"RECID\", required: true, order: 16, type: String, read: Tax1099R.prototype.getRecId, write: Tax1099R.prototype.setRecId });\n\t                Element_add(Tax1099R, { name: \"RECACCT\", required: true, order: 17, type: String, read: Tax1099R.prototype.getRecAcct, write: Tax1099R.prototype.setRecAcct });\n\t            })(tax1099 = data.tax1099 || (data.tax1099 = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/Element_add'/>\n\t///<reference path='../common/T1099Request'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var tax1099;\n\t            (function (tax1099) {\n\t                var T1099Request = ofx4js.domain.data.common.T1099Request;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var Element_add = ofx4js.meta.Element_add;\n\t                /**\n\t                 * @author Aparna Gawali\n\t                 * aparna.gawali@sungard.com\n\t                 */\n\t                var Tax1099Request = (function (_super) {\n\t                    __extends(Tax1099Request, _super);\n\t                    function Tax1099Request() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    Tax1099Request.prototype.getTaxYear = function () {\n\t                        return this.taxYear;\n\t                    };\n\t                    Tax1099Request.prototype.setTaxYear = function (taxYear) {\n\t                        this.taxYear = taxYear;\n\t                    };\n\t                    return Tax1099Request;\n\t                })(T1099Request);\n\t                tax1099.Tax1099Request = Tax1099Request;\n\t                Aggregate_add(Tax1099Request, \"TAX1099RQ\");\n\t                Element_add(Tax1099Request, { name: \"TAXYEAR\", required: true, order: 0, type: String, read: Tax1099Request.prototype.getTaxYear, write: Tax1099Request.prototype.setTaxYear });\n\t            })(tax1099 = data.tax1099 || (data.tax1099 = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../TransactionWrappedRequestMessage'/>\n\t///<reference path='Tax1099Request'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var tax1099;\n\t            (function (tax1099) {\n\t                var TransactionWrappedRequestMessage = ofx4js.domain.data.TransactionWrappedRequestMessage;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                /**\n\t                 * @author Aparna Gawali\n\t                 * aparna.gawali@sungard.com\n\t                 */\n\t                var Tax1099RequestTransaction = (function (_super) {\n\t                    __extends(Tax1099RequestTransaction, _super);\n\t                    function Tax1099RequestTransaction() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    /**\n\t                     * The tax1099Request.\n\t                     *\n\t                     * @return The tax1099Request.\n\t                     */\n\t                    Tax1099RequestTransaction.prototype.getTax1099Request = function () {\n\t                        return this.tax1099Request;\n\t                    };\n\t                    /**\n\t                     * The tax1099Request.\n\t                     *\n\t                     * @param tax1099Request The message.\n\t                     *\n\t                     */\n\t                    Tax1099RequestTransaction.prototype.setTax1099Request = function (tax1099Request) {\n\t                        this.tax1099Request = tax1099Request;\n\t                    };\n\t                    // Inherited.\n\t                    Tax1099RequestTransaction.prototype.setWrappedMessage = function (tax1099Request) {\n\t                        this.setTax1099Request(tax1099Request);\n\t                    };\n\t                    return Tax1099RequestTransaction;\n\t                })(TransactionWrappedRequestMessage);\n\t                tax1099.Tax1099RequestTransaction = Tax1099RequestTransaction;\n\t                Aggregate_add(Tax1099RequestTransaction, \"TAX1099TRNRQ\");\n\t                ChildAggregate_add(Tax1099RequestTransaction, { required: true, order: 30, type: tax1099.Tax1099Request, read: Tax1099RequestTransaction.prototype.getTax1099Request, write: Tax1099RequestTransaction.prototype.setTax1099Request });\n\t            })(tax1099 = data.tax1099 || (data.tax1099 = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../MessageSetType'/>\n\t///<reference path='../RequestMessageSet'/>\n\t///<reference path='Tax1099RequestTransaction'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var tax1099;\n\t            (function (tax1099) {\n\t                var MessageSetType = ofx4js.domain.data.MessageSetType;\n\t                var RequestMessageSet = ofx4js.domain.data.RequestMessageSet;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                /**\n\t                 * @author aparna.gawali\n\t                 * aparna.gawali@sungard.com\n\t                 *\n\t                 */\n\t                var Tax1099RequestMessageSet = (function (_super) {\n\t                    __extends(Tax1099RequestMessageSet, _super);\n\t                    function Tax1099RequestMessageSet() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    Tax1099RequestMessageSet.prototype.getType = function () {\n\t                        return MessageSetType.tax1099;\n\t                    };\n\t                    /**\n\t                     * The statement request.\n\t                     *\n\t                     * @return The statement request.\n\t                     */\n\t                    Tax1099RequestMessageSet.prototype.getTaxRequestTransaction = function () {\n\t                        return this.taxRequestTransaction;\n\t                    };\n\t                    /**\n\t                     * The statement request.\n\t                     *\n\t                     * @param taxRequestTransaction The statement request.\n\t                     */\n\t                    Tax1099RequestMessageSet.prototype.setTaxRequestTransaction = function (taxRequestTransaction) {\n\t                        this.taxRequestTransaction = taxRequestTransaction;\n\t                    };\n\t                    // Inherited.\n\t                    Tax1099RequestMessageSet.prototype.getRequestMessages = function () {\n\t                        var requestMessages = new Array();\n\t                        if (this.getTaxRequestTransaction() != null) {\n\t                            requestMessages.push(this.getTaxRequestTransaction());\n\t                        }\n\t                        return requestMessages;\n\t                    };\n\t                    return Tax1099RequestMessageSet;\n\t                })(RequestMessageSet);\n\t                tax1099.Tax1099RequestMessageSet = Tax1099RequestMessageSet;\n\t                Aggregate_add(Tax1099RequestMessageSet, \"TAX1099MSGSRQV1\");\n\t                ChildAggregate_add(Tax1099RequestMessageSet, { order: 0, type: tax1099.Tax1099RequestTransaction, read: Tax1099RequestMessageSet.prototype.getTaxRequestTransaction, write: Tax1099RequestMessageSet.prototype.setTaxRequestTransaction });\n\t            })(tax1099 = data.tax1099 || (data.tax1099 = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../common/T1099Response'/>\n\t///<reference path='Tax1099DIV'/>\n\t///<reference path='Tax1099INT'/>\n\t///<reference path='Tax1099R'/>\n\t///<reference path='Tax1099B'/>\n\t///<reference path='Tax1099MISC'/>\n\t///<reference path='Tax1099OID'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var tax1099;\n\t            (function (tax1099) {\n\t                var T1099Response = ofx4js.domain.data.common.T1099Response;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                /**\n\t                 * @author Aparna Gawali\n\t                 * aparna.gawali@sungard.com\n\t                 */\n\t                var Tax1099Response = (function (_super) {\n\t                    __extends(Tax1099Response, _super);\n\t                    function Tax1099Response() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    /**\n\t                     * @return the lstTax1099DIV\n\t                     */\n\t                    Tax1099Response.prototype.getLstTax1099DIV = function () {\n\t                        return this.lstTax1099DIV;\n\t                    };\n\t                    /**\n\t                     * @param lstTax1099DIV\n\t                     *            the lstTax1099DIV to set\n\t                     */\n\t                    Tax1099Response.prototype.setLstTax1099DIV = function (lstTax1099DIV) {\n\t                        this.lstTax1099DIV = lstTax1099DIV;\n\t                    };\n\t                    Tax1099Response.prototype.getResponseMessageName = function () {\n\t                        return \"1099 Tax details\";\n\t                    };\n\t                    /**\n\t                     * @return the lstTax1099INT\n\t                     */\n\t                    Tax1099Response.prototype.getLstTax1099INT = function () {\n\t                        return this.lstTax1099INT;\n\t                    };\n\t                    /**\n\t                     * @param lstTax1099INT the lstTax1099INT to set\n\t                     */\n\t                    Tax1099Response.prototype.setLstTax1099INT = function (lstTax1099INT) {\n\t                        this.lstTax1099INT = lstTax1099INT;\n\t                    };\n\t                    /**\n\t                     * @return the lstTax1099R\n\t                     */\n\t                    Tax1099Response.prototype.getLstTax1099R = function () {\n\t                        return this.lstTax1099R;\n\t                    };\n\t                    /**\n\t                     * @param lstTax1099R the lstTax1099R to set\n\t                     */\n\t                    Tax1099Response.prototype.setLstTax1099R = function (lstTax1099R) {\n\t                        this.lstTax1099R = lstTax1099R;\n\t                    };\n\t                    /**\n\t                     * @return the lstTax1099B\n\t                     */\n\t                    Tax1099Response.prototype.getLstTax1099B = function () {\n\t                        return this.lstTax1099B;\n\t                    };\n\t                    /**\n\t                     * @param lstTax1099B the lstTax1099B to set\n\t                     */\n\t                    Tax1099Response.prototype.setLstTax1099B = function (lstTax1099B) {\n\t                        this.lstTax1099B = lstTax1099B;\n\t                    };\n\t                    /**\n\t                     * @return the lstTax1099MISC\n\t                     */\n\t                    Tax1099Response.prototype.getLstTax1099MISC = function () {\n\t                        return this.lstTax1099MISC;\n\t                    };\n\t                    /**\n\t                     * @param lstTax1099MISC the lstTax1099MISC to set\n\t                     */\n\t                    Tax1099Response.prototype.setLstTax1099MISC = function (lstTax1099MISC) {\n\t                        this.lstTax1099MISC = lstTax1099MISC;\n\t                    };\n\t                    /**\n\t                     * @return the lstTax1099OID\n\t                     */\n\t                    Tax1099Response.prototype.getLstTax1099OID = function () {\n\t                        return this.lstTax1099OID;\n\t                    };\n\t                    /**\n\t                     * @param lstTax1099OID the lstTax1099OID to set\n\t                     */\n\t                    Tax1099Response.prototype.setLstTax1099OID = function (lstTax1099OID) {\n\t                        this.lstTax1099OID = lstTax1099OID;\n\t                    };\n\t                    return Tax1099Response;\n\t                })(T1099Response);\n\t                tax1099.Tax1099Response = Tax1099Response;\n\t                Aggregate_add(Tax1099Response, \"TAX1099RS\");\n\t                ChildAggregate_add(Tax1099Response, { required: false, order: 0, type: Array, collectionEntryType: tax1099.Tax1099DIV, read: Tax1099Response.prototype.getLstTax1099DIV, write: Tax1099Response.prototype.setLstTax1099DIV });\n\t                ChildAggregate_add(Tax1099Response, { required: false, order: 1, type: Array, collectionEntryType: tax1099.Tax1099INT, read: Tax1099Response.prototype.getLstTax1099INT, write: Tax1099Response.prototype.setLstTax1099INT });\n\t                ChildAggregate_add(Tax1099Response, { required: false, order: 2, type: Array, collectionEntryType: tax1099.Tax1099R, read: Tax1099Response.prototype.getLstTax1099R, write: Tax1099Response.prototype.setLstTax1099R });\n\t                ChildAggregate_add(Tax1099Response, { required: false, order: 3, type: Array, collectionEntryType: tax1099.Tax1099B, read: Tax1099Response.prototype.getLstTax1099B, write: Tax1099Response.prototype.setLstTax1099B });\n\t                ChildAggregate_add(Tax1099Response, { required: false, order: 4, type: Array, collectionEntryType: tax1099.Tax1099MISC, read: Tax1099Response.prototype.getLstTax1099MISC, write: Tax1099Response.prototype.setLstTax1099MISC });\n\t                ChildAggregate_add(Tax1099Response, { required: false, order: 5, type: Array, collectionEntryType: tax1099.Tax1099OID, read: Tax1099Response.prototype.getLstTax1099OID, write: Tax1099Response.prototype.setLstTax1099OID });\n\t            })(tax1099 = data.tax1099 || (data.tax1099 = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../TransactionWrappedResponseMessage'/>\n\t///<reference path='Tax1099Response'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var tax1099;\n\t            (function (tax1099) {\n\t                var TransactionWrappedResponseMessage = ofx4js.domain.data.TransactionWrappedResponseMessage;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                /**\n\t                 * @author Aparna Gawali\n\t                 * aparna.gawali@sungard.com\n\t                 */\n\t                var Tax1099ResponseTransaction = (function (_super) {\n\t                    __extends(Tax1099ResponseTransaction, _super);\n\t                    function Tax1099ResponseTransaction() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    /**\n\t                     * The tax1099Response.\n\t                     *\n\t                     * @return The tax1099Response.\n\t                     */\n\t                    Tax1099ResponseTransaction.prototype.getTax1099Response = function () {\n\t                        return this.tax1099Response;\n\t                    };\n\t                    /**\n\t                     * The tax1099Response.\n\t                     *\n\t                     * @param tax1099Response The message.\n\t                     */\n\t                    Tax1099ResponseTransaction.prototype.setTax1099Response = function (tax1099Response) {\n\t                        this.tax1099Response = tax1099Response;\n\t                    };\n\t                    // Inherited.\n\t                    Tax1099ResponseTransaction.prototype.getWrappedMessage = function () {\n\t                        return this.getTax1099Response();\n\t                    };\n\t                    return Tax1099ResponseTransaction;\n\t                })(TransactionWrappedResponseMessage);\n\t                tax1099.Tax1099ResponseTransaction = Tax1099ResponseTransaction;\n\t                Aggregate_add(Tax1099ResponseTransaction, \"TAX1099TRNRS\");\n\t                ChildAggregate_add(Tax1099ResponseTransaction, { required: false, order: 2, type: tax1099.Tax1099Response, read: Tax1099ResponseTransaction.prototype.getTax1099Response, write: Tax1099ResponseTransaction.prototype.setTax1099Response });\n\t            })(tax1099 = data.tax1099 || (data.tax1099 = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../../../meta/Aggregate_add'/>\n\t///<reference path='../../../meta/ChildAggregate_add'/>\n\t///<reference path='../MessageSetType'/>\n\t///<reference path='../ResponseMessageSet'/>\n\t///<reference path='Tax1099ResponseTransaction'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var domain;\n\t    (function (domain) {\n\t        var data;\n\t        (function (data) {\n\t            var tax1099;\n\t            (function (tax1099) {\n\t                var MessageSetType = ofx4js.domain.data.MessageSetType;\n\t                var ResponseMessageSet = ofx4js.domain.data.ResponseMessageSet;\n\t                var Aggregate_add = ofx4js.meta.Aggregate_add;\n\t                var ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\t                /**\n\t                 * @author Aparna Gawali\n\t                 * aparna.gawali@sungard.com\n\t                 */\n\t                var Tax1099ResponseMessageSet = (function (_super) {\n\t                    __extends(Tax1099ResponseMessageSet, _super);\n\t                    function Tax1099ResponseMessageSet() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    Tax1099ResponseMessageSet.prototype.getType = function () {\n\t                        return MessageSetType.tax1099;\n\t                    };\n\t                    /**\n\t                     * The taxResponseTransaction list.\n\t                     *\n\t                     * Most OFX files have a single statement response, except MT2OFX\n\t                     * which outputs OFX with multiple statement responses\n\t                     * in a single banking response message set.\n\t                     *\n\t                     * @return The taxResponseTransaction list.\n\t                     */\n\t                    Tax1099ResponseMessageSet.prototype.getTaxResponseTransaction = function () {\n\t                        return this.taxResponseTransaction;\n\t                    };\n\t                    /**\n\t                     * The taxResponseTransaction.\n\t                     *\n\t                     * @param taxResponseTransaction The statement responses.\n\t                     */\n\t                    Tax1099ResponseMessageSet.prototype.setTaxResponseTransaction = function (taxResponseTransaction) {\n\t                        if (taxResponseTransaction instanceof Array) {\n\t                            this.taxResponseTransaction = taxResponseTransaction;\n\t                        }\n\t                        else if (taxResponseTransaction instanceof tax1099.Tax1099ResponseTransaction) {\n\t                            this.taxResponseTransaction = [taxResponseTransaction];\n\t                        }\n\t                        else {\n\t                            throw new ofx4js.OFXException(\"invalid type\");\n\t                        }\n\t                    };\n\t                    // Inherited.\n\t                    Tax1099ResponseMessageSet.prototype.getResponseMessages = function () {\n\t                        return this.taxResponseTransaction;\n\t                    };\n\t                    /**\n\t                     * The first statement response.\n\t                     *\n\t                     * @return the first bank statement response.\n\t                     * @deprecated Use getStatementResponses() because sometimes there are multiple responses\n\t                     */\n\t                    Tax1099ResponseMessageSet.prototype.getStatementResponse = function () {\n\t                        return this.taxResponseTransaction == null || this.taxResponseTransaction.length == 0 ? null : this.taxResponseTransaction[0];\n\t                    };\n\t                    return Tax1099ResponseMessageSet;\n\t                })(ResponseMessageSet);\n\t                tax1099.Tax1099ResponseMessageSet = Tax1099ResponseMessageSet;\n\t                Aggregate_add(Tax1099ResponseMessageSet, \"TAX1099MSGSRSV1\");\n\t                ChildAggregate_add(Tax1099ResponseMessageSet, { order: 0, type: Array, collectionEntryType: tax1099.Tax1099ResponseTransaction, read: Tax1099ResponseMessageSet.prototype.getTaxResponseTransaction, write: Tax1099ResponseMessageSet.prototype.setTaxResponseTransaction });\n\t            })(tax1099 = data.tax1099 || (data.tax1099 = {}));\n\t        })(data = domain.data || (domain.data = {}));\n\t    })(domain = ofx4js.domain || (ofx4js.domain = {}));\n\t})(ofx4js || (ofx4js = {}));\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    ;\n\t})(ofx4js || (ofx4js = {}));\n\tmodule.exports = ofx4js;\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t/*\n\t * Copyright 2008 Web Cohesion\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t///<reference path='../OFXRuntimeException'/>\n\tvar ofx4js;\n\t(function (ofx4js) {\n\t    var io;\n\t    (function (io) {\n\t        var OFXRuntimeException = ofx4js.OFXRuntimeException;\n\t        /**\n\t         * Thrown when a required attribute of an aggregate is null or empty.\n\t         *\n\t         * @author Ryan Heaton\n\t         */\n\t        var RequiredAttributeException = (function (_super) {\n\t            __extends(RequiredAttributeException, _super);\n\t            function RequiredAttributeException(message) {\n\t                _super.call(this, message);\n\t            }\n\t            return RequiredAttributeException;\n\t        })(OFXRuntimeException);\n\t        io.RequiredAttributeException = RequiredAttributeException;\n\t    })(io = ofx4js.io || (ofx4js.io = {}));\n\t})(ofx4js || (ofx4js = {}));\n\t\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t//     uuid.js\n\t//\n\t//     Copyright (c) 2010-2012 Robert Kieffer\n\t//     MIT License - http://opensource.org/licenses/mit-license.php\n\t\n\t// Unique ID creation requires a high quality random # generator.  We feature\n\t// detect to determine the best RNG source, normalizing to a function that\n\t// returns 128-bits of randomness, since that's what's usually required\n\tvar _rng = __webpack_require__(2);\n\t\n\t// Maps for number <-> hex string conversion\n\tvar _byteToHex = [];\n\tvar _hexToByte = {};\n\tfor (var i = 0; i < 256; i++) {\n\t  _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n\t  _hexToByte[_byteToHex[i]] = i;\n\t}\n\t\n\t// **`parse()` - Parse a UUID into it's component bytes**\n\tfunction parse(s, buf, offset) {\n\t  var i = (buf && offset) || 0, ii = 0;\n\t\n\t  buf = buf || [];\n\t  s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {\n\t    if (ii < 16) { // Don't overflow!\n\t      buf[i + ii++] = _hexToByte[oct];\n\t    }\n\t  });\n\t\n\t  // Zero out remaining bytes if string was short\n\t  while (ii < 16) {\n\t    buf[i + ii++] = 0;\n\t  }\n\t\n\t  return buf;\n\t}\n\t\n\t// **`unparse()` - Convert UUID byte array (ala parse()) into a string**\n\tfunction unparse(buf, offset) {\n\t  var i = offset || 0, bth = _byteToHex;\n\t  return  bth[buf[i++]] + bth[buf[i++]] +\n\t          bth[buf[i++]] + bth[buf[i++]] + '-' +\n\t          bth[buf[i++]] + bth[buf[i++]] + '-' +\n\t          bth[buf[i++]] + bth[buf[i++]] + '-' +\n\t          bth[buf[i++]] + bth[buf[i++]] + '-' +\n\t          bth[buf[i++]] + bth[buf[i++]] +\n\t          bth[buf[i++]] + bth[buf[i++]] +\n\t          bth[buf[i++]] + bth[buf[i++]];\n\t}\n\t\n\t// **`v1()` - Generate time-based UUID**\n\t//\n\t// Inspired by https://github.com/LiosK/UUID.js\n\t// and http://docs.python.org/library/uuid.html\n\t\n\t// random #'s we need to init node and clockseq\n\tvar _seedBytes = _rng();\n\t\n\t// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n\tvar _nodeId = [\n\t  _seedBytes[0] | 0x01,\n\t  _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n\t];\n\t\n\t// Per 4.2.2, randomize (14 bit) clockseq\n\tvar _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\t\n\t// Previous uuid creation time\n\tvar _lastMSecs = 0, _lastNSecs = 0;\n\t\n\t// See https://github.com/broofa/node-uuid for API details\n\tfunction v1(options, buf, offset) {\n\t  var i = buf && offset || 0;\n\t  var b = buf || [];\n\t\n\t  options = options || {};\n\t\n\t  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\t\n\t  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n\t  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n\t  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n\t  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\t  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\t\n\t  // Per 4.2.1.2, use count of uuid's generated during the current clock\n\t  // cycle to simulate higher resolution clock\n\t  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\t\n\t  // Time since last uuid creation (in msecs)\n\t  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\t\n\t  // Per 4.2.1.2, Bump clockseq on clock regression\n\t  if (dt < 0 && options.clockseq === undefined) {\n\t    clockseq = clockseq + 1 & 0x3fff;\n\t  }\n\t\n\t  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n\t  // time interval\n\t  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n\t    nsecs = 0;\n\t  }\n\t\n\t  // Per 4.2.1.2 Throw error if too many uuids are requested\n\t  if (nsecs >= 10000) {\n\t    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n\t  }\n\t\n\t  _lastMSecs = msecs;\n\t  _lastNSecs = nsecs;\n\t  _clockseq = clockseq;\n\t\n\t  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\t  msecs += 12219292800000;\n\t\n\t  // `time_low`\n\t  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n\t  b[i++] = tl >>> 24 & 0xff;\n\t  b[i++] = tl >>> 16 & 0xff;\n\t  b[i++] = tl >>> 8 & 0xff;\n\t  b[i++] = tl & 0xff;\n\t\n\t  // `time_mid`\n\t  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n\t  b[i++] = tmh >>> 8 & 0xff;\n\t  b[i++] = tmh & 0xff;\n\t\n\t  // `time_high_and_version`\n\t  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\t  b[i++] = tmh >>> 16 & 0xff;\n\t\n\t  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\t  b[i++] = clockseq >>> 8 | 0x80;\n\t\n\t  // `clock_seq_low`\n\t  b[i++] = clockseq & 0xff;\n\t\n\t  // `node`\n\t  var node = options.node || _nodeId;\n\t  for (var n = 0; n < 6; n++) {\n\t    b[i + n] = node[n];\n\t  }\n\t\n\t  return buf ? buf : unparse(b);\n\t}\n\t\n\t// **`v4()` - Generate random UUID**\n\t\n\t// See https://github.com/broofa/node-uuid for API details\n\tfunction v4(options, buf, offset) {\n\t  // Deprecated - 'format' argument, as supported in v1.2\n\t  var i = buf && offset || 0;\n\t\n\t  if (typeof(options) == 'string') {\n\t    buf = options == 'binary' ? new Array(16) : null;\n\t    options = null;\n\t  }\n\t  options = options || {};\n\t\n\t  var rnds = options.random || (options.rng || _rng)();\n\t\n\t  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\t  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n\t  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\t\n\t  // Copy bytes to buffer, if provided\n\t  if (buf) {\n\t    for (var ii = 0; ii < 16; ii++) {\n\t      buf[i + ii] = rnds[ii];\n\t    }\n\t  }\n\t\n\t  return buf || unparse(rnds);\n\t}\n\t\n\t// Export public API\n\tvar uuid = v4;\n\tuuid.v1 = v1;\n\tuuid.v4 = v4;\n\tuuid.parse = parse;\n\tuuid.unparse = unparse;\n\t\n\tmodule.exports = uuid;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\n\tvar rng;\n\t\n\tvar crypto = global.crypto || global.msCrypto; // for IE 11\n\tif (crypto && crypto.getRandomValues) {\n\t  // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto\n\t  // Moderately fast, high quality\n\t  var _rnds8 = new Uint8Array(16);\n\t  rng = function whatwgRNG() {\n\t    crypto.getRandomValues(_rnds8);\n\t    return _rnds8;\n\t  };\n\t}\n\t\n\tif (!rng) {\n\t  // Math.random()-based (RNG)\n\t  //\n\t  // If all else fails, use Math.random().  It's fast, but is of unspecified\n\t  // quality.\n\t  var  _rnds = new Array(16);\n\t  rng = function() {\n\t    for (var i = 0, r; i < 16; i++) {\n\t      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n\t      _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n\t    }\n\t\n\t    return _rnds;\n\t  };\n\t}\n\t\n\tmodule.exports = rng;\n\t\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {;(function (sax) { // wrapper for non-node envs\n\t  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\n\t  sax.SAXParser = SAXParser\n\t  sax.SAXStream = SAXStream\n\t  sax.createStream = createStream\n\t\n\t  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n\t  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n\t  // since that's the earliest that a buffer overrun could occur.  This way, checks are\n\t  // as rare as required, but as often as necessary to ensure never crossing this bound.\n\t  // Furthermore, buffers are only tested at most once per write(), so passing a very\n\t  // large string into write() might have undesirable effects, but this is manageable by\n\t  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n\t  // edge case, result in creating at most one complete copy of the string passed in.\n\t  // Set to Infinity to have unlimited buffers.\n\t  sax.MAX_BUFFER_LENGTH = 64 * 1024\n\t\n\t  var buffers = [\n\t    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\n\t    'procInstName', 'procInstBody', 'entity', 'attribName',\n\t    'attribValue', 'cdata', 'script'\n\t  ]\n\t\n\t  sax.EVENTS = [\n\t    'text',\n\t    'processinginstruction',\n\t    'sgmldeclaration',\n\t    'doctype',\n\t    'comment',\n\t    'opentagstart',\n\t    'attribute',\n\t    'opentag',\n\t    'closetag',\n\t    'opencdata',\n\t    'cdata',\n\t    'closecdata',\n\t    'error',\n\t    'end',\n\t    'ready',\n\t    'script',\n\t    'opennamespace',\n\t    'closenamespace'\n\t  ]\n\t\n\t  function SAXParser (strict, opt) {\n\t    if (!(this instanceof SAXParser)) {\n\t      return new SAXParser(strict, opt)\n\t    }\n\t\n\t    var parser = this\n\t    clearBuffers(parser)\n\t    parser.q = parser.c = ''\n\t    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n\t    parser.opt = opt || {}\n\t    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n\t    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\n\t    parser.tags = []\n\t    parser.closed = parser.closedRoot = parser.sawRoot = false\n\t    parser.tag = parser.error = null\n\t    parser.strict = !!strict\n\t    parser.noscript = !!(strict || parser.opt.noscript)\n\t    parser.state = S.BEGIN\n\t    parser.strictEntities = parser.opt.strictEntities\n\t    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\n\t    parser.attribList = []\n\t\n\t    // namespaces form a prototype chain.\n\t    // it always points at the current tag,\n\t    // which protos to its parent tag.\n\t    if (parser.opt.xmlns) {\n\t      parser.ns = Object.create(rootNS)\n\t    }\n\t\n\t    // mostly just for error reporting\n\t    parser.trackPosition = parser.opt.position !== false\n\t    if (parser.trackPosition) {\n\t      parser.position = parser.line = parser.column = 0\n\t    }\n\t    emit(parser, 'onready')\n\t  }\n\t\n\t  if (!Object.create) {\n\t    Object.create = function (o) {\n\t      function F () {}\n\t      F.prototype = o\n\t      var newf = new F()\n\t      return newf\n\t    }\n\t  }\n\t\n\t  if (!Object.keys) {\n\t    Object.keys = function (o) {\n\t      var a = []\n\t      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n\t      return a\n\t    }\n\t  }\n\t\n\t  function checkBufferLength (parser) {\n\t    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n\t    var maxActual = 0\n\t    for (var i = 0, l = buffers.length; i < l; i++) {\n\t      var len = parser[buffers[i]].length\n\t      if (len > maxAllowed) {\n\t        // Text/cdata nodes can get big, and since they're buffered,\n\t        // we can get here under normal conditions.\n\t        // Avoid issues by emitting the text node now,\n\t        // so at least it won't get any bigger.\n\t        switch (buffers[i]) {\n\t          case 'textNode':\n\t            closeText(parser)\n\t            break\n\t\n\t          case 'cdata':\n\t            emitNode(parser, 'oncdata', parser.cdata)\n\t            parser.cdata = ''\n\t            break\n\t\n\t          case 'script':\n\t            emitNode(parser, 'onscript', parser.script)\n\t            parser.script = ''\n\t            break\n\t\n\t          default:\n\t            error(parser, 'Max buffer length exceeded: ' + buffers[i])\n\t        }\n\t      }\n\t      maxActual = Math.max(maxActual, len)\n\t    }\n\t    // schedule the next check for the earliest possible buffer overrun.\n\t    var m = sax.MAX_BUFFER_LENGTH - maxActual\n\t    parser.bufferCheckPosition = m + parser.position\n\t  }\n\t\n\t  function clearBuffers (parser) {\n\t    for (var i = 0, l = buffers.length; i < l; i++) {\n\t      parser[buffers[i]] = ''\n\t    }\n\t  }\n\t\n\t  function flushBuffers (parser) {\n\t    closeText(parser)\n\t    if (parser.cdata !== '') {\n\t      emitNode(parser, 'oncdata', parser.cdata)\n\t      parser.cdata = ''\n\t    }\n\t    if (parser.script !== '') {\n\t      emitNode(parser, 'onscript', parser.script)\n\t      parser.script = ''\n\t    }\n\t  }\n\t\n\t  SAXParser.prototype = {\n\t    end: function () { end(this) },\n\t    write: write,\n\t    resume: function () { this.error = null; return this },\n\t    close: function () { return this.write(null) },\n\t    flush: function () { flushBuffers(this) }\n\t  }\n\t\n\t  var Stream\n\t  try {\n\t    Stream = __webpack_require__(8).Stream\n\t  } catch (ex) {\n\t    Stream = function () {}\n\t  }\n\t\n\t  var streamWraps = sax.EVENTS.filter(function (ev) {\n\t    return ev !== 'error' && ev !== 'end'\n\t  })\n\t\n\t  function createStream (strict, opt) {\n\t    return new SAXStream(strict, opt)\n\t  }\n\t\n\t  function SAXStream (strict, opt) {\n\t    if (!(this instanceof SAXStream)) {\n\t      return new SAXStream(strict, opt)\n\t    }\n\t\n\t    Stream.apply(this)\n\t\n\t    this._parser = new SAXParser(strict, opt)\n\t    this.writable = true\n\t    this.readable = true\n\t\n\t    var me = this\n\t\n\t    this._parser.onend = function () {\n\t      me.emit('end')\n\t    }\n\t\n\t    this._parser.onerror = function (er) {\n\t      me.emit('error', er)\n\t\n\t      // if didn't throw, then means error was handled.\n\t      // go ahead and clear error, so we can write again.\n\t      me._parser.error = null\n\t    }\n\t\n\t    this._decoder = null\n\t\n\t    streamWraps.forEach(function (ev) {\n\t      Object.defineProperty(me, 'on' + ev, {\n\t        get: function () {\n\t          return me._parser['on' + ev]\n\t        },\n\t        set: function (h) {\n\t          if (!h) {\n\t            me.removeAllListeners(ev)\n\t            me._parser['on' + ev] = h\n\t            return h\n\t          }\n\t          me.on(ev, h)\n\t        },\n\t        enumerable: true,\n\t        configurable: false\n\t      })\n\t    })\n\t  }\n\t\n\t  SAXStream.prototype = Object.create(Stream.prototype, {\n\t    constructor: {\n\t      value: SAXStream\n\t    }\n\t  })\n\t\n\t  SAXStream.prototype.write = function (data) {\n\t    if (typeof Buffer === 'function' &&\n\t      typeof Buffer.isBuffer === 'function' &&\n\t      Buffer.isBuffer(data)) {\n\t      if (!this._decoder) {\n\t        var SD = __webpack_require__(25).StringDecoder\n\t        this._decoder = new SD('utf8')\n\t      }\n\t      data = this._decoder.write(data)\n\t    }\n\t\n\t    this._parser.write(data.toString())\n\t    this.emit('data', data)\n\t    return true\n\t  }\n\t\n\t  SAXStream.prototype.end = function (chunk) {\n\t    if (chunk && chunk.length) {\n\t      this.write(chunk)\n\t    }\n\t    this._parser.end()\n\t    return true\n\t  }\n\t\n\t  SAXStream.prototype.on = function (ev, handler) {\n\t    var me = this\n\t    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n\t      me._parser['on' + ev] = function () {\n\t        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\n\t        args.splice(0, 0, ev)\n\t        me.emit.apply(me, args)\n\t      }\n\t    }\n\t\n\t    return Stream.prototype.on.call(me, ev, handler)\n\t  }\n\t\n\t  // character classes and tokens\n\t  var whitespace = '\\r\\n\\t '\n\t\n\t  // this really needs to be replaced with character classes.\n\t  // XML allows all manner of ridiculous numbers and digits.\n\t  var number = '0124356789'\n\t  var letter = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\t\n\t  // (Letter | \"_\" | \":\")\n\t  var quote = '\\'\"'\n\t  var attribEnd = whitespace + '>'\n\t  var CDATA = '[CDATA['\n\t  var DOCTYPE = 'DOCTYPE'\n\t  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\n\t  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\n\t  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\t\n\t  // turn all the string character sets into character class objects.\n\t  whitespace = charClass(whitespace)\n\t  number = charClass(number)\n\t  letter = charClass(letter)\n\t\n\t  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n\t  // This implementation works on strings, a single character at a time\n\t  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n\t  // without a significant breaking change to either this  parser, or the\n\t  // JavaScript language.  Implementation of an emoji-capable xml parser\n\t  // is left as an exercise for the reader.\n\t  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\t\n\t  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040\\.\\d-]/\n\t\n\t  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\t  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040\\.\\d-]/\n\t\n\t  quote = charClass(quote)\n\t  attribEnd = charClass(attribEnd)\n\t\n\t  function charClass (str) {\n\t    return str.split('').reduce(function (s, c) {\n\t      s[c] = true\n\t      return s\n\t    }, {})\n\t  }\n\t\n\t  function isRegExp (c) {\n\t    return Object.prototype.toString.call(c) === '[object RegExp]'\n\t  }\n\t\n\t  function is (charclass, c) {\n\t    return isRegExp(charclass) ? !!c.match(charclass) : charclass[c]\n\t  }\n\t\n\t  function not (charclass, c) {\n\t    return !is(charclass, c)\n\t  }\n\t\n\t  var S = 0\n\t  sax.STATE = {\n\t    BEGIN: S++, // leading byte order mark or whitespace\n\t    BEGIN_WHITESPACE: S++, // leading whitespace\n\t    TEXT: S++, // general stuff\n\t    TEXT_ENTITY: S++, // &amp and such.\n\t    OPEN_WAKA: S++, // <\n\t    SGML_DECL: S++, // <!BLARG\n\t    SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\n\t    DOCTYPE: S++, // <!DOCTYPE\n\t    DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\n\t    DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\n\t    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\n\t    COMMENT_STARTING: S++, // <!-\n\t    COMMENT: S++, // <!--\n\t    COMMENT_ENDING: S++, // <!-- blah -\n\t    COMMENT_ENDED: S++, // <!-- blah --\n\t    CDATA: S++, // <![CDATA[ something\n\t    CDATA_ENDING: S++, // ]\n\t    CDATA_ENDING_2: S++, // ]]\n\t    PROC_INST: S++, // <?hi\n\t    PROC_INST_BODY: S++, // <?hi there\n\t    PROC_INST_ENDING: S++, // <?hi \"there\" ?\n\t    OPEN_TAG: S++, // <strong\n\t    OPEN_TAG_SLASH: S++, // <strong /\n\t    ATTRIB: S++, // <a\n\t    ATTRIB_NAME: S++, // <a foo\n\t    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\n\t    ATTRIB_VALUE: S++, // <a foo=\n\t    ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\n\t    ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\n\t    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\n\t    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\n\t    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\n\t    CLOSE_TAG: S++, // </a\n\t    CLOSE_TAG_SAW_WHITE: S++, // </a   >\n\t    SCRIPT: S++, // <script> ...\n\t    SCRIPT_ENDING: S++ // <script> ... <\n\t  }\n\t\n\t  sax.XML_ENTITIES = {\n\t    'amp': '&',\n\t    'gt': '>',\n\t    'lt': '<',\n\t    'quot': '\"',\n\t    'apos': \"'\"\n\t  }\n\t\n\t  sax.ENTITIES = {\n\t    'amp': '&',\n\t    'gt': '>',\n\t    'lt': '<',\n\t    'quot': '\"',\n\t    'apos': \"'\",\n\t    'AElig': 198,\n\t    'Aacute': 193,\n\t    'Acirc': 194,\n\t    'Agrave': 192,\n\t    'Aring': 197,\n\t    'Atilde': 195,\n\t    'Auml': 196,\n\t    'Ccedil': 199,\n\t    'ETH': 208,\n\t    'Eacute': 201,\n\t    'Ecirc': 202,\n\t    'Egrave': 200,\n\t    'Euml': 203,\n\t    'Iacute': 205,\n\t    'Icirc': 206,\n\t    'Igrave': 204,\n\t    'Iuml': 207,\n\t    'Ntilde': 209,\n\t    'Oacute': 211,\n\t    'Ocirc': 212,\n\t    'Ograve': 210,\n\t    'Oslash': 216,\n\t    'Otilde': 213,\n\t    'Ouml': 214,\n\t    'THORN': 222,\n\t    'Uacute': 218,\n\t    'Ucirc': 219,\n\t    'Ugrave': 217,\n\t    'Uuml': 220,\n\t    'Yacute': 221,\n\t    'aacute': 225,\n\t    'acirc': 226,\n\t    'aelig': 230,\n\t    'agrave': 224,\n\t    'aring': 229,\n\t    'atilde': 227,\n\t    'auml': 228,\n\t    'ccedil': 231,\n\t    'eacute': 233,\n\t    'ecirc': 234,\n\t    'egrave': 232,\n\t    'eth': 240,\n\t    'euml': 235,\n\t    'iacute': 237,\n\t    'icirc': 238,\n\t    'igrave': 236,\n\t    'iuml': 239,\n\t    'ntilde': 241,\n\t    'oacute': 243,\n\t    'ocirc': 244,\n\t    'ograve': 242,\n\t    'oslash': 248,\n\t    'otilde': 245,\n\t    'ouml': 246,\n\t    'szlig': 223,\n\t    'thorn': 254,\n\t    'uacute': 250,\n\t    'ucirc': 251,\n\t    'ugrave': 249,\n\t    'uuml': 252,\n\t    'yacute': 253,\n\t    'yuml': 255,\n\t    'copy': 169,\n\t    'reg': 174,\n\t    'nbsp': 160,\n\t    'iexcl': 161,\n\t    'cent': 162,\n\t    'pound': 163,\n\t    'curren': 164,\n\t    'yen': 165,\n\t    'brvbar': 166,\n\t    'sect': 167,\n\t    'uml': 168,\n\t    'ordf': 170,\n\t    'laquo': 171,\n\t    'not': 172,\n\t    'shy': 173,\n\t    'macr': 175,\n\t    'deg': 176,\n\t    'plusmn': 177,\n\t    'sup1': 185,\n\t    'sup2': 178,\n\t    'sup3': 179,\n\t    'acute': 180,\n\t    'micro': 181,\n\t    'para': 182,\n\t    'middot': 183,\n\t    'cedil': 184,\n\t    'ordm': 186,\n\t    'raquo': 187,\n\t    'frac14': 188,\n\t    'frac12': 189,\n\t    'frac34': 190,\n\t    'iquest': 191,\n\t    'times': 215,\n\t    'divide': 247,\n\t    'OElig': 338,\n\t    'oelig': 339,\n\t    'Scaron': 352,\n\t    'scaron': 353,\n\t    'Yuml': 376,\n\t    'fnof': 402,\n\t    'circ': 710,\n\t    'tilde': 732,\n\t    'Alpha': 913,\n\t    'Beta': 914,\n\t    'Gamma': 915,\n\t    'Delta': 916,\n\t    'Epsilon': 917,\n\t    'Zeta': 918,\n\t    'Eta': 919,\n\t    'Theta': 920,\n\t    'Iota': 921,\n\t    'Kappa': 922,\n\t    'Lambda': 923,\n\t    'Mu': 924,\n\t    'Nu': 925,\n\t    'Xi': 926,\n\t    'Omicron': 927,\n\t    'Pi': 928,\n\t    'Rho': 929,\n\t    'Sigma': 931,\n\t    'Tau': 932,\n\t    'Upsilon': 933,\n\t    'Phi': 934,\n\t    'Chi': 935,\n\t    'Psi': 936,\n\t    'Omega': 937,\n\t    'alpha': 945,\n\t    'beta': 946,\n\t    'gamma': 947,\n\t    'delta': 948,\n\t    'epsilon': 949,\n\t    'zeta': 950,\n\t    'eta': 951,\n\t    'theta': 952,\n\t    'iota': 953,\n\t    'kappa': 954,\n\t    'lambda': 955,\n\t    'mu': 956,\n\t    'nu': 957,\n\t    'xi': 958,\n\t    'omicron': 959,\n\t    'pi': 960,\n\t    'rho': 961,\n\t    'sigmaf': 962,\n\t    'sigma': 963,\n\t    'tau': 964,\n\t    'upsilon': 965,\n\t    'phi': 966,\n\t    'chi': 967,\n\t    'psi': 968,\n\t    'omega': 969,\n\t    'thetasym': 977,\n\t    'upsih': 978,\n\t    'piv': 982,\n\t    'ensp': 8194,\n\t    'emsp': 8195,\n\t    'thinsp': 8201,\n\t    'zwnj': 8204,\n\t    'zwj': 8205,\n\t    'lrm': 8206,\n\t    'rlm': 8207,\n\t    'ndash': 8211,\n\t    'mdash': 8212,\n\t    'lsquo': 8216,\n\t    'rsquo': 8217,\n\t    'sbquo': 8218,\n\t    'ldquo': 8220,\n\t    'rdquo': 8221,\n\t    'bdquo': 8222,\n\t    'dagger': 8224,\n\t    'Dagger': 8225,\n\t    'bull': 8226,\n\t    'hellip': 8230,\n\t    'permil': 8240,\n\t    'prime': 8242,\n\t    'Prime': 8243,\n\t    'lsaquo': 8249,\n\t    'rsaquo': 8250,\n\t    'oline': 8254,\n\t    'frasl': 8260,\n\t    'euro': 8364,\n\t    'image': 8465,\n\t    'weierp': 8472,\n\t    'real': 8476,\n\t    'trade': 8482,\n\t    'alefsym': 8501,\n\t    'larr': 8592,\n\t    'uarr': 8593,\n\t    'rarr': 8594,\n\t    'darr': 8595,\n\t    'harr': 8596,\n\t    'crarr': 8629,\n\t    'lArr': 8656,\n\t    'uArr': 8657,\n\t    'rArr': 8658,\n\t    'dArr': 8659,\n\t    'hArr': 8660,\n\t    'forall': 8704,\n\t    'part': 8706,\n\t    'exist': 8707,\n\t    'empty': 8709,\n\t    'nabla': 8711,\n\t    'isin': 8712,\n\t    'notin': 8713,\n\t    'ni': 8715,\n\t    'prod': 8719,\n\t    'sum': 8721,\n\t    'minus': 8722,\n\t    'lowast': 8727,\n\t    'radic': 8730,\n\t    'prop': 8733,\n\t    'infin': 8734,\n\t    'ang': 8736,\n\t    'and': 8743,\n\t    'or': 8744,\n\t    'cap': 8745,\n\t    'cup': 8746,\n\t    'int': 8747,\n\t    'there4': 8756,\n\t    'sim': 8764,\n\t    'cong': 8773,\n\t    'asymp': 8776,\n\t    'ne': 8800,\n\t    'equiv': 8801,\n\t    'le': 8804,\n\t    'ge': 8805,\n\t    'sub': 8834,\n\t    'sup': 8835,\n\t    'nsub': 8836,\n\t    'sube': 8838,\n\t    'supe': 8839,\n\t    'oplus': 8853,\n\t    'otimes': 8855,\n\t    'perp': 8869,\n\t    'sdot': 8901,\n\t    'lceil': 8968,\n\t    'rceil': 8969,\n\t    'lfloor': 8970,\n\t    'rfloor': 8971,\n\t    'lang': 9001,\n\t    'rang': 9002,\n\t    'loz': 9674,\n\t    'spades': 9824,\n\t    'clubs': 9827,\n\t    'hearts': 9829,\n\t    'diams': 9830\n\t  }\n\t\n\t  Object.keys(sax.ENTITIES).forEach(function (key) {\n\t    var e = sax.ENTITIES[key]\n\t    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n\t    sax.ENTITIES[key] = s\n\t  })\n\t\n\t  for (var s in sax.STATE) {\n\t    sax.STATE[sax.STATE[s]] = s\n\t  }\n\t\n\t  // shorthand\n\t  S = sax.STATE\n\t\n\t  function emit (parser, event, data) {\n\t    parser[event] && parser[event](data)\n\t  }\n\t\n\t  function emitNode (parser, nodeType, data) {\n\t    if (parser.textNode) closeText(parser)\n\t    emit(parser, nodeType, data)\n\t  }\n\t\n\t  function closeText (parser) {\n\t    parser.textNode = textopts(parser.opt, parser.textNode)\n\t    if (parser.textNode) emit(parser, 'ontext', parser.textNode)\n\t    parser.textNode = ''\n\t  }\n\t\n\t  function textopts (opt, text) {\n\t    if (opt.trim) text = text.trim()\n\t    if (opt.normalize) text = text.replace(/\\s+/g, ' ')\n\t    return text\n\t  }\n\t\n\t  function error (parser, er) {\n\t    closeText(parser)\n\t    if (parser.trackPosition) {\n\t      er += '\\nLine: ' + parser.line +\n\t        '\\nColumn: ' + parser.column +\n\t        '\\nChar: ' + parser.c\n\t    }\n\t    er = new Error(er)\n\t    parser.error = er\n\t    emit(parser, 'onerror', er)\n\t    return parser\n\t  }\n\t\n\t  function end (parser) {\n\t    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\n\t    if ((parser.state !== S.BEGIN) &&\n\t      (parser.state !== S.BEGIN_WHITESPACE) &&\n\t      (parser.state !== S.TEXT)) {\n\t      error(parser, 'Unexpected end')\n\t    }\n\t    closeText(parser)\n\t    parser.c = ''\n\t    parser.closed = true\n\t    emit(parser, 'onend')\n\t    SAXParser.call(parser, parser.strict, parser.opt)\n\t    return parser\n\t  }\n\t\n\t  function strictFail (parser, message) {\n\t    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\n\t      throw new Error('bad call to strictFail')\n\t    }\n\t    if (parser.strict) {\n\t      error(parser, message)\n\t    }\n\t  }\n\t\n\t  function newTag (parser) {\n\t    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n\t    var parent = parser.tags[parser.tags.length - 1] || parser\n\t    var tag = parser.tag = { name: parser.tagName, attributes: {} }\n\t\n\t    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n\t    if (parser.opt.xmlns) {\n\t      tag.ns = parent.ns\n\t    }\n\t    parser.attribList.length = 0\n\t    emitNode(parser, 'onopentagstart', tag)\n\t  }\n\t\n\t  function qname (name, attribute) {\n\t    var i = name.indexOf(':')\n\t    var qualName = i < 0 ? [ '', name ] : name.split(':')\n\t    var prefix = qualName[0]\n\t    var local = qualName[1]\n\t\n\t    // <x \"xmlns\"=\"http://foo\">\n\t    if (attribute && name === 'xmlns') {\n\t      prefix = 'xmlns'\n\t      local = ''\n\t    }\n\t\n\t    return { prefix: prefix, local: local }\n\t  }\n\t\n\t  function attrib (parser) {\n\t    if (!parser.strict) {\n\t      parser.attribName = parser.attribName[parser.looseCase]()\n\t    }\n\t\n\t    if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n\t      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n\t      parser.attribName = parser.attribValue = ''\n\t      return\n\t    }\n\t\n\t    if (parser.opt.xmlns) {\n\t      var qn = qname(parser.attribName, true)\n\t      var prefix = qn.prefix\n\t      var local = qn.local\n\t\n\t      if (prefix === 'xmlns') {\n\t        // namespace binding attribute. push the binding into scope\n\t        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n\t          strictFail(parser,\n\t            'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\n\t            'Actual: ' + parser.attribValue)\n\t        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n\t          strictFail(parser,\n\t            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\n\t            'Actual: ' + parser.attribValue)\n\t        } else {\n\t          var tag = parser.tag\n\t          var parent = parser.tags[parser.tags.length - 1] || parser\n\t          if (tag.ns === parent.ns) {\n\t            tag.ns = Object.create(parent.ns)\n\t          }\n\t          tag.ns[local] = parser.attribValue\n\t        }\n\t      }\n\t\n\t      // defer onattribute events until all attributes have been seen\n\t      // so any new bindings can take effect. preserve attribute order\n\t      // so deferred events can be emitted in document order\n\t      parser.attribList.push([parser.attribName, parser.attribValue])\n\t    } else {\n\t      // in non-xmlns mode, we can emit the event right away\n\t      parser.tag.attributes[parser.attribName] = parser.attribValue\n\t      emitNode(parser, 'onattribute', {\n\t        name: parser.attribName,\n\t        value: parser.attribValue\n\t      })\n\t    }\n\t\n\t    parser.attribName = parser.attribValue = ''\n\t  }\n\t\n\t  function openTag (parser, selfClosing) {\n\t    if (parser.opt.xmlns) {\n\t      // emit namespace binding events\n\t      var tag = parser.tag\n\t\n\t      // add namespace info to tag\n\t      var qn = qname(parser.tagName)\n\t      tag.prefix = qn.prefix\n\t      tag.local = qn.local\n\t      tag.uri = tag.ns[qn.prefix] || ''\n\t\n\t      if (tag.prefix && !tag.uri) {\n\t        strictFail(parser, 'Unbound namespace prefix: ' +\n\t          JSON.stringify(parser.tagName))\n\t        tag.uri = qn.prefix\n\t      }\n\t\n\t      var parent = parser.tags[parser.tags.length - 1] || parser\n\t      if (tag.ns && parent.ns !== tag.ns) {\n\t        Object.keys(tag.ns).forEach(function (p) {\n\t          emitNode(parser, 'onopennamespace', {\n\t            prefix: p,\n\t            uri: tag.ns[p]\n\t          })\n\t        })\n\t      }\n\t\n\t      // handle deferred onattribute events\n\t      // Note: do not apply default ns to attributes:\n\t      //   http://www.w3.org/TR/REC-xml-names/#defaulting\n\t      for (var i = 0, l = parser.attribList.length; i < l; i++) {\n\t        var nv = parser.attribList[i]\n\t        var name = nv[0]\n\t        var value = nv[1]\n\t        var qualName = qname(name, true)\n\t        var prefix = qualName.prefix\n\t        var local = qualName.local\n\t        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\n\t        var a = {\n\t          name: name,\n\t          value: value,\n\t          prefix: prefix,\n\t          local: local,\n\t          uri: uri\n\t        }\n\t\n\t        // if there's any attributes with an undefined namespace,\n\t        // then fail on them now.\n\t        if (prefix && prefix !== 'xmlns' && !uri) {\n\t          strictFail(parser, 'Unbound namespace prefix: ' +\n\t            JSON.stringify(prefix))\n\t          a.uri = prefix\n\t        }\n\t        parser.tag.attributes[name] = a\n\t        emitNode(parser, 'onattribute', a)\n\t      }\n\t      parser.attribList.length = 0\n\t    }\n\t\n\t    parser.tag.isSelfClosing = !!selfClosing\n\t\n\t    // process the tag\n\t    parser.sawRoot = true\n\t    parser.tags.push(parser.tag)\n\t    emitNode(parser, 'onopentag', parser.tag)\n\t    if (!selfClosing) {\n\t      // special case for <script> in non-strict mode.\n\t      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n\t        parser.state = S.SCRIPT\n\t      } else {\n\t        parser.state = S.TEXT\n\t      }\n\t      parser.tag = null\n\t      parser.tagName = ''\n\t    }\n\t    parser.attribName = parser.attribValue = ''\n\t    parser.attribList.length = 0\n\t  }\n\t\n\t  function closeTag (parser) {\n\t    if (!parser.tagName) {\n\t      strictFail(parser, 'Weird empty close tag.')\n\t      parser.textNode += '</>'\n\t      parser.state = S.TEXT\n\t      return\n\t    }\n\t\n\t    if (parser.script) {\n\t      if (parser.tagName !== 'script') {\n\t        parser.script += '</' + parser.tagName + '>'\n\t        parser.tagName = ''\n\t        parser.state = S.SCRIPT\n\t        return\n\t      }\n\t      emitNode(parser, 'onscript', parser.script)\n\t      parser.script = ''\n\t    }\n\t\n\t    // first make sure that the closing tag actually exists.\n\t    // <a><b></c></b></a> will close everything, otherwise.\n\t    var t = parser.tags.length\n\t    var tagName = parser.tagName\n\t    if (!parser.strict) {\n\t      tagName = tagName[parser.looseCase]()\n\t    }\n\t    var closeTo = tagName\n\t    while (t--) {\n\t      var close = parser.tags[t]\n\t      if (close.name !== closeTo) {\n\t        // fail the first time in strict mode\n\t        strictFail(parser, 'Unexpected close tag')\n\t      } else {\n\t        break\n\t      }\n\t    }\n\t\n\t    // didn't find it.  we already failed for strict, so just abort.\n\t    if (t < 0) {\n\t      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\n\t      parser.textNode += '</' + parser.tagName + '>'\n\t      parser.state = S.TEXT\n\t      return\n\t    }\n\t    parser.tagName = tagName\n\t    var s = parser.tags.length\n\t    while (s-- > t) {\n\t      var tag = parser.tag = parser.tags.pop()\n\t      parser.tagName = parser.tag.name\n\t      emitNode(parser, 'onclosetag', parser.tagName)\n\t\n\t      var x = {}\n\t      for (var i in tag.ns) {\n\t        x[i] = tag.ns[i]\n\t      }\n\t\n\t      var parent = parser.tags[parser.tags.length - 1] || parser\n\t      if (parser.opt.xmlns && tag.ns !== parent.ns) {\n\t        // remove namespace bindings introduced by tag\n\t        Object.keys(tag.ns).forEach(function (p) {\n\t          var n = tag.ns[p]\n\t          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\n\t        })\n\t      }\n\t    }\n\t    if (t === 0) parser.closedRoot = true\n\t    parser.tagName = parser.attribValue = parser.attribName = ''\n\t    parser.attribList.length = 0\n\t    parser.state = S.TEXT\n\t  }\n\t\n\t  function parseEntity (parser) {\n\t    var entity = parser.entity\n\t    var entityLC = entity.toLowerCase()\n\t    var num\n\t    var numStr = ''\n\t\n\t    if (parser.ENTITIES[entity]) {\n\t      return parser.ENTITIES[entity]\n\t    }\n\t    if (parser.ENTITIES[entityLC]) {\n\t      return parser.ENTITIES[entityLC]\n\t    }\n\t    entity = entityLC\n\t    if (entity.charAt(0) === '#') {\n\t      if (entity.charAt(1) === 'x') {\n\t        entity = entity.slice(2)\n\t        num = parseInt(entity, 16)\n\t        numStr = num.toString(16)\n\t      } else {\n\t        entity = entity.slice(1)\n\t        num = parseInt(entity, 10)\n\t        numStr = num.toString(10)\n\t      }\n\t    }\n\t    entity = entity.replace(/^0+/, '')\n\t    if (numStr.toLowerCase() !== entity) {\n\t      strictFail(parser, 'Invalid character entity')\n\t      return '&' + parser.entity + ';'\n\t    }\n\t\n\t    return String.fromCodePoint(num)\n\t  }\n\t\n\t  function beginWhiteSpace (parser, c) {\n\t    if (c === '<') {\n\t      parser.state = S.OPEN_WAKA\n\t      parser.startTagPosition = parser.position\n\t    } else if (not(whitespace, c)) {\n\t      // have to process this as a text node.\n\t      // weird, but happens.\n\t      strictFail(parser, 'Non-whitespace before first tag.')\n\t      parser.textNode = c\n\t      parser.state = S.TEXT\n\t    }\n\t  }\n\t\n\t  function charAt (chunk, i) {\n\t    var result = ''\n\t    if (i < chunk.length) {\n\t      result = chunk.charAt(i)\n\t    }\n\t    return result\n\t  }\n\t\n\t  function write (chunk) {\n\t    var parser = this\n\t    if (this.error) {\n\t      throw this.error\n\t    }\n\t    if (parser.closed) {\n\t      return error(parser,\n\t        'Cannot write after close. Assign an onready handler.')\n\t    }\n\t    if (chunk === null) {\n\t      return end(parser)\n\t    }\n\t    if (typeof chunk === 'object') {\n\t      chunk = chunk.toString()\n\t    }\n\t    var i = 0\n\t    var c = ''\n\t    while (true) {\n\t      c = charAt(chunk, i++)\n\t      parser.c = c\n\t      if (!c) {\n\t        break\n\t      }\n\t      if (parser.trackPosition) {\n\t        parser.position++\n\t        if (c === '\\n') {\n\t          parser.line++\n\t          parser.column = 0\n\t        } else {\n\t          parser.column++\n\t        }\n\t      }\n\t      switch (parser.state) {\n\t        case S.BEGIN:\n\t          parser.state = S.BEGIN_WHITESPACE\n\t          if (c === '\\uFEFF') {\n\t            continue\n\t          }\n\t          beginWhiteSpace(parser, c)\n\t          continue\n\t\n\t        case S.BEGIN_WHITESPACE:\n\t          beginWhiteSpace(parser, c)\n\t          continue\n\t\n\t        case S.TEXT:\n\t          if (parser.sawRoot && !parser.closedRoot) {\n\t            var starti = i - 1\n\t            while (c && c !== '<' && c !== '&') {\n\t              c = charAt(chunk, i++)\n\t              if (c && parser.trackPosition) {\n\t                parser.position++\n\t                if (c === '\\n') {\n\t                  parser.line++\n\t                  parser.column = 0\n\t                } else {\n\t                  parser.column++\n\t                }\n\t              }\n\t            }\n\t            parser.textNode += chunk.substring(starti, i - 1)\n\t          }\n\t          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n\t            parser.state = S.OPEN_WAKA\n\t            parser.startTagPosition = parser.position\n\t          } else {\n\t            if (not(whitespace, c) && (!parser.sawRoot || parser.closedRoot)) {\n\t              strictFail(parser, 'Text data outside of root node.')\n\t            }\n\t            if (c === '&') {\n\t              parser.state = S.TEXT_ENTITY\n\t            } else {\n\t              parser.textNode += c\n\t            }\n\t          }\n\t          continue\n\t\n\t        case S.SCRIPT:\n\t          // only non-strict\n\t          if (c === '<') {\n\t            parser.state = S.SCRIPT_ENDING\n\t          } else {\n\t            parser.script += c\n\t          }\n\t          continue\n\t\n\t        case S.SCRIPT_ENDING:\n\t          if (c === '/') {\n\t            parser.state = S.CLOSE_TAG\n\t          } else {\n\t            parser.script += '<' + c\n\t            parser.state = S.SCRIPT\n\t          }\n\t          continue\n\t\n\t        case S.OPEN_WAKA:\n\t          // either a /, ?, !, or text is coming next.\n\t          if (c === '!') {\n\t            parser.state = S.SGML_DECL\n\t            parser.sgmlDecl = ''\n\t          } else if (is(whitespace, c)) {\n\t            // wait for it...\n\t          } else if (is(nameStart, c)) {\n\t            parser.state = S.OPEN_TAG\n\t            parser.tagName = c\n\t          } else if (c === '/') {\n\t            parser.state = S.CLOSE_TAG\n\t            parser.tagName = ''\n\t          } else if (c === '?') {\n\t            parser.state = S.PROC_INST\n\t            parser.procInstName = parser.procInstBody = ''\n\t          } else {\n\t            strictFail(parser, 'Unencoded <')\n\t            // if there was some whitespace, then add that in.\n\t            if (parser.startTagPosition + 1 < parser.position) {\n\t              var pad = parser.position - parser.startTagPosition\n\t              c = new Array(pad).join(' ') + c\n\t            }\n\t            parser.textNode += '<' + c\n\t            parser.state = S.TEXT\n\t          }\n\t          continue\n\t\n\t        case S.SGML_DECL:\n\t          if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n\t            emitNode(parser, 'onopencdata')\n\t            parser.state = S.CDATA\n\t            parser.sgmlDecl = ''\n\t            parser.cdata = ''\n\t          } else if (parser.sgmlDecl + c === '--') {\n\t            parser.state = S.COMMENT\n\t            parser.comment = ''\n\t            parser.sgmlDecl = ''\n\t          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n\t            parser.state = S.DOCTYPE\n\t            if (parser.doctype || parser.sawRoot) {\n\t              strictFail(parser,\n\t                'Inappropriately located doctype declaration')\n\t            }\n\t            parser.doctype = ''\n\t            parser.sgmlDecl = ''\n\t          } else if (c === '>') {\n\t            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\n\t            parser.sgmlDecl = ''\n\t            parser.state = S.TEXT\n\t          } else if (is(quote, c)) {\n\t            parser.state = S.SGML_DECL_QUOTED\n\t            parser.sgmlDecl += c\n\t          } else {\n\t            parser.sgmlDecl += c\n\t          }\n\t          continue\n\t\n\t        case S.SGML_DECL_QUOTED:\n\t          if (c === parser.q) {\n\t            parser.state = S.SGML_DECL\n\t            parser.q = ''\n\t          }\n\t          parser.sgmlDecl += c\n\t          continue\n\t\n\t        case S.DOCTYPE:\n\t          if (c === '>') {\n\t            parser.state = S.TEXT\n\t            emitNode(parser, 'ondoctype', parser.doctype)\n\t            parser.doctype = true // just remember that we saw it.\n\t          } else {\n\t            parser.doctype += c\n\t            if (c === '[') {\n\t              parser.state = S.DOCTYPE_DTD\n\t            } else if (is(quote, c)) {\n\t              parser.state = S.DOCTYPE_QUOTED\n\t              parser.q = c\n\t            }\n\t          }\n\t          continue\n\t\n\t        case S.DOCTYPE_QUOTED:\n\t          parser.doctype += c\n\t          if (c === parser.q) {\n\t            parser.q = ''\n\t            parser.state = S.DOCTYPE\n\t          }\n\t          continue\n\t\n\t        case S.DOCTYPE_DTD:\n\t          parser.doctype += c\n\t          if (c === ']') {\n\t            parser.state = S.DOCTYPE\n\t          } else if (is(quote, c)) {\n\t            parser.state = S.DOCTYPE_DTD_QUOTED\n\t            parser.q = c\n\t          }\n\t          continue\n\t\n\t        case S.DOCTYPE_DTD_QUOTED:\n\t          parser.doctype += c\n\t          if (c === parser.q) {\n\t            parser.state = S.DOCTYPE_DTD\n\t            parser.q = ''\n\t          }\n\t          continue\n\t\n\t        case S.COMMENT:\n\t          if (c === '-') {\n\t            parser.state = S.COMMENT_ENDING\n\t          } else {\n\t            parser.comment += c\n\t          }\n\t          continue\n\t\n\t        case S.COMMENT_ENDING:\n\t          if (c === '-') {\n\t            parser.state = S.COMMENT_ENDED\n\t            parser.comment = textopts(parser.opt, parser.comment)\n\t            if (parser.comment) {\n\t              emitNode(parser, 'oncomment', parser.comment)\n\t            }\n\t            parser.comment = ''\n\t          } else {\n\t            parser.comment += '-' + c\n\t            parser.state = S.COMMENT\n\t          }\n\t          continue\n\t\n\t        case S.COMMENT_ENDED:\n\t          if (c !== '>') {\n\t            strictFail(parser, 'Malformed comment')\n\t            // allow <!-- blah -- bloo --> in non-strict mode,\n\t            // which is a comment of \" blah -- bloo \"\n\t            parser.comment += '--' + c\n\t            parser.state = S.COMMENT\n\t          } else {\n\t            parser.state = S.TEXT\n\t          }\n\t          continue\n\t\n\t        case S.CDATA:\n\t          if (c === ']') {\n\t            parser.state = S.CDATA_ENDING\n\t          } else {\n\t            parser.cdata += c\n\t          }\n\t          continue\n\t\n\t        case S.CDATA_ENDING:\n\t          if (c === ']') {\n\t            parser.state = S.CDATA_ENDING_2\n\t          } else {\n\t            parser.cdata += ']' + c\n\t            parser.state = S.CDATA\n\t          }\n\t          continue\n\t\n\t        case S.CDATA_ENDING_2:\n\t          if (c === '>') {\n\t            if (parser.cdata) {\n\t              emitNode(parser, 'oncdata', parser.cdata)\n\t            }\n\t            emitNode(parser, 'onclosecdata')\n\t            parser.cdata = ''\n\t            parser.state = S.TEXT\n\t          } else if (c === ']') {\n\t            parser.cdata += ']'\n\t          } else {\n\t            parser.cdata += ']]' + c\n\t            parser.state = S.CDATA\n\t          }\n\t          continue\n\t\n\t        case S.PROC_INST:\n\t          if (c === '?') {\n\t            parser.state = S.PROC_INST_ENDING\n\t          } else if (is(whitespace, c)) {\n\t            parser.state = S.PROC_INST_BODY\n\t          } else {\n\t            parser.procInstName += c\n\t          }\n\t          continue\n\t\n\t        case S.PROC_INST_BODY:\n\t          if (!parser.procInstBody && is(whitespace, c)) {\n\t            continue\n\t          } else if (c === '?') {\n\t            parser.state = S.PROC_INST_ENDING\n\t          } else {\n\t            parser.procInstBody += c\n\t          }\n\t          continue\n\t\n\t        case S.PROC_INST_ENDING:\n\t          if (c === '>') {\n\t            emitNode(parser, 'onprocessinginstruction', {\n\t              name: parser.procInstName,\n\t              body: parser.procInstBody\n\t            })\n\t            parser.procInstName = parser.procInstBody = ''\n\t            parser.state = S.TEXT\n\t          } else {\n\t            parser.procInstBody += '?' + c\n\t            parser.state = S.PROC_INST_BODY\n\t          }\n\t          continue\n\t\n\t        case S.OPEN_TAG:\n\t          if (is(nameBody, c)) {\n\t            parser.tagName += c\n\t          } else {\n\t            newTag(parser)\n\t            if (c === '>') {\n\t              openTag(parser)\n\t            } else if (c === '/') {\n\t              parser.state = S.OPEN_TAG_SLASH\n\t            } else {\n\t              if (not(whitespace, c)) {\n\t                strictFail(parser, 'Invalid character in tag name')\n\t              }\n\t              parser.state = S.ATTRIB\n\t            }\n\t          }\n\t          continue\n\t\n\t        case S.OPEN_TAG_SLASH:\n\t          if (c === '>') {\n\t            openTag(parser, true)\n\t            closeTag(parser)\n\t          } else {\n\t            strictFail(parser, 'Forward-slash in opening tag not followed by >')\n\t            parser.state = S.ATTRIB\n\t          }\n\t          continue\n\t\n\t        case S.ATTRIB:\n\t          // haven't read the attribute name yet.\n\t          if (is(whitespace, c)) {\n\t            continue\n\t          } else if (c === '>') {\n\t            openTag(parser)\n\t          } else if (c === '/') {\n\t            parser.state = S.OPEN_TAG_SLASH\n\t          } else if (is(nameStart, c)) {\n\t            parser.attribName = c\n\t            parser.attribValue = ''\n\t            parser.state = S.ATTRIB_NAME\n\t          } else {\n\t            strictFail(parser, 'Invalid attribute name')\n\t          }\n\t          continue\n\t\n\t        case S.ATTRIB_NAME:\n\t          if (c === '=') {\n\t            parser.state = S.ATTRIB_VALUE\n\t          } else if (c === '>') {\n\t            strictFail(parser, 'Attribute without value')\n\t            parser.attribValue = parser.attribName\n\t            attrib(parser)\n\t            openTag(parser)\n\t          } else if (is(whitespace, c)) {\n\t            parser.state = S.ATTRIB_NAME_SAW_WHITE\n\t          } else if (is(nameBody, c)) {\n\t            parser.attribName += c\n\t          } else {\n\t            strictFail(parser, 'Invalid attribute name')\n\t          }\n\t          continue\n\t\n\t        case S.ATTRIB_NAME_SAW_WHITE:\n\t          if (c === '=') {\n\t            parser.state = S.ATTRIB_VALUE\n\t          } else if (is(whitespace, c)) {\n\t            continue\n\t          } else {\n\t            strictFail(parser, 'Attribute without value')\n\t            parser.tag.attributes[parser.attribName] = ''\n\t            parser.attribValue = ''\n\t            emitNode(parser, 'onattribute', {\n\t              name: parser.attribName,\n\t              value: ''\n\t            })\n\t            parser.attribName = ''\n\t            if (c === '>') {\n\t              openTag(parser)\n\t            } else if (is(nameStart, c)) {\n\t              parser.attribName = c\n\t              parser.state = S.ATTRIB_NAME\n\t            } else {\n\t              strictFail(parser, 'Invalid attribute name')\n\t              parser.state = S.ATTRIB\n\t            }\n\t          }\n\t          continue\n\t\n\t        case S.ATTRIB_VALUE:\n\t          if (is(whitespace, c)) {\n\t            continue\n\t          } else if (is(quote, c)) {\n\t            parser.q = c\n\t            parser.state = S.ATTRIB_VALUE_QUOTED\n\t          } else {\n\t            strictFail(parser, 'Unquoted attribute value')\n\t            parser.state = S.ATTRIB_VALUE_UNQUOTED\n\t            parser.attribValue = c\n\t          }\n\t          continue\n\t\n\t        case S.ATTRIB_VALUE_QUOTED:\n\t          if (c !== parser.q) {\n\t            if (c === '&') {\n\t              parser.state = S.ATTRIB_VALUE_ENTITY_Q\n\t            } else {\n\t              parser.attribValue += c\n\t            }\n\t            continue\n\t          }\n\t          attrib(parser)\n\t          parser.q = ''\n\t          parser.state = S.ATTRIB_VALUE_CLOSED\n\t          continue\n\t\n\t        case S.ATTRIB_VALUE_CLOSED:\n\t          if (is(whitespace, c)) {\n\t            parser.state = S.ATTRIB\n\t          } else if (c === '>') {\n\t            openTag(parser)\n\t          } else if (c === '/') {\n\t            parser.state = S.OPEN_TAG_SLASH\n\t          } else if (is(nameStart, c)) {\n\t            strictFail(parser, 'No whitespace between attributes')\n\t            parser.attribName = c\n\t            parser.attribValue = ''\n\t            parser.state = S.ATTRIB_NAME\n\t          } else {\n\t            strictFail(parser, 'Invalid attribute name')\n\t          }\n\t          continue\n\t\n\t        case S.ATTRIB_VALUE_UNQUOTED:\n\t          if (not(attribEnd, c)) {\n\t            if (c === '&') {\n\t              parser.state = S.ATTRIB_VALUE_ENTITY_U\n\t            } else {\n\t              parser.attribValue += c\n\t            }\n\t            continue\n\t          }\n\t          attrib(parser)\n\t          if (c === '>') {\n\t            openTag(parser)\n\t          } else {\n\t            parser.state = S.ATTRIB\n\t          }\n\t          continue\n\t\n\t        case S.CLOSE_TAG:\n\t          if (!parser.tagName) {\n\t            if (is(whitespace, c)) {\n\t              continue\n\t            } else if (not(nameStart, c)) {\n\t              if (parser.script) {\n\t                parser.script += '</' + c\n\t                parser.state = S.SCRIPT\n\t              } else {\n\t                strictFail(parser, 'Invalid tagname in closing tag.')\n\t              }\n\t            } else {\n\t              parser.tagName = c\n\t            }\n\t          } else if (c === '>') {\n\t            closeTag(parser)\n\t          } else if (is(nameBody, c)) {\n\t            parser.tagName += c\n\t          } else if (parser.script) {\n\t            parser.script += '</' + parser.tagName\n\t            parser.tagName = ''\n\t            parser.state = S.SCRIPT\n\t          } else {\n\t            if (not(whitespace, c)) {\n\t              strictFail(parser, 'Invalid tagname in closing tag')\n\t            }\n\t            parser.state = S.CLOSE_TAG_SAW_WHITE\n\t          }\n\t          continue\n\t\n\t        case S.CLOSE_TAG_SAW_WHITE:\n\t          if (is(whitespace, c)) {\n\t            continue\n\t          }\n\t          if (c === '>') {\n\t            closeTag(parser)\n\t          } else {\n\t            strictFail(parser, 'Invalid characters in closing tag')\n\t          }\n\t          continue\n\t\n\t        case S.TEXT_ENTITY:\n\t        case S.ATTRIB_VALUE_ENTITY_Q:\n\t        case S.ATTRIB_VALUE_ENTITY_U:\n\t          var returnState\n\t          var buffer\n\t          switch (parser.state) {\n\t            case S.TEXT_ENTITY:\n\t              returnState = S.TEXT\n\t              buffer = 'textNode'\n\t              break\n\t\n\t            case S.ATTRIB_VALUE_ENTITY_Q:\n\t              returnState = S.ATTRIB_VALUE_QUOTED\n\t              buffer = 'attribValue'\n\t              break\n\t\n\t            case S.ATTRIB_VALUE_ENTITY_U:\n\t              returnState = S.ATTRIB_VALUE_UNQUOTED\n\t              buffer = 'attribValue'\n\t              break\n\t          }\n\t\n\t          if (c === ';') {\n\t            parser[buffer] += parseEntity(parser)\n\t            parser.entity = ''\n\t            parser.state = returnState\n\t          } else if (is(parser.entity.length ? entityBody : entityStart, c)) {\n\t            parser.entity += c\n\t          } else {\n\t            strictFail(parser, 'Invalid character in entity name')\n\t            parser[buffer] += '&' + parser.entity + c\n\t            parser.entity = ''\n\t            parser.state = returnState\n\t          }\n\t\n\t          continue\n\t\n\t        default:\n\t          throw new Error(parser, 'Unknown state: ' + parser.state)\n\t      }\n\t    } // while\n\t\n\t    if (parser.position >= parser.bufferCheckPosition) {\n\t      checkBufferLength(parser)\n\t    }\n\t    return parser\n\t  }\n\t\n\t  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n\t  if (!String.fromCodePoint) {\n\t    (function () {\n\t      var stringFromCharCode = String.fromCharCode\n\t      var floor = Math.floor\n\t      var fromCodePoint = function () {\n\t        var MAX_SIZE = 0x4000\n\t        var codeUnits = []\n\t        var highSurrogate\n\t        var lowSurrogate\n\t        var index = -1\n\t        var length = arguments.length\n\t        if (!length) {\n\t          return ''\n\t        }\n\t        var result = ''\n\t        while (++index < length) {\n\t          var codePoint = Number(arguments[index])\n\t          if (\n\t            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n\t            codePoint < 0 || // not a valid Unicode code point\n\t            codePoint > 0x10FFFF || // not a valid Unicode code point\n\t            floor(codePoint) !== codePoint // not an integer\n\t          ) {\n\t            throw RangeError('Invalid code point: ' + codePoint)\n\t          }\n\t          if (codePoint <= 0xFFFF) { // BMP code point\n\t            codeUnits.push(codePoint)\n\t          } else { // Astral code point; split in surrogate halves\n\t            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t            codePoint -= 0x10000\n\t            highSurrogate = (codePoint >> 10) + 0xD800\n\t            lowSurrogate = (codePoint % 0x400) + 0xDC00\n\t            codeUnits.push(highSurrogate, lowSurrogate)\n\t          }\n\t          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n\t            result += stringFromCharCode.apply(null, codeUnits)\n\t            codeUnits.length = 0\n\t          }\n\t        }\n\t        return result\n\t      }\n\t      if (Object.defineProperty) {\n\t        Object.defineProperty(String, 'fromCodePoint', {\n\t          value: fromCodePoint,\n\t          configurable: true,\n\t          writable: true\n\t        })\n\t      } else {\n\t        String.fromCodePoint = fromCodePoint\n\t      }\n\t    }())\n\t  }\n\t})( false ? this.sax = {} : exports)\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer))\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * The buffer module from node.js, for the browser.\n\t *\n\t * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n\t * @license  MIT\n\t */\n\t/* eslint-disable no-proto */\n\t\n\t'use strict'\n\t\n\tvar base64 = __webpack_require__(5)\n\tvar ieee754 = __webpack_require__(6)\n\tvar isArray = __webpack_require__(7)\n\t\n\texports.Buffer = Buffer\n\texports.SlowBuffer = SlowBuffer\n\texports.INSPECT_MAX_BYTES = 50\n\t\n\t/**\n\t * If `Buffer.TYPED_ARRAY_SUPPORT`:\n\t *   === true    Use Uint8Array implementation (fastest)\n\t *   === false   Use Object implementation (most compatible, even IE6)\n\t *\n\t * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n\t * Opera 11.6+, iOS 4.2+.\n\t *\n\t * Due to various browser bugs, sometimes the Object implementation will be used even\n\t * when the browser supports typed arrays.\n\t *\n\t * Note:\n\t *\n\t *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n\t *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n\t *\n\t *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n\t *\n\t *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n\t *     incorrect length in some situations.\n\t\n\t * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n\t * get the Object implementation, which is slower but behaves correctly.\n\t */\n\tBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n\t  ? global.TYPED_ARRAY_SUPPORT\n\t  : typedArraySupport()\n\t\n\t/*\n\t * Export kMaxLength after typed array support is determined.\n\t */\n\texports.kMaxLength = kMaxLength()\n\t\n\tfunction typedArraySupport () {\n\t  try {\n\t    var arr = new Uint8Array(1)\n\t    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n\t    return arr.foo() === 42 && // typed array instances can be augmented\n\t        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n\t        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n\t  } catch (e) {\n\t    return false\n\t  }\n\t}\n\t\n\tfunction kMaxLength () {\n\t  return Buffer.TYPED_ARRAY_SUPPORT\n\t    ? 0x7fffffff\n\t    : 0x3fffffff\n\t}\n\t\n\tfunction createBuffer (that, length) {\n\t  if (kMaxLength() < length) {\n\t    throw new RangeError('Invalid typed array length')\n\t  }\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = new Uint8Array(length)\n\t    that.__proto__ = Buffer.prototype\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    if (that === null) {\n\t      that = new Buffer(length)\n\t    }\n\t    that.length = length\n\t  }\n\t\n\t  return that\n\t}\n\t\n\t/**\n\t * The Buffer constructor returns instances of `Uint8Array` that have their\n\t * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n\t * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n\t * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n\t * returns a single octet.\n\t *\n\t * The `Uint8Array` prototype remains unmodified.\n\t */\n\t\n\tfunction Buffer (arg, encodingOrOffset, length) {\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n\t    return new Buffer(arg, encodingOrOffset, length)\n\t  }\n\t\n\t  // Common case.\n\t  if (typeof arg === 'number') {\n\t    if (typeof encodingOrOffset === 'string') {\n\t      throw new Error(\n\t        'If encoding is specified then the first argument must be a string'\n\t      )\n\t    }\n\t    return allocUnsafe(this, arg)\n\t  }\n\t  return from(this, arg, encodingOrOffset, length)\n\t}\n\t\n\tBuffer.poolSize = 8192 // not used by this implementation\n\t\n\t// TODO: Legacy, not needed anymore. Remove in next major version.\n\tBuffer._augment = function (arr) {\n\t  arr.__proto__ = Buffer.prototype\n\t  return arr\n\t}\n\t\n\tfunction from (that, value, encodingOrOffset, length) {\n\t  if (typeof value === 'number') {\n\t    throw new TypeError('\"value\" argument must not be a number')\n\t  }\n\t\n\t  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n\t    return fromArrayBuffer(that, value, encodingOrOffset, length)\n\t  }\n\t\n\t  if (typeof value === 'string') {\n\t    return fromString(that, value, encodingOrOffset)\n\t  }\n\t\n\t  return fromObject(that, value)\n\t}\n\t\n\t/**\n\t * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n\t * if value is a number.\n\t * Buffer.from(str[, encoding])\n\t * Buffer.from(array)\n\t * Buffer.from(buffer)\n\t * Buffer.from(arrayBuffer[, byteOffset[, length]])\n\t **/\n\tBuffer.from = function (value, encodingOrOffset, length) {\n\t  return from(null, value, encodingOrOffset, length)\n\t}\n\t\n\tif (Buffer.TYPED_ARRAY_SUPPORT) {\n\t  Buffer.prototype.__proto__ = Uint8Array.prototype\n\t  Buffer.__proto__ = Uint8Array\n\t  if (typeof Symbol !== 'undefined' && Symbol.species &&\n\t      Buffer[Symbol.species] === Buffer) {\n\t    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n\t    Object.defineProperty(Buffer, Symbol.species, {\n\t      value: null,\n\t      configurable: true\n\t    })\n\t  }\n\t}\n\t\n\tfunction assertSize (size) {\n\t  if (typeof size !== 'number') {\n\t    throw new TypeError('\"size\" argument must be a number')\n\t  } else if (size < 0) {\n\t    throw new RangeError('\"size\" argument must not be negative')\n\t  }\n\t}\n\t\n\tfunction alloc (that, size, fill, encoding) {\n\t  assertSize(size)\n\t  if (size <= 0) {\n\t    return createBuffer(that, size)\n\t  }\n\t  if (fill !== undefined) {\n\t    // Only pay attention to encoding if it's a string. This\n\t    // prevents accidentally sending in a number that would\n\t    // be interpretted as a start offset.\n\t    return typeof encoding === 'string'\n\t      ? createBuffer(that, size).fill(fill, encoding)\n\t      : createBuffer(that, size).fill(fill)\n\t  }\n\t  return createBuffer(that, size)\n\t}\n\t\n\t/**\n\t * Creates a new filled Buffer instance.\n\t * alloc(size[, fill[, encoding]])\n\t **/\n\tBuffer.alloc = function (size, fill, encoding) {\n\t  return alloc(null, size, fill, encoding)\n\t}\n\t\n\tfunction allocUnsafe (that, size) {\n\t  assertSize(size)\n\t  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n\t    for (var i = 0; i < size; ++i) {\n\t      that[i] = 0\n\t    }\n\t  }\n\t  return that\n\t}\n\t\n\t/**\n\t * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n\t * */\n\tBuffer.allocUnsafe = function (size) {\n\t  return allocUnsafe(null, size)\n\t}\n\t/**\n\t * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n\t */\n\tBuffer.allocUnsafeSlow = function (size) {\n\t  return allocUnsafe(null, size)\n\t}\n\t\n\tfunction fromString (that, string, encoding) {\n\t  if (typeof encoding !== 'string' || encoding === '') {\n\t    encoding = 'utf8'\n\t  }\n\t\n\t  if (!Buffer.isEncoding(encoding)) {\n\t    throw new TypeError('\"encoding\" must be a valid string encoding')\n\t  }\n\t\n\t  var length = byteLength(string, encoding) | 0\n\t  that = createBuffer(that, length)\n\t\n\t  var actual = that.write(string, encoding)\n\t\n\t  if (actual !== length) {\n\t    // Writing a hex string, for example, that contains invalid characters will\n\t    // cause everything after the first invalid character to be ignored. (e.g.\n\t    // 'abxxcd' will be treated as 'ab')\n\t    that = that.slice(0, actual)\n\t  }\n\t\n\t  return that\n\t}\n\t\n\tfunction fromArrayLike (that, array) {\n\t  var length = array.length < 0 ? 0 : checked(array.length) | 0\n\t  that = createBuffer(that, length)\n\t  for (var i = 0; i < length; i += 1) {\n\t    that[i] = array[i] & 255\n\t  }\n\t  return that\n\t}\n\t\n\tfunction fromArrayBuffer (that, array, byteOffset, length) {\n\t  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\t\n\t  if (byteOffset < 0 || array.byteLength < byteOffset) {\n\t    throw new RangeError('\\'offset\\' is out of bounds')\n\t  }\n\t\n\t  if (array.byteLength < byteOffset + (length || 0)) {\n\t    throw new RangeError('\\'length\\' is out of bounds')\n\t  }\n\t\n\t  if (byteOffset === undefined && length === undefined) {\n\t    array = new Uint8Array(array)\n\t  } else if (length === undefined) {\n\t    array = new Uint8Array(array, byteOffset)\n\t  } else {\n\t    array = new Uint8Array(array, byteOffset, length)\n\t  }\n\t\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = array\n\t    that.__proto__ = Buffer.prototype\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    that = fromArrayLike(that, array)\n\t  }\n\t  return that\n\t}\n\t\n\tfunction fromObject (that, obj) {\n\t  if (Buffer.isBuffer(obj)) {\n\t    var len = checked(obj.length) | 0\n\t    that = createBuffer(that, len)\n\t\n\t    if (that.length === 0) {\n\t      return that\n\t    }\n\t\n\t    obj.copy(that, 0, 0, len)\n\t    return that\n\t  }\n\t\n\t  if (obj) {\n\t    if ((typeof ArrayBuffer !== 'undefined' &&\n\t        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n\t      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n\t        return createBuffer(that, 0)\n\t      }\n\t      return fromArrayLike(that, obj)\n\t    }\n\t\n\t    if (obj.type === 'Buffer' && isArray(obj.data)) {\n\t      return fromArrayLike(that, obj.data)\n\t    }\n\t  }\n\t\n\t  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n\t}\n\t\n\tfunction checked (length) {\n\t  // Note: cannot use `length < kMaxLength()` here because that fails when\n\t  // length is NaN (which is otherwise coerced to zero.)\n\t  if (length >= kMaxLength()) {\n\t    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n\t                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n\t  }\n\t  return length | 0\n\t}\n\t\n\tfunction SlowBuffer (length) {\n\t  if (+length != length) { // eslint-disable-line eqeqeq\n\t    length = 0\n\t  }\n\t  return Buffer.alloc(+length)\n\t}\n\t\n\tBuffer.isBuffer = function isBuffer (b) {\n\t  return !!(b != null && b._isBuffer)\n\t}\n\t\n\tBuffer.compare = function compare (a, b) {\n\t  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n\t    throw new TypeError('Arguments must be Buffers')\n\t  }\n\t\n\t  if (a === b) return 0\n\t\n\t  var x = a.length\n\t  var y = b.length\n\t\n\t  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n\t    if (a[i] !== b[i]) {\n\t      x = a[i]\n\t      y = b[i]\n\t      break\n\t    }\n\t  }\n\t\n\t  if (x < y) return -1\n\t  if (y < x) return 1\n\t  return 0\n\t}\n\t\n\tBuffer.isEncoding = function isEncoding (encoding) {\n\t  switch (String(encoding).toLowerCase()) {\n\t    case 'hex':\n\t    case 'utf8':\n\t    case 'utf-8':\n\t    case 'ascii':\n\t    case 'latin1':\n\t    case 'binary':\n\t    case 'base64':\n\t    case 'ucs2':\n\t    case 'ucs-2':\n\t    case 'utf16le':\n\t    case 'utf-16le':\n\t      return true\n\t    default:\n\t      return false\n\t  }\n\t}\n\t\n\tBuffer.concat = function concat (list, length) {\n\t  if (!isArray(list)) {\n\t    throw new TypeError('\"list\" argument must be an Array of Buffers')\n\t  }\n\t\n\t  if (list.length === 0) {\n\t    return Buffer.alloc(0)\n\t  }\n\t\n\t  var i\n\t  if (length === undefined) {\n\t    length = 0\n\t    for (i = 0; i < list.length; ++i) {\n\t      length += list[i].length\n\t    }\n\t  }\n\t\n\t  var buffer = Buffer.allocUnsafe(length)\n\t  var pos = 0\n\t  for (i = 0; i < list.length; ++i) {\n\t    var buf = list[i]\n\t    if (!Buffer.isBuffer(buf)) {\n\t      throw new TypeError('\"list\" argument must be an Array of Buffers')\n\t    }\n\t    buf.copy(buffer, pos)\n\t    pos += buf.length\n\t  }\n\t  return buffer\n\t}\n\t\n\tfunction byteLength (string, encoding) {\n\t  if (Buffer.isBuffer(string)) {\n\t    return string.length\n\t  }\n\t  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n\t      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n\t    return string.byteLength\n\t  }\n\t  if (typeof string !== 'string') {\n\t    string = '' + string\n\t  }\n\t\n\t  var len = string.length\n\t  if (len === 0) return 0\n\t\n\t  // Use a for loop to avoid recursion\n\t  var loweredCase = false\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'ascii':\n\t      case 'latin1':\n\t      case 'binary':\n\t        return len\n\t      case 'utf8':\n\t      case 'utf-8':\n\t      case undefined:\n\t        return utf8ToBytes(string).length\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return len * 2\n\t      case 'hex':\n\t        return len >>> 1\n\t      case 'base64':\n\t        return base64ToBytes(string).length\n\t      default:\n\t        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n\t        encoding = ('' + encoding).toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\tBuffer.byteLength = byteLength\n\t\n\tfunction slowToString (encoding, start, end) {\n\t  var loweredCase = false\n\t\n\t  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n\t  // property of a typed array.\n\t\n\t  // This behaves neither like String nor Uint8Array in that we set start/end\n\t  // to their upper/lower bounds if the value passed is out of range.\n\t  // undefined is handled specially as per ECMA-262 6th Edition,\n\t  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\t  if (start === undefined || start < 0) {\n\t    start = 0\n\t  }\n\t  // Return early if start > this.length. Done here to prevent potential uint32\n\t  // coercion fail below.\n\t  if (start > this.length) {\n\t    return ''\n\t  }\n\t\n\t  if (end === undefined || end > this.length) {\n\t    end = this.length\n\t  }\n\t\n\t  if (end <= 0) {\n\t    return ''\n\t  }\n\t\n\t  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\t  end >>>= 0\n\t  start >>>= 0\n\t\n\t  if (end <= start) {\n\t    return ''\n\t  }\n\t\n\t  if (!encoding) encoding = 'utf8'\n\t\n\t  while (true) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexSlice(this, start, end)\n\t\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Slice(this, start, end)\n\t\n\t      case 'ascii':\n\t        return asciiSlice(this, start, end)\n\t\n\t      case 'latin1':\n\t      case 'binary':\n\t        return latin1Slice(this, start, end)\n\t\n\t      case 'base64':\n\t        return base64Slice(this, start, end)\n\t\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return utf16leSlice(this, start, end)\n\t\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = (encoding + '').toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\t\n\t// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n\t// Buffer instances.\n\tBuffer.prototype._isBuffer = true\n\t\n\tfunction swap (b, n, m) {\n\t  var i = b[n]\n\t  b[n] = b[m]\n\t  b[m] = i\n\t}\n\t\n\tBuffer.prototype.swap16 = function swap16 () {\n\t  var len = this.length\n\t  if (len % 2 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 16-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 2) {\n\t    swap(this, i, i + 1)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.swap32 = function swap32 () {\n\t  var len = this.length\n\t  if (len % 4 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 32-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 4) {\n\t    swap(this, i, i + 3)\n\t    swap(this, i + 1, i + 2)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.swap64 = function swap64 () {\n\t  var len = this.length\n\t  if (len % 8 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 64-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 8) {\n\t    swap(this, i, i + 7)\n\t    swap(this, i + 1, i + 6)\n\t    swap(this, i + 2, i + 5)\n\t    swap(this, i + 3, i + 4)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.toString = function toString () {\n\t  var length = this.length | 0\n\t  if (length === 0) return ''\n\t  if (arguments.length === 0) return utf8Slice(this, 0, length)\n\t  return slowToString.apply(this, arguments)\n\t}\n\t\n\tBuffer.prototype.equals = function equals (b) {\n\t  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n\t  if (this === b) return true\n\t  return Buffer.compare(this, b) === 0\n\t}\n\t\n\tBuffer.prototype.inspect = function inspect () {\n\t  var str = ''\n\t  var max = exports.INSPECT_MAX_BYTES\n\t  if (this.length > 0) {\n\t    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n\t    if (this.length > max) str += ' ... '\n\t  }\n\t  return '<Buffer ' + str + '>'\n\t}\n\t\n\tBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n\t  if (!Buffer.isBuffer(target)) {\n\t    throw new TypeError('Argument must be a Buffer')\n\t  }\n\t\n\t  if (start === undefined) {\n\t    start = 0\n\t  }\n\t  if (end === undefined) {\n\t    end = target ? target.length : 0\n\t  }\n\t  if (thisStart === undefined) {\n\t    thisStart = 0\n\t  }\n\t  if (thisEnd === undefined) {\n\t    thisEnd = this.length\n\t  }\n\t\n\t  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n\t    throw new RangeError('out of range index')\n\t  }\n\t\n\t  if (thisStart >= thisEnd && start >= end) {\n\t    return 0\n\t  }\n\t  if (thisStart >= thisEnd) {\n\t    return -1\n\t  }\n\t  if (start >= end) {\n\t    return 1\n\t  }\n\t\n\t  start >>>= 0\n\t  end >>>= 0\n\t  thisStart >>>= 0\n\t  thisEnd >>>= 0\n\t\n\t  if (this === target) return 0\n\t\n\t  var x = thisEnd - thisStart\n\t  var y = end - start\n\t  var len = Math.min(x, y)\n\t\n\t  var thisCopy = this.slice(thisStart, thisEnd)\n\t  var targetCopy = target.slice(start, end)\n\t\n\t  for (var i = 0; i < len; ++i) {\n\t    if (thisCopy[i] !== targetCopy[i]) {\n\t      x = thisCopy[i]\n\t      y = targetCopy[i]\n\t      break\n\t    }\n\t  }\n\t\n\t  if (x < y) return -1\n\t  if (y < x) return 1\n\t  return 0\n\t}\n\t\n\t// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n\t// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n\t//\n\t// Arguments:\n\t// - buffer - a Buffer to search\n\t// - val - a string, Buffer, or number\n\t// - byteOffset - an index into `buffer`; will be clamped to an int32\n\t// - encoding - an optional encoding, relevant is val is a string\n\t// - dir - true for indexOf, false for lastIndexOf\n\tfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n\t  // Empty buffer means no match\n\t  if (buffer.length === 0) return -1\n\t\n\t  // Normalize byteOffset\n\t  if (typeof byteOffset === 'string') {\n\t    encoding = byteOffset\n\t    byteOffset = 0\n\t  } else if (byteOffset > 0x7fffffff) {\n\t    byteOffset = 0x7fffffff\n\t  } else if (byteOffset < -0x80000000) {\n\t    byteOffset = -0x80000000\n\t  }\n\t  byteOffset = +byteOffset  // Coerce to Number.\n\t  if (isNaN(byteOffset)) {\n\t    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n\t    byteOffset = dir ? 0 : (buffer.length - 1)\n\t  }\n\t\n\t  // Normalize byteOffset: negative offsets start from the end of the buffer\n\t  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n\t  if (byteOffset >= buffer.length) {\n\t    if (dir) return -1\n\t    else byteOffset = buffer.length - 1\n\t  } else if (byteOffset < 0) {\n\t    if (dir) byteOffset = 0\n\t    else return -1\n\t  }\n\t\n\t  // Normalize val\n\t  if (typeof val === 'string') {\n\t    val = Buffer.from(val, encoding)\n\t  }\n\t\n\t  // Finally, search either indexOf (if dir is true) or lastIndexOf\n\t  if (Buffer.isBuffer(val)) {\n\t    // Special case: looking for empty string/buffer always fails\n\t    if (val.length === 0) {\n\t      return -1\n\t    }\n\t    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n\t  } else if (typeof val === 'number') {\n\t    val = val & 0xFF // Search for a byte value [0-255]\n\t    if (Buffer.TYPED_ARRAY_SUPPORT &&\n\t        typeof Uint8Array.prototype.indexOf === 'function') {\n\t      if (dir) {\n\t        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n\t      } else {\n\t        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n\t      }\n\t    }\n\t    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n\t  }\n\t\n\t  throw new TypeError('val must be string, number or Buffer')\n\t}\n\t\n\tfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n\t  var indexSize = 1\n\t  var arrLength = arr.length\n\t  var valLength = val.length\n\t\n\t  if (encoding !== undefined) {\n\t    encoding = String(encoding).toLowerCase()\n\t    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n\t        encoding === 'utf16le' || encoding === 'utf-16le') {\n\t      if (arr.length < 2 || val.length < 2) {\n\t        return -1\n\t      }\n\t      indexSize = 2\n\t      arrLength /= 2\n\t      valLength /= 2\n\t      byteOffset /= 2\n\t    }\n\t  }\n\t\n\t  function read (buf, i) {\n\t    if (indexSize === 1) {\n\t      return buf[i]\n\t    } else {\n\t      return buf.readUInt16BE(i * indexSize)\n\t    }\n\t  }\n\t\n\t  var i\n\t  if (dir) {\n\t    var foundIndex = -1\n\t    for (i = byteOffset; i < arrLength; i++) {\n\t      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n\t        if (foundIndex === -1) foundIndex = i\n\t        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n\t      } else {\n\t        if (foundIndex !== -1) i -= i - foundIndex\n\t        foundIndex = -1\n\t      }\n\t    }\n\t  } else {\n\t    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n\t    for (i = byteOffset; i >= 0; i--) {\n\t      var found = true\n\t      for (var j = 0; j < valLength; j++) {\n\t        if (read(arr, i + j) !== read(val, j)) {\n\t          found = false\n\t          break\n\t        }\n\t      }\n\t      if (found) return i\n\t    }\n\t  }\n\t\n\t  return -1\n\t}\n\t\n\tBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n\t  return this.indexOf(val, byteOffset, encoding) !== -1\n\t}\n\t\n\tBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n\t  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n\t}\n\t\n\tBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n\t  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n\t}\n\t\n\tfunction hexWrite (buf, string, offset, length) {\n\t  offset = Number(offset) || 0\n\t  var remaining = buf.length - offset\n\t  if (!length) {\n\t    length = remaining\n\t  } else {\n\t    length = Number(length)\n\t    if (length > remaining) {\n\t      length = remaining\n\t    }\n\t  }\n\t\n\t  // must be an even number of digits\n\t  var strLen = string.length\n\t  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\t\n\t  if (length > strLen / 2) {\n\t    length = strLen / 2\n\t  }\n\t  for (var i = 0; i < length; ++i) {\n\t    var parsed = parseInt(string.substr(i * 2, 2), 16)\n\t    if (isNaN(parsed)) return i\n\t    buf[offset + i] = parsed\n\t  }\n\t  return i\n\t}\n\t\n\tfunction utf8Write (buf, string, offset, length) {\n\t  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\t\n\tfunction asciiWrite (buf, string, offset, length) {\n\t  return blitBuffer(asciiToBytes(string), buf, offset, length)\n\t}\n\t\n\tfunction latin1Write (buf, string, offset, length) {\n\t  return asciiWrite(buf, string, offset, length)\n\t}\n\t\n\tfunction base64Write (buf, string, offset, length) {\n\t  return blitBuffer(base64ToBytes(string), buf, offset, length)\n\t}\n\t\n\tfunction ucs2Write (buf, string, offset, length) {\n\t  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\t\n\tBuffer.prototype.write = function write (string, offset, length, encoding) {\n\t  // Buffer#write(string)\n\t  if (offset === undefined) {\n\t    encoding = 'utf8'\n\t    length = this.length\n\t    offset = 0\n\t  // Buffer#write(string, encoding)\n\t  } else if (length === undefined && typeof offset === 'string') {\n\t    encoding = offset\n\t    length = this.length\n\t    offset = 0\n\t  // Buffer#write(string, offset[, length][, encoding])\n\t  } else if (isFinite(offset)) {\n\t    offset = offset | 0\n\t    if (isFinite(length)) {\n\t      length = length | 0\n\t      if (encoding === undefined) encoding = 'utf8'\n\t    } else {\n\t      encoding = length\n\t      length = undefined\n\t    }\n\t  // legacy write(string, encoding, offset, length) - remove in v0.13\n\t  } else {\n\t    throw new Error(\n\t      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n\t    )\n\t  }\n\t\n\t  var remaining = this.length - offset\n\t  if (length === undefined || length > remaining) length = remaining\n\t\n\t  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n\t    throw new RangeError('Attempt to write outside buffer bounds')\n\t  }\n\t\n\t  if (!encoding) encoding = 'utf8'\n\t\n\t  var loweredCase = false\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexWrite(this, string, offset, length)\n\t\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Write(this, string, offset, length)\n\t\n\t      case 'ascii':\n\t        return asciiWrite(this, string, offset, length)\n\t\n\t      case 'latin1':\n\t      case 'binary':\n\t        return latin1Write(this, string, offset, length)\n\t\n\t      case 'base64':\n\t        // Warning: maxLength not taken into account in base64Write\n\t        return base64Write(this, string, offset, length)\n\t\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return ucs2Write(this, string, offset, length)\n\t\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = ('' + encoding).toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\t\n\tBuffer.prototype.toJSON = function toJSON () {\n\t  return {\n\t    type: 'Buffer',\n\t    data: Array.prototype.slice.call(this._arr || this, 0)\n\t  }\n\t}\n\t\n\tfunction base64Slice (buf, start, end) {\n\t  if (start === 0 && end === buf.length) {\n\t    return base64.fromByteArray(buf)\n\t  } else {\n\t    return base64.fromByteArray(buf.slice(start, end))\n\t  }\n\t}\n\t\n\tfunction utf8Slice (buf, start, end) {\n\t  end = Math.min(buf.length, end)\n\t  var res = []\n\t\n\t  var i = start\n\t  while (i < end) {\n\t    var firstByte = buf[i]\n\t    var codePoint = null\n\t    var bytesPerSequence = (firstByte > 0xEF) ? 4\n\t      : (firstByte > 0xDF) ? 3\n\t      : (firstByte > 0xBF) ? 2\n\t      : 1\n\t\n\t    if (i + bytesPerSequence <= end) {\n\t      var secondByte, thirdByte, fourthByte, tempCodePoint\n\t\n\t      switch (bytesPerSequence) {\n\t        case 1:\n\t          if (firstByte < 0x80) {\n\t            codePoint = firstByte\n\t          }\n\t          break\n\t        case 2:\n\t          secondByte = buf[i + 1]\n\t          if ((secondByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n\t            if (tempCodePoint > 0x7F) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t          break\n\t        case 3:\n\t          secondByte = buf[i + 1]\n\t          thirdByte = buf[i + 2]\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n\t            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t          break\n\t        case 4:\n\t          secondByte = buf[i + 1]\n\t          thirdByte = buf[i + 2]\n\t          fourthByte = buf[i + 3]\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n\t            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t      }\n\t    }\n\t\n\t    if (codePoint === null) {\n\t      // we did not generate a valid codePoint so insert a\n\t      // replacement char (U+FFFD) and advance only 1 byte\n\t      codePoint = 0xFFFD\n\t      bytesPerSequence = 1\n\t    } else if (codePoint > 0xFFFF) {\n\t      // encode to utf16 (surrogate pair dance)\n\t      codePoint -= 0x10000\n\t      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n\t      codePoint = 0xDC00 | codePoint & 0x3FF\n\t    }\n\t\n\t    res.push(codePoint)\n\t    i += bytesPerSequence\n\t  }\n\t\n\t  return decodeCodePointsArray(res)\n\t}\n\t\n\t// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n\t// the lowest limit is Chrome, with 0x10000 args.\n\t// We go 1 magnitude less, for safety\n\tvar MAX_ARGUMENTS_LENGTH = 0x1000\n\t\n\tfunction decodeCodePointsArray (codePoints) {\n\t  var len = codePoints.length\n\t  if (len <= MAX_ARGUMENTS_LENGTH) {\n\t    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n\t  }\n\t\n\t  // Decode in chunks to avoid \"call stack size exceeded\".\n\t  var res = ''\n\t  var i = 0\n\t  while (i < len) {\n\t    res += String.fromCharCode.apply(\n\t      String,\n\t      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n\t    )\n\t  }\n\t  return res\n\t}\n\t\n\tfunction asciiSlice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\t\n\t  for (var i = start; i < end; ++i) {\n\t    ret += String.fromCharCode(buf[i] & 0x7F)\n\t  }\n\t  return ret\n\t}\n\t\n\tfunction latin1Slice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\t\n\t  for (var i = start; i < end; ++i) {\n\t    ret += String.fromCharCode(buf[i])\n\t  }\n\t  return ret\n\t}\n\t\n\tfunction hexSlice (buf, start, end) {\n\t  var len = buf.length\n\t\n\t  if (!start || start < 0) start = 0\n\t  if (!end || end < 0 || end > len) end = len\n\t\n\t  var out = ''\n\t  for (var i = start; i < end; ++i) {\n\t    out += toHex(buf[i])\n\t  }\n\t  return out\n\t}\n\t\n\tfunction utf16leSlice (buf, start, end) {\n\t  var bytes = buf.slice(start, end)\n\t  var res = ''\n\t  for (var i = 0; i < bytes.length; i += 2) {\n\t    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n\t  }\n\t  return res\n\t}\n\t\n\tBuffer.prototype.slice = function slice (start, end) {\n\t  var len = this.length\n\t  start = ~~start\n\t  end = end === undefined ? len : ~~end\n\t\n\t  if (start < 0) {\n\t    start += len\n\t    if (start < 0) start = 0\n\t  } else if (start > len) {\n\t    start = len\n\t  }\n\t\n\t  if (end < 0) {\n\t    end += len\n\t    if (end < 0) end = 0\n\t  } else if (end > len) {\n\t    end = len\n\t  }\n\t\n\t  if (end < start) end = start\n\t\n\t  var newBuf\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    newBuf = this.subarray(start, end)\n\t    newBuf.__proto__ = Buffer.prototype\n\t  } else {\n\t    var sliceLen = end - start\n\t    newBuf = new Buffer(sliceLen, undefined)\n\t    for (var i = 0; i < sliceLen; ++i) {\n\t      newBuf[i] = this[i + start]\n\t    }\n\t  }\n\t\n\t  return newBuf\n\t}\n\t\n\t/*\n\t * Need to make sure that buffer isn't trying to write out of bounds.\n\t */\n\tfunction checkOffset (offset, ext, length) {\n\t  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n\t  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n\t}\n\t\n\tBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul\n\t  }\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    checkOffset(offset, byteLength, this.length)\n\t  }\n\t\n\t  var val = this[offset + --byteLength]\n\t  var mul = 1\n\t  while (byteLength > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --byteLength] * mul\n\t  }\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length)\n\t  return this[offset]\n\t}\n\t\n\tBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  return this[offset] | (this[offset + 1] << 8)\n\t}\n\t\n\tBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  return (this[offset] << 8) | this[offset + 1]\n\t}\n\t\n\tBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return ((this[offset]) |\n\t      (this[offset + 1] << 8) |\n\t      (this[offset + 2] << 16)) +\n\t      (this[offset + 3] * 0x1000000)\n\t}\n\t\n\tBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset] * 0x1000000) +\n\t    ((this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    this[offset + 3])\n\t}\n\t\n\tBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul\n\t  }\n\t  mul *= 0x80\n\t\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var i = byteLength\n\t  var mul = 1\n\t  var val = this[offset + --i]\n\t  while (i > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --i] * mul\n\t  }\n\t  mul *= 0x80\n\t\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length)\n\t  if (!(this[offset] & 0x80)) return (this[offset])\n\t  return ((0xff - this[offset] + 1) * -1)\n\t}\n\t\n\tBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  var val = this[offset] | (this[offset + 1] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\t\n\tBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  var val = this[offset + 1] | (this[offset] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\t\n\tBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset]) |\n\t    (this[offset + 1] << 8) |\n\t    (this[offset + 2] << 16) |\n\t    (this[offset + 3] << 24)\n\t}\n\t\n\tBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset] << 24) |\n\t    (this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    (this[offset + 3])\n\t}\n\t\n\tBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, true, 23, 4)\n\t}\n\t\n\tBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, false, 23, 4)\n\t}\n\t\n\tBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, true, 52, 8)\n\t}\n\t\n\tBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, false, 52, 8)\n\t}\n\t\n\tfunction checkInt (buf, value, offset, ext, max, min) {\n\t  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n\t  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n\t  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n\t}\n\t\n\tBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n\t    checkInt(this, value, offset, byteLength, maxBytes, 0)\n\t  }\n\t\n\t  var mul = 1\n\t  var i = 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n\t    checkInt(this, value, offset, byteLength, maxBytes, 0)\n\t  }\n\t\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  this[offset] = (value & 0xff)\n\t  return offset + 1\n\t}\n\t\n\tfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n\t    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n\t      (littleEndian ? i : 1 - i) * 8\n\t  }\n\t}\n\t\n\tBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n\t    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n\t  }\n\t}\n\t\n\tBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset + 3] = (value >>> 24)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1)\n\t\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n\t  }\n\t\n\t  var i = 0\n\t  var mul = 1\n\t  var sub = 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n\t      sub = 1\n\t    }\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1)\n\t\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n\t  }\n\t\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  var sub = 0\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n\t      sub = 1\n\t    }\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  if (value < 0) value = 0xff + value + 1\n\t  this[offset] = (value & 0xff)\n\t  return offset + 1\n\t}\n\t\n\tBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 3] = (value >>> 24)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n\t  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n\t  if (offset < 0) throw new RangeError('Index out of range')\n\t}\n\t\n\tfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, true, noAssert)\n\t}\n\t\n\tBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, false, noAssert)\n\t}\n\t\n\tfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n\t  return offset + 8\n\t}\n\t\n\tBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, true, noAssert)\n\t}\n\t\n\tBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, false, noAssert)\n\t}\n\t\n\t// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\tBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n\t  if (!start) start = 0\n\t  if (!end && end !== 0) end = this.length\n\t  if (targetStart >= target.length) targetStart = target.length\n\t  if (!targetStart) targetStart = 0\n\t  if (end > 0 && end < start) end = start\n\t\n\t  // Copy 0 bytes; we're done\n\t  if (end === start) return 0\n\t  if (target.length === 0 || this.length === 0) return 0\n\t\n\t  // Fatal error conditions\n\t  if (targetStart < 0) {\n\t    throw new RangeError('targetStart out of bounds')\n\t  }\n\t  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n\t  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\t\n\t  // Are we oob?\n\t  if (end > this.length) end = this.length\n\t  if (target.length - targetStart < end - start) {\n\t    end = target.length - targetStart + start\n\t  }\n\t\n\t  var len = end - start\n\t  var i\n\t\n\t  if (this === target && start < targetStart && targetStart < end) {\n\t    // descending copy from end\n\t    for (i = len - 1; i >= 0; --i) {\n\t      target[i + targetStart] = this[i + start]\n\t    }\n\t  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // ascending copy from start\n\t    for (i = 0; i < len; ++i) {\n\t      target[i + targetStart] = this[i + start]\n\t    }\n\t  } else {\n\t    Uint8Array.prototype.set.call(\n\t      target,\n\t      this.subarray(start, start + len),\n\t      targetStart\n\t    )\n\t  }\n\t\n\t  return len\n\t}\n\t\n\t// Usage:\n\t//    buffer.fill(number[, offset[, end]])\n\t//    buffer.fill(buffer[, offset[, end]])\n\t//    buffer.fill(string[, offset[, end]][, encoding])\n\tBuffer.prototype.fill = function fill (val, start, end, encoding) {\n\t  // Handle string cases:\n\t  if (typeof val === 'string') {\n\t    if (typeof start === 'string') {\n\t      encoding = start\n\t      start = 0\n\t      end = this.length\n\t    } else if (typeof end === 'string') {\n\t      encoding = end\n\t      end = this.length\n\t    }\n\t    if (val.length === 1) {\n\t      var code = val.charCodeAt(0)\n\t      if (code < 256) {\n\t        val = code\n\t      }\n\t    }\n\t    if (encoding !== undefined && typeof encoding !== 'string') {\n\t      throw new TypeError('encoding must be a string')\n\t    }\n\t    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n\t      throw new TypeError('Unknown encoding: ' + encoding)\n\t    }\n\t  } else if (typeof val === 'number') {\n\t    val = val & 255\n\t  }\n\t\n\t  // Invalid ranges are not set to a default, so can range check early.\n\t  if (start < 0 || this.length < start || this.length < end) {\n\t    throw new RangeError('Out of range index')\n\t  }\n\t\n\t  if (end <= start) {\n\t    return this\n\t  }\n\t\n\t  start = start >>> 0\n\t  end = end === undefined ? this.length : end >>> 0\n\t\n\t  if (!val) val = 0\n\t\n\t  var i\n\t  if (typeof val === 'number') {\n\t    for (i = start; i < end; ++i) {\n\t      this[i] = val\n\t    }\n\t  } else {\n\t    var bytes = Buffer.isBuffer(val)\n\t      ? val\n\t      : utf8ToBytes(new Buffer(val, encoding).toString())\n\t    var len = bytes.length\n\t    for (i = 0; i < end - start; ++i) {\n\t      this[i + start] = bytes[i % len]\n\t    }\n\t  }\n\t\n\t  return this\n\t}\n\t\n\t// HELPER FUNCTIONS\n\t// ================\n\t\n\tvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\t\n\tfunction base64clean (str) {\n\t  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n\t  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n\t  // Node converts strings with length < 2 to ''\n\t  if (str.length < 2) return ''\n\t  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\t  while (str.length % 4 !== 0) {\n\t    str = str + '='\n\t  }\n\t  return str\n\t}\n\t\n\tfunction stringtrim (str) {\n\t  if (str.trim) return str.trim()\n\t  return str.replace(/^\\s+|\\s+$/g, '')\n\t}\n\t\n\tfunction toHex (n) {\n\t  if (n < 16) return '0' + n.toString(16)\n\t  return n.toString(16)\n\t}\n\t\n\tfunction utf8ToBytes (string, units) {\n\t  units = units || Infinity\n\t  var codePoint\n\t  var length = string.length\n\t  var leadSurrogate = null\n\t  var bytes = []\n\t\n\t  for (var i = 0; i < length; ++i) {\n\t    codePoint = string.charCodeAt(i)\n\t\n\t    // is surrogate component\n\t    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n\t      // last char was a lead\n\t      if (!leadSurrogate) {\n\t        // no lead yet\n\t        if (codePoint > 0xDBFF) {\n\t          // unexpected trail\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        } else if (i + 1 === length) {\n\t          // unpaired lead\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        }\n\t\n\t        // valid lead\n\t        leadSurrogate = codePoint\n\t\n\t        continue\n\t      }\n\t\n\t      // 2 leads in a row\n\t      if (codePoint < 0xDC00) {\n\t        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t        leadSurrogate = codePoint\n\t        continue\n\t      }\n\t\n\t      // valid surrogate pair\n\t      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n\t    } else if (leadSurrogate) {\n\t      // valid bmp char, but last char was a lead\n\t      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t    }\n\t\n\t    leadSurrogate = null\n\t\n\t    // encode utf8\n\t    if (codePoint < 0x80) {\n\t      if ((units -= 1) < 0) break\n\t      bytes.push(codePoint)\n\t    } else if (codePoint < 0x800) {\n\t      if ((units -= 2) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x6 | 0xC0,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x10000) {\n\t      if ((units -= 3) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0xC | 0xE0,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x110000) {\n\t      if ((units -= 4) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x12 | 0xF0,\n\t        codePoint >> 0xC & 0x3F | 0x80,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else {\n\t      throw new Error('Invalid code point')\n\t    }\n\t  }\n\t\n\t  return bytes\n\t}\n\t\n\tfunction asciiToBytes (str) {\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; ++i) {\n\t    // Node's code seems to be doing this and not & 0x7F..\n\t    byteArray.push(str.charCodeAt(i) & 0xFF)\n\t  }\n\t  return byteArray\n\t}\n\t\n\tfunction utf16leToBytes (str, units) {\n\t  var c, hi, lo\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; ++i) {\n\t    if ((units -= 2) < 0) break\n\t\n\t    c = str.charCodeAt(i)\n\t    hi = c >> 8\n\t    lo = c % 256\n\t    byteArray.push(lo)\n\t    byteArray.push(hi)\n\t  }\n\t\n\t  return byteArray\n\t}\n\t\n\tfunction base64ToBytes (str) {\n\t  return base64.toByteArray(base64clean(str))\n\t}\n\t\n\tfunction blitBuffer (src, dst, offset, length) {\n\t  for (var i = 0; i < length; ++i) {\n\t    if ((i + offset >= dst.length) || (i >= src.length)) break\n\t    dst[i + offset] = src[i]\n\t  }\n\t  return i\n\t}\n\t\n\tfunction isnan (val) {\n\t  return val !== val // eslint-disable-line no-self-compare\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict'\n\t\n\texports.byteLength = byteLength\n\texports.toByteArray = toByteArray\n\texports.fromByteArray = fromByteArray\n\t\n\tvar lookup = []\n\tvar revLookup = []\n\tvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\t\n\tvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n\tfor (var i = 0, len = code.length; i < len; ++i) {\n\t  lookup[i] = code[i]\n\t  revLookup[code.charCodeAt(i)] = i\n\t}\n\t\n\trevLookup['-'.charCodeAt(0)] = 62\n\trevLookup['_'.charCodeAt(0)] = 63\n\t\n\tfunction placeHoldersCount (b64) {\n\t  var len = b64.length\n\t  if (len % 4 > 0) {\n\t    throw new Error('Invalid string. Length must be a multiple of 4')\n\t  }\n\t\n\t  // the number of equal signs (place holders)\n\t  // if there are two placeholders, than the two characters before it\n\t  // represent one byte\n\t  // if there is only one, then the three characters before it represent 2 bytes\n\t  // this is just a cheap hack to not do indexOf twice\n\t  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n\t}\n\t\n\tfunction byteLength (b64) {\n\t  // base64 is 4/3 + up to two characters of the original data\n\t  return b64.length * 3 / 4 - placeHoldersCount(b64)\n\t}\n\t\n\tfunction toByteArray (b64) {\n\t  var i, j, l, tmp, placeHolders, arr\n\t  var len = b64.length\n\t  placeHolders = placeHoldersCount(b64)\n\t\n\t  arr = new Arr(len * 3 / 4 - placeHolders)\n\t\n\t  // if there are placeholders, only get up to the last complete 4 chars\n\t  l = placeHolders > 0 ? len - 4 : len\n\t\n\t  var L = 0\n\t\n\t  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n\t    arr[L++] = (tmp >> 16) & 0xFF\n\t    arr[L++] = (tmp >> 8) & 0xFF\n\t    arr[L++] = tmp & 0xFF\n\t  }\n\t\n\t  if (placeHolders === 2) {\n\t    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n\t    arr[L++] = tmp & 0xFF\n\t  } else if (placeHolders === 1) {\n\t    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n\t    arr[L++] = (tmp >> 8) & 0xFF\n\t    arr[L++] = tmp & 0xFF\n\t  }\n\t\n\t  return arr\n\t}\n\t\n\tfunction tripletToBase64 (num) {\n\t  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n\t}\n\t\n\tfunction encodeChunk (uint8, start, end) {\n\t  var tmp\n\t  var output = []\n\t  for (var i = start; i < end; i += 3) {\n\t    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t    output.push(tripletToBase64(tmp))\n\t  }\n\t  return output.join('')\n\t}\n\t\n\tfunction fromByteArray (uint8) {\n\t  var tmp\n\t  var len = uint8.length\n\t  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n\t  var output = ''\n\t  var parts = []\n\t  var maxChunkLength = 16383 // must be multiple of 3\n\t\n\t  // go through the array every three bytes, we'll deal with trailing stuff later\n\t  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n\t    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n\t  }\n\t\n\t  // pad the end with zeros, but make sure to not forget the extra bytes\n\t  if (extraBytes === 1) {\n\t    tmp = uint8[len - 1]\n\t    output += lookup[tmp >> 2]\n\t    output += lookup[(tmp << 4) & 0x3F]\n\t    output += '=='\n\t  } else if (extraBytes === 2) {\n\t    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n\t    output += lookup[tmp >> 10]\n\t    output += lookup[(tmp >> 4) & 0x3F]\n\t    output += lookup[(tmp << 2) & 0x3F]\n\t    output += '='\n\t  }\n\t\n\t  parts.push(output)\n\t\n\t  return parts.join('')\n\t}\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\texports.read = function (buffer, offset, isLE, mLen, nBytes) {\n\t  var e, m\n\t  var eLen = nBytes * 8 - mLen - 1\n\t  var eMax = (1 << eLen) - 1\n\t  var eBias = eMax >> 1\n\t  var nBits = -7\n\t  var i = isLE ? (nBytes - 1) : 0\n\t  var d = isLE ? -1 : 1\n\t  var s = buffer[offset + i]\n\t\n\t  i += d\n\t\n\t  e = s & ((1 << (-nBits)) - 1)\n\t  s >>= (-nBits)\n\t  nBits += eLen\n\t  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\t\n\t  m = e & ((1 << (-nBits)) - 1)\n\t  e >>= (-nBits)\n\t  nBits += mLen\n\t  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\t\n\t  if (e === 0) {\n\t    e = 1 - eBias\n\t  } else if (e === eMax) {\n\t    return m ? NaN : ((s ? -1 : 1) * Infinity)\n\t  } else {\n\t    m = m + Math.pow(2, mLen)\n\t    e = e - eBias\n\t  }\n\t  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n\t}\n\t\n\texports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n\t  var e, m, c\n\t  var eLen = nBytes * 8 - mLen - 1\n\t  var eMax = (1 << eLen) - 1\n\t  var eBias = eMax >> 1\n\t  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n\t  var i = isLE ? 0 : (nBytes - 1)\n\t  var d = isLE ? 1 : -1\n\t  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\t\n\t  value = Math.abs(value)\n\t\n\t  if (isNaN(value) || value === Infinity) {\n\t    m = isNaN(value) ? 1 : 0\n\t    e = eMax\n\t  } else {\n\t    e = Math.floor(Math.log(value) / Math.LN2)\n\t    if (value * (c = Math.pow(2, -e)) < 1) {\n\t      e--\n\t      c *= 2\n\t    }\n\t    if (e + eBias >= 1) {\n\t      value += rt / c\n\t    } else {\n\t      value += rt * Math.pow(2, 1 - eBias)\n\t    }\n\t    if (value * c >= 2) {\n\t      e++\n\t      c /= 2\n\t    }\n\t\n\t    if (e + eBias >= eMax) {\n\t      m = 0\n\t      e = eMax\n\t    } else if (e + eBias >= 1) {\n\t      m = (value * c - 1) * Math.pow(2, mLen)\n\t      e = e + eBias\n\t    } else {\n\t      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n\t      e = 0\n\t    }\n\t  }\n\t\n\t  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\t\n\t  e = (e << mLen) | m\n\t  eLen += mLen\n\t  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\t\n\t  buffer[offset + i - d] |= s * 128\n\t}\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\tvar toString = {}.toString;\n\t\n\tmodule.exports = Array.isArray || function (arr) {\n\t  return toString.call(arr) == '[object Array]';\n\t};\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tmodule.exports = Stream;\n\t\n\tvar EE = __webpack_require__(9).EventEmitter;\n\tvar inherits = __webpack_require__(10);\n\t\n\tinherits(Stream, EE);\n\tStream.Readable = __webpack_require__(11);\n\tStream.Writable = __webpack_require__(28);\n\tStream.Duplex = __webpack_require__(29);\n\tStream.Transform = __webpack_require__(30);\n\tStream.PassThrough = __webpack_require__(31);\n\t\n\t// Backwards-compat with node 0.4.x\n\tStream.Stream = Stream;\n\t\n\t\n\t\n\t// old-style streams.  Note that the pipe method (the only relevant\n\t// part of this class) is overridden in the Readable class.\n\t\n\tfunction Stream() {\n\t  EE.call(this);\n\t}\n\t\n\tStream.prototype.pipe = function(dest, options) {\n\t  var source = this;\n\t\n\t  function ondata(chunk) {\n\t    if (dest.writable) {\n\t      if (false === dest.write(chunk) && source.pause) {\n\t        source.pause();\n\t      }\n\t    }\n\t  }\n\t\n\t  source.on('data', ondata);\n\t\n\t  function ondrain() {\n\t    if (source.readable && source.resume) {\n\t      source.resume();\n\t    }\n\t  }\n\t\n\t  dest.on('drain', ondrain);\n\t\n\t  // If the 'end' option is not supplied, dest.end() will be called when\n\t  // source gets the 'end' or 'close' events.  Only dest.end() once.\n\t  if (!dest._isStdio && (!options || options.end !== false)) {\n\t    source.on('end', onend);\n\t    source.on('close', onclose);\n\t  }\n\t\n\t  var didOnEnd = false;\n\t  function onend() {\n\t    if (didOnEnd) return;\n\t    didOnEnd = true;\n\t\n\t    dest.end();\n\t  }\n\t\n\t\n\t  function onclose() {\n\t    if (didOnEnd) return;\n\t    didOnEnd = true;\n\t\n\t    if (typeof dest.destroy === 'function') dest.destroy();\n\t  }\n\t\n\t  // don't leave dangling pipes when there are errors.\n\t  function onerror(er) {\n\t    cleanup();\n\t    if (EE.listenerCount(this, 'error') === 0) {\n\t      throw er; // Unhandled stream error in pipe.\n\t    }\n\t  }\n\t\n\t  source.on('error', onerror);\n\t  dest.on('error', onerror);\n\t\n\t  // remove all the event listeners that were added.\n\t  function cleanup() {\n\t    source.removeListener('data', ondata);\n\t    dest.removeListener('drain', ondrain);\n\t\n\t    source.removeListener('end', onend);\n\t    source.removeListener('close', onclose);\n\t\n\t    source.removeListener('error', onerror);\n\t    dest.removeListener('error', onerror);\n\t\n\t    source.removeListener('end', cleanup);\n\t    source.removeListener('close', cleanup);\n\t\n\t    dest.removeListener('close', cleanup);\n\t  }\n\t\n\t  source.on('end', cleanup);\n\t  source.on('close', cleanup);\n\t\n\t  dest.on('close', cleanup);\n\t\n\t  dest.emit('pipe', source);\n\t\n\t  // Allow for unix-like usage: A.pipe(B).pipe(C)\n\t  return dest;\n\t};\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tfunction EventEmitter() {\n\t  this._events = this._events || {};\n\t  this._maxListeners = this._maxListeners || undefined;\n\t}\n\tmodule.exports = EventEmitter;\n\t\n\t// Backwards-compat with node 0.10.x\n\tEventEmitter.EventEmitter = EventEmitter;\n\t\n\tEventEmitter.prototype._events = undefined;\n\tEventEmitter.prototype._maxListeners = undefined;\n\t\n\t// By default EventEmitters will print a warning if more than 10 listeners are\n\t// added to it. This is a useful default which helps finding memory leaks.\n\tEventEmitter.defaultMaxListeners = 10;\n\t\n\t// Obviously not all Emitters should be limited to 10. This function allows\n\t// that to be increased. Set to zero for unlimited.\n\tEventEmitter.prototype.setMaxListeners = function(n) {\n\t  if (!isNumber(n) || n < 0 || isNaN(n))\n\t    throw TypeError('n must be a positive number');\n\t  this._maxListeners = n;\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.emit = function(type) {\n\t  var er, handler, len, args, i, listeners;\n\t\n\t  if (!this._events)\n\t    this._events = {};\n\t\n\t  // If there is no 'error' event listener then throw.\n\t  if (type === 'error') {\n\t    if (!this._events.error ||\n\t        (isObject(this._events.error) && !this._events.error.length)) {\n\t      er = arguments[1];\n\t      if (er instanceof Error) {\n\t        throw er; // Unhandled 'error' event\n\t      } else {\n\t        // At least give some kind of context to the user\n\t        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n\t        err.context = er;\n\t        throw err;\n\t      }\n\t    }\n\t  }\n\t\n\t  handler = this._events[type];\n\t\n\t  if (isUndefined(handler))\n\t    return false;\n\t\n\t  if (isFunction(handler)) {\n\t    switch (arguments.length) {\n\t      // fast cases\n\t      case 1:\n\t        handler.call(this);\n\t        break;\n\t      case 2:\n\t        handler.call(this, arguments[1]);\n\t        break;\n\t      case 3:\n\t        handler.call(this, arguments[1], arguments[2]);\n\t        break;\n\t      // slower\n\t      default:\n\t        args = Array.prototype.slice.call(arguments, 1);\n\t        handler.apply(this, args);\n\t    }\n\t  } else if (isObject(handler)) {\n\t    args = Array.prototype.slice.call(arguments, 1);\n\t    listeners = handler.slice();\n\t    len = listeners.length;\n\t    for (i = 0; i < len; i++)\n\t      listeners[i].apply(this, args);\n\t  }\n\t\n\t  return true;\n\t};\n\t\n\tEventEmitter.prototype.addListener = function(type, listener) {\n\t  var m;\n\t\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  if (!this._events)\n\t    this._events = {};\n\t\n\t  // To avoid recursion in the case that type === \"newListener\"! Before\n\t  // adding it to the listeners, first emit \"newListener\".\n\t  if (this._events.newListener)\n\t    this.emit('newListener', type,\n\t              isFunction(listener.listener) ?\n\t              listener.listener : listener);\n\t\n\t  if (!this._events[type])\n\t    // Optimize the case of one listener. Don't need the extra array object.\n\t    this._events[type] = listener;\n\t  else if (isObject(this._events[type]))\n\t    // If we've already got an array, just append.\n\t    this._events[type].push(listener);\n\t  else\n\t    // Adding the second element, need to change to array.\n\t    this._events[type] = [this._events[type], listener];\n\t\n\t  // Check for listener leak\n\t  if (isObject(this._events[type]) && !this._events[type].warned) {\n\t    if (!isUndefined(this._maxListeners)) {\n\t      m = this._maxListeners;\n\t    } else {\n\t      m = EventEmitter.defaultMaxListeners;\n\t    }\n\t\n\t    if (m && m > 0 && this._events[type].length > m) {\n\t      this._events[type].warned = true;\n\t      console.error('(node) warning: possible EventEmitter memory ' +\n\t                    'leak detected. %d listeners added. ' +\n\t                    'Use emitter.setMaxListeners() to increase limit.',\n\t                    this._events[type].length);\n\t      if (typeof console.trace === 'function') {\n\t        // not supported in IE 10\n\t        console.trace();\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\t\n\tEventEmitter.prototype.once = function(type, listener) {\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  var fired = false;\n\t\n\t  function g() {\n\t    this.removeListener(type, g);\n\t\n\t    if (!fired) {\n\t      fired = true;\n\t      listener.apply(this, arguments);\n\t    }\n\t  }\n\t\n\t  g.listener = listener;\n\t  this.on(type, g);\n\t\n\t  return this;\n\t};\n\t\n\t// emits a 'removeListener' event iff the listener was removed\n\tEventEmitter.prototype.removeListener = function(type, listener) {\n\t  var list, position, length, i;\n\t\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  if (!this._events || !this._events[type])\n\t    return this;\n\t\n\t  list = this._events[type];\n\t  length = list.length;\n\t  position = -1;\n\t\n\t  if (list === listener ||\n\t      (isFunction(list.listener) && list.listener === listener)) {\n\t    delete this._events[type];\n\t    if (this._events.removeListener)\n\t      this.emit('removeListener', type, listener);\n\t\n\t  } else if (isObject(list)) {\n\t    for (i = length; i-- > 0;) {\n\t      if (list[i] === listener ||\n\t          (list[i].listener && list[i].listener === listener)) {\n\t        position = i;\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (position < 0)\n\t      return this;\n\t\n\t    if (list.length === 1) {\n\t      list.length = 0;\n\t      delete this._events[type];\n\t    } else {\n\t      list.splice(position, 1);\n\t    }\n\t\n\t    if (this._events.removeListener)\n\t      this.emit('removeListener', type, listener);\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.removeAllListeners = function(type) {\n\t  var key, listeners;\n\t\n\t  if (!this._events)\n\t    return this;\n\t\n\t  // not listening for removeListener, no need to emit\n\t  if (!this._events.removeListener) {\n\t    if (arguments.length === 0)\n\t      this._events = {};\n\t    else if (this._events[type])\n\t      delete this._events[type];\n\t    return this;\n\t  }\n\t\n\t  // emit removeListener for all listeners on all events\n\t  if (arguments.length === 0) {\n\t    for (key in this._events) {\n\t      if (key === 'removeListener') continue;\n\t      this.removeAllListeners(key);\n\t    }\n\t    this.removeAllListeners('removeListener');\n\t    this._events = {};\n\t    return this;\n\t  }\n\t\n\t  listeners = this._events[type];\n\t\n\t  if (isFunction(listeners)) {\n\t    this.removeListener(type, listeners);\n\t  } else if (listeners) {\n\t    // LIFO order\n\t    while (listeners.length)\n\t      this.removeListener(type, listeners[listeners.length - 1]);\n\t  }\n\t  delete this._events[type];\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.listeners = function(type) {\n\t  var ret;\n\t  if (!this._events || !this._events[type])\n\t    ret = [];\n\t  else if (isFunction(this._events[type]))\n\t    ret = [this._events[type]];\n\t  else\n\t    ret = this._events[type].slice();\n\t  return ret;\n\t};\n\t\n\tEventEmitter.prototype.listenerCount = function(type) {\n\t  if (this._events) {\n\t    var evlistener = this._events[type];\n\t\n\t    if (isFunction(evlistener))\n\t      return 1;\n\t    else if (evlistener)\n\t      return evlistener.length;\n\t  }\n\t  return 0;\n\t};\n\t\n\tEventEmitter.listenerCount = function(emitter, type) {\n\t  return emitter.listenerCount(type);\n\t};\n\t\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\t\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\t\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\tif (typeof Object.create === 'function') {\n\t  // implementation from standard node.js 'util' module\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    ctor.prototype = Object.create(superCtor.prototype, {\n\t      constructor: {\n\t        value: ctor,\n\t        enumerable: false,\n\t        writable: true,\n\t        configurable: true\n\t      }\n\t    });\n\t  };\n\t} else {\n\t  // old school shim for old browsers\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    var TempCtor = function () {}\n\t    TempCtor.prototype = superCtor.prototype\n\t    ctor.prototype = new TempCtor()\n\t    ctor.prototype.constructor = ctor\n\t  }\n\t}\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {var Stream = (function (){\n\t  try {\n\t    return __webpack_require__(8); // hack to fix a circular dependency issue when used with browserify\n\t  } catch(_){}\n\t}());\n\texports = module.exports = __webpack_require__(13);\n\texports.Stream = Stream || exports;\n\texports.Readable = exports;\n\texports.Writable = __webpack_require__(21);\n\texports.Duplex = __webpack_require__(20);\n\texports.Transform = __webpack_require__(26);\n\texports.PassThrough = __webpack_require__(27);\n\t\n\tif (!process.browser && process.env.READABLE_STREAM === 'disable' && Stream) {\n\t  module.exports = Stream;\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(12)))\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {'use strict';\n\t\n\tmodule.exports = Readable;\n\t\n\t/*<replacement>*/\n\tvar processNextTick = __webpack_require__(14);\n\t/*</replacement>*/\n\t\n\t/*<replacement>*/\n\tvar isArray = __webpack_require__(15);\n\t/*</replacement>*/\n\t\n\t/*<replacement>*/\n\tvar Duplex;\n\t/*</replacement>*/\n\t\n\tReadable.ReadableState = ReadableState;\n\t\n\t/*<replacement>*/\n\tvar EE = __webpack_require__(9).EventEmitter;\n\t\n\tvar EElistenerCount = function (emitter, type) {\n\t  return emitter.listeners(type).length;\n\t};\n\t/*</replacement>*/\n\t\n\t/*<replacement>*/\n\tvar Stream;\n\t(function () {\n\t  try {\n\t    Stream = __webpack_require__(8);\n\t  } catch (_) {} finally {\n\t    if (!Stream) Stream = __webpack_require__(9).EventEmitter;\n\t  }\n\t})();\n\t/*</replacement>*/\n\t\n\tvar Buffer = __webpack_require__(4).Buffer;\n\t/*<replacement>*/\n\tvar bufferShim = __webpack_require__(16);\n\t/*</replacement>*/\n\t\n\t/*<replacement>*/\n\tvar util = __webpack_require__(17);\n\tutil.inherits = __webpack_require__(10);\n\t/*</replacement>*/\n\t\n\t/*<replacement>*/\n\tvar debugUtil = __webpack_require__(18);\n\tvar debug = void 0;\n\tif (debugUtil && debugUtil.debuglog) {\n\t  debug = debugUtil.debuglog('stream');\n\t} else {\n\t  debug = function () {};\n\t}\n\t/*</replacement>*/\n\t\n\tvar BufferList = __webpack_require__(19);\n\tvar StringDecoder;\n\t\n\tutil.inherits(Readable, Stream);\n\t\n\tfunction prependListener(emitter, event, fn) {\n\t  // Sadly this is not cacheable as some libraries bundle their own\n\t  // event emitter implementation with them.\n\t  if (typeof emitter.prependListener === 'function') {\n\t    return emitter.prependListener(event, fn);\n\t  } else {\n\t    // This is a hack to make sure that our error handler is attached before any\n\t    // userland ones.  NEVER DO THIS. This is here only because this code needs\n\t    // to continue to work with older versions of Node.js that do not include\n\t    // the prependListener() method. The goal is to eventually remove this hack.\n\t    if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n\t  }\n\t}\n\t\n\tfunction ReadableState(options, stream) {\n\t  Duplex = Duplex || __webpack_require__(20);\n\t\n\t  options = options || {};\n\t\n\t  // object stream flag. Used to make read(n) ignore n and to\n\t  // make all the buffer merging and length checks go away\n\t  this.objectMode = !!options.objectMode;\n\t\n\t  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\t\n\t  // the point at which it stops calling _read() to fill the buffer\n\t  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\t  var hwm = options.highWaterMark;\n\t  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\t  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\t\n\t  // cast to ints.\n\t  this.highWaterMark = ~ ~this.highWaterMark;\n\t\n\t  // A linked list is used to store data chunks instead of an array because the\n\t  // linked list can remove elements from the beginning faster than\n\t  // array.shift()\n\t  this.buffer = new BufferList();\n\t  this.length = 0;\n\t  this.pipes = null;\n\t  this.pipesCount = 0;\n\t  this.flowing = null;\n\t  this.ended = false;\n\t  this.endEmitted = false;\n\t  this.reading = false;\n\t\n\t  // a flag to be able to tell if the onwrite cb is called immediately,\n\t  // or on a later tick.  We set this to true at first, because any\n\t  // actions that shouldn't happen until \"later\" should generally also\n\t  // not happen before the first write call.\n\t  this.sync = true;\n\t\n\t  // whenever we return null, then we set a flag to say\n\t  // that we're awaiting a 'readable' event emission.\n\t  this.needReadable = false;\n\t  this.emittedReadable = false;\n\t  this.readableListening = false;\n\t  this.resumeScheduled = false;\n\t\n\t  // Crypto is kind of old and crusty.  Historically, its default string\n\t  // encoding is 'binary' so we have to make this configurable.\n\t  // Everything else in the universe uses 'utf8', though.\n\t  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\t\n\t  // when piping, we only care about 'readable' events that happen\n\t  // after read()ing all the bytes and not getting any pushback.\n\t  this.ranOut = false;\n\t\n\t  // the number of writers that are awaiting a drain event in .pipe()s\n\t  this.awaitDrain = 0;\n\t\n\t  // if true, a maybeReadMore has been scheduled\n\t  this.readingMore = false;\n\t\n\t  this.decoder = null;\n\t  this.encoding = null;\n\t  if (options.encoding) {\n\t    if (!StringDecoder) StringDecoder = __webpack_require__(25).StringDecoder;\n\t    this.decoder = new StringDecoder(options.encoding);\n\t    this.encoding = options.encoding;\n\t  }\n\t}\n\t\n\tfunction Readable(options) {\n\t  Duplex = Duplex || __webpack_require__(20);\n\t\n\t  if (!(this instanceof Readable)) return new Readable(options);\n\t\n\t  this._readableState = new ReadableState(options, this);\n\t\n\t  // legacy\n\t  this.readable = true;\n\t\n\t  if (options && typeof options.read === 'function') this._read = options.read;\n\t\n\t  Stream.call(this);\n\t}\n\t\n\t// Manually shove something into the read() buffer.\n\t// This returns true if the highWaterMark has not been hit yet,\n\t// similar to how Writable.write() returns true if you should\n\t// write() some more.\n\tReadable.prototype.push = function (chunk, encoding) {\n\t  var state = this._readableState;\n\t\n\t  if (!state.objectMode && typeof chunk === 'string') {\n\t    encoding = encoding || state.defaultEncoding;\n\t    if (encoding !== state.encoding) {\n\t      chunk = bufferShim.from(chunk, encoding);\n\t      encoding = '';\n\t    }\n\t  }\n\t\n\t  return readableAddChunk(this, state, chunk, encoding, false);\n\t};\n\t\n\t// Unshift should *always* be something directly out of read()\n\tReadable.prototype.unshift = function (chunk) {\n\t  var state = this._readableState;\n\t  return readableAddChunk(this, state, chunk, '', true);\n\t};\n\t\n\tReadable.prototype.isPaused = function () {\n\t  return this._readableState.flowing === false;\n\t};\n\t\n\tfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n\t  var er = chunkInvalid(state, chunk);\n\t  if (er) {\n\t    stream.emit('error', er);\n\t  } else if (chunk === null) {\n\t    state.reading = false;\n\t    onEofChunk(stream, state);\n\t  } else if (state.objectMode || chunk && chunk.length > 0) {\n\t    if (state.ended && !addToFront) {\n\t      var e = new Error('stream.push() after EOF');\n\t      stream.emit('error', e);\n\t    } else if (state.endEmitted && addToFront) {\n\t      var _e = new Error('stream.unshift() after end event');\n\t      stream.emit('error', _e);\n\t    } else {\n\t      var skipAdd;\n\t      if (state.decoder && !addToFront && !encoding) {\n\t        chunk = state.decoder.write(chunk);\n\t        skipAdd = !state.objectMode && chunk.length === 0;\n\t      }\n\t\n\t      if (!addToFront) state.reading = false;\n\t\n\t      // Don't add to the buffer if we've decoded to an empty string chunk and\n\t      // we're not in object mode\n\t      if (!skipAdd) {\n\t        // if we want the data now, just emit it.\n\t        if (state.flowing && state.length === 0 && !state.sync) {\n\t          stream.emit('data', chunk);\n\t          stream.read(0);\n\t        } else {\n\t          // update the buffer info.\n\t          state.length += state.objectMode ? 1 : chunk.length;\n\t          if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\t\n\t          if (state.needReadable) emitReadable(stream);\n\t        }\n\t      }\n\t\n\t      maybeReadMore(stream, state);\n\t    }\n\t  } else if (!addToFront) {\n\t    state.reading = false;\n\t  }\n\t\n\t  return needMoreData(state);\n\t}\n\t\n\t// if it's past the high water mark, we can push in some more.\n\t// Also, if we have no data yet, we can stand some\n\t// more bytes.  This is to work around cases where hwm=0,\n\t// such as the repl.  Also, if the push() triggered a\n\t// readable event, and the user called read(largeNumber) such that\n\t// needReadable was set, then we ought to push more, so that another\n\t// 'readable' event will be triggered.\n\tfunction needMoreData(state) {\n\t  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n\t}\n\t\n\t// backwards compatibility.\n\tReadable.prototype.setEncoding = function (enc) {\n\t  if (!StringDecoder) StringDecoder = __webpack_require__(25).StringDecoder;\n\t  this._readableState.decoder = new StringDecoder(enc);\n\t  this._readableState.encoding = enc;\n\t  return this;\n\t};\n\t\n\t// Don't raise the hwm > 8MB\n\tvar MAX_HWM = 0x800000;\n\tfunction computeNewHighWaterMark(n) {\n\t  if (n >= MAX_HWM) {\n\t    n = MAX_HWM;\n\t  } else {\n\t    // Get the next highest power of 2 to prevent increasing hwm excessively in\n\t    // tiny amounts\n\t    n--;\n\t    n |= n >>> 1;\n\t    n |= n >>> 2;\n\t    n |= n >>> 4;\n\t    n |= n >>> 8;\n\t    n |= n >>> 16;\n\t    n++;\n\t  }\n\t  return n;\n\t}\n\t\n\t// This function is designed to be inlinable, so please take care when making\n\t// changes to the function body.\n\tfunction howMuchToRead(n, state) {\n\t  if (n <= 0 || state.length === 0 && state.ended) return 0;\n\t  if (state.objectMode) return 1;\n\t  if (n !== n) {\n\t    // Only flow one buffer at a time\n\t    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n\t  }\n\t  // If we're asking for more than the current hwm, then raise the hwm.\n\t  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n\t  if (n <= state.length) return n;\n\t  // Don't have enough\n\t  if (!state.ended) {\n\t    state.needReadable = true;\n\t    return 0;\n\t  }\n\t  return state.length;\n\t}\n\t\n\t// you can override either this method, or the async _read(n) below.\n\tReadable.prototype.read = function (n) {\n\t  debug('read', n);\n\t  n = parseInt(n, 10);\n\t  var state = this._readableState;\n\t  var nOrig = n;\n\t\n\t  if (n !== 0) state.emittedReadable = false;\n\t\n\t  // if we're doing read(0) to trigger a readable event, but we\n\t  // already have a bunch of data in the buffer, then just trigger\n\t  // the 'readable' event and move on.\n\t  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n\t    debug('read: emitReadable', state.length, state.ended);\n\t    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n\t    return null;\n\t  }\n\t\n\t  n = howMuchToRead(n, state);\n\t\n\t  // if we've ended, and we're now clear, then finish it up.\n\t  if (n === 0 && state.ended) {\n\t    if (state.length === 0) endReadable(this);\n\t    return null;\n\t  }\n\t\n\t  // All the actual chunk generation logic needs to be\n\t  // *below* the call to _read.  The reason is that in certain\n\t  // synthetic stream cases, such as passthrough streams, _read\n\t  // may be a completely synchronous operation which may change\n\t  // the state of the read buffer, providing enough data when\n\t  // before there was *not* enough.\n\t  //\n\t  // So, the steps are:\n\t  // 1. Figure out what the state of things will be after we do\n\t  // a read from the buffer.\n\t  //\n\t  // 2. If that resulting state will trigger a _read, then call _read.\n\t  // Note that this may be asynchronous, or synchronous.  Yes, it is\n\t  // deeply ugly to write APIs this way, but that still doesn't mean\n\t  // that the Readable class should behave improperly, as streams are\n\t  // designed to be sync/async agnostic.\n\t  // Take note if the _read call is sync or async (ie, if the read call\n\t  // has returned yet), so that we know whether or not it's safe to emit\n\t  // 'readable' etc.\n\t  //\n\t  // 3. Actually pull the requested chunks out of the buffer and return.\n\t\n\t  // if we need a readable event, then we need to do some reading.\n\t  var doRead = state.needReadable;\n\t  debug('need readable', doRead);\n\t\n\t  // if we currently have less than the highWaterMark, then also read some\n\t  if (state.length === 0 || state.length - n < state.highWaterMark) {\n\t    doRead = true;\n\t    debug('length less than watermark', doRead);\n\t  }\n\t\n\t  // however, if we've ended, then there's no point, and if we're already\n\t  // reading, then it's unnecessary.\n\t  if (state.ended || state.reading) {\n\t    doRead = false;\n\t    debug('reading or ended', doRead);\n\t  } else if (doRead) {\n\t    debug('do read');\n\t    state.reading = true;\n\t    state.sync = true;\n\t    // if the length is currently zero, then we *need* a readable event.\n\t    if (state.length === 0) state.needReadable = true;\n\t    // call internal read method\n\t    this._read(state.highWaterMark);\n\t    state.sync = false;\n\t    // If _read pushed data synchronously, then `reading` will be false,\n\t    // and we need to re-evaluate how much data we can return to the user.\n\t    if (!state.reading) n = howMuchToRead(nOrig, state);\n\t  }\n\t\n\t  var ret;\n\t  if (n > 0) ret = fromList(n, state);else ret = null;\n\t\n\t  if (ret === null) {\n\t    state.needReadable = true;\n\t    n = 0;\n\t  } else {\n\t    state.length -= n;\n\t  }\n\t\n\t  if (state.length === 0) {\n\t    // If we have nothing in the buffer, then we want to know\n\t    // as soon as we *do* get something into the buffer.\n\t    if (!state.ended) state.needReadable = true;\n\t\n\t    // If we tried to read() past the EOF, then emit end on the next tick.\n\t    if (nOrig !== n && state.ended) endReadable(this);\n\t  }\n\t\n\t  if (ret !== null) this.emit('data', ret);\n\t\n\t  return ret;\n\t};\n\t\n\tfunction chunkInvalid(state, chunk) {\n\t  var er = null;\n\t  if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== null && chunk !== undefined && !state.objectMode) {\n\t    er = new TypeError('Invalid non-string/buffer chunk');\n\t  }\n\t  return er;\n\t}\n\t\n\tfunction onEofChunk(stream, state) {\n\t  if (state.ended) return;\n\t  if (state.decoder) {\n\t    var chunk = state.decoder.end();\n\t    if (chunk && chunk.length) {\n\t      state.buffer.push(chunk);\n\t      state.length += state.objectMode ? 1 : chunk.length;\n\t    }\n\t  }\n\t  state.ended = true;\n\t\n\t  // emit 'readable' now to make sure it gets picked up.\n\t  emitReadable(stream);\n\t}\n\t\n\t// Don't emit readable right away in sync mode, because this can trigger\n\t// another read() call => stack overflow.  This way, it might trigger\n\t// a nextTick recursion warning, but that's not so bad.\n\tfunction emitReadable(stream) {\n\t  var state = stream._readableState;\n\t  state.needReadable = false;\n\t  if (!state.emittedReadable) {\n\t    debug('emitReadable', state.flowing);\n\t    state.emittedReadable = true;\n\t    if (state.sync) processNextTick(emitReadable_, stream);else emitReadable_(stream);\n\t  }\n\t}\n\t\n\tfunction emitReadable_(stream) {\n\t  debug('emit readable');\n\t  stream.emit('readable');\n\t  flow(stream);\n\t}\n\t\n\t// at this point, the user has presumably seen the 'readable' event,\n\t// and called read() to consume some data.  that may have triggered\n\t// in turn another _read(n) call, in which case reading = true if\n\t// it's in progress.\n\t// However, if we're not ended, or reading, and the length < hwm,\n\t// then go ahead and try to read some more preemptively.\n\tfunction maybeReadMore(stream, state) {\n\t  if (!state.readingMore) {\n\t    state.readingMore = true;\n\t    processNextTick(maybeReadMore_, stream, state);\n\t  }\n\t}\n\t\n\tfunction maybeReadMore_(stream, state) {\n\t  var len = state.length;\n\t  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n\t    debug('maybeReadMore read 0');\n\t    stream.read(0);\n\t    if (len === state.length)\n\t      // didn't get any data, stop spinning.\n\t      break;else len = state.length;\n\t  }\n\t  state.readingMore = false;\n\t}\n\t\n\t// abstract method.  to be overridden in specific implementation classes.\n\t// call cb(er, data) where data is <= n in length.\n\t// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n\t// arbitrary, and perhaps not very meaningful.\n\tReadable.prototype._read = function (n) {\n\t  this.emit('error', new Error('_read() is not implemented'));\n\t};\n\t\n\tReadable.prototype.pipe = function (dest, pipeOpts) {\n\t  var src = this;\n\t  var state = this._readableState;\n\t\n\t  switch (state.pipesCount) {\n\t    case 0:\n\t      state.pipes = dest;\n\t      break;\n\t    case 1:\n\t      state.pipes = [state.pipes, dest];\n\t      break;\n\t    default:\n\t      state.pipes.push(dest);\n\t      break;\n\t  }\n\t  state.pipesCount += 1;\n\t  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\t\n\t  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\t\n\t  var endFn = doEnd ? onend : cleanup;\n\t  if (state.endEmitted) processNextTick(endFn);else src.once('end', endFn);\n\t\n\t  dest.on('unpipe', onunpipe);\n\t  function onunpipe(readable) {\n\t    debug('onunpipe');\n\t    if (readable === src) {\n\t      cleanup();\n\t    }\n\t  }\n\t\n\t  function onend() {\n\t    debug('onend');\n\t    dest.end();\n\t  }\n\t\n\t  // when the dest drains, it reduces the awaitDrain counter\n\t  // on the source.  This would be more elegant with a .once()\n\t  // handler in flow(), but adding and removing repeatedly is\n\t  // too slow.\n\t  var ondrain = pipeOnDrain(src);\n\t  dest.on('drain', ondrain);\n\t\n\t  var cleanedUp = false;\n\t  function cleanup() {\n\t    debug('cleanup');\n\t    // cleanup event handlers once the pipe is broken\n\t    dest.removeListener('close', onclose);\n\t    dest.removeListener('finish', onfinish);\n\t    dest.removeListener('drain', ondrain);\n\t    dest.removeListener('error', onerror);\n\t    dest.removeListener('unpipe', onunpipe);\n\t    src.removeListener('end', onend);\n\t    src.removeListener('end', cleanup);\n\t    src.removeListener('data', ondata);\n\t\n\t    cleanedUp = true;\n\t\n\t    // if the reader is waiting for a drain event from this\n\t    // specific writer, then it would cause it to never start\n\t    // flowing again.\n\t    // So, if this is awaiting a drain, then we just call it now.\n\t    // If we don't know, then assume that we are waiting for one.\n\t    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n\t  }\n\t\n\t  // If the user pushes more data while we're writing to dest then we'll end up\n\t  // in ondata again. However, we only want to increase awaitDrain once because\n\t  // dest will only emit one 'drain' event for the multiple writes.\n\t  // => Introduce a guard on increasing awaitDrain.\n\t  var increasedAwaitDrain = false;\n\t  src.on('data', ondata);\n\t  function ondata(chunk) {\n\t    debug('ondata');\n\t    increasedAwaitDrain = false;\n\t    var ret = dest.write(chunk);\n\t    if (false === ret && !increasedAwaitDrain) {\n\t      // If the user unpiped during `dest.write()`, it is possible\n\t      // to get stuck in a permanently paused state if that write\n\t      // also returned false.\n\t      // => Check whether `dest` is still a piping destination.\n\t      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n\t        debug('false write response, pause', src._readableState.awaitDrain);\n\t        src._readableState.awaitDrain++;\n\t        increasedAwaitDrain = true;\n\t      }\n\t      src.pause();\n\t    }\n\t  }\n\t\n\t  // if the dest has an error, then stop piping into it.\n\t  // however, don't suppress the throwing behavior for this.\n\t  function onerror(er) {\n\t    debug('onerror', er);\n\t    unpipe();\n\t    dest.removeListener('error', onerror);\n\t    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n\t  }\n\t\n\t  // Make sure our error handler is attached before userland ones.\n\t  prependListener(dest, 'error', onerror);\n\t\n\t  // Both close and finish should trigger unpipe, but only once.\n\t  function onclose() {\n\t    dest.removeListener('finish', onfinish);\n\t    unpipe();\n\t  }\n\t  dest.once('close', onclose);\n\t  function onfinish() {\n\t    debug('onfinish');\n\t    dest.removeListener('close', onclose);\n\t    unpipe();\n\t  }\n\t  dest.once('finish', onfinish);\n\t\n\t  function unpipe() {\n\t    debug('unpipe');\n\t    src.unpipe(dest);\n\t  }\n\t\n\t  // tell the dest that it's being piped to\n\t  dest.emit('pipe', src);\n\t\n\t  // start the flow if it hasn't been started already.\n\t  if (!state.flowing) {\n\t    debug('pipe resume');\n\t    src.resume();\n\t  }\n\t\n\t  return dest;\n\t};\n\t\n\tfunction pipeOnDrain(src) {\n\t  return function () {\n\t    var state = src._readableState;\n\t    debug('pipeOnDrain', state.awaitDrain);\n\t    if (state.awaitDrain) state.awaitDrain--;\n\t    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n\t      state.flowing = true;\n\t      flow(src);\n\t    }\n\t  };\n\t}\n\t\n\tReadable.prototype.unpipe = function (dest) {\n\t  var state = this._readableState;\n\t\n\t  // if we're not piping anywhere, then do nothing.\n\t  if (state.pipesCount === 0) return this;\n\t\n\t  // just one destination.  most common case.\n\t  if (state.pipesCount === 1) {\n\t    // passed in one, but it's not the right one.\n\t    if (dest && dest !== state.pipes) return this;\n\t\n\t    if (!dest) dest = state.pipes;\n\t\n\t    // got a match.\n\t    state.pipes = null;\n\t    state.pipesCount = 0;\n\t    state.flowing = false;\n\t    if (dest) dest.emit('unpipe', this);\n\t    return this;\n\t  }\n\t\n\t  // slow case. multiple pipe destinations.\n\t\n\t  if (!dest) {\n\t    // remove all.\n\t    var dests = state.pipes;\n\t    var len = state.pipesCount;\n\t    state.pipes = null;\n\t    state.pipesCount = 0;\n\t    state.flowing = false;\n\t\n\t    for (var i = 0; i < len; i++) {\n\t      dests[i].emit('unpipe', this);\n\t    }return this;\n\t  }\n\t\n\t  // try to find the right one.\n\t  var index = indexOf(state.pipes, dest);\n\t  if (index === -1) return this;\n\t\n\t  state.pipes.splice(index, 1);\n\t  state.pipesCount -= 1;\n\t  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\t\n\t  dest.emit('unpipe', this);\n\t\n\t  return this;\n\t};\n\t\n\t// set up data events if they are asked for\n\t// Ensure readable listeners eventually get something\n\tReadable.prototype.on = function (ev, fn) {\n\t  var res = Stream.prototype.on.call(this, ev, fn);\n\t\n\t  if (ev === 'data') {\n\t    // Start flowing on next tick if stream isn't explicitly paused\n\t    if (this._readableState.flowing !== false) this.resume();\n\t  } else if (ev === 'readable') {\n\t    var state = this._readableState;\n\t    if (!state.endEmitted && !state.readableListening) {\n\t      state.readableListening = state.needReadable = true;\n\t      state.emittedReadable = false;\n\t      if (!state.reading) {\n\t        processNextTick(nReadingNextTick, this);\n\t      } else if (state.length) {\n\t        emitReadable(this, state);\n\t      }\n\t    }\n\t  }\n\t\n\t  return res;\n\t};\n\tReadable.prototype.addListener = Readable.prototype.on;\n\t\n\tfunction nReadingNextTick(self) {\n\t  debug('readable nexttick read 0');\n\t  self.read(0);\n\t}\n\t\n\t// pause() and resume() are remnants of the legacy readable stream API\n\t// If the user uses them, then switch into old mode.\n\tReadable.prototype.resume = function () {\n\t  var state = this._readableState;\n\t  if (!state.flowing) {\n\t    debug('resume');\n\t    state.flowing = true;\n\t    resume(this, state);\n\t  }\n\t  return this;\n\t};\n\t\n\tfunction resume(stream, state) {\n\t  if (!state.resumeScheduled) {\n\t    state.resumeScheduled = true;\n\t    processNextTick(resume_, stream, state);\n\t  }\n\t}\n\t\n\tfunction resume_(stream, state) {\n\t  if (!state.reading) {\n\t    debug('resume read 0');\n\t    stream.read(0);\n\t  }\n\t\n\t  state.resumeScheduled = false;\n\t  state.awaitDrain = 0;\n\t  stream.emit('resume');\n\t  flow(stream);\n\t  if (state.flowing && !state.reading) stream.read(0);\n\t}\n\t\n\tReadable.prototype.pause = function () {\n\t  debug('call pause flowing=%j', this._readableState.flowing);\n\t  if (false !== this._readableState.flowing) {\n\t    debug('pause');\n\t    this._readableState.flowing = false;\n\t    this.emit('pause');\n\t  }\n\t  return this;\n\t};\n\t\n\tfunction flow(stream) {\n\t  var state = stream._readableState;\n\t  debug('flow', state.flowing);\n\t  while (state.flowing && stream.read() !== null) {}\n\t}\n\t\n\t// wrap an old-style stream as the async data source.\n\t// This is *not* part of the readable stream interface.\n\t// It is an ugly unfortunate mess of history.\n\tReadable.prototype.wrap = function (stream) {\n\t  var state = this._readableState;\n\t  var paused = false;\n\t\n\t  var self = this;\n\t  stream.on('end', function () {\n\t    debug('wrapped end');\n\t    if (state.decoder && !state.ended) {\n\t      var chunk = state.decoder.end();\n\t      if (chunk && chunk.length) self.push(chunk);\n\t    }\n\t\n\t    self.push(null);\n\t  });\n\t\n\t  stream.on('data', function (chunk) {\n\t    debug('wrapped data');\n\t    if (state.decoder) chunk = state.decoder.write(chunk);\n\t\n\t    // don't skip over falsy values in objectMode\n\t    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\t\n\t    var ret = self.push(chunk);\n\t    if (!ret) {\n\t      paused = true;\n\t      stream.pause();\n\t    }\n\t  });\n\t\n\t  // proxy all the other methods.\n\t  // important when wrapping filters and duplexes.\n\t  for (var i in stream) {\n\t    if (this[i] === undefined && typeof stream[i] === 'function') {\n\t      this[i] = function (method) {\n\t        return function () {\n\t          return stream[method].apply(stream, arguments);\n\t        };\n\t      }(i);\n\t    }\n\t  }\n\t\n\t  // proxy certain important events.\n\t  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n\t  forEach(events, function (ev) {\n\t    stream.on(ev, self.emit.bind(self, ev));\n\t  });\n\t\n\t  // when we try to consume some more bytes, simply unpause the\n\t  // underlying stream.\n\t  self._read = function (n) {\n\t    debug('wrapped _read', n);\n\t    if (paused) {\n\t      paused = false;\n\t      stream.resume();\n\t    }\n\t  };\n\t\n\t  return self;\n\t};\n\t\n\t// exposed for testing purposes only.\n\tReadable._fromList = fromList;\n\t\n\t// Pluck off n bytes from an array of buffers.\n\t// Length is the combined lengths of all the buffers in the list.\n\t// This function is designed to be inlinable, so please take care when making\n\t// changes to the function body.\n\tfunction fromList(n, state) {\n\t  // nothing buffered\n\t  if (state.length === 0) return null;\n\t\n\t  var ret;\n\t  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n\t    // read it all, truncate the list\n\t    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n\t    state.buffer.clear();\n\t  } else {\n\t    // read part of list\n\t    ret = fromListPartial(n, state.buffer, state.decoder);\n\t  }\n\t\n\t  return ret;\n\t}\n\t\n\t// Extracts only enough buffered data to satisfy the amount requested.\n\t// This function is designed to be inlinable, so please take care when making\n\t// changes to the function body.\n\tfunction fromListPartial(n, list, hasStrings) {\n\t  var ret;\n\t  if (n < list.head.data.length) {\n\t    // slice is the same for buffers and strings\n\t    ret = list.head.data.slice(0, n);\n\t    list.head.data = list.head.data.slice(n);\n\t  } else if (n === list.head.data.length) {\n\t    // first chunk is a perfect match\n\t    ret = list.shift();\n\t  } else {\n\t    // result spans more than one buffer\n\t    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n\t  }\n\t  return ret;\n\t}\n\t\n\t// Copies a specified amount of characters from the list of buffered data\n\t// chunks.\n\t// This function is designed to be inlinable, so please take care when making\n\t// changes to the function body.\n\tfunction copyFromBufferString(n, list) {\n\t  var p = list.head;\n\t  var c = 1;\n\t  var ret = p.data;\n\t  n -= ret.length;\n\t  while (p = p.next) {\n\t    var str = p.data;\n\t    var nb = n > str.length ? str.length : n;\n\t    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n\t    n -= nb;\n\t    if (n === 0) {\n\t      if (nb === str.length) {\n\t        ++c;\n\t        if (p.next) list.head = p.next;else list.head = list.tail = null;\n\t      } else {\n\t        list.head = p;\n\t        p.data = str.slice(nb);\n\t      }\n\t      break;\n\t    }\n\t    ++c;\n\t  }\n\t  list.length -= c;\n\t  return ret;\n\t}\n\t\n\t// Copies a specified amount of bytes from the list of buffered data chunks.\n\t// This function is designed to be inlinable, so please take care when making\n\t// changes to the function body.\n\tfunction copyFromBuffer(n, list) {\n\t  var ret = bufferShim.allocUnsafe(n);\n\t  var p = list.head;\n\t  var c = 1;\n\t  p.data.copy(ret);\n\t  n -= p.data.length;\n\t  while (p = p.next) {\n\t    var buf = p.data;\n\t    var nb = n > buf.length ? buf.length : n;\n\t    buf.copy(ret, ret.length - n, 0, nb);\n\t    n -= nb;\n\t    if (n === 0) {\n\t      if (nb === buf.length) {\n\t        ++c;\n\t        if (p.next) list.head = p.next;else list.head = list.tail = null;\n\t      } else {\n\t        list.head = p;\n\t        p.data = buf.slice(nb);\n\t      }\n\t      break;\n\t    }\n\t    ++c;\n\t  }\n\t  list.length -= c;\n\t  return ret;\n\t}\n\t\n\tfunction endReadable(stream) {\n\t  var state = stream._readableState;\n\t\n\t  // If we get here before consuming all the bytes, then that is a\n\t  // bug in node.  Should never happen.\n\t  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\t\n\t  if (!state.endEmitted) {\n\t    state.ended = true;\n\t    processNextTick(endReadableNT, state, stream);\n\t  }\n\t}\n\t\n\tfunction endReadableNT(state, stream) {\n\t  // Check that we didn't get one last unshift.\n\t  if (!state.endEmitted && state.length === 0) {\n\t    state.endEmitted = true;\n\t    stream.readable = false;\n\t    stream.emit('end');\n\t  }\n\t}\n\t\n\tfunction forEach(xs, f) {\n\t  for (var i = 0, l = xs.length; i < l; i++) {\n\t    f(xs[i], i);\n\t  }\n\t}\n\t\n\tfunction indexOf(xs, x) {\n\t  for (var i = 0, l = xs.length; i < l; i++) {\n\t    if (xs[i] === x) return i;\n\t  }\n\t  return -1;\n\t}\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(12)))\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {'use strict';\n\t\n\tif (!process.version ||\n\t    process.version.indexOf('v0.') === 0 ||\n\t    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n\t  module.exports = nextTick;\n\t} else {\n\t  module.exports = process.nextTick;\n\t}\n\t\n\tfunction nextTick(fn, arg1, arg2, arg3) {\n\t  if (typeof fn !== 'function') {\n\t    throw new TypeError('\"callback\" argument must be a function');\n\t  }\n\t  var len = arguments.length;\n\t  var args, i;\n\t  switch (len) {\n\t  case 0:\n\t  case 1:\n\t    return process.nextTick(fn);\n\t  case 2:\n\t    return process.nextTick(function afterTickOne() {\n\t      fn.call(null, arg1);\n\t    });\n\t  case 3:\n\t    return process.nextTick(function afterTickTwo() {\n\t      fn.call(null, arg1, arg2);\n\t    });\n\t  case 4:\n\t    return process.nextTick(function afterTickThree() {\n\t      fn.call(null, arg1, arg2, arg3);\n\t    });\n\t  default:\n\t    args = new Array(len - 1);\n\t    i = 0;\n\t    while (i < args.length) {\n\t      args[i++] = arguments[i];\n\t    }\n\t    return process.nextTick(function afterTick() {\n\t      fn.apply(null, args);\n\t    });\n\t  }\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(12)))\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\tvar toString = {}.toString;\n\t\n\tmodule.exports = Array.isArray || function (arr) {\n\t  return toString.call(arr) == '[object Array]';\n\t};\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\tvar buffer = __webpack_require__(4);\n\tvar Buffer = buffer.Buffer;\n\tvar SlowBuffer = buffer.SlowBuffer;\n\tvar MAX_LEN = buffer.kMaxLength || 2147483647;\n\texports.alloc = function alloc(size, fill, encoding) {\n\t  if (typeof Buffer.alloc === 'function') {\n\t    return Buffer.alloc(size, fill, encoding);\n\t  }\n\t  if (typeof encoding === 'number') {\n\t    throw new TypeError('encoding must not be number');\n\t  }\n\t  if (typeof size !== 'number') {\n\t    throw new TypeError('size must be a number');\n\t  }\n\t  if (size > MAX_LEN) {\n\t    throw new RangeError('size is too large');\n\t  }\n\t  var enc = encoding;\n\t  var _fill = fill;\n\t  if (_fill === undefined) {\n\t    enc = undefined;\n\t    _fill = 0;\n\t  }\n\t  var buf = new Buffer(size);\n\t  if (typeof _fill === 'string') {\n\t    var fillBuf = new Buffer(_fill, enc);\n\t    var flen = fillBuf.length;\n\t    var i = -1;\n\t    while (++i < size) {\n\t      buf[i] = fillBuf[i % flen];\n\t    }\n\t  } else {\n\t    buf.fill(_fill);\n\t  }\n\t  return buf;\n\t}\n\texports.allocUnsafe = function allocUnsafe(size) {\n\t  if (typeof Buffer.allocUnsafe === 'function') {\n\t    return Buffer.allocUnsafe(size);\n\t  }\n\t  if (typeof size !== 'number') {\n\t    throw new TypeError('size must be a number');\n\t  }\n\t  if (size > MAX_LEN) {\n\t    throw new RangeError('size is too large');\n\t  }\n\t  return new Buffer(size);\n\t}\n\texports.from = function from(value, encodingOrOffset, length) {\n\t  if (typeof Buffer.from === 'function' && (!global.Uint8Array || Uint8Array.from !== Buffer.from)) {\n\t    return Buffer.from(value, encodingOrOffset, length);\n\t  }\n\t  if (typeof value === 'number') {\n\t    throw new TypeError('\"value\" argument must not be a number');\n\t  }\n\t  if (typeof value === 'string') {\n\t    return new Buffer(value, encodingOrOffset);\n\t  }\n\t  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n\t    var offset = encodingOrOffset;\n\t    if (arguments.length === 1) {\n\t      return new Buffer(value);\n\t    }\n\t    if (typeof offset === 'undefined') {\n\t      offset = 0;\n\t    }\n\t    var len = length;\n\t    if (typeof len === 'undefined') {\n\t      len = value.byteLength - offset;\n\t    }\n\t    if (offset >= value.byteLength) {\n\t      throw new RangeError('\\'offset\\' is out of bounds');\n\t    }\n\t    if (len > value.byteLength - offset) {\n\t      throw new RangeError('\\'length\\' is out of bounds');\n\t    }\n\t    return new Buffer(value.slice(offset, offset + len));\n\t  }\n\t  if (Buffer.isBuffer(value)) {\n\t    var out = new Buffer(value.length);\n\t    value.copy(out, 0, 0, value.length);\n\t    return out;\n\t  }\n\t  if (value) {\n\t    if (Array.isArray(value) || (typeof ArrayBuffer !== 'undefined' && value.buffer instanceof ArrayBuffer) || 'length' in value) {\n\t      return new Buffer(value);\n\t    }\n\t    if (value.type === 'Buffer' && Array.isArray(value.data)) {\n\t      return new Buffer(value.data);\n\t    }\n\t  }\n\t\n\t  throw new TypeError('First argument must be a string, Buffer, ' + 'ArrayBuffer, Array, or array-like object.');\n\t}\n\texports.allocUnsafeSlow = function allocUnsafeSlow(size) {\n\t  if (typeof Buffer.allocUnsafeSlow === 'function') {\n\t    return Buffer.allocUnsafeSlow(size);\n\t  }\n\t  if (typeof size !== 'number') {\n\t    throw new TypeError('size must be a number');\n\t  }\n\t  if (size >= MAX_LEN) {\n\t    throw new RangeError('size is too large');\n\t  }\n\t  return new SlowBuffer(size);\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t// NOTE: These type checking functions intentionally don't use `instanceof`\n\t// because it is fragile and can be easily faked with `Object.create()`.\n\t\n\tfunction isArray(arg) {\n\t  if (Array.isArray) {\n\t    return Array.isArray(arg);\n\t  }\n\t  return objectToString(arg) === '[object Array]';\n\t}\n\texports.isArray = isArray;\n\t\n\tfunction isBoolean(arg) {\n\t  return typeof arg === 'boolean';\n\t}\n\texports.isBoolean = isBoolean;\n\t\n\tfunction isNull(arg) {\n\t  return arg === null;\n\t}\n\texports.isNull = isNull;\n\t\n\tfunction isNullOrUndefined(arg) {\n\t  return arg == null;\n\t}\n\texports.isNullOrUndefined = isNullOrUndefined;\n\t\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\texports.isNumber = isNumber;\n\t\n\tfunction isString(arg) {\n\t  return typeof arg === 'string';\n\t}\n\texports.isString = isString;\n\t\n\tfunction isSymbol(arg) {\n\t  return typeof arg === 'symbol';\n\t}\n\texports.isSymbol = isSymbol;\n\t\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\texports.isUndefined = isUndefined;\n\t\n\tfunction isRegExp(re) {\n\t  return objectToString(re) === '[object RegExp]';\n\t}\n\texports.isRegExp = isRegExp;\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\texports.isObject = isObject;\n\t\n\tfunction isDate(d) {\n\t  return objectToString(d) === '[object Date]';\n\t}\n\texports.isDate = isDate;\n\t\n\tfunction isError(e) {\n\t  return (objectToString(e) === '[object Error]' || e instanceof Error);\n\t}\n\texports.isError = isError;\n\t\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\texports.isFunction = isFunction;\n\t\n\tfunction isPrimitive(arg) {\n\t  return arg === null ||\n\t         typeof arg === 'boolean' ||\n\t         typeof arg === 'number' ||\n\t         typeof arg === 'string' ||\n\t         typeof arg === 'symbol' ||  // ES6 symbol\n\t         typeof arg === 'undefined';\n\t}\n\texports.isPrimitive = isPrimitive;\n\t\n\texports.isBuffer = Buffer.isBuffer;\n\t\n\tfunction objectToString(o) {\n\t  return Object.prototype.toString.call(o);\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer))\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar Buffer = __webpack_require__(4).Buffer;\n\t/*<replacement>*/\n\tvar bufferShim = __webpack_require__(16);\n\t/*</replacement>*/\n\t\n\tmodule.exports = BufferList;\n\t\n\tfunction BufferList() {\n\t  this.head = null;\n\t  this.tail = null;\n\t  this.length = 0;\n\t}\n\t\n\tBufferList.prototype.push = function (v) {\n\t  var entry = { data: v, next: null };\n\t  if (this.length > 0) this.tail.next = entry;else this.head = entry;\n\t  this.tail = entry;\n\t  ++this.length;\n\t};\n\t\n\tBufferList.prototype.unshift = function (v) {\n\t  var entry = { data: v, next: this.head };\n\t  if (this.length === 0) this.tail = entry;\n\t  this.head = entry;\n\t  ++this.length;\n\t};\n\t\n\tBufferList.prototype.shift = function () {\n\t  if (this.length === 0) return;\n\t  var ret = this.head.data;\n\t  if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n\t  --this.length;\n\t  return ret;\n\t};\n\t\n\tBufferList.prototype.clear = function () {\n\t  this.head = this.tail = null;\n\t  this.length = 0;\n\t};\n\t\n\tBufferList.prototype.join = function (s) {\n\t  if (this.length === 0) return '';\n\t  var p = this.head;\n\t  var ret = '' + p.data;\n\t  while (p = p.next) {\n\t    ret += s + p.data;\n\t  }return ret;\n\t};\n\t\n\tBufferList.prototype.concat = function (n) {\n\t  if (this.length === 0) return bufferShim.alloc(0);\n\t  if (this.length === 1) return this.head.data;\n\t  var ret = bufferShim.allocUnsafe(n >>> 0);\n\t  var p = this.head;\n\t  var i = 0;\n\t  while (p) {\n\t    p.data.copy(ret, i);\n\t    i += p.data.length;\n\t    p = p.next;\n\t  }\n\t  return ret;\n\t};\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// a duplex stream is just a stream that is both readable and writable.\n\t// Since JS doesn't have multiple prototypal inheritance, this class\n\t// prototypally inherits from Readable, and then parasitically from\n\t// Writable.\n\t\n\t'use strict';\n\t\n\t/*<replacement>*/\n\t\n\tvar objectKeys = Object.keys || function (obj) {\n\t  var keys = [];\n\t  for (var key in obj) {\n\t    keys.push(key);\n\t  }return keys;\n\t};\n\t/*</replacement>*/\n\t\n\tmodule.exports = Duplex;\n\t\n\t/*<replacement>*/\n\tvar processNextTick = __webpack_require__(14);\n\t/*</replacement>*/\n\t\n\t/*<replacement>*/\n\tvar util = __webpack_require__(17);\n\tutil.inherits = __webpack_require__(10);\n\t/*</replacement>*/\n\t\n\tvar Readable = __webpack_require__(13);\n\tvar Writable = __webpack_require__(21);\n\t\n\tutil.inherits(Duplex, Readable);\n\t\n\tvar keys = objectKeys(Writable.prototype);\n\tfor (var v = 0; v < keys.length; v++) {\n\t  var method = keys[v];\n\t  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n\t}\n\t\n\tfunction Duplex(options) {\n\t  if (!(this instanceof Duplex)) return new Duplex(options);\n\t\n\t  Readable.call(this, options);\n\t  Writable.call(this, options);\n\t\n\t  if (options && options.readable === false) this.readable = false;\n\t\n\t  if (options && options.writable === false) this.writable = false;\n\t\n\t  this.allowHalfOpen = true;\n\t  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\t\n\t  this.once('end', onend);\n\t}\n\t\n\t// the no-half-open enforcer\n\tfunction onend() {\n\t  // if we allow half-open state, or if the writable side ended,\n\t  // then we're ok.\n\t  if (this.allowHalfOpen || this._writableState.ended) return;\n\t\n\t  // no more data can be written.\n\t  // But allow more writes to happen in this tick.\n\t  processNextTick(onEndNT, this);\n\t}\n\t\n\tfunction onEndNT(self) {\n\t  self.end();\n\t}\n\t\n\tfunction forEach(xs, f) {\n\t  for (var i = 0, l = xs.length; i < l; i++) {\n\t    f(xs[i], i);\n\t  }\n\t}\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process, setImmediate) {// A bit simpler than readable streams.\n\t// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n\t// the drain event emission and buffering.\n\t\n\t'use strict';\n\t\n\tmodule.exports = Writable;\n\t\n\t/*<replacement>*/\n\tvar processNextTick = __webpack_require__(14);\n\t/*</replacement>*/\n\t\n\t/*<replacement>*/\n\tvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : processNextTick;\n\t/*</replacement>*/\n\t\n\t/*<replacement>*/\n\tvar Duplex;\n\t/*</replacement>*/\n\t\n\tWritable.WritableState = WritableState;\n\t\n\t/*<replacement>*/\n\tvar util = __webpack_require__(17);\n\tutil.inherits = __webpack_require__(10);\n\t/*</replacement>*/\n\t\n\t/*<replacement>*/\n\tvar internalUtil = {\n\t  deprecate: __webpack_require__(24)\n\t};\n\t/*</replacement>*/\n\t\n\t/*<replacement>*/\n\tvar Stream;\n\t(function () {\n\t  try {\n\t    Stream = __webpack_require__(8);\n\t  } catch (_) {} finally {\n\t    if (!Stream) Stream = __webpack_require__(9).EventEmitter;\n\t  }\n\t})();\n\t/*</replacement>*/\n\t\n\tvar Buffer = __webpack_require__(4).Buffer;\n\t/*<replacement>*/\n\tvar bufferShim = __webpack_require__(16);\n\t/*</replacement>*/\n\t\n\tutil.inherits(Writable, Stream);\n\t\n\tfunction nop() {}\n\t\n\tfunction WriteReq(chunk, encoding, cb) {\n\t  this.chunk = chunk;\n\t  this.encoding = encoding;\n\t  this.callback = cb;\n\t  this.next = null;\n\t}\n\t\n\tfunction WritableState(options, stream) {\n\t  Duplex = Duplex || __webpack_require__(20);\n\t\n\t  options = options || {};\n\t\n\t  // object stream flag to indicate whether or not this stream\n\t  // contains buffers or objects.\n\t  this.objectMode = !!options.objectMode;\n\t\n\t  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\t\n\t  // the point at which write() starts returning false\n\t  // Note: 0 is a valid value, means that we always return false if\n\t  // the entire buffer is not flushed immediately on write()\n\t  var hwm = options.highWaterMark;\n\t  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\t  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\t\n\t  // cast to ints.\n\t  this.highWaterMark = ~ ~this.highWaterMark;\n\t\n\t  // drain event flag.\n\t  this.needDrain = false;\n\t  // at the start of calling end()\n\t  this.ending = false;\n\t  // when end() has been called, and returned\n\t  this.ended = false;\n\t  // when 'finish' is emitted\n\t  this.finished = false;\n\t\n\t  // should we decode strings into buffers before passing to _write?\n\t  // this is here so that some node-core streams can optimize string\n\t  // handling at a lower level.\n\t  var noDecode = options.decodeStrings === false;\n\t  this.decodeStrings = !noDecode;\n\t\n\t  // Crypto is kind of old and crusty.  Historically, its default string\n\t  // encoding is 'binary' so we have to make this configurable.\n\t  // Everything else in the universe uses 'utf8', though.\n\t  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\t\n\t  // not an actual buffer we keep track of, but a measurement\n\t  // of how much we're waiting to get pushed to some underlying\n\t  // socket or file.\n\t  this.length = 0;\n\t\n\t  // a flag to see when we're in the middle of a write.\n\t  this.writing = false;\n\t\n\t  // when true all writes will be buffered until .uncork() call\n\t  this.corked = 0;\n\t\n\t  // a flag to be able to tell if the onwrite cb is called immediately,\n\t  // or on a later tick.  We set this to true at first, because any\n\t  // actions that shouldn't happen until \"later\" should generally also\n\t  // not happen before the first write call.\n\t  this.sync = true;\n\t\n\t  // a flag to know if we're processing previously buffered items, which\n\t  // may call the _write() callback in the same tick, so that we don't\n\t  // end up in an overlapped onwrite situation.\n\t  this.bufferProcessing = false;\n\t\n\t  // the callback that's passed to _write(chunk,cb)\n\t  this.onwrite = function (er) {\n\t    onwrite(stream, er);\n\t  };\n\t\n\t  // the callback that the user supplies to write(chunk,encoding,cb)\n\t  this.writecb = null;\n\t\n\t  // the amount that is being written when _write is called.\n\t  this.writelen = 0;\n\t\n\t  this.bufferedRequest = null;\n\t  this.lastBufferedRequest = null;\n\t\n\t  // number of pending user-supplied write callbacks\n\t  // this must be 0 before 'finish' can be emitted\n\t  this.pendingcb = 0;\n\t\n\t  // emit prefinish if the only thing we're waiting for is _write cbs\n\t  // This is relevant for synchronous Transform streams\n\t  this.prefinished = false;\n\t\n\t  // True if the error was already emitted and should not be thrown again\n\t  this.errorEmitted = false;\n\t\n\t  // count buffered requests\n\t  this.bufferedRequestCount = 0;\n\t\n\t  // allocate the first CorkedRequest, there is always\n\t  // one allocated and free to use, and we maintain at most two\n\t  this.corkedRequestsFree = new CorkedRequest(this);\n\t}\n\t\n\tWritableState.prototype.getBuffer = function getBuffer() {\n\t  var current = this.bufferedRequest;\n\t  var out = [];\n\t  while (current) {\n\t    out.push(current);\n\t    current = current.next;\n\t  }\n\t  return out;\n\t};\n\t\n\t(function () {\n\t  try {\n\t    Object.defineProperty(WritableState.prototype, 'buffer', {\n\t      get: internalUtil.deprecate(function () {\n\t        return this.getBuffer();\n\t      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.')\n\t    });\n\t  } catch (_) {}\n\t})();\n\t\n\t// Test _writableState for inheritance to account for Duplex streams,\n\t// whose prototype chain only points to Readable.\n\tvar realHasInstance;\n\tif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n\t  realHasInstance = Function.prototype[Symbol.hasInstance];\n\t  Object.defineProperty(Writable, Symbol.hasInstance, {\n\t    value: function (object) {\n\t      if (realHasInstance.call(this, object)) return true;\n\t\n\t      return object && object._writableState instanceof WritableState;\n\t    }\n\t  });\n\t} else {\n\t  realHasInstance = function (object) {\n\t    return object instanceof this;\n\t  };\n\t}\n\t\n\tfunction Writable(options) {\n\t  Duplex = Duplex || __webpack_require__(20);\n\t\n\t  // Writable ctor is applied to Duplexes, too.\n\t  // `realHasInstance` is necessary because using plain `instanceof`\n\t  // would return false, as no `_writableState` property is attached.\n\t\n\t  // Trying to use the custom `instanceof` for Writable here will also break the\n\t  // Node.js LazyTransform implementation, which has a non-trivial getter for\n\t  // `_writableState` that would lead to infinite recursion.\n\t  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n\t    return new Writable(options);\n\t  }\n\t\n\t  this._writableState = new WritableState(options, this);\n\t\n\t  // legacy.\n\t  this.writable = true;\n\t\n\t  if (options) {\n\t    if (typeof options.write === 'function') this._write = options.write;\n\t\n\t    if (typeof options.writev === 'function') this._writev = options.writev;\n\t  }\n\t\n\t  Stream.call(this);\n\t}\n\t\n\t// Otherwise people can pipe Writable streams, which is just wrong.\n\tWritable.prototype.pipe = function () {\n\t  this.emit('error', new Error('Cannot pipe, not readable'));\n\t};\n\t\n\tfunction writeAfterEnd(stream, cb) {\n\t  var er = new Error('write after end');\n\t  // TODO: defer error events consistently everywhere, not just the cb\n\t  stream.emit('error', er);\n\t  processNextTick(cb, er);\n\t}\n\t\n\t// If we get something that is not a buffer, string, null, or undefined,\n\t// and we're not in objectMode, then that's an error.\n\t// Otherwise stream chunks are all considered to be of length=1, and the\n\t// watermarks determine how many objects to keep in the buffer, rather than\n\t// how many bytes or characters.\n\tfunction validChunk(stream, state, chunk, cb) {\n\t  var valid = true;\n\t  var er = false;\n\t  // Always throw error if a null is written\n\t  // if we are not in object mode then throw\n\t  // if it is not a buffer, string, or undefined.\n\t  if (chunk === null) {\n\t    er = new TypeError('May not write null values to stream');\n\t  } else if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n\t    er = new TypeError('Invalid non-string/buffer chunk');\n\t  }\n\t  if (er) {\n\t    stream.emit('error', er);\n\t    processNextTick(cb, er);\n\t    valid = false;\n\t  }\n\t  return valid;\n\t}\n\t\n\tWritable.prototype.write = function (chunk, encoding, cb) {\n\t  var state = this._writableState;\n\t  var ret = false;\n\t\n\t  if (typeof encoding === 'function') {\n\t    cb = encoding;\n\t    encoding = null;\n\t  }\n\t\n\t  if (Buffer.isBuffer(chunk)) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\t\n\t  if (typeof cb !== 'function') cb = nop;\n\t\n\t  if (state.ended) writeAfterEnd(this, cb);else if (validChunk(this, state, chunk, cb)) {\n\t    state.pendingcb++;\n\t    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n\t  }\n\t\n\t  return ret;\n\t};\n\t\n\tWritable.prototype.cork = function () {\n\t  var state = this._writableState;\n\t\n\t  state.corked++;\n\t};\n\t\n\tWritable.prototype.uncork = function () {\n\t  var state = this._writableState;\n\t\n\t  if (state.corked) {\n\t    state.corked--;\n\t\n\t    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n\t  }\n\t};\n\t\n\tWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n\t  // node::ParseEncoding() requires lower case.\n\t  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n\t  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n\t  this._writableState.defaultEncoding = encoding;\n\t  return this;\n\t};\n\t\n\tfunction decodeChunk(state, chunk, encoding) {\n\t  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n\t    chunk = bufferShim.from(chunk, encoding);\n\t  }\n\t  return chunk;\n\t}\n\t\n\t// if we're already writing something, then just put this\n\t// in the queue, and wait our turn.  Otherwise, call _write\n\t// If we return false, then we need a drain event, so set that flag.\n\tfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n\t  chunk = decodeChunk(state, chunk, encoding);\n\t\n\t  if (Buffer.isBuffer(chunk)) encoding = 'buffer';\n\t  var len = state.objectMode ? 1 : chunk.length;\n\t\n\t  state.length += len;\n\t\n\t  var ret = state.length < state.highWaterMark;\n\t  // we must ensure that previous needDrain will not be reset to false.\n\t  if (!ret) state.needDrain = true;\n\t\n\t  if (state.writing || state.corked) {\n\t    var last = state.lastBufferedRequest;\n\t    state.lastBufferedRequest = new WriteReq(chunk, encoding, cb);\n\t    if (last) {\n\t      last.next = state.lastBufferedRequest;\n\t    } else {\n\t      state.bufferedRequest = state.lastBufferedRequest;\n\t    }\n\t    state.bufferedRequestCount += 1;\n\t  } else {\n\t    doWrite(stream, state, false, len, chunk, encoding, cb);\n\t  }\n\t\n\t  return ret;\n\t}\n\t\n\tfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n\t  state.writelen = len;\n\t  state.writecb = cb;\n\t  state.writing = true;\n\t  state.sync = true;\n\t  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n\t  state.sync = false;\n\t}\n\t\n\tfunction onwriteError(stream, state, sync, er, cb) {\n\t  --state.pendingcb;\n\t  if (sync) processNextTick(cb, er);else cb(er);\n\t\n\t  stream._writableState.errorEmitted = true;\n\t  stream.emit('error', er);\n\t}\n\t\n\tfunction onwriteStateUpdate(state) {\n\t  state.writing = false;\n\t  state.writecb = null;\n\t  state.length -= state.writelen;\n\t  state.writelen = 0;\n\t}\n\t\n\tfunction onwrite(stream, er) {\n\t  var state = stream._writableState;\n\t  var sync = state.sync;\n\t  var cb = state.writecb;\n\t\n\t  onwriteStateUpdate(state);\n\t\n\t  if (er) onwriteError(stream, state, sync, er, cb);else {\n\t    // Check if we're actually ready to finish, but don't emit yet\n\t    var finished = needFinish(state);\n\t\n\t    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n\t      clearBuffer(stream, state);\n\t    }\n\t\n\t    if (sync) {\n\t      /*<replacement>*/\n\t      asyncWrite(afterWrite, stream, state, finished, cb);\n\t      /*</replacement>*/\n\t    } else {\n\t        afterWrite(stream, state, finished, cb);\n\t      }\n\t  }\n\t}\n\t\n\tfunction afterWrite(stream, state, finished, cb) {\n\t  if (!finished) onwriteDrain(stream, state);\n\t  state.pendingcb--;\n\t  cb();\n\t  finishMaybe(stream, state);\n\t}\n\t\n\t// Must force callback to be called on nextTick, so that we don't\n\t// emit 'drain' before the write() consumer gets the 'false' return\n\t// value, and has a chance to attach a 'drain' listener.\n\tfunction onwriteDrain(stream, state) {\n\t  if (state.length === 0 && state.needDrain) {\n\t    state.needDrain = false;\n\t    stream.emit('drain');\n\t  }\n\t}\n\t\n\t// if there's something in the buffer waiting, then process it\n\tfunction clearBuffer(stream, state) {\n\t  state.bufferProcessing = true;\n\t  var entry = state.bufferedRequest;\n\t\n\t  if (stream._writev && entry && entry.next) {\n\t    // Fast case, write everything using _writev()\n\t    var l = state.bufferedRequestCount;\n\t    var buffer = new Array(l);\n\t    var holder = state.corkedRequestsFree;\n\t    holder.entry = entry;\n\t\n\t    var count = 0;\n\t    while (entry) {\n\t      buffer[count] = entry;\n\t      entry = entry.next;\n\t      count += 1;\n\t    }\n\t\n\t    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\t\n\t    // doWrite is almost always async, defer these to save a bit of time\n\t    // as the hot path ends with doWrite\n\t    state.pendingcb++;\n\t    state.lastBufferedRequest = null;\n\t    if (holder.next) {\n\t      state.corkedRequestsFree = holder.next;\n\t      holder.next = null;\n\t    } else {\n\t      state.corkedRequestsFree = new CorkedRequest(state);\n\t    }\n\t  } else {\n\t    // Slow case, write chunks one-by-one\n\t    while (entry) {\n\t      var chunk = entry.chunk;\n\t      var encoding = entry.encoding;\n\t      var cb = entry.callback;\n\t      var len = state.objectMode ? 1 : chunk.length;\n\t\n\t      doWrite(stream, state, false, len, chunk, encoding, cb);\n\t      entry = entry.next;\n\t      // if we didn't call the onwrite immediately, then\n\t      // it means that we need to wait until it does.\n\t      // also, that means that the chunk and cb are currently\n\t      // being processed, so move the buffer counter past them.\n\t      if (state.writing) {\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (entry === null) state.lastBufferedRequest = null;\n\t  }\n\t\n\t  state.bufferedRequestCount = 0;\n\t  state.bufferedRequest = entry;\n\t  state.bufferProcessing = false;\n\t}\n\t\n\tWritable.prototype._write = function (chunk, encoding, cb) {\n\t  cb(new Error('_write() is not implemented'));\n\t};\n\t\n\tWritable.prototype._writev = null;\n\t\n\tWritable.prototype.end = function (chunk, encoding, cb) {\n\t  var state = this._writableState;\n\t\n\t  if (typeof chunk === 'function') {\n\t    cb = chunk;\n\t    chunk = null;\n\t    encoding = null;\n\t  } else if (typeof encoding === 'function') {\n\t    cb = encoding;\n\t    encoding = null;\n\t  }\n\t\n\t  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\t\n\t  // .end() fully uncorks\n\t  if (state.corked) {\n\t    state.corked = 1;\n\t    this.uncork();\n\t  }\n\t\n\t  // ignore unnecessary end() calls.\n\t  if (!state.ending && !state.finished) endWritable(this, state, cb);\n\t};\n\t\n\tfunction needFinish(state) {\n\t  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n\t}\n\t\n\tfunction prefinish(stream, state) {\n\t  if (!state.prefinished) {\n\t    state.prefinished = true;\n\t    stream.emit('prefinish');\n\t  }\n\t}\n\t\n\tfunction finishMaybe(stream, state) {\n\t  var need = needFinish(state);\n\t  if (need) {\n\t    if (state.pendingcb === 0) {\n\t      prefinish(stream, state);\n\t      state.finished = true;\n\t      stream.emit('finish');\n\t    } else {\n\t      prefinish(stream, state);\n\t    }\n\t  }\n\t  return need;\n\t}\n\t\n\tfunction endWritable(stream, state, cb) {\n\t  state.ending = true;\n\t  finishMaybe(stream, state);\n\t  if (cb) {\n\t    if (state.finished) processNextTick(cb);else stream.once('finish', cb);\n\t  }\n\t  state.ended = true;\n\t  stream.writable = false;\n\t}\n\t\n\t// It seems a linked list but it is not\n\t// there will be only 2 of these for each stream\n\tfunction CorkedRequest(state) {\n\t  var _this = this;\n\t\n\t  this.next = null;\n\t  this.entry = null;\n\t\n\t  this.finish = function (err) {\n\t    var entry = _this.entry;\n\t    _this.entry = null;\n\t    while (entry) {\n\t      var cb = entry.callback;\n\t      state.pendingcb--;\n\t      cb(err);\n\t      entry = entry.next;\n\t    }\n\t    if (state.corkedRequestsFree) {\n\t      state.corkedRequestsFree.next = _this;\n\t    } else {\n\t      state.corkedRequestsFree = _this;\n\t    }\n\t  };\n\t}\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(12), __webpack_require__(22).setImmediate))\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar apply = Function.prototype.apply;\n\t\n\t// DOM APIs, for completeness\n\t\n\texports.setTimeout = function() {\n\t  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n\t};\n\texports.setInterval = function() {\n\t  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n\t};\n\texports.clearTimeout =\n\texports.clearInterval = function(timeout) {\n\t  if (timeout) {\n\t    timeout.close();\n\t  }\n\t};\n\t\n\tfunction Timeout(id, clearFn) {\n\t  this._id = id;\n\t  this._clearFn = clearFn;\n\t}\n\tTimeout.prototype.unref = Timeout.prototype.ref = function() {};\n\tTimeout.prototype.close = function() {\n\t  this._clearFn.call(window, this._id);\n\t};\n\t\n\t// Does not start the time, just sets up the members needed.\n\texports.enroll = function(item, msecs) {\n\t  clearTimeout(item._idleTimeoutId);\n\t  item._idleTimeout = msecs;\n\t};\n\t\n\texports.unenroll = function(item) {\n\t  clearTimeout(item._idleTimeoutId);\n\t  item._idleTimeout = -1;\n\t};\n\t\n\texports._unrefActive = exports.active = function(item) {\n\t  clearTimeout(item._idleTimeoutId);\n\t\n\t  var msecs = item._idleTimeout;\n\t  if (msecs >= 0) {\n\t    item._idleTimeoutId = setTimeout(function onTimeout() {\n\t      if (item._onTimeout)\n\t        item._onTimeout();\n\t    }, msecs);\n\t  }\n\t};\n\t\n\t// setimmediate attaches itself to the global object\n\t__webpack_require__(23);\n\texports.setImmediate = setImmediate;\n\texports.clearImmediate = clearImmediate;\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n\t    \"use strict\";\n\t\n\t    if (global.setImmediate) {\n\t        return;\n\t    }\n\t\n\t    var nextHandle = 1; // Spec says greater than zero\n\t    var tasksByHandle = {};\n\t    var currentlyRunningATask = false;\n\t    var doc = global.document;\n\t    var registerImmediate;\n\t\n\t    function setImmediate(callback) {\n\t      // Callback can either be a function or a string\n\t      if (typeof callback !== \"function\") {\n\t        callback = new Function(\"\" + callback);\n\t      }\n\t      // Copy function arguments\n\t      var args = new Array(arguments.length - 1);\n\t      for (var i = 0; i < args.length; i++) {\n\t          args[i] = arguments[i + 1];\n\t      }\n\t      // Store and register the task\n\t      var task = { callback: callback, args: args };\n\t      tasksByHandle[nextHandle] = task;\n\t      registerImmediate(nextHandle);\n\t      return nextHandle++;\n\t    }\n\t\n\t    function clearImmediate(handle) {\n\t        delete tasksByHandle[handle];\n\t    }\n\t\n\t    function run(task) {\n\t        var callback = task.callback;\n\t        var args = task.args;\n\t        switch (args.length) {\n\t        case 0:\n\t            callback();\n\t            break;\n\t        case 1:\n\t            callback(args[0]);\n\t            break;\n\t        case 2:\n\t            callback(args[0], args[1]);\n\t            break;\n\t        case 3:\n\t            callback(args[0], args[1], args[2]);\n\t            break;\n\t        default:\n\t            callback.apply(undefined, args);\n\t            break;\n\t        }\n\t    }\n\t\n\t    function runIfPresent(handle) {\n\t        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n\t        // So if we're currently running a task, we'll need to delay this invocation.\n\t        if (currentlyRunningATask) {\n\t            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n\t            // \"too much recursion\" error.\n\t            setTimeout(runIfPresent, 0, handle);\n\t        } else {\n\t            var task = tasksByHandle[handle];\n\t            if (task) {\n\t                currentlyRunningATask = true;\n\t                try {\n\t                    run(task);\n\t                } finally {\n\t                    clearImmediate(handle);\n\t                    currentlyRunningATask = false;\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t    function installNextTickImplementation() {\n\t        registerImmediate = function(handle) {\n\t            process.nextTick(function () { runIfPresent(handle); });\n\t        };\n\t    }\n\t\n\t    function canUsePostMessage() {\n\t        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n\t        // where `global.postMessage` means something completely different and can't be used for this purpose.\n\t        if (global.postMessage && !global.importScripts) {\n\t            var postMessageIsAsynchronous = true;\n\t            var oldOnMessage = global.onmessage;\n\t            global.onmessage = function() {\n\t                postMessageIsAsynchronous = false;\n\t            };\n\t            global.postMessage(\"\", \"*\");\n\t            global.onmessage = oldOnMessage;\n\t            return postMessageIsAsynchronous;\n\t        }\n\t    }\n\t\n\t    function installPostMessageImplementation() {\n\t        // Installs an event handler on `global` for the `message` event: see\n\t        // * https://developer.mozilla.org/en/DOM/window.postMessage\n\t        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\t\n\t        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n\t        var onGlobalMessage = function(event) {\n\t            if (event.source === global &&\n\t                typeof event.data === \"string\" &&\n\t                event.data.indexOf(messagePrefix) === 0) {\n\t                runIfPresent(+event.data.slice(messagePrefix.length));\n\t            }\n\t        };\n\t\n\t        if (global.addEventListener) {\n\t            global.addEventListener(\"message\", onGlobalMessage, false);\n\t        } else {\n\t            global.attachEvent(\"onmessage\", onGlobalMessage);\n\t        }\n\t\n\t        registerImmediate = function(handle) {\n\t            global.postMessage(messagePrefix + handle, \"*\");\n\t        };\n\t    }\n\t\n\t    function installMessageChannelImplementation() {\n\t        var channel = new MessageChannel();\n\t        channel.port1.onmessage = function(event) {\n\t            var handle = event.data;\n\t            runIfPresent(handle);\n\t        };\n\t\n\t        registerImmediate = function(handle) {\n\t            channel.port2.postMessage(handle);\n\t        };\n\t    }\n\t\n\t    function installReadyStateChangeImplementation() {\n\t        var html = doc.documentElement;\n\t        registerImmediate = function(handle) {\n\t            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n\t            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n\t            var script = doc.createElement(\"script\");\n\t            script.onreadystatechange = function () {\n\t                runIfPresent(handle);\n\t                script.onreadystatechange = null;\n\t                html.removeChild(script);\n\t                script = null;\n\t            };\n\t            html.appendChild(script);\n\t        };\n\t    }\n\t\n\t    function installSetTimeoutImplementation() {\n\t        registerImmediate = function(handle) {\n\t            setTimeout(runIfPresent, 0, handle);\n\t        };\n\t    }\n\t\n\t    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n\t    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n\t    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\t\n\t    // Don't get fooled by e.g. browserify environments.\n\t    if ({}.toString.call(global.process) === \"[object process]\") {\n\t        // For Node.js before 0.9\n\t        installNextTickImplementation();\n\t\n\t    } else if (canUsePostMessage()) {\n\t        // For non-IE10 modern browsers\n\t        installPostMessageImplementation();\n\t\n\t    } else if (global.MessageChannel) {\n\t        // For web workers, where supported\n\t        installMessageChannelImplementation();\n\t\n\t    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n\t        // For IE 6–8\n\t        installReadyStateChangeImplementation();\n\t\n\t    } else {\n\t        // For older browsers\n\t        installSetTimeoutImplementation();\n\t    }\n\t\n\t    attachTo.setImmediate = setImmediate;\n\t    attachTo.clearImmediate = clearImmediate;\n\t}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(12)))\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = deprecate;\n\t\n\t/**\n\t * Mark that a method should not be used.\n\t * Returns a modified function which warns once by default.\n\t *\n\t * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n\t *\n\t * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n\t * will throw an Error when invoked.\n\t *\n\t * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n\t * will invoke `console.trace()` instead of `console.error()`.\n\t *\n\t * @param {Function} fn - the function to deprecate\n\t * @param {String} msg - the string to print to the console when `fn` is invoked\n\t * @returns {Function} a new \"deprecated\" version of `fn`\n\t * @api public\n\t */\n\t\n\tfunction deprecate (fn, msg) {\n\t  if (config('noDeprecation')) {\n\t    return fn;\n\t  }\n\t\n\t  var warned = false;\n\t  function deprecated() {\n\t    if (!warned) {\n\t      if (config('throwDeprecation')) {\n\t        throw new Error(msg);\n\t      } else if (config('traceDeprecation')) {\n\t        console.trace(msg);\n\t      } else {\n\t        console.warn(msg);\n\t      }\n\t      warned = true;\n\t    }\n\t    return fn.apply(this, arguments);\n\t  }\n\t\n\t  return deprecated;\n\t}\n\t\n\t/**\n\t * Checks `localStorage` for boolean values for the given `name`.\n\t *\n\t * @param {String} name\n\t * @returns {Boolean}\n\t * @api private\n\t */\n\t\n\tfunction config (name) {\n\t  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n\t  try {\n\t    if (!global.localStorage) return false;\n\t  } catch (_) {\n\t    return false;\n\t  }\n\t  var val = global.localStorage[name];\n\t  if (null == val) return false;\n\t  return String(val).toLowerCase() === 'true';\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tvar Buffer = __webpack_require__(4).Buffer;\n\t\n\tvar isBufferEncoding = Buffer.isEncoding\n\t  || function(encoding) {\n\t       switch (encoding && encoding.toLowerCase()) {\n\t         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n\t         default: return false;\n\t       }\n\t     }\n\t\n\t\n\tfunction assertEncoding(encoding) {\n\t  if (encoding && !isBufferEncoding(encoding)) {\n\t    throw new Error('Unknown encoding: ' + encoding);\n\t  }\n\t}\n\t\n\t// StringDecoder provides an interface for efficiently splitting a series of\n\t// buffers into a series of JS strings without breaking apart multi-byte\n\t// characters. CESU-8 is handled as part of the UTF-8 encoding.\n\t//\n\t// @TODO Handling all encodings inside a single object makes it very difficult\n\t// to reason about this code, so it should be split up in the future.\n\t// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n\t// points as used by CESU-8.\n\tvar StringDecoder = exports.StringDecoder = function(encoding) {\n\t  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n\t  assertEncoding(encoding);\n\t  switch (this.encoding) {\n\t    case 'utf8':\n\t      // CESU-8 represents each of Surrogate Pair by 3-bytes\n\t      this.surrogateSize = 3;\n\t      break;\n\t    case 'ucs2':\n\t    case 'utf16le':\n\t      // UTF-16 represents each of Surrogate Pair by 2-bytes\n\t      this.surrogateSize = 2;\n\t      this.detectIncompleteChar = utf16DetectIncompleteChar;\n\t      break;\n\t    case 'base64':\n\t      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n\t      this.surrogateSize = 3;\n\t      this.detectIncompleteChar = base64DetectIncompleteChar;\n\t      break;\n\t    default:\n\t      this.write = passThroughWrite;\n\t      return;\n\t  }\n\t\n\t  // Enough space to store all bytes of a single character. UTF-8 needs 4\n\t  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n\t  this.charBuffer = new Buffer(6);\n\t  // Number of bytes received for the current incomplete multi-byte character.\n\t  this.charReceived = 0;\n\t  // Number of bytes expected for the current incomplete multi-byte character.\n\t  this.charLength = 0;\n\t};\n\t\n\t\n\t// write decodes the given buffer and returns it as JS string that is\n\t// guaranteed to not contain any partial multi-byte characters. Any partial\n\t// character found at the end of the buffer is buffered up, and will be\n\t// returned when calling write again with the remaining bytes.\n\t//\n\t// Note: Converting a Buffer containing an orphan surrogate to a String\n\t// currently works, but converting a String to a Buffer (via `new Buffer`, or\n\t// Buffer#write) will replace incomplete surrogates with the unicode\n\t// replacement character. See https://codereview.chromium.org/121173009/ .\n\tStringDecoder.prototype.write = function(buffer) {\n\t  var charStr = '';\n\t  // if our last write ended with an incomplete multibyte character\n\t  while (this.charLength) {\n\t    // determine how many remaining bytes this buffer has to offer for this char\n\t    var available = (buffer.length >= this.charLength - this.charReceived) ?\n\t        this.charLength - this.charReceived :\n\t        buffer.length;\n\t\n\t    // add the new bytes to the char buffer\n\t    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n\t    this.charReceived += available;\n\t\n\t    if (this.charReceived < this.charLength) {\n\t      // still not enough chars in this buffer? wait for more ...\n\t      return '';\n\t    }\n\t\n\t    // remove bytes belonging to the current character from the buffer\n\t    buffer = buffer.slice(available, buffer.length);\n\t\n\t    // get the character that was split\n\t    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\t\n\t    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n\t    var charCode = charStr.charCodeAt(charStr.length - 1);\n\t    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n\t      this.charLength += this.surrogateSize;\n\t      charStr = '';\n\t      continue;\n\t    }\n\t    this.charReceived = this.charLength = 0;\n\t\n\t    // if there are no more bytes in this buffer, just emit our char\n\t    if (buffer.length === 0) {\n\t      return charStr;\n\t    }\n\t    break;\n\t  }\n\t\n\t  // determine and set charLength / charReceived\n\t  this.detectIncompleteChar(buffer);\n\t\n\t  var end = buffer.length;\n\t  if (this.charLength) {\n\t    // buffer the incomplete character bytes we got\n\t    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n\t    end -= this.charReceived;\n\t  }\n\t\n\t  charStr += buffer.toString(this.encoding, 0, end);\n\t\n\t  var end = charStr.length - 1;\n\t  var charCode = charStr.charCodeAt(end);\n\t  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n\t  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n\t    var size = this.surrogateSize;\n\t    this.charLength += size;\n\t    this.charReceived += size;\n\t    this.charBuffer.copy(this.charBuffer, size, 0, size);\n\t    buffer.copy(this.charBuffer, 0, 0, size);\n\t    return charStr.substring(0, end);\n\t  }\n\t\n\t  // or just emit the charStr\n\t  return charStr;\n\t};\n\t\n\t// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n\t// the end of the given buffer. If so, it sets this.charLength to the byte\n\t// length that character, and sets this.charReceived to the number of bytes\n\t// that are available for this character.\n\tStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n\t  // determine how many bytes we have to check at the end of this buffer\n\t  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\t\n\t  // Figure out if one of the last i bytes of our buffer announces an\n\t  // incomplete char.\n\t  for (; i > 0; i--) {\n\t    var c = buffer[buffer.length - i];\n\t\n\t    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\t\n\t    // 110XXXXX\n\t    if (i == 1 && c >> 5 == 0x06) {\n\t      this.charLength = 2;\n\t      break;\n\t    }\n\t\n\t    // 1110XXXX\n\t    if (i <= 2 && c >> 4 == 0x0E) {\n\t      this.charLength = 3;\n\t      break;\n\t    }\n\t\n\t    // 11110XXX\n\t    if (i <= 3 && c >> 3 == 0x1E) {\n\t      this.charLength = 4;\n\t      break;\n\t    }\n\t  }\n\t  this.charReceived = i;\n\t};\n\t\n\tStringDecoder.prototype.end = function(buffer) {\n\t  var res = '';\n\t  if (buffer && buffer.length)\n\t    res = this.write(buffer);\n\t\n\t  if (this.charReceived) {\n\t    var cr = this.charReceived;\n\t    var buf = this.charBuffer;\n\t    var enc = this.encoding;\n\t    res += buf.slice(0, cr).toString(enc);\n\t  }\n\t\n\t  return res;\n\t};\n\t\n\tfunction passThroughWrite(buffer) {\n\t  return buffer.toString(this.encoding);\n\t}\n\t\n\tfunction utf16DetectIncompleteChar(buffer) {\n\t  this.charReceived = buffer.length % 2;\n\t  this.charLength = this.charReceived ? 2 : 0;\n\t}\n\t\n\tfunction base64DetectIncompleteChar(buffer) {\n\t  this.charReceived = buffer.length % 3;\n\t  this.charLength = this.charReceived ? 3 : 0;\n\t}\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// a transform stream is a readable/writable stream where you do\n\t// something with the data.  Sometimes it's called a \"filter\",\n\t// but that's not a great name for it, since that implies a thing where\n\t// some bits pass through, and others are simply ignored.  (That would\n\t// be a valid example of a transform, of course.)\n\t//\n\t// While the output is causally related to the input, it's not a\n\t// necessarily symmetric or synchronous transformation.  For example,\n\t// a zlib stream might take multiple plain-text writes(), and then\n\t// emit a single compressed chunk some time in the future.\n\t//\n\t// Here's how this works:\n\t//\n\t// The Transform stream has all the aspects of the readable and writable\n\t// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n\t// internally, and returns false if there's a lot of pending writes\n\t// buffered up.  When you call read(), that calls _read(n) until\n\t// there's enough pending readable data buffered up.\n\t//\n\t// In a transform stream, the written data is placed in a buffer.  When\n\t// _read(n) is called, it transforms the queued up data, calling the\n\t// buffered _write cb's as it consumes chunks.  If consuming a single\n\t// written chunk would result in multiple output chunks, then the first\n\t// outputted bit calls the readcb, and subsequent chunks just go into\n\t// the read buffer, and will cause it to emit 'readable' if necessary.\n\t//\n\t// This way, back-pressure is actually determined by the reading side,\n\t// since _read has to be called to start processing a new chunk.  However,\n\t// a pathological inflate type of transform can cause excessive buffering\n\t// here.  For example, imagine a stream where every byte of input is\n\t// interpreted as an integer from 0-255, and then results in that many\n\t// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n\t// 1kb of data being output.  In this case, you could write a very small\n\t// amount of input, and end up with a very large amount of output.  In\n\t// such a pathological inflating mechanism, there'd be no way to tell\n\t// the system to stop doing the transform.  A single 4MB write could\n\t// cause the system to run out of memory.\n\t//\n\t// However, even in such a pathological case, only a single written chunk\n\t// would be consumed, and then the rest would wait (un-transformed) until\n\t// the results of the previous transformed chunk were consumed.\n\t\n\t'use strict';\n\t\n\tmodule.exports = Transform;\n\t\n\tvar Duplex = __webpack_require__(20);\n\t\n\t/*<replacement>*/\n\tvar util = __webpack_require__(17);\n\tutil.inherits = __webpack_require__(10);\n\t/*</replacement>*/\n\t\n\tutil.inherits(Transform, Duplex);\n\t\n\tfunction TransformState(stream) {\n\t  this.afterTransform = function (er, data) {\n\t    return afterTransform(stream, er, data);\n\t  };\n\t\n\t  this.needTransform = false;\n\t  this.transforming = false;\n\t  this.writecb = null;\n\t  this.writechunk = null;\n\t  this.writeencoding = null;\n\t}\n\t\n\tfunction afterTransform(stream, er, data) {\n\t  var ts = stream._transformState;\n\t  ts.transforming = false;\n\t\n\t  var cb = ts.writecb;\n\t\n\t  if (!cb) return stream.emit('error', new Error('no writecb in Transform class'));\n\t\n\t  ts.writechunk = null;\n\t  ts.writecb = null;\n\t\n\t  if (data !== null && data !== undefined) stream.push(data);\n\t\n\t  cb(er);\n\t\n\t  var rs = stream._readableState;\n\t  rs.reading = false;\n\t  if (rs.needReadable || rs.length < rs.highWaterMark) {\n\t    stream._read(rs.highWaterMark);\n\t  }\n\t}\n\t\n\tfunction Transform(options) {\n\t  if (!(this instanceof Transform)) return new Transform(options);\n\t\n\t  Duplex.call(this, options);\n\t\n\t  this._transformState = new TransformState(this);\n\t\n\t  var stream = this;\n\t\n\t  // start out asking for a readable event once data is transformed.\n\t  this._readableState.needReadable = true;\n\t\n\t  // we have implemented the _read method, and done the other things\n\t  // that Readable wants before the first _read call, so unset the\n\t  // sync guard flag.\n\t  this._readableState.sync = false;\n\t\n\t  if (options) {\n\t    if (typeof options.transform === 'function') this._transform = options.transform;\n\t\n\t    if (typeof options.flush === 'function') this._flush = options.flush;\n\t  }\n\t\n\t  // When the writable side finishes, then flush out anything remaining.\n\t  this.once('prefinish', function () {\n\t    if (typeof this._flush === 'function') this._flush(function (er, data) {\n\t      done(stream, er, data);\n\t    });else done(stream);\n\t  });\n\t}\n\t\n\tTransform.prototype.push = function (chunk, encoding) {\n\t  this._transformState.needTransform = false;\n\t  return Duplex.prototype.push.call(this, chunk, encoding);\n\t};\n\t\n\t// This is the part where you do stuff!\n\t// override this function in implementation classes.\n\t// 'chunk' is an input chunk.\n\t//\n\t// Call `push(newChunk)` to pass along transformed output\n\t// to the readable side.  You may call 'push' zero or more times.\n\t//\n\t// Call `cb(err)` when you are done with this chunk.  If you pass\n\t// an error, then that'll put the hurt on the whole operation.  If you\n\t// never call cb(), then you'll never get another chunk.\n\tTransform.prototype._transform = function (chunk, encoding, cb) {\n\t  throw new Error('_transform() is not implemented');\n\t};\n\t\n\tTransform.prototype._write = function (chunk, encoding, cb) {\n\t  var ts = this._transformState;\n\t  ts.writecb = cb;\n\t  ts.writechunk = chunk;\n\t  ts.writeencoding = encoding;\n\t  if (!ts.transforming) {\n\t    var rs = this._readableState;\n\t    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n\t  }\n\t};\n\t\n\t// Doesn't matter what the args are here.\n\t// _transform does all the work.\n\t// That we got here means that the readable side wants more data.\n\tTransform.prototype._read = function (n) {\n\t  var ts = this._transformState;\n\t\n\t  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n\t    ts.transforming = true;\n\t    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n\t  } else {\n\t    // mark that we need a transform, so that any data that comes in\n\t    // will get processed, now that we've asked for it.\n\t    ts.needTransform = true;\n\t  }\n\t};\n\t\n\tfunction done(stream, er, data) {\n\t  if (er) return stream.emit('error', er);\n\t\n\t  if (data !== null && data !== undefined) stream.push(data);\n\t\n\t  // if there's nothing in the write buffer, then that means\n\t  // that nothing more will ever be provided\n\t  var ws = stream._writableState;\n\t  var ts = stream._transformState;\n\t\n\t  if (ws.length) throw new Error('Calling transform done when ws.length != 0');\n\t\n\t  if (ts.transforming) throw new Error('Calling transform done when still transforming');\n\t\n\t  return stream.push(null);\n\t}\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// a passthrough stream.\n\t// basically just the most minimal sort of Transform stream.\n\t// Every written chunk gets output as-is.\n\t\n\t'use strict';\n\t\n\tmodule.exports = PassThrough;\n\t\n\tvar Transform = __webpack_require__(26);\n\t\n\t/*<replacement>*/\n\tvar util = __webpack_require__(17);\n\tutil.inherits = __webpack_require__(10);\n\t/*</replacement>*/\n\t\n\tutil.inherits(PassThrough, Transform);\n\t\n\tfunction PassThrough(options) {\n\t  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\t\n\t  Transform.call(this, options);\n\t}\n\t\n\tPassThrough.prototype._transform = function (chunk, encoding, cb) {\n\t  cb(null, chunk);\n\t};\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(21)\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(20)\n\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(26)\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(27)\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// dist/ofx4js.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8adf99d6825af88581d0","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule ofx4js {\n\n\nexport declare class Error {\n    public name: string;\n    public message: string;\n    public stack: string;\n    constructor(message?: string);\n}\n\n\n/**\n * Base exception class.\n *\n * @author Ryan Heaton\n */\nexport class OFXException extends Error {\n  private innerError: Error; \n\n  constructor(message: string = null, e: Error = null) {\n    super(message);\n    this.message = message;\n    this.innerError = e;\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../OFXException.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='OFXException'/>\n\nmodule ofx4js {\n\n/**\n * @author Ryan Heaton\n */\nexport class OFXRuntimeException extends OFXException {\n\n  constructor(message: string = null) {\n    super(message);\n  }\n}\n\n}\n\n\n// WEBPACK FOOTER //\n// ../../OFXRuntimeException.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule ofx4js.meta {\n\n/**\n * Annotation for a method that returns an OFX aggregate.\n *\n * @author Ryan Heaton\n */\nexport class Aggregate {\n  private _value: string;\n  \n  constructor(value: string) {\n    this._value = value;\n  }\n\n  /**\n   * The name of the aggregate.\n   *\n   * @return The name of the aggregate.\n   */\n  public value(): string {\n    return this._value;\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../meta/Aggregate.ts","module ofx4js.meta {\n\n/**\n * convenience function to supply a default value if the given value is not specified\n */\nexport function _default<T>(value: T, defaultValue: T): T {\n  return (typeof value !== 'undefined') ? value : defaultValue;\n}\n\n\nexport function isAssignableFrom(entryType: any, assignableTo: any) {\n  return (assignableTo === entryType) ||\n    ((typeof entryType === \"function\") && (assignableTo.prototype instanceof entryType));\n};\n\n\n/**\n * a function called on an object instance that will return the desired property value\n */\nexport interface ReadMethod<Type> {\n\t(): Type;\n}\n\n\n/**\n * a function called on an object instance that will set the desired property value\n */\nexport interface WriteMethod<Type> {\n\t(value: Type): void;\n}\n\n\n/**\n * parameters used to create a PropertyDescriptor\n */\nexport interface PropertyDescriptorParams<T> {\n\ttype: any;\n\tread: ReadMethod<T>;\n\twrite: WriteMethod<T>;\n}\n\n\n/**\n * an interface to read and write a value into an object \n */\nexport /*abstract*/ class PropertyDescriptor {\n\tprivate propertyType: any;\n\tprivate readMethod: ReadMethod<any>;\n\tprivate writeMethod: WriteMethod<any>;\n\t\n\tconstructor(params: PropertyDescriptorParams<any>) {\n\t\tthis.propertyType = params.type;\n\t\tthis.readMethod = params.read;\n\t\tthis.writeMethod = params.write;\n\t}\n\t\n\tpublic getPropertyType(): any {\n\t\treturn this.propertyType;\n\t}\n\t\n\tpublic getReadMethod(): ReadMethod<any> {\n\t\treturn this.readMethod;\n\t}\n\t\n\tpublic getWriteMethod(): WriteMethod<any> {\n\t\treturn this.writeMethod;\n\t}\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../meta/PropertyDescriptor.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='PropertyDescriptor'/>\n\nmodule ofx4js.meta {\n\nexport interface ChildAggregateParams<T> extends PropertyDescriptorParams<T> {\n  order: number;\n  name?: string;\n  required?: boolean;\n  collectionEntryType?: any;\n}\n\n\n/**\n * Marks a method as providing a child aggregate (or set of them to a top-level aggregate).\n *\n * @author Ryan Heaton\n */\nexport class ChildAggregate extends PropertyDescriptor {\n  private _name: string;\n  private _required: boolean;\n  private _order: number;\n  private _collectionEntryType: any;\n  \n  constructor(params: ChildAggregateParams<any>) {\n    super(params);\n    this._order = params.order;\n    this._name = _default(params.name, \"##not_specified##\");\n    this._required = _default(params.required, false);\n    this._collectionEntryType = _default(params.collectionEntryType, null);\n  }\n  \n  /**\n   * Used to specify the name of the aggregate in its context as a child aggregate.\n   *\n   * @return Used to specify the name of the aggregate in its context as a child aggregate.\n   */\n  public name(): string {\n    return this._name;\n  }\n  \n  /**\n   * Whether this aggregate is required.\n   *\n   * @return Whether this aggregate is required.\n   */\n  public required(): boolean {\n    return this._required;\n  }\n  \n  /**\n   * The order this child aggregate comes in its parent aggregate.\n   *\n   * @return The order this child aggregate comes in its parent aggregate.\n   */\n  public order(): number {\n    return this._order;\n  }\n  \n  /**\n   * If the type is a collection, return the type of the elements of the collection (otherwise null)\n   */\n  public collectionEntryType(): any {\n    return this._collectionEntryType;\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../meta/ChildAggregate.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='PropertyDescriptor'/>\n\nmodule ofx4js.meta {\n\nimport AggregateIntrospector = ofx4js.io.AggregateIntrospector;\n\nexport interface HeaderParams<T> extends PropertyDescriptorParams<T> {\n  name: string;\n}\n\n\n/**\n * An OFX element, applied to a javabean property.\n *\n * @author Ryan Heaton\n */\nexport class Header extends PropertyDescriptor {\n  private _name: string;\n  \n  constructor(params: HeaderParams<any>) {\n    super(params);\n    this._name = params.name;\n  }\n\n  /**\n   * The name of the element.\n   *\n   * @return The name of the element.\n   */\n  public name(): string {\n    return this._name;\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../meta/Header.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='PropertyDescriptor'/>\n\nmodule ofx4js.meta {\n\n\nexport interface ElementParams<T> extends PropertyDescriptorParams<T> {\n  order: number;\n  name: string;\n  required?: boolean;\n  collectionEntryType?: any;\n}\n\n\n/**\n * An OFX element, applied to a javabean property.\n *\n * @author Ryan Heaton\n */\nexport class Element extends PropertyDescriptor {\n  private _name: string;\n  private _required: boolean;\n  private _order: number;\n  private _collectionEntryType: any;\n  \n  constructor(params: ElementParams<any>) {\n    super(params);\n    this._name = params.name;\n    this._required = _default(params.required, false);\n    this._order = params.order;\n    this._collectionEntryType = _default(params.collectionEntryType, null);\n  }\n\n  /**\n   * The name of the element.\n   *\n   * @return The name of the element.\n   */\n  public name(): string {\n    return this._name;\n  }\n\n  /**\n   * Whether this element is required.\n   *\n   * @return Whether this element is required.\n   */\n  public required(): boolean {\n    return this._required;\n  }\n\n  /**\n   * The order this element comes in its parent aggregate.\n   *\n   * @return The order this element comes in its parent aggregate.\n   */\n  public order(): number {\n    return this._order;\n  }\n  \n  /**\n   * If the type is a collection, return the type of the elements of the collection (otherwise null)\n   */\n  public collectionEntryType(): any {\n    return this._collectionEntryType;\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../meta/Element.ts","\nmodule ofx4js.log {\n\n\t\nexport class Log {\n\tprivate infoEnabled: boolean;\n\tprivate debugEnabled: boolean;\n\t\n\tconstructor() {\n\t\tthis.infoEnabled = false;\n\t\tthis.debugEnabled = false;\n\t}\n\n\tpublic setInfoEnabled(value: boolean): void {\n\t\tthis.infoEnabled = value;\n\t}\n\n\tpublic isInfoEnabled(): boolean {\n\t\treturn this.infoEnabled;\n\t}\n\t\n\tpublic info(...texts: Array<string>): void {\n\t\tif(this.isInfoEnabled()) {\n\t\t\tconsole.log(texts);\n\t\t}\n\t}\n\n\tpublic setDebugEnabled(value: boolean): void {\n\t\tthis.debugEnabled = value;\n\t}\n\n\tpublic isDebugEnabled(): boolean {\n\t\treturn this.debugEnabled;\n\t}\n\t\n\tpublic debug(...texts: Array<string>): void {\n\t\tif(this.isDebugEnabled()) {\n\t\t\tconsole.log(texts);\n\t\t}\n\t}\n\t\n\tpublic warning(...texts: Array<string>): void {\n\t\tconsole.log(texts);\n\t}\n\t\n\tpublic error(...texts: Array<string>): void {\n\t\tconsole.log(texts);\n\t}\n}\n\n\nexport class LogFactory {\n\t\n\tstatic getLog(clazz: any) {\n\t\tif(!clazz.Log) {\n\t\t\tclazz.Log = new Log();\n\t\t}\n\t\t\n\t\treturn clazz.Log;\n\t}\n}\n\n}\n\n\n// WEBPACK FOOTER //\n// ../../log/Log.ts","\nmodule ofx4js.collections {\n\t\nexport interface CompareFcn<T> {\n\t(a: T, b: T): number;\n}\n\n\nexport class SortedSet<T> {\n\tprivate valueArray: Array<T>;\n\tprivate compareFcn: CompareFcn<T>;\n\tprivate isSorted: boolean;\n\t\n\tconstructor(compareFcn: CompareFcn<T>) {\n\t\tthis.valueArray = [];\n\t\tthis.compareFcn = compareFcn;\n\t}\n\t\n\tvalues(): Array<T> {\n\t\tif(!this.isSorted) {\n            console.assert(!!this.compareFcn);\n\t\t\tthis.valueArray.sort(this.compareFcn);\n\t\t\tthis.isSorted = true;\n\t\t}\n\t\treturn this.valueArray;\n\t}\n\t\n\tinsert(element: T): void {\n\t\tvar index: number = this.valueArray.indexOf(element);\n\t\tif(index == -1) {\n\t\t\tthis.isSorted = false;\n\t\t\tthis.valueArray.push(element);\n\t\t}\n\t}\n\t\n\tpush(element: T): void {\n\t\tthis.insert(element);\n\t}\n\t\n\tremove(element: T): boolean {\n\t\tvar index: number = this.valueArray.indexOf(element);\n\t\tif(index == -1) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.valueArray = this.valueArray.splice(index, 1);\n\t}\n\t\n\tcount(): number {\n\t\treturn this.valueArray.length;\n\t}\n}\n\n}\n\n\n// WEBPACK FOOTER //\n// ../../collections/SortedSet.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../meta/ChildAggregate'/>\n///<reference path='../meta/Element'/>\n///<reference path='../meta/PropertyDescriptor'/>\n///<reference path='../collections/SortedSet'/>\n///<reference path='AggregateInfo'/>\n\nmodule ofx4js.io {\n\nimport SortedSet = ofx4js.collections.SortedSet;\nimport ReadMethod = ofx4js.meta.ReadMethod;\nimport WriteMethod = ofx4js.meta.WriteMethod;\nimport ChildAggregate = ofx4js.meta.ChildAggregate;\nimport Element = ofx4js.meta.Element;\nimport PropertyDescriptor = ofx4js.meta.PropertyDescriptor;\n\n//import Log = org.apache.commons.logging.Log;\n//import LogFactory = org.apache.commons.logging.LogFactory;\n\n\nexport enum AggregateAttributeType {\n\n  CHILD_AGGREGATE,\n\n  ELEMENT\n\n}\n\n\n/**\n * A generic descriptor for an attribute of an OFX aggregate.\n *\n * @author Ryan Heaton\n */\nexport class AggregateAttribute {\n\n  private readMethod: ReadMethod<any>;\n  private writeMethod: WriteMethod<any>;\n  private attributeType: any;\n  private collectionEntryType: any;\n  private name: string;\n  private order: number;\n  private required: boolean;\n  private type: AggregateAttributeType;\n  private toString_: string;\n  private collection: boolean;\n  \n  constructor(arg: Element | ChildAggregate) {\n    if(arg instanceof Element) {\n      this.AggregateAttributeFromElement(arg);\n    } else if(arg instanceof ChildAggregate) {\n      this.AggregateAttributeFromChildAggregate(arg);\n    } else {\n      throw new OFXException(\"invalid type\");\n    }\n  }\n\n  AggregateAttributeFromElement(elementInfo: Element) {\n    this.readMethod = elementInfo.getReadMethod();\n    this.writeMethod = elementInfo.getWriteMethod();\n    if (this.readMethod == null) {\n      throw new OFXException(\"Illegal property for aggregate: no read method.\");\n    }\n    else if (this.writeMethod == null) {\n      throw new OFXException(\"Illegal property for aggregate: no write method.\");\n    }\n\n    this.attributeType = elementInfo.getPropertyType();\n    this.collectionEntryType = null;\n    this.name = elementInfo.name();\n    this.order = elementInfo.order();\n    this.required = elementInfo.required();\n    this.type = AggregateAttributeType.ELEMENT;\n    this.toString_ = \"Element '\" + this.name + \"'\";\n    this.collection = false;\n\n    //todo: validate known/supported element types here?\n  }\n\n  AggregateAttributeFromChildAggregate(childAggregate: ChildAggregate) {\n    this.readMethod = childAggregate.getReadMethod();\n    this.writeMethod = childAggregate.getWriteMethod();\n    if (this.readMethod == null) {\n      throw new OFXException(\"Illegal property for aggregate: no read method.\");\n    }\n    else if (this.writeMethod == null) {\n      throw new OFXException(\"Illegal property for aggregate: no write method.\");\n    }\n\n    this.attributeType = childAggregate.getPropertyType();\n    this.collection = false;\n    if (childAggregate.collectionEntryType()) {\n      this.collection = true;\n      this.name = null;\n      this.collectionEntryType = childAggregate.collectionEntryType();\n    }\n    else if (\"##not_specified##\" === childAggregate.name()) {\n      var aggregateInfo: AggregateInfo = AggregateIntrospector.getAggregateInfo(this.attributeType);\n      if (aggregateInfo == null) {\n        throw new OFXException(\"Illegal child aggregate type '\" + childAggregate.getPropertyType() + \"': no aggregate information available.\");\n      }\n\n      this.name = aggregateInfo.getName();\n      if (\"##not_specified##\" === this.name) {\n        throw new OFXException(\"Illegal child aggregate type '\" + childAggregate.getPropertyType() + \"': a child aggregate name must be specified.\");\n      }\n      this.collectionEntryType = null;\n    }\n    else {\n      this.name = childAggregate.name();\n      this.collectionEntryType = null;\n    }\n\n    this.order = childAggregate.order();\n    this.required = childAggregate.required();\n    this.type = AggregateAttributeType.CHILD_AGGREGATE;\n    this.toString_ = \"ChildAggregate '\" + this.name + \"'\";\n  }\n\n  public get(instance: Object) /*throws Exception*/: any {\n    let val = this.readMethod.call(instance);\n    if (this.attributeType && val in this.attributeType) {\n      val = this.attributeType[val]\n    }\n    return val;\n  }\n\n  public set(value: any, instance: Object) /*throws Exception*/: void {\n    if(this.collection) {\n      var collection: Array<Object> = this.get(instance);\n      if (collection == null) {\n        if(this.attributeType === SortedSet) {\n          console.assert(\"contentCompare\" in this.collectionEntryType);\n          collection = <any>new SortedSet((<any>this.collectionEntryType).contentCompare);\n        } else {\n          collection = new this.attributeType();\n        }\n      }\n      collection.push(value);\n      value = collection;\n    }\n    \n    this.writeMethod.call(instance, value);\n  }\n\n  public getAttributeType(): any {\n    return this.attributeType;\n  }\n\n  public getArrayEntryType(): any {\n    return this.collectionEntryType;\n  }\n\n  public getName(): string {\n    return this.name;\n  }\n\n  public isRequired(): boolean {\n    return this.required;\n  }\n\n  public getOrder(): number {\n    return this.order;\n  }\n\n  public getType(): AggregateAttributeType {\n    return this.type;\n  }\n\n  public static contentCompare(left: AggregateAttribute, right: AggregateAttribute): number {\n    return left.order - right.order;\n  }\n\n//  public int compareTo(other: AggregateAttribute) {\n//    return this.order - other.order;\n//  }\n\n  public isArray(): boolean {\n    return this.collection;\n  }\n\n  //@Override\n  public toString(): string {\n    return this.toString_;\n  }\n}\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../io/AggregateAttribute.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../project.d.ts'/>\n///<reference path='../collections/SortedSet'/>\n///<reference path='../meta/Aggregate'/>\n///<reference path='../meta/ChildAggregate'/>\n///<reference path='../meta/Element'/>\n///<reference path='../meta/Header'/>\n///<reference path='../meta/PropertyDescriptor'/>\n///<reference path='AggregateInfo'/>\n///<reference path='AggregateAttribute'/>\n\nmodule ofx4js.io {\n\nimport SortedSet = ofx4js.collections.SortedSet;\nimport Aggregate = ofx4js.meta.Aggregate;\nimport ChildAggregate = ofx4js.meta.ChildAggregate;\nimport Element = ofx4js.meta.Element;\nimport Header = ofx4js.meta.Header;\nimport isAssignableFrom = ofx4js.meta.isAssignableFrom;\n\n\nexport interface HeaderMap {\n  [key: string]: Header;\n}\n\nexport interface HeaderValues {\n  [key: string]: Object;\n}\n\n/**\n * Holder for meta information about an aggregate class.\n *\n * @author Ryan Heaton\n */\nexport class AggregateInfo {\n\n  private name: string;\n  private attributes: SortedSet<AggregateAttribute>;\n  private headers: HeaderMap;\n  private owner: any;\n\n  constructor(name: string, owner: any, parentInfo?: AggregateInfo) {\n    this.name = name;\n    this.owner = owner;\n    this.headers = {};\n    this.attributes = new SortedSet<AggregateAttribute>(AggregateAttribute.contentCompare);\n    \n    if(parentInfo) {\n      for(var header in parentInfo.headers) {\n        this.headers[header] = parentInfo.headers[header];\n      }\n      var parentAttributes: Array<AggregateAttribute> = parentInfo.attributes.values();\n      for(var i in parentAttributes) {\n        var attribute: AggregateAttribute = parentAttributes[i];\n        this.attributes.insert(attribute);\n      }\n    }\n  }\n\n  /**\n   * The name of the aggregate.\n   *\n   * @return The name of the aggregate.\n   */\n  public getName(): string {\n    return this.name;\n  }\n  \n  public setName(name: string): void {\n    this.name = name;\n  }\n  \n  public getOwner(): any {\n    return this.owner;\n  }\n\n  /**\n   * The attributes.\n   *\n   * @return The attributes.\n   */\n  public getAttributes(): SortedSet<AggregateAttribute> {\n    return this.attributes;\n  }\n\n  /**\n   * Get the attribute by the specified name.\n   *\n   * @param name The name of the attribute.\n   * @param orderHint The order at which the attribute should come after in case there are more than one candidates.\n   * @param assignableTo The class this attribute must be assignable to\n   * @return The attribute by the specified name,\n   * or if there are more than one by that name,\n   * the first one after the specified order,\n   * or if there are none then the first collection that\n   * comes after the order hint, or the latest if there\n   * are none that come after the order hint, or null.\n   */\n  public getAttribute(name: string, orderHint: number, assignableTo: any = null): AggregateAttribute {\n    var candidates: Array<AggregateAttribute> = new Array<AggregateAttribute>();\n    var collectionBucket: AggregateAttribute = null;\n    for (var i in this.attributes.values()) {\n      var attribute: AggregateAttribute = this.attributes.values()[i];\n      if (name === attribute.getName()) {\n        candidates.push(attribute);\n      }\n      else if (attribute.isArray()) {\n        if (assignableTo != null) {\n          // Verify it's the right generic type.\n          var entryType: any = attribute.getArrayEntryType();\n          if (entryType != null && !isAssignableFrom(entryType, assignableTo)) {\n            // Array is of wrong type.\n            continue;\n          }\n        }\n        if (collectionBucket == null || collectionBucket.getOrder() < orderHint) {\n          //the default is the first collection that comes after the order hint, or the latest if there are none that come after the order hint.\n          collectionBucket = attribute;\n        }\n      }\n    }\n\n    if (candidates.length != 0) {\n      if (candidates.length == 1) {\n        return candidates[0];\n      }\n      else {\n        for (var candidate of candidates) {\n          if (candidate.getOrder() >= orderHint) {\n            return candidate;\n          }\n        }\n      }\n    }\n\n    return collectionBucket;\n  }\n\n  /**\n   * Whether this aggregate has headers.\n   *\n   * @return Whether this aggregate has headers.\n   */\n  public hasHeaders(): boolean {\n    return Object.keys(this.headers).length != 0;\n  }\n\n  /**\n   * Get the headers defined by the specific aggregate instance.\n   *\n   * @param instance The aggregate instance.\n   * @return The headers.\n   */\n  public getHeaders(instance: Object): HeaderValues {\n    var headers: HeaderValues = {};\n    for (var headerKey in this.headers) {\n      var header: Header = this.headers[headerKey];\n      var headerValue: Object = header.getReadMethod().call(instance);\n      headers[header.name()] = headerValue;\n    }\n    return headers;\n  }\n\n  /**\n   * The type of the specified header.\n   *\n   * @param name The header name.\n   * @return The header type, or null if no header by the specified name exists.\n   */\n  public getHeaderType(name: string): any {\n    return (name in this.headers) ? this.headers[name].getPropertyType() : null;\n  }\n\n  /**\n   * Set the header value for the specified instance.\n   *\n   * @param instance The instance.\n   * @param name     The name of the header.\n   * @param value    the value of the header.\n   */\n  public setHeader(instance: Object, name: string, value: Object): void {\n    if (name in this.headers) {\n      this.headers[name].getWriteMethod().call(instance, value);\n    }\n  }\n  \n  \n  public addChildAggregate(childAggregate: ChildAggregate): void {\n    var attribute = new AggregateAttribute(childAggregate);\n    this.attributes.insert(attribute);\n  }\n\n  public addElement(element: Element): void {\n    var attribute = new AggregateAttribute(element);\n    this.attributes.insert(attribute);\n  }\n\n  public addHeader(header: Header): void {\n    console.assert(<boolean><any>header.name());\n    this.headers[header.name()] = header;\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../io/AggregateInfo.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../meta/Aggregate'/>\n///<reference path='../meta/ChildAggregate'/>\n///<reference path='../meta/Header'/>\n///<reference path='../meta/Element'/>\n///<reference path='../log/Log'/>\n///<reference path='AggregateInfo'/>\n///<reference path='../collections/collections'/>\n\nmodule ofx4js.io {\n\nimport Aggregate = ofx4js.meta.Aggregate;\nimport ChildAggregate = ofx4js.meta.ChildAggregate;\nimport Header = ofx4js.meta.Header;\nimport Element = ofx4js.meta.Element;\nimport Log = ofx4js.log.Log;\nimport LogFactory = ofx4js.log.LogFactory;\nimport AnyMap = ofx4js.collections.AnyMap;\n\n//import Log = org.apache.commons.logging.Log;\n//import LogFactory = org.apache.commons.logging.LogFactory;\n\nvar LOG: Log;\n\n/**\n * Introspector for aggregate information.\n *\n * @author Ryan Heaton\n */\nexport class AggregateIntrospector {\n\n  private static AGGREGATE_CLASSES_BY_NAME: AnyMap = {};\n  private static placeholderName = \"##PLACEHOLDER##\";\n\n  /**\n   * Get the aggregate meta information for the specified class.\n   *\n   * @param clazz the aggregate class.\n   * @return The aggregate meta information, or null if the class isn't an aggregate.\n   */\n  public static getAggregateInfo(clazz: any): AggregateInfo {\n    var aggregate: AggregateInfo = clazz.Aggregate;\n    if(aggregate != null && aggregate.getOwner() === clazz) {\n      return aggregate;\n    } else {\n      return null;\n    }\n  }\n  \n  private static getAncestorAggregateInfo(clazz: Function): AggregateInfo {\n    // traverse inheritence hierarchy.  This is janky because of typescript's __extends function, and may break in the future\n    for(var proto: Function = clazz.prototype; proto; proto = Object.getPrototypeOf(proto)) {\n      if((<any>proto).constructor && (<any>proto).constructor.Aggregate) {\n        return (<any>proto).constructor.Aggregate;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Find the aggregate class by name.\n   *\n   * @param aggregateName The name of the aggregate.\n   * @return The aggregate class.\n   */\n  public static findAggregateByName(aggregateName: string): any {\n    return AggregateIntrospector.AGGREGATE_CLASSES_BY_NAME[aggregateName];\n  }\n\n  public static addAggregate(clazz: any, name: string) {\n    AggregateIntrospector.AGGREGATE_CLASSES_BY_NAME[name] = clazz;\n\n    var aggregateInfo: AggregateInfo = AggregateIntrospector.getAggregateInfo(clazz);\n    if(aggregateInfo) {\n      console.assert(aggregateInfo.getName() === AggregateIntrospector.placeholderName);\n      aggregateInfo.setName(name);\n    } else {\n      var parentInfo: AggregateInfo = AggregateIntrospector.getAncestorAggregateInfo(clazz);\n      clazz.Aggregate = new AggregateInfo(name, clazz, parentInfo);\n    }\n  }\n  \n  public static addChildAggregate(clazz: any, childAggregate: ChildAggregate) {\n    var aggregateInfo: AggregateInfo = AggregateIntrospector.getAggregateInfo(clazz);\n    if(!aggregateInfo) {\n      var parentInfo: AggregateInfo = AggregateIntrospector.getAncestorAggregateInfo(clazz);\n      aggregateInfo = clazz.Aggregate = new AggregateInfo(AggregateIntrospector.placeholderName, clazz, parentInfo);\n    }\n    console.assert(aggregateInfo != null);\n    if(aggregateInfo) {\n      aggregateInfo.addChildAggregate(childAggregate);\n    }\n  }\n  \n  public static addElement(clazz: any, element: Element) {\n    var aggregateInfo: AggregateInfo = AggregateIntrospector.getAggregateInfo(clazz);\n    if(!aggregateInfo) {\n      var parentInfo: AggregateInfo = AggregateIntrospector.getAncestorAggregateInfo(clazz);\n      aggregateInfo = clazz.Aggregate = new AggregateInfo(AggregateIntrospector.placeholderName, clazz, parentInfo);\n    }\n    console.assert(aggregateInfo != null);\n    if(aggregateInfo) {\n      aggregateInfo.addElement(element);\n    }\n  }\n  \n  public static addHeader(clazz: any, header: Header) {\n    var aggregateInfo = AggregateIntrospector.getAggregateInfo(clazz);\n    if(!aggregateInfo) {\n      var parentInfo: AggregateInfo = AggregateIntrospector.getAncestorAggregateInfo(clazz);\n      aggregateInfo = clazz.Aggregate = new AggregateInfo(AggregateIntrospector.placeholderName, clazz, parentInfo);\n    }\n    console.assert(aggregateInfo != null);\n    if(aggregateInfo) {\n      aggregateInfo.addHeader(header);\n    }\n  }\n}\n\nLOG = LogFactory.getLog(AggregateIntrospector);\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../io/AggregateIntrospector.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../io/AggregateIntrospector'/>\n\nmodule ofx4js.meta {\n\nimport AggregateIntrospector = ofx4js.io.AggregateIntrospector;\n\nexport function Aggregate_add(clazz: Object, value: string = \"#NOT_SET#\"): void {\n  AggregateIntrospector.addAggregate(clazz, value);\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../meta/Aggregate_Add.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../io/AggregateIntrospector'/>\n///<reference path='PropertyDescriptor'/>\n\nmodule ofx4js.meta {\n\nimport AggregateIntrospector = ofx4js.io.AggregateIntrospector;\n\nexport function Element_add<Type>(clazz: any, params: ElementParams<Type>): void {\n  console.assert(params.type != null);\n  AggregateIntrospector.addElement(clazz, new Element(params));\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../meta/Element_add.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='Status'/>\n\nmodule ofx4js.domain.data.common {\n\n/**\n * @author Ryan Heaton\n */\nexport /*abstract*/ class StatusCode {\n\n  getCode(): number { throw new OFXException(\"abstract\"); }\n\n  getMessage(): string { throw new OFXException(\"abstract\"); }\n\n  getDefaultSeverity(): /*Status.*/Severity { throw new OFXException(\"abstract\"); }\n}\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/common/StatusCode.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n///<reference path='StatusCode'/>\n\nmodule ofx4js.domain.data.common {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Severity of the status.\n */\nexport enum Severity {\n  INFO,\n  WARN,\n  ERROR\n}\n\n\n/**\n * Known status codes.\n */\nexport class KnownCode extends StatusCode {\n  public static SUCCESS: KnownCode = new KnownCode(0, \"Success\", Severity.INFO);\n  public static CLIENT_UP_TO_DATE: KnownCode = new KnownCode(1, \"Client is up-to-date\", Severity.INFO);\n  public static GENERAL_ERROR: KnownCode = new KnownCode(2000, \"General error.\", Severity.ERROR);\n  public static GENERAL_ACCOUNT_ERROR: KnownCode = new KnownCode(2002, \"General account error.\", Severity.ERROR);\n  public static ACCOUNT_NOT_FOUND: KnownCode = new KnownCode(2003, \"Account not found.\", Severity.ERROR);\n  public static ACCOUNT_CLOSED: KnownCode = new KnownCode(2004, \"Account closed.\", Severity.ERROR);\n  public static ACCOUNT_NOT_AUTHORIZED: KnownCode = new KnownCode(2005, \"Account not authorized.\", Severity.ERROR);\n  public static DATE_TOO_SOON: KnownCode = new KnownCode(2014, \"Date too soon\", Severity.ERROR);\n  public static DUPLICATE_REQUEST: KnownCode = new KnownCode(2019, \"Duplicate request.\", Severity.ERROR);\n  public static UNSUPPORTED_VERSION: KnownCode = new KnownCode(2021, \"Unsupported version\", Severity.ERROR);\n  public static INVALID_TAN: KnownCode = new KnownCode(2022, \"Invalid transaction authorization number.\", Severity.ERROR);\n  public static MFA_CHALLENGE_REQUIRED: KnownCode = new KnownCode(3000, \"Further authentication required.\", Severity.ERROR);\n  public static MFA_CHALLENGE_FAILED: KnownCode = new KnownCode(3001, \"MFA failed.\", Severity.ERROR);\n  public static PASSWORD_CHANGE_REQUIRED: KnownCode = new KnownCode(15000, \"Password change required.\", Severity.INFO);\n  public static SIGNON_INVALID: KnownCode = new KnownCode(15500, \"Invalid signon\", Severity.ERROR);\n  public static CUSTOMER_ACCOUNT_IN_USE: KnownCode = new KnownCode(15501, \"Customer account in use.\", Severity.ERROR);\n  public static PASSWORD_LOCKED: KnownCode = new KnownCode(15502, \"Password locked.\", Severity.ERROR);\n  public static INVALID_CLIENT_UID: KnownCode = new KnownCode(15510, \"Invalid client UID.\", Severity.ERROR);\n  public static CONTACT_FI: KnownCode = new KnownCode(15511, \"User must contact FI.\", Severity.ERROR);\n  public static AUTHTOKEN_REQUIRED: KnownCode = new KnownCode(15512, \"Auth token required.\", Severity.ERROR);\n  public static INVALID_AUTHTOKEN: KnownCode = new KnownCode(15513, \"Invalid auth token.\", Severity.ERROR);\n  public static NO_DATA: KnownCode = new KnownCode(14701, \"No Tax Data for Account.\", Severity.ERROR);\n  public static DB_EXCEPTION: KnownCode = new KnownCode(14702,\"Database error has occured.\",Severity.ERROR);\n  public static NO_TAXSUPPORT: KnownCode = new KnownCode(14703,\"This Tax Year is not supported.\",Severity.ERROR);\n  \n  static KnownCodes: KnownCode[] = [\n    KnownCode.SUCCESS,\n    KnownCode.CLIENT_UP_TO_DATE,\n    KnownCode.GENERAL_ERROR,\n    KnownCode.GENERAL_ACCOUNT_ERROR,\n    KnownCode.ACCOUNT_NOT_FOUND,\n    KnownCode.ACCOUNT_CLOSED,\n    KnownCode.ACCOUNT_NOT_AUTHORIZED,\n    KnownCode.DATE_TOO_SOON,\n    KnownCode.DUPLICATE_REQUEST,\n    KnownCode.UNSUPPORTED_VERSION,\n    KnownCode.INVALID_TAN,\n    KnownCode.MFA_CHALLENGE_REQUIRED,\n    KnownCode.MFA_CHALLENGE_FAILED,\n    KnownCode.PASSWORD_CHANGE_REQUIRED,\n    KnownCode.SIGNON_INVALID,\n    KnownCode.CUSTOMER_ACCOUNT_IN_USE,\n    KnownCode.PASSWORD_LOCKED,\n    KnownCode.INVALID_CLIENT_UID,\n    KnownCode.CONTACT_FI,\n    KnownCode.AUTHTOKEN_REQUIRED,\n    KnownCode.INVALID_AUTHTOKEN,\n    KnownCode.NO_DATA,\n    KnownCode.DB_EXCEPTION,\n    KnownCode.NO_TAXSUPPORT,\n  ];\n\n  private code: number;\n  private message: string;\n  private defaultSeverity: Severity;\n\n  constructor(code: number, message: string, defaultSeverity: Severity) {\n    super();\n    this.code = code;\n    this.message = message;\n    this.defaultSeverity = defaultSeverity;\n  }\n\n  public getCode(): number {\n    return this.code;\n  }\n\n  public getMessage(): string {\n    return this.message;\n  }\n\n  public getDefaultSeverity(): Severity {\n    return this.defaultSeverity;\n  }\n\n  public static fromCode(code: number): KnownCode {\n    for (var i in KnownCode.KnownCodes) {\n      var value: KnownCode = KnownCode.KnownCodes[i];\n      if (value.getCode() == code) {\n        return value;\n      }\n    }\n    return null;\n  }\n\n\n  //@Override\n  public toString(): string {\n    return this.code.toString();\n  }\n}\n\n\n/**\n * Transaction status element.\n *\n * @author Ryan Heaton\n * @see \"Section 3.1.4, OFX Spec\"\n */\nexport class Status {\n\n  private code: StatusCode;\n  private severity: Severity;\n  private message: string;\n\n  constructor() {\n    this.code = KnownCode.SUCCESS;\n    this.severity = undefined;\n  }\n\n  /**\n   * Status code.\n   *\n   * @return The status code.\n   */\n  public getCode(): StatusCode {\n    return this.code;\n  }\n\n  /**\n   * Status code.\n   *\n   * @param code Status code.\n   */\n  public setCode(code: StatusCode): void {\n    this.code = code;\n    if (typeof this.severity === 'undefined') {\n      this.severity = code.getDefaultSeverity();\n    }\n  }\n\n  /**\n   * The severity.\n   *\n   * @return The severity.\n   */\n  public getSeverity(): Severity {\n    return this.severity;\n  }\n\n  /**\n   * The severity.\n   *\n   * @param severity The severity.\n   */\n  public setSeverity(severity: Severity): void {\n    this.severity = severity;\n  }\n\n  /**\n   * Server-supplied message.\n   *\n   * @return Server-supplied message.\n   */\n  public getMessage(): string {\n    return this.message;\n  }\n\n  /**\n   * Server-supplied message.\n   *\n   * @param message Server-supplied message.\n   */\n  public setMessage(message: string): void {\n    this.message = message;\n  }\n}\n\nAggregate_add( Status, \"STATUS\" );\nElement_add(Status, { name: \"CODE\", required: true, order: 0, type: StatusCode, read: Status.prototype.getCode, write: Status.prototype.setCode });\nElement_add(Status, { name: \"SEVERITY\", required: true, order: 10, type: Severity, read: Status.prototype.getSeverity, write: Status.prototype.setSeverity });\nElement_add(Status, { name: \"MESSAGE\", order: 20, type: String, read: Status.prototype.getMessage, write: Status.prototype.setMessage });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/common/Status.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='domain/data/common/Status'/>\n\nmodule ofx4js {\n\nimport Status = ofx4js.domain.data.common.Status;\n\n/**\n * Exception based on a StatusCode response\n *\n * @author Michael Mosseri\n */\nexport class OFXStatusException extends OFXException {\n\tprivate status: Status;\n\n  constructor(status: Status, message: string) {\n    super(message);\n    this.status = status;\n  }\n\n  public getStatus(): Status {\n  \treturn this.status;\n  }\n}\n\n}\n\n\n// WEBPACK FOOTER //\n// ../../OFXStatusException.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule ofx4js {\n\n/**\n * @author Ryan Heaton\n */\nexport class OFXTransactionException extends OFXException {\n  public constructor(message: string = null) {\n    super(message);\n  }\n}\n\n}\n\n\n// WEBPACK FOOTER //\n// ../../OFXTransactionException.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule ofx4js {\n\n/**\n * Thrown for unsupported OFX security type.\n *\n * @author Ryan Heaton\n */\nexport class UnsupportedOFXSecurityTypeException extends OFXException {\n  constructor(message: string) {\n    super(message);\n  }\n}\n\n}\n\n\n// WEBPACK FOOTER //\n// ../../UnsupportedOFXSecurityTypeException.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n\nmodule ofx4js.domain.data.common {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * @author Ryan Heaton\n */\nexport class BalanceInfo {\n\n  private amount: number;\n  private asOfDate: Date;\n\n  /**\n   * The amount.\n   *\n   * @return The amount.\n   */\n  public getAmount(): number {\n    return this.amount;\n  }\n\n  /**\n   * The amount.\n   *\n   * @param amount The amount.\n   */\n  public setAmount(amount: number): void {\n    this.amount = amount;\n  }\n\n  /**\n   * The as-of date.\n   *\n   * @return The as-of date.\n   */\n  public getAsOfDate(): Date {\n    return this.asOfDate;\n  }\n\n  /**\n   * The as-of date.\n   *\n   * @param asOfDate The as-of date.\n   */\n  public setAsOfDate(asOfDate: Date): void {\n    this.asOfDate = asOfDate;\n  }\n}\n\nAggregate_add( BalanceInfo );\nElement_add(BalanceInfo, { name: \"BALAMT\", required: true, order: 0, type: Number, read: BalanceInfo.prototype.getAmount, write: BalanceInfo.prototype.setAmount });\nElement_add(BalanceInfo, { name: \"DTASOF\", required: true, order: 10, type: Date, read: BalanceInfo.prototype.getAsOfDate, write: BalanceInfo.prototype.setAsOfDate });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/common/BalanceInfo.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../io/AggregateIntrospector'/>\n///<reference path='PropertyDescriptor'/>\n\nmodule ofx4js.meta {\n\nimport AggregateIntrospector = ofx4js.io.AggregateIntrospector;\n\nexport function ChildAggregate_add<Type>(clazz: any, params: ChildAggregateParams<Type>): void {\n  console.assert(params.type != null);\n  AggregateIntrospector.addChildAggregate(clazz, new ChildAggregate(params));\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../meta/ChildAggregate_add.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule ofx4js.domain.data.banking {\n\n/**\n * @author Ryan Heaton\n *\n * @see \"OFX Spec, Section 11.3.1.1\"\n */\nexport enum AccountType {\n\n  CHECKING,\n\n  SAVINGS,\n\n  MONEYMRKT,\n\n  CREDITLINE\n\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/banking/AccountType.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n///<reference path='../common/AccountDetails'/>\n///<reference path='AccountType'/>\n\nmodule ofx4js.domain.data.banking {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\nimport AccountDetails = ofx4js.domain.data.common.AccountDetails;\n\n/**\n * Base bank account details.\n *\n * @author Ryan Heaton\n * @see \"OFX Spec, Section 11.3.1\"\n */\nexport class BankAccountDetails implements AccountDetails {\n\n  private bankId: string;\n  private branchId: string;\n  private accountNumber: string;\n  private accountType: AccountType;\n  private accountKey: string;\n\n  /**\n   * The routing and transit number.\n   *\n   * @return The routing and transit number.\n   */\n  public getBankId(): string {\n    return this.bankId;\n  }\n\n  /**\n   * The routing and transit number.\n   *\n   * @param bankId The routing and transit number.\n   */\n  public setBankId(bankId: string): void {\n    this.bankId = bankId;\n  }\n\n  /**\n   * The routing and transit number.\n   *\n   * @return The routing and transit number.\n   */\n  public getRoutingNumber(): string {\n    return this.getBankId();\n  }\n\n  /**\n   * The routing and transit number.\n   *\n   * @param routingNumber The routing and transit number.\n   */\n  public setRoutingNumber(routingNumber: string): void {\n    this.setBankId(routingNumber);\n  }\n\n  /**\n   * The branch id.\n   *\n   * @return The branch id.\n   */\n  public getBranchId(): string {\n    return this.branchId;\n  }\n\n  /**\n   * The branch id.\n   *\n   * @param branchId The branch id.\n   */\n  public setBranchId(branchId: string): void {\n    this.branchId = branchId;\n  }\n\n  /**\n   * The account number.\n   *\n   * @return The account number.\n   */\n  public getAccountNumber(): string {\n    return this.accountNumber;\n  }\n\n  /**\n   * The account number.\n   *\n   * @param accountNumber The account number.\n   */\n  public setAccountNumber(accountNumber: string): void {\n    this.accountNumber = accountNumber;\n  }\n\n  /**\n   * The account type.\n   *\n   * @return The account type.\n   */\n  public getAccountType(): AccountType {\n    return this.accountType;\n  }\n\n  /**\n   * The account type.\n   *\n   * @param accountType The account type.\n   */\n  public setAccountType(accountType: AccountType): void {\n    this.accountType = accountType;\n  }\n\n  /**\n   * The account key.\n   *\n   * @return The account key.\n   */\n  public getAccountKey(): string {\n    return this.accountKey;\n  }\n\n  /**\n   * The account key.\n   *\n   * @param accountKey The account key.\n   */\n  public setAccountKey(accountKey: string): void {\n    this.accountKey = accountKey;\n  }\n}\n\nAggregate_add( BankAccountDetails );\nElement_add(BankAccountDetails, { name: \"BANKID\", required: true, order: 0, type: String, read: BankAccountDetails.prototype.getBankId, write: BankAccountDetails.prototype.setBankId });\nElement_add(BankAccountDetails, { name: \"BRANCHID\", order: 10, type: String, read: BankAccountDetails.prototype.getBranchId, write: BankAccountDetails.prototype.setBranchId });\nElement_add(BankAccountDetails, { name: \"ACCTID\", required: true, order: 20, type: String, read: BankAccountDetails.prototype.getAccountNumber, write: BankAccountDetails.prototype.setAccountNumber });\nElement_add(BankAccountDetails, { name: \"ACCTTYPE\", required: true, order: 30, type: AccountType, read: BankAccountDetails.prototype.getAccountType, write: BankAccountDetails.prototype.setAccountType });\nElement_add(BankAccountDetails, { name: \"ACCTKEY\", order: 40, type: String, read: BankAccountDetails.prototype.getAccountKey, write: BankAccountDetails.prototype.setAccountKey });\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/banking/BankAccountDetails.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n///<reference path='../common/AccountDetails'/>\n\nmodule ofx4js.domain.data.creditcard {\n\nimport Element_add = ofx4js.meta.Element_add;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport AccountDetails = ofx4js.domain.data.common.AccountDetails;\n\n/**\n * @author Ryan Heaton\n * \n * @see \"OFX Spec, Section 11.3.2\"\n */\nexport class CreditCardAccountDetails implements AccountDetails {\n\n  private accountNumber: string;\n  private accountKey: string;\n\n  /**\n   * The account number.\n   *\n   * @return The account number.\n   */\n  public getAccountNumber(): string {\n    return this.accountNumber;\n  }\n\n  /**\n   * The account number.\n   *\n   * @param accountNumber The account number.\n   */\n  public setAccountNumber(accountNumber: string): void {\n    this.accountNumber = accountNumber;\n  }\n\n  /**\n   * The account key.\n   *\n   * @return The account key.\n   */\n  public getAccountKey(): string {\n    return this.accountKey;\n  }\n\n  /**\n   * The account key.\n   *\n   * @param accountKey The account key.\n   */\n  public setAccountKey(accountKey: string): void {\n    this.accountKey = accountKey;\n  }\n}\n\nAggregate_add( CreditCardAccountDetails );\nElement_add(CreditCardAccountDetails, { name: \"ACCTID\", required: true, order: 0, type: String, read: CreditCardAccountDetails.prototype.getAccountNumber, write: CreditCardAccountDetails.prototype.setAccountNumber });\nElement_add(CreditCardAccountDetails, { name: \"ACCKEY\", order: 10, type: String, read: CreditCardAccountDetails.prototype.getAccountKey, write: CreditCardAccountDetails.prototype.setAccountKey });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/creditcard/CreditCardAccountDetails.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule ofx4js.domain.data.common {\n\n/**\n * @author Ryan Heaton\n */\nexport enum CorrectionAction {\n\n  REPLACE,\n\n  DELETE\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/common/CorrectionAction.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n\nmodule ofx4js.domain.data.common {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * @author Ryan Heaton\n * @see \"Section 5.2, OFX Spec\"\n */\nexport class Currency {\n\n  private code: string;\n  private exchangeRate: number;\n\n  constructor() {\n    this.code = \"USD\"; //java.util.Currency.getInstance(Locale.US).getCurrencyCode().toUpperCase();\n  }\n\n  /**\n   * The currency code.\n   *\n   * @return The currency code.\n   * @see java.util.Currency#getCurrencyCode()\n   */\n  public getCode(): string {\n    return this.code;\n  }\n\n  /**\n   * The currency code\n   *\n   * @param code The currency code\n   */\n  public setCode(code: string): void {\n    this.code = code;\n  }\n\n  /**\n   * The exchange rate.\n   *\n   * @return The exchange rate.\n   */\n  public getExchangeRate(): number {\n    return this.exchangeRate;\n  }\n\n  /**\n   * The exchange rate.\n   *\n   * @param exchangeRate The exchange rate.\n   */\n  public setExchangeRate(exchangeRate: number): void {\n    this.exchangeRate = exchangeRate;\n  }\n}\n\nAggregate_add( Currency, \"CURRENCY\" );\nElement_add(Currency, { name: \"CURSYM\", required: true, order: 0, type: String, read: Currency.prototype.getCode, write: Currency.prototype.setCode });\nElement_add(Currency, { name: \"CURRATE\", required: true, order: 10, type: Number, read: Currency.prototype.getExchangeRate, write: Currency.prototype.setExchangeRate });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/common/Currency.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n\nmodule ofx4js.domain.data.common {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * @author Ryan Heaton\n */\nexport class Payee {\n\n  private name: string;\n  private address1: string;\n  private address2: string;\n  private address3: string;\n  private city: string;\n  private state: string;\n  private zip: string;\n  private country: string;\n  private phone: string;\n\n  /**\n   * The name of the payee.\n   *\n   * @return The name of the payee.\n   */\n  public getName(): string {\n    return this.name;\n  }\n\n  /**\n   * The name of the payee.\n   *\n   * @param name The name of the payee.\n   */\n  public setName(name: string): void {\n    this.name = name;\n  }\n\n  /**\n   * The address of the payee.\n   *\n   * @return The address of the payee.\n   */\n  public getAddress1(): string {\n    return this.address1;\n  }\n\n  /**\n   * The address of the payee.\n   *\n   * @param address1 The address of the payee.\n   */\n  public setAddress1(address1: string): void {\n    this.address1 = address1;\n  }\n\n  /**\n   * The address of the payee.\n   *\n   * @return The address of the payee.\n   */\n  public getAddress2(): string {\n    return this.address2;\n  }\n\n  /**\n   * The address of the payee.\n   *\n   * @param address2 The address of the payee.\n   */\n  public setAddress2(address2: string): void {\n    this.address2 = address2;\n  }\n\n  /**\n   * The address of the payee.\n   *\n   * @return The address of the payee.\n   */\n  public getAddress3(): string {\n    return this.address3;\n  }\n\n  /**\n   * The address of the payee.\n   *\n   * @param address3 The address of the payee.\n   */\n  public setAddress3(address3: string): void {\n    this.address3 = address3;\n  }\n\n  /**\n   * The city of the payee.\n   *\n   * @return The city of the payee.\n   */\n  public getCity(): string {\n    return this.city;\n  }\n\n  /**\n   * The city of the payee.\n   *\n   * @param city The city of the payee.\n   */\n  public setCity(city: string): void {\n    this.city = city;\n  }\n\n  /**\n   * The state of this payee.\n   *\n   * @return The state of this payee.\n   */\n  public getState(): string {\n    return this.state;\n  }\n\n  /**\n   * The state of this payee.\n   *\n   * @param state The state of this payee.\n   */\n  public setState(state: string): void {\n    this.state = state;\n  }\n\n  /**\n   * The postal code of this payee.\n   *\n   * @return The postal code of this payee.\n   */\n  public getZip(): string {\n    return this.zip;\n  }\n\n  /**\n   * The postal code of this payee.\n   *\n   * @param zip The postal code of this payee.\n   */\n  public setZip(zip: string): void {\n    this.zip = zip;\n  }\n\n  /**\n   * The country code for this payee.\n   *\n   * @return The country code for this payee.\n   * @see java.util.Locale#getISO3Country()\n   */\n  public getCountry(): string {\n    return this.country;\n  }\n\n  /**\n   * The country code for this payee.\n   *\n   * @param country The country code for this payee.\n   */\n  public setCountry(country: string): void {\n    this.country = country;\n  }\n\n  /**\n   * The phone number.\n   *\n   * @return The phone number.\n   */\n  public getPhone(): string {\n    return this.phone;\n  }\n\n  /**\n   * The phone number.\n   *\n   * @param phone The phone number.\n   */\n  public setPhone(phone: string): void {\n    this.phone = phone;\n  }\n\n}\n\nAggregate_add( Payee, \"PAYEE\" );\nElement_add(Payee, { name: \"NAME\", order: 30, type: String, read: Payee.prototype.getName, write: Payee.prototype.setName });\nElement_add(Payee, { name: \"ADDR1\", required: true, order: 40, type: String, read: Payee.prototype.getAddress1, write: Payee.prototype.setAddress1 });\nElement_add(Payee, { name: \"ADDR2\", order: 50, type: String, read: Payee.prototype.getAddress2, write: Payee.prototype.setAddress2 });\nElement_add(Payee, { name: \"ADDR3\", order: 60, type: String, read: Payee.prototype.getAddress3, write: Payee.prototype.setAddress3 });\nElement_add(Payee, { name: \"CITY\", required: true, order: 70, type: String, read: Payee.prototype.getCity, write: Payee.prototype.setCity });\nElement_add(Payee, { name: \"STATE\", required: true, order: 80, type: String, read: Payee.prototype.getState, write: Payee.prototype.setState });\nElement_add(Payee, { name: \"POSTALCODE\", required: true, order: 90, type: String, read: Payee.prototype.getZip, write: Payee.prototype.setZip });\nElement_add(Payee, { name: \"COUNTRY\", required: true, order: 100, type: String, read: Payee.prototype.getCountry, write: Payee.prototype.setCountry });\nElement_add(Payee, { name: \"PHONE\", order: 110, type: String, read: Payee.prototype.getPhone, write: Payee.prototype.setPhone });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/common/Payee.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule ofx4js.domain.data.common {\n\n/**\n * @author Ryan Heaton\n */\nexport enum TransactionType {\n\n  /**\n   * generic credit.\n   */\n  CREDIT,\n\n  /**\n   * genertic debit.\n   */\n  DEBIT,\n\n  /**\n   * interest earned.\n   */\n  INT,\n\n  /**\n   * dividend.\n   */\n  DIV,\n\n  /**\n   * bank fee.\n   */\n  FEE,\n\n  /**\n   * service charge.\n   */\n  SRVCHG,\n\n  /**\n   * deposit.\n   */\n  DEP,\n\n  /**\n   * ATM transaction.\n   */\n  ATM,\n\n  /**\n   * point of sale\n   */\n  POS,\n\n  /**\n   * transfer\n   */\n  XFER,\n\n  /**\n   * check\n   */\n  CHECK,\n\n  /**\n   * electronic payment\n   */\n  PAYMENT,\n\n  /**\n   * cash.\n   */\n  CASH,\n\n  /**\n   * direct deposit.\n   */\n  DIRECTDEP,\n\n  /**\n   * merchant-initiated debit\n   */\n  DIRECTDEBIT,\n\n  /**\n   * repeating payment.\n   */\n  REPEATPMT,\n\n  /**\n   * other\n   */\n  OTHER\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/common/TransactionType.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../project.d.ts'/>\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../banking/BankAccountDetails'/>\n///<reference path='../creditcard/CreditCardAccountDetails'/>\n///<reference path='CorrectionAction'/>\n///<reference path='Currency'/>\n///<reference path='Payee'/>\n///<reference path='TransactionType'/>\n\nmodule ofx4js.domain.data.common {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport BankAccountDetails = ofx4js.domain.data.banking.BankAccountDetails;\nimport CreditCardAccountDetails = ofx4js.domain.data.creditcard.CreditCardAccountDetails;\n\n/**\n * @author Ryan Heaton\n */\nexport class Transaction {\n\n  private transactionType: TransactionType;\n  private datePosted: Date;\n  private dateInitiated: Date;\n  private dateAvailable: Date;\n  private amount: number;\n  private id: string;\n  private correctionId: string;\n  private correctionAction: CorrectionAction;\n  private tempId: string;\n  private checkNumber: string;\n  private referenceNumber: string;\n  private standardIndustrialCode: string;\n  private payeeId: string;\n  private name: string;\n  private payee: Payee;\n  private bankAccountTo: BankAccountDetails;\n  private creditCardAccountTo: CreditCardAccountDetails;\n  private memo: string;\n  private currency: Currency;\n  private originalCurrency: Currency;\n\n  /**\n   * The transaction type.\n   *\n   * @return The transaction type.\n   */\n  public getTransactionType(): TransactionType {\n    return this.transactionType;\n  }\n\n  /**\n   * The transaction type.\n   *\n   * @param transactionType The transaction type.\n   */\n  public setTransactionType(transactionType: TransactionType): void {\n    this.transactionType = transactionType;\n  }\n\n  /**\n   * The date the transaction was posted.\n   *\n   * @return The date the transaction was posted.\n   */\n  public getDatePosted(): Date {\n    return this.datePosted;\n  }\n\n  /**\n   * The date the transaction was posted.\n   *\n   * @param datePosted The date the transaction was posted.\n   */\n  public setDatePosted(datePosted: Date): void {\n    this.datePosted = datePosted;\n  }\n\n  /**\n   * The date the transaction was initiated.\n   *\n   * @return The date the transaction was initiated.\n   */\n  public getDateInitiated(): Date {\n    return this.dateInitiated;\n  }\n\n  /**\n   * The date the transaction was initiated.\n   *\n   * @param dateInitiated The date the transaction was initiated.\n   */\n  public setDateInitiated(dateInitiated: Date): void {\n    this.dateInitiated = dateInitiated;\n  }\n\n  /**\n   * The date the funds are available.\n   *\n   * @return The date the funds are available.\n   */\n  public getDateAvailable(): Date {\n    return this.dateAvailable;\n  }\n\n  /**\n   * The date the funds are available.\n   *\n   * @param dateAvailable The date the funds are available.\n   */\n  public setDateAvailable(dateAvailable: Date): void {\n    this.dateAvailable = dateAvailable;\n  }\n\n  /**\n   * The transaction amount.\n   *\n   * @return The transaction amount.\n   */\n  public getAmount(): number {\n    return this.amount;\n  }\n\n  /**\n   * The transaction amount.\n   *\n   * @param amount The transaction amount.\n   */\n  public setAmount(amount: number): void {\n    this.amount = amount;\n  }\n\n  /**\n   * The transaction amount.\n   *\n   * @return The transaction amount.\n   */\n  public getBigDecimalAmount(): number {\n    return this.amount;\n  }\n\n  /**\n   * The transaction amount.\n   *\n   * @param amount The transaction amount.\n   */\n  public setBigDecimalAmount(amount: number): void {\n    this.amount = amount;\n  }\n\n  /**\n   * The transaction id (server-assigned).\n   *\n   * @return The transaction id (server-assigned).\n   */\n  public getId(): string {\n    return this.id;\n  }\n\n  /**\n   * The transaction id (server-assigned).\n   *\n   * @param id The transaction id (server-assigned).\n   */\n  public setId(id: string): void {\n    this.id = id;\n  }\n\n  /**\n   * The id of the transaction that this is correcting.\n   *\n   * @return The id of the transaction that this is correcting.\n   */\n  public getCorrectionId(): string {\n    return this.correctionId;\n  }\n\n  /**\n   * The id of the transaction that this is correcting.\n   *\n   * @param correctionId The id of the transaction that this is correcting.\n   */\n  public setCorrectionId(correctionId: string): void {\n    this.correctionId = correctionId;\n  }\n\n  /**\n   * The action to take on the {@link #getCorrectionId() corrected transaction}.\n   *\n   * @return The action to take on the {@link #getCorrectionId() corrected transaction}.\n   */\n  public getCorrectionAction(): CorrectionAction {\n    return this.correctionAction;\n  }\n\n  /**\n   * The action to take on the {@link #getCorrectionId() corrected transaction}.\n   *\n   * @param correctionAction The action to take on the {@link #getCorrectionId() corrected transaction}.\n   */\n  public setCorrectionAction(correctionAction: CorrectionAction): void {\n    this.correctionAction = correctionAction;\n  }\n\n  /**\n   * The server-assigned temporary id for client-initiated transactions.\n   *\n   * @return The server-assigned temporary id for client-initiated transactions.\n   */\n  public getTempId(): string {\n    return this.tempId;\n  }\n\n  /**\n   * The server-assigned temporary id for client-initiated transactions.\n   *\n   * @param tempId The server-assigned temporary id for client-initiated transactions.\n   */\n  public setTempId(tempId: string): void {\n    this.tempId = tempId;\n  }\n\n  /**\n   * The check number.\n   *\n   * @return The check number.\n   */\n  public getCheckNumber(): string {\n    return this.checkNumber;\n  }\n\n  /**\n   * The check number.\n   *\n   * @param checkNumber The check number.\n   */\n  public setCheckNumber(checkNumber: string): void {\n    this.checkNumber = checkNumber;\n  }\n\n  /**\n   * The reference number.\n   *\n   * @return The reference number.\n   */\n  public getReferenceNumber(): string {\n    return this.referenceNumber;\n  }\n\n  /**\n   * The reference number.\n   *\n   * @param referenceNumber The reference number.\n   */\n  public setReferenceNumber(referenceNumber: string): void {\n    this.referenceNumber = referenceNumber;\n  }\n\n  /**\n   * The standard industrial code.\n   *\n   * @return The standard industrial code.\n   */\n  public getStandardIndustrialCode(): string {\n    return this.standardIndustrialCode;\n  }\n\n  /**\n   * The standard industrial code.\n   *\n   * @param standardIndustrialCode The standard industrial code.\n   */\n  public setStandardIndustrialCode(standardIndustrialCode: string): void {\n    this.standardIndustrialCode = standardIndustrialCode;\n  }\n\n  /**\n   * The payee id.\n   *\n   * @return The payee id.\n   */\n  public getPayeeId(): string {\n    return this.payeeId;\n  }\n\n  /**\n   * The payee id.\n   *\n   * @param payeeId The payee id.\n   */\n  public setPayeeId(payeeId: string): void {\n    this.payeeId = payeeId;\n  }\n\n  /**\n   * The name (description) or the transaction.\n   *\n   * @return The name (description) or the transaction.\n   */\n  public getName(): string {\n    return this.name;\n  }\n\n  /**\n   * The name (description) or the transaction.\n   *\n   * @param name The name (description) or the transaction.\n   */\n  public setName(name: string): void {\n    this.name = name;\n  }\n\n  /**\n   * The payee.\n   *\n   * @return The payee.\n   */\n  public getPayee(): Payee {\n    return this.payee;\n  }\n\n  /**\n   * The payee.\n   *\n   * @param payee The payee.\n   */\n  public setPayee(payee: Payee): void {\n    this.payee = payee;\n  }\n\n  /**\n   * The bank account the transfer was to.\n   *\n   * @return The bank account the transfer was to.\n   */\n  public getBankAccountTo(): BankAccountDetails {\n    return this.bankAccountTo;\n  }\n\n  /**\n   * The bank account the transfer was to.\n   *\n   * @param bankAccountTo The bank account the transfer was to.\n   */\n  public setBankAccountTo(bankAccountTo: BankAccountDetails): void {\n    this.bankAccountTo = bankAccountTo;\n  }\n\n  /**\n   * The credit-card account the transfer was to.\n   *\n   * @return The credit-card account the transfer was to.\n   */\n  public getCreditCardAccountTo(): CreditCardAccountDetails {\n    return this.creditCardAccountTo;\n  }\n\n  /**\n   * The credit-card account the transfer was to.\n   *\n   * @param creditCardAccountTo The credit-card account the transfer was to.\n   */\n  public setCreditCardAccountTo(creditCardAccountTo: CreditCardAccountDetails): void {\n    this.creditCardAccountTo = creditCardAccountTo;\n  }\n\n  /**\n   * Notes.\n   *\n   * @return Notes.\n   */\n  public getMemo(): string {\n    return this.memo;\n  }\n\n  /**\n   * Notes.\n   *\n   * @param memo Notes.\n   */\n  public setMemo(memo: string): void {\n    this.memo = memo;\n  }\n\n  /**\n   * The currency.\n   *\n   * @return The currency.\n   */\n  public getCurrency(): Currency {\n    return this.currency;\n  }\n\n  /**\n   * The currency.\n   *\n   * @param currency The currency.\n   */\n  public setCurrency(currency: Currency): void {\n    this.currency = currency;\n  }\n\n  /**\n   * The original currency.\n   *\n   * @return The original currency.\n   */\n  public getOriginalCurrency(): Currency {\n    return this.originalCurrency;\n  }\n\n  /**\n   * The original currency.\n   *\n   * @param originalCurrency The original currency.\n   */\n  public setOriginalCurrency(originalCurrency: Currency): void {\n    this.originalCurrency = originalCurrency;\n  }\n}\n\nAggregate_add( Transaction, \"STMTTRN\" );\nElement_add(Transaction, { name: \"TRNTYPE\", required: true, order: 0, type: TransactionType, read: Transaction.prototype.getTransactionType, write: Transaction.prototype.setTransactionType });\nElement_add(Transaction, { name: \"DTPOSTED\", required: true, order: 10, type: Date, read: Transaction.prototype.getDatePosted, write: Transaction.prototype.setDatePosted });\nElement_add(Transaction, { name: \"DTUSER\", order: 20, type: Date, read: Transaction.prototype.getDateInitiated, write: Transaction.prototype.setDateInitiated });\nElement_add(Transaction, { name: \"DTAVAIL\", order: 30, type: Date, read: Transaction.prototype.getDateAvailable, write: Transaction.prototype.setDateAvailable });\nElement_add(Transaction, { name: \"TRNAMT\", required: true, order: 40, type: Number, read: Transaction.prototype.getBigDecimalAmount, write: Transaction.prototype.setBigDecimalAmount });\nElement_add(Transaction, { name: \"FITID\", required: true, order: 50, type: String, read: Transaction.prototype.getId, write: Transaction.prototype.setId });\nElement_add(Transaction, { name: \"CORRECTFITID\", order: 60, type: String, read: Transaction.prototype.getCorrectionId, write: Transaction.prototype.setCorrectionId });\nElement_add(Transaction, { name: \"CORRECTACTION\", order: 70, type: CorrectionAction, read: Transaction.prototype.getCorrectionAction, write: Transaction.prototype.setCorrectionAction });\nElement_add(Transaction, { name: \"SRVRTID\", order: 80, type: String, read: Transaction.prototype.getTempId, write: Transaction.prototype.setTempId });\nElement_add(Transaction, { name: \"CHECKNUM\", order: 90, type: String, read: Transaction.prototype.getCheckNumber, write: Transaction.prototype.setCheckNumber });\nElement_add(Transaction, { name: \"REFNUM\", order: 100, type: String, read: Transaction.prototype.getReferenceNumber, write: Transaction.prototype.setReferenceNumber });\nElement_add(Transaction, { name: \"SIC\", order: 110, type: String, read: Transaction.prototype.getStandardIndustrialCode, write: Transaction.prototype.setStandardIndustrialCode });\nElement_add(Transaction, { name: \"PAYEEID\", order: 120, type: String, read: Transaction.prototype.getPayeeId, write: Transaction.prototype.setPayeeId });\nElement_add(Transaction, { name: \"NAME\", order: 130, type: String, read: Transaction.prototype.getName, write: Transaction.prototype.setName });\nChildAggregate_add(Transaction, { order: 140, type: Payee, read: Transaction.prototype.getPayee, write: Transaction.prototype.setPayee });\nChildAggregate_add(Transaction, { name: \"BANKACCTTO\", order: 150, type: BankAccountDetails, read: Transaction.prototype.getBankAccountTo, write: Transaction.prototype.setBankAccountTo });\nChildAggregate_add(Transaction, { name: \"CCACCTTO\", order: 160, type: CreditCardAccountDetails, read: Transaction.prototype.getCreditCardAccountTo, write: Transaction.prototype.setCreditCardAccountTo });\nElement_add(Transaction, { name: \"MEMO\", order: 170, type: String, read: Transaction.prototype.getMemo, write: Transaction.prototype.setMemo });\nChildAggregate_add(Transaction, { order: 180, type: Currency, read: Transaction.prototype.getCurrency, write: Transaction.prototype.setCurrency });\nChildAggregate_add(Transaction, { name: \"ORIGCURRENCY\", order: 190, type: Currency, read: Transaction.prototype.getOriginalCurrency, write: Transaction.prototype.setOriginalCurrency });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/common/Transaction.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='Transaction'/>\n\nmodule ofx4js.domain.data.common {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n//import java.util.Date;\n//import java.util.List;\n\n/**\n * @author Ryan Heaton\n */\nexport class TransactionList {\n\n  private start: Date;\n  private end: Date;\n  private transactions: Array<Transaction>;\n\n  /**\n   * The start date.\n   *\n   * @return The start date.\n   */\n  public getStart(): Date {\n    return this.start;\n  }\n\n  /**\n   * The start date.\n   *\n   * @param start The start date.\n   */\n  public setStart(start: Date): void {\n    this.start = start;\n  }\n\n  /**\n   * The end date.\n   *\n   * @return The end date.\n   */\n  public getEnd(): Date {\n    return this.end;\n  }\n\n  /**\n   * The end date.\n   *\n   * @param end The end date.\n   */\n  public setEnd(end: Date): void {\n    this.end = end;\n  }\n\n  /**\n   * The transaction list.\n   *\n   * @return The transaction list.\n   */\n  public getTransactions(): Array<Transaction> {\n    return this.transactions;\n  }\n\n  /**\n   * The transaction list.\n   *\n   * @param transactions The transaction list.\n   */\n  public setTransactions(transactions: Array<Transaction>): void {\n    this.transactions = transactions;\n  }\n}\n\nAggregate_add( TransactionList, \"BANKTRANLIST\" );\nElement_add(TransactionList, { name: \"DTSTART\", required: true, order: 0, type: Date, read: TransactionList.prototype.getStart, write: TransactionList.prototype.setStart });\nElement_add(TransactionList, { name: \"DTEND\", required: true, order: 10, type: Date, read: TransactionList.prototype.getEnd, write: TransactionList.prototype.setEnd });\nChildAggregate_add(TransactionList, { order: 20, type: Array, collectionEntryType: Transaction, read: TransactionList.prototype.getTransactions, write: TransactionList.prototype.setTransactions });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/common/TransactionList.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/Element_add'/>\n///<reference path='../../common/AccountDetails'/>\n\nmodule ofx4js.domain.data.investment.accounts {\n\nimport AccountDetails = ofx4js.domain.data.common.AccountDetails;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Aggregate for the details that identifity a brokerage account.\n *\n * @author Jon Perlow\n * @see \"OFX Spec, Section 13.6.1\"\n */\nexport class InvestmentAccountDetails implements AccountDetails {\n\n  private brokerId: string;\n  private accountNumber: string;\n  private accountKey: string;\n\n\n  /**\n   * Gets the broker id.\n   *\n   * @return the id of the broker\n   */\n  public getBrokerId(): string {\n    return this.brokerId;\n  }\n\n  /**\n   * Sets the broker id.\n   *\n   * @param brokerId the id of the broker\n   */\n  public setBrokerId(brokerId: string): void {\n    this.brokerId = brokerId;\n  }\n\n  /**\n   * Gets the account number.\n   *\n   * @return the account number\n   */\n  public getAccountNumber(): string {\n    return this.accountNumber;\n  }\n\n  /**\n   * Sets the account number.\n   *\n   * @param accountNumber the account number\n   */\n  public setAccountNumber(accountNumber: string): void {\n    this.accountNumber = accountNumber;\n  }\n\n  /**\n   * Gets the account key.\n   *\n   * @return the account key\n   */\n  public getAccountKey(): string {\n    return this.accountKey;\n  }\n\n  /**\n   * Sets the account key.\n   *\n   * @param accountKey the account key\n   */\n  public setAccountKey(accountKey: string): void {\n    this.accountKey = accountKey;\n  }\n}\n\nAggregate_add( InvestmentAccountDetails );\nElement_add(InvestmentAccountDetails, { name: \"BROKERID\", required: true, order: 0, type: String, read: InvestmentAccountDetails.prototype.getBrokerId, write: InvestmentAccountDetails.prototype.setBrokerId });\nElement_add(InvestmentAccountDetails, { name: \"ACCTID\", required: true, order: 20, type: String, read: InvestmentAccountDetails.prototype.getAccountNumber, write: InvestmentAccountDetails.prototype.setAccountNumber });\nElement_add(InvestmentAccountDetails, { name: \"ACCTKEY\", order: 40, type: String, read: InvestmentAccountDetails.prototype.getAccountKey, write: InvestmentAccountDetails.prototype.setAccountKey });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/accounts/InvestmentAccountDetails.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule ofx4js.domain.data.investment.accounts {\n\n/**\n * Type of investment account.\n *\n * @author Jon Perlow\n * @see \"OFX Spec, Section 13.6.2\"\n */\nexport enum AccountType {\n  INDIVIDUAL,\n  JOINT,\n  TRUST,\n  CORPORATE,\n}\n\n\nexport function AccountType_fromOfx(ofxVal: string): AccountType {\n  if (\"INDIVIDUAL\" === ofxVal) {\n    return AccountType.INDIVIDUAL;\n  } else if (\"JOINT\" === ofxVal) {\n    return AccountType.JOINT;\n  } else if (\"CORPORATE\" === ofxVal) {\n    return AccountType.CORPORATE;\n  } else if (\"CORPORATE\" === ofxVal) {\n    return AccountType.CORPORATE;\n  } else {\n    return null;\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/accounts/AccountType.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule ofx4js.domain.data.investment.accounts {\n\n/**\n * Activation status of an account.\n * @see \"Section 13.6.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum ActivationStatus {\n  ACTIVE,\n  PENDING,\n  AVAILABLE\n}\n\nexport function ActivationStatus_fromOfx(ofxVal: string): ActivationStatus {\n  if (\"ACTIVE\" === ofxVal) {\n    return ActivationStatus.ACTIVE;\n  } else if (\"PEND\" === ofxVal) {\n    return ActivationStatus.PENDING;\n  } else if (\"AVAIL\" === ofxVal) {\n    return ActivationStatus.AVAILABLE;\n  } else {\n    return null;\n  }\n}\n\n}\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/accounts/ActivationStatus.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule ofx4js.domain.data.investment.accounts {\n\n//import java.util.HashMap;\n//import java.util.Map;\n\n/**\n * @author Jon Perlow\n * @see \"OFX Spec, Section 13.6.2.1\"\n */\nexport enum UnitedStatesAccountType {\n\n  /** A 401(k) retirement account */\n  R401K,\n\n  /** A 403(B) retirement account */\n  R403B,\n\n  /** An IRA retirement account */\n  IRA,\n\n  /** Keough (money purchase/profit sharing) account */\n  KEOUGH,\n\n  /** Other account type */\n  OTHER,\n\n  /** Salary Reduction Employer Pension Plan */\n  SARSEP,\n\n  /** Savings Incentive Match Plan for Employees*/\n  SIMPLE,\n\n  /** Regular investment account */\n  NORMAL,\n\n  /** Tax Deferred Annuity */\n  TDA,\n\n  /** Trust (including UTMA) */\n  TRUST,\n\n  /** Custodial account */\n  UGMA\n}\n\ninterface OfxMappingType {\n  [key: string]: UnitedStatesAccountType;\n}\n\nvar ofxMapping: OfxMappingType = {\n  \"401K\": UnitedStatesAccountType.R401K,\n  \"403B\": UnitedStatesAccountType.R403B,\n  \"IRA\": UnitedStatesAccountType.IRA,\n  \"KEOUGH\": UnitedStatesAccountType.KEOUGH,\n  \"OTHER\": UnitedStatesAccountType.OTHER,\n  \"SARSEP\": UnitedStatesAccountType.SARSEP,\n  \"SIMPLE\": UnitedStatesAccountType.SIMPLE,\n  \"NORMAL\": UnitedStatesAccountType.NORMAL,\n  \"TDA\": UnitedStatesAccountType.TDA,\n  \"TRUST\": UnitedStatesAccountType.TRUST,\n  \"UGMA\": UnitedStatesAccountType.UGMA,\n};\n\nexport function UnitedStatesAccountType_fromOfx(ofxVal: string): UnitedStatesAccountType {\n  return ofxVal == null ? null : ofxMapping[ofxVal];\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/accounts/UnitedStatesAccountType.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../../../../meta/Element_add'/>\n///<reference path='../../common/AccountDetails'/>\n///<reference path='../../common/AccountInfo'/>\n///<reference path='AccountType'/>\n///<reference path='ActivationStatus'/>\n///<reference path='InvestmentAccountDetails'/>\n///<reference path='UnitedStatesAccountType'/>\n\nmodule ofx4js.domain.data.investment.accounts {\n\nimport AccountDetails = ofx4js.domain.data.common.AccountDetails;\nimport AccountInfo = ofx4js.domain.data.common.AccountInfo;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Aggregate for the info about a brokerage account.\n *\n * @author Jon Perlow\n * @see \"OFX Spec, Section 13.6.2\"\n */\nexport class InvestmentAccountInfo implements AccountInfo {\n\n  private investmentAccount: InvestmentAccountDetails;\n  private unitedStatesAccountType: string;\n  private supportsChecking: boolean;\n  private activationStatus: string;\n  private investmentAccountType: string;\n  private optionLevel: string;\n\n  /**\n   * Gets the investment account this information is referencing.\n   *\n   * @return the investment account this information is referencing\n   */\n  public getInvestmentAccount(): InvestmentAccountDetails {\n    return this.investmentAccount;\n  }\n\n  /**\n   * Sets the investment account this information is referencing. This is a required field\n   * according to the OFX spec.\n   *\n   * @param investmentAccount the investment account this information is referencing\n   */\n  public setInvestmentAccount(investmentAccount: InvestmentAccountDetails): void {\n    this.investmentAccount = investmentAccount;\n  }\n\n  // Inherited.\n  public getAccountDetails(): AccountDetails {\n    return this.getInvestmentAccount();\n  }\n\n  /**\n   * Gets the United States account type. This is a required field according to the OFX spec.\n   * @see \"OFX Spec, Section 13.6.1\"\n   *\n   * @return the United States account type\n   */\n  public getUnitedStatesAccountType(): string {\n    return this.unitedStatesAccountType;\n  }\n\n  /**\n   * Sets United States account type. This is a required field according to the OFX spec.\n   * @see \"OFX Spec, Section 13.6.1\"\n   *\n   * @param unitedStatesAccountType the United States account type\n   */\n  public setUnitedStatesAccountType(unitedStatesAccountType: string): void {\n    this.unitedStatesAccountType = unitedStatesAccountType;\n  }\n\n  /**\n   * Gets the United States account type as one of the well-known types.\n   *\n   * @return the account type or null if it's not one of the well-known types\n   */\n  public getUnitedStatesAccountTypeEnum(): UnitedStatesAccountType {\n    return UnitedStatesAccountType_fromOfx(this.unitedStatesAccountType);\n  }\n\n  /**\n   * Gets whether the account supports checking. This is a required field according to the OFX spec.\n   * @see \"OFX Spec, Section 13.6.1\"\n   *\n   * @return whether the account supports checking\n   */\n  public getSupportsChecking(): boolean {\n    return this.supportsChecking;\n  }\n\n  /**\n   * Sets whether the account supports checking. This is a required field according to the OFX spec.\n   * @see \"OFX Spec, Section 13.6.1\"\n   *\n   * @param supportsChecking whether the account supports checking\n   */\n  public setSupportsChecking(supportsChecking: boolean): void {\n    this.supportsChecking = supportsChecking;\n  }\n\n  /**\n   * Gets the activation status for investment statement download. This is a required field\n   * according to the OFX spec.\n   *\n   * @return the activation status\n   */\n  public getActivationStatus(): string {\n    return this.activationStatus;\n  }\n\n  /**\n   * Sets the activation status for investment statement download. This is a required field\n   * according to the OFX spec.\n   *\n   * @param activationStatus the activation status\n   */\n  public setActivationStatus(activationStatus: string): void {\n    this.activationStatus = activationStatus;\n  }\n\n  /**\n   * Gets the activation status as one of the well-known types.\n   *\n   * @return the activation status or null if it wasn't one of the well known types\n   */\n  public getActivationStatusEnum(): ActivationStatus {\n    return ActivationStatus_fromOfx(this.getActivationStatus());\n  }\n\n  /**\n   * Gets the type of investment account. One of \"INDIVIDUAL\", \"JOINT\", \"TRUST\", or \"CORPORATE\".\n   * This is an optional field according to the OFX spec.\n   *\n   * @return the type of account\n   */\n  public getInvestmentAccountType(): string {\n    return this.investmentAccountType;\n  }\n\n  /**\n   * Sets the type of investment account. One of \"INDIVIDUAL\", \"JOINT\", \"TRUST\", or \"CORPORATE\".\n   * This is an optional field according to the OFX spec.\n   *\n   * @param investmentAccountType the type of account\n   */\n  public setInvestmentAccountType(investmentAccountType: string): void {\n    this.investmentAccountType = investmentAccountType;\n  }\n\n  /**\n   * Gets the type of investment account as one of the well-known types.\n   *\n   * @return the type of investment account or null if it's not one of the well-known types\n   */\n  public getInvestmentAccountTypeEnum(): AccountType {\n    return  AccountType_fromOfx(this.getInvestmentAccountType());\n  }\n\n  /**\n   * Gets the description of option trading privileges. * This is an optional field according to\n   * the OFX spec.\n   *\n   * @return the description of option trading privileges.\n   */\n  public getOptionLevel(): string {\n    return this.optionLevel;\n  }\n\n  /**\n   * Sets the description of option trading privileges. * This is an optional field according to\n   * the OFX spec.\n   *\n   * @param optionLevel the description of option trading privileges.\n   */\n  public setOptionLevel(optionLevel: string): void {\n    this.optionLevel = optionLevel;\n  }\n}\n\nAggregate_add( InvestmentAccountInfo, \"INVACCTINFO\" );\nChildAggregate_add(InvestmentAccountInfo, { name: \"INVACCTFROM\", required: true, order: 0, type: InvestmentAccountDetails, read: InvestmentAccountInfo.prototype.getInvestmentAccount, write: InvestmentAccountInfo.prototype.setInvestmentAccount });\nElement_add(InvestmentAccountInfo, { name: \"USPRODUCTTYPE\", required: true, order: 10, type: String, read: InvestmentAccountInfo.prototype.getUnitedStatesAccountType, write: InvestmentAccountInfo.prototype.setUnitedStatesAccountType });\nElement_add(InvestmentAccountInfo, { name: \"CHECKING\", required: true, order: 20, type: Boolean, read: InvestmentAccountInfo.prototype.getSupportsChecking, write: InvestmentAccountInfo.prototype.setSupportsChecking });\nElement_add(InvestmentAccountInfo, { name: \"SVCSTATUS\", required: true, order: 30, type: String, read: InvestmentAccountInfo.prototype.getActivationStatus, write: InvestmentAccountInfo.prototype.setActivationStatus });\nElement_add(InvestmentAccountInfo, { name: \"INVACCTTYPE\", order: 40, type: String, read: InvestmentAccountInfo.prototype.getInvestmentAccountType, write: InvestmentAccountInfo.prototype.setInvestmentAccountType });\nElement_add(InvestmentAccountInfo, { name: \"OPTIONLEVEL\", order: 50, type: String, read: InvestmentAccountInfo.prototype.getOptionLevel, write: InvestmentAccountInfo.prototype.setOptionLevel });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/accounts/InvestmentAccountInfo.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule ofx4js.domain.data.common {\n\n/**\n * @author Ryan Heaton\n */\nexport enum AccountStatus {\n\n  /**\n   * Available, but not yet requested.\n   */\n  AVAIL,\n\n  /**\n   * Requested, but not yet available.\n   */\n  PEND,\n\n  /**\n   * Active.\n   */\n  ACTIVE\n\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/common/AccountStatus.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n///<reference path='../common/AccountDetails'/>\n///<reference path='../common/AccountInfo'/>\n///<reference path='../common/AccountStatus'/>\n///<reference path='BankAccountDetails'/>\n\nmodule ofx4js.domain.data.banking {\n\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport AccountStatus = ofx4js.domain.data.common.AccountStatus;\nimport AccountInfo = ofx4js.domain.data.common.AccountInfo;\nimport AccountDetails = ofx4js.domain.data.common.AccountDetails;\n\n/**\n * @author Ryan Heaton\n */\nexport class BankAccountInfo implements AccountInfo {\n\n  private bankAccount: BankAccountDetails;\n  private supportsTransactionDetailOperations: boolean;\n  private supportsTransferToOtherAccountOperations: boolean;\n  private supportsTransferFromOtherAccountOperations: boolean;\n  private status: AccountStatus;\n\n  /**\n   * The bank account this information is referencing.\n   *\n   * @return The bank account this information is referencing.\n   */\n  public getBankAccount(): BankAccountDetails {\n    return this.bankAccount;\n  }\n\n  /**\n   * The bank account this information is referencing.\n   *\n   * @param bankAccount The bank account this information is referencing.\n   */\n  public setBankAccount(bankAccount: BankAccountDetails): void {\n    this.bankAccount = bankAccount;\n  }\n\n  // Inherited.\n  public getAccountDetails(): AccountDetails {\n    return this.getBankAccount();\n  }\n\n  /**\n   * Whether this account supports download of transaction details.\n   *\n   * @return Whether this account supports download of transaction details.\n   */\n  public getSupportsTransactionDetailOperations(): boolean {\n    return this.supportsTransactionDetailOperations;\n  }\n\n  /**\n   * Whether this account supports download of transaction details.\n   *\n   * @param supportsTransactionDetailOperations Whether this account supports download of transaction details.\n   */\n  public setSupportsTransactionDetailOperations(supportsTransactionDetailOperations: boolean): void {\n    this.supportsTransactionDetailOperations = supportsTransactionDetailOperations;\n  }\n\n  /**\n   * Whether this account supports transfer operations to other accounts.\n   *\n   * @return Whether this account supports transfer operations to other accounts.\n   */\n  public getSupportsTransferToOtherAccountOperations(): boolean {\n    return this.supportsTransferToOtherAccountOperations;\n  }\n\n  /**\n   * Whether this account supports transfer operations to other accounts.\n   *\n   * @param supportsTransferToOtherAccountOperations Whether this account supports transfer operations to other accounts.\n   */\n  public setSupportsTransferToOtherAccountOperations(supportsTransferToOtherAccountOperations: boolean): void {\n    this.supportsTransferToOtherAccountOperations = supportsTransferToOtherAccountOperations;\n  }\n\n  /**\n   * Whether this account supports transfer operations from other accounts.\n   *\n   * @return Whether this account supports transfer operations from other accounts.\n   */\n  public getSupportsTransferFromOtherAccountOperations(): boolean {\n    return this.supportsTransferFromOtherAccountOperations;\n  }\n\n  /**\n   * Whether this account supports transfer operations from other accounts.\n   *\n   * @param supportsTransferFromOtherAccountOperations Whether this account supports transfer operations from other accounts.\n   */\n  public setSupportsTransferFromOtherAccountOperations(supportsTransferFromOtherAccountOperations: boolean): void {\n    this.supportsTransferFromOtherAccountOperations = supportsTransferFromOtherAccountOperations;\n  }\n\n  /**\n   * The account status.\n   *\n   * @return The account status.\n   */\n  public getStatus(): AccountStatus {\n    return this.status;\n  }\n\n  /**\n   * The account status.\n   *\n   * @param status The account status.\n   */\n  public setStatus(status: AccountStatus): void {\n    this.status = status;\n  }\n}\n\nAggregate_add( BankAccountInfo, \"BANKACCTINFO\" );\nChildAggregate_add(BankAccountInfo, { name: \"BANKACCTFROM\", required: true, order: 0, type: BankAccountDetails, read: BankAccountInfo.prototype.getBankAccount, write: BankAccountInfo.prototype.setBankAccount });\nElement_add(BankAccountInfo, { name: \"SUPTXDL\", required: true, order: 10, type: Boolean, read: BankAccountInfo.prototype.getSupportsTransactionDetailOperations, write: BankAccountInfo.prototype.setSupportsTransactionDetailOperations });\nElement_add(BankAccountInfo, { name: \"XFERSRC\", required: true, order: 20, type: Boolean, read: BankAccountInfo.prototype.getSupportsTransferToOtherAccountOperations, write: BankAccountInfo.prototype.setSupportsTransferToOtherAccountOperations });\nElement_add(BankAccountInfo, { name: \"XFERDEST\", required: true, order: 30, type: Boolean, read: BankAccountInfo.prototype.getSupportsTransferFromOtherAccountOperations, write: BankAccountInfo.prototype.setSupportsTransferFromOtherAccountOperations });\nElement_add(BankAccountInfo, { name: \"SVCSTATUS\", required: true, order: 40, type: AccountStatus, read: BankAccountInfo.prototype.getStatus, write: BankAccountInfo.prototype.setStatus });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/banking/BankAccountInfo.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n///<reference path='../common/AccountStatus'/>\n///<reference path='../common/AccountInfo'/>\n///<reference path='../common/AccountDetails'/>\n///<reference path='CreditCardAccountDetails'/>\n\nmodule ofx4js.domain.data.creditcard {\n\nimport AccountStatus = ofx4js.domain.data.common.AccountStatus;\nimport AccountInfo = ofx4js.domain.data.common.AccountInfo;\nimport AccountDetails = ofx4js.domain.data.common.AccountDetails;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * @author Ryan Heaton\n */\nexport class CreditCardAccountInfo implements AccountInfo {\n\n  private creditCardAccount: CreditCardAccountDetails;\n  private supportsTransactionDetailOperations: boolean;\n  private supportsTransferToOtherAccountOperations: boolean;\n  private supportsTransferFromOtherAccountOperations: boolean;\n  private status: AccountStatus;\n\n  /**\n   * The credit card account this information is referencing.\n   *\n   * @return The credit card account this information is referencing.\n   */\n  public getCreditCardAccount(): CreditCardAccountDetails {\n    return this.creditCardAccount;\n  }\n\n  /**\n   * The credit card account this information is referencing.\n   *\n   * @param creditCardAccount The credit card account this information is referencing.\n   */\n  public setCreditCardAccount(creditCardAccount: CreditCardAccountDetails): void {\n    this.creditCardAccount = creditCardAccount;\n  }\n\n  // Inherited.\n  public getAccountDetails(): AccountDetails {\n    return this.getCreditCardAccount();\n  }\n\n  /**\n   * Whether this account supports download of transaction details.\n   *\n   * @return Whether this account supports download of transaction details.\n   */\n  public getSupportsTransactionDetailOperations(): boolean {\n    return this.supportsTransactionDetailOperations;\n  }\n\n  /**\n   * Whether this account supports download of transaction details.\n   *\n   * @param supportsTransactionDetailOperations Whether this account supports download of transaction details.\n   */\n  public setSupportsTransactionDetailOperations(supportsTransactionDetailOperations: boolean): void {\n    this.supportsTransactionDetailOperations = supportsTransactionDetailOperations;\n  }\n\n  /**\n   * Whether this account supports transfer operations to other accounts.\n   *\n   * @return Whether this account supports transfer operations to other accounts.\n   */\n  public getSupportsTransferToOtherAccountOperations(): boolean {\n    return this.supportsTransferToOtherAccountOperations;\n  }\n\n  /**\n   * Whether this account supports transfer operations to other accounts.\n   *\n   * @param supportsTransferToOtherAccountOperations Whether this account supports transfer operations to other accounts.\n   */\n  public setSupportsTransferToOtherAccountOperations(supportsTransferToOtherAccountOperations: boolean): void {\n    this.supportsTransferToOtherAccountOperations = supportsTransferToOtherAccountOperations;\n  }\n\n  /**\n   * Whether this account supports transfer operations from other accounts.\n   *\n   * @return Whether this account supports transfer operations from other accounts.\n   */\n  public getSupportsTransferFromOtherAccountOperations(): boolean {\n    return this.supportsTransferFromOtherAccountOperations;\n  }\n\n  /**\n   * Whether this account supports transfer operations from other accounts.\n   *\n   * @param supportsTransferFromOtherAccountOperations Whether this account supports transfer operations from other accounts.\n   */\n  public setSupportsTransferFromOtherAccountOperations(supportsTransferFromOtherAccountOperations: boolean): void {\n    this.supportsTransferFromOtherAccountOperations = supportsTransferFromOtherAccountOperations;\n  }\n\n  /**\n   * The account status.\n   *\n   * @return The account status.\n   */\n  public getStatus(): AccountStatus {\n    return this.status;\n  }\n\n  /**\n   * The account status.\n   *\n   * @param status The account status.\n   */\n  public setStatus(status: AccountStatus): void {\n    this.status = status;\n  }\n}\n\nAggregate_add( CreditCardAccountInfo, \"CCACCTINFO\" );\nChildAggregate_add(CreditCardAccountInfo, { name: \"CCACCTFROM\", required: true, order: 0, type: CreditCardAccountDetails, read: CreditCardAccountInfo.prototype.getCreditCardAccount, write: CreditCardAccountInfo.prototype.setCreditCardAccount });\nElement_add(CreditCardAccountInfo, { name: \"SUPTXDL\", required: true, order: 10, type: Boolean, read: CreditCardAccountInfo.prototype.getSupportsTransactionDetailOperations, write: CreditCardAccountInfo.prototype.setSupportsTransactionDetailOperations });\nElement_add(CreditCardAccountInfo, { name: \"XFERSRC\", required: true, order: 20, type: Boolean, read: CreditCardAccountInfo.prototype.getSupportsTransferToOtherAccountOperations, write: CreditCardAccountInfo.prototype.setSupportsTransferToOtherAccountOperations });\nElement_add(CreditCardAccountInfo, { name: \"XFERDEST\", required: true, order: 30, type: Boolean, read: CreditCardAccountInfo.prototype.getSupportsTransferFromOtherAccountOperations, write: CreditCardAccountInfo.prototype.setSupportsTransferFromOtherAccountOperations });\nElement_add(CreditCardAccountInfo, { name: \"SVCSTATUS\", required: true, order: 40, type: AccountStatus, read: CreditCardAccountInfo.prototype.getStatus, write: CreditCardAccountInfo.prototype.setStatus });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/creditcard/CreditCardAccountInfo.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n///<reference path='../investment/accounts/InvestmentAccountInfo'/>\n///<reference path='../banking/BankAccountInfo'/>\n///<reference path='../creditcard/CreditCardAccountInfo'/>\n\nmodule ofx4js.domain.data.signup {\n\nimport InvestmentAccountInfo = ofx4js.domain.data.investment.accounts.InvestmentAccountInfo;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport BankAccountInfo = ofx4js.domain.data.banking.BankAccountInfo;\nimport CreditCardAccountInfo = ofx4js.domain.data.creditcard.CreditCardAccountInfo;\n\n/**\n * @author Ryan Heaton\n */\nexport class AccountProfile {\n\n  private description: string;\n  private phone: string;\n  private bankSpecifics: BankAccountInfo;\n  private creditCardSpecifics: CreditCardAccountInfo;\n  private investSpecifics: InvestmentAccountInfo;\n\n  /**\n   * Description of the account.\n   *\n   * @return The description of the account.\n   */\n  public getDescription(): string {\n    return this.description;\n  }\n\n  /**\n   * The description of the account.\n   *\n   * @param description The description of the account.\n   */\n  public setDescription(description: string): void {\n    this.description = description;\n  }\n\n  /**\n   * Phone number for the account.\n   *\n   * @return Phone number for the account.\n   */\n  public getPhone(): string {\n    return this.phone;\n  }\n\n  /**\n   * Phone number for the account.\n   *\n   * @param phone Phone number for the account.\n   */\n  public setPhone(phone: string): void {\n    this.phone = phone;\n  }\n\n  /**\n   * Account specifics.\n   *\n   * @return Account specifics.\n   */\n  public getSpecifics(): ofx4js.domain.data.common.AccountInfo {\n    if (this.getBankSpecifics() != null && this.getCreditCardSpecifics() != null) {\n      throw new OFXException(\"Only one account specifics aggregate can be set at a time.\");\n    }\n    else if (this.getBankSpecifics() != null) {\n      return this.getBankSpecifics();\n    } else if (this.getInvestmentSpecifics() != null) {\n      return this.getInvestmentSpecifics();\n    }\n    else {\n      return this.getCreditCardSpecifics();\n    }\n  }\n\n  /**\n   * Account specifics.\n   *\n   * @param specifics Account specifics.\n   */\n  public setSpecifics(specifics: ofx4js.domain.data.common.AccountInfo): void {\n    if (specifics instanceof BankAccountInfo) {\n      this.setBankSpecifics(<BankAccountInfo> specifics);\n    }\n    else if (specifics instanceof CreditCardAccountInfo) {\n      this.setCreditCardSpecifics(<CreditCardAccountInfo> specifics);\n    } else if (specifics instanceof InvestmentAccountInfo) {\n      this.setInvestmentSpecifics(<InvestmentAccountInfo> specifics);\n    }\n    else {\n      throw new OFXException(\"Unknown specifics type: \" + specifics);\n    }\n  }\n\n  /**\n   * Bank-specific info.\n   *\n   * @return Bank-specific info.\n   */\n  public getBankSpecifics(): BankAccountInfo {\n    return this.bankSpecifics;\n  }\n\n  /**\n   * Bank-specific info.\n   *\n   * @param bankSpecifics Bank-specific info.\n   */\n  public setBankSpecifics(bankSpecifics: BankAccountInfo): void {\n    this.creditCardSpecifics = null;\n    this.investSpecifics = null;\n    this.bankSpecifics = bankSpecifics;\n  }\n\n  /**\n   * Credit-card account info.\n   *\n   * @return Credit-card account info.\n   */\n  public getCreditCardSpecifics(): CreditCardAccountInfo {\n    return this.creditCardSpecifics;\n  }\n\n  /**\n   * Credit-card account info.\n   *\n   * @param creditCardSpecifics Credit-card account info.\n   */\n  public setCreditCardSpecifics(creditCardSpecifics: CreditCardAccountInfo): void {\n    this.bankSpecifics = null;\n    this.investSpecifics = null;\n    this.creditCardSpecifics = creditCardSpecifics;\n  }\n\n  /**\n   * Investment account info.\n   *\n   * @return Investment account info.\n   */\n  public getInvestmentSpecifics(): InvestmentAccountInfo {\n    return this.investSpecifics;\n  }\n\n  /**\n   * Investment account info.\n   *\n   * @param investSpecifics Investment account info.\n   */\n  public setInvestmentSpecifics(investSpecifics: InvestmentAccountInfo): void {\n    this.bankSpecifics = null;\n    this.creditCardSpecifics = null;\n    this.investSpecifics = investSpecifics;\n  }\n}\n\nAggregate_add( AccountProfile, \"ACCTINFO\" );\nElement_add(AccountProfile, { name: \"DESC\", order: 0, type: String, read: AccountProfile.prototype.getDescription, write: AccountProfile.prototype.setDescription });\nElement_add(AccountProfile, { name: \"PHONE\", order: 10, type: String, read: AccountProfile.prototype.getPhone, write: AccountProfile.prototype.setPhone });\nChildAggregate_add(AccountProfile, { order: 20, type: BankAccountInfo, read: AccountProfile.prototype.getBankSpecifics, write: AccountProfile.prototype.setBankSpecifics });\nChildAggregate_add(AccountProfile, { order: 30, type: CreditCardAccountInfo, read: AccountProfile.prototype.getCreditCardSpecifics, write: AccountProfile.prototype.setCreditCardSpecifics });\nChildAggregate_add(AccountProfile, { order: 40, type: InvestmentAccountInfo, read: AccountProfile.prototype.getInvestmentSpecifics, write: AccountProfile.prototype.setInvestmentSpecifics });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/signup/AccountProfile.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule ofx4js.domain.data.profile {\n\n/**\n * @author Ryan Heaton\n * @see \"Section 7.2.1, OFX Spec\"\n */\nexport enum SynchronizationCapability {\n\n  FULL,\n\n  LITE\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/SynchronizationCapability.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule ofx4js.domain.data {\n\n/**\n * @author Ryan Heaton\n * @see \"Section 4, OFX spec\"\n */\nexport enum ApplicationSecurity {\n\n  NONE,\n\n  TYPE1\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/ApplicationSecurity.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule ofx4js.domain.data {\n\n/**\n * The message set type, used to define message set order in the envelope.\n *\n * @author Ryan Heaton\n * @see \"Section 2.4.5.2, OFX spec\"\n */\nexport enum MessageSetType {\n\n  signon,\n\n  signup,\n\n  banking,\n\n  creditcard,\n\n  investment,\n\n  interbank_transfer,\n\n  wire_transfer,\n\n  payments,\n\n  email,\n\n  investment_security,\n\n  profile,\n\n  tax1099\n\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/MessageSetType.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule ofx4js.domain.data.profile {\n\n/**\n * @author Ryan Heaton\n * @see \"Section 7.2.2, OFX Spec\"\n */\nexport enum CharacterType {\n\n  ALPHAONLY,\n\n  NUMERICONLY,\n\n  ALPHAORNUMERIC,\n\n  ALPHAANDNUMERIC\n}\n\n}\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/CharacterType.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule ofx4js.domain.data {\n\n/**\n * A message applicable to a response message set.\n *\n * @author Ryan Heaton\n */\nexport /*abstract*/ class ResponseMessage {\n\n  /**\n   * The name of the response message.\n   *\n   * @return The name of the response message.\n   */\n  public /*abstract*/ getResponseMessageName(): string { throw new OFXException(\"abstract\"); }\n\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/ResponseMessage.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n///<reference path='../ResponseMessage'/>\n///<reference path='../../../client/AccountStatement'/>\n///<reference path='BalanceInfo'/>\n///<reference path='TransactionList'/>\n\nmodule ofx4js.domain.data.common {\n\nimport ResponseMessage = ofx4js.domain.data.ResponseMessage;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\nimport AccountStatement = ofx4js.client.AccountStatement;\n\n//import java.util.Locale;\n\n/**\n * @author Ryan Heaton\n */\nexport /*abstract*/ class StatementResponse extends ResponseMessage implements AccountStatement {\n\n  private currencyCode: string;\n  private transactionList: TransactionList;\n  private ledgerBalance: BalanceInfo;\n  private availableBalance: BalanceInfo;\n  private marketingInfo: string;\n\n  constructor() {\n    super();\n    this.currencyCode = \"USD\"; //java.util.Currency.getInstance(Locale.US).getCurrencyCode().toUpperCase();\n  }\n\n  /**\n   * The currency code.\n   *\n   * @return The currency code.\n   * @see java.util.Currency#getCurrencyCode()\n   */\n  public getCurrencyCode(): string {\n    return this.currencyCode;\n  }\n\n  /**\n   * The currency code.\n   *\n   * @param currencyCode The currency code.\n   */\n  public setCurrencyCode(currencyCode: string): void {\n    this.currencyCode = currencyCode;\n  }\n\n  /**\n   * The transaction list.\n   *\n   * @return The transaction list.\n   */\n  public getTransactionList(): TransactionList {\n    return this.transactionList;\n  }\n\n  /**\n   * The transaction list.\n   *\n   * @param transactionList The transaction list.\n   */\n  public setTransactionList(transactionList: TransactionList): void {\n    this.transactionList = transactionList;\n  }\n\n  /**\n   * The ledger balance.\n   *\n   * @return The ledger balance.\n   */\n  public getLedgerBalance(): BalanceInfo {\n    return this.ledgerBalance;\n  }\n\n  /**\n   * The ledger balance.\n   *\n   * @param ledgerBalance The ledger balance.\n   */\n  public setLedgerBalance(ledgerBalance: BalanceInfo): void {\n    this.ledgerBalance = ledgerBalance;\n  }\n\n  /**\n   * The available balance.\n   *\n   * @return The available balance.\n   */\n  public getAvailableBalance(): BalanceInfo {\n    return this.availableBalance;\n  }\n\n  /**\n   * The available balance.\n   *\n   * @param availableBalance The available balance.\n   */\n  public setAvailableBalance(availableBalance: BalanceInfo): void {\n    this.availableBalance = availableBalance;\n  }\n\n  /**\n   * Marketing information. (?)\n   *\n   * @return Marketing information.\n   */\n  public getMarketingInfo(): string {\n    return this.marketingInfo;\n  }\n\n  /**\n   * Marketing information. (?)\n   *\n   * @param marketingInfo Marketing information.\n   */\n  public setMarketingInfo(marketingInfo: string): void {\n    this.marketingInfo = marketingInfo;\n  }\n}\n\nElement_add(StatementResponse, { name: \"CURDEF\", required: true, order: 0, type: String, read: StatementResponse.prototype.getCurrencyCode, write: StatementResponse.prototype.setCurrencyCode });\nChildAggregate_add(StatementResponse, { order: 20, type: TransactionList, read: StatementResponse.prototype.getTransactionList, write: StatementResponse.prototype.setTransactionList });\nChildAggregate_add(StatementResponse, { name: \"LEDGERBAL\", order: 30, type: BalanceInfo, read: StatementResponse.prototype.getLedgerBalance, write: StatementResponse.prototype.setLedgerBalance });\nChildAggregate_add(StatementResponse, { name: \"AVAILBAL\", order: 40, type: BalanceInfo, read: StatementResponse.prototype.getAvailableBalance, write: StatementResponse.prototype.setAvailableBalance });\nElement_add(StatementResponse, { name: \"MKTGINFO\", order: 50, type: String, read: StatementResponse.prototype.getMarketingInfo, write: StatementResponse.prototype.setMarketingInfo });\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/common/StatementResponse.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule ofx4js.domain.data.investment.accounts {\n\n/**\n * Types of well-known sub-accounts.\n * @see \"Section 13.9.2.4.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum SubAccountType {\n  CASH,\n  MARGIN,\n  SHORT,\n  OTHER\n}\n\nexport function SubAccountType_fromOfx(ofxVal: string): SubAccountType {\n  if (\"CASH\" === ofxVal) {\n    return SubAccountType.CASH;\n  } else if (\"MARGIN\" === ofxVal) {\n    return SubAccountType.MARGIN;\n  } else if (\"SHORT\" === ofxVal) {\n    return SubAccountType.SHORT;\n  } else if (\"OTHER\" === ofxVal) {\n    return SubAccountType.OTHER;\n  } else {\n    return null;\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/accounts/SubAccountType.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n\nmodule ofx4js.domain.data.seclist {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Identifier for a security.\n * @see \"Section 13.8.1, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class SecurityId {\n\n  private uniqueId: string;\n  private uniqueIdType: string;\n\n  /**\n   * Gets the unique id for the security. This is a required field according to the OFX spec.\n   *\n   * @return the unique id\n   */\n  public getUniqueId(): string {\n    return this.uniqueId;\n  }\n\n  /**\n   * Sets the unique id for the security. This is a required field according to the OFX spec.\n   *\n   * @param uniqueId the unique id\n   */\n  public setUniqueId(uniqueId: string): void {\n    this.uniqueId = uniqueId;\n  }\n\n  /**\n   * Gets the type of unique id.\n   *\n   * @return the type of unique id\n   */\n  public getUniqueIdType(): string {\n    return this.uniqueIdType;\n  }\n\n  /**\n   * Sets the type of unique id.\n   *\n   * @param uniqueIdType the type of unique id\n   */\n  public setUniqueIdType(uniqueIdType: string): void {\n    this.uniqueIdType = uniqueIdType;\n  }\n}\n\nAggregate_add( SecurityId, \"SECID\" );\nElement_add(SecurityId, { name: \"UNIQUEID\", required: true, order: 10, type: String, read: SecurityId.prototype.getUniqueId, write: SecurityId.prototype.setUniqueId });\nElement_add(SecurityId, { name: \"UNIQUEIDTYPE\", required: true, order: 20, type: String, read: SecurityId.prototype.getUniqueIdType, write: SecurityId.prototype.setUniqueIdType });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/seclist/SecurityId.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../../../../meta/Element_add'/>\n///<reference path='BasePosition'/>\n\nmodule ofx4js.domain.data.investment.positions {\n\nimport SubAccountType = ofx4js.domain.data.investment.accounts.SubAccountType;\nimport SubAccountType_fromOfx = ofx4js.domain.data.investment.accounts.SubAccountType_fromOfx;\nimport SecurityId = ofx4js.domain.data.seclist.SecurityId;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Class for the investment position aggregate.\n * @see \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class InvestmentPosition {\n\n  private securityId: SecurityId;\n  private heldInAccount: string;\n  private positionType: string;\n  private units: number;\n  private unitPrice: number;\n  private marketValue: number;\n  private marketValueDate: Date;\n  private currencyCode: string;\n  private memo: string;\n  private inv401kSource: string;\n\n  /**\n   * Gets the security id for the position. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the security id for the position\n   */\n  public getSecurityId(): SecurityId {\n    return this.securityId;\n  }\n\n  /**\n   * Sets the security id for the position. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @param securityId the security id for the position\n   */\n  public setSecurityId(securityId: SecurityId): void {\n    this.securityId = securityId;\n  }\n\n  /**\n   * Gets the sub-account type. One of \"CASH\", \"MARGIN\", \"SHORT\", \"OTHER\". This is a required field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the sub-account type\n   */\n  public getHeldInAccount(): string {\n    return this.heldInAccount;\n  }\n\n  /**\n   * Sets the sub-account type. One of \"CASH\", \"MARGIN\", \"SHORT\", \"OTHER\". This is a required field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @param heldInAccount the sub-account type\n   */\n  public setHeldInAccount(heldInAccount: string): void {\n    this.heldInAccount = heldInAccount;\n  }\n\n  /**\n   * Gets the sub-account type as one of the well-known types.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the sub-account type or null if it's not one of the well-known types\n   */\n  getHeldInAccountEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getHeldInAccount());\n  }\n\n  /**\n   * Gets the position type. One of SHORT or LONG. This is a required field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the position type\n   */\n  public getPositionType(): string {\n    return this.positionType;\n  }\n\n  /**\n   * Sets the position type. One of SHORT or LONG. This is a required field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @param positionType the position type\n   */\n  public setPositionType(positionType: string): void {\n    this.positionType = positionType;\n  }\n\n  /**\n   * Gets the position type as one of the well-known types.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the position type or null if it's not one of the well-known types\n   */\n  public getPositionTypeEnum(): PositionType {\n    return PositionType_fromOfx(this.getPositionType());\n  }\n\n  /**\n   * Gets the number of units in the position. For stocks, mutual funds, and others, this\n   * is the number of shares. For bonds, this is the face value. For options, this is the number of\n   * contacts. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the number of units in the position\n   */\n  public getUnits(): number {\n    return this.units;\n  }\n\n  /**\n   * Sets the number of units in the position. For stocks, mutual funds, and others, this\n   * is the number of shares. For bonds, this is the face value. For options, this is the number of\n   * contacts. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @param units the number of units in the position\n   */\n  public setUnits(units: number): void {\n    this.units = units;\n  }\n\n  /**\n   * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n   * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n   * per contact) price. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the per unit price\n   */\n  public getUnitPrice(): number {\n    return this.unitPrice;\n  }\n\n  /**\n   * Sets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n   * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n   * per contact) price. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @param unitPrice the per unit price\n   */\n  public setUnitPrice(unitPrice: number): void {\n    this.unitPrice = unitPrice;\n  }\n\n  /**\n   * Gets the market value of this position. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the market value of the position\n   */\n  public getMarketValue(): number {\n    return this.marketValue;\n  }\n\n  /**\n   * Sets the market value of this position. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @param marketValue the market value of the position\n   */\n  public setMarketValue(marketValue: number): void {\n    this.marketValue = marketValue;\n  }\n\n  /**\n   * Gets the date and time of the unit price and market value. This is a required field according\n   * to the OFX spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the market value date\n   */\n  public getMarketValueDate(): Date {\n    return this.marketValueDate;\n  }\n\n  /**\n   * Sets the date and time of the unit price and market value. This is a required field according\n   * to the OFX spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @param marketValueDate the market value date\n   */\n  public setMarketValueDate(marketValueDate: Date): void {\n    this.marketValueDate = marketValueDate;\n  }\n\n  /**\n   * Gets the currency code of the position. This is an optional field according to the OFX spec.\n   * If not present, it's the default currency of the account.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the currency code of the position or null for the default currency\n   */\n  public getCurrencyCode(): string {\n    return this.currencyCode;\n  }\n\n  /**\n   * Sets the currency code of the position. This is an optional field according to the OFX spec.\n   * If not present, it's the default currency of the account.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @param currencyCode the currency code of the position or null for the default currency\n   */\n  public setCurrencyCode(currencyCode: string): void {\n    this.currencyCode = currencyCode;\n  }\n\n  /**\n   * Gets the memo associated with the position. This is an optional field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the memo\n   */\n  public getMemo(): string {\n    return this.memo;\n  }\n\n  /**\n   * Sets the memo associated with the position. This is an optional field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @param memo the memo\n   */\n  public setMemo(memo: string): void {\n    this.memo = memo;\n  }\n\n  /**\n   * Gets the 401K source for the sale. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the 401k source\n   */\n  public get401kSource(): string {\n    return this.inv401kSource;\n  }\n\n  /**\n   * Sets the 401K source for the sale. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param inv401kSource the 401k source\n   */\n  public set401kSource(inv401kSource: string): void {\n    this.inv401kSource = inv401kSource;\n  }\n\n  /**\n   * Gets the 401k source as one of the well-known types.\n   *\n   * @return the 401k source or null if it's not one of the well-known types\n   */\n  public get401kSourceEnum(): Inv401KSource {\n    return Inv401KSource_fromOfx(this.get401kSource());\n  }\n}\n\nAggregate_add( InvestmentPosition, \"INVPOS\" );\nChildAggregate_add(InvestmentPosition, { required: true, order: 10, type: SecurityId, read: InvestmentPosition.prototype.getSecurityId, write: InvestmentPosition.prototype.setSecurityId });\nElement_add(InvestmentPosition, { name: \"HELDINACCT\", required: true, order: 20, type: String, read: InvestmentPosition.prototype.getHeldInAccount, write: InvestmentPosition.prototype.setHeldInAccount });\nElement_add(InvestmentPosition, { name: \"POSTYPE\", required: true, order: 30, type: String, read: InvestmentPosition.prototype.getPositionType, write: InvestmentPosition.prototype.setPositionType });\nElement_add(InvestmentPosition, { name: \"UNITS\", required: true, order: 40, type: Number, read: InvestmentPosition.prototype.getUnits, write: InvestmentPosition.prototype.setUnits });\nElement_add(InvestmentPosition, { name: \"UNITPRICE\", required: true, order: 50, type: Number, read: InvestmentPosition.prototype.getUnitPrice, write: InvestmentPosition.prototype.setUnitPrice });\nElement_add(InvestmentPosition, { name: \"MKTVAL\", required: true, order: 60, type: Number, read: InvestmentPosition.prototype.getMarketValue, write: InvestmentPosition.prototype.setMarketValue });\nElement_add(InvestmentPosition, { name: \"DTPRICEASOF\", required: true, order: 70, type: Date, read: InvestmentPosition.prototype.getMarketValueDate, write: InvestmentPosition.prototype.setMarketValueDate });\nElement_add(InvestmentPosition, { name: \"CURRENCY\", order: 80, type: String, read: InvestmentPosition.prototype.getCurrencyCode, write: InvestmentPosition.prototype.setCurrencyCode });\nElement_add(InvestmentPosition, { name: \"MEMO\", order: 90, type: String, read: InvestmentPosition.prototype.getMemo, write: InvestmentPosition.prototype.setMemo });\nElement_add(InvestmentPosition, { name: \"INV401KSOURCE\", order: 100, type: String, read: InvestmentPosition.prototype.get401kSource, write: InvestmentPosition.prototype.set401kSource });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/positions/InvestmentPosition.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule ofx4js.domain.data.investment.positions {\n\n/**\n * Types of 401(k) sources.\n * @see \"Section 13.9.2.4.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum Inv401KSource {\n  PRETAX,\n  AFTER_TAX,\n  MATCH,\n  PROFIT_SHARING,\n  ROLLOVER,\n  OTHER_VEST,\n  OTHER_NONVEST\n}\n\ninterface MappingType {\n  [key: string]: Inv401KSource;\n}\n\nvar ofxMapping: MappingType = {\n  \"PRETAX\": Inv401KSource.PRETAX,\n  \"AFTERTAX\": Inv401KSource.AFTER_TAX,\n  \"MATCH\": Inv401KSource.MATCH,\n  \"PROFITSHARING\": Inv401KSource.PROFIT_SHARING,\n  \"ROLLOVER\": Inv401KSource.ROLLOVER,\n  \"OTHERVEST\": Inv401KSource.OTHER_VEST,\n  \"OTHERNONVEST\": Inv401KSource.OTHER_NONVEST,\n};\n\nexport function Inv401KSource_fromOfx(ofxVal: string): Inv401KSource {\n  return ofxVal == null ? null : ofxMapping[ofxVal];\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/positions/Inv401KSource.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule ofx4js.domain.data.investment.positions {\n\n/**\n * Type of position.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum PositionType {\n  LONG,\n  SHORT\n}\n\nexport function PositionType_fromOfx(ofxVal: string): PositionType {\n  if (\"LONG\" === ofxVal) {\n    return PositionType.LONG;\n  } else if (\"SHORT\" === ofxVal) {\n    return PositionType.SHORT;\n  } else {\n    return null;\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/positions/PositionType.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../accounts/SubAccountType'/>\n///<reference path='../../seclist/SecurityId'/>\n///<reference path='InvestmentPosition'/>\n///<reference path='Inv401KSource'/>\n///<reference path='PositionType'/>\n\nmodule ofx4js.domain.data.investment.positions {\n\nimport SubAccountType = ofx4js.domain.data.investment.accounts.SubAccountType;\nimport SubAccountType_fromOfx = ofx4js.domain.data.investment.accounts.SubAccountType_fromOfx;\nimport SecurityId = ofx4js.domain.data.seclist.SecurityId;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * Base class for the various types of positions.\n * <br>\n * This class exposes a read-only view of the flattened aggregates that are\n * common to all positions as a convenience to application\n * developers who may not find the ofx aggregation model intuitive.\n *\n * @author Jon Perlow\n */\nexport class BasePosition {\n  private investmentPosition: InvestmentPosition;\n\n  /**\n   * Gets the investment position child aggregate.\n   *\n   * @return the investment position child aggregate\n   */\n  public getInvestmentPosition(): InvestmentPosition {\n    return this.investmentPosition;\n  }\n\n  /**\n   * Sets the investment position child aggregate.\n   *\n   * @param investmentPosition the investment position child aggregate\n   */\n  public setInvestmentPosition(investmentPosition: InvestmentPosition): void {\n    this.investmentPosition = investmentPosition;\n  }\n\n  /**\n   * Gets the security id for the position. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the security id for the position\n   */\n  public getSecurityId(): SecurityId {\n    return this.getInvestmentPosition().getSecurityId();\n  }\n\n  /**\n   * Gets the sub-account type. One of \"CASH\", \"MARGIN\", \"SHORT\", \"OTHER\". This is a required field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the sub-account type\n   */\n  public getHeldInAccount(): string {\n    return this.getInvestmentPosition().getHeldInAccount();\n  }\n\n  /**\n   * Gets the sub-account type as one of the well-known types.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the sub-account type or null if it's not one of the well-known types\n   */\n  getHeldInAccountEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getHeldInAccount());\n  }\n\n  /**\n   * Gets the position type. One of SHORT or LONG. This is a required field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the position type\n   */\n  public getPositionType(): string {\n    return this.getInvestmentPosition().getPositionType();\n  }\n\n  /**\n   * Gets the position type as one of the well-known types.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the position type or null if it's not one of the well-known types\n   */\n  public getPositionTypeEnum(): PositionType {\n    return PositionType_fromOfx(this.getPositionType());\n  }\n\n  /**\n   * Gets the number of units in the position. For stocks, mutual funds, and others, this\n   * is the number of shares. For bonds, this is the face value. For options, this is the number of\n   * contacts. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the number of units in the position\n   */\n  public getUnits(): number {\n    return this.getInvestmentPosition().getUnits();\n  }\n\n  /**\n   * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n   * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n   * per contact) price. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the per unit price\n   */\n  public getUnitPrice(): number {\n    return this.getInvestmentPosition().getUnitPrice();\n  }\n\n  /**\n   * Gets the market value of this position. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the market value of the position\n   */\n  public getMarketValue(): number {\n    return this.getInvestmentPosition().getMarketValue();\n  }\n\n  /**\n   * Gets the date and time of the unit price and market value. This is a required field according\n   * to the OFX spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the market value date\n   */\n  public getMarketValueDate(): Date {\n    return this.getInvestmentPosition().getMarketValueDate();\n  }\n\n  /**\n   * Gets the currency code of the position. This is an optional field according to the OFX spec.\n   * If not present, it's the default currency of the account.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the currency code of the position or null for the default currency\n   */\n  public getCurrencyCode(): string {\n    return this.getInvestmentPosition().getCurrencyCode();\n  }\n\n  /**\n   * Gets the memo associated with the position. This is an optional field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the memo\n   */\n  public getMemo(): string {\n    return this.getInvestmentPosition().getMemo();\n  }\n\n  /**\n   * Gets the 401K source for the sale. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the 401k source\n   */\n  public get401kSource(): string {\n    return this.getInvestmentPosition().get401kSource();\n  }\n\n  /**\n   * Gets the 401k source as one of the well-known types.\n   *\n   * @return the 401k source or null if it's not one of the well-known types\n   */\n  public get401kSourceEnum(): Inv401KSource {\n    return Inv401KSource_fromOfx(this.get401kSource());\n  }\n}\n\nChildAggregate_add(BasePosition, { required: true, order: 10, type: InvestmentPosition, read: BasePosition.prototype.getInvestmentPosition, write: BasePosition.prototype.setInvestmentPosition });\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/positions/BasePosition.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='BasePosition'/>\n\nmodule ofx4js.domain.data.investment.positions {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * Aggregate for a list of invesment positions.\n * @see \"Section 13.9.2.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class InvestmentPositionList {\n  private positions: Array<BasePosition>;\n\n  /**\n   * Gets the list of positions\n   *\n   * @return the list of positions\n   */\n  public getPositions(): Array<BasePosition> {\n    return this.positions;\n  }\n\n  /**\n   * Sets the list of positions.\n   *\n   * @param positions the list of positions\n   */\n  public setPositions(positions: Array<BasePosition>): void {\n    this.positions = positions;\n  }\n}\n\nAggregate_add( InvestmentPositionList, \"INVPOSLIST\" );\nChildAggregate_add(InvestmentPositionList, { order: 10, type: Array, collectionEntryType: BasePosition, read: InvestmentPositionList.prototype.getPositions, write: InvestmentPositionList.prototype.setPositions });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/positions/InvestmentPositionList.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n\nmodule ofx4js.domain.data.seclist {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Info about a security.\n * @see \"Section 13.8.5.1, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class SecurityInfo {\n  private securityId: SecurityId;\n  private securityName: string;\n  private tickerSymbol: string;\n  private fiId: string;\n  private rating: string;\n  private unitPrice: number;\n  private marketValueDate: Date;\n  private currencyCode: string;\n  private memo: string;\n\n  /**\n   * Gets the unique security id for the security. This is a required field according to the OFX\n   * spec.\n   *\n   * @return the security id\n   */\n  public getSecurityId(): SecurityId {\n    return this.securityId;\n  }\n\n  /**\n   * Sets the unique security id for the security. This is a required field according to the OFX\n   * spec.\n   *\n   * @param securityId the security id\n   */\n  public setSecurityId(securityId: SecurityId): void {\n    this.securityId = securityId;\n  }\n\n  /**\n   * Gets the full name of the security. This is a required field according to the OFX spec.\n   *\n   * @return the full name of the security\n   */\n  public getSecurityName(): string {\n    return this.securityName;\n  }\n\n  /**\n   * Sets the full name of the security. This is a required field according to the OFX spec.\n   *\n   * @param securityName the full name of the security\n   */\n  public setSecurityName(securityName: string): void {\n    this.securityName = securityName;\n  }\n\n  /**\n   * Gets the ticker symbol for the security. This is an optional field according to the OFX spec.\n   *\n   * @return the ticket symbol or null if there's no ticker symbol\n   */\n  public getTickerSymbol(): string {\n    return this.tickerSymbol;\n  }\n\n  /**\n   * Sets the ticker symbol for the security. This is an optional field according to the OFX spec.\n   *\n   * @param tickerSymbol the ticket symbol or null if there's no ticker symbol\n   */\n  public setTickerSymbol(tickerSymbol: string): void {\n    this.tickerSymbol = tickerSymbol;\n  }\n\n  /**\n   * Gets the FI ID number for the security. This is an optional field according to the OFX spec.\n   *\n   * @return the FI ID number for the security\n   */\n  public getFiId(): string {\n    return this.fiId;\n  }\n\n  /**\n   * Sets the FI ID number for the security. This is an optional field according to the OFX spec.\n   *\n   * @param fiId the FI ID number for the security\n   */\n  public setFiId(fiId: string): void {\n    this.fiId = fiId;\n  }\n\n  /**\n   * Gets the rating of the security. This is an optional field according to the OFX spec.\n   *\n   * @return the rating\n   */\n  public getRating(): string {\n    return this.rating;\n  }\n\n  /**\n   * Sets the rating of the security. This is an optional field according to the OFX spec.\n   *\n   * @param rating the rating\n   */\n  public setRating(rating: string): void {\n    this.rating = rating;\n  }\n\n  /**\n   * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n   * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n   * per contact) price. This is a noptional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the per unit price\n   */\n  public getUnitPrice(): number {\n    return this.unitPrice;\n  }\n\n  /**\n   * Sets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n   * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n   * per contact) price. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param unitPrice the per unit price\n   */\n  public setUnitPrice(unitPrice: number): void {\n    this.unitPrice = unitPrice;\n  }\n\n  /**\n   * Gets the date as-of for the unit price. This is an optional field according to the OFX spec.\n   *\n   * @return the date as-of for the unit price\n   */\n  public getUnitPriceAsOfDate(): Date {\n    return this.marketValueDate;\n  }\n\n  /**\n   * Sets the date as-of for the unit price. This is an optional field according to the OFX spec.\n   *\n   * param marketValueDate the date as-of for the unit price\n   */\n  public setUnitPriceAsOfDate(marketValueDate: Date): void {\n    this.marketValueDate = marketValueDate;\n  }\n\n  /**\n   * Gets the overriding currency code for the security. If not set, implies the default currency.\n   * This is an optional field according to the OFX spec.\n   *\n   * @return the overriding currency code or null to mean the default currency\n   */\n  public getCurrencyCode(): string {\n    return this.currencyCode;\n  }\n\n  /**\n   * Sets the overriding currency code for the security. If not set, implies the default currency.\n   * This is an optional field according to the OFX spec.\n   *\n   * @param currencyCode the overriding currency code or null to mean the default currency\n   */\n  public setCurrencyCode(currencyCode: string): void {\n    this.currencyCode = currencyCode;\n  }\n\n  /**\n   * Gets any memo associated with the security. This is an optional field according to the OFX\n   * spec.\n   *\n   * @return the memo\n   */\n  public getMemo(): string {\n    return this.memo;\n  }\n\n  /**\n   * Sets any memo associated with the security. This is an optional field according to the OFX\n   * spec.\n   *\n   * @param memo the memo\n   */\n  public setMemo(memo: string): void {\n    this.memo = memo;\n  }\n}\n\nAggregate_add( SecurityInfo, \"SECINFO\" );\nChildAggregate_add(SecurityInfo, { required: true, order: 10, type: SecurityId, read: SecurityInfo.prototype.getSecurityId, write: SecurityInfo.prototype.setSecurityId });\nElement_add(SecurityInfo, { name: \"SECNAME\", required: true, order: 20, type: String, read: SecurityInfo.prototype.getSecurityName, write: SecurityInfo.prototype.setSecurityName });\nElement_add(SecurityInfo, { name: \"TICKER\", order: 30, type: String, read: SecurityInfo.prototype.getTickerSymbol, write: SecurityInfo.prototype.setTickerSymbol });\nElement_add(SecurityInfo, { name: \"FIID\", order: 40, type: String, read: SecurityInfo.prototype.getFiId, write: SecurityInfo.prototype.setFiId });\nElement_add(SecurityInfo, { name: \"RATING\", order: 50, type: String, read: SecurityInfo.prototype.getRating, write: SecurityInfo.prototype.setRating });\nElement_add(SecurityInfo, { name: \"UNITPRICE\", order: 60, type: Number, read: SecurityInfo.prototype.getUnitPrice, write: SecurityInfo.prototype.setUnitPrice });\nElement_add(SecurityInfo, { name: \"DTASOF\", order: 70, type: Date, read: SecurityInfo.prototype.getUnitPriceAsOfDate, write: SecurityInfo.prototype.setUnitPriceAsOfDate });\nElement_add(SecurityInfo, { name: \"CURRENCY\", order: 80, type: String, read: SecurityInfo.prototype.getCurrencyCode, write: SecurityInfo.prototype.setCurrencyCode });\nElement_add(SecurityInfo, { name: \"MEMO\", order: 90, type: String, read: SecurityInfo.prototype.getMemo, write: SecurityInfo.prototype.setMemo });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/seclist/SecurityInfo.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='SecurityInfo'/>\n///<reference path='SecurityId'/>\n\nmodule ofx4js.domain.data.seclist {\n\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * Base class for info about the various types of securities.\n * @see \"Section 13.8.5.1, OFX Spec\"\n * <br>\n * This class exposes a read-only view of the flattened aggregates that are\n * common to all security info as a convenience to application\n * developers who may not find the ofx aggregation model intuitive.\n *\n * @author Jon Perlow\n */\nexport class BaseSecurityInfo {\n  private securityInfo: SecurityInfo;\n\n  /**\n   * Gets the security info aggregate.\n   *\n   * @return the security info aggregate.\n   */\n  public getSecurityInfo(): SecurityInfo {\n    return this.securityInfo;\n  }\n\n  /**\n   * Sets the security info aggregate.\n   *\n   * @param securityInfo the security info aggregate.\n   */\n  public setSecurityInfo(securityInfo: SecurityInfo): void {\n    this.securityInfo = securityInfo;\n  }\n\n  /**\n   * Gets the unique security id for the security. This is a required field according to the OFX\n   * spec.\n   *\n   * @return the security id\n   */\n  public getSecurityId(): SecurityId {\n    return this.getSecurityInfo().getSecurityId();\n  }\n\n  /**\n   * Gets the full name of the security. This is a required field according to the OFX spec.\n   *\n   * @return the full name of the security.\n   */\n  public getSecurityName(): string {\n    return this.getSecurityInfo().getSecurityName();\n  }\n\n  /**\n   * Gets the ticker symbol for the security. This is an optional field according to the OFX spec.\n   *\n   * @return the ticket symbol or null if there's no ticker symbol\n   */\n  public getTickerSymbol(): string {\n    return this.getSecurityInfo().getTickerSymbol();\n  }\n\n  /**\n   * Gets the FI ID number for the security. This is an optional field according to the OFX spec.\n   *\n   * @return the FI ID number for the security\n   */\n  public getFiId(): string {\n    return this.getSecurityInfo().getFiId();\n  }\n\n  /**\n   * Gets the rating of the security. This is an optional field according to the OFX spec.\n   *\n   * @return the rating\n   */\n  public getRating(): string {\n    return this.getSecurityInfo().getRating();\n  }\n\n  /**\n   * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n   * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n   * per contact) price. This is a noptional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the per unit price\n   */\n  public getUnitPrice(): number {\n    return this.getSecurityInfo().getUnitPrice();\n  }\n\n  /**\n   * Gets the date as-of for the unit price. This is an optional field according to the OFX spec.\n   *\n   * @return the date as-of for the unit price\n   */\n  public getUnitPriceAsOfDate(): Date {\n    return this.getSecurityInfo().getUnitPriceAsOfDate();\n  }\n\n  /**\n   * Gets the overriding currency code for the security. If not set, implies the default currency.\n   * This is an optional field according to the OFX spec.\n   *\n   * @return the overriding currency code or null to mean the default currency\n   */\n  public getCurrencyCode(): string {\n    return this.getSecurityInfo().getCurrencyCode();\n  }\n\n  /**\n   * Gets any memo associated with the security. This is an optional field according to the OFX\n   * spec.\n   *\n   * @return the memo\n   */\n  public getMemo(): string {\n    return this.getSecurityInfo().getMemo();\n  }\n}\n\nChildAggregate_add(BaseSecurityInfo, { required: true, order: 10, type: SecurityInfo, read: BaseSecurityInfo.prototype.getSecurityInfo, write: BaseSecurityInfo.prototype.setSecurityInfo });\n}\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/seclist/BaseSecurityInfo.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n///<reference path='BaseSecurityInfo'/>\n\nmodule ofx4js.domain.data.seclist {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * Aggregate for a list of securities.\n * @see \"Section 13.8.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class SecurityList {\n  private securityInfos: Array<BaseSecurityInfo>;\n\n  public getSecurityInfos(): Array<BaseSecurityInfo> {\n    return this.securityInfos;\n  }\n\n  public setSecurityInfos(securityInfos: Array<BaseSecurityInfo>): void {\n    this.securityInfos = securityInfos;\n  }\n}\n\nAggregate_add( SecurityList, \"SECLIST\" );\nChildAggregate_add(SecurityList, { order: 10, type: Array, collectionEntryType: BaseSecurityInfo, read: SecurityList.prototype.getSecurityInfos, write: SecurityList.prototype.setSecurityInfos });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/seclist/SecurityList.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../ResponseMessage'/>\n\nmodule ofx4js.domain.data.seclist {\n\nimport ResponseMessage = ofx4js.domain.data.ResponseMessage;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * Security list response. This is an empty aggregate. The actual security information is included\n * in the \"SECLIST\" aggregate.\n * @see \"Section 13.8.3, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class SecurityListResponse extends ResponseMessage {\n  public getResponseMessageName(): string {\n    return \"security list\";\n  }\n}\n\nAggregate_add( SecurityListResponse, \"SECLISTRS\" );\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/seclist/SecurityListResponse.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule ofx4js.domain.data.investment.transactions {\n\n/**\n * Type of investment transaction.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum TransactionType {\n\n  BUY_DEBT,\n  BUY_MUTUAL_FUND,\n  BUY_OPTION,\n  BUY_OTHER,\n  BUY_STOCK,\n  CLOSE_OPTION,\n  INCOME,\n  INVESTMENT_EXPENSE,\n  JOURNAL_FUND,\n  JOURNAL_SECURITY,\n  MARGIN_INTEREST,\n  REINVEST_INCOME,\n  RETURN_OF_CAPITAL,\n  SELL_DEBT,\n  SELL_MUTUAL_FUND,\n  SELL_OPTION,\n  SELL_OTHER,\n  SELL_STOCK,\n  SPLIT,\n  TRANSFER\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/transactions/TransactionType.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='TransactionType'/>\n\nmodule ofx4js.domain.data.investment.transactions {\n\n/**\n * Base class for all investment transactions.\n * <br>\n * This class exposes a read-only view of the flattened aggregates that are\n * common to all investment transactions as a convenience to application\n * developers who may not find the ofx aggregation model intuitive.\n *\n * @author Jon Perlow\n */\nexport /*abstract*/ class BaseInvestmentTransaction {\n\n  private transactionType: TransactionType;\n\n  constructor(transactionType: TransactionType) {\n    this.transactionType = transactionType;\n  }\n\n  /**\n   * Gets the type of transaction.\n   *\n   * @return the type of transaction\n   */\n  public getTransactionType(): TransactionType {\n    return this.transactionType;\n  }\n\n  /**\n   * Gets the {@link InvestmentTransaction} aggregate.\n   *\n   * @return the {@link InvestmentTransaction} aggregate\n   */\n  public /*abstract*/ getInvestmentTransaction(): InvestmentTransaction { throw new OFXException(\"abstract\"); }\n\n  /**\n   * Gets the unique financial institution assigned transaction id. This is a\n   * required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\n   *\n   * @return the financial institution asssigned transaction id\n   */\n  public getTransactionId(): string {\n    return this.getInvestmentTransaction().getTransactionId();\n  }\n\n  /**\n   * Gets the server assigned transaction id. This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\n   *\n   * @return the server assigned transaction id\n   */\n  public getServerId(): string {\n    return this.getInvestmentTransaction().getServerId();\n  }\n\n  /**\n   * Gets the trade date of the transaction. For stock splits, this is the\n   * day of record. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\n   *\n   * @return the trade date\n   */\n  public getTradeDate(): Date {\n    return this.getInvestmentTransaction().getTradeDate();\n  }\n\n  /**\n   * Gets the settlement date of the transaction. For stock splits, this is the\n   * day of of execution. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\n   *\n   * @return the trade date\n   */\n  public getSettlementDate(): Date {\n    return this.getInvestmentTransaction().getSettlementDate();\n  }\n\n  /**\n   * For a reveral transaction, gets the financial institution assigned\n   * transaction id for the transaction being revesed.\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\n   *\n   * @return the transaction id of the transaction being reversed\n   */\n  public getReversalTransactionId(): string {\n    return this.getInvestmentTransaction().getReversalTransactionId();\n  }\n\n  /**\n   * Gets the memo associated with the transaction. This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\n   *\n   * @return the memo\n   */\n  public getMemo(): string {\n    return this.getInvestmentTransaction().getMemo();\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/transactions/BaseInvestmentTransaction.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/Element_add'/>\n\nmodule ofx4js.domain.data.investment.transactions {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Investment transaction aggregate (\"INVTRAN\").\n * @see \"Section 13.9.2.4.1, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class InvestmentTransaction {\n\n  private transactionId: string;\n  private serverId: string;\n  private tradeDate: Date;\n  private settlementDate: Date;\n  private reversalTransactionId: string;\n  private memo: string;\n\n  /**\n   * Gets the unique financial institution assigned transaction id. This is a\n   * required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\n   *\n   * @return the financial institution asssigned transaction id\n   */\n  public getTransactionId(): string {\n    return this.transactionId;\n  }\n\n  /**\n   * Sets the unique financial institution assigned transaction id. This is a\n   * required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\n   *\n   * @param transactionId the financial institution asssigned transaction id\n   */\n  public setTransactionId(transactionId: string): void {\n    this.transactionId = transactionId;\n  }\n\n  /**\n   * Gets the server assigned transaction id. This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\n   *\n   * @return the server assigned transaction id\n   */\n  public getServerId(): string {\n    return this.serverId;\n  }\n\n  /**\n   * Sets the server assigned transaction id. This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\n   *\n   * @param serverId the server assigned transaction id\n   */\n  public setServerId(serverId: string): void {\n    this.serverId = serverId;\n  }\n\n  /**\n   * Gets the trade date of the transaction. For stock splits, this is the\n   * day of record. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\n   *\n   * @return the trade date\n   */\n  public getTradeDate(): Date {\n    return this.tradeDate;\n  }\n\n  /**\n   * Sets the trade date of the transaction. For stock splits, this is the\n   * day of record. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\n   *\n   * @param tradeDate the trade date\n   */\n  public setTradeDate(tradeDate: Date): void {\n    this.tradeDate = tradeDate;\n  }\n\n  /**\n   * Gets the settlement date of the transaction. For stock splits, this is the\n   * day of of execution. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\n   *\n   * @return the trade date\n   */\n  public getSettlementDate(): Date {\n    return this.settlementDate;\n  }\n\n  /**\n   * Sets the settlement date of the transaction. For stock splits, this is the\n   * day of of execution. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\n   *\n   * @param settlementDate the trade date\n   */\n  public setSettlementDate(settlementDate: Date): void {\n    this.settlementDate = settlementDate;\n  }\n\n  /**\n   * For a reveral transaction, gets the financial institution assigned\n   * transaction id for the transaction being revesed.\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\n   *\n   * @return the transaction id of the transaction being reversed\n   */\n  public getReversalTransactionId(): string {\n    return this.reversalTransactionId;\n  }\n\n  /**\n   * For a reveral transaction, gets the financial institution assigned\n   * transaction id for the transaction being revesed.\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\n   *\n   * @param reversalTransactionId the transaction id of the transaction being reversed\n   */\n  public setReversalTransactionId(reversalTransactionId: string): void {\n    this.reversalTransactionId = reversalTransactionId;\n  }\n\n  /**\n   * Gets the memo associated with the transaction. This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\n   *\n   * @return the memo\n   */\n  public getMemo(): string {\n    return this.memo;\n  }\n\n  /**\n   * Sets the memo associated with the transaction. This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\n   *\n   * @param memo the memo\n   */\n  public setMemo(memo: string): void {\n    this.memo = memo;\n  }\n}\n\nAggregate_add( InvestmentTransaction, \"INVTRAN\" );\nElement_add(InvestmentTransaction, { name: \"FITID\", required: true, order: 0, type: String, read: InvestmentTransaction.prototype.getTransactionId, write: InvestmentTransaction.prototype.setTransactionId });\nElement_add(InvestmentTransaction, { name: \"SRVRTID\", order: 10, type: String, read: InvestmentTransaction.prototype.getServerId, write: InvestmentTransaction.prototype.setServerId });\nElement_add(InvestmentTransaction, { name: \"DTTRADE\", required: true, order: 20, type: Date, read: InvestmentTransaction.prototype.getTradeDate, write: InvestmentTransaction.prototype.setTradeDate });\nElement_add(InvestmentTransaction, { name: \"DTSETTLE\", order: 30, type: Date, read: InvestmentTransaction.prototype.getSettlementDate, write: InvestmentTransaction.prototype.setSettlementDate });\nElement_add(InvestmentTransaction, { name: \"REVERSALFITID\", order: 40, type: String, read: InvestmentTransaction.prototype.getReversalTransactionId, write: InvestmentTransaction.prototype.setReversalTransactionId });\nElement_add(InvestmentTransaction, { name: \"MEMO\", order: 50, type: String, read: InvestmentTransaction.prototype.getMemo, write: InvestmentTransaction.prototype.setMemo });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/transactions/InvestmentTransaction.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='BaseInvestmentTransaction'/>\n///<reference path='InvestmentTransaction'/>\n\nmodule ofx4js.domain.data.investment.transactions {\n\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * Base class for investment transactions that aren't buys or sales..\n * <br>\n * This class exposes a read-only view of the flattened aggregates that are\n * common to all investment transactions as a convenience to application\n * developers who may not find the ofx aggregation model intuitive.\n *\n * @author Jon Perlow\n */\nexport class BaseOtherInvestmentTransaction extends BaseInvestmentTransaction {\n\n  private investmentTransaction: InvestmentTransaction;\n\n  constructor(transactionType: TransactionType) {\n    super(transactionType);\n  }\n\n  /**\n   * Gets the {@link InvestmentTransaction} aggregate.\n   *\n   * @return the {@link InvestmentTransaction} aggregate\n   */\n  // @Override\n  public getInvestmentTransaction(): InvestmentTransaction {\n    return this.investmentTransaction;\n  }\n\n  /**\n   * Sets the {@link InvestmentTransaction} aggregate.\n   *\n   * @param investmentTransaction the {@link InvestmentTransaction} aggregate\n   */\n  public setInvestmentTransaction(investmentTransaction: InvestmentTransaction): void {\n    this.investmentTransaction = investmentTransaction;\n  }\n}\n\nChildAggregate_add(BaseOtherInvestmentTransaction, { order: 10, type: InvestmentTransaction, read: BaseOtherInvestmentTransaction.prototype.getInvestmentTransaction, write: BaseOtherInvestmentTransaction.prototype.setInvestmentTransaction });\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/transactions/BaseOtherInvestmentTransaction.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../../../../meta/Element_add'/>\n///<reference path='../../investment/accounts/SubAccountType'/>\n///<reference path='../../common/Transaction'/>\n\nmodule ofx4js.domain.data.investment.transactions {\n\nimport Transaction = ofx4js.domain.data.common.Transaction;\nimport SubAccountType = ofx4js.domain.data.investment.accounts.SubAccountType;\nimport SubAccountType_fromOfx = ofx4js.domain.data.investment.accounts.SubAccountType_fromOfx;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Bank transactions that are part of an investment account statement. Wraps a {@link Transaction}.\n * @see \"Section 13.9.2.3, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class InvestmentBankTransaction {\n\n  private transaction: Transaction;\n  private subAccountFund: string;\n\n  /**\n   * Gets the wrapped transaction aggregate.\n   * @return the wrapped transaction\n   */\n  public getTransaction(): Transaction {\n    return this.transaction;\n  }\n\n  /**\n   * Sets the wrapped transaction aggregate.\n   * @param transaction the wrapped transaction\n   */\n  public setTransaction(transaction: Transaction): void {\n    this.transaction = transaction;\n  }\n\n  /**\n   * Gets the sub account type that the security is from (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.2, OFX Spec\"\n   *\n   * @return the sub account fund for the transaction\n   */\n  public getSubAccountFund(): string {\n    return this.subAccountFund;\n  }\n\n  /**\n   * Sets the sub account type that the security is from (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.2, OFX Spec\"\n   *\n   * @param subAccountFund the sub account fund for the transaction\n   */\n  public setSubAccountFund(subAccountFund: string): void {\n    this.subAccountFund = subAccountFund;\n  }\n\n  /**\n   * Gets the result of getSubAccountFund as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types\n   */\n  public getSubAccountFundEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getSubAccountFund());\n  }\n}\n\nAggregate_add( InvestmentBankTransaction, \"INVBANKTRAN\" );\nChildAggregate_add(InvestmentBankTransaction, { order: 10, type: Transaction, read: InvestmentBankTransaction.prototype.getTransaction, write: InvestmentBankTransaction.prototype.setTransaction });\nElement_add(InvestmentBankTransaction, { name: \"SUBACCTFUND\", required: true, order: 20, type: String, read: InvestmentBankTransaction.prototype.getSubAccountFund, write: InvestmentBankTransaction.prototype.setSubAccountFund });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/transactions/InvestmentBankTransaction.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../../../../meta/Element_add'/>\n///<reference path='BaseOtherInvestmentTransaction'/>\n///<reference path='InvestmentBankTransaction'/>\n\nmodule ofx4js.domain.data.investment.transactions {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * The transaction list aggregate.\n * @see \"Section 13.9.1.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class InvestmentTransactionList {\n  private start: Date;\n  private end: Date;\n  private transactions: Array<BaseInvestmentTransaction>;\n  private bankTransactions: Array<InvestmentBankTransaction>;\n\n  /**\n   * Gets the start date. This is a required field according to the OFX spec.\n   *\n   * @return The start date\n   */\n  public getStart(): Date {\n    return this.start;\n  }\n\n  /**\n   * Sets the start date. This is a required field according to the OFX spec.\n   *\n   * @param start The start date\n   */\n  public setStart(start: Date): void {\n    this.start = start;\n  }\n\n  /**\n   * Gets the end date. This is a required field according to the OFX spec.\n   *\n   * @return he end date\n   */\n  public getEnd(): Date {\n    return this.end;\n  }\n\n  /**\n   * Sets the end date. This is a required field according to the OFX spec.\n   *\n   * @param end the end date\n   */\n  public setEnd(end: Date): void {\n    this.end = end;\n  }\n\n  /**\n   * Gets the investment transaction list. This is a heterogenous list of different types of\n   * transactions returned in the order the brokerage provides them.\n   *\n   * @return the investment transaction list\n   */\n  public getInvestmentTransactions(): Array<BaseInvestmentTransaction> {\n    return this.transactions;\n  }\n\n  /**\n   * Sets the investment transaction list. This is a heterogenous list of different types of\n   * transactions returned in the order the brokerage provides them.\n   *\n   * @param transactions the investment transaction list\n   */\n  public setInvestmentTransactions(transactions: Array<BaseInvestmentTransaction>): void {\n    this.transactions = transactions;\n  }\n\n  /**\n   * Gets the bank transaction list.\n   *\n   * @return the bank transaction list\n   */\n  public getBankTransactions(): Array<InvestmentBankTransaction> {\n    return this.bankTransactions;\n  }\n\n  /**\n   * Sets the bank transaction list.\n   *\n   * @param bankTransactions the bank transaction list\n   */\n  public setBankTransactions(bankTransactions: Array<InvestmentBankTransaction>): void {\n    this.bankTransactions = bankTransactions;\n  }\n}\n\nAggregate_add( InvestmentTransactionList, \"INVTRANLIST\" );\nElement_add(InvestmentTransactionList, { name: \"DTSTART\", required: true, order: 0, type: Date, read: InvestmentTransactionList.prototype.getStart, write: InvestmentTransactionList.prototype.setStart });\nElement_add(InvestmentTransactionList, { name: \"DTEND\", required: true, order: 10, type: Date, read: InvestmentTransactionList.prototype.getEnd, write: InvestmentTransactionList.prototype.setEnd });\nChildAggregate_add(InvestmentTransactionList, { order: 20, type: Array, collectionEntryType: BaseInvestmentTransaction, read: InvestmentTransactionList.prototype.getInvestmentTransactions, write: InvestmentTransactionList.prototype.setInvestmentTransactions });\nChildAggregate_add(InvestmentTransactionList, { order: 30, type: Array, collectionEntryType: InvestmentBankTransaction, read: InvestmentTransactionList.prototype.getBankTransactions, write: InvestmentTransactionList.prototype.setBankTransactions });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/transactions/InvestmentTransactionList.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n///<reference path='Currency'/>\n\nmodule ofx4js.domain.data.common {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\nexport enum BalanceRecordType {\n\n  DOLLAR,\n\n  PERCENT,\n\n  NUMBER\n}\n\n\n/**\n * @author Ryan Heaton\n * @see \"Section 3.1.3, OFX Spec\"\n */\nexport class BalanceRecord {\n\n  private name: string;\n  private description: string;\n  private type: BalanceRecordType;\n  private value: string;\n  private timestamp: Date;\n  private currency: Currency;\n\n  /**\n   * Name of the balance.\n   *\n   * @return Name of the balance.\n   */\n  public getName(): string {\n    return this.name;\n  }\n\n  /**\n   * Name of the balance.\n   *\n   * @param name Name of the balance.\n   */\n  public setName(name: string): void {\n    this.name = name;\n  }\n\n  /**\n   * Description of the balance.\n   *\n   * @return Description of the balance.\n   */\n  public getDescription(): string {\n    return this.description;\n  }\n\n  /**\n   * Description of the balance.\n   *\n   * @param description Description of the balance.\n   */\n  public setDescription(description: string): void {\n    this.description = description;\n  }\n\n  /**\n   * Type of the balance.\n   *\n   * @return Type of the balance.\n   */\n  public getType(): BalanceRecordType {\n    return this.type;\n  }\n\n  /**\n   * Type of the balance.\n   *\n   * @param type Type of the balance.\n   */\n  public setType(type: BalanceRecordType): void {\n    this.type = type;\n  }\n\n  /**\n   * The value of the balance.\n   *\n   * @return The value of the balance.\n   */\n  public getValue(): string {\n    return this.value;\n  }\n\n  /**\n   * The value of the balance.\n   *\n   * @param value The value of the balance.\n   */\n  public setValue(value: string): void {\n    this.value = value;\n  }\n\n  /**\n   * Timestamp of the balance.\n   *\n   * @return Timestamp of the balance.\n   */\n  public getTimestamp(): Date {\n    return this.timestamp;\n  }\n\n  /**\n   * Timestamp of the balance.\n   *\n   * @param timestamp Timestamp of the balance.\n   */\n  public setTimestamp(timestamp: Date): void {\n    this.timestamp = timestamp;\n  }\n\n  /**\n   * Currency.\n   *\n   * @return Currency.\n   */\n  public getCurrency(): Currency {\n    return this.currency;\n  }\n\n  /**\n   * Currency.\n   *\n   * @param currency Currency.\n   */\n  public setCurrency(currency: Currency): void {\n    this.currency = currency;\n  }\n}\n\nAggregate_add( BalanceRecord, \"BAL\" );\nElement_add(BalanceRecord, { name: \"NAME\", required: true, order: 0, type: String, read: BalanceRecord.prototype.getName, write: BalanceRecord.prototype.setName });\nElement_add(BalanceRecord, { name: \"DESC\", required: true, order: 10, type: String, read: BalanceRecord.prototype.getDescription, write: BalanceRecord.prototype.setDescription });\nElement_add(BalanceRecord, { name: \"BALTYPE\", required: true, order: 20, type: BalanceRecordType, read: BalanceRecord.prototype.getType, write: BalanceRecord.prototype.setType });\nElement_add(BalanceRecord, { name: \"VALUE\", required: true, order: 30, type: String, read: BalanceRecord.prototype.getValue, write: BalanceRecord.prototype.setValue });\nElement_add(BalanceRecord, { name: \"DTASOF\", order: 40, type: Date, read: BalanceRecord.prototype.getTimestamp, write: BalanceRecord.prototype.setTimestamp });\nChildAggregate_add(BalanceRecord, { order: 50, type: Currency, read: BalanceRecord.prototype.getCurrency, write: BalanceRecord.prototype.setCurrency });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/common/BalanceRecord.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../../../../meta/Element_add'/>\n///<reference path='../../common/BalanceRecord'/>\n\nmodule ofx4js.domain.data.investment.statements {\n\nimport BalanceRecord = ofx4js.domain.data.common.BalanceRecord;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * Aggregate for the investment balance list.\n * @see \"Section 13.9.2.7, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class BalanceList {\n\n  private balanceRecords: Array<BalanceRecord>;\n\n  /**\n   * Gets the list of balance records.\n   *\n   * @return the list of balance records.\n   */\n  public getBalanceRecords(): Array<BalanceRecord> {\n    return this.balanceRecords;\n  }\n\n  /**\n   * Sets the list of balance records.\n   *\n   * @param balanceRecords the list of balance records.\n   */\n  public setBalanceRecords(balanceRecords: Array<BalanceRecord>): void {\n    this.balanceRecords = balanceRecords;\n  }\n}\n\nAggregate_add( BalanceList, \"BALLIST\" );\nChildAggregate_add(BalanceList, { order: 10, type: Array, collectionEntryType: BalanceRecord, read: BalanceList.prototype.getBalanceRecords, write: BalanceList.prototype.setBalanceRecords });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/statements/BalanceList.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../../../../meta/Element_add'/>\n///<reference path='BalanceList'/>\n\nmodule ofx4js.domain.data.investment.statements {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Aggregate for the investment balance.\n * @see \"Section 13.9.2.7, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class InvestmentBalance {\n\n  private availableCash: number;\n  private marginBalance: number;\n  private shortBalance: number;\n  private buyingPower: number;\n  private balanceList: BalanceList;\n\n  /**\n   * Gets the available cash balance across all sub-accounts, including sweep funds. This is\n   * required field according to the OFX spec.\n   *\n   * @return the available cash balance\n   */\n  public getAvailableCash(): number {\n    return this.availableCash;\n  }\n\n  /**\n   * Sets the available cash balance across all sub-accounts, including sweep funds. This is\n   * required field according to the OFX spec.\n   *\n   * @param availableCash the available cash balance\n   */\n  public setAvailableCash(availableCash: number): void {\n    this.availableCash = availableCash;\n  }\n\n  /**\n   * Gets the margin account balance. A positive balance indicates a positive cash balance, while\n   * a negative balance indicates the customer borrowed funds. This is a required field according\n   * to the OFX spec.\n   *\n   * @return the margin account balance\n   */\n  public getMarginBalance(): number {\n    return this.marginBalance;\n  }\n\n  /**\n   * Sets the margin account balance. A positive balance indicates a positive cash balance, while\n   * a negative balance indicates the customer borrowed funds. This is a required field according\n   * to the OFX spec.\n   *\n   * @param marginBalance the margin account balance\n   */\n  public setMarginBalance(marginBalance: number): void {\n    this.marginBalance = marginBalance;\n  }\n\n  /**\n   * Gets the market value of all short positions. This is a positive balance. This is a required\n   * field according to the OFX spec.\n   *\n   * @return the market value of all short positions\n   */\n  public getShortBalance(): number {\n    return this.shortBalance;\n  }\n\n  /**\n   * Sets the market value of all short positions. This is a positive balance. This is a required\n   * field according to the OFX spec.\n   *\n   * @param shortBalance the market value of all short positions\n   */\n  public setShortBalance(shortBalance: number): void {\n    this.shortBalance = shortBalance;\n  }\n\n  /**\n   * Gets the buying power amount. This is an optional field according to the OFX spec.\n   *\n   * @return the buying power\n   */\n  public getBuyingPower(): number {\n    return this.buyingPower;\n  }\n\n  /**\n   * Sets the buying power amount. This is an optional field according to the OFX spec.\n   *\n   * @param buyingPower the buying power\n   */\n  public setBuyingPower(buyingPower: number): void {\n    this.buyingPower = buyingPower;\n  }\n\n  /**\n   * Gets the investment balance list. This is an optional field according to the OFX spec.\n   *\n   * @return the investment balance list\n   */\n  public getBalanceList(): BalanceList {\n    return this.balanceList;\n  }\n\n  /**\n   * Sets the investment balance list. This is an optional field according to the OFX spec.\n   *\n   * @param balanceList the investment balance list\n   */\n  public setBalanceList(balanceList: BalanceList): void {\n    this.balanceList = balanceList;\n  }\n}\n\nAggregate_add(InvestmentBalance, \"INVBAL\");\nElement_add(InvestmentBalance, { name: \"AVAILCASH\", required: true, order: 10, type: Number, read: InvestmentBalance.prototype.getAvailableCash, write: InvestmentBalance.prototype.setAvailableCash });\nElement_add(InvestmentBalance, { name: \"MARGINBALANCE\", required: true, order: 20, type: Number, read: InvestmentBalance.prototype.getMarginBalance, write: InvestmentBalance.prototype.setMarginBalance });\nElement_add(InvestmentBalance, { name: \"SHORTBALANCE\", required: true, order: 30, type: Number, read: InvestmentBalance.prototype.getShortBalance, write: InvestmentBalance.prototype.setShortBalance });\nElement_add(InvestmentBalance, { name: \"BUYPOWER\", order: 40, type: Number, read: InvestmentBalance.prototype.getBuyingPower, write: InvestmentBalance.prototype.setBuyingPower });\nChildAggregate_add(InvestmentBalance, { order: 50, type: BalanceList, read: InvestmentBalance.prototype.getBalanceList, write: InvestmentBalance.prototype.setBalanceList });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/statements/InvestmentBalance.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../../../../meta/Element_add'/>\n///<reference path='../../common/StatementResponse'/>\n///<reference path='../../investment/accounts/InvestmentAccountDetails'/>\n///<reference path='../../investment/positions/InvestmentPositionList'/>\n///<reference path='../../seclist/SecurityList'/>\n///<reference path='../../seclist/SecurityListResponse'/>\n///<reference path='../../investment/transactions/InvestmentTransactionList'/>\n///<reference path='InvestmentBalance'/>\n\nmodule ofx4js.domain.data.investment.statements {\n\nimport StatementResponse = ofx4js.domain.data.common.StatementResponse;\nimport InvestmentAccountDetails = ofx4js.domain.data.investment.accounts.InvestmentAccountDetails;\nimport InvestmentPositionList = ofx4js.domain.data.investment.positions.InvestmentPositionList;\nimport SecurityList = ofx4js.domain.data.seclist.SecurityList;\nimport SecurityListResponse = ofx4js.domain.data.seclist.SecurityListResponse;\nimport InvestmentTransactionList = ofx4js.domain.data.investment.transactions.InvestmentTransactionList;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Aggregate for the investment statement download response.\n * @see \"Section 13.9.2.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class InvestmentStatementResponse extends StatementResponse {\n\n  private dateOfStatement: Date;\n  private account: InvestmentAccountDetails;\n  private investmentTransactionList: InvestmentTransactionList;\n  private positionList: InvestmentPositionList;\n  private accountBalance: InvestmentBalance;\n\n  // This is not actually technically part of the INVSTMTRS, but according to Section 13.8.4,\n  // OFX spec, this aggregate can appear in a statement response as part of the SECLISTMSGSRQV1\n  // message set even when it wasn't requested. We include it here to make it accessible as part of\n  // the AccountStatement\n  private securityList: SecurityList;\n\n  /**\n   * Gets the name of the response message.\n   *\n   * @return the name of the response message\n   */\n  //@Override\n  public getResponseMessageName(): string {\n    return \"investment statement\";\n  }\n\n  /**\n   * Gets the date and time for the statement download. This is a required field according to the\n   * OFX spec.\n   *\n   * @return the date and time for the statement download\n   */\n  public getDateOfStatement(): Date {\n    return this.dateOfStatement;\n  }\n\n  /**\n   * Sets the date and time for the statement download. This is a required field according to the\n   * OFX spec.\n   *\n   * @param dateOfStatement the date and time for the statement download\n   */\n  public setDateOfStatement(dateOfStatement: Date): void {\n    this.dateOfStatement = dateOfStatement;\n  }\n\n  /**\n   * Gets the account for the statement. This is a required field according to the OFX spec.\n   *\n   * @return the account for the statement\n   */\n  public getAccount(): InvestmentAccountDetails {\n    return this.account;\n  }\n\n  /**\n   * Sets the account for the statement. This is a required field according to the OFX spec.\n   *\n   * @param account the account for the statement\n   */\n  public setAccount(account: InvestmentAccountDetails): void {\n    this.account = account;\n  }\n\n  /**\n   * Gets the transaction list aggregate. This is an optional field according to the OFX spec.\n   *\n   * @return the transaction list aggregate\n   */\n  public getInvestmentTransactionList(): InvestmentTransactionList {\n    return this.investmentTransactionList;\n  }\n\n  /**\n   * Sets the transaction list aggregate. This is an optional field according to the OFX spec.\n   *\n   * @param transactionList the transaction list aggregate\n   */\n  public setInvestmentTransactionList(transactionList: InvestmentTransactionList): void {\n    this.investmentTransactionList = transactionList;\n  }\n\n  /**\n   * Gets the position list aggreate. This is an optional field according to the OFX spec.\n   *\n   * @return the position list aggregate\n   */\n  public getPositionList(): InvestmentPositionList {\n    return this.positionList;\n  }\n\n  /**\n   * Sets the position list aggreate. This is an optional field according to the OFX spec.\n   *\n   * @param positionList the position list aggregate\n   */\n  public setPositionList(positionList: InvestmentPositionList): void {\n    this.positionList = positionList;\n  }\n\n  /**\n   * Gets the account balance. This is an optional field according to the OFX spec.\n   *\n   * @return the account balance\n   */\n  public getAccountBalance(): InvestmentBalance {\n    return this.accountBalance;\n  }\n\n  /**\n   * Sets the account balance. This is an optional field according to the OFX spec.\n   *\n   * @param accountBalance the account balance\n   */\n  public setAccountBalance(accountBalance: InvestmentBalance): void {\n    this.accountBalance = accountBalance;\n  }\n\n  /**\n   * Gets the security list aggregate.\n   * <br>\n   * This is not actually technically part of the investment statement responsr aggregate, but\n   * according to Section 13.8.4, OFX spec, this aggregate can appear the overall response and\n   * we provide it here for convenience.\n   *\n   * @return the security list aggregate\n   */\n  public getSecurityList(): SecurityList {\n    return this.securityList;\n  }\n\n  /**\n   * Sets the security list aggregate.\n   * <br>\n   * This is not actually technically part of the investment statement responsr aggregate, but\n   * according to Section 13.8.4, OFX spec, this aggregate can appear the overall response and\n   * we provide it here for convenience.\n   *\n   * @param securityList the security list aggregate\n   */\n  public setSecurityList(securityList: SecurityList): void {\n    this.securityList = securityList;\n  }\n}\n\nAggregate_add(InvestmentStatementResponse, \"INVSTMTRS\");\nElement_add(InvestmentStatementResponse, { name: \"DTASOF\", required: true, order: 60, type: Date, read: InvestmentStatementResponse.prototype.getDateOfStatement, write: InvestmentStatementResponse.prototype.setDateOfStatement });\nChildAggregate_add(InvestmentStatementResponse, { name:\"INVACCTFROM\", required: true, order: 10, type: InvestmentAccountDetails, read: InvestmentStatementResponse.prototype.getAccount, write: InvestmentStatementResponse.prototype.setAccount });\nChildAggregate_add(InvestmentStatementResponse, { order: 70, type: InvestmentTransactionList, read: InvestmentStatementResponse.prototype.getInvestmentTransactionList, write: InvestmentStatementResponse.prototype.setInvestmentTransactionList });\nChildAggregate_add(InvestmentStatementResponse, { order: 80, type: InvestmentPositionList, read: InvestmentStatementResponse.prototype.getPositionList, write: InvestmentStatementResponse.prototype.setPositionList });\nChildAggregate_add(InvestmentStatementResponse, { order: 90, type: InvestmentBalance, read: InvestmentStatementResponse.prototype.getAccountBalance, write: InvestmentStatementResponse.prototype.setAccountBalance });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/statements/InvestmentStatementResponse.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n///<reference path='SecurityId'/>\n\nmodule ofx4js.domain.data.seclist {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Security request aggregate.\n * @see \"Section 13.8.2.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class SecurityRequest {\n\n  private securityId: SecurityId;\n  private tickerSymbol: string;\n  private fiId: string;\n\n  public getSecurityId(): SecurityId {\n    return this.securityId;\n  }\n\n  public setSecurityId(securityId: SecurityId): void {\n    this.securityId = securityId;\n    this.tickerSymbol = null;\n    this.fiId = null;\n  }\n\n  public getTickerSymbol(): string {\n    return this.tickerSymbol;\n  }\n\n  public setTickerSymbol(tickerSymbol: string): void {\n    this.tickerSymbol = tickerSymbol;\n    this.securityId = null;\n    this.fiId = null;\n  }\n\n  public getFiId(): string {\n    return this.fiId;\n  }\n\n  public setFiId(fiId: string): void {\n    this.fiId = fiId;\n    this.securityId = null;\n    this.tickerSymbol = null;\n  }\n}\n\nAggregate_add(SecurityRequest, \"SECRQ\");\nElement_add(SecurityRequest, { name: \"SECID\", order: 10, type: SecurityId, read: SecurityRequest.prototype.getSecurityId, write: SecurityRequest.prototype.setSecurityId });\nElement_add(SecurityRequest, { name: \"TICKER\", order: 20, type: String, read: SecurityRequest.prototype.getTickerSymbol, write: SecurityRequest.prototype.setTickerSymbol });\nElement_add(SecurityRequest, { name: \"FIID\", order: 30, type: String, read: SecurityRequest.prototype.getFiId, write: SecurityRequest.prototype.setFiId });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/seclist/SecurityRequest.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../OFXException'/>\n\nmodule ofx4js.client {\n\nimport OFXException = ofx4js.OFXException;\n\n/**\n * @author Ryan Heaton\n */\nexport class NoOFXResponseException extends OFXException {\n\n  public constructor(message: string = null) {\n    super(message);\n  }\n}\n\n}\n\n\n// WEBPACK FOOTER //\n// ../../client/NoOFXResponseException.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='OFXApplicationContext'/>\n\nmodule ofx4js.client.context {\n\n/**\n * Default application context.\n *\n * @author Ryan Heaton\n */\nexport class DefaultApplicationContext implements OFXApplicationContext {\n\n  private appId: string;\n  private appVersion: string;\n\n  constructor(appId: string, appVersion: string) {\n    this.appId = appId;\n    this.appVersion = appVersion;\n  }\n\n  public getAppId(): string {\n    return this.appId;\n  }\n\n  public getAppVersion(): string {\n    return this.appVersion;\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../client/context/DefaultApplicationContext.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='OFXApplicationContext'/>\n///<reference path='DefaultApplicationContext'/>\n\nmodule ofx4js.client.context {\n\n/**\n * @author Ryan Heaton\n */\nexport class OFXApplicationContextHolder {\n\n  private static CURRENT_CONTEXT: OFXApplicationContext = new DefaultApplicationContext(\"Money\", \"1600\"); //some apps fail unless you're Quicken or Money...\n\n  /**\n   * Get the current (thread-safe) context.\n   *\n   * @return The thread-safe context.\n   */\n  public static getCurrentContext(): OFXApplicationContext {\n    //todo: implement a strategy (perhaps for thread-local access or something)?\n    return this.CURRENT_CONTEXT;\n  }\n\n  /**\n   * Set the current context.\n   *\n   * @param context The context.\n   */\n  public static setCurrentContext(context: OFXApplicationContext): void {\n    this.CURRENT_CONTEXT = context;\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../client/context/OFXApplicationContextHolder.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule ofx4js.domain.data {\n\n/**\n * A message applicable to a request message set.\n *\n * @author Ryan Heaton\n */\nexport /*abstract*/ class RequestMessage {\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/RequestMessage.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n\nmodule ofx4js.domain.data.common {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * @author Ryan Heaton\n */\nexport class StatementRange {\n\n  private start: Date;\n  private end: Date;\n  private includeTransactions: boolean;\n\n  constructor() {\n    this.includeTransactions = true;\n  }\n\n  /**\n   * The start of the statement range.\n   *\n   * @return The start of the statement range.\n   */\n  public getStart(): Date {\n    return this.start;\n  }\n\n  /**\n   * The start of the statement range.\n   *\n   * @param start The start of the statement range.\n   */\n  public setStart(start: Date): void {\n    this.start = start;\n  }\n\n  /**\n   * The end of the statement range.\n   *\n   * @return The end of the statement range.\n   */\n  public getEnd(): Date {\n    return this.end;\n  }\n\n  /**\n   * The end of the statement range.\n   *\n   * @param end The end of the statement range.\n   */\n  public setEnd(end: Date): void {\n    this.end = end;\n  }\n\n  /**\n   * Whether to include transactions.\n   *\n   * @return Whether to include transactions.\n   */\n  public getIncludeTransactions(): boolean {\n    return this.includeTransactions;\n  }\n\n  /**\n   * Whether to include transactions.\n   *\n   * @param includeTransactions Whether to include transactions.\n   */\n  public setIncludeTransactions(includeTransactions: boolean): void {\n    this.includeTransactions = includeTransactions;\n  }\n}\n\nAggregate_add( StatementRange, \"INCTRAN\" );\nElement_add(StatementRange, { name: \"DTSTART\", order: 0, type: Date, read: StatementRange.prototype.getStart, write: StatementRange.prototype.setStart });\nElement_add(StatementRange, { name: \"DTEND\", order: 10, type: Date, read: StatementRange.prototype.getEnd, write: StatementRange.prototype.setEnd });\nElement_add(StatementRange, { name: \"INCLUDE\", required: true, order: 20, type: Boolean, read: StatementRange.prototype.getIncludeTransactions, write: StatementRange.prototype.setIncludeTransactions });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/common/StatementRange.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../RequestMessage'/>\n///<reference path='StatementRange'/>\n\nmodule ofx4js.domain.data.common {\n\nimport RequestMessage = ofx4js.domain.data.RequestMessage;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * @author Ryan Heaton\n */\nexport class StatementRequest extends RequestMessage {\n\n  private statementRange: StatementRange;\n\n  /**\n   * The statement range.\n   *\n   * @return The statement range.\n   */\n  public getStatementRange(): StatementRange {\n    return this.statementRange;\n  }\n\n  /**\n   * The statement range.\n   *\n   * @param statementRange The statement range.\n   */\n  public setStatementRange(statementRange: StatementRange): void {\n    this.statementRange = statementRange;\n  }\n}\n\nAggregate_add( StatementRequest, \"STMTRQ\" );\nChildAggregate_add(StatementRequest, { name: \"INCTRAN\", required: false, order: 10, type: StatementRange, read: StatementRequest.prototype.getStatementRange, write: StatementRequest.prototype.setStatementRange });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/common/StatementRequest.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='ResponseMessage'/>\n\nmodule ofx4js.domain.data {\n\n\n/**\n * A message set enclosed in a response envelope.\n *\n * @author Ryan Heaton\n */\nexport /*abstract*/ class ResponseMessageSet /*implements Comparable<ResponseMessageSet>*/ {\n\n  private version: string;\n\n  public /*abstract*/ getType(): MessageSetType { throw new OFXException(\"abstract\"); }\n\n  constructor() {\n    this.version = \"1\";\n  }\n\n  /**\n   * The version of this message set.\n   *\n   * @return The version of this message set.\n   */\n  public getVersion(): string {\n    return this.version;\n  }\n\n  /**\n   * The version of this message set.\n   *\n   * @param version The version of this message set.\n   */\n  public setVersion(version: string): void {\n    this.version = version;\n  }\n\n  /**\n   * The list of response messages.\n   *\n   * @return The list of response messages.\n   */\n  public /*abstract*/ getResponseMessages(): Array<ResponseMessage> { throw new OFXException(\"abstract\"); }\n/*\n  // Inherited.\n  public compareTo(o: ResponseMessageSet): number {\n    return getType().compareTo(o.getType());\n  }\n*/\n  \n  public static contentCompare(left: ResponseMessageSet, right: ResponseMessageSet): number {\n    return left.getType() - right.getType();\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/ResponseMessageSet.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='Status'/>\n\nmodule ofx4js.domain.data.common {\n\n/**\n * A status holder (usually applied to a response).\n *\n * @author Ryan Heaton\n */\nexport interface StatusHolder {\n\n  /**\n   * The name of this status holder (for error reporting).\n   *\n   * @return The name of this status holder (for error reporting).\n   */\n  getStatusHolderName(): string;\n\n  /**\n   * Get the status.\n   *\n   * @return The status.\n   */\n  getStatus(): Status;\n}\n\n\nexport function instanceof_StatusHolder(obj: any) : boolean {\n   return (obj instanceof Object\n       && (typeof obj.getStatusHolderName === 'function') \n       && (typeof obj.getStatus === 'function'));\n}\n\n}\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/common/StatusHolder.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../meta/Aggregate_add'/>\n///<reference path='../../meta/ChildAggregate_add'/>\n///<reference path='../../meta/Element_add'/>\n///<reference path='../../io/AggregateInfo'/>\n///<reference path='common/Status'/>\n///<reference path='common/StatusHolder'/>\n\nmodule ofx4js.domain.data {\n\nimport Status = ofx4js.domain.data.common.Status;\nimport StatusHolder = ofx4js.domain.data.common.StatusHolder;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport AggregateInfo = ofx4js.io.AggregateInfo;\n\n/**\n * A response message wrapped in a transaction.\n *\n * @author Ryan Heaton\n * @see \"Section 2.4.6, OFX Spec\"\n */\nexport /*abstract*/ class TransactionWrappedResponseMessage<M extends ResponseMessage> extends ResponseMessage implements StatusHolder {\n\n  private UID: string;\n  private clientCookie: string;\n  private status: Status;\n\n  /**\n   * UID of this transaction.\n   *\n   * @return UID of this transaction.\n   */\n  public getUID(): string {\n    return this.UID;\n  }\n\n  /**\n   * UID of this transaction.\n   *\n   * @param UID UID of this transaction.\n   */\n  public setUID(UID: string): void {\n    this.UID = UID;\n  }\n\n  /**\n   * Client cookie (echoed back by the response).\n   *\n   * @return Client cookie (echoed back by the response).\n   */\n  public getClientCookie(): string {\n    return this.clientCookie;\n  }\n\n  /**\n   * Client cookie (echoed back by the response).\n   *\n   * @param clientCookie Client cookie (echoed back by the response).\n   */\n  public setClientCookie(clientCookie: string): void {\n    this.clientCookie = clientCookie;\n  }\n\n  // Inherited.\n  public getStatusHolderName(): string {\n    return this.getResponseMessageName();\n  }\n\n  // Inherited.\n  public getResponseMessageName(): string {\n    var name: string = \"transaction response\";\n    if (this.getWrappedMessage() != null) {\n      name = this.getWrappedMessage().getResponseMessageName() + \" transaction\";\n    }\n//    else if ((<any>(<Object>this).constructor).Aggregate) {\n//      // TODO- does this work?\n//      var aggregate: AggregateInfo = (<any>(<Object>this).constructor).Aggregate;\n//      name = aggregate.getName() + \" transaction\";\n//    }\n\n    return name;\n  }\n\n  /**\n   * Status of the transaction.\n   *\n   * @return Status of the transaction.\n   */\n  public getStatus(): Status {\n    return this.status;\n  }\n\n  /**\n   * Status of the transaction.\n   *\n   * @param status Status of the transaction.\n   */\n  public setStatus(status: Status): void {\n    this.status = status;\n  }\n\n  /**\n   * Get the wrapped message.\n   *\n   * @return The wrapped message.\n   */\n  public /*abstract*/ getWrappedMessage(): M { throw new OFXException(\"abstract\"); }\n\n}\n\nElement_add(TransactionWrappedResponseMessage, { name: \"TRNUID\", required: true, order: 0, type: String, read: TransactionWrappedResponseMessage.prototype.getUID, write: TransactionWrappedResponseMessage.prototype.setUID });\nElement_add(TransactionWrappedResponseMessage, { name: \"CLTCOOKIE\", order: 20, type: String, read: TransactionWrappedResponseMessage.prototype.getClientCookie, write: TransactionWrappedResponseMessage.prototype.setClientCookie });\nChildAggregate_add(TransactionWrappedResponseMessage, { required: true, order: 10, type: Status, read: TransactionWrappedResponseMessage.prototype.getStatus, write: TransactionWrappedResponseMessage.prototype.setStatus });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/TransactionWrappedResponseMessage.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../common/StatementResponse'/>\n\nmodule ofx4js.domain.data.banking {\n\nimport StatementResponse = ofx4js.domain.data.common.StatementResponse;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * @author Ryan Heaton\n */\nexport class BankStatementResponse extends StatementResponse {\n\n  private account: BankAccountDetails;\n\n  public getResponseMessageName(): string {\n    return \"bank statement\";\n  }\n\n  /**\n   * The account for the statement.\n   *\n   * @return The account for the statement.\n   */\n  public getAccount(): BankAccountDetails {\n    return this.account;\n  }\n\n  /**\n   * The account for the statement.\n   *\n   * @param account The account for the statement.\n   */\n  public setAccount(account: BankAccountDetails): void {\n    this.account = account;\n  }\n\n}\n\nAggregate_add( BankStatementResponse, \"STMTRS\" );\nChildAggregate_add(BankStatementResponse, { name:\"BANKACCTFROM\", order: 10, type: BankAccountDetails, read: BankStatementResponse.prototype.getAccount, write: BankStatementResponse.prototype.setAccount });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/banking/BankStatementResponse.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../TransactionWrappedResponseMessage'/>\n///<reference path='BankStatementResponse'/>\n\nmodule ofx4js.domain.data.banking {\n\nimport TransactionWrappedResponseMessage = ofx4js.domain.data.TransactionWrappedResponseMessage;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * @author Ryan Heaton\n */\nexport class BankStatementResponseTransaction extends TransactionWrappedResponseMessage<BankStatementResponse> {\n\n  private message: BankStatementResponse;\n\n  /**\n   * The message.\n   *\n   * @return The message.\n   */\n  public getMessage(): BankStatementResponse {\n    return this.message;\n  }\n\n  /**\n   * The message.\n   *\n   * @param message The message.\n   */\n  public setMessage(message: BankStatementResponse): void {\n    this.message = message;\n  }\n\n  // Inherited.\n  public getWrappedMessage(): BankStatementResponse {\n    return this.getMessage();\n  }\n}\n\nAggregate_add( BankStatementResponseTransaction, \"STMTTRNRS\" );\nChildAggregate_add(BankStatementResponseTransaction, { required: true, order: 30, type: BankStatementResponse, read: BankStatementResponseTransaction.prototype.getMessage, write: BankStatementResponseTransaction.prototype.setMessage });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/banking/BankStatementResponseTransaction.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../MessageSetType'/>\n///<reference path='../ResponseMessage'/>\n///<reference path='../ResponseMessageSet'/>\n///<reference path='BankStatementResponseTransaction'/>\n\nmodule ofx4js.domain.data.banking {\n\nimport MessageSetType = ofx4js.domain.data.MessageSetType;\nimport ResponseMessage = ofx4js.domain.data.ResponseMessage;\nimport ResponseMessageSet = ofx4js.domain.data.ResponseMessageSet;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * @author Ryan Heaton\n */\nexport class BankingResponseMessageSet extends ResponseMessageSet {\n\n  private statementResponses: Array<BankStatementResponseTransaction>;\n\n  public getType(): MessageSetType {\n    return MessageSetType.banking;\n  }\n\n  /**\n   * The statement response list.\n   *\n   * Most OFX files have a single statement response, except MT2OFX\n   * which outputs OFX with multiple statement responses\n   * in a single banking response message set.\n   *\n   * @return The statement response list.\n   */\n  public getStatementResponses(): Array<BankStatementResponseTransaction> {\n    return this.statementResponses;\n  }\n\n  /**\n   * The statement response.\n   *\n   * @param statementResponses The statement responses.\n   */\n  public setStatementResponses(statementResponses: Array<BankStatementResponseTransaction>): void {\n    this.statementResponses = statementResponses;\n  }\n\n  // Inherited.\n  public getResponseMessages(): Array<ResponseMessage> {\n    return this.statementResponses;\n  }\n\n  /**\n   * The first statement response.\n   *\n   * @return the first bank statement response.\n   * @deprecated Use getStatementResponses() because sometimes there are multiple responses\n   */\n  public getStatementResponse(): BankStatementResponseTransaction {\n    return this.statementResponses == null || this.statementResponses.length == 0 ? null : this.statementResponses[0];\n  }\n\n  public setStatementResponse(statementResponse: BankStatementResponseTransaction): void {\n    this.statementResponses = [statementResponse];\n  }\n\n}\n\nAggregate_add( BankingResponseMessageSet, \"BANKMSGSRSV1\" );\nChildAggregate_add(BankingResponseMessageSet, { order: 0, type: Array, collectionEntryType: BankStatementResponseTransaction, read: BankingResponseMessageSet.prototype.getStatementResponses, write: BankingResponseMessageSet.prototype.setStatementResponses });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/banking/BankingResponseMessageSet.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../common/StatementRequest'/>\n///<reference path='BankAccountDetails'/>\n\nmodule ofx4js.domain.data.banking {\n\nimport StatementRequest = ofx4js.domain.data.common.StatementRequest;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\n\n/**\n * @author Ryan Heaton\n */\nexport class BankStatementRequest extends StatementRequest {\n\n  private account: BankAccountDetails;\n\n  /**\n   * The account details.\n   *\n   * @return The account details.\n   */\n  public getAccount(): BankAccountDetails {\n    return this.account;\n  }\n\n  /**\n   * The account details.\n   *\n   * @param account The account details.\n   */\n  public setAccount(account: BankAccountDetails): void {\n    this.account = account;\n  }\n\n}\n\nAggregate_add( BankStatementRequest, \"STMTRQ\" );\nChildAggregate_add(BankStatementRequest, { name: \"BANKACCTFROM\", required: true, order: 0, type: BankAccountDetails, read: BankStatementRequest.prototype.getAccount, write: BankStatementRequest.prototype.setAccount });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/banking/BankStatementRequest.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='MessageSetType'/>\n///<reference path='RequestMessage'/>\n\nmodule ofx4js.domain.data {\n\n/**\n * A message set enclosed in an OFX request envelope.\n *\n * @author Ryan Heaton\n */\nexport /*abstract*/ class RequestMessageSet /*implements Comparable<RequestMessageSet>*/ {\n\n  private version: string;\n\n  public /*abstract*/ getType(): MessageSetType { throw new OFXException(\"abstract\"); }\n\n  constructor() {\n    this.version = \"1\";\n  }\n\n  /**\n   * The version of this request message.\n   *\n   * @return The version of this request message.\n   */\n  public getVersion(): string {\n    return this.version;\n  }\n\n  /**\n   * The version of this request message.\n   *\n   * @param version The version of this request message.\n   */\n  public setVersion(version: string): void {\n    this.version = version;\n  }\n\n  /**\n   * The request messages for this request message set.\n   *\n   * @return The request messages for this request message set.\n   */\n  public /*abstract*/ getRequestMessages(): Array<RequestMessage> { throw new OFXException(\"abstract\"); }\n\n  // Inherited.\n  /*public compareTo(o: RequestMessageSet): number {\n    return getType().compareTo(o.getType());\n  }*/\n  \n  public static contentCompare(left: RequestMessageSet, right: RequestMessageSet): number {\n    return left.getType() - right.getType();\n  }\n  \n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/RequestMessageSet.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../project.d.ts'/>\n///<reference path='../../meta/Element_add'/>\n///<reference path='RequestMessage'/>\n\nmodule ofx4js.domain.data {\n\nimport Element_add = ofx4js.meta.Element_add;\n\nvar UUID: UUID = require(\"uuid\");\n\n/**\n * A request message wrapped in a transaction.\n *\n * @author Ryan Heaton\n * @see \"Section 2.4.6, OFX Spec\"\n */\nexport /*abstract*/ class TransactionWrappedRequestMessage<M extends RequestMessage> extends RequestMessage {\n\n  private UID: string;\n  private clientCookie: string;\n  private transactionAuthorizationNumber: string;\n\n  constructor(UID: string = UUID.v1()) {\n    super();\n    this.UID = UID;\n  }\n\n  /**\n   * UID of this transaction.\n   *\n   * @return UID of this transaction.\n   */\n  public getUID(): string {\n    return this.UID;\n  }\n\n  /**\n   * UID of this transaction.\n   *\n   * @param UID UID of this transaction.\n   */\n  public setUID(UID: string): void {\n    this.UID = UID;\n  }\n\n  /**\n   * Client cookie (echoed back by the response).\n   *\n   * @return Client cookie (echoed back by the response).\n   */\n  public getClientCookie(): string {\n    return this.clientCookie;\n  }\n\n  /**\n   * Client cookie (echoed back by the response).\n   *\n   * @param clientCookie Client cookie (echoed back by the response).\n   */\n  public setClientCookie(clientCookie: string): void {\n    this.clientCookie = clientCookie;\n  }\n\n  /**\n   * The transaction authorization number.\n   *\n   * @return The transaction authorization number.\n   */\n  public getTransactionAuthorizationNumber(): string {\n    return this.transactionAuthorizationNumber;\n  }\n\n  /**\n   * The transaction authorization number.\n   *\n   * @param transactionAuthorizationNumber The transaction authorization number.\n   */\n  public setTransactionAuthorizationNumber(transactionAuthorizationNumber: string): void {\n    this.transactionAuthorizationNumber = transactionAuthorizationNumber;\n  }\n\n  /**\n   * Set the wrapped message.\n   *\n   * @param message The wrapped message.\n   */\n  public /*abstract*/ setWrappedMessage(message: M): void { throw new OFXException(\"abstract\"); }\n\n}\n\nElement_add(TransactionWrappedRequestMessage, { name: \"TRNUID\", required: true, order: 0, type: String, read: TransactionWrappedRequestMessage.prototype.getUID, write: TransactionWrappedRequestMessage.prototype.setUID });\nElement_add(TransactionWrappedRequestMessage, { name: \"CLTCOOKIE\", order: 10, type: String, read: TransactionWrappedRequestMessage.prototype.getClientCookie, write: TransactionWrappedRequestMessage.prototype.setClientCookie });\nElement_add(TransactionWrappedRequestMessage, { name: \"TAN\", order: 20, type: String, read: TransactionWrappedRequestMessage.prototype.getTransactionAuthorizationNumber, write: TransactionWrappedRequestMessage.prototype.setTransactionAuthorizationNumber });\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/TransactionWrappedRequestMessage.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../TransactionWrappedRequestMessage'/>\n///<reference path='BankStatementRequest'/>\n\nmodule ofx4js.domain.data.banking {\n\nimport TransactionWrappedRequestMessage = ofx4js.domain.data.TransactionWrappedRequestMessage;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * @author Ryan Heaton\n */\nexport class BankStatementRequestTransaction extends TransactionWrappedRequestMessage<BankStatementRequest> {\n\n  private message: BankStatementRequest;\n\n  /**\n   * The message.\n   *\n   * @return The message.\n   */\n  public getMessage(): BankStatementRequest {\n    return this.message;\n  }\n\n  /**\n   * The message.\n   *\n   * @param message The message.\n   *\n   */\n  public setMessage(message: BankStatementRequest): void {\n    this.message = message;\n  }\n\n  // Inherited.\n  public setWrappedMessage(message: BankStatementRequest): void {\n    this.setMessage(message);\n  }\n}\n\nAggregate_add( BankStatementRequestTransaction, \"STMTTRNRQ\" );\nChildAggregate_add(BankStatementRequestTransaction, { required: true, order: 30, type: BankStatementRequest, read: BankStatementRequestTransaction.prototype.getMessage, write: BankStatementRequestTransaction.prototype.setMessage });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/banking/BankStatementRequestTransaction.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../MessageSetType'/>\n///<reference path='../RequestMessageSet'/>\n///<reference path='BankStatementRequestTransaction'/>\n\nmodule ofx4js.domain.data.banking {\n\nimport MessageSetType = ofx4js.domain.data.MessageSetType;\nimport RequestMessageSet = ofx4js.domain.data.RequestMessageSet;\nimport RequestMessage = ofx4js.domain.data.RequestMessage;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * @author Ryan Heaton\n */\nexport class BankingRequestMessageSet extends RequestMessageSet {\n\n  private statementRequest: BankStatementRequestTransaction;\n\n  public getType(): MessageSetType {\n    return MessageSetType.banking;\n  }\n\n  /**\n   * The statement request.\n   *\n   * @return The statement request.\n   */\n  public getStatementRequest(): BankStatementRequestTransaction {\n    return this.statementRequest;\n  }\n\n  /**\n   * The statement request.\n   *\n   * @param statementRequest The statement request.\n   */\n  public setStatementRequest(statementRequest: BankStatementRequestTransaction): void {\n    this.statementRequest = statementRequest;\n  }\n\n  // Inherited.\n  public getRequestMessages(): Array<RequestMessage> {\n    var requestMessages: Array<RequestMessage> = [];\n    if (this.getStatementRequest() != null) {\n      requestMessages.push(this.getStatementRequest());\n    }\n    return requestMessages;\n  }\n}\n\nAggregate_add( BankingRequestMessageSet, \"BANKMSGSRQV1\" );\nChildAggregate_add(BankingRequestMessageSet, { order: 0, type: BankStatementRequestTransaction, read: BankingRequestMessageSet.prototype.getStatementRequest, write: BankingRequestMessageSet.prototype.setStatementRequest });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/banking/BankingRequestMessageSet.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../OFXException'/>\n///<reference path='../../client/AccountStatement'/>\n///<reference path='../../client/FinancialInstitutionAccount'/>\n///<reference path='../../domain/data/common/StatementRange'/>\n///<reference path='../../domain/data/common/StatementRequest'/>\n///<reference path='../../domain/data/common/StatementResponse'/>\n///<reference path='../../domain/data/creditcard/CreditCardAccountDetails'/>\n///<reference path='../../domain/data/investment/accounts/InvestmentAccountDetails'/>\n///<reference path='../../domain/data/MessageSetType'/>\n\nmodule ofx4js.client.impl {\n\nimport OFXException = ofx4js.OFXException;\nimport AccountStatement = ofx4js.client.AccountStatement;\nimport FinancialInstitutionAccount = ofx4js.client.FinancialInstitutionAccount;\n//import data.* = ofx4js.domain.data.*;\nimport MessageSetType = ofx4js.domain.data.MessageSetType;\nimport RequestEnvelope = ofx4js.domain.data.RequestEnvelope;\nimport ResponseEnvelope = ofx4js.domain.data.ResponseEnvelope;\nimport RequestMessageSet = ofx4js.domain.data.RequestMessageSet;\nimport RequestMessage = ofx4js.domain.data.RequestMessage;\nimport TransactionWrappedRequestMessage = ofx4js.domain.data.TransactionWrappedRequestMessage;\nimport BankAccountDetails = ofx4js.domain.data.banking.BankAccountDetails;\nimport StatementRange = ofx4js.domain.data.common.StatementRange;\nimport StatementRequest = ofx4js.domain.data.common.StatementRequest;\nimport StatementResponse = ofx4js.domain.data.common.StatementResponse;\nimport CreditCardAccountDetails = ofx4js.domain.data.creditcard.CreditCardAccountDetails;\nimport InvestmentAccountDetails = ofx4js.domain.data.investment.accounts.InvestmentAccountDetails;\n\n/**\n * Base account implementation. Supports banking and credit card accounts.\n *\n * @author Ryan Heaton\n */\nexport /*abstract*/ class BaseAccountImpl<D> implements FinancialInstitutionAccount {\n\n  private details: D;\n  private messageType: MessageSetType;\n  private username: string;\n  private password: string;\n  private institution: FinancialInstitutionImpl;\n\n  constructor(details: D, username: string, password: string, institution: FinancialInstitutionImpl) {\n    this.details = details;\n    this.username = username;\n    this.password = password;\n    this.institution = institution;\n    this.messageType = this.getMessageSetType(details);\n  }\n\n  /**\n   * Get the message set type of the specified details.\n   *\n   * @param details The details.\n   * @return The message set type.\n   */\n  protected getMessageSetType(details: D): MessageSetType {\n    var messageType: MessageSetType;\n    if (details instanceof BankAccountDetails) {\n      messageType = MessageSetType.banking;\n    }\n    else if (this.getDetails() instanceof CreditCardAccountDetails) {\n      messageType = MessageSetType.creditcard;\n    }\n    else if (this.getDetails() instanceof InvestmentAccountDetails) {\n      messageType = MessageSetType.investment;\n    }\n    else {\n      throw new OFXException(\"Illegal details\");\n    }\n    return messageType;\n  }\n\n  public readStatement(start: Date, end: Date) /*throws OFXException*/: Promise<AccountStatement> {\n    var range: StatementRange = new StatementRange();\n    range.setIncludeTransactions(true);\n    range.setStart(start);\n    range.setEnd(end);\n\n    var request: RequestEnvelope = this.institution.createAuthenticatedRequest(this.username, this.password);\n    var requestTransaction: TransactionWrappedRequestMessage<RequestMessage> = this.createTransaction();\n    requestTransaction.setWrappedMessage(this.createStatementRequest(this.getDetails(), range));\n    request.getMessageSets().insert(this.createRequestMessageSet(requestTransaction));\n\n    return this.institution.sendRequest(request)\n    .then((response: ResponseEnvelope): AccountStatement => {\n      this.institution.doGeneralValidationChecks(request, response);\n\n      return this.unwrapStatementResponse(response);\n    });\n  }\n\n  /**\n   * Unwrap the statement response from the specified response envelope.\n   *\n   * @param response The response envelope to unwrap.\n   * @return The response.\n   */\n  protected /*abstract*/ unwrapStatementResponse(response: ResponseEnvelope): StatementResponse /*throws OFXException*/ { throw new OFXException(\"abstract\"); }\n\n  /**\n   * Create a request message set from the specified transaction.\n   *\n   * @param transaction The transaction.\n   * @return The request message set.\n   */\n  protected /*abstract*/ createRequestMessageSet(transaction: TransactionWrappedRequestMessage<RequestMessage>): RequestMessageSet { throw new OFXException(\"abstract\"); }\n\n  /**\n   * Create a transaction.\n   *\n   * @return The transaction.\n   */\n  protected /*abstract*/ createTransaction(): TransactionWrappedRequestMessage<RequestMessage> { throw new OFXException(\"abstract\"); }\n\n  /**\n   * Create a statement request.\n   *\n   * @param details The details.\n   * @param range the range.\n   * @return The statement request.\n   */\n  protected /*abstract*/ createStatementRequest(details: D, range: StatementRange): StatementRequest { throw new OFXException(\"abstract\"); }\n\n  /**\n   * The details of this account.\n   *\n   * @return The details of this account.\n   */\n  public getDetails(): D {\n    return this.details;\n  }\n\n  /**\n   * The message set type.\n   *\n   * @return The message set type.\n   */\n  protected getMessageType(): MessageSetType {\n    return this.messageType;\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../client/impl/BaseAccountImpl.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n\nmodule ofx4js.domain.data.signon {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * @author Ryan Heaton\n */\nexport class FinancialInstitution {\n\n  private id: string;\n  private organization: string;\n\n  /**\n   * Financial institution id.\n   *\n   * @return Financial institution id.\n   */\n  public getId(): string {\n    return this.id;\n  }\n\n  /**\n   * Financial institution id.\n   *\n   * @param id Financial institution id.\n   */\n  public setId(id: string): void {\n    this.id = id;\n  }\n\n  /**\n   * The organization.\n   *\n   * @return The organization.\n   */\n  public getOrganization(): string {\n    return this.organization;\n  }\n\n  /**\n   * The organization.\n   *\n   * @param organization The organization.\n   */\n  public setOrganization(organization: string): void {\n    this.organization = organization;\n  }\n}\n\nAggregate_add( FinancialInstitution, \"FI\" );\nElement_add(FinancialInstitution, { name: \"FID\", order: 10, type: String, read: FinancialInstitution.prototype.getId, write: FinancialInstitution.prototype.setId });\nElement_add(FinancialInstitution, { name: \"ORG\", required: true, order: 0, type: String, read: FinancialInstitution.prototype.getOrganization, write: FinancialInstitution.prototype.setOrganization });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/signon/FinancialInstitution.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n///<reference path='../RequestMessage'/>\n///<reference path='FinancialInstitution'/>\n\nmodule ofx4js.domain.data.signon {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\nimport RequestMessage = ofx4js.domain.data.RequestMessage;\n\n/**\n * Sign-on request\n *\n * @author Ryan Heaton\n * @see \"Section 2.5.1.2, OFX Spec.\"\n */\nexport class SignonRequest extends RequestMessage {\n\n  /**\n   * @see \"Section 2.5.1\"\n   */\n  public static ANONYMOUS_USER: string = \"anonymous00000000000000000000000\";\n\n  private timestamp: Date;\n  private userId: string;\n  private password: string;\n  private userKey: string;\n  private generateUserKey: boolean;\n  private language: string;\n  private financialInstitution: FinancialInstitution;\n  private sessionId: string;\n  private applicationId: string;\n  private applicationVersion: string;\n  private clientUID: string;\n  private additionalCredentials1: string;\n  private additionalCredentials2: string;\n  private authToken: string;\n  private accessKey: string;\n  \n  constructor() {\n    super();\n    this.language = \"ENG\"; //Locale.US.getISO3Language().toUpperCase();\n    this.applicationId = \"Money\"; //many institutions just won't work with an unrecognized app id...\n    this.applicationVersion = \"1600\"; //many institutions just won't work with an unrecognized app id...\n  }\n\n  /**\n   * The date and time of the request.\n   *\n   * @return The date and time of the request.\n   */\n  public getTimestamp(): Date {\n    return this.timestamp;\n  }\n\n  /**\n   * The date and time of the request.\n   *\n   * @param timestamp The date and time of the request.\n   */\n  public setTimestamp(timestamp: Date): void {\n    this.timestamp = timestamp;\n  }\n\n  /**\n   * The user id.\n   *\n   * @return The user id.\n   */\n  public getUserId(): string {\n    return this.userId;\n  }\n\n  /**\n   * The user id.\n   *\n   * @param userId The user id.\n   */\n  public setUserId(userId: string): void {\n    this.userId = userId;\n  }\n\n  /**\n   * The password.\n   *\n   * @return The password.\n   */\n  public getPassword(): string {\n    return this.password;\n  }\n\n  /**\n   * The password.\n   *\n   * @param password The password.\n   */\n  public setPassword(password: string): void {\n    this.password = password;\n  }\n\n  /**\n   * The user key provided by the server so as not to require further username/password authentication.\n   *\n   * @return The user key provided by the server so as not to require further username/password authentication.\n   */\n  public getUserKey(): string {\n    return this.userKey;\n  }\n\n  /**\n   * The user key provided by the server so as not to require further username/password authentication.\n   *\n   * @param userKey The user key provided by the server so as not to require further username/password authentication.\n   */\n  public setUserKey(userKey: string): void {\n    this.userKey = userKey;\n  }\n\n  /**\n   * Whether to request the server to generate a user key.\n   *\n   * @return Whether to request the server to generate a user key.\n   */\n  public getGenerateUserKey(): boolean {\n    return this.generateUserKey;\n  }\n\n  /**\n   * Whether to request the server to generate a user key.\n   *\n   * @param generateUserKey Whether to request the server to generate a user key.\n   */\n  public setGenerateUserKey(generateUserKey: boolean): void {\n    this.generateUserKey = generateUserKey;\n  }\n\n  /**\n   * The three-letter langauge code.\n   *\n   * @return The three-letter langauge code.\n   * @see java.util.Locale#getISO3Language()\n   */\n  public getLanguage(): string {\n    return this.language;\n  }\n\n  /**\n   * The three-letter langauge code.\n   *\n   * @param language The three-letter langauge code.\n   */\n  public setLanguage(language: string): void {\n    this.language = language;\n  }\n\n  /**\n   * The financial institution.\n   *\n   * @return The financial institution.\n   */\n  public getFinancialInstitution(): FinancialInstitution {\n    return this.financialInstitution;\n  }\n\n  /**\n   * The financial institution.\n   *\n   * @param financialInstitution The financial institution.\n   */\n  public setFinancialInstitution(financialInstitution: FinancialInstitution): void {\n    this.financialInstitution = financialInstitution;\n  }\n\n  /**\n   * The server-supplied session id.\n   *\n   * @return The server-supplied session id.\n   */\n  public getSessionId(): string {\n    return this.sessionId;\n  }\n\n  /**\n   * The server-supplied session id.\n   *\n   * @param sessionId The server-supplied session id.\n   */\n  public setSessionId(sessionId: string): void {\n    this.sessionId = sessionId;\n  }\n\n  /**\n   * The application id.\n   *\n   * @return The application id.\n   */\n  public getApplicationId(): string {\n    return this.applicationId;\n  }\n\n  /**\n   * The application id.\n   *\n   * @param applicationId The application id.\n   */\n  public setApplicationId(applicationId: string): void {\n    this.applicationId = applicationId;\n  }\n\n  /**\n   * The application version.\n   *\n   * @return The application version.\n   */\n  public getApplicationVersion(): string {\n    return this.applicationVersion;\n  }\n\n  /**\n   * The application version.\n   *\n   * @param applicationVersion The application version.\n   */\n  public setApplicationVersion(applicationVersion: string): void {\n    this.applicationVersion = applicationVersion;\n  }\n\n  /**\n   * The client-supplied UID.\n   *\n   * @return The client-supplied UID.\n   */\n  public getClientUID(): string {\n    return this.clientUID;\n  }\n\n  /**\n   * The client-supplied UID.\n   *\n   * @param clientUID The client-supplied UID.\n   */\n  public setClientUID(clientUID: string): void {\n    this.clientUID = clientUID;\n  }\n\n  /**\n   * Any additional credentials.\n   *\n   * @return Any additional credentials.\n   */\n  public getAdditionalCredentials1(): string {\n    return this.additionalCredentials1;\n  }\n\n  /**\n   * Any additional credentials.\n   *\n   * @param additionalCredentials1 Any additional credentials.\n   */\n  public setAdditionalCredentials1(additionalCredentials1: string): void {\n    this.additionalCredentials1 = additionalCredentials1;\n  }\n\n  /**\n   * Any additional credentials.\n   *\n   * @return Any additional credentials.\n   */\n  public getAdditionalCredentials2(): string {\n    return this.additionalCredentials2;\n  }\n\n  /**\n   * Any additional credentials.\n   *\n   * @param additionalCredentials2 Any additional credentials.\n   */\n  public setAdditionalCredentials2(additionalCredentials2: string): void {\n    this.additionalCredentials2 = additionalCredentials2;\n  }\n\n  /**\n   * The authentication token.\n   *\n   * @return The authentication token.\n   */\n  public getAuthToken(): string {\n    return this.authToken;\n  }\n\n  /**\n   * The authentication token.\n   *\n   * @param authToken The authentication token.\n   */\n  public setAuthToken(authToken: string): void {\n    this.authToken = authToken;\n  }\n\n  /**\n   * The access key.\n   *\n   * @return The access key.\n   */\n  public getAccessKey(): string {\n    return this.accessKey;\n  }\n\n  /**\n   * The access key.\n   *\n   * @param accessKey The access key.\n   */\n  public setAccessKey(accessKey: string): void {\n    this.accessKey = accessKey;\n  }\n\n  //todo: MFA challenge stuff.\n}\n\nAggregate_add( SignonRequest, \"SONRQ\" );\nElement_add(SignonRequest, { name: \"DTCLIENT\", required: true, order: 0, type: Date, read: SignonRequest.prototype.getTimestamp, write: SignonRequest.prototype.setTimestamp });\nElement_add(SignonRequest, { name: \"USERID\", order: 10, type: String, read: SignonRequest.prototype.getUserId, write: SignonRequest.prototype.setUserId });\nElement_add(SignonRequest, { name: \"USERPASS\", order: 20, type: String, read: SignonRequest.prototype.getPassword, write: SignonRequest.prototype.setPassword });\nElement_add(SignonRequest, { name: \"USERKEY\", order: 30, type: String, read: SignonRequest.prototype.getUserKey, write: SignonRequest.prototype.setUserKey });\nElement_add(SignonRequest, { name: \"GENUSERKEY\", order: 40, type: Boolean, read: SignonRequest.prototype.getGenerateUserKey, write: SignonRequest.prototype.setGenerateUserKey });\nElement_add(SignonRequest, { name: \"LANGUAGE\", required: true, order: 50, type: String, read: SignonRequest.prototype.getLanguage, write: SignonRequest.prototype.setLanguage });\nChildAggregate_add(SignonRequest, { order: 60, type: FinancialInstitution, read: SignonRequest.prototype.getFinancialInstitution, write: SignonRequest.prototype.setFinancialInstitution });\nElement_add(SignonRequest, { name: \"SESSCOOKIE\", order: 70, type: String, read: SignonRequest.prototype.getSessionId, write: SignonRequest.prototype.setSessionId });\nElement_add(SignonRequest, { name: \"APPID\", required: true, order: 80, type: String, read: SignonRequest.prototype.getApplicationId, write: SignonRequest.prototype.setApplicationId });\nElement_add(SignonRequest, { name: \"APPVER\", required: true, order: 90, type: String, read: SignonRequest.prototype.getApplicationVersion, write: SignonRequest.prototype.setApplicationVersion });\nElement_add(SignonRequest, { name: \"CLIENTUID\", order: 100, type: String, read: SignonRequest.prototype.getClientUID, write: SignonRequest.prototype.setClientUID });\nElement_add(SignonRequest, { name: \"USERCRED1\", order: 110, type: String, read: SignonRequest.prototype.getAdditionalCredentials1, write: SignonRequest.prototype.setAdditionalCredentials1 });\nElement_add(SignonRequest, { name: \"USERCRED2\", order: 120, type: String, read: SignonRequest.prototype.getAdditionalCredentials2, write: SignonRequest.prototype.setAdditionalCredentials2 });\nElement_add(SignonRequest, { name: \"AUTHTOKEN\", order: 130, type: String, read: SignonRequest.prototype.getAuthToken, write: SignonRequest.prototype.setAuthToken });\nElement_add(SignonRequest, { name: \"ACCESSKEY\", order: 140, type: String, read: SignonRequest.prototype.getAccessKey, write: SignonRequest.prototype.setAccessKey });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/signon/SignonRequest.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n///<reference path='../RequestMessage'/>\n\nmodule ofx4js.domain.data.signon {\n\nimport RequestMessage = ofx4js.domain.data.RequestMessage;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Request to change a user password.\n *\n * @author Ryan Heaton\n * @see \"Section 2.5.2.1, OFX Spec.\"\n */\nexport class PasswordChangeRequest extends RequestMessage {\n\n  private userId: string;\n  private newPassword: string;\n\n  /**\n   * The id of the user changing password.\n   *\n   * @return The id of the user changing password.\n   */\n  public getUserId(): string {\n    return this.userId;\n  }\n\n  /**\n   * The id of the user changing password.\n   *\n   * @param userId The id of the user changing password.\n   */\n  public setUserId(userId: string): void {\n    this.userId = userId;\n  }\n\n  /**\n   * The new password.\n   *\n   * @return The new password.\n   */\n  public getNewPassword(): string {\n    return this.newPassword;\n  }\n\n  /**\n   * The new password.\n   *\n   * @param newPassword The new password.\n   */\n  public setNewPassword(newPassword: string): void {\n    this.newPassword = newPassword;\n  }\n}\n\nAggregate_add( PasswordChangeRequest, \"PINCHRQ\" );\nElement_add(PasswordChangeRequest, { name: \"USERID\", required: true, order: 0, type: String, read: PasswordChangeRequest.prototype.getUserId, write: PasswordChangeRequest.prototype.setUserId });\nElement_add(PasswordChangeRequest, { name: \"NEWUSERPASS\", required: true, order: 10, type: String, read: PasswordChangeRequest.prototype.getNewPassword, write: PasswordChangeRequest.prototype.setNewPassword });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/signon/PasswordChangeRequest.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../TransactionWrappedRequestMessage'/>\n///<reference path='PasswordChangeRequest'/>\n\nmodule ofx4js.domain.data.signon {\n\nimport TransactionWrappedRequestMessage = ofx4js.domain.data.TransactionWrappedRequestMessage;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\n\n/**\n * @author Ryan Heaton\n */\nexport class PasswordChangeRequestTransaction extends TransactionWrappedRequestMessage<PasswordChangeRequest> {\n\n  private message: PasswordChangeRequest;\n\n  /**\n   * The wrapped message.\n   *\n   * @return The wrapped message.\n   */\n  public getMessage(): PasswordChangeRequest {\n    return this.message;\n  }\n\n  /**\n   * The wrapped message.\n   *\n   * @param message The wrapped message.\n   */\n  public setMessage(message: PasswordChangeRequest) {\n    this.message = message;\n  }\n\n  // Inherited.\n  public setWrappedMessage(message: PasswordChangeRequest): void {\n    this.setMessage(message);\n  }\n}\n\nAggregate_add(PasswordChangeRequestTransaction, \"PINCHTRNRQ\");\nChildAggregate_add(PasswordChangeRequestTransaction, { required: true, order: 30, type: PasswordChangeRequest, read: PasswordChangeRequestTransaction.prototype.getMessage, write: PasswordChangeRequestTransaction.prototype.setMessage });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/signon/PasswordChangeRequestTransaction.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../MessageSetType'/>\n///<reference path='../RequestMessageSet'/>\n///<reference path='../RequestMessage'/>\n///<reference path='SignonRequest'/>\n///<reference path='PasswordChangeRequestTransaction'/>\n\nmodule ofx4js.domain.data.signon {\n\nimport MessageSetType = ofx4js.domain.data.MessageSetType;\nimport RequestMessageSet = ofx4js.domain.data.RequestMessageSet;\nimport RequestMessage = ofx4js.domain.data.RequestMessage;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\n\n/**\n * The sign-on request message set.\n *\n * @author Ryan Heaton\n * @see \"Section 2.5, OFX Spec.\"\n */\nexport class SignonRequestMessageSet extends RequestMessageSet {\n\n  private signonRequest: SignonRequest;\n  private passwordChangeRequest: PasswordChangeRequestTransaction;\n\n  public getType(): MessageSetType {\n    return MessageSetType.signon;\n  }\n\n  /**\n   * The message for this message set.\n   *\n   * @return The message for this message set.\n   */\n  public getSignonRequest(): SignonRequest {\n    return this.signonRequest;\n  }\n\n  /**\n   * The message for this message set.\n   *\n   * @param signonRequest The message for this message set.\n   */\n  public setSignonRequest(signonRequest: SignonRequest): void {\n    this.signonRequest = signonRequest;\n  }\n\n  /**\n   * The password change request.\n   *\n   * @return The password change request.\n   */\n  public getPasswordChangeRequest(): PasswordChangeRequestTransaction {\n    return this.passwordChangeRequest;\n  }\n\n  /**\n   * The password change request.\n   *\n   * @param passwordChangeRequest The password change request.\n   */\n  public setPasswordChangeRequest(passwordChangeRequest: PasswordChangeRequestTransaction): void {\n    this.passwordChangeRequest = passwordChangeRequest;\n  }\n\n  //todo: challenge request/response\n\n\n  // Inherited.\n  public getRequestMessages(): Array<RequestMessage> {\n    var requestMessages: Array<RequestMessage> = new Array<RequestMessage>();\n\n    if (this.getSignonRequest() != null) {\n      requestMessages.push(this.getSignonRequest());\n    }\n\n    if (this.getPasswordChangeRequest() != null) {\n      requestMessages.push(this.getPasswordChangeRequest());\n    }\n\n    return requestMessages;\n  }\n}\n\nAggregate_add(SignonRequestMessageSet, \"SIGNONMSGSRQV1\");\nChildAggregate_add(SignonRequestMessageSet, { required: true, order: 0, type: SignonRequest, read: SignonRequestMessageSet.prototype.getSignonRequest, write: SignonRequestMessageSet.prototype.setSignonRequest });\nChildAggregate_add(SignonRequestMessageSet, { order: 10, type: PasswordChangeRequestTransaction, read: SignonRequestMessageSet.prototype.getPasswordChangeRequest, write: SignonRequestMessageSet.prototype.setPasswordChangeRequest });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/signon/SignonRequestMessageSet.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n///<reference path='../RequestMessage'/>\n\nmodule ofx4js.domain.data.signup {\n\nimport RequestMessage = ofx4js.domain.data.RequestMessage;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * @author Ryan Heaton\n */\nexport class AccountInfoRequest extends RequestMessage {\n\n  private lastUpdated: Date;\n  \n  constructor() {\n    super();\n    this.lastUpdated = new Date(0); //default is never updated.\n  }\n\n  /**\n   * When the account info was last updated.\n   *\n   * @return When the account info was last updated.\n   */\n  public getLastUpdated(): Date {\n    return this.lastUpdated;\n  }\n\n  /**\n   * When the account info was last updated.\n   *\n   * @param lastUpdated When the account info was last updated.\n   */\n  public setLastUpdated(lastUpdated: Date): void {\n    this.lastUpdated = lastUpdated;\n  }\n}\n\nAggregate_add(AccountInfoRequest, \"ACCTINFORQ\");\nElement_add(AccountInfoRequest, { name: \"DTACCTUP\", required: true, order: 0, type: Date, read: AccountInfoRequest.prototype.getLastUpdated, write: AccountInfoRequest.prototype.setLastUpdated });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/signup/AccountInfoRequest.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../TransactionWrappedRequestMessage'/>\n///<reference path='AccountInfoRequest'/>\n\nmodule ofx4js.domain.data.signup {\n\nimport TransactionWrappedRequestMessage = ofx4js.domain.data.TransactionWrappedRequestMessage;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\n\n/**\n * @author Ryan Heaton\n */\nexport class AccountInfoRequestTransaction extends TransactionWrappedRequestMessage<AccountInfoRequest> {\n\n  private message: AccountInfoRequest;\n\n  /**\n   * The wrapped message.\n   *\n   * @return The wrapped message.\n   */\n  public getMessage(): AccountInfoRequest {\n    return this.message;\n  }\n\n  /**\n   * The wrapped message.\n   *\n   * @param message The wrapped message.\n   */\n  public setMessage(message: AccountInfoRequest): void {\n    this.message = message;\n  }\n\n  // Inherited.\n  public setWrappedMessage(message: AccountInfoRequest): void {\n    this.setMessage(message);\n  }\n}\n\nAggregate_add( AccountInfoRequestTransaction, \"ACCTINFOTRNRQ\" );\nChildAggregate_add(AccountInfoRequestTransaction, { required: true, order: 30, type: AccountInfoRequest, read: AccountInfoRequestTransaction.prototype.getMessage, write: AccountInfoRequestTransaction.prototype.setMessage });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/signup/AccountInfoRequestTransaction.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../RequestMessageSet'/>\n///<reference path='AccountInfoRequestTransaction'/>\n\nmodule ofx4js.domain.data.signup {\n\nimport RequestMessageSet = ofx4js.domain.data.RequestMessageSet;\nimport MessageSetType = ofx4js.domain.data.MessageSetType;\nimport RequestMessage = ofx4js.domain.data.RequestMessage;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * @author Ryan Heaton\n */\nexport class SignupRequestMessageSet extends RequestMessageSet {\n\n  private accountInfoRequest: AccountInfoRequestTransaction;\n\n  public getType(): MessageSetType {\n    return MessageSetType.signup;\n  }\n\n  /**\n   * The account info request.\n   *\n   * @return The account info request.\n   */\n  public getAccountInfoRequest(): AccountInfoRequestTransaction {\n    return this.accountInfoRequest;\n  }\n\n  /**\n   * The account info request.\n   *\n   * @param accountInfoRequest The account info request.\n   */\n  public setAccountInfoRequest(accountInfoRequest: AccountInfoRequestTransaction): void {\n    this.accountInfoRequest = accountInfoRequest;\n  }\n\n  /**\n   * The request messages.\n   *\n   * @return The request messages.\n   */\n  public getRequestMessages(): Array<RequestMessage> {\n    var messages: Array<RequestMessage> = new Array<RequestMessage>();\n\n    if (this.getAccountInfoRequest() != null) {\n      messages.push(this.getAccountInfoRequest());\n    }\n    \n    return messages;\n  }\n}\n\nAggregate_add(SignupRequestMessageSet, \"SIGNUPMSGSRQV1\");\nChildAggregate_add(SignupRequestMessageSet, { order: 0, type: AccountInfoRequestTransaction, read: SignupRequestMessageSet.prototype.getAccountInfoRequest, write: SignupRequestMessageSet.prototype.setAccountInfoRequest });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/signup/SignupRequestMessageSet.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n///<reference path='../ResponseMessage'/>\n///<reference path='AccountProfile'/>\n\nmodule ofx4js.domain.data.signup {\n\nimport ResponseMessage = ofx4js.domain.data.ResponseMessage;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * @author Ryan Heaton\n */\nexport class AccountInfoResponse extends ResponseMessage {\n\n  private lastUpdated: Date;\n  private accounts: Array<AccountProfile>;\n  \n  constructor() {\n    super();\n    this.lastUpdated = new Date(0); //default is never updated.\n  }\n\n  public getResponseMessageName(): string {\n    return \"account info\";\n  }\n\n  /**\n   * When the account info was last updated.\n   *\n   * @return When the account info was last updated.\n   */\n  public getLastUpdated(): Date {\n    return this.lastUpdated;\n  }\n\n  /**\n   * When the account info was last updated.\n   *\n   * @param lastUpdated When the account info was last updated.\n   */\n  public setLastUpdated(lastUpdated: Date): void {\n    this.lastUpdated = lastUpdated;\n  }\n\n  /**\n   * The accounts.\n   *\n   * @return The accounts.\n   */\n  public getAccounts(): Array<AccountProfile> {\n    return this.accounts;\n  }\n\n  /**\n   * The accounts.\n   *\n   * @param accounts The accounts.\n   */\n  public setAccounts(accounts: Array<AccountProfile>): void {\n    this.accounts = accounts;\n  }\n}\n\nAggregate_add(AccountInfoResponse, \"ACCTINFORS\");\nElement_add(AccountInfoResponse, { name: \"DTACCTUP\", required: true, order: 0, type: Date, read: AccountInfoResponse.prototype.getLastUpdated, write: AccountInfoResponse.prototype.setLastUpdated });\nChildAggregate_add(AccountInfoResponse, { order: 10, type: Array, collectionEntryType: AccountProfile, read: AccountInfoResponse.prototype.getAccounts, write: AccountInfoResponse.prototype.setAccounts });\n\n}\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/signup/AccountInfoResponse.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../TransactionWrappedResponseMessage'/>\n///<reference path='AccountInfoResponse'/>\n\nmodule ofx4js.domain.data.signup {\n\nimport TransactionWrappedResponseMessage = ofx4js.domain.data.TransactionWrappedResponseMessage;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * @author Ryan Heaton\n */\nexport class AccountInfoResponseTransaction extends TransactionWrappedResponseMessage<AccountInfoResponse> {\n\n  private message: AccountInfoResponse;\n\n  /**\n   * The wrapped message.\n   *\n   * @return The wrapped message.\n   */\n  public getMessage(): AccountInfoResponse {\n    return this.message;\n  }\n\n  /**\n   * The wrapped message.\n   *\n   * @param message The wrapped message.\n   */\n  public setMessage(message: AccountInfoResponse): void {\n    this.message = message;\n  }\n\n  // Inherited.\n  public getWrappedMessage(): AccountInfoResponse {\n    return this.getMessage();\n  }\n}\n\nAggregate_add( AccountInfoResponseTransaction, \"ACCTINFOTRNRS\" );\nChildAggregate_add(AccountInfoResponseTransaction, { required: true, order: 30, type: AccountInfoResponse, read: AccountInfoResponseTransaction.prototype.getMessage, write: AccountInfoResponseTransaction.prototype.setMessage });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/signup/AccountInfoResponseTransaction.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../ResponseMessageSet'/>\n///<reference path='../MessageSetType'/>\n///<reference path='AccountInfoResponseTransaction'/>\n\nmodule ofx4js.domain.data.signup {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * @author Ryan Heaton\n */\nexport class SignupResponseMessageSet extends ResponseMessageSet {\n\n  private accountInfoResponse: AccountInfoResponseTransaction;\n\n  public getType(): MessageSetType {\n    return MessageSetType.signup;\n  }\n\n  /**\n   * The account info response.\n   *\n   * @return The account info response.\n   */\n  public getAccountInfoResponse(): AccountInfoResponseTransaction {\n    return this.accountInfoResponse;\n  }\n\n  /**\n   * The account info response.\n   *\n   * @param accountInfoResponse The account info response.\n   */\n  public setAccountInfoResponse(accountInfoResponse: AccountInfoResponseTransaction): void {\n    this.accountInfoResponse = accountInfoResponse;\n  }\n\n  /**\n   * The response messages.\n   *\n   * @return The response messages.\n   */\n  public getResponseMessages(): Array<ResponseMessage> {\n    var messages: Array<ResponseMessage> = new Array<ResponseMessage>();\n\n    if (this.getAccountInfoResponse() != null) {\n      messages.push(this.getAccountInfoResponse());\n    }\n\n    return messages;\n  }\n}\n\nAggregate_add(SignupResponseMessageSet, \"SIGNUPMSGSRSV1\");\nChildAggregate_add(SignupResponseMessageSet, { order: 0, type: AccountInfoResponseTransaction, read: SignupResponseMessageSet.prototype.getAccountInfoResponse, write: SignupResponseMessageSet.prototype.setAccountInfoResponse });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/signup/SignupResponseMessageSet.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule ofx4js.domain.data.profile {\n\n/**\n * @author Ryan Heaton\n * @see \"Section 7.1.5, OFX Spec\"\n */\nexport enum ClientRoutingCapability {\n\n  NONE,\n\n  SERVICE,\n\n  MESSAGE_SET\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/ClientRoutingCapability.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n///<reference path='../RequestMessage'/>\n///<reference path='ClientRoutingCapability'/>\n\nmodule ofx4js.domain.data.profile {\n\nimport RequestMessage = ofx4js.domain.data.RequestMessage;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * @author Ryan Heaton\n * @see \"Section 7.1.5, OFX Spec\"\n */\nexport class ProfileRequest extends RequestMessage {\n\n  private routingCapability: ClientRoutingCapability;\n  private profileLastUpdated: Date;\n  \n  constructor() {\n    super();\n    this.routingCapability = ClientRoutingCapability.MESSAGE_SET;\n  }\n\n  /**\n   * The client routing capability.\n   *\n   * @return The client routing capability.\n   */\n  public getRoutingCapability(): ClientRoutingCapability {\n    return this.routingCapability;\n  }\n\n  /**\n   * The client routing capability.\n   *\n   * @param routingCapability The client routing capability.\n   */\n  public setRoutingCapability(routingCapability: ClientRoutingCapability): void {\n    this.routingCapability = routingCapability;\n  }\n\n  /**\n   * The date the profile was last updated.\n   *\n   * @return The date the profile was last updated.\n   */\n  public getProfileLastUpdated(): Date {\n    return this.profileLastUpdated;\n  }\n\n  /**\n   * The date the profile was last updated.\n   *\n   * @param profileLastUpdated The date the profile was last updated.\n   */\n  public setProfileLastUpdated(profileLastUpdated: Date): void {\n    this.profileLastUpdated = profileLastUpdated;\n  }\n}\n\nAggregate_add( ProfileRequest, \"PROFRQ\" );\nElement_add(ProfileRequest, { name: \"CLIENTROUTING\", order: 0, type: ClientRoutingCapability, read: ProfileRequest.prototype.getRoutingCapability, write: ProfileRequest.prototype.setRoutingCapability });\nElement_add(ProfileRequest, { name: \"DTPROFUP\", order: 10, type: Date, read: ProfileRequest.prototype.getProfileLastUpdated, write: ProfileRequest.prototype.setProfileLastUpdated });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/ProfileRequest.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../TransactionWrappedRequestMessage'/>\n///<reference path='ProfileRequest'/>\n\nmodule ofx4js.domain.data.profile {\n\nimport TransactionWrappedRequestMessage = ofx4js.domain.data.TransactionWrappedRequestMessage;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\n\n/**\n * @author Ryan Heaton\n */\nexport class ProfileRequestTransaction extends TransactionWrappedRequestMessage<ProfileRequest> {\n\n  private message: ProfileRequest;\n\n  /**\n   * The wrapped message.\n   *\n   * @return The wrapped message.\n   */\n  public getMessage(): ProfileRequest {\n    return this.message;\n  }\n\n  /**\n   * The wrapped message.\n   *\n   * @param message The wrapped message.\n   */\n  public setMessage(message: ProfileRequest): void {\n    this.message = message;\n  }\n\n  // Inherited.\n  public setWrappedMessage(message: ProfileRequest): void {\n    this.setMessage(message);\n  }\n}\n\nAggregate_add( ProfileRequestTransaction, \"PROFTRNRQ\" );\nChildAggregate_add(ProfileRequestTransaction, { required: true, order: 30, type: ProfileRequest, read: ProfileRequestTransaction.prototype.getMessage, write: ProfileRequestTransaction.prototype.setMessage });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/ProfileRequestTransaction.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../MessageSetType'/>\n///<reference path='../RequestMessageSet'/>\n///<reference path='ProfileRequestTransaction'/>\n\nmodule ofx4js.domain.data.profile {\n\nimport MessageSetType = ofx4js.domain.data.MessageSetType;\nimport RequestMessageSet = ofx4js.domain.data.RequestMessageSet;\nimport RequestMessage = ofx4js.domain.data.RequestMessage;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * @author Ryan Heaton\n * @see \"Section 7 OFX Spec\"\n */\nexport class ProfileRequestMessageSet extends RequestMessageSet {\n\n  private profileRequest: ProfileRequestTransaction;\n\n  public getType(): MessageSetType {\n    return MessageSetType.profile;\n  }\n\n  /**\n   * The profile request.\n   *\n   * @return The profile request.\n   */\n  public getProfileRequest(): ProfileRequestTransaction {\n    return this.profileRequest;\n  }\n\n  /**\n   * The profile request.\n   *\n   * @param profileRequest The profile request.\n   */\n  public setProfileRequest(profileRequest: ProfileRequestTransaction): void {\n    this.profileRequest = profileRequest;\n  }\n\n\n  // Inherited.\n  public getRequestMessages(): Array<RequestMessage> {\n    var requestMessages: Array<RequestMessage> = new Array<RequestMessage>();\n    if (this.getProfileRequest() != null) {\n      requestMessages.push(this.getProfileRequest());\n    }\n    return requestMessages;\n  }\n}\n\nAggregate_add( ProfileRequestMessageSet, \"PROFMSGSRQV1\" );\nChildAggregate_add(ProfileRequestMessageSet, { required: true, order: 0, type: ProfileRequestTransaction, read: ProfileRequestMessageSet.prototype.getProfileRequest, write: ProfileRequestMessageSet.prototype.setProfileRequest });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/ProfileRequestMessageSet.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n///<reference path='../ApplicationSecurity'/>\n///<reference path='SynchronizationCapability'/>\n\nmodule ofx4js.domain.data.profile {\n\nimport ApplicationSecurity = ofx4js.domain.data.ApplicationSecurity;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Core information about a specific version of a specific message set.\n *\n * @author Ryan Heaton\n * @see \"Section 7.2.1, OFX Spec\"\n */\nexport class CoreMessageSetInfo {\n\n  private version: string;\n  private serviceProviderName: string;\n  private url: string;\n  private security: ApplicationSecurity;\n  private sslRequired: boolean;\n  private realm: string;\n  private language: string;\n  private syncCapability: SynchronizationCapability;\n  private fileBasedErrorRecoverySupport: boolean;\n  private timeout: number;\n  \n  constructor() {\n    this.version = \"1\";\n    this.language = \"ENG\"; //Locale.US.getISO3Language();\n  }\n\n  /**\n   * Version of the message set.\n   *\n   * @return The version of the message set.\n   */\n  public getVersion(): string {\n    return this.version;\n  }\n\n  /**\n   * The version of the message set.\n   *\n   * @param version The version of the message set.\n   */\n  public setVersion(version: string): void {\n    this.version = version;\n  }\n\n  /**\n   * The name of the service provider (sometimes the message set processing is outsourced).\n   *\n   * @return The name of the service provider (sometimes the message set processing is outsourced).\n   */\n  public getServiceProviderName(): string {\n    return this.serviceProviderName;\n  }\n\n  /**\n   * The name of the service provider (sometimes the message set processing is outsourced).\n   *\n   * @param serviceProviderName The name of the service provider (sometimes the message set processing is outsourced).\n   */\n  public setServiceProviderName(serviceProviderName: string): void {\n    this.serviceProviderName = serviceProviderName;\n  }\n\n  /**\n   * The URL at which the message set is processed.\n   *\n   * @return The URL at which the message set is processed.\n   */\n  public getUrl(): string {\n    return this.url;\n  }\n\n  /**\n   * The URL at which the message set is processed.\n   *\n   * @param url The URL at which the message set is processed.\n   */\n  public setUrl(url: string): void {\n    this.url = url;\n  }\n\n  /**\n   * The application-level security required for this message set.\n   *\n   * @return The application-level security required for this message set.\n   */\n  public getSecurity(): ApplicationSecurity {\n    return this.security;\n  }\n\n  /**\n   * The application-level security required for this message set.\n   *\n   * @param security The application-level security required for this message set.\n   */\n  public setSecurity(security: ApplicationSecurity): void {\n    this.security = security;\n  }\n\n  /**\n   * Whether transport-level security is required for this message set.\n   *\n   * @return Whether transport-level security is required for this message set.\n   */\n  public getSslRequired(): boolean {\n    return this.sslRequired;\n  }\n\n  /**\n   * Whether transport-level security is required for this message set.\n   *\n   * @param sslRequired Whether transport-level security is required for this message set.\n   */\n  public setSslRequired(sslRequired: boolean): void {\n    this.sslRequired = sslRequired;\n  }\n\n  /**\n   * The sign-on realm.\n   *\n   * @return The sign-on realm.\n   */\n  public getRealm(): string {\n    return this.realm;\n  }\n\n  /**\n   * The sign-on realm.\n   *\n   * @param realm The sign-on realm.\n   */\n  public setRealm(realm: string): void {\n    this.realm = realm;\n  }\n\n  /**\n   * The language.\n   *\n   * @return The language.\n   * @see java.util.Locale#getISO3Language()\n   */\n  public getLanguage(): string {\n    return this.language;\n  }\n\n  /**\n   * The language.\n   *\n   * @param language The language.\n   */\n  public setLanguage(language: string): void {\n    this.language = language;\n  }\n\n  /**\n   * The synchronization capability for this message set.\n   *\n   * @return The synchronization capability for this message set.\n   */\n  public getSyncCapability(): SynchronizationCapability {\n    return this.syncCapability;\n  }\n\n  /**\n   * The synchronization capability for this message set.\n   *\n   * @param syncCapability The synchronization capability for this message set.\n   */\n  public setSyncCapability(syncCapability: SynchronizationCapability): void {\n    this.syncCapability = syncCapability;\n  }\n\n  /**\n   * Whether there exists support for resposne-file based error recovery.\n   *\n   * @return Whether there exists support for resposne-file based error recovery.\n   */\n  public getFileBasedErrorRecoverySupport(): boolean {\n    return this.fileBasedErrorRecoverySupport;\n  }\n\n  /**\n   * Whether there exists support for resposne-file based error recovery.\n   *\n   * @param fileBasedErrorRecoverySupport Whether there exists support for resposne-file based error recovery.\n   */\n  public setFileBasedErrorRecoverySupport(fileBasedErrorRecoverySupport: boolean): void {\n    this.fileBasedErrorRecoverySupport = fileBasedErrorRecoverySupport;\n  }\n\n  /**\n   * Gets the \"INTU.TIMEOUT\" field. There's no public documentation of this field but E*TRADE sends\n   * it. It likely is some type of timeout in seconds.\n   *\n   * @return the \"INTU.TIMEOUT\" property\n   */\n  public getIntuTimeout(): number {\n    return this.timeout;\n  }\n\n  /**\n   * Sets the \"INTU.TIMEOUT\" field. There's no public documentation of this field but E*TRADE sends\n   * it. It likely is some type of timeout in seconds.\n   *\n   * @param timeout the \"INTU.TIMEOUT\" property\n   */\n  public setIntuTimeout(timeout: number): void {\n    this.timeout = timeout;\n  }\n}\n\nAggregate_add( CoreMessageSetInfo, \"MSGSETCORE\" );\nElement_add(CoreMessageSetInfo, { name: \"VER\", required: true, order: 0, type: String, read: CoreMessageSetInfo.prototype.getVersion, write: CoreMessageSetInfo.prototype.setVersion });\nElement_add(CoreMessageSetInfo, { name: \"SPNAME\", order: 10, type: String, read: CoreMessageSetInfo.prototype.getServiceProviderName, write: CoreMessageSetInfo.prototype.setServiceProviderName });\nElement_add(CoreMessageSetInfo, { name: \"URL\", required: true, order: 20, type: String, read: CoreMessageSetInfo.prototype.getUrl, write: CoreMessageSetInfo.prototype.setUrl });\nElement_add(CoreMessageSetInfo, { name: \"OFXSEC\", required: true, order: 30, type: ApplicationSecurity, read: CoreMessageSetInfo.prototype.getSecurity, write: CoreMessageSetInfo.prototype.setSecurity });\nElement_add(CoreMessageSetInfo, { name: \"TRANSPSEC\", required: true, order: 40, type: Boolean, read: CoreMessageSetInfo.prototype.getSslRequired, write: CoreMessageSetInfo.prototype.setSslRequired });\nElement_add(CoreMessageSetInfo, { name: \"SIGNONREALM\", required: true, order: 50, type: String, read: CoreMessageSetInfo.prototype.getRealm, write: CoreMessageSetInfo.prototype.setRealm });\nElement_add(CoreMessageSetInfo, { name: \"LANGUAGE\", required: true, order: 60, type: String, read: CoreMessageSetInfo.prototype.getLanguage, write: CoreMessageSetInfo.prototype.setLanguage });\nElement_add(CoreMessageSetInfo, { name: \"SYNCMODE\", required: true, order: 70, type: SynchronizationCapability, read: CoreMessageSetInfo.prototype.getSyncCapability, write: CoreMessageSetInfo.prototype.setSyncCapability });\nElement_add(CoreMessageSetInfo, { name: \"RESPFILEER\", required: true, order: 80, type: Boolean, read: CoreMessageSetInfo.prototype.getFileBasedErrorRecoverySupport, write: CoreMessageSetInfo.prototype.setFileBasedErrorRecoverySupport });\nElement_add(CoreMessageSetInfo, { name: \"INTU.TIMEOUT\", order: 90, type: Number, read: CoreMessageSetInfo.prototype.getIntuTimeout, write: CoreMessageSetInfo.prototype.setIntuTimeout });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/CoreMessageSetInfo.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../MessageSetProfile'/>\n///<reference path='../MessageSetType'/>\n///<reference path='CoreMessageSetInfo'/>\n\nmodule ofx4js.domain.data.profile {\n\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport MessageSetProfile = ofx4js.domain.data.MessageSetProfile;\nimport ApplicationSecurity = ofx4js.domain.data.ApplicationSecurity;\nimport MessageSetType = ofx4js.domain.data.MessageSetType;\n\n/**\n * Information specific to a version of a message set.\n *\n * @author Ryan Heaton\n * @see \"Section 7.2.1, OFX Spec\"\n */\nexport /*abstract*/ class VersionSpecificMessageSetInfo implements MessageSetProfile {\n\n  private core: CoreMessageSetInfo;\n\n  /**\n   * The information core.\n   *\n   * @return The information core.\n   */\n  public getCore(): CoreMessageSetInfo {\n    return this.core;\n  }\n\n  /**\n   * The information core.\n   *\n   * @param core The information core.\n   */\n  public setCore(core: CoreMessageSetInfo): void {\n    this.core = core;\n  }\n\n  /**\n   * The message set type.\n   *\n   * @return The message set type.\n   */\n  public /*abstract*/ getMessageSetType(): MessageSetType { throw new OFXException(\"abstract\"); }\n\n  public getVersion(): string {\n    return this.core != null ? this.core.getVersion() : null;\n  }\n\n  public getServiceProviderName(): string {\n    return this.core != null ? this.core.getServiceProviderName() : null;\n  }\n\n  public getUrl(): string {\n    return this.core != null ? this.core.getUrl() : null;\n  }\n\n  public getSecurity(): ApplicationSecurity {\n    return this.core != null ? this.core.getSecurity() : null;\n  }\n\n  public isSslRequired(): boolean {\n    return this.core != null && this.core.getSslRequired() != null ? this.core.getSslRequired() : true;\n  }\n\n  public getRealm(): string {\n    return this.core != null ? this.core.getRealm() : null;\n  }\n\n  public getLanguage(): string {\n    return this.core != null ? this.core.getLanguage() : null;\n  }\n\n  public getSyncCapability(): SynchronizationCapability {\n    return this.core != null ? this.core.getSyncCapability() : null;\n  }\n\n  public hasFileBasedErrorRecoverySupport(): boolean {\n    return this.core != null && this.core.getFileBasedErrorRecoverySupport() != null ? this.core.getFileBasedErrorRecoverySupport() : false;\n  }\n}\n\nChildAggregate_add(VersionSpecificMessageSetInfo, { order: 0, type: CoreMessageSetInfo, read: VersionSpecificMessageSetInfo.prototype.getCore, write: VersionSpecificMessageSetInfo.prototype.setCore });\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/VersionSpecificMessageSetInfo.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='VersionSpecificMessageSetInfo'/>\n\nmodule ofx4js.domain.data.profile {\n\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * Information about a message set.\n *\n * @author Ryan Heaton\n * @see \"Section 7.2.1, OFX Spec\"\n */\nexport /*abstract*/ class AbstractMessageSetInfo {\n\n  private versionSpecificInformationList: Array<VersionSpecificMessageSetInfo>;\n\n  /**\n   * List of information about a message set for each version supported.\n   *\n   * @return List of information about a message set for each version supported.\n   */\n  public getVersionSpecificInformationList(): Array<VersionSpecificMessageSetInfo> {\n    return this.versionSpecificInformationList;\n  }\n\n  /**\n   * List of information about a message set for each version supported.\n   *\n   * @param versionSpecificInformationList List of information about a message set for each version supported.\n   */\n  public setVersionSpecificInformationList(versionSpecificInformationList: Array<VersionSpecificMessageSetInfo>): void {\n    this.versionSpecificInformationList = versionSpecificInformationList;\n  }\n}\n\nChildAggregate_add(AbstractMessageSetInfo, { order: 0, type: Array, collectionEntryType: VersionSpecificMessageSetInfo, read: AbstractMessageSetInfo.prototype.getVersionSpecificInformationList, write: AbstractMessageSetInfo.prototype.setVersionSpecificInformationList });\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/AbstractMessageSetInfo.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='AbstractMessageSetInfo'/>\n\nmodule ofx4js.domain.data.profile {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * @author Ryan Heaton\n * @see \"Section 7.2, OFX Spec\"\n */\nexport class MessageSetInfoList {\n\n  private informationList: Array<AbstractMessageSetInfo>;\n\n  /**\n   * The list of information for each message set.\n   *\n   * @return The list of information for each message set.\n   */\n  public getInformationList(): Array<AbstractMessageSetInfo> {\n    return this.informationList;\n  }\n\n  /**\n   * The list of information for each message set.\n   *\n   * @param informationList The list of information for each message set.\n   */\n  public setInformationList(informationList: Array<AbstractMessageSetInfo>): void {\n    this.informationList = informationList;\n  }\n}\n\nAggregate_add( MessageSetInfoList, \"MSGSETLIST\" );\nChildAggregate_add(MessageSetInfoList, { order: 0, type: Array, collectionEntryType: AbstractMessageSetInfo, read: MessageSetInfoList.prototype.getInformationList, write: MessageSetInfoList.prototype.setInformationList });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/MessageSetInfoList.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n///<reference path='../SignonProfile'/>\n///<reference path='CharacterType'/>\n\nmodule ofx4js.domain.data.profile {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\nimport SignonProfile = ofx4js.domain.data.SignonProfile;\n\n/**\n * Sign-on information\n *\n * @author Ryan Heaton\n * @see \"Section 7.2.2, OFX Spec\"\n */\nexport class SignonInfo implements SignonProfile {\n\n  private realm: string;\n  private minPasswordCharacters: number;\n  private maxPasswordCharacters: number;\n  private passwordCharacterType: CharacterType;\n  private passwordCaseSensitive: boolean;\n  private passwordSpecialCharsAllowed: boolean;\n  private passwordSpacesAllowed: boolean;\n  private changePasswordSupported: boolean;\n  private changePasswordFirstRequired: boolean;\n  private additionalCredientialsLabel1: string;\n  private additionalCredientialsLabel2: string;\n  private clientUIDRequired: boolean;\n  private authTokenRequiredForFirstSignon: boolean;\n  private authTokenLabel: string;\n  private authTokenInfoURL: string;\n  private mfaSupported: boolean;\n  private mfaChallengeRequiredForFirstSignon: boolean;\n  \n  constructor() {\n    this.passwordCaseSensitive = true;\n    this.passwordSpecialCharsAllowed = true;\n    this.passwordSpacesAllowed = true;\n  }\n\n  /**\n   * The name of the sign-on realm.\n   *\n   * @return The name of the sign-on realm.\n   */\n  public getRealm(): string {\n    return this.realm;\n  }\n\n  /**\n   * The name of the sign-on realm.\n   *\n   * @param realm The name of the sign-on realm.\n   */\n  public setRealm(realm: string): void {\n    this.realm = realm;\n  }\n\n  /**\n   * The minimum number of password characters.\n   *\n   * @return The minimum number of password characters.\n   */\n  public getMinPasswordCharacters(): number {\n    return this.minPasswordCharacters;\n  }\n\n  /**\n   * The minimum number of password characters.\n   *\n   * @param minPasswordCharacters The minimum number of password characters.\n   */\n  public setMinPasswordCharacters(minPasswordCharacters: number): void {\n    this.minPasswordCharacters = minPasswordCharacters;\n  }\n\n  /**\n   * The maximum number of password characters.\n   *\n   * @return The maximum number of password characters.\n   */\n  public getMaxPasswordCharacters(): number {\n    return this.maxPasswordCharacters;\n  }\n\n  /**\n   * The maximum number of password characters.\n   *\n   * @param maxPasswordCharacters The maximum number of password characters.\n   */\n  public setMaxPasswordCharacters(maxPasswordCharacters: number): void {\n    this.maxPasswordCharacters = maxPasswordCharacters;\n  }\n\n  /**\n   * The type of password characters supported.\n   *\n   * @return The type of password characters supported.\n   */\n  public getPasswordCharacterType(): CharacterType {\n    return this.passwordCharacterType;\n  }\n\n  /**\n   * The type of password characters supported.\n   *\n   * @param passwordCharacterType The type of password characters supported.\n   */\n  public setPasswordCharacterType(passwordCharacterType: CharacterType): void {\n    this.passwordCharacterType = passwordCharacterType;\n  }\n\n  /**\n   * Whether the password is case-sensitive.\n   *\n   * @return Whether the password is case-sensitive.\n   */\n  public getPasswordCaseSensitive(): boolean {\n    return this.passwordCaseSensitive;\n  }\n\n  /**\n   * Whether the password is case-sensitive.\n   *\n   * @param passwordCaseSensitive Whether the password is case-sensitive.\n   */\n  public setPasswordCaseSensitive(passwordCaseSensitive: boolean): void {\n    this.passwordCaseSensitive = passwordCaseSensitive;\n  }\n\n  /**\n   * Whether special characters are allowed in the password.\n   *\n   * @return Whether special characters are allowed in the password.\n   */\n  public getPasswordSpecialCharsAllowed(): boolean {\n    return this.passwordSpecialCharsAllowed;\n  }\n\n  /**\n   * Whether special characters are allowed in the password.\n   *\n   * @param passwordSpecialCharsAllowed Whether special characters are allowed in the password.\n   */\n  public setPasswordSpecialCharsAllowed(passwordSpecialCharsAllowed: boolean): void {\n    this.passwordSpecialCharsAllowed = passwordSpecialCharsAllowed;\n  }\n\n  /**\n   * Whether spaces are allowed in the password.\n   *\n   * @return Whether spaces are allowed in the password.\n   */\n  public getPasswordSpacesAllowed(): boolean {\n    return this.passwordSpacesAllowed;\n  }\n\n  /**\n   * Whether spaces are allowed in the password.\n   *\n   * @param passwordSpacesAllowed Whether spaces are allowed in the password.\n   */\n  public setPasswordSpacesAllowed(passwordSpacesAllowed: boolean): void {\n    this.passwordSpacesAllowed = passwordSpacesAllowed;\n  }\n\n  /**\n   * Whether the server can process a password change request for this realm.\n   *\n   * @return Whether the server can process a password change request for this realm.\n   */\n  public getChangePasswordSupported(): boolean {\n    return this.changePasswordSupported;\n  }\n\n  /**\n   * Whether the server can process a password change request for this realm.\n   *\n   * @param changePasswordSupported Whether the server can process a password change request for this realm.\n   */\n  public setChangePasswordSupported(changePasswordSupported: boolean): void {\n    this.changePasswordSupported = changePasswordSupported;\n  }\n\n  /**\n   * Whether the server requires the user to change their password as part of their first signon.\n   *\n   * @return Whether the server requires the user to change their password as part of their first signon.\n   */\n  public getChangePasswordFirstRequired(): boolean {\n    return this.changePasswordFirstRequired;\n  }\n\n  /**\n   * Whether the server requires the user to change their password as part of their first signon.\n   *\n   * @param changePasswordFirstRequired Whether the server requires the user to change their password as part of their first signon.\n   */\n  public setChangePasswordFirstRequired(changePasswordFirstRequired: boolean): void {\n    this.changePasswordFirstRequired = changePasswordFirstRequired;\n  }\n\n  /**\n   * Label for a set of additional credentials that the user must supply.\n   *\n   * @return Label for a set of additional credentials that the user must supply.\n   */\n  public getAdditionalCredientialsLabel1(): string {\n    return this.additionalCredientialsLabel1;\n  }\n\n  /**\n   * Label for a set of additional credentials that the user must supply.\n   *\n   * @param additionalCredientialsLabel1 Label for a set of additional credentials that the user must supply.\n   */\n  public setAdditionalCredientialsLabel1(additionalCredientialsLabel1: string): void {\n    this.additionalCredientialsLabel1 = additionalCredientialsLabel1;\n  }\n\n  /**\n   * Label for a set of additional credentials that the user must supply.\n   *\n   * @return Label for a set of additional credentials that the user must supply.\n   */\n  public getAdditionalCredientialsLabel2(): string {\n    return this.additionalCredientialsLabel2;\n  }\n\n  /**\n   * Label for a set of additional credentials that the user must supply.\n   *\n   * @param additionalCredientialsLabel2 Label for a set of additional credentials that the user must supply.\n   */\n  public setAdditionalCredientialsLabel2(additionalCredientialsLabel2: string): void {\n    this.additionalCredientialsLabel2 = additionalCredientialsLabel2;\n  }\n\n  /**\n   * Whether a client UID is required for teh sign-on.\n   *\n   * @return Whether a client UID is required for teh sign-on.\n   */\n  public getClientUIDRequired(): boolean {\n    return this.clientUIDRequired;\n  }\n\n  /**\n   * Whether a client UID is required for teh sign-on.\n   *\n   * @param clientUIDRequired Whether a client UID is required for teh sign-on.\n   */\n  public setClientUIDRequired(clientUIDRequired: boolean): void {\n    this.clientUIDRequired = clientUIDRequired;\n  }\n\n  /**\n   * Whether an auth token is required for the sign-on.\n   *\n   * @return Whether an auth token is required for the sign-on.\n   */\n  public getAuthTokenRequiredForFirstSignon(): boolean {\n    return this.authTokenRequiredForFirstSignon;\n  }\n\n  /**\n   * Whether an auth token is required for the sign-on.\n   *\n   * @param authTokenRequiredForFirstSignon\n   *         Whether an auth token is required for the sign-on.\n   */\n  public setAuthTokenRequiredForFirstSignon(authTokenRequiredForFirstSignon: boolean): void {\n    this.authTokenRequiredForFirstSignon = authTokenRequiredForFirstSignon;\n  }\n\n  /**\n   * The label of the auth token.\n   *\n   * @return The label of the auth token.\n   */\n  public getAuthTokenLabel(): string {\n    return this.authTokenLabel;\n  }\n\n  /**\n   * The label of the auth token.\n   *\n   * @param authTokenLabel The label of the auth token.\n   */\n  public setAuthTokenLabel(authTokenLabel: string): void {\n    this.authTokenLabel = authTokenLabel;\n  }\n\n  /**\n   * The URL for the auth token information.\n   *\n   * @return The URL for the auth token information.\n   */\n  public getAuthTokenInfoURL(): string {\n    return this.authTokenInfoURL;\n  }\n\n  /**\n   * The URL for the auth token information.\n   *\n   * @param authTokenInfoURL The URL for the auth token information.\n   */\n  public setAuthTokenInfoURL(authTokenInfoURL: string): void {\n    this.authTokenInfoURL = authTokenInfoURL;\n  }\n\n  /**\n   * Whether MFA is supported.\n   *\n   * @return Whether MFA is supported.\n   */\n  public getMfaSupported(): boolean {\n    return this.mfaSupported;\n  }\n\n  /**\n   * Whether MFA is supported.\n   *\n   * @param mfaSupported Whether MFA is supported.\n   */\n  public setMfaSupported(mfaSupported: boolean): void {\n    this.mfaSupported = mfaSupported;\n  }\n\n  /**\n   * Whether an MFA challenge request is required for the first sign-on into this realm.\n   *\n   * @return Whether an MFA challenge request is required for the first sign-on into this realm.\n   */\n  public getMfaChallengeRequiredForFirstSignon(): boolean {\n    return this.mfaChallengeRequiredForFirstSignon;\n  }\n\n  /**\n   * Whether an MFA challenge request is required for the first sign-on into this realm.\n   *\n   * @param mfaChallengeRequiredForFirstSignon\n   *         Whether an MFA challenge request is required for the first sign-on into this realm.\n   */\n  public setMfaChallengeRequiredForFirstSignon(mfaChallengeRequiredForFirstSignon: boolean): void {\n    this.mfaChallengeRequiredForFirstSignon = mfaChallengeRequiredForFirstSignon;\n  }\n}\n\nAggregate_add( SignonInfo, \"SIGNONINFO\" );\nElement_add(SignonInfo, { name: \"SIGNONREALM\", required: true, order: 0, type: String, read: SignonInfo.prototype.getRealm, write: SignonInfo.prototype.setRealm });\nElement_add(SignonInfo, { name: \"MIN\", required: true, order: 10, type: Number, read: SignonInfo.prototype.getMinPasswordCharacters, write: SignonInfo.prototype.setMinPasswordCharacters });\nElement_add(SignonInfo, { name: \"MAX\", required: true, order: 20, type: Number, read: SignonInfo.prototype.getMaxPasswordCharacters, write: SignonInfo.prototype.setMaxPasswordCharacters });\nElement_add(SignonInfo, { name: \"CHARTYPE\", required: true, order: 30, type: CharacterType, read: SignonInfo.prototype.getPasswordCharacterType, write: SignonInfo.prototype.setPasswordCharacterType });\nElement_add(SignonInfo, { name: \"CASESEN\", required: true, order: 40, type: Boolean, read: SignonInfo.prototype.getPasswordCaseSensitive, write: SignonInfo.prototype.setPasswordCaseSensitive });\nElement_add(SignonInfo, { name: \"SPECIAL\", required: true, order: 50, type: Boolean, read: SignonInfo.prototype.getPasswordSpecialCharsAllowed, write: SignonInfo.prototype.setPasswordSpecialCharsAllowed });\nElement_add(SignonInfo, { name: \"SPACES\", required: true, order: 60, type: Boolean, read: SignonInfo.prototype.getPasswordSpacesAllowed, write: SignonInfo.prototype.setPasswordSpacesAllowed });\nElement_add(SignonInfo, { name: \"PINCH\", required: true, order: 70, type: Boolean, read: SignonInfo.prototype.getChangePasswordSupported, write: SignonInfo.prototype.setChangePasswordSupported });\nElement_add(SignonInfo, { name: \"CHGPINFIRST\", required: true, order: 80, type: Boolean, read: SignonInfo.prototype.getChangePasswordFirstRequired, write: SignonInfo.prototype.setChangePasswordFirstRequired });\nElement_add(SignonInfo, { name: \"USERCRED1LABEL\", order: 90, type: String, read: SignonInfo.prototype.getAdditionalCredientialsLabel1, write: SignonInfo.prototype.setAdditionalCredientialsLabel1 });\nElement_add(SignonInfo, { name: \"USERCRED2LABEL\", order: 100, type: String, read: SignonInfo.prototype.getAdditionalCredientialsLabel2, write: SignonInfo.prototype.setAdditionalCredientialsLabel2 });\nElement_add(SignonInfo, { name: \"CLIENTUIDREQ\", order: 110, type: Boolean, read: SignonInfo.prototype.getClientUIDRequired, write: SignonInfo.prototype.setClientUIDRequired });\nElement_add(SignonInfo, { name: \"AUTHTOKENFIRST\", order: 120, type: Boolean, read: SignonInfo.prototype.getAuthTokenRequiredForFirstSignon, write: SignonInfo.prototype.setAuthTokenRequiredForFirstSignon });\nElement_add(SignonInfo, { name: \"AUTHTOKENLABEL\", order: 130, type: String, read: SignonInfo.prototype.getAuthTokenLabel, write: SignonInfo.prototype.setAuthTokenLabel });\nElement_add(SignonInfo, { name: \"AUTHTOKENINFOURL\", order: 140, type: String, read: SignonInfo.prototype.getAuthTokenInfoURL, write: SignonInfo.prototype.setAuthTokenInfoURL });\nElement_add(SignonInfo, { name: \"MFACHALLENGESUPT\", order: 150, type: Boolean, read: SignonInfo.prototype.getMfaSupported, write: SignonInfo.prototype.setMfaSupported });\nElement_add(SignonInfo, { name: \"MFACHALLENGEFIRST\", order: 160, type: Boolean, read: SignonInfo.prototype.getMfaChallengeRequiredForFirstSignon, write: SignonInfo.prototype.setMfaChallengeRequiredForFirstSignon });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/SignonInfo.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='SignonInfo'/>\n\nmodule ofx4js.domain.data.profile {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * List of signon information.\n *\n * @author Ryan Heaton\n * @see \"Section 7.2.2, OFX Spec\"\n */\nexport class SignonInfoList {\n\n  private infoList: Array<SignonInfo>;\n\n  /**\n   * List of sign-on information.\n   *\n   * @return List of sign-on information.\n   */\n  public getInfoList(): Array<SignonInfo> {\n    return this.infoList;\n  }\n\n  /**\n   * List of sign-on information.\n   *\n   * @param infoList List of sign-on information.\n   */\n  public setInfoList(infoList: Array<SignonInfo>): void {\n    this.infoList = infoList;\n  }\n}\n\nAggregate_add( SignonInfoList, \"SIGNONINFOLIST\" );\nChildAggregate_add(SignonInfoList, { order: 0, type: Array, collectionEntryType: SignonInfo, read: SignonInfoList.prototype.getInfoList, write: SignonInfoList.prototype.setInfoList });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/SignonInfoList.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n///<reference path='../MessageSetProfile'/>\n///<reference path='../MessageSetType'/>\n///<reference path='../ResponseMessage'/>\n///<reference path='../SignonProfile'/>\n///<reference path='../../../client/FinancialInstitutionProfile'/>\n///<reference path='MessageSetInfoList'/>\n///<reference path='SignonInfoList'/>\n\nmodule ofx4js.domain.data.profile {\n\nimport MessageSetProfile = ofx4js.domain.data.MessageSetProfile;\nimport MessageSetType = ofx4js.domain.data.MessageSetType;\nimport ResponseMessage = ofx4js.domain.data.ResponseMessage;\nimport SignonProfile = ofx4js.domain.data.SignonProfile;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\nimport FinancialInstitutionProfile = ofx4js.client.FinancialInstitutionProfile;\n\n//import java.net.URL;\n\n/**\n * @author Ryan Heaton\n * @see \"Section 7.2 OFX Spec\"\n */\nexport class ProfileResponse extends ResponseMessage implements FinancialInstitutionProfile {\n\n  private messageSetList: MessageSetInfoList;\n  private signonInfoList: SignonInfoList;\n  private timestamp: Date;\n  private financialInstitutionName: string;\n  private address1: string;\n  private address2: string;\n  private address3: string;\n  private city: string;\n  private state: string;\n  private zip: string;\n  private country: string;\n  private customerServicePhone: string;\n  private technicalSupportPhone: string;\n  private fax: string;\n  private siteURL: string;\n  private email: string;\n\n  /**\n   * List of message set information.\n   * @return List of message set information.\n   */\n  public getMessageSetList(): MessageSetInfoList {\n    return this.messageSetList;\n  }\n\n  /**\n   * List of message set information.\n   *\n   * @param messageSetList List of message set information.\n   */\n  public setMessageSetList(messageSetList: MessageSetInfoList): void {\n    this.messageSetList = messageSetList;\n  }\n\n  /**\n   * List of signon information.\n   *\n   * @return List of signon information.\n   */\n  public getSignonInfoList(): SignonInfoList {\n    return this.signonInfoList;\n  }\n\n  /**\n   * List of signon information.\n   *\n   * @param signonInfoList List of signon information.\n   */\n  public setSignonInfoList(signonInfoList: SignonInfoList): void {\n    this.signonInfoList = signonInfoList;\n  }\n\n  // Inherited.\n  public getResponseMessageName(): string {\n    return \"profile\";\n  }\n\n  // Inherited.\n  public getLastUpdated(): Date {\n    return this.getTimestamp();\n  }\n\n  /**\n   * The timestamp of this profile update.\n   *\n   * @return The timestamp of this profile update.\n   */\n  public getTimestamp(): Date {\n    return this.timestamp;\n  }\n\n  /**\n   * The timestamp of this profile update.\n   *\n   * @param timestamp The timestamp of this profile update.\n   */\n  public setTimestamp(timestamp: Date): void {\n    this.timestamp = timestamp;\n  }\n\n  /**\n   * The name of the financial institution.\n   *\n   * @return The name of the financial institution.\n   */\n  public getFinancialInstitutionName(): string {\n    return this.financialInstitutionName;\n  }\n\n  /**\n   * The name of the financial institution.\n   *\n   * @param financialInstitutionName The name of the financial institution.\n   */\n  public setFinancialInstitutionName(financialInstitutionName: string): void {\n    this.financialInstitutionName = financialInstitutionName;\n  }\n\n  /**\n   * The address of the financial institution.\n   *\n   * @return The address of the financial institution.\n   */\n  public getAddress1(): string {\n    return this.address1;\n  }\n\n  /**\n   * The address of the financial institution.\n   *\n   * @param address1 The address of the financial institution.\n   */\n  public setAddress1(address1: string): void {\n    this.address1 = address1;\n  }\n\n  /**\n   * The address of the financial institution.\n   *\n   * @return The address of the financial institution.\n   */\n  public getAddress2(): string {\n    return this.address2;\n  }\n\n  /**\n   * The address of the financial institution.\n   *\n   * @param address2 The address of the financial institution.\n   */\n  public setAddress2(address2: string): void {\n    this.address2 = address2;\n  }\n\n  /**\n   * The address of the financial institution.\n   *\n   * @return The address of the financial institution.\n   */\n  public getAddress3(): string {\n    return this.address3;\n  }\n\n  /**\n   * The address of the financial institution.\n   *\n   * @param address3 The address of the financial institution.\n   */\n  public setAddress3(address3: string): void {\n    this.address3 = address3;\n  }\n\n  /**\n   * The city of the financial institution.\n   *\n   * @return The city of the financial institution.\n   */\n  public getCity(): string {\n    return this.city;\n  }\n\n  /**\n   * The city of the financial institution.\n   *\n   * @param city The city of the financial institution.\n   */\n  public setCity(city: string): void {\n    this.city = city;\n  }\n\n  /**\n   * The state of this financial institution.\n   *\n   * @return The state of this financial institution.\n   */\n  public getState(): string {\n    return this.state;\n  }\n\n  /**\n   * The state of this financial institution.\n   *\n   * @param state The state of this financial institution.\n   */\n  public setState(state: string): void {\n    this.state = state;\n  }\n\n  /**\n   * The postal code of this financial institution.\n   *\n   * @return The postal code of this financial institution.\n   */\n  public getZip(): string {\n    return this.zip;\n  }\n\n  /**\n   * The postal code of this financial institution.\n   *\n   * @param zip The postal code of this financial institution.\n   */\n  public setZip(zip: string): void {\n    this.zip = zip;\n  }\n\n  /**\n   * The country code for this financial institution.\n   *\n   * @return The country code for this financial institution.\n   * @see java.util.Locale#getISO3Country()\n   */\n  public getCountry(): string {\n    return this.country;\n  }\n\n  /**\n   * The country code for this financial institution.\n   *\n   * @param country The country code for this financial institution.\n   */\n  public setCountry(country: string): void {\n    this.country = country;\n  }\n\n  /**\n   * The phone number to customer service.\n   *\n   * @return The phone number to customer service.\n   */\n  public getCustomerServicePhone(): string {\n    return this.customerServicePhone;\n  }\n\n  /**\n   * The phone number to customer service.\n   *\n   * @param customerServicePhone The phone number to customer service.\n   */\n  public setCustomerServicePhone(customerServicePhone: string): void {\n    this.customerServicePhone = customerServicePhone;\n  }\n\n  /**\n   * The phone number to tech support.\n   *\n   * @return The phone number to tech support.\n   */\n  public getTechnicalSupportPhone(): string {\n    return this.technicalSupportPhone;\n  }\n\n  /**\n   * The phone number to tech support.\n   *\n   * @param technicalSupportPhone The phone number to tech support.\n   */\n  public setTechnicalSupportPhone(technicalSupportPhone: string): void {\n    this.technicalSupportPhone = technicalSupportPhone;\n  }\n\n  /**\n   * The fax number.\n   *\n   * @return The fax number.\n   */\n  public getFax(): string {\n    return this.fax;\n  }\n\n  /**\n   * The fax number.\n   *\n   * @param fax The fax number.\n   */\n  public setFax(fax: string): void {\n    this.fax = fax;\n  }\n\n  /**\n   * URL for the financial institution.\n   *\n   * @return URL for the financial institution.\n   */\n  public getSiteURL(): string {\n    return this.siteURL;\n  }\n\n  /**\n   * URL for the financial institution.\n   *\n   * @param siteURL URL for the financial institution.\n   */\n  public setSiteURL(siteURL: string): void {\n    this.siteURL = siteURL;\n  }\n\n  /**\n   * The email for this FI\n   *\n   * @return The email for this FI\n   */\n  public getEmail(): string {\n    return this.email;\n  }\n\n  /**\n   * The email for this FI\n   *\n   * @param email The email for this FI\n   */\n  public setEmail(email: string): void {\n    this.email = email;\n  }\n\n  public getMessageSetProfile(type: MessageSetType, version: string = null): MessageSetProfile {\n    return (version === null) ?\n      this.getMessageSetProfile_noversion(type) :\n      this.getMessageSetProfile_version(type, version);\n  }\n\n  public getMessageSetProfile_noversion(type: MessageSetType): MessageSetProfile {\n    var profiles: Array<MessageSetProfile> = this.getProfiles(type);\n    if (profiles.length > 1) {\n      throw new OFXException(\"More than one profile of type \" + type);\n    }\n    else if (profiles.length == 0) {\n      return null;\n    }\n    else {\n      return profiles[0];\n    }\n  }\n  \n  /**\n   * Get all the profiles of the specified type.\n   *\n   * @param type The type.\n   * @return The profiles.\n   */\n  protected getProfiles(type: MessageSetType): Array<MessageSetProfile> {\n    var profiles: Array<MessageSetProfile> = new Array<MessageSetProfile>();\n    if (this.getMessageSetList() != null && this.getMessageSetList().getInformationList() != null) {\n      for (var info of this.getMessageSetList().getInformationList()) {\n        if (info.getVersionSpecificInformationList() != null) {\n          for (var versionSpecificInfo of info.getVersionSpecificInformationList()) {\n            if (versionSpecificInfo.getMessageSetType() == type) {\n              profiles.push(versionSpecificInfo);\n            }\n          }\n        }\n      }\n    }\n    return profiles;\n  }\n\n  public getMessageSetProfile_version(type: MessageSetType, version: string): MessageSetProfile {\n    for (var profile of this.getProfiles(type)) {\n      if (version == null) {\n        if (profile.getVersion() == null) {\n          return profile;\n        }\n      }\n      else if (version === profile.getVersion()) {\n        return profile;\n      }\n    }\n    \n    return null;\n  }  \n\n  public getSignonProfile(messageSet: MessageSetProfile): SignonProfile {\n    if (this.getSignonInfoList() != null && this.getSignonInfoList().getInfoList() != null) {\n      for (var signonInfo of this.getSignonInfoList().getInfoList()) {\n        if (messageSet.getRealm() == null) {\n          if (signonInfo.getRealm() == null) {\n            return signonInfo;\n          }\n        }\n        else if (messageSet.getRealm() === signonInfo.getRealm()) {\n          return signonInfo;\n        }\n      }\n    }\n    return null;\n  }\n}\n\nAggregate_add( ProfileResponse, \"PROFRS\" );\nChildAggregate_add(ProfileResponse, { order: 0, type: MessageSetInfoList, read: ProfileResponse.prototype.getMessageSetList, write: ProfileResponse.prototype.setMessageSetList });\nChildAggregate_add(ProfileResponse, { order: 10, type: SignonInfoList, read: ProfileResponse.prototype.getSignonInfoList, write: ProfileResponse.prototype.setSignonInfoList });\nElement_add(ProfileResponse, { name: \"DTPROFUP\", order: 20, type: Date, read: ProfileResponse.prototype.getTimestamp, write: ProfileResponse.prototype.setTimestamp });\nElement_add(ProfileResponse, { name: \"FINAME\", order: 30, type: String, read: ProfileResponse.prototype.getFinancialInstitutionName, write: ProfileResponse.prototype.setFinancialInstitutionName });\nElement_add(ProfileResponse, { name: \"ADDR1\", required: true, order: 40, type: String, read: ProfileResponse.prototype.getAddress1, write: ProfileResponse.prototype.setAddress1 });\nElement_add(ProfileResponse, { name: \"ADDR2\", order: 50, type: String, read: ProfileResponse.prototype.getAddress2, write: ProfileResponse.prototype.setAddress2 });\nElement_add(ProfileResponse, { name: \"ADDR3\", order: 60, type: String, read: ProfileResponse.prototype.getAddress3, write: ProfileResponse.prototype.setAddress3 });\nElement_add(ProfileResponse, { name: \"CITY\", required: true, order: 70, type: String, read: ProfileResponse.prototype.getCity, write: ProfileResponse.prototype.setCity });\nElement_add(ProfileResponse, { name: \"STATE\", required: true, order: 80, type: String, read: ProfileResponse.prototype.getState, write: ProfileResponse.prototype.setState });\nElement_add(ProfileResponse, { name: \"POSTALCODE\", required: true, order: 90, type: String, read: ProfileResponse.prototype.getZip, write: ProfileResponse.prototype.setZip });\nElement_add(ProfileResponse, { name: \"COUNTRY\", required: true, order: 100, type: String, read: ProfileResponse.prototype.getCountry, write: ProfileResponse.prototype.setCountry });\nElement_add(ProfileResponse, { name: \"CSPHONE\", order: 110, type: String, read: ProfileResponse.prototype.getCustomerServicePhone, write: ProfileResponse.prototype.setCustomerServicePhone });\nElement_add(ProfileResponse, { name: \"TSPHONE\", order: 120, type: String, read: ProfileResponse.prototype.getTechnicalSupportPhone, write: ProfileResponse.prototype.setTechnicalSupportPhone });\nElement_add(ProfileResponse, { name: \"FAXPHONE\", order: 130, type: String, read: ProfileResponse.prototype.getFax, write: ProfileResponse.prototype.setFax });\nElement_add(ProfileResponse, { name: \"URL\", order: 140, type: String, read: ProfileResponse.prototype.getSiteURL, write: ProfileResponse.prototype.setSiteURL });\nElement_add(ProfileResponse, { name: \"EMAIL\", order: 150, type: String, read: ProfileResponse.prototype.getEmail, write: ProfileResponse.prototype.setEmail });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/ProfileResponse.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../TransactionWrappedResponseMessage'/>\n///<reference path='ProfileResponse'/>\n\nmodule ofx4js.domain.data.profile {\n\nimport TransactionWrappedResponseMessage = ofx4js.domain.data.TransactionWrappedResponseMessage;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\n\n/**\n * @author Ryan Heaton\n */\nexport class ProfileResponseTransaction extends TransactionWrappedResponseMessage<ProfileResponse> {\n\n  private message: ProfileResponse;\n\n  /**\n   * The message.\n   *\n   * @return The message.\n   */\n  public getMessage(): ProfileResponse {\n    return this.message;\n  }\n\n  /**\n   * The message.\n   *\n   * @param message The message.\n   */\n  public setMessage(message: ProfileResponse): void {\n    this.message = message;\n  }\n\n  // Inherited.\n  public getWrappedMessage(): ProfileResponse {\n    return this.getMessage();\n  }\n}\n\nAggregate_add(ProfileResponseTransaction, \"PROFTRNRS\");\nChildAggregate_add(ProfileResponseTransaction, { required: true, order: 30, type: ProfileResponse, read: ProfileResponseTransaction.prototype.getMessage, write: ProfileResponseTransaction.prototype.setMessage });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/ProfileResponseTransaction.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../MessageSetType'/>\n///<reference path='../ResponseMessageSet'/>\n///<reference path='ProfileResponseTransaction'/>\n\nmodule ofx4js.domain.data.profile {\n\nimport MessageSetType = ofx4js.domain.data.MessageSetType;\nimport ResponseMessageSet = ofx4js.domain.data.ResponseMessageSet;\nimport ResponseMessage = ofx4js.domain.data.ResponseMessage;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\n\n/**\n * @author Ryan Heaton\n * @see \"Section 7 OFX Spec\"\n */\nexport class ProfileResponseMessageSet extends ResponseMessageSet {\n\n  private profileResponse: ProfileResponseTransaction;\n\n  public getType(): MessageSetType {\n    return MessageSetType.profile;\n  }\n\n  /**\n   * The profile response.\n   *\n   * @return The profile response.\n   */\n  public getProfileResponse(): ProfileResponseTransaction {\n    return this.profileResponse;\n  }\n\n  /**\n   * The profile response.\n   *\n   * @param profileResponse The profile response.\n   */\n  public setProfileResponse(profileResponse: ProfileResponseTransaction): void {\n    this.profileResponse = profileResponse;\n  }\n\n  // Inherited.\n  public getResponseMessages(): Array<ResponseMessage> {\n    var messages: Array<ResponseMessage> = new Array<ResponseMessage>();\n\n    if (this.getProfileResponse() != null) {\n      messages.push(this.getProfileResponse());\n    }\n\n    return messages;\n  }\n}\n\nAggregate_add(ProfileResponseMessageSet, \"PROFMSGSRSV1\");\nChildAggregate_add(ProfileResponseMessageSet, { required: true, order: 0, type: ProfileResponseTransaction, read: ProfileResponseMessageSet.prototype.getProfileResponse, write: ProfileResponseMessageSet.prototype.setProfileResponse });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/ProfileResponseMessageSet.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../io/AggregateIntrospector'/>\n\nmodule ofx4js.meta {\n\nimport AggregateIntrospector = ofx4js.io.AggregateIntrospector;\n\nexport function Header_add<Type>(clazz: any, params: HeaderParams<Type>): void {\n  console.assert(params.type != null);\n  AggregateIntrospector.addHeader(clazz, new Header(params));\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../meta/Header_add.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../project.d.ts'/>\n///<reference path='../../collections/SortedSet'/>\n///<reference path='../../meta/Aggregate_add'/>\n///<reference path='../../meta/ChildAggregate_add'/>\n///<reference path='../../meta/Header_add'/>\n///<reference path='ApplicationSecurity'/>\n///<reference path='RequestMessageSet'/>\n\nmodule ofx4js.domain.data {\n\nimport SortedSet = ofx4js.collections.SortedSet;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Header_add = ofx4js.meta.Header_add;\n\nvar UUID: UUID = require(\"uuid\");\n\n// import java.util.SortedSet;\n// import java.util.UUID;\n\n/**\n * Envelope for enclosing an OFX request.\n *\n * @author Ryan Heaton\n * @see \"Section 2.4.3, OFX Spec\"\n */\nexport class RequestEnvelope {\n\n  //headers\n  private security: ApplicationSecurity;\n  private UID: string;\n  private lastProcessedUID: string;\n\n  //content\n  private messageSets: SortedSet<RequestMessageSet>;\n\n  constructor(UID: string = UUID.v1()) {\n    this.security = ApplicationSecurity.NONE;\n    this.UID = UID;\n  }\n\n  /**\n   * The security of this envelope.\n   *\n   * @return The security of this envelope.\n   * @see \"Section 2.2, OFX spec\"\n   */\n  public getSecurity(): ApplicationSecurity {\n    return this.security;\n  }\n\n  /**\n   * The security of this envelope.\n   *\n   * @param security The security of this envelope.\n   * @see \"Section 2.2, OFX spec\"\n   */\n  public setSecurity(security: ApplicationSecurity): void {\n    this.security = security;\n  }\n\n  /**\n   * The UID for the envelope.\n   *\n   * @return The UID for the envelope.\n   * @see \"Section 2.2, OFX spec\"\n   */\n  public getUID(): string {\n    return this.UID;\n  }\n\n  /**\n   * The UID for the envelope.\n   *\n   * @param UID The UID for the envelope.\n   * @see \"Section 2.2, OFX spec\"\n   */\n  public setUID(UID: string): void {\n    this.UID = UID;\n  }\n\n  /**\n   * The UID of the last-processed request/response (used for file-based error recovery).\n   *\n   * @return The UID of the last-processed request/response (used for file-based error recovery).\n   * @see \"Section 2.2, OFX spec\"\n   */\n  public getLastProcessedUID(): string {\n    return this.lastProcessedUID;\n  }\n\n  /**\n   * The UID of the last-processed request/response (used for file-based error recovery).\n   *\n   * @param lastProcessedUID The UID of the last-processed request/response (used for file-based error recovery).\n   * @see \"Section 2.2, OFX spec\"\n   */\n  public setLastProcessedUID(lastProcessedUID: string): void {\n    this.lastProcessedUID = lastProcessedUID;\n  }\n\n  /**\n   * The message sets that make up the content of this request.\n   *\n   * @return The message sets that make up the content of this request.\n   * @see \"Section 2.4.5, OFX Spec\"\n   */\n  public getMessageSets(): SortedSet<RequestMessageSet> {\n    return this.messageSets;\n  }\n\n  /**\n   * The message sets that make up the content of this request.\n   *\n   * @param messageSets The message sets that make up the content of this request.\n   * @see \"Section 2.4.5, OFX Spec\"\n   */\n  public setMessageSets(messageSets: SortedSet<RequestMessageSet>): void {\n    this.messageSets = messageSets;\n  }\n}\n\nAggregate_add( RequestEnvelope, \"OFX\" );\nHeader_add(RequestEnvelope, { name: \"SECURITY\", type: ApplicationSecurity, read: RequestEnvelope.prototype.getSecurity, write: RequestEnvelope.prototype.setSecurity });\nHeader_add(RequestEnvelope, { name: \"NEWFILEUID\", type: String, read: RequestEnvelope.prototype.getUID, write: RequestEnvelope.prototype.setUID });\nHeader_add(RequestEnvelope, { name: \"OLDFILEUID\", type: String, read: RequestEnvelope.prototype.getLastProcessedUID, write: RequestEnvelope.prototype.setLastProcessedUID });\nChildAggregate_add(RequestEnvelope, { order: 1, type: SortedSet, collectionEntryType: RequestMessageSet, read: RequestEnvelope.prototype.getMessageSets, write: RequestEnvelope.prototype.setMessageSets });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/RequestEnvelope.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n///<reference path='../ResponseMessage'/>\n\nmodule ofx4js.domain.data.signon {\n\nimport ResponseMessage = ofx4js.domain.data.ResponseMessage;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Response to a change a user password request.\n *\n * @author Ryan Heaton\n * @see \"Section 2.5.2.2, OFX Spec.\"\n */\nexport class PasswordChangeResponse extends ResponseMessage {\n\n  private userId: string;\n  private changeTimestamp: Date;\n\n  /**\n   * The id of the user changing password.\n   *\n   * @return The id of the user changing password.\n   */\n  public getUserId(): string {\n    return this.userId;\n  }\n\n  // Inherited.\n  public getResponseMessageName(): string {\n    return \"password change\";\n  }\n\n  /**\n   * The id of the user changing password.\n   *\n   * @param userId The id of the user changing password.\n   */\n  public setUserId(userId: string): void {\n    this.userId = userId;\n  }\n\n  /**\n   * The timestamp of the password change.\n   *\n   * @return The timestamp of the password change.\n   */\n  public getChangeTimestamp(): Date {\n    return this.changeTimestamp;\n  }\n\n  /**\n   * The timestamp of the password change.\n   *\n   * @param changeTimestamp The timestamp of the password change.\n   */\n  public setChangeTimestamp(changeTimestamp: Date): void {\n    this.changeTimestamp = changeTimestamp;\n  }\n}\n  \nAggregate_add( PasswordChangeResponse, \"PINCHRQ\" );\nElement_add(PasswordChangeResponse, { name: \"USERID\", required: true, order: 0, type: String, read: PasswordChangeResponse.prototype.getUserId, write: PasswordChangeResponse.prototype.setUserId });\nElement_add(PasswordChangeResponse, { name: \"DTCHANGED\", order: 10, type: Date, read: PasswordChangeResponse.prototype.getChangeTimestamp, write: PasswordChangeResponse.prototype.setChangeTimestamp });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/signon/PasswordChangeResponse.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../TransactionWrappedResponseMessage'/>\n///<reference path='PasswordChangeResponse'/>\n\nmodule ofx4js.domain.data.signon {\n\nimport TransactionWrappedResponseMessage = ofx4js.domain.data.TransactionWrappedResponseMessage;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\n\n/**\n * @author Ryan Heaton\n */\nexport class PasswordChangeResponseTransaction extends TransactionWrappedResponseMessage<PasswordChangeResponse> {\n\n  private message: PasswordChangeResponse;\n\n  /**\n   * The message.\n   *\n   * @return The message.\n   */\n  public getMessage(): PasswordChangeResponse {\n    return this.message;\n  }\n\n  /**\n   * The message.\n   *\n   * @param message The message.\n   */\n  public setMessage(message: PasswordChangeResponse): void {\n    this.message = message;\n  }\n\n  // Inherited.\n  public getWrappedMessage(): PasswordChangeResponse {\n    return this.getMessage();\n  }\n}\n\nAggregate_add(PasswordChangeResponseTransaction, \"PINCHTRNRS\");\nChildAggregate_add(PasswordChangeResponseTransaction, { required: true, order: 30, type: PasswordChangeResponse, read: PasswordChangeResponseTransaction.prototype.getMessage, write: PasswordChangeResponseTransaction.prototype.setMessage });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/signon/PasswordChangeResponseTransaction.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../common/Status'/>\n///<reference path='../common/StatusHolder'/>\n///<reference path='FinancialInstitution'/>\n\nmodule ofx4js.domain.data.signon {\n\nimport Status = ofx4js.domain.data.common.Status;\nimport StatusHolder = ofx4js.domain.data.common.StatusHolder;\nimport ResponseMessage = ofx4js.domain.data.ResponseMessage;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * The signon response message.\n *\n * @author Ryan Heaton\n * @see \"Section 2.5.1.2, OFX Spec.\"\n */\nexport class SignonResponse extends ResponseMessage implements StatusHolder {\n\n  private status: Status;\n  private timestamp: Date;\n  private userKey: string;\n  private userKeyExpiration: Date;\n  private language: string;\n  private profileLastUpdated: Date;\n  private accountLastUpdated: Date;\n  private financialInstitution: FinancialInstitution;\n  private sessionId: string;\n  private accessKey: string;\n  \n  constructor() {\n    super();\n    this.language = \"ENG\"; //Locale.US.getISO3Language();\n  }\n\n  public getResponseMessageName(): string {\n    return \"signon\";\n  }\n\n  public getStatusHolderName(): string {\n    return this.getResponseMessageName();\n  }\n\n  /**\n   * The signon response status.\n   *\n   * @return The signon response status.\n   */\n  public getStatus(): Status {\n    return this.status;\n  }\n\n  /**\n   * The signon response status.\n   *\n   * @param status The signon response status.\n   */\n  public setStatus(status: Status): void {\n    this.status = status;\n  }\n\n  /**\n   * The timestamp of this response.\n   *\n   * @return The timestamp of this response.\n   */\n  public getTimestamp(): Date {\n    return this.timestamp;\n  }\n\n  /**\n   * The timestamp of this response.\n   *\n   * @param timestamp The timestamp of this response.\n   */\n  public setTimestamp(timestamp: Date): void {\n    this.timestamp = timestamp;\n  }\n\n  /**\n   * The userkey that can be used instead of the username/password.\n   *\n   * @return The userkey that can be used instead of the username/password.\n   */\n  public getUserKey(): string {\n    return this.userKey;\n  }\n\n  /**\n   * The userkey that can be used instead of the username/password.\n   *\n   * @param userKey The userkey that can be used instead of the username/password.\n   */\n  public setUserKey(userKey: string): void {\n    this.userKey = userKey;\n  }\n\n  /**\n   * The date/time of the expiration of the user key.\n   *\n   * @return The date/time of the expiration of the user key.\n   */\n  public getUserKeyExpiration(): Date {\n    return this.userKeyExpiration;\n  }\n\n  /**\n   * The date/time of the expiration of the user key.\n   *\n   * @param userKeyExpiration The date/time of the expiration of the user key.\n   */\n  public setUserKeyExpiration(userKeyExpiration: Date): void {\n    this.userKeyExpiration = userKeyExpiration;\n  }\n\n  /**\n   * The three-letter langauge code.\n   *\n   * @return The three-letter langauge code.\n   * @see java.util.Locale#getISO3Language()\n   */\n  public getLanguage(): string {\n    return this.language;\n  }\n\n  /**\n   * The three-letter langauge code.\n   *\n   * @param language The three-letter langauge code.\n   */\n  public setLanguage(language: string): void {\n    this.language = language;\n  }\n\n  /**\n   * The date/time that the FI profile was last updated.\n   *\n   * @return The date/time that the FI profile was last updated.\n   */\n  public getProfileLastUpdated(): Date {\n    return this.profileLastUpdated;\n  }\n\n  /**\n   * The date/time that the FI profile was last updated.\n   *\n   * @param profileLastUpdated The date/time that the FI profile was last updated.\n   */\n  public setProfileLastUpdated(profileLastUpdated: Date): void {\n    this.profileLastUpdated = profileLastUpdated;\n  }\n\n  /**\n   * The date/time that the user's account information was updated.\n   *\n   * @return The date/time that the user's account information was updated.\n   */\n  public getAccountLastUpdated(): Date {\n    return this.accountLastUpdated;\n  }\n\n  /**\n   * The date/time that the user's account information was updated.\n   *\n   * @param accountLastUpdated The date/time that the user's account information was updated.\n   */\n  public setAccountLastUpdated(accountLastUpdated: Date): void {\n    this.accountLastUpdated = accountLastUpdated;\n  }\n\n  /**\n   * The financial instutution identity information.\n   *\n   * @return The financial instutution identity information.\n   */\n  public getFinancialInstitution(): FinancialInstitution {\n    return this.financialInstitution;\n  }\n\n  /**\n   * The financial instutution identity information.\n   *\n   * @param financialInstitution The financial instutution identity information.\n   */\n  public setFinancialInstitution(financialInstitution: FinancialInstitution): void {\n    this.financialInstitution = financialInstitution;\n  }\n\n  /**\n   * The session id for the client.\n   *\n   * @return The session id for the client.\n   */\n  public getSessionId(): string {\n    return this.sessionId;\n  }\n\n  /**\n   * The session id for the client.\n   *\n   * @param sessionId The session id for the client.\n   */\n  public setSessionId(sessionId: string): void {\n    this.sessionId = sessionId;\n  }\n\n  /**\n   * The access key that the client should return in the next sign-on requuest.\n   *\n   * @return The access key that the client should return in the next sign-on requuest.\n   */\n  public getAccessKey(): string {\n    return this.accessKey;\n  }\n\n  /**\n   * The access key that the client should return in the next sign-on requuest.\n   *\n   * @param accessKey The access key that the client should return in the next sign-on requuest.\n   */\n  public setAccessKey(accessKey: string): void {\n    this.accessKey = accessKey;\n  }\n}\n\nAggregate_add( SignonResponse, \"SONRS\" );\nChildAggregate_add(SignonResponse, { required: true, order: 0, type: Status, read: SignonResponse.prototype.getStatus, write: SignonResponse.prototype.setStatus });\nElement_add(SignonResponse, { name: \"DTSERVER\", required: true, order: 10, type: Date, read: SignonResponse.prototype.getTimestamp, write: SignonResponse.prototype.setTimestamp });\nElement_add(SignonResponse, { name: \"USERKEY\", order: 20, type: String, read: SignonResponse.prototype.getUserKey, write: SignonResponse.prototype.setUserKey });\nElement_add(SignonResponse, { name: \"TSKEYEXPIRE\", order: 30, type: Date, read: SignonResponse.prototype.getUserKeyExpiration, write: SignonResponse.prototype.setUserKeyExpiration });\nElement_add(SignonResponse, { name: \"LANGUAGE\", required: true, order: 40, type: String, read: SignonResponse.prototype.getLanguage, write: SignonResponse.prototype.setLanguage });\nElement_add(SignonResponse, { name: \"DTPROFUP\", order: 50, type: Date, read: SignonResponse.prototype.getProfileLastUpdated, write: SignonResponse.prototype.setProfileLastUpdated });\nElement_add(SignonResponse, { name: \"DTACCTUP\", order: 60, type: Date, read: SignonResponse.prototype.getAccountLastUpdated, write: SignonResponse.prototype.setAccountLastUpdated });\nChildAggregate_add(SignonResponse, { order: 70, type: FinancialInstitution, read: SignonResponse.prototype.getFinancialInstitution, write: SignonResponse.prototype.setFinancialInstitution });\nElement_add(SignonResponse, { name: \"SESSCOOKIE\", order: 80, type: String, read: SignonResponse.prototype.getSessionId, write: SignonResponse.prototype.setSessionId });\nElement_add(SignonResponse, { name: \"ACCESSKEY\", order: 90, type: String, read: SignonResponse.prototype.getAccessKey, write: SignonResponse.prototype.setAccessKey });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/signon/SignonResponse.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../MessageSetType'/>\n///<reference path='../ResponseMessageSet'/>\n///<reference path='../ResponseMessage'/>\n///<reference path='PasswordChangeResponseTransaction'/>\n///<reference path='SignonResponse'/>\n\nmodule ofx4js.domain.data.signon {\n\nimport MessageSetType = ofx4js.domain.data.MessageSetType;\nimport ResponseMessageSet = ofx4js.domain.data.ResponseMessageSet;\nimport ResponseMessage = ofx4js.domain.data.ResponseMessage;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\n\n/**\n * The sign-on response message set.\n *\n * @author Ryan Heaton\n * @see \"Section 2.5, OFX Spec.\"\n */\nexport class SignonResponseMessageSet extends ResponseMessageSet {\n\n  private signonResponse: SignonResponse;\n  private passwordChangeResponse: PasswordChangeResponseTransaction;\n\n  public getType(): MessageSetType {\n    return MessageSetType.signon;\n  }\n\n  /**\n   * The message for this message set.\n   *\n   * @return The message for this message set.\n   */\n  public getSignonResponse(): SignonResponse {\n    return this.signonResponse;\n  }\n\n  /**\n   * The message for this message set.\n   *\n   * @param signonResponse The message for this message set.\n   */\n  public setSignonResponse(signonResponse: SignonResponse): void {\n    this.signonResponse = signonResponse;\n  }\n\n  /**\n   * The password change response.\n   *\n   * @return The password change response.\n   */\n  public getPasswordChangeResponse(): PasswordChangeResponseTransaction {\n    return this.passwordChangeResponse;\n  }\n\n  /**\n   * The password change response.\n   *\n   * @param passwordChangeResponse The password change response.\n   */\n  public setPasswordChangeResponse(passwordChangeResponse: PasswordChangeResponseTransaction): void {\n    this.passwordChangeResponse = passwordChangeResponse;\n  }\n\n  //todo: challenge request/response\n\n  // Inherited.\n  public getResponseMessages(): Array<ResponseMessage> {\n    var messages: Array<ResponseMessage> = new Array<ResponseMessage>();\n\n    if (this.getSignonResponse() != null) {\n      messages.push(this.getSignonResponse());\n    }\n\n    return messages;\n  }\n}\n\nAggregate_add(SignonResponseMessageSet, \"SIGNONMSGSRSV1\");\nChildAggregate_add(SignonResponseMessageSet, { order: 0, type: SignonResponse, read: SignonResponseMessageSet.prototype.getSignonResponse, write: SignonResponseMessageSet.prototype.setSignonResponse });\nChildAggregate_add(SignonResponseMessageSet, { order: 10, type: PasswordChangeResponseTransaction, read: SignonResponseMessageSet.prototype.getPasswordChangeResponse, write: SignonResponseMessageSet.prototype.setPasswordChangeResponse });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/signon/SignonResponseMessageSet.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../project.d.ts'/>\n///<reference path='../../collections/SortedSet'/>\n///<reference path='../../meta/Aggregate_add'/>\n///<reference path='../../meta/ChildAggregate_add'/>\n///<reference path='../../meta/Header_add'/>\n///<reference path='signon/SignonResponseMessageSet'/>\n///<reference path='signon/SignonResponse'/>\n///<reference path='ApplicationSecurity'/>\n///<reference path='ApplicationSecurity'/>\n///<reference path='MessageSetType'/>\n///<reference path='ResponseMessageSet'/>\n\nmodule ofx4js.domain.data {\n\nimport SortedSet = ofx4js.collections.SortedSet;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Header_add = ofx4js.meta.Header_add;\nimport SignonResponseMessageSet = ofx4js.domain.data.signon.SignonResponseMessageSet;\nimport SignonResponse = ofx4js.domain.data.signon.SignonResponse;\n\n//import java.util.SortedSet;\n\n/**\n * Envelope for enclosing an OFX response.\n *\n * @author Ryan Heaton\n * @see \"Section 2.4.3, OFX Spec\"\n */\nexport class ResponseEnvelope {\n\n  //headers\n  private security: ApplicationSecurity;\n  private UID: string;\n\n  //content\n  private messageSets: SortedSet<ResponseMessageSet>;\n\n  /**\n   * The security of this envelope.\n   *\n   * @return The security of this envelope.\n   * @see \"Section 2.2, OFX spec\"\n   */\n  public getSecurity(): ApplicationSecurity {\n    return this.security;\n  }\n\n  /**\n   * The security of this envelope.\n   *\n   * @param security The security of this envelope.\n   * @see \"Section 2.2, OFX spec\"\n   */\n  public setSecurity(security: ApplicationSecurity): void {\n    this.security = security;\n  }\n\n  /**\n   * The UID for the envelope.\n   *\n   * @return The UID for the envelope.\n   * @see \"Section 2.2, OFX spec\"\n   */\n  public getUID(): string {\n    return this.UID;\n  }\n\n  /**\n   * The UID for the envelope.\n   *\n   * @param UID The UID for the envelope.\n   * @see \"Section 2.2, OFX spec\"\n   */\n  public setUID(UID: string): void {\n    this.UID = UID;\n  }\n\n  /**\n   * The message sets that make up the content of this response.\n   *\n   * @return The message sets that make up the content of this response.\n   * @see \"Section 2.4.5, OFX Spec\"\n   */\n  public getMessageSets(): SortedSet<ResponseMessageSet> {\n    return this.messageSets;\n  }\n\n  /**\n   * The message sets that make up the content of this response.\n   *\n   * @param messageSets The message sets that make up the content of this response.\n   * @see \"Section 2.4.5, OFX Spec\"\n   */\n  public setMessageSets(messageSets: SortedSet<ResponseMessageSet>): void {\n    this.messageSets = messageSets;\n  }\n\n  /**\n   * Helper method for looking up the signon response.\n   *\n   * @return The signon response, or null if none found.\n   */\n  public getSignonResponse(): SignonResponse {\n    var type: MessageSetType = MessageSetType.signon;\n    var message: ResponseMessageSet = this.getMessageSet(type);\n\n    if (message != null) {\n      return (<SignonResponseMessageSet> message).getSignonResponse();\n    }\n    else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the message set of the specified type.\n   *\n   * @param type The type.\n   * @return The message set, or null.\n   */\n  public getMessageSet(type: MessageSetType): ResponseMessageSet {\n    var message: ResponseMessageSet = null;\n    if (this.messageSets != null) {\n      for (var i in this.messageSets.values()) {\n        var messageSet: ResponseMessageSet = this.messageSets.values()[i];\n        if (messageSet.getType() == type) {\n          message = messageSet;\n          break;\n        }\n      }\n    }\n    return message;\n  }\n}\n\nAggregate_add( ResponseEnvelope, \"OFX\" );\nHeader_add(ResponseEnvelope, { name: \"SECURITY\", type: ApplicationSecurity, read: ResponseEnvelope.prototype.getSecurity, write: ResponseEnvelope.prototype.setSecurity });\nHeader_add(ResponseEnvelope, { name: \"NEWFILEUID\", type: String, read: ResponseEnvelope.prototype.getUID, write: ResponseEnvelope.prototype.setUID });\nChildAggregate_add(ResponseEnvelope, { order: 1, type: SortedSet, collectionEntryType: ResponseMessageSet, read: ResponseEnvelope.prototype.getMessageSets, write: ResponseEnvelope.prototype.setMessageSets });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/ResponseEnvelope.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../OFXException'/>\n\nmodule ofx4js.client.net {\n\nimport OFXException = ofx4js.OFXException;\n\n/**\n * Error with a particular OFX connection.\n * \n * @author Ryan Heaton\n */\nexport class OFXConnectionException extends OFXException {\n\n  public constructor(message: string, e: Error = null) {\n    super(message, e);\n  }\n\n}\n\n}\n\n\n// WEBPACK FOOTER //\n// ../../client/net/OFXConnectionException.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/Element_add'/>\n\nmodule ofx4js.domain.data.investment.statements {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n\n/**\n * Aggreate to indicate whether position information is requested as part of the statement\n * @see \"Section 13.9.1.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class IncludePosition {\n\n  private sentDownDate: Date;\n  private includePositions: boolean;\n  \n  constructor() {\n    this.includePositions = true;\n  }\n\n  /**\n   * Gets the date that the position should be sent down for. This is an optional field according\n   * to the OFX spec.\n   *\n   * @return the date for the position\n   */\n  public getDateSentDown(): Date {\n    return this.sentDownDate;\n  }\n\n  /**\n   * Sets the date that the position should be sent down for. This is an optional field according\n   * to the OFX spec.\n   *\n   * @param sentDownDate the date for the position\n   */\n  public setDateSentDown(sentDownDate: Date): void {\n    this.sentDownDate = sentDownDate;\n  }\n\n  /**\n   * Gets whether to include positions in the statement download.\n   *\n   * @return whether to include positions in the statement download\n   */\n  public getIncludePositions(): boolean {\n    return this.includePositions;\n  }\n\n  /**\n   * Sets whether to include positions in the statement download.\n   *\n   * @param includePositions whether to include positions in the statement download\n   */\n  public setIncludePositions(includePositions: boolean): void {\n    this.includePositions = includePositions;\n  }\n}\n\nAggregate_add( IncludePosition, \"INCPOS\" );\nElement_add(IncludePosition, { name: \"DTASOF\", order: 0, type: Date, read: IncludePosition.prototype.getDateSentDown, write: IncludePosition.prototype.setDateSentDown });\nElement_add(IncludePosition, { name: \"INCLUDE\", order: 10, type: Boolean, read: IncludePosition.prototype.getIncludePositions, write: IncludePosition.prototype.setIncludePositions });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/statements/IncludePosition.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../../../../meta/Element_add'/>\n///<reference path='../../common/StatementRequest'/>\n///<reference path='../../investment/accounts/InvestmentAccountDetails'/>\n///<reference path='IncludePosition'/>\n\nmodule ofx4js.domain.data.investment.statements {\n\nimport StatementRequest = ofx4js.domain.data.common.StatementRequest;\nimport InvestmentAccountDetails = ofx4js.domain.data.investment.accounts.InvestmentAccountDetails;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Aggregate for the investment statement download request.\n * @see \"Section 13.9.1.1, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class InvestmentStatementRequest extends StatementRequest {\n\n  private account: InvestmentAccountDetails;\n  private includeOpenOrders: boolean;\n  private includePosition: IncludePosition;\n  private includeBalance: boolean;\n  \n  constructor() {\n    super();\n    this.includeOpenOrders = false;\n    this.includeBalance = true;\n  }\n\n  /**\n   * The account details.\n   *\n   * @return The account details.\n   */\n  public getAccount(): InvestmentAccountDetails {\n    return this.account;\n  }\n\n  /**\n   * The account details.\n   *\n   * @param account The account details.\n   */\n  public setAccount(account: InvestmentAccountDetails): void {\n    this.account = account;\n  }\n\n  /**\n   * Gets whether to include open orders. This is an optional field according to the OFX spec.\n   * <br>\n   * Note, open orders are not yet implemented.\n   *\n   * @return whether to include open orders\n   */\n  public getIncludeOpenOrders(): boolean {\n    return this.includeOpenOrders;\n  }\n\n  /**\n   * Sets whether to include open orders. This is an optional field according to the OFX spec.\n   * <br>\n   * Note, open orders are not yet implemented.\n   *\n   * @param includeOpenOrders whether to include open orders\n   */\n  public setIncludeOpenOrders(includeOpenOrders: boolean): void {\n    this.includeOpenOrders = includeOpenOrders;\n  }\n\n  /**\n   * Gets the include position child aggregate. This is a required field according to the OFX spec.\n   *\n   * @return the include position child aggregate\n   */\n  public getIncludePosition(): IncludePosition {\n    return this.includePosition;\n  }\n\n  /**\n   * Gets the include position child aggregate. This is a required field according to the OFX spec.\n   *\n   * @param includePosition the include position child aggregate\n   */\n  public setIncludePosition(includePosition: IncludePosition): void {\n    this.includePosition = includePosition;\n  }\n\n  /**\n   * Gets whether to include balance info in the response. This is a required field according to\n   * the OFX spec.\n   *\n   * @return whether to include balance info in the response\n   */\n  public getIncludeBalance(): boolean {\n    return this.includeBalance;\n  }\n\n  /**\n   * Sets whether to include balance info in the response. This is a required field according to\n   * the OFX spec.\n   *\n   * @param includeBalance whether to include balance info in the response\n   */\n  public setIncludeBalance(includeBalance: boolean): void {\n    this.includeBalance = includeBalance;\n  }\n}\n\nAggregate_add(InvestmentStatementRequest, \"INVSTMTRQ\");\nChildAggregate_add(InvestmentStatementRequest, { name: \"INVACCTFROM\", required: true, order: 0, type: InvestmentAccountDetails, read: InvestmentStatementRequest.prototype.getAccount, write: InvestmentStatementRequest.prototype.setAccount });\nElement_add(InvestmentStatementRequest, { name: \"INCOO\", order: 20, type: Boolean, read: InvestmentStatementRequest.prototype.getIncludeOpenOrders, write: InvestmentStatementRequest.prototype.setIncludeOpenOrders });\nChildAggregate_add(InvestmentStatementRequest, { name: \"INCPOS\", required: true, order: 30, type: IncludePosition, read: InvestmentStatementRequest.prototype.getIncludePosition, write: InvestmentStatementRequest.prototype.setIncludePosition });\nElement_add(InvestmentStatementRequest, { name: \"INCBAL\", required: true, order: 40, type: Boolean, read: InvestmentStatementRequest.prototype.getIncludeBalance, write: InvestmentStatementRequest.prototype.setIncludeBalance });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/statements/InvestmentStatementRequest.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../../TransactionWrappedRequestMessage'/>\n///<reference path='InvestmentStatementRequest'/>\n\nmodule ofx4js.domain.data.investment.statements {\n\nimport TransactionWrappedRequestMessage = ofx4js.domain.data.TransactionWrappedRequestMessage;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * Investment statement transaction request.\n * @see \"Section 13.9.1.1, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class InvestmentStatementRequestTransaction\n    extends TransactionWrappedRequestMessage<InvestmentStatementRequest> {\n\n  private message: InvestmentStatementRequest;\n\n  /**\n   * Gets the the statement request message.\n   *\n   * @return the statement request message.\n   */\n  public getMessage(): InvestmentStatementRequest {\n    return this.message;\n  }\n\n  /**\n   * Sets the the statement request message.\n   *\n   * @param message the statement request message.\n   */\n  public setMessage(message: InvestmentStatementRequest): void {\n    this.message = message;\n  }\n\n  // Inherited.\n  public setWrappedMessage(message: InvestmentStatementRequest): void {\n    this.setMessage(message);\n  }\n}\n\nAggregate_add(InvestmentStatementRequestTransaction, \"INVSTMTTRNRQ\");\nChildAggregate_add(InvestmentStatementRequestTransaction, { required: true, order: 30, type: InvestmentStatementRequest, read: InvestmentStatementRequestTransaction.prototype.getMessage, write: InvestmentStatementRequestTransaction.prototype.setMessage });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/statements/InvestmentStatementRequestTransaction.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../../MessageSetType'/>\n///<reference path='../../RequestMessage'/>\n///<reference path='../../RequestMessageSet'/>\n///<reference path='InvestmentStatementRequestTransaction'/>\n\nmodule ofx4js.domain.data.investment.statements {\n\nimport MessageSetType = ofx4js.domain.data.MessageSetType;\nimport RequestMessage = ofx4js.domain.data.RequestMessage;\nimport RequestMessageSet = ofx4js.domain.data.RequestMessageSet;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * Investment statement request message set.\n * @see \"Section 13.7.1.2.1, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class InvestmentStatementRequestMessageSet extends RequestMessageSet {\n\n  private statementRequest: InvestmentStatementRequestTransaction;\n\n  public getType(): MessageSetType {\n    return MessageSetType.investment;\n  }\n\n  /**\n   * Gets the statement request.\n   *\n   * @return the request\n   */\n  public getStatementRequest(): InvestmentStatementRequestTransaction {\n    return this.statementRequest;\n  }\n\n  /**\n   * Sets the statement request.\n   *\n   * @param statementRequest the request\n   */\n  public setStatementRequest(statementRequest: InvestmentStatementRequestTransaction): void {\n    this.statementRequest = statementRequest;\n  }\n\n  // Inherited.\n  public getRequestMessages(): Array<RequestMessage> {\n    var requestMessages: Array<RequestMessage> = new Array<RequestMessage>();\n    if (this.getStatementRequest() != null) {\n      requestMessages.push(this.getStatementRequest());\n    }\n    return requestMessages;\n  }\n}\n\nAggregate_add( InvestmentStatementRequestMessageSet, \"INVSTMTMSGSRQV1\" );\nChildAggregate_add(InvestmentStatementRequestMessageSet, { order: 0, type: InvestmentStatementRequestTransaction, read: InvestmentStatementRequestMessageSet.prototype.getStatementRequest, write: InvestmentStatementRequestMessageSet.prototype.setStatementRequest });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/statements/InvestmentStatementRequestMessageSet.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../../TransactionWrappedResponseMessage'/>\n///<reference path='InvestmentStatementResponse'/>\n\nmodule ofx4js.domain.data.investment.statements {\n\nimport TransactionWrappedResponseMessage = ofx4js.domain.data.TransactionWrappedResponseMessage;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * Investment statement transaction response.\n * @see \"Section 13.9.2.1, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class InvestmentStatementResponseTransaction\n    extends TransactionWrappedResponseMessage<InvestmentStatementResponse> {\n\n  private message: InvestmentStatementResponse;\n\n  /**\n   * Gets the the statement response message.\n   *\n   * @return the statement response message.\n   */\n  public getMessage(): InvestmentStatementResponse {\n    return this.message;\n  }\n\n  /**\n   * Sets the the statement response message.\n   *\n   * @param message the statement response message.\n   */\n  public setMessage(message: InvestmentStatementResponse): void {\n    this.message = message;\n  }\n\n  // Inherited.\n  public getWrappedMessage(): InvestmentStatementResponse {\n    return this.getMessage();\n  }\n}\n\nAggregate_add( InvestmentStatementResponseTransaction, \"INVSTMTTRNRS\" );\nChildAggregate_add(InvestmentStatementResponseTransaction, { required: true, order: 30, type: InvestmentStatementResponse, read: InvestmentStatementResponseTransaction.prototype.getMessage, write: InvestmentStatementResponseTransaction.prototype.setMessage });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/statements/InvestmentStatementResponseTransaction.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../../MessageSetType'/>\n///<reference path='../../ResponseMessage'/>\n///<reference path='../../ResponseMessageSet'/>\n///<reference path='InvestmentStatementResponseTransaction'/>\n\nmodule ofx4js.domain.data.investment.statements {\n\nimport MessageSetType = ofx4js.domain.data.MessageSetType;\nimport ResponseMessage = ofx4js.domain.data.ResponseMessage;\nimport ResponseMessageSet = ofx4js.domain.data.ResponseMessageSet;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * Investment statement response message set.\n * @see \"Section 13.7.1.2.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class InvestmentStatementResponseMessageSet extends ResponseMessageSet {\n\n  private statementResponses: Array<InvestmentStatementResponseTransaction>;\n\n  public getType(): MessageSetType {\n    return MessageSetType.investment;\n  }\n\n  /**\n   * Gets the statement response list. Most OFX files have a single statement response.\n   *\n   * @return the statement response list\n   */\n  public getStatementResponses(): Array<InvestmentStatementResponseTransaction> {\n    return this.statementResponses;\n  }\n\n\n  /**\n   * Sets the statement reponse list. Most OFX files have a single statement response.\n   *\n   * @param statementResponses the statement response list\n   */\n  public setStatementResponses(statementResponses: Array<InvestmentStatementResponseTransaction>): void {\n    this.statementResponses = statementResponses;\n  }\n\n\n  /**\n   * Gets the first statement response. Use getStatementResponses() if you are expecting multiple\n   * responses.\n   *\n   * @return the first investment statement response.\n   */\n  public getStatementResponse(): InvestmentStatementResponseTransaction {\n    return this.statementResponses == null || this.statementResponses.length == 0 ? null : this.statementResponses[0];\n  }\n\n  /**\n   * Sets the statement response if there is a single response.\n   *\n   * @param statementResponse The statement response.\n   */\n  public setStatementResponse(statementResponse: InvestmentStatementResponseTransaction): void {\n    this.statementResponses = [statementResponse];\n  }\n\n  // Inherited.\n  public getResponseMessages(): Array<ResponseMessage> {\n    return this.statementResponses;\n  }\n}\n\nAggregate_add( InvestmentStatementResponseMessageSet, \"INVSTMTMSGSRSV1\" );\nChildAggregate_add(InvestmentStatementResponseMessageSet, { order: 0, type: Array, collectionEntryType: InvestmentStatementResponseTransaction, read: InvestmentStatementResponseMessageSet.prototype.getStatementResponses, write: InvestmentStatementResponseMessageSet.prototype.setStatementResponses });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/statements/InvestmentStatementResponseMessageSet.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../RequestMessage'/>\n///<reference path='SecurityRequest'/>\n\nmodule ofx4js.domain.data.seclist {\n\nimport RequestMessage = ofx4js.domain.data.RequestMessage;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * Request aggregate for the security list.\n * @see \"Section 13.8.2.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class SecurityListRequest extends RequestMessage {\n\n  private securityRequests: Array<SecurityRequest>;\n\n  public getSecurityRequests(): Array<SecurityRequest> {\n    return this.securityRequests;\n  }\n\n  public setSecurityRequests(securityRequests: Array<SecurityRequest>): void {\n    this.securityRequests = securityRequests;\n  }\n}\n\nAggregate_add(SecurityListRequest, \"SECLISTRQ\");\nChildAggregate_add(SecurityListRequest, { required: true, order: 10, type: Array, collectionEntryType: SecurityRequest, read: SecurityListRequest.prototype.getSecurityRequests, write: SecurityListRequest.prototype.setSecurityRequests });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/seclist/SecurityListRequest.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../TransactionWrappedRequestMessage'/>\n///<reference path='SecurityListRequest'/>\n\nmodule ofx4js.domain.data.seclist {\n\nimport TransactionWrappedRequestMessage = ofx4js.domain.data.TransactionWrappedRequestMessage;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * Security list transaction request.\n * @see \"Section 13.8.2.1, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class SecurityListRequestTransaction\n    extends TransactionWrappedRequestMessage<SecurityListRequest> {\n\n  private message: SecurityListRequest;\n\n  /**\n   * The message.\n   *\n   * @return The message.\n   */\n  public getMessage(): SecurityListRequest {\n    return this.message;\n  }\n\n  /**\n   * The message.\n   *\n   * @param message The message.\n   *\n   */\n  public setMessage(message: SecurityListRequest) {\n    this.message = message;\n  }\n\n  // Inherited.\n  public setWrappedMessage(message: SecurityListRequest): void {\n    this.setMessage(message);\n  }\n}\n\nAggregate_add( SecurityListRequestTransaction, \"SECLISTTRNRQ\" );\nChildAggregate_add(SecurityListRequestTransaction, { required: true, order: 30, type: SecurityListRequest, read: SecurityListRequestTransaction.prototype.getMessage, write: SecurityListRequestTransaction.prototype.setMessage });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/seclist/SecurityListRequestTransaction.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../MessageSetType'/>\n///<reference path='../RequestMessage'/>\n///<reference path='../RequestMessageSet'/>\n///<reference path='../investment/statements/InvestmentStatementRequestTransaction'/>\n///<reference path='SecurityListRequestTransaction'/>\n\nmodule ofx4js.domain.data.seclist {\n\nimport MessageSetType = ofx4js.domain.data.MessageSetType;\nimport RequestMessage = ofx4js.domain.data.RequestMessage;\nimport RequestMessageSet = ofx4js.domain.data.RequestMessageSet;\nimport InvestmentStatementRequestTransaction = ofx4js.domain.data.investment.statements.InvestmentStatementRequestTransaction;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * Security list request message set.\n * @see \"Section 13.7.2.2.1, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class SecurityListRequestMessageSet extends RequestMessageSet {\n\n  private securityListRequest: SecurityListRequestTransaction;\n\n  public getType(): MessageSetType {\n    return MessageSetType.investment;\n  }\n\n  /**\n   * Gets the security list request.\n   *\n   * @return the request\n   */\n  public getSecurityListRequest(): SecurityListRequestTransaction {\n    return this.securityListRequest;\n  }\n\n  /**\n   * Sets the security list request.\n   *\n   * @param statementRequest the request\n   */\n  public setSecurityListRequest(statementRequest: SecurityListRequestTransaction): void {\n    this.securityListRequest = statementRequest;\n  }\n\n  // Inherited.\n  public getRequestMessages(): Array<RequestMessage> {\n    var requestMessages: Array<RequestMessage> = new Array<RequestMessage>();\n    if (this.getSecurityListRequest() != null) {\n      requestMessages.push(this.getSecurityListRequest());\n    }\n    return requestMessages;\n  }\n}\n\nAggregate_add( SecurityListRequestMessageSet, \"SECLISTMSGSRQV1\" );\nChildAggregate_add(SecurityListRequestMessageSet, { order: 0, type: SecurityListRequestTransaction, read: SecurityListRequestMessageSet.prototype.getSecurityListRequest, write: SecurityListRequestMessageSet.prototype.setSecurityListRequest });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/seclist/SecurityListRequestMessageSet.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../TransactionWrappedResponseMessage'/>\n///<reference path='SecurityListResponse'/>\n\nmodule ofx4js.domain.data.seclist {\n\nimport TransactionWrappedResponseMessage = ofx4js.domain.data.TransactionWrappedResponseMessage;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * Security list transaction response.\n * @see \"Section 13.8.3.1, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class SecurityListResponseTransaction\n    extends TransactionWrappedResponseMessage<SecurityListResponse> {\n\n  private message: SecurityListResponse;\n\n  /**\n   * The message.\n   *\n   * @return The message.\n   */\n  public getMessage(): SecurityListResponse {\n    return this.message;\n  }\n\n  /**\n   * The message.\n   *\n   * @param message The message.\n   */\n  public setMessage(message: SecurityListResponse): void {\n    this.message = message;\n  }\n\n  // Inherited.\n  public getWrappedMessage(): SecurityListResponse {\n    return this.getMessage();\n  }\n}\n\nAggregate_add( SecurityListResponseTransaction, \"SECLISTTRNRS\");\nChildAggregate_add(SecurityListResponseTransaction, { required: true, order: 30, type: SecurityListResponse, read: SecurityListResponseTransaction.prototype.getMessage, write: SecurityListResponseTransaction.prototype.setMessage });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/seclist/SecurityListResponseTransaction.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../MessageSetType'/>\n///<reference path='../ResponseMessage'/>\n///<reference path='../ResponseMessageSet'/>\n///<reference path='SecurityList'/>\n///<reference path='SecurityListResponseTransaction'/>\n\nmodule ofx4js.domain.data.seclist {\n\nimport MessageSetType = ofx4js.domain.data.MessageSetType;\nimport ResponseMessage = ofx4js.domain.data.ResponseMessage;\nimport ResponseMessageSet = ofx4js.domain.data.ResponseMessageSet;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * @author Jon Perlow\n */\nexport class SecurityListResponseMessageSet extends ResponseMessageSet {\n\n  private securityListResponse: SecurityListResponseTransaction;\n  private securityList: SecurityList;\n\n  public getType(): MessageSetType {\n    return MessageSetType.investment_security;\n  }\n\n  /**\n   * The security list response list transaction.\n   *\n   * Most OFX files have a single security response.\n   *\n   * @return The security list response list.\n   */\n  public getSecurityListResponse(): SecurityListResponseTransaction {\n    return this.securityListResponse;\n  }\n\n  /**\n   * The security list response.\n   *\n   * @param securityListResponse The security list response.\n   */\n  public setSecurityListResponse(securityListResponse: SecurityListResponseTransaction) {\n    this.securityListResponse = securityListResponse;\n  }\n\n  public getSecurityList(): SecurityList {\n    return this.securityList;\n  }\n\n  public setSecurityList(securityList: SecurityList): void {\n    this.securityList = securityList;\n  }\n\n  // Inherited.\n  public getResponseMessages(): Array<ResponseMessage> {\n    var ret: Array<ResponseMessage> = new Array<ResponseMessage>();\n    ret.push(this.securityListResponse);\n    return ret;\n  }\n}\n\nAggregate_add( SecurityListResponseMessageSet, \"SECLISTMSGSRSV1\" );\nChildAggregate_add(SecurityListResponseMessageSet, { order: 0, type: SecurityListResponseTransaction, read: SecurityListResponseMessageSet.prototype.getSecurityListResponse, write: SecurityListResponseMessageSet.prototype.setSecurityListResponse });\nChildAggregate_add(SecurityListResponseMessageSet, { order: 10, type: SecurityList, read: SecurityListResponseMessageSet.prototype.getSecurityList, write: SecurityListResponseMessageSet.prototype.setSecurityList });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/seclist/SecurityListResponseMessageSet.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../OFXException'/>\n///<reference path='../../client/InvestmentAccount'/>\n///<reference path='../../domain/data/RequestEnvelope'/>\n///<reference path='../../domain/data/ResponseEnvelope'/>\n///<reference path='../../domain/data/common/StatementRange'/>\n///<reference path='../../domain/data/common/StatementRequest'/>\n///<reference path='../../domain/data/investment/statements/InvestmentStatementRequest'/>\n///<reference path='../../domain/data/investment/statements/InvestmentStatementRequestMessageSet'/>\n///<reference path='../../domain/data/investment/statements/InvestmentStatementResponse'/>\n///<reference path='../../domain/data/investment/statements/InvestmentStatementRequestTransaction'/>\n///<reference path='../../domain/data/investment/statements/InvestmentStatementResponseMessageSet'/>\n///<reference path='../../domain/data/investment/statements/IncludePosition'/>\n///<reference path='../../domain/data/seclist/SecurityListRequestTransaction'/>\n///<reference path='../../domain/data/seclist/SecurityRequest'/>\n///<reference path='../../domain/data/seclist/SecurityListRequestMessageSet'/>\n///<reference path='../../domain/data/seclist/SecurityListResponseMessageSet'/>\n\nmodule ofx4js.client.impl {\n\nimport OFXException = ofx4js.OFXException;\n// import .* = ofx4js.domain.data.*;\nimport InvestmentAccount = ofx4js.client.InvestmentAccount;\nimport StatementRange = ofx4js.domain.data.common.StatementRange;\nimport StatementRequest = ofx4js.domain.data.common.StatementRequest;\nimport InvestmentAccountDetails = ofx4js.domain.data.investment.accounts.InvestmentAccountDetails;\n// import .* = ofx4js.domain.data.seclist.*;\n// import .* = ofx4js.domain.data.investment.statements.*;\nimport IncludePosition = ofx4js.domain.data.investment.statements.IncludePosition;\nimport InvestmentStatementRequest = ofx4js.domain.data.investment.statements.InvestmentStatementRequest;\nimport InvestmentStatementRequestMessageSet = ofx4js.domain.data.investment.statements.InvestmentStatementRequestMessageSet;\nimport InvestmentStatementResponse = ofx4js.domain.data.investment.statements.InvestmentStatementResponse;\nimport InvestmentStatementRequestTransaction = ofx4js.domain.data.investment.statements.InvestmentStatementRequestTransaction;\nimport InvestmentStatementResponseMessageSet = ofx4js.domain.data.investment.statements.InvestmentStatementResponseMessageSet;\nimport InvestmentStatementResponseTransaction = ofx4js.domain.data.investment.statements.InvestmentStatementResponseTransaction;\nimport MessageSetType = ofx4js.domain.data.MessageSetType;\nimport RequestMessageSet = ofx4js.domain.data.RequestMessageSet;\nimport RequestEnvelope = ofx4js.domain.data.RequestEnvelope;\nimport ResponseEnvelope = ofx4js.domain.data.ResponseEnvelope;\nimport SecurityListRequestTransaction = ofx4js.domain.data.seclist.SecurityListRequestTransaction;\nimport SecurityRequest = ofx4js.domain.data.seclist.SecurityRequest;\nimport SecurityListRequest = ofx4js.domain.data.seclist.SecurityListRequest;\nimport SecurityListRequestMessageSet = ofx4js.domain.data.seclist.SecurityListRequestMessageSet;\nimport SecurityList = ofx4js.domain.data.seclist.SecurityList;\nimport SecurityListResponseMessageSet = ofx4js.domain.data.seclist.SecurityListResponseMessageSet;\n\n/**\n * @author Jon Perlow\n */\nexport class InvestmentAccountImpl implements InvestmentAccount {\n  private details: InvestmentAccountDetails;\n  private username: string;\n  private password: string;\n  private institution: FinancialInstitutionImpl;\n\n  constructor(details: InvestmentAccountDetails, username: string, password: string,\n                               institution: FinancialInstitutionImpl) {\n    this.details = details;\n    this.username = username;\n    this.password = password;\n    this.institution = institution;\n  }\n\n  public readStatement(start: Date, end: Date) /*throws OFXException*/: Promise<InvestmentStatementResponse> {\n    var range: StatementRange = new StatementRange();\n    range.setIncludeTransactions(true);\n    range.setStart(start);\n    range.setEnd(end);\n\n    var request: RequestEnvelope = this.institution.createAuthenticatedRequest(this.username, this.password);\n    var requestTransaction: InvestmentStatementRequestTransaction = new InvestmentStatementRequestTransaction();\n    requestTransaction.setWrappedMessage(this.createStatementRequest(this.getDetails(), range));\n    request.getMessageSets().insert(this.createStatementRequestMessageSet(requestTransaction));\n\n    return this.institution.sendRequest(request)\n    .then((response: ResponseEnvelope): InvestmentStatementResponse => {\n      this.institution.doGeneralValidationChecks(request, response);\n      return this.unwrapStatementResponse(response);\n    });\n  }\n\n  public readSecurityList(securities: Array<SecurityRequest>) /*throws OFXException*/: Promise<SecurityList> {\n    var request: RequestEnvelope = this.institution.createAuthenticatedRequest(this.username, this.password);\n    var requestTransaction: SecurityListRequestTransaction = new SecurityListRequestTransaction();\n    requestTransaction.setWrappedMessage(this.createSecurityListRequest(securities));\n    request.getMessageSets().insert(this.createSecurityListRequestMessageSet(requestTransaction));\n\n    return this.institution.sendRequest(request)\n    .then((response: ResponseEnvelope): SecurityList => {\n      this.institution.doGeneralValidationChecks(request, response);\n  \n      return this.unwrapSecurityList(response);\n    });\n  }\n\n  /**\n   * The details of this account.\n   *\n   * @return The details of this account.\n   */\n  public getDetails(): InvestmentAccountDetails {\n    return this.details;\n  }\n\n  private unwrapStatementResponse(response: ResponseEnvelope) /*throws OFXException*/: InvestmentStatementResponse {\n    var investmentStatementSet: InvestmentStatementResponseMessageSet =\n        <InvestmentStatementResponseMessageSet> response.getMessageSet(MessageSetType.investment);\n    if (investmentStatementSet == null) {\n      throw new OFXException(\"No investment response message set.\");\n    }\n\n    var statementTransactionResponse: InvestmentStatementResponseTransaction =\n        investmentStatementSet.getStatementResponse();\n    if (statementTransactionResponse == null) {\n      throw new OFXException(\"No investment statement response transaction.\");\n    }\n\n    var statement: InvestmentStatementResponse = statementTransactionResponse.getMessage();\n    if (statement == null) {\n      throw new OFXException(\"No investment statement in the transaction.\");\n    }\n\n    // See if there's a security list -- often sent back with an account statement by servers.\n    var securityListMessageSet: SecurityListResponseMessageSet =\n        <SecurityListResponseMessageSet> response.getMessageSet(\n            MessageSetType.investment_security);\n    if (securityListMessageSet != null) {\n      statement.setSecurityList(securityListMessageSet.getSecurityList());\n    }\n\n    return statement;\n  }\n\n  private createStatementRequestMessageSet(transaction: InvestmentStatementRequestTransaction): RequestMessageSet {\n    var investmentStatementRequest: InvestmentStatementRequestMessageSet =\n        new InvestmentStatementRequestMessageSet();\n    investmentStatementRequest.setStatementRequest(transaction);\n    return investmentStatementRequest;\n  }\n\n  private createStatementRequest(details: InvestmentAccountDetails, range: StatementRange): InvestmentStatementRequest {\n    var investRequest: InvestmentStatementRequest = new InvestmentStatementRequest();\n    investRequest.setAccount(details);\n    investRequest.setStatementRange(range);\n    investRequest.setIncludePosition(new IncludePosition());\n    return investRequest;\n  }\n\n  private createSecurityListRequestMessageSet(transaction: SecurityListRequestTransaction): RequestMessageSet {\n    var securityListRequest: SecurityListRequestMessageSet =\n        new SecurityListRequestMessageSet();\n    securityListRequest.setSecurityListRequest(transaction);\n    return securityListRequest;\n  }\n\n  private createSecurityListRequest(securities: Array<SecurityRequest>): SecurityListRequest {\n    var securityListRequest: SecurityListRequest = new SecurityListRequest();\n    securityListRequest.setSecurityRequests(securities);\n    return securityListRequest;\n  }\n\n  private unwrapSecurityList(response: ResponseEnvelope) /*throws OFXException*/: SecurityList {\n    var securityListSet: SecurityListResponseMessageSet =\n        <SecurityListResponseMessageSet> response.getMessageSet(MessageSetType.investment_security);\n    if (securityListSet == null) {\n      throw new OFXException(\"No security list response message set.\");\n    }\n\n    var securityList: SecurityList = securityListSet.getSecurityList();\n    if (securityList == null) {\n      throw new OFXException(\"No security list response transaction.\");\n    }\n\n    return securityList;\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../client/impl/InvestmentAccountImpl.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../collections/SortedSet'/>\n///<reference path='../../OFXException'/>\n///<reference path='../../OFXStatusException'/>\n///<reference path='../../client/NoOFXResponseException'/>\n///<reference path='../../UnsupportedOFXSecurityTypeException'/>\n///<reference path='../../OFXTransactionException'/>\n///<reference path='../context/OFXApplicationContextHolder'/>\n///<reference path='../../domain/data/signon/SignonRequest'/>\n///<reference path='../../domain/data/signon/SignonRequestMessageSet'/>\n///<reference path='../../domain/data/signup/SignupRequestMessageSet'/>\n///<reference path='../../domain/data/signup/SignupResponseMessageSet'/>\n///<reference path='../../domain/data/common/StatusHolder'/>\n///<reference path='../../domain/data/profile/ProfileRequestMessageSet'/>\n///<reference path='../../domain/data/profile/ProfileRequestTransaction'/>\n///<reference path='../../domain/data/profile/ProfileResponse'/>\n///<reference path='../../domain/data/profile/ProfileResponseMessageSet'/>\n///<reference path='../../domain/data/profile/ProfileResponseTransaction'/>\n///<reference path='../../domain/data/signup/AccountProfile'/>\n///<reference path='../../domain/data/signup/AccountInfoRequest'/>\n///<reference path='../../domain/data/signup/AccountInfoResponse'/>\n///<reference path='../../domain/data/ApplicationSecurity'/>\n///<reference path='../../domain/data/RequestEnvelope'/>\n///<reference path='../../domain/data/RequestMessageSet'/>\n///<reference path='../../domain/data/ResponseMessageSet'/>\n///<reference path='../net/OFXConnection'/>\n///<reference path='../net/OFXConnectionException'/>\n///<reference path='../BankAccount'/>\n///<reference path='../FinancialInstitution'/>\n///<reference path='BankingAccountImpl'/>\n///<reference path='InvestmentAccountImpl'/>\n///<reference path='../../collections/collections'/>\n\nmodule ofx4js.client.impl {\n\nimport SortedSet = ofx4js.collections.SortedSet;\nimport OFXException = ofx4js.OFXException;\nimport OFXStatusException = ofx4js.OFXStatusException;\nimport UnsupportedOFXSecurityTypeException = ofx4js.UnsupportedOFXSecurityTypeException;\nimport OFXTransactionException = ofx4js.OFXTransactionException;\nimport NoOFXResponseException = ofx4js.client.NoOFXResponseException;\n//import client.* = ofx4js.client.*;\nimport OFXApplicationContextHolder = ofx4js.client.context.OFXApplicationContextHolder;\n//import data.* = ofx4js.domain.data.*;\nimport MessageSetType = ofx4js.domain.data.MessageSetType;\nimport RequestMessage = ofx4js.domain.data.RequestMessage;\nimport ResponseMessage = ofx4js.domain.data.ResponseMessage;\nimport RequestMessageSet = ofx4js.domain.data.RequestMessageSet;\nimport ResponseMessageSet = ofx4js.domain.data.ResponseMessageSet;\nimport TransactionWrappedRequestMessage = ofx4js.domain.data.TransactionWrappedRequestMessage;\nimport TransactionWrappedResponseMessage = ofx4js.domain.data.TransactionWrappedResponseMessage;\nimport AccountProfile = ofx4js.domain.data.signup.AccountProfile;\nimport AccountInfoRequest = ofx4js.domain.data.signup.AccountInfoRequest;\nimport AccountInfoRequestTransaction = ofx4js.domain.data.signup.AccountInfoRequestTransaction;\nimport AccountInfoResponse = ofx4js.domain.data.signup.AccountInfoResponse;\nimport AccountInfoResponseTransaction = ofx4js.domain.data.signup.AccountInfoResponseTransaction;\nimport ApplicationSecurity = ofx4js.domain.data.ApplicationSecurity;\nimport RequestEnvelope = ofx4js.domain.data.RequestEnvelope;\nimport ResponseEnvelope = ofx4js.domain.data.ResponseEnvelope;\nimport ProfileRequest = ofx4js.domain.data.profile.ProfileRequest;\nimport ProfileRequestMessageSet = ofx4js.domain.data.profile.ProfileRequestMessageSet;\nimport ProfileRequestTransaction = ofx4js.domain.data.profile.ProfileRequestTransaction;\nimport ProfileResponse = ofx4js.domain.data.profile.ProfileResponse;\nimport ProfileResponseMessageSet = ofx4js.domain.data.profile.ProfileResponseMessageSet;\nimport ProfileResponseTransaction = ofx4js.domain.data.profile.ProfileResponseTransaction;\nimport InvestmentAccount = ofx4js.client.InvestmentAccount;\nimport InvestmentAccountDetails = ofx4js.domain.data.investment.accounts.InvestmentAccountDetails;\n//import signup.* = ofx4js.domain.data.signup.*;\nimport CreditCardAccountDetails = ofx4js.domain.data.creditcard.CreditCardAccountDetails;\nimport BankAccountDetails = ofx4js.domain.data.banking.BankAccountDetails;\nimport Status = ofx4js.domain.data.common.Status;\nimport KnownCode = ofx4js.domain.data.common.KnownCode;\nimport StatusHolder = ofx4js.domain.data.common.StatusHolder;\nimport instanceof_StatusHolder = ofx4js.domain.data.common.instanceof_StatusHolder;\nimport SignonRequest = ofx4js.domain.data.signon.SignonRequest;\n//import profile.* = ofx4js.domain.data.signon.SignonRequest;\nimport SignonRequestMessageSet = ofx4js.domain.data.signon.SignonRequestMessageSet;\nimport SignonResponse = ofx4js.domain.data.signon.SignonResponse;\nimport SignonResponseMessageSet = ofx4js.domain.data.signon.SignonResponseMessageSet;\nimport SignupRequestMessageSet = ofx4js.domain.data.signup.SignupRequestMessageSet;\nimport SignupResponseMessageSet = ofx4js.domain.data.signup.SignupResponseMessageSet;\nimport OFXConnection = ofx4js.client.net.OFXConnection;\nimport OFXConnectionException = ofx4js.client.net.OFXConnectionException;\nimport BankAccount = ofx4js.client.BankAccount;\nimport StringSet = ofx4js.collections.StringSet;\n\n//import java.net.URL;\n\n/**\n * Base implementation for the financial institution.\n *\n * @author Ryan Heaton\n */\nexport class FinancialInstitutionImpl implements FinancialInstitution {\n\n  private connection: OFXConnection;\n  private data: FinancialInstitutionData;\n\n  constructor(data: FinancialInstitutionData, connection: OFXConnection) {\n    if (data == null) {\n      throw new OFXException(\"Data cannot be null\");\n    }\n    if (connection == null) {\n      throw new OFXException(\"An OFX connection must be supplied\");\n    }\n\n    this.data = data;\n    this.connection = connection;\n  }\n\n  // Inherited.\n  public readProfile() /*throws OFXException*/: Promise<FinancialInstitutionProfile> {\n    var request: RequestEnvelope = this.createAuthenticatedRequest(SignonRequest.ANONYMOUS_USER, SignonRequest.ANONYMOUS_USER);\n    var profileRequest: ProfileRequestMessageSet = new ProfileRequestMessageSet();\n    profileRequest.setProfileRequest(this.createProfileTransaction());\n    request.getMessageSets().insert(profileRequest);\n    return this.sendRequest(request, this.getData().getOFXURL())\n    .then((response: ResponseEnvelope): FinancialInstitutionProfile => {\n      this.doGeneralValidationChecks(request, response);\n      return this.getProfile(response);\n    });\n  }\n\n  // Inherited.\n  public readAccountProfiles(username: string, password: string) /*throws OFXException*/: Promise<Array<AccountProfile>> {\n    var request: RequestEnvelope = this.createAuthenticatedRequest(username, password);\n    var signupRequest: SignupRequestMessageSet = new SignupRequestMessageSet();\n    signupRequest.setAccountInfoRequest(this.createAccountInfoTransaction());\n    request.getMessageSets().insert(signupRequest);\n    return this.sendRequest(request, this.getData().getOFXURL())\n    .then((response: ResponseEnvelope): Array<AccountProfile> => {\n      this.doGeneralValidationChecks(request, response);\n      return this.getAccountProfiles(response);\n    });\n  }\n\n  // Inherited.\n  public loadBankAccount(details: BankAccountDetails, username: string, password: string): BankAccount {\n    return new BankingAccountImpl(details, username, password, this);\n  }\n\n  // Inherited.\n  public loadCreditCardAccount(details: CreditCardAccountDetails, username: string, password: string): CreditCardAccount {\n    return new CreditCardAccountImpl(details, username, password, this);\n  }\n\n  // Inherited\n  public loadInvestmentAccount(details: InvestmentAccountDetails, username: string, password: string): InvestmentAccount {\n    return new InvestmentAccountImpl(details, username, password, this);\n  }\n\n  /**\n   * Create an authenticated request envelope.\n   *\n   * @param username The username.\n   * @param password The password.\n   * @return The request envelope.\n   */\n  public createAuthenticatedRequest(username: string, password: string): RequestEnvelope {\n    var request: RequestEnvelope = new RequestEnvelope();\n    var messageSets: SortedSet<RequestMessageSet> = new SortedSet<RequestMessageSet>(RequestMessageSet.contentCompare);\n    var signonRequest: SignonRequestMessageSet = new SignonRequestMessageSet();\n    signonRequest.setSignonRequest(this.createSignonRequest(username, password));\n    messageSets.insert(signonRequest);\n    request.setMessageSets(messageSets);\n    return request;\n  }\n\n//  /**\n//   * Send a request.\n//   *\n//   * @param request The request.\n//   * @return The request.\n//   */\n//  protected sendRequest(request: RequestEnvelope) /*throws OFXConnectionException*/: ResponseEnvelope {\n//    return this.getConnection().sendRequest(request, getData().getOFXURL());\n//  }\n\n  /**\n   * Send a request to a specific URL.\n   *\n   * @param request The request.\n   * @param url The url.\n   * @return The request.\n   */\n  public sendRequest(request: RequestEnvelope, url: string = this.getData().getOFXURL()) /*throws OFXConnectionException*/: Promise<ResponseEnvelope> {\n    return this.getConnection().sendRequest(request, url);\n  }\n\n  /**\n   * Open the specified response envelope and look for the profile.\n   *\n   * @param response The response envelope.\n   * @return The profile.\n   */\n  protected getProfile(response: ResponseEnvelope) /*throws OFXException*/: FinancialInstitutionProfile {\n\n    var profileSet: ProfileResponseMessageSet = <ProfileResponseMessageSet> response.getMessageSet(MessageSetType.profile);\n    if (profileSet == null) {\n      throw new OFXException(\"No profile response set.\");\n    }\n\n    var transactionResponse: ProfileResponseTransaction = profileSet.getProfileResponse();\n    if (transactionResponse == null) {\n      throw new OFXException(\"No profile transaction wrapper.\");\n    }\n\n    var message: ProfileResponse = transactionResponse.getMessage();\n    if (message == null) {\n      throw new OFXException(\"No profile message.\");\n    }\n    return message;\n  }\n\n  /**\n   * General validation checks on the specified response.\n   *\n   * @param request The request.\n   * @param response Their response.\n   * @throws OFXException Upon invalid response.\n   */\n  public doGeneralValidationChecks(request: RequestEnvelope, response: ResponseEnvelope) /*throws OFXException*/: void {\n    if (response.getSecurity() != ApplicationSecurity.NONE) {\n      throw new UnsupportedOFXSecurityTypeException(\"Unable to participate in \" + response.getSecurity() + \" security.\");\n    }\n\n    if (request.getUID() !== response.getUID()) {\n      throw new OFXException(\"Invalid transaction ID '\" + response.getUID() + \"' in response.  Expected: \" + request);\n    }\n\n    for (var requestSet of request.getMessageSets().values()) {\n      var responseSet: ResponseMessageSet = response.getMessageSet(requestSet.getType());\n      if (responseSet == null) {\n        throw new NoOFXResponseException(\"No response for the \" + requestSet.getType() + \" request.\");\n      }\n\n      if (responseSet.getType() == MessageSetType.signon) {\n        var signonResponse: SignonResponse = (<SignonResponseMessageSet> responseSet).getSignonResponse();\n\n        if (signonResponse == null) {\n          throw new NoOFXResponseException(\"No signon response.\");\n        }\n      }\n\n      var transactionIds: StringSet = {};\n      for (var requestMessage of requestSet.getRequestMessages()) {\n        if (requestMessage instanceof TransactionWrappedRequestMessage) {\n          transactionIds[(<TransactionWrappedRequestMessage<RequestMessage>> requestMessage).getUID()] = true;\n        }\n      }\n\n      for (var responseMessage of responseSet.getResponseMessages()) {\n        if (instanceof_StatusHolder(responseMessage)) {\n          this.validateStatus(<StatusHolder><any>responseMessage);\n        }\n\n        if (responseMessage instanceof TransactionWrappedResponseMessage) {\n          var uid: string = (<TransactionWrappedResponseMessage<ResponseMessage>> responseMessage).getUID();\n          if (uid == null) {\n            throw new OFXTransactionException(\"Invalid response transaction: no UID.\");\n          }\n          else if (!(uid in transactionIds)) {\n            throw new OFXTransactionException(\"Response to an unknown transaction: \" + uid + \".\");\n          } else {\n            delete transactionIds[uid];\n          }\n        }\n      }\n\n      if (Object.keys(transactionIds).length != 0) {\n        throw new OFXTransactionException(\"No response to the following transactions: \" + transactionIds);\n      }\n    }\n  }\n\n  /**\n   * Validate the status of the given status holder.\n   *\n   * @param statusHolder The status holder.\n   */\n  protected validateStatus(statusHolder: StatusHolder) /*throws OFXException*/: void {\n    var status: Status = statusHolder.getStatus();\n    if (status == null) {\n      throw new OFXException(\"Invalid OFX response: no status returned in the \" + statusHolder.getStatusHolderName() + \" response.\");\n    }\n\n    if (KnownCode.SUCCESS != status.getCode()) {\n      var message: string = status.getMessage();\n      if (message == null) {\n        message = \"No response status code.\";\n\n        if (status.getCode() != null) {\n          message = status.getCode().getMessage();\n        }\n      }\n\n      throw new OFXStatusException(status, \"Invalid \" + statusHolder.getStatusHolderName() + \": \" + message);\n    }\n  }\n\n  /**\n   * Create a transaction message for a profile request.\n   *\n   * @return The transaction message.\n   */\n  protected createProfileTransaction(): ProfileRequestTransaction {\n    var profileTx: ProfileRequestTransaction = new ProfileRequestTransaction();\n    profileTx.setMessage(this.createProfileRequest());\n    return profileTx;\n  }\n\n  /**\n   * Create a profile request.\n   *\n   * @return The profile request.\n   */\n  protected createProfileRequest(): ProfileRequest {\n    var profileRequest: ProfileRequest = new ProfileRequest();\n    profileRequest.setProfileLastUpdated(new Date(0));\n    return profileRequest;\n  }\n\n  /**\n   * Create a sign-on request for the specified user.\n   *\n   * @param username The username.\n   * @param password The password.\n   * @return The signon request.\n   */\n  protected createSignonRequest(username: string, password: string): SignonRequest {\n    var signonRequest: SignonRequest = new SignonRequest();\n    signonRequest.setTimestamp(new Date());\n    var fi: ofx4js.domain.data.signon.FinancialInstitution = new ofx4js.domain.data.signon.FinancialInstitution();\n    fi.setId(this.getData().getFinancialInstitutionId());\n    fi.setOrganization(this.getData().getOrganization());\n    signonRequest.setFinancialInstitution(fi);\n    signonRequest.setUserId(username);\n    signonRequest.setPassword(password);\n    signonRequest.setApplicationId(OFXApplicationContextHolder.getCurrentContext().getAppId());\n    signonRequest.setApplicationVersion(OFXApplicationContextHolder.getCurrentContext().getAppVersion());\n    return signonRequest;\n  }\n\n  /**\n   * Create a transaction for an account info request.\n   *\n   * @return The transaction.\n   */\n  protected createAccountInfoTransaction(): AccountInfoRequestTransaction {\n    var transaction: AccountInfoRequestTransaction = new AccountInfoRequestTransaction();\n    transaction.setMessage(this.createAccountInfoRequest());\n    return transaction;\n  }\n\n  /**\n   * Create an account info request.\n   *\n   * @return The account info request.\n   */\n  protected createAccountInfoRequest(): AccountInfoRequest {\n    return new AccountInfoRequest();\n  }\n\n  /**\n   * Get the account profiles for the specified response envelope.\n   *\n   * @param response The response envelope.\n   * @return The account profiles.\n   */\n  protected getAccountProfiles(response: ResponseEnvelope) /*throws OFXException*/: Array<AccountProfile> {\n    var messageSet: SignupResponseMessageSet = <SignupResponseMessageSet> response.getMessageSet(MessageSetType.signup);\n    if (messageSet == null) {\n      throw new OFXException(\"No signup response message set.\");\n    }\n\n    var transaction: AccountInfoResponseTransaction = messageSet.getAccountInfoResponse();\n    if (transaction == null) {\n      throw new OFXException(\"No account info transaction in the signup response.\");\n    }\n\n    var infoResponse: AccountInfoResponse = transaction.getMessage();\n    if (infoResponse == null) {\n      throw new OFXException(\"No account info response in the transaction.\");\n    }\n\n    return infoResponse.getAccounts();\n  }\n\n  /**\n   * The connection used by this implementation.\n   *\n   * @return The connection used by this implementation.\n   */\n  public getConnection(): OFXConnection {\n    return this.connection;\n  }\n\n  /**\n   * The financial institution data.\n   *\n   * @return The financial institution data.\n   */\n  public getData(): FinancialInstitutionData {\n    return this.data;\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../client/impl/FinancialInstitutionImpl.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../domain/data/common/StatementResponse'/>\n///<reference path='../../domain/data/common/StatementRequest'/>\n///<reference path='../../domain/data/banking/BankingResponseMessageSet'/>\n///<reference path='../../domain/data/banking/BankStatementRequest'/>\n///<reference path='../../domain/data/banking/BankingRequestMessageSet'/>\n///<reference path='../../OFXException'/>\n///<reference path='../../client/BankAccount'/>\n///<reference path='BaseAccountImpl'/>\n///<reference path='FinancialInstitutionImpl'/>\n\nmodule ofx4js.client.impl {\n\nimport StatementResponse = ofx4js.domain.data.common.StatementResponse;\nimport StatementRequest = ofx4js.domain.data.common.StatementRequest;\nimport StatementRange = ofx4js.domain.data.common.StatementRange;\n//import data.* = ofx4js.domain.data.*;\nimport RequestMessage = ofx4js.domain.data.RequestMessage;\nimport ResponseEnvelope = ofx4js.domain.data.ResponseEnvelope;\nimport RequestMessageSet = ofx4js.domain.data.RequestMessageSet;\nimport MessageSetType = ofx4js.domain.data.MessageSetType;\nimport TransactionWrappedRequestMessage = ofx4js.domain.data.TransactionWrappedRequestMessage;\n//import banking.* = ofx4js.domain.data.banking.*;\nimport BankAccountDetails = ofx4js.domain.data.banking.BankAccountDetails;\nimport BankingResponseMessageSet = ofx4js.domain.data.banking.BankingResponseMessageSet;\nimport BankStatementRequest = ofx4js.domain.data.banking.BankStatementRequest;\nimport BankStatementResponse = ofx4js.domain.data.banking.BankStatementResponse;\nimport BankStatementResponseTransaction = ofx4js.domain.data.banking.BankStatementResponseTransaction;\nimport BankingRequestMessageSet = ofx4js.domain.data.banking.BankingRequestMessageSet;\nimport BankStatementRequestTransaction = ofx4js.domain.data.banking.BankStatementRequestTransaction;\nimport OFXException = ofx4js.OFXException;\nimport BankAccount = ofx4js.client.BankAccount;\n\n/**\n * @author Ryan Heaton\n */\nexport class BankingAccountImpl extends BaseAccountImpl<BankAccountDetails> implements BankAccount {\n\n  constructor(details: BankAccountDetails, username: string, password: string, institution: FinancialInstitutionImpl) {\n    super(details, username, password, institution);\n  }\n\n  protected unwrapStatementResponse(response: ResponseEnvelope) /*throws OFXException*/: StatementResponse {\n    var bankingSet: BankingResponseMessageSet = <BankingResponseMessageSet> response.getMessageSet(MessageSetType.banking);\n    if (bankingSet == null) {\n      throw new OFXException(\"No banking response message set.\");\n    }\n\n    var statementTransactionResponse: BankStatementResponseTransaction = bankingSet.getStatementResponse();\n    if (statementTransactionResponse == null) {\n      throw new OFXException(\"No banking statement response transaction.\");\n    }\n\n    var statement: BankStatementResponse = statementTransactionResponse.getMessage();\n    if (statement == null) {\n      throw new OFXException(\"No banking statement in the transaction.\");\n    }\n\n    return statement;\n  }\n\n  protected createRequestMessageSet(transaction: TransactionWrappedRequestMessage<RequestMessage>): RequestMessageSet {\n    var bankingRequest: BankingRequestMessageSet = new BankingRequestMessageSet();\n    bankingRequest.setStatementRequest(<BankStatementRequestTransaction> transaction);\n    return bankingRequest;\n  }\n\n  protected createTransaction(): TransactionWrappedRequestMessage<RequestMessage> {\n    return new BankStatementRequestTransaction();\n  }\n\n  protected createStatementRequest(details: BankAccountDetails, range: StatementRange): StatementRequest {\n    var bankRequest: BankStatementRequest = new BankStatementRequest();\n    bankRequest.setAccount(details);\n    bankRequest.setStatementRange(range);\n    return bankRequest;\n  }\n\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../client/impl/BankingAccountImpl.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../client/FinancialInstitutionData'/>\n\nmodule ofx4js.client.impl {\n\nimport FinancialInstitutionData = ofx4js.client.FinancialInstitutionData;\n\n//import java.net.URL;\n\n/**\n * Base bean for FI data.\n *\n * @author Ryan Heaton\n */\nexport class BaseFinancialInstitutionData implements FinancialInstitutionData {\n\n  private id: string;\n  private fid: string;\n  private name: string;\n  private organization: string;\n  private ofxUrl: string;\n  private brokerId: string;\n\n  public constructor(id?: string) {\n    this.id = id;\n  }\n\n  public getId(): string {\n    return this.id;\n  }\n\n  public setId(id: string): void {\n    this.id = id;\n  }\n\n  public getFinancialInstitutionId(): string {\n    return this.fid;\n  }\n\n  public setFinancialInstitutionId(id: string): void {\n    this.fid = id;\n  }\n\n  public getName(): string {\n    return this.name;\n  }\n\n  public setName(name: string): void {\n    this.name = name;\n  }\n\n  public getOrganization(): string {\n    return this.organization;\n  }\n\n  public setOrganization(organization: string): void {\n    this.organization = organization;\n  }\n\n  public getOFXURL(): string {\n    return this.ofxUrl;\n  }\n\n  public setOFXURL(OFXURL: string): void {\n    this.ofxUrl = OFXURL;\n  }\n\n  public getBrokerId(): string {\n    return this.brokerId;\n  }\n\n  public setBrokerId(brokerId: string): void {\n    this.brokerId = brokerId;\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../client/impl/BaseFinancialInstitutionData.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../common/StatementRequest'/>\n///<reference path='CreditCardAccountDetails'/>\n\nmodule ofx4js.domain.data.creditcard {\n\nimport StatementRequest = ofx4js.domain.data.common.StatementRequest;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * @author Ryan Heaton\n */\nexport class CreditCardStatementRequest extends StatementRequest {\n\n  private account: CreditCardAccountDetails;\n\n  /**\n   * The account details.\n   *\n   * @return The account details.\n   */\n  public getAccount(): CreditCardAccountDetails {\n    return this.account;\n  }\n\n  /**\n   * The account details.\n   *\n   * @param account The account details.\n   */\n  public setAccount(account: CreditCardAccountDetails): void {\n    this.account = account;\n  }\n}\n\nAggregate_add( CreditCardStatementRequest, \"CCSTMTRQ\" );\nChildAggregate_add(CreditCardStatementRequest, { name: \"CCACCTFROM\", required: true, order: 0, type: CreditCardAccountDetails, read: CreditCardStatementRequest.prototype.getAccount, write: CreditCardStatementRequest.prototype.setAccount });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/creditcard/CreditCardStatementRequest.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../TransactionWrappedRequestMessage'/>\n///<reference path='CreditCardStatementRequest'/>\n\nmodule ofx4js.domain.data.creditcard {\n\nimport TransactionWrappedRequestMessage = ofx4js.domain.data.TransactionWrappedRequestMessage;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * @author Ryan Heaton\n */\nexport class CreditCardStatementRequestTransaction extends TransactionWrappedRequestMessage<CreditCardStatementRequest> {\n\n  private message: CreditCardStatementRequest;\n\n  /**\n   * The message.\n   *\n   * @return The message.\n   */\n  public getMessage(): CreditCardStatementRequest {\n    return this.message;\n  }\n\n  /**\n   * The message.\n   *\n   * @param message The message.\n   *\n   */\n  public setMessage(message: CreditCardStatementRequest): void {\n    this.message = message;\n  }\n\n  // Inherited.\n  public setWrappedMessage(message: CreditCardStatementRequest): void {\n    this.setMessage(message);\n  }\n}\n\nAggregate_add( CreditCardStatementRequestTransaction, \"CCSTMTTRNRQ\" );\nChildAggregate_add(CreditCardStatementRequestTransaction, { required: true, order: 30, type: CreditCardStatementRequest, read: CreditCardStatementRequestTransaction.prototype.getMessage, write: CreditCardStatementRequestTransaction.prototype.setMessage });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/creditcard/CreditCardStatementRequestTransaction.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../MessageSetType'/>\n///<reference path='../RequestMessageSet'/>\n///<reference path='CreditCardStatementRequestTransaction'/>\n\nmodule ofx4js.domain.data.creditcard {\n\nimport MessageSetType = ofx4js.domain.data.MessageSetType;\nimport RequestMessageSet = ofx4js.domain.data.RequestMessageSet;\nimport RequestMessage = ofx4js.domain.data.RequestMessage;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n//import java.util.List;\n//import java.util.ArrayList;\n\n/**\n * @author Ryan Heaton\n */\nexport class CreditCardRequestMessageSet extends RequestMessageSet {\n\n  private statementRequest: CreditCardStatementRequestTransaction;\n\n  public getType(): MessageSetType {\n    return MessageSetType.creditcard;\n  }\n\n  /**\n   * The request.\n   *\n   * @return The request.\n   */\n  public getStatementRequest(): CreditCardStatementRequestTransaction {\n    return this.statementRequest;\n  }\n\n  /**\n   * The request.\n   *\n   * @param statementRequest The request.\n   */\n  public setStatementRequest(statementRequest: CreditCardStatementRequestTransaction): void {\n    this.statementRequest = statementRequest;\n  }\n\n  // Inherited.\n  public getRequestMessages(): Array<RequestMessage> {\n    var requestMessages: Array<RequestMessage> = [];\n    if (this.getStatementRequest() != null) {\n      requestMessages.push(this.getStatementRequest());\n    }\n    return requestMessages;\n  }\n}\n\nAggregate_add( CreditCardRequestMessageSet, \"CREDITCARDMSGSRQV1\" );\nChildAggregate_add(CreditCardRequestMessageSet, { order: 0, type: CreditCardStatementRequestTransaction, read: CreditCardRequestMessageSet.prototype.getStatementRequest, write: CreditCardRequestMessageSet.prototype.setStatementRequest });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/creditcard/CreditCardRequestMessageSet.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../common/StatementResponse'/>\n///<reference path='CreditCardAccountDetails'/>\n\nmodule ofx4js.domain.data.creditcard {\n\nimport StatementResponse = ofx4js.domain.data.common.StatementResponse;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * @author Ryan Heaton\n */\nexport class CreditCardStatementResponse extends StatementResponse {\n\n  private account: CreditCardAccountDetails;\n\n  public getResponseMessageName(): string {\n    return \"credit card statement\";\n  }\n\n  /**\n   * The account for the statement.\n   *\n   * @return The account for the statement.\n   */\n  public getAccount(): CreditCardAccountDetails {\n    return this.account;\n  }\n\n  /**\n   * The account for the statement.\n   *\n   * @param account The account for the statement.\n   */\n  public setAccount(account: CreditCardAccountDetails): void {\n    this.account = account;\n  }\n}\n\nAggregate_add( CreditCardStatementResponse, \"CCSTMTRS\");\nChildAggregate_add(CreditCardStatementResponse, { name:\"CCACCTFROM\", order: 10, type: CreditCardAccountDetails, read: CreditCardStatementResponse.prototype.getAccount, write: CreditCardStatementResponse.prototype.setAccount });\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/creditcard/CreditCardStatementResponse.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../TransactionWrappedResponseMessage'/>\n///<reference path='CreditCardStatementResponse'/>\n\nmodule ofx4js.domain.data.creditcard {\n\nimport TransactionWrappedResponseMessage = ofx4js.domain.data.TransactionWrappedResponseMessage;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * @author Ryan Heaton\n */\nexport class CreditCardStatementResponseTransaction extends TransactionWrappedResponseMessage<CreditCardStatementResponse> {\n\n  private message: CreditCardStatementResponse;\n\n  /**\n   * The message.\n   *\n   * @return The message.\n   */\n  public getMessage(): CreditCardStatementResponse {\n    return this.message;\n  }\n\n  /**\n   * The message.\n   *\n   * @param message The message.\n   */\n  public setMessage(message: CreditCardStatementResponse): void {\n    this.message = message;\n  }\n\n  // Inherited.\n  public getWrappedMessage(): CreditCardStatementResponse {\n    return this.getMessage();\n  }\n}\n\nAggregate_add( CreditCardStatementResponseTransaction, \"CCSTMTTRNRS\" )\nChildAggregate_add(CreditCardStatementResponseTransaction, { required: true, order: 30, type: CreditCardStatementResponse, read: CreditCardStatementResponseTransaction.prototype.getMessage, write: CreditCardStatementResponseTransaction.prototype.setMessage });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/creditcard/CreditCardStatementResponseTransaction.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../MessageSetType'/>\n///<reference path='../ResponseMessage'/>\n///<reference path='../ResponseMessageSet'/>\n///<reference path='CreditCardStatementResponseTransaction'/>\n\nmodule ofx4js.domain.data.creditcard {\n\nimport MessageSetType = ofx4js.domain.data.MessageSetType;\nimport ResponseMessage = ofx4js.domain.data.ResponseMessage;\nimport ResponseMessageSet = ofx4js.domain.data.ResponseMessageSet;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * @author Ryan Heaton\n */\nexport class CreditCardResponseMessageSet extends ResponseMessageSet {\n\n  private statementResponses: Array<CreditCardStatementResponseTransaction>;\n\n  public getType(): MessageSetType {\n    return MessageSetType.creditcard;\n  }\n\n  /**\n   * The statement response list.\n   *\n   * Most OFX files have a single statement response, except MT2OFX\n   * which outputs OFX with multiple statement responses\n   * in a single banking response message set.\n   *\n   * @return The statement response list.\n   */\n  public getStatementResponses(): Array<CreditCardStatementResponseTransaction> {\n    return this.statementResponses;\n  }\n\n\n  /**\n   * The statement reponse list.\n   *\n   * @param statementResponses The statement response list.\n   */\n  public setStatementResponses(statementResponses: Array<CreditCardStatementResponseTransaction>): void {\n    this.statementResponses = statementResponses;\n  }\n\n\n  /**\n   * The first statement response.\n   *\n   * @return the first bank statement response.\n   * @deprecated Use getStatementResponses() because sometimes there are multiple responses\n   */\n  public getStatementResponse(): CreditCardStatementResponseTransaction {\n    return this.statementResponses == null || this.statementResponses.length == 0 ? null : this.statementResponses[0];\n  }\n\n  /**\n   * The statement response.\n   *\n   * @param statementResponse The statement response.\n   */\n  public setStatementResponse(statementResponse: CreditCardStatementResponseTransaction): void {\n    this.statementResponses = [statementResponse];\n  }\n\n\n  // Inherited.\n  public getResponseMessages(): Array<ResponseMessage> {\n    return this.statementResponses;\n  }\n}\n\nAggregate_add( CreditCardResponseMessageSet, \"CREDITCARDMSGSRSV1\" );\nChildAggregate_add(CreditCardResponseMessageSet, { order: 0, type: Array, collectionEntryType: CreditCardStatementResponseTransaction, read: CreditCardResponseMessageSet.prototype.getStatementResponses, write: CreditCardResponseMessageSet.prototype.setStatementResponses });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/creditcard/CreditCardResponseMessageSet.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../domain/data/common/StatementResponse'/>\n///<reference path='../../domain/data/common/StatementRequest'/>\n///<reference path='../../domain/data/common/StatementRange'/>\n///<reference path='../../domain/data/ResponseEnvelope'/>\n///<reference path='../../domain/data/creditcard/CreditCardStatementRequest'/>\n///<reference path='../../domain/data/creditcard/CreditCardRequestMessageSet'/>\n///<reference path='../../domain/data/creditcard/CreditCardResponseMessageSet'/>\n///<reference path='../../domain/data/creditcard/CreditCardStatementResponse'/>\n///<reference path='../../OFXException'/>\n///<reference path='../CreditCardAccount'/>\n///<reference path='BaseAccountImpl'/>\n///<reference path='FinancialInstitutionImpl'/>\n\nmodule ofx4js.client.impl {\n\nimport StatementResponse = ofx4js.domain.data.common.StatementResponse;\nimport StatementRequest = ofx4js.domain.data.common.StatementRequest;\nimport StatementRange = ofx4js.domain.data.common.StatementRange;\n//import data.* = ofx4js.domain.data.*;\nimport ResponseEnvelope = ofx4js.domain.data.ResponseEnvelope;\nimport MessageSetType = ofx4js.domain.data.MessageSetType;\nimport TransactionWrappedRequestMessage = ofx4js.domain.data.TransactionWrappedRequestMessage;\nimport RequestMessage = ofx4js.domain.data.RequestMessage;\nimport RequestMessageSet = ofx4js.domain.data.RequestMessageSet;\n//import creditcard.* = ofx4js.domain.data.creditcard.*;\nimport CreditCardAccountDetails = ofx4js.domain.data.creditcard.CreditCardAccountDetails;\nimport CreditCardRequestMessageSet = ofx4js.domain.data.creditcard.CreditCardRequestMessageSet;\nimport CreditCardResponseMessageSet = ofx4js.domain.data.creditcard.CreditCardResponseMessageSet;\nimport CreditCardStatementRequest = ofx4js.domain.data.creditcard.CreditCardStatementRequest;\nimport CreditCardStatementResponse = ofx4js.domain.data.creditcard.CreditCardStatementResponse;\nimport CreditCardStatementRequestTransaction = ofx4js.domain.data.creditcard.CreditCardStatementRequestTransaction;\nimport CreditCardStatementResponseTransaction = ofx4js.domain.data.creditcard.CreditCardStatementResponseTransaction;\nimport OFXException = ofx4js.OFXException;\nimport CreditCardAccount = ofx4js.client.CreditCardAccount;\n\n/**\n * @author Ryan Heaton\n */\nexport class CreditCardAccountImpl extends BaseAccountImpl<CreditCardAccountDetails> implements CreditCardAccount {\n\n  constructor(details: CreditCardAccountDetails, username: string, password: string, institution: FinancialInstitutionImpl) {\n    super(details, username, password, institution);\n  }\n\n  protected unwrapStatementResponse(response: ResponseEnvelope) /*throws OFXException*/: StatementResponse {\n    var creditCardSet: CreditCardResponseMessageSet = <CreditCardResponseMessageSet> response.getMessageSet(MessageSetType.creditcard);\n    if (creditCardSet == null) {\n      throw new OFXException(\"No credit card response message set.\");\n    }\n\n    var statementTransactionResponse: CreditCardStatementResponseTransaction = creditCardSet.getStatementResponse();\n    if (statementTransactionResponse == null) {\n      throw new OFXException(\"No credit card statement response transaction.\");\n    }\n\n    var statement: CreditCardStatementResponse = statementTransactionResponse.getMessage();\n    if (statement == null) {\n      throw new OFXException(\"No credit card statement in the transaction.\");\n    }\n\n    return statement;\n  }\n\n  protected createRequestMessageSet(transaction: TransactionWrappedRequestMessage<RequestMessage>): RequestMessageSet {\n    var creditCardRequest: CreditCardRequestMessageSet = new CreditCardRequestMessageSet();\n    creditCardRequest.setStatementRequest(<CreditCardStatementRequestTransaction> transaction);\n    return creditCardRequest;\n  }\n\n  protected createTransaction(): TransactionWrappedRequestMessage<RequestMessage> {\n    return new CreditCardStatementRequestTransaction();\n  }\n\n  protected createStatementRequest(details: CreditCardAccountDetails, range: StatementRange): StatementRequest {\n    var bankRequest: CreditCardStatementRequest = new CreditCardStatementRequest();\n    bankRequest.setAccount(details);\n    bankRequest.setStatementRange(range);\n    return bankRequest;\n  }\n\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../client/impl/CreditCardAccountImpl.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='OFXConnectionException'/>\n\nmodule ofx4js.client.net {\n\n/**\n * @author Ryan Heaton\n */\nexport class OFXServerException extends OFXConnectionException {\n\n  private httpCode: number;\n\n  constructor(message: string, httpCode: number) {\n    super(message);\n    this.httpCode = httpCode;\n  }\n\n  public getHttpCode(): number {\n    return this.httpCode;\n  }\n}\n\n}\n\n\n// WEBPACK FOOTER //\n// ../../client/net/OFXServerException.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../OFXException'/>\n\nmodule ofx4js.io {\n\n/**\n * @author Ryan Heaton\n */\nexport class OFXParseException extends ofx4js.OFXException {\n\n  constructor(message: string) {\n    super(message);\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../io/OFXParseException.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='StatusCode'/>\n///<reference path='Status'/>\n\nmodule ofx4js.domain.data.common {\n\n/**\n * Holder for an unknown status code.\n *\n * @author Ryan Heaton\n */\nexport class UnknownStatusCode extends StatusCode {\n\n  private code: number;\n  private message: string;\n  private defaultSeverity: /*Status.*/Severity;\n\n  constructor(code: number, message: string, defaultSeverity: /*Status.*/Severity) {\n    super();\n    this.code = code;\n    this.message = message;\n    this.defaultSeverity = defaultSeverity;\n  }\n\n  public getCode(): number {\n    return this.code;\n  }\n\n  public getMessage(): string {\n    return this.message;\n  }\n\n  public getDefaultSeverity(): /*Status.*/Severity {\n    return this.defaultSeverity;\n  }\n\n  //@Override\n  public toString(): string {\n    return this.code.toString();\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/common/UnknownStatusCode.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../domain/data/common/Status'/>\n///<reference path='../domain/data/common/StatusCode'/>\n///<reference path='../domain/data/common/UnknownStatusCode'/>\n///<reference path='../meta/PropertyDescriptor'/>\n///<reference path='StringConversion'/>\n\nmodule ofx4js.io {\n\nimport Status = ofx4js.domain.data.common.Status;\nimport StatusCode = ofx4js.domain.data.common.StatusCode;\nimport Severity = ofx4js.domain.data.common.Severity;\nimport KnownCode = ofx4js.domain.data.common.KnownCode;\nimport UnknownStatusCode = ofx4js.domain.data.common.UnknownStatusCode;\nimport isAssignableFrom = ofx4js.meta.isAssignableFrom;\n\n\n/**\n * Utility class for conversion to/from OFX strings.\n *\n * @author Ryan Heaton\n */\nexport class DefaultStringConversion implements StringConversion {\n\n  public toString(value: Object): string {\n    if (!value) {\n      return null;\n    }\n    else if (typeof value === \"boolean\") {\n      return value ? \"Y\" : \"N\";\n    }\n    else if (value instanceof Date) {\n      return this.formatDate(value);\n    }\n    else if (typeof value === \"number\") {\n      return value + \"\";\n    }\n    else {\n      return value.toString();\n    }\n  }\n\n  public fromString<E>(clazz: any, value: string): E {\n    if (!value) {\n      return null;\n    }\n    else if (clazz === StatusCode) {\n      var code: number = <number><any>value;\n      var statusCode: StatusCode = KnownCode.fromCode(code);\n      if (!statusCode) {\n        statusCode = new UnknownStatusCode(code, \"Unknown status code.\", Severity.ERROR);\n      }\n      \n      return <E><any>statusCode;\n    }\n    else if (isAssignableFrom(Number, clazz)) {\n      return <E><any>parseFloat(value)\n    }\n    else if (isAssignableFrom(Boolean, clazz)) {\n      return <E><any>(\"Y\" === value.toUpperCase());\n    }\n    else if (isAssignableFrom(Date, clazz)) {\n      return <E><any>this.parseDate(value);\n    }\n    // this goes last because a lot of things are objects\n    else if (typeof clazz === \"object\") {\n      // enum\n      console.assert(value in clazz);\n      if(value in clazz) {\n        return clazz[value];\n      }\n    }\n    return <E><any>value;\n  }\n\n  /**\n   * Parses a date according to OFX.\n   *\n   * @param value The value of the date.\n   * @return The date value.\n   */\n  protected parseDate(value: string) {\n    var year: number = parseInt(value.substr(0, 4));\n    var month: number = parseInt(value.substr(4, 2)) - 1; // javascript month numbers are zero-based\n    var day: number = parseInt(value.substr(6, 2));\n    var hour: number = parseInt(value.substr(8, 2));\n    var minute: number = parseInt(value.substr(10, 2));\n    var second: number = parseInt(value.substr(12, 2)) || 0;\n    var milli: number = parseInt(value.substr(15, 3)) || 0;\n  \n    // add timezone offset\n    var bracket: number = value.indexOf(\"[\");\n    if(bracket != -1) {\n      var close = value.indexOf(\":\");\n      if(close === -1) {\n        close = value.indexOf(\"]\");\n      }\n      var gmtOffset: any = value.substring(bracket+1, close);\n      hour -= 1.0 * gmtOffset;\n    }\n    \n    // create date as UTC\n    return new Date(Date.UTC(year, month, day, hour, minute, second, milli));\n  }\n\n  /**\n   * Format the date according to the OFX spec.\n   *\n   * @param date The date.\n   * @return The date format.\n   */\n  protected formatDate(date: Date): string {\n    var gmt = new Date(date.valueOf() + date.getTimezoneOffset() * 60000);\n    return this.pad(gmt.getFullYear(), 4) +\n      this.pad(gmt.getMonth() + 1, 2) +\n      this.pad(gmt.getDay(), 2) +\n      this.pad(gmt.getHours(), 2) +\n      this.pad(gmt.getMinutes(), 2) +\n      this.pad(gmt.getSeconds(), 2) +\n      \".\" +\n      this.dpad(gmt.getMilliseconds(), 3);\n  }\n\n\n  /**\n   * Pad a number with leading zeroes until it is of <tt>size</tt> length\n   *\n   * @param num number\n   * @param size number of digits in final number\n   * @return padded number\n   */\n  private pad(num: number, size: number): string {\n    var s = num+\"\";\n    while (s.length < size) {\n      s = \"0\" + s;\n    }\n    return s;\n  }\n  \n  /**\n   * Pad a number with trailing zeroes until it is of <tt>size</tt> length.\n   * Intended for numbers after a decimal point to get a fixed number of decimals\n   *\n   * @param num number\n   * @param size number of digits in final number\n   * @return padded number\n   */\n  private dpad(num: number, size: number): string {\n    var s = num+\"\";\n    while (s.length < size) {\n      s = s + \"0\";\n    }\n    return s;\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../io/DefaultStringConversion.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../collections/SortedSet'/>\n///<reference path='../collections/collections'/>\n///<reference path='StringConversion'/>\n///<reference path='DefaultStringConversion'/>\n///<reference path='AggregateIntrospector'/>\n///<reference path='AggregateInfo'/>\n///<reference path='AggregateAttribute'/>\n///<reference path='OFXWriter'/>\n\nmodule ofx4js.io {\n\nimport SortedSet = ofx4js.collections.SortedSet;\nimport StringMap = ofx4js.collections.StringMap;\nimport Log = ofx4js.log.Log;\nimport LogFactory = ofx4js.log.LogFactory;\n\nvar LOG: Log;\n\n/**\n * Marshaller for aggregate objects.\n *\n * @author Ryan Heaton\n */\nexport class AggregateMarshaller {\n\n  private conversion: StringConversion;\n  \n  constructor() {\n    this.conversion = new DefaultStringConversion();\n  }\n\n  /**\n   * Marshal the specified aggregate object.\n   *\n   * @param aggregate The aggregate to marshal.\n   * @param writer    The writer.\n   */\n  public marshal(aggregate: Object, writer: OFXWriter) /*throws IOException*/: void {\n    var aggregateInfo: AggregateInfo = AggregateIntrospector.getAggregateInfo(aggregate.constructor);\n    if (aggregateInfo == null) {\n      throw new OFXException(\"Unable to marshal object (no aggregate metadata found).\");\n    }\n\n    if (aggregateInfo.hasHeaders()) {\n      var headerValues: HeaderValues = aggregateInfo.getHeaders(aggregate);\n      var convertedValues: StringMap = {};\n      for (var header in headerValues) {\n        convertedValues[header] = this.getConversion().toString(headerValues[header]);\n      }\n      writer.writeHeaders(convertedValues);\n    }\n\n    writer.writeStartAggregate(aggregateInfo.getName());\n    var AggregateAttributes: SortedSet<AggregateAttribute> = aggregateInfo.getAttributes();\n    this.writeAggregateAttributes(aggregate, writer, AggregateAttributes);\n    writer.writeEndAggregate(aggregateInfo.getName());\n  }\n\n  /**\n   * Write the aggregate attributes for the specified aggregate.\n   *\n   * @param aggregate           The aggregate.\n   * @param writer              The writer.\n   * @param aggregateAttributes The aggregate attributes.\n   */\n  protected writeAggregateAttributes(aggregate: Object, writer: OFXWriter, aggregateAttributes: SortedSet<AggregateAttribute>) /*throws IOException*/: void {\n    for (var i in aggregateAttributes.values()) {\n      var aggregateAttribute: AggregateAttribute = aggregateAttributes.values()[i];\n      var childValue: Object = null;\n      try {\n        childValue = aggregateAttribute.get(aggregate);\n      }\n      catch (e) {\n        LOG.error(\"Unable to get \" + aggregateAttribute.toString(), e);\n      }\n\n      if (childValue != null) {\n        switch (aggregateAttribute.getType()) {\n          case AggregateAttributeType.CHILD_AGGREGATE:\n            var childValues: Array<Object>;\n            if (childValue instanceof Array) {\n              childValues = childValue;\n            }\n            else if(childValue instanceof SortedSet) {\n              childValues = (<SortedSet<Object>>childValue).values();\n            }\n            else {\n              childValues = [childValue];\n            }\n\n            for (var objValue of childValues) {\n              var aggregateInfo: AggregateInfo = AggregateIntrospector.getAggregateInfo(objValue.constructor);\n              if (aggregateInfo == null) {\n                throw new OFXException(\"Unable to marshal object of type \" + objValue.constructor.name + \" (no aggregate metadata found).\");\n              }\n\n              var attributeName: string = aggregateAttribute.getName();\n              if (aggregateAttribute.isArray()) {\n                attributeName = aggregateInfo.getName();\n              }\n              \n              writer.writeStartAggregate(attributeName);\n              this.writeAggregateAttributes(objValue, writer, aggregateInfo.getAttributes());\n              writer.writeEndAggregate(attributeName);\n            }\n            break;\n          case AggregateAttributeType.ELEMENT:\n            var strValue: string = this.getConversion().toString(childValue);\n            if ((strValue != null) && (\"\" !== strValue.trim())) {\n              writer.writeElement(aggregateAttribute.getName(), strValue);\n            }\n            break;\n          default:\n            throw new OFXException(\"Unknown aggregate attribute type: \" + aggregateAttribute.getType());\n        }\n      }\n      else if (aggregateAttribute.isRequired()) {\n        throw new OFXException(\"Required \" + aggregateAttribute.toString() + \" is null or empty.\");\n      }\n    }\n  }\n\n  /**\n   * The conversion.\n   *\n   * @return The conversion.\n   */\n  public getConversion(): StringConversion {\n    return this.conversion;\n  }\n\n  /**\n   * The conversion.\n   *\n   * @param conversion The conversion.\n   */\n  public setConversion(conversion: StringConversion): void {\n    this.conversion = conversion;\n  }\n}\n\nLOG = LogFactory.getLog(AggregateMarshaller);\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../io/AggregateMarshaller.ts","module ofx4js.collections {\n\n\nexport class Stack<T> {\n\tprivate values: Array<T>;\n\t\n\tconstructor() {\n\t\tthis.values = [];\n\t}\n\t\n\t\n\tpublic push(...values: Array<T>): void {\n\t  return Array.prototype.push.apply(this.values, arguments);\n\t}\n\t\n\t\n\tpublic pop(): T {\n\t  return Array.prototype.pop.call(this.values);\n\t}\n\t\n\t\n\tpublic peek(): T {\n\t  if(this.values.length === 0) {\n\t    return null;\n\t  } else {\n\t    return this.values[this.values.length - 1];\n\t  }\n\t}\n\t\n\t\n\tpublic isEmpty(): boolean {\n\t  return this.values.length === 0;\n\t}\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../collections/Stack.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='OFXParseException'/>\n\nmodule ofx4js.io {\n\n/**\n * @author Ryan Heaton\n */\nexport class OFXSyntaxException extends OFXParseException {\n\n  constructor(message: string) {\n    super(message);\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../io/OFXSyntaxException.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../collections/Stack'/>\n///<reference path='OFXHandler'/>\n///<reference path='AggregateInfo'/>\n///<reference path='AggregateAttribute'/>\n///<reference path='OFXSyntaxException'/>\n\nmodule ofx4js.io {\n\nimport Log = ofx4js.log.Log;\nimport LogFactory = ofx4js.log.LogFactory;\nimport Stack = ofx4js.collections.Stack;\n\nvar LOG: Log;\n\nclass AggregateInfoHolder {\n  public aggregate: Object;\n  public info: AggregateInfo;\n  public aggregateName: string;\n  public currentAttributeIndex: number;\n  \n  constructor(arg1: string | Object, arg2?: AggregateInfo, arg3?: string) {\n    this.currentAttributeIndex = 0;\n    switch(arguments.length) {\n      case 1:\n        this.AggregateInfoHolder1.apply(this, arguments);\n        break;\n        \n      case 3:\n        this.AggregateInfoHolder3.apply(this, arguments);\n        break;\n        \n      default:\n        throw new OFXException(\"invalid number of arguments\");\n    }\n  }\n\n  private AggregateInfoHolder1(ignoredAggregateName: string) {\n    this.aggregate = null;\n    this.info = null;\n    this.aggregateName = ignoredAggregateName;\n  }\n\n  private AggregateInfoHolder3(aggregate: Object, info: AggregateInfo, aggregateName: string) {\n    this.aggregateName = aggregateName;\n    this.aggregate = aggregate;\n    this.info = info;\n  }\n\n  public isBeingSkipped(): boolean {\n    return this.aggregate == null || this.info == null;\n  }\n\n  public isSkipping(aggregateName: string): boolean {\n    return this.isBeingSkipped() && aggregateName === this.aggregateName;\n  }\n}\n\n\n/**\n * Content handler that manages the aggregate using a stack-based implementation.\n *\n * @author Ryan Heaton\n */\nexport class AggregateStackContentHandler<A> implements OFXHandler {\n\n  private stack: Stack<AggregateInfoHolder> = new Stack<AggregateInfoHolder>();\n  private conversion: StringConversion;\n  private parsingRoot: boolean = false;\n\n  constructor(root: A, conversion: StringConversion) {\n    this.stack = new Stack<AggregateInfoHolder>();\n    this.parsingRoot = false;\n\n    var aggregateInfo: AggregateInfo = AggregateIntrospector.getAggregateInfo(root.constructor);\n    if (aggregateInfo == null) {\n      throw new OFXException(\"Unable to marshal object of type '\" + root.constructor.name + \"' (no aggregate metadata found).\");\n    }\n\n    this.stack.push(new AggregateInfoHolder(root, aggregateInfo, aggregateInfo.getName()));\n    this.conversion = conversion;\n  }\n\n  public onHeader(name: string, value: string): void {\n    var headerType: any = this.stack.peek().info.getHeaderType(name);\n    if (headerType != null) {\n      this.stack.peek().info.setHeader(this.stack.peek().aggregate, name, this.conversion.fromString(headerType, value));\n    }\n  }\n\n  public onElement(name: string, value: string): void {\n    if (!this.stack.peek().isBeingSkipped()) {\n      var attribute: AggregateAttribute = this.stack.peek().info.getAttribute(name, this.stack.peek().currentAttributeIndex);\n      if (attribute != null && attribute.getType() == AggregateAttributeType.ELEMENT) {\n        try {\n          attribute.set(this.conversion.fromString(attribute.getAttributeType(), value), this.stack.peek().aggregate);\n        }\n        catch (e) {\n          LOG.error(\"Unable to set \" + attribute.toString(), e);\n        }\n        this.stack.peek().currentAttributeIndex = attribute.getOrder();\n      }\n      else if (LOG.isInfoEnabled()) {\n        LOG.info(\"Element \" + name + \" is not supported on aggregate \" + this.stack.peek().info.getName() + \" at index \" + this.stack.peek().currentAttributeIndex);\n      }\n    }\n  }\n\n  public startAggregate(aggregateName: string): void {\n    if (this.stack.peek().isBeingSkipped()) {\n      this.stack.push(new AggregateInfoHolder(aggregateName));\n    }\n    else if (!this.parsingRoot) {\n      if (aggregateName !== this.stack.peek().info.getName()) {\n        throw new OFXException(\"Unexpected root element: \" + aggregateName);\n      }\n\n      this.parsingRoot = true;\n    }\n    else {\n      var infoHolder: AggregateInfoHolder;\n\n      var attribute: AggregateAttribute = this.stack.peek().info.getAttribute(aggregateName, this.stack.peek().currentAttributeIndex);\n      if (attribute != null) {\n        if (attribute.getType() == AggregateAttributeType.CHILD_AGGREGATE) {\n          var aggregateType: any;\n          if (attribute.isArray()) {\n            aggregateType = AggregateIntrospector.findAggregateByName(aggregateName);\n          }\n          else {\n            aggregateType = attribute.getAttributeType();\n          }\n\n          if (aggregateType != null) {\n            var aggregateInfo: AggregateInfo = AggregateIntrospector.getAggregateInfo(aggregateType);\n            if (aggregateInfo == null) {\n              throw new OFXException(\"Unable to locate aggregate info for type \" + aggregateType.getName());\n            }\n\n            var aggregate: Object = aggregate = new aggregateType();\n            infoHolder = new AggregateInfoHolder(aggregate, aggregateInfo, aggregateName);\n          }\n          else {\n            if (LOG.isInfoEnabled()) {\n              LOG.info(\"Child aggregate \" + aggregateName + \" is not supported on aggregate \" + this.stack.peek().info.getName() + \": name not assigned a type.\");\n            }\n\n            //element not supported.  push a skipping aggregate on the stack.\n            infoHolder = new AggregateInfoHolder(aggregateName);\n          }\n\n          this.stack.peek().currentAttributeIndex = attribute.getOrder();\n        }\n        else {\n          if (LOG.isInfoEnabled()) {\n            LOG.info(\"Child aggregate \" + aggregateName + \" is not supported on aggregate \" + this.stack.peek().info.getName() + \": no child aggregate, but there does exist an element by that name.\");\n          }\n\n          //child aggregate not supported.  push a skipping aggregate on the stack.\n          infoHolder = new AggregateInfoHolder(aggregateName);\n        }\n      }\n      else {\n        if (LOG.isInfoEnabled()) {\n          LOG.info(\"Child aggregate \" + aggregateName + \" is not supported on aggregate \" + this.stack.peek().info.getName() + \": no attributes found by that name after index \" + this.stack.peek().currentAttributeIndex);\n        }\n\n        //child aggregate not supported.  push a skipping aggregate on the stack.\n        infoHolder = new AggregateInfoHolder(aggregateName);\n      }\n\n      this.stack.push(infoHolder);\n    }\n  }\n\n  public endAggregate(aggregateName: string): void {\n    var infoHolder: AggregateInfoHolder = this.stack.pop();\n    if (aggregateName !== infoHolder.aggregateName) {\n      throw new OFXSyntaxException(\"Unexpected end aggregate \" + aggregateName + \". (Perhaps \" +\n        infoHolder.aggregateName + \" is an element with an empty value, making it impossible to parse.)\");\n    }\n\n    if (!this.stack.isEmpty()) {\n      if (!infoHolder.isSkipping(aggregateName)) {\n        //we're not skipping the top aggregate, so process it.\n        var attribute: AggregateAttribute = this.stack.peek().info.getAttribute(\n            aggregateName, this.stack.peek().currentAttributeIndex, infoHolder.aggregate.constructor);\n        try {\n          if (attribute != null) {\n            attribute.set(infoHolder.aggregate, this.stack.peek().aggregate);\n          } else {\n            if (LOG.isInfoEnabled()) {\n              LOG.info(\"Child aggregate \" + aggregateName + \" is not supported on aggregate \" + this.stack.peek().info.getName() + \": no attributes found by that name after index \" + this.stack.peek().currentAttributeIndex);\n            }\n          }\n        }\n        catch (e) {\n          LOG.error(\"Unable to set \" + attribute.toString(), e);\n        }\n        if (attribute != null) {\n          this.stack.peek().currentAttributeIndex = attribute.getOrder();\n        }\n      }\n    }\n    else {\n      //ended the root element.\n    }\n  }\n}\n\nLOG = LogFactory.getLog(AggregateStackContentHandler);\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../io/AggregateStackContentHandler.ts","module ofx4js.io {\n\nexport class StringReader {\n  private _text: string;\n  private _cursor: number;\n  private _mark: number;\n  \n  constructor(text: string) {\n    this._text = text;\n    this._cursor = 0;\n    this._mark = 0;\n  }\n\n  public read(cbuf?: Array<string>, offset?: number, length?: number): number|string {\n    if(this._cursor >= this._text.length) {\n      return -1;\n    } else {\n      if(arguments.length === 0) {\n        return this.readChar();\n      } else {\n        offset = offset || 0;\n        length = length || cbuf.length;\n        length = Math.min(length, this._text.length - this._cursor);\n        for(var i=0; i<length; i++) {\n          cbuf[offset + i] = this.readChar();\n        }\n        return length;\n      }\n    }\n  }\n\n\n  public readChar(): string {\n    console.assert(this._cursor < this._text.length);\n    var ch = this._text[this._cursor];\n    this._cursor++;\n    return ch;\n  }\n\n\n  public close(): void {\n    this._text = null;\n    this._cursor = null;\n    this._mark = null;\n  }\n\n\n  public mark(/*readLimit*/): void {\n    this._mark = this._cursor;\n  }\n\n\n  public reset(): void {\n    this._cursor = this._mark;\n  }\n\n\n  public remainder(): string {\n    return this._text.substring(this._cursor);\n  }\n}\n\n}\n\n\n// WEBPACK FOOTER //\n// ../../io/StringReader.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='OFXHandler'/>\n\nmodule ofx4js.io {\n\n/**\n * Default (no-op) implementation of an OFX handler.\n *\n * @author Ryan Heaton\n */\nexport class DefaultHandler implements OFXHandler {\n\n  public onHeader(name: string, value: string): void {\n  }\n\n  public onElement(name: string, value: string): void {\n  }\n\n  public startAggregate(aggregateName: string): void {\n  }\n\n  public endAggregate(aggregateName: string): void {\n  }\n\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../io/DefaultHandler.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule ofx4js.io {\n\nexport enum OFXParseEventType {\n\n  CHARACTERS,\n\n  ELEMENT\n}\n\n/**\n * An event during OFX parsing.\n *\n * @author Ryan Heaton\n */\nexport class OFXParseEvent {\n  private eventType: OFXParseEventType;\n  private eventValue: string;\n\n  constructor(eventType: OFXParseEventType, eventValue: string) {\n    this.eventType = eventType;\n    this.eventValue = eventValue;\n  }\n\n  public getEventType(): OFXParseEventType {\n    return this.eventType;\n  }\n\n  public getEventValue(): string {\n    return this.eventValue;\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../io/OFXParseEvent.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../collections/Stack'/>\n///<reference path='OFXParseEvent'/>\n///<reference path='OFXHandler'/>\n\nmodule ofx4js.io {\n\nimport Log = ofx4js.log.Log;\nimport LogFactory = ofx4js.log.LogFactory;\nimport Stack = ofx4js.collections.Stack;\n\nvar LOG: Log;\n\n/**\n * @author Ryan Heaton\n */\nexport class OFXV2ContentHandler {\n\n  private eventStack: Stack<OFXParseEvent>;\n  private ofxHandler: OFXHandler;\n  private startedEvents: Array<OFXParseEvent>;\n\n  constructor(ofxHandler: OFXHandler) {\n    this.eventStack = new Stack<OFXParseEvent>();\n    this.startedEvents = new Array<OFXParseEvent>();\n\n    if (ofxHandler == null) {\n      throw new OFXException(\"An OFX handler must be supplied.\");\n    }\n\n    this.ofxHandler = ofxHandler;\n  }\n  \n  public install(parser: SAXParser) {\n    parser.ontext = this.ontext.bind(this);\n    parser.onopentag = this.onopentag.bind(this);\n    parser.onclosetag = this.onclosetag.bind(this);\n  }\n\n  public onopentag(node: SAXTag): void {\n    var qName: string = node.name;\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"START ELEMENT: \" + qName);\n    }\n\n    if ((!this.eventStack.isEmpty()) && (this.eventStack.peek().getEventType() == OFXParseEventType.ELEMENT) && (!this.isAlreadyStarted(this.eventStack.peek()))) {\n      var eventValue: string = this.eventStack.peek().getEventValue();\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Element \" + qName + \" is starting aggregate \" + eventValue);\n      }\n\n      //the last element started was not ended; we are assuming we've started a new aggregate.\n      this.ofxHandler.startAggregate(eventValue);\n\n      this.startedEvents.push(this.eventStack.peek());\n    }\n\n    this.eventStack.push(new OFXParseEvent(OFXParseEventType.ELEMENT, qName));\n  }\n\n  /**\n   * Whether the specified element aggregate has already been started.\n   *\n   * @param event The event containing the start.\n   * @return Whether the specified element aggregate has already been started.\n   */\n  protected isAlreadyStarted(event: OFXParseEvent): boolean {\n    return this.startedEvents.indexOf(event) != -1;\n  }\n\n  public onclosetag(qName: string): void {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"END ELEMENT: \" + qName);\n    }\n\n    var eventToFinish: OFXParseEvent = this.eventStack.pop();\n    if (eventToFinish.getEventType() == OFXParseEventType.CHARACTERS) {\n      var chars: string = eventToFinish.getEventValue().trim();\n\n      if (this.eventStack.isEmpty()) {\n        throw new OFXException(\"Illegal character data outside main OFX root element: \\\"\" + chars + \"\\\".\");\n      }\n      else {\n        var elementEvent: OFXParseEvent = this.eventStack.pop();\n        if (elementEvent.getEventType() != OFXParseEventType.ELEMENT) {\n          throw new OFXException(\"Illegal OFX event before characters \\\"\" + chars + \"\\\" (\" + elementEvent.getEventType() + \")!\");\n        }\n        else {\n          var value: string = elementEvent.getEventValue();\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Element \" + value + \" processed with value \" + chars);\n          }\n          this.ofxHandler.onElement(value, chars);\n        }\n      }\n    }\n    else if (eventToFinish.getEventType() == OFXParseEventType.ELEMENT) {\n      //we're ending an aggregate (no character data on the stack).\n      if (qName === eventToFinish.getEventValue()) {\n        //the last element on the stack is ours; we're ending an OFX aggregate.\n        var value: string = eventToFinish.getEventValue();\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Ending aggregate \" + value);\n        }\n        this.ofxHandler.endAggregate(value);\n\n        var i = this.startedEvents.indexOf(eventToFinish);\n        console.assert(i !== -1);\n        if (i > -1) {\n          this.startedEvents.splice(i, 1);\n        }\n      }\n      else {\n        throw new OFXException(\"Unexpected end tag: \" + eventToFinish.getEventValue());\n      }\n    }\n    else {\n      throw new OFXException(\"Illegal OFX event: \" + eventToFinish.getEventType());\n    }\n  }\n  \n  public ontext(value: string): void {\n    if (value.trim().length > 0) {\n      var event: OFXParseEvent;\n      if ((!this.eventStack.isEmpty()) && (this.eventStack.peek().getEventType() == OFXParseEventType.CHARACTERS)) {\n        //append the characters...\n        event = new OFXParseEvent(OFXParseEventType.CHARACTERS, this.eventStack.pop().getEventValue() + value);\n      }\n      else {\n        event = new OFXParseEvent(OFXParseEventType.CHARACTERS, value);\n      }\n      this.eventStack.push(event);\n    }\n  }\n}\n\nLOG = LogFactory.getLog(OFXV2ContentHandler);\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../io/OFXV2ContentHandler.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../project.d.ts'/>\n///<reference path='OFXHandler'/>\n///<reference path='DefaultHandler'/>\n///<reference path='OFXParseException'/>\n///<reference path='OFXV2ContentHandler'/>\n///<reference path='StringReader'/>\n///<reference path='OFXReader'/>\n\nmodule ofx4js.io {\n\nimport Log = ofx4js.log.Log;\nimport LogFactory = ofx4js.log.LogFactory;\n\nvar sax: SAXModule = require(\"sax\");\n\nvar LOG: Log;\n\nfunction arraysEqual(a1: Array<string>, a2: Array<string>) {\n  if(a1.length !== a2.length) {\n    return false;\n  }\n  for(var i=0; i<a1.length; i++) {\n    if(a1[i] !== a2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Base class for an OFX reader.  Parses the headers and determines whether we're parsing an\n * OFX v2 or OFX v1 element.  For OFX v2, uses a standard SAX library.\n *\n * @author Ryan Heaton\n */\nexport /*abstract*/ class BaseOFXReader implements OFXReader {\n  public static OFX_2_PROCESSING_INSTRUCTION_PATTERN: RegExp = /<\\\\?OFX ([^\\\\?]+)\\\\?>/;\n  private contentHandler: OFXHandler;\n  \n  constructor() {\n    this.contentHandler = new DefaultHandler();\n  }\n\n  /**\n   * The content handler.\n   *\n   * @return The content handler.\n   */\n  public getContentHandler(): OFXHandler {\n    return this.contentHandler;\n  }\n\n  /**\n   * The content handler.\n   *\n   * @param handler The content handler.\n   */\n  public setContentHandler(handler: OFXHandler): void {\n    this.contentHandler = handler;\n  }\n\n  /**\n   * Parse the reader, including the headers.\n   *\n   * @param reader The reader.\n   */\n  public parse(reader: StringReader): void  {\n    var header: string = \"\";\n    var firstElementStart = this.getFirstElementStart();\n    var buffer: Array<string> = new Array(firstElementStart.length);\n    reader.mark(/*firstElementStart.length*/);\n    var ch: any = reader.read(buffer);\n    while ((ch != -1) && (!arraysEqual(buffer, firstElementStart))) {\n      if (!this.contains(buffer, '<')) {\n        //if the buffer contains a '<', then we might already have marked the beginning.\n        reader.mark(/*firstElementStart.length*/);\n      }\n      ch = reader.read();\n      var shifted: string = this.shiftAndAppend(buffer, ch);\n      header += shifted;\n    }\n\n    if (ch == -1) {\n      throw new OFXParseException(\"Invalid OFX: no root <OFX> element!\");\n    }\n    else {\n      var matches = BaseOFXReader.OFX_2_PROCESSING_INSTRUCTION_PATTERN.exec(header);\n      if (matches) {\n        if (LOG.isInfoEnabled()) {\n          LOG.info(\"Processing OFX 2 header...\");\n        }\n\n        this.processOFXv2Headers(matches[1]);\n        reader.reset();\n        this.parseV2FromFirstElement(reader.remainder());\n      }\n      else {\n        LOG.info(\"Processing OFX 1 headers...\");\n        this.processOFXv1Headers(header);\n        reader.reset();\n        this.parseV1FromFirstElement(reader.remainder());\n      }\n    }\n  }\n\n  /**\n   * The first characters of the first OFX element, '<', 'O', 'F', 'X'\n   *\n   * @return The first characters of the OFX element.\n   */\n  protected getFirstElementStart(): Array<string> {\n    return [ '<', 'O', 'F', 'X' ];\n  }\n\n  /**\n   * Whether the specified buffer contains the specified character.\n   *\n   * @param buffer The buffer.\n   * @param c The character to search for.\n   * @return Whether the specified buffer contains the specified character.\n   */\n  private contains(buffer: Array<string>, c: string): boolean {\n    for (var i=0; i<buffer.length; i++) {\n      var ch = buffer[i];\n      if (ch === c) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private shiftAndAppend(buffer: Array<string>, c: string): string {\n    var shifted = buffer[0];\n    for (var i = 0; i + 1 < buffer.length; i++) {\n      buffer[i] = buffer[i + 1];\n    }\n    buffer[buffer.length - 1] = c;\n    return shifted;\n  }\n\n  /**\n   * Parse an OFX version 1 stream from the first OFX element (defined by the {@link #getFirstElementStart() first element characters}).\n   *\n   * @param text The text.\n   */\n  protected parseV1FromFirstElement(text: string): void {\n    var strict = false;\n    var parser: SAXParser = sax.parser(strict);\n    var handler = new OFXV2ContentHandler(this.getContentHandler());\n    handler.install(parser);\n    parser.write(text);\n  }\n\n  /**\n   * Parse an OFX version 2 stream from the first OFX element (defined by the {@link #getFirstElementStart() first element characters}).\n   *\n   * @param text The text.\n   */\n  protected parseV2FromFirstElement(text: string): void {\n    var strict = true;\n    var parser: SAXParser = sax.parser(strict);\n    var handler = new OFXV2ContentHandler(this.getContentHandler());\n    handler.install(parser);\n    parser.write(text);\n  }\n\n  /**\n   * Process the given characters as OFX version 1 headers.\n   *\n   * @param chars The characters to process.\n   */\n  protected processOFXv1Headers(chars: string): void {\n    var lines: Array<string> = chars.split(/(\\n|\\r\\n)/);\n    for(var i=0; i<lines.length; i++) {\n      var line: string = lines[i];\n      var colonIndex: number = line.indexOf(':');\n      if (colonIndex >= 0) {\n        var name: string = line.substring(0, colonIndex);\n        var value: string = line.length > colonIndex ? line.substring(colonIndex + 1) : \"\";\n        this.contentHandler.onHeader(name, value);\n      }\n    }\n  }\n\n  /**\n   * Process the given characters as OFX version 2 headers.\n   *\n   * @param chars The characters to process.\n   */\n  protected processOFXv2Headers(chars: string) /*throws OFXParseException*/: void {\n    var nameValuePairs: string[] = chars.split(\"\\\\s+\");\n    for (var nameValuePair of nameValuePairs) {\n      var equalsIndex: number = nameValuePair.indexOf('=');\n      if (equalsIndex >= 0) {\n        var name: string = nameValuePair.substring(0, equalsIndex);\n        var value: string = nameValuePair.length > equalsIndex ? nameValuePair.substring(equalsIndex + 1) : \"\";\n        value = value.replace('\"', ' ');\n        value = value.replace('\\'', ' ');\n        value = value.trim();\n        this.contentHandler.onHeader(name, value);\n      }\n    }\n  }\n}\n\nLOG = LogFactory.getLog(BaseOFXReader);\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../io/BaseOFXReader.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='StringConversion'/>\n///<reference path='DefaultStringConversion'/>\n///<reference path='AggregateStackContentHandler'/>\n///<reference path='OFXReader'/>\n///<reference path='BaseOFXReader'/>\n\nmodule ofx4js.io {\n\n/**\n * Unmarshaller for aggregate objects.\n * \n * @author Ryan Heaton\n */\nexport class AggregateUnmarshaller<A> {\n\n  private clazz: any;\n  private conversion: StringConversion;\n\n  constructor(clazz: any) {\n    this.clazz = clazz;\n    this.conversion = new DefaultStringConversion();\n  }\n\n  public unmarshal(arg: StringReader | string): A {\n    var stream: StringReader = (<any>arg instanceof StringReader) ? <StringReader>arg : new StringReader(<string>arg);\n    var aggregate: A = new this.clazz();\n    var reader: OFXReader = this.newReader();\n    reader.setContentHandler(new AggregateStackContentHandler<A>(aggregate, this.getConversion()));\n    reader.parse(stream);\n    return aggregate;\n  }\n\n  /**\n   * New OFX reader.\n   *\n   * @return new OFX reader.\n   */\n  protected newReader(): OFXReader {\n    return new BaseOFXReader();\n  }\n\n  /**\n   * The conversion.\n   *\n   * @return The conversion.\n   */\n  public getConversion(): StringConversion {\n    return this.conversion;\n  }\n\n  /**\n   * The conversion.\n   *\n   * @param conversion The conversion.\n   */\n  public setConversion(conversion: StringConversion): void {\n    this.conversion = conversion;\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../io/AggregateUnmarshaller.ts","\nmodule ofx4js.io {\n\nexport class OutputBuffer {\n  private data: Array<string>;\n  \n  constructor() {\n    this.data = []; \n  }\n  \n  public toString(encoding?: string): string {\n    return this.data.join('');\n  }\n  \n  public append(data: string): void {\n    this.data.push(data);\n  }\n  \n  public size(): number {\n    return this.data.reduce(function(previousValue: number, currentValue: string): number {\n      return currentValue.length;\n    }, 0);\n  }\n}\n\n\n\nexport class StreamWriter {\n  private out: OutputBuffer;\n  private encoding: string;\n  \n  constructor(out: OutputBuffer, encoding: string) {\n    this.out = out;\n    this.encoding = encoding;\n  }\n\n\n  flush(): void {\n  }\n\n\n  close(): void {\n  }\n\n\n  write(data: string): void {\n    this.out.append(data);\n    //TODO\n    //Array.prototype.push.apply(this.out, data.split(''));\n  }\n\n}\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../io/StreamWriter.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../project.d.ts'/>\n///<reference path='../../collections/collections'/>\n///<reference path='../OFXWriter'/>\n///<reference path='../StreamWriter'/>\n\nmodule ofx4js.io.v1 {\n\nimport OFXWriter = ofx4js.io.OFXWriter;\nimport StringMap = ofx4js.collections.StringMap;\n\n//import Map = java.util.Map;\n\n/**\n * OFX writer to SGML, suitable for OFX versions < 2.0.\n *\n * @author Ryan Heaton\n */\nexport class OFXV1Writer implements OFXWriter {\n\n  private LINE_SEPARATOR: string;\n  protected headersWritten: boolean;\n  protected writer: StreamWriter;\n  private writeAttributesOnNewLine: boolean;\n  \n  constructor(out: OutputBuffer | StreamWriter) {\n    this.LINE_SEPARATOR = \"\\r\\n\";\n    this.headersWritten = false;\n    this.writeAttributesOnNewLine = false;\n\n    if(out instanceof StreamWriter) {\n      this.writer = out;\n    } else if(out instanceof OutputBuffer) {\n      this.writer = this.newWriter(out);\n    } else {\n      throw new OFXException(\"invalid parameter type\");\n    }\n  }\n\n  protected newWriter(out: OutputBuffer): StreamWriter {\n    return new StreamWriter(out, \"ISO-8859-1\");\n  }\n\n  public writeHeaders(headers: StringMap) /*throws IOException*/: void {\n    if (this.headersWritten) {\n      throw new OFXException(\"Headers have already been written!\");\n    }\n\n    //write out the 1.0 headers\n    this.println(\"OFXHEADER:100\");\n    this.println(\"DATA:OFXSGML\");\n    this.println(\"VERSION:102\");\n\n    this.print(\"SECURITY:\");\n    var security: string = headers[\"SECURITY\"];\n    if (security == null) {\n      security = \"NONE\";\n    }\n    this.println(security);\n    this.println(\"ENCODING:USASCII\"); //too many ofx v1 servers don't read unicode...\n    this.println(\"CHARSET:1252\"); //windows-compatible.\n    this.println(\"COMPRESSION:NONE\");\n    this.print(\"OLDFILEUID:\");\n    var olduid: string = headers[\"OLDFILEUID\"];\n    if (olduid == null) {\n      olduid = \"NONE\";\n    }\n    this.println(olduid);\n    this.print(\"NEWFILEUID:\");\n    var uid: string = headers[\"NEWFILEUID\"];\n    if (uid == null) {\n      uid = \"NONE\";\n    }\n    this.println(uid);\n    this.println();\n\n    this.headersWritten = true;\n  }\n\n  public writeStartAggregate(aggregateName: string) /*throws IOException*/: void {\n    this.print('<');\n    this.print(aggregateName);\n    this.print('>');\n    if (this.isWriteAttributesOnNewLine()) {\n      this.println();\n    }\n  }\n\n  public writeElement(name: string, value: string) /*throws IOException*/: void {\n    if ((value == null) || (\"\" === value)) {\n      throw new OFXException(\"Illegal element value for element '\" + name + \"' (value must not be null or empty).\");\n    }\n\n    //todo: optimize performance of the character escaping\n    if (value.indexOf('&') >= 0) {\n      value = value.replace(/\\\\&/g, \"&amp;\");\n    }\n\n    if (value.indexOf('<') >= 0) {\n      value = value.replace(/</g, \"&lt;\");\n    }\n\n    if (value.indexOf('>') >= 0) {\n      value = value.replace(/>/g, \"&gt;\");\n    }\n    \n    this.print('<');\n    this.print(name);\n    this.print('>');\n    this.print(value);\n    if (this.isWriteAttributesOnNewLine()) {\n      this.println();\n    }\n  }\n\n  public writeEndAggregate(aggregateName: string) /*throws IOException*/:void {\n    this.print(\"</\");\n    this.print(aggregateName);\n    this.print('>');\n    if (this.isWriteAttributesOnNewLine()) {\n      this.println();\n    }\n  }\n\n  public isWriteAttributesOnNewLine(): boolean {\n    return this.writeAttributesOnNewLine;\n  }\n\n  public setWriteAttributesOnNewLine(writeAttributesOnNewLine: boolean): void {\n    this.writeAttributesOnNewLine = writeAttributesOnNewLine;\n  }\n\n  public close() /*throws IOException*/: void {\n    this.flush();\n    this.writer.close();\n  }\n\n  public flush() /*throws IOException*/: void {\n    this.writer.flush();\n  }\n\n  /*protected*/ println(line: string = null) /*throws IOException*/: void {\n    if(line != null) {\n      this.print(line);\n    }\n    this.writer.write(this.LINE_SEPARATOR);\n  }\n\n  /*protected*/ print(line: string) /*throws IOException*/: void {\n    this.writer.write(line == null ? \"null\" : line);\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../io/v1/OFXV1Writer.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../domain/data/RequestEnvelope'/>\n///<reference path='../../domain/data/ResponseEnvelope'/>\n///<reference path='../../io/OFXParseException'/>\n///<reference path='../../io/OFXWriter'/>\n///<reference path='../../io/AggregateMarshaller'/>\n///<reference path='../../io/AggregateUnmarshaller'/>\n///<reference path='../../io/v1/OFXV1Writer'/>\n///<reference path='../../io/StreamWriter'/>\n///<reference path='../../io/StringReader'/>\n///<reference path='../../log/Log'/>\n///<reference path='OFXConnection'/>\n///<reference path='OFXConnectionException'/>\n\n\nmodule ofx4js.client.net {\n\nimport RequestEnvelope = ofx4js.domain.data.RequestEnvelope;\nimport ResponseEnvelope = ofx4js.domain.data.ResponseEnvelope;\nimport OFXParseException = ofx4js.io.OFXParseException;\nimport OFXWriter = ofx4js.io.OFXWriter;\nimport AggregateMarshaller = ofx4js.io.AggregateMarshaller;\nimport OFXV1Writer = ofx4js.io.v1.OFXV1Writer;\nimport AggregateUnmarshaller = ofx4js.io.AggregateUnmarshaller;\nimport StringReader = ofx4js.io.StringReader;\nimport OutputBuffer = ofx4js.io.OutputBuffer;\nimport Log = ofx4js.log.Log;\nimport LogFactory = ofx4js.log.LogFactory;\n\n// import java.io.*;\n// import java.net.HttpURLConnection;\n// import java.net.URL;\n\n// import org.apache.commons.logging.Log;\n// import org.apache.commons.logging.LogFactory;\n\nvar LOG: Log;\n\nexport type HeadersObject = { [header: string]: string };\nexport type AjaxHandler = (url: string, verb: string, headers: HeadersObject, data: string, async: boolean) => Promise<string>;\n\n\nfunction DefaultAjaxHandler(url: string, verb: string, headers: HeadersObject, data: string, async: boolean): Promise<string> {\n  return new Promise(function(resolve, reject) {\n    var request = new XMLHttpRequest();\n    var onloadCalled: boolean = false;\n    request.open(\"POST\", url, async);\n    for (var header in headers) {\n      request.setRequestHeader(header, headers[header]);\n    }\n    request.onload = function() {\n      onloadCalled = true;\n      if (request.status >= 200 && request.status < 300) {\n        resolve(request.responseText);\n      } else if (request.status >= 400 && request.status < 500) {\n        reject(new OFXException(\"Error \" + request.status + \" with client request: \" + request.responseText));\n      } else {\n        reject(new OFXException(\"Invalid response code from OFX server: \" + request.status));\n      }\n    };\n    request.onerror = function() {\n      reject(new OFXException(\"Network error\"));\n    };\n    \n    request.send(data);\n    \n    if (!async && !onloadCalled) {\n      (<any>request).onload();\n    }\n  });\n}\n\n\n/**\n * Base implementation for an OFX connection.\n *\n * @author Ryan Heaton\n */\nexport class OFXV1Connection implements OFXConnection {\n\n  private async: boolean;\n  private marshaller: AggregateMarshaller;\n  private unmarshaller: AggregateUnmarshaller<ResponseEnvelope>;\n  private ajax: AjaxHandler;\n\n  constructor() {\n    this.async = true;\n    this.marshaller = new AggregateMarshaller();\n    this.unmarshaller = new AggregateUnmarshaller<ResponseEnvelope>(ResponseEnvelope);\n    this.ajax = DefaultAjaxHandler;\n  }\n\n  // Inherited.\n  public sendRequest(request: RequestEnvelope, url: string): Promise<ResponseEnvelope> {\n//    if (!url.protocol().toLowerCase().startsWith(\"http\")) {\n//      throw new OFXException(\"Invalid URL: \" + url + \" only http(s) is supported.\");\n//    }\n\n    //marshal to memory so we can determine the size...\n    var outBuffer = new OutputBuffer();\n    var ofxWriter: OFXWriter = this.newOFXWriter(outBuffer);\n    this.getMarshaller().marshal(request, ofxWriter);\n    ofxWriter.close();\n    this.logRequest(outBuffer);\n    return this.sendBuffer(url, outBuffer)\n    .then((in_: string): ResponseEnvelope => {\n      this.logResponse(in_);\n      return this.unmarshal(in_);\n    });\n  }\n\n  /**\n   * Log a request buffer.\n   *\n   * @param outBuffer The buffer to log.\n   */\n  protected logRequest(outBuffer: OutputBuffer) /*throws UnsupportedEncodingException*/: void {\n    if (LOG.isInfoEnabled()) {\n      LOG.info(\"Marshalling \" + outBuffer.size() + \" bytes of the OFX request.\");\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(outBuffer.toString(\"utf-8\"));\n      }\n    }\n  }\n  \n  protected logResponse(inBuffer: string) {\n    if (LOG.isInfoEnabled()) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Received OFX response:\", inBuffer);\n      }\n    }\n  }\n\n  /**\n   * Send the specified buffer to the specified URL.\n   *\n   * @param url The URL.\n   * @param outBuffer The buffer.\n   * @return a promise that resolves with the response.\n   */\n  protected sendBuffer(url: string, outBuffer: OutputBuffer) /*throws IOException, OFXConnectionException*/: Promise<string> {\n    var outText = outBuffer.toString();\n    var async: boolean = this.getAsync();\n    var headers: HeadersObject = {\n      \"Content-Type\": \"application/x-ofx\",\n      \"Accept\": \"*/*, application/x-ofx\"\n    };\n\n    return this.ajax(url, \"POST\", headers, outText, async);\n  }\n\n  /**\n   * Unmarshal the input stream.\n   *\n   * @param in The input stream.\n   * @return The response envelope.\n   */\n  protected unmarshal(in_: string) /*throws IOException, OFXConnectionException*/: ResponseEnvelope {\n    try {\n      var reader = new StringReader(in_);\n      return this.getUnmarshaller().unmarshal(reader);\n    }\n    catch (e) {\n      throw new OFXConnectionException(\"Unable to parse the OFX response.\", e);\n    }\n  }\n\n  /**\n   * Create a new OFX writer.\n   *\n   * @param out The output stream for the writer.\n   * @return The OFX writer.\n   */\n  protected newOFXWriter(out: OutputBuffer): OFXWriter {\n    return new OFXV1Writer(out);\n  }\n\n  /**\n   * The marshaller.\n   *\n   * @return The marshaller.\n   */\n  public getMarshaller(): AggregateMarshaller {\n    return this.marshaller;\n  }\n\n  /**\n   * The marshaller.\n   *\n   * @param marshaller The marshaller.\n   */\n  public setMarshaller(marshaller: AggregateMarshaller): void {\n    this.marshaller = marshaller;\n  }\n\n  /**\n   * The unmarshaller.\n   *\n   * @return The unmarshaller.\n   */\n  public getUnmarshaller(): AggregateUnmarshaller<ResponseEnvelope> {\n    return this.unmarshaller;\n  }\n\n  /**\n   * The unmarshaller.\n   *\n   * @param unmarshaller The unmarshaller.\n   */\n  public setUnmarshaller(unmarshaller: AggregateUnmarshaller<ResponseEnvelope>): void {\n    this.unmarshaller = unmarshaller;\n  }\n\n  /**\n   * Async mode\n   *\n   * @return {bool} Whether in async mode.\n   */\n  public getAsync() {\n    return this.async;\n  }\n  \n  \n  /**\n   * Async mode\n   *\n   * @param {bool} async async mode.\n   */\n  public setAsync(async: boolean) {\n    this.async = async;\n  }\n  \n  /**\n   * Async mode\n   *\n   * @return {bool} Whether in async mode.\n   */\n  public getAjax() {\n    return this.ajax;\n  }\n  \n  \n  /**\n   * Async mode\n   *\n   * @param {bool} async async mode.\n   */\n  public setAjax(ajax: AjaxHandler) {\n    this.ajax = ajax;\n  }\n\n}\n\nLOG = LogFactory.getLog(OFXV1Connection);\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../client/net/OFXV1Connection.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../v1/OFXV1Writer'/>\n///<reference path='../../collections/collections'/>\n\nmodule ofx4js.io.v2 {\n\nimport OFXV1Writer = ofx4js.io.v1.OFXV1Writer;\nimport StringMap = ofx4js.collections.StringMap;\n\n\n//import Map = java.util.Map;\n\n/**\n * OFX writer to XML, suitable for OFX version 2.0.\n *\n * @author Ryan Heaton\n */\nexport class OFXV2Writer extends OFXV1Writer {\n\n  constructor(out: OutputBuffer | StreamWriter) {\n    super(out);\n  }\n\n  //@Override\n  protected newWriter(out: OutputBuffer) /*throws UnsupportedEncodingException*/: StreamWriter {\n    return new StreamWriter(out, \"UTF-8\");\n  }\n\n  public writeHeaders(headers: StringMap) /*throws IOException*/: void {\n    if (this.headersWritten) {\n      throw new OFXException(\"Headers have already been written!\");\n    }\n\n    //write out the XML PI\n    this.print(\"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\" ?>\");\n    var security: string = headers[\"SECURITY\"];\n    if (security == null) {\n      security = \"NONE\";\n    }\n    var olduid: string = headers[\"OLDFILEUID\"];\n    if (olduid == null) {\n      olduid = \"NONE\";\n    }\n    // println(olduid);\n    var uid: string = headers[\"NEWFILEUID\"];\n    if (uid == null) {\n      uid = \"NONE\";\n    }\n\n    this.print(\"<?OFX OFXHEADER=\\\"200\\\" VERSION=\\\"202\\\" SECURITY=\\\"\" + security + \"\\\" OLDFILEUID=\\\"\" + olduid + \"\\\" NEWFILEUID=\\\"\" + uid + \"\\\"?>\");\n    this.headersWritten = true;\n  }\n\n  public writeElement(name: string, value: string): void {\n    super.writeElement(name, value);\n    this.print(\"</\");\n    this.print(name);\n    this.print('>');\n  }\n\n  //@Override\n  public isWriteAttributesOnNewLine(): boolean {\n    return false;\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../io/v2/OFXV2Writer.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../io/OFXWriter'/>\n///<reference path='../../io/v2/OFXV2Writer'/>\n///<reference path='OFXV1Connection'/>\n\nmodule ofx4js.client.net {\n\nimport OFXWriter = ofx4js.io.OFXWriter;\nimport OFXV2Writer = ofx4js.io.v2.OFXV2Writer;\nimport OutputBuffer = ofx4js.io.OutputBuffer;\n\n/**\n * @author Ryan Heaton\n */\nexport class OFXV2Connection extends OFXV1Connection {\n\n  //@Override\n  protected newOFXWriter(out: OutputBuffer): OFXWriter {\n    return new OFXV2Writer(out);\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../client/net/OFXV2Connection.ts","/*\n * Copyright 2012 TheStash\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule ofx4js.domain.data.common {\n\n/**\n * Day of week used in \"PROCDAYSOFF\" lists.\n *\n * @author Scott Priddy\n * @see \"OFX Spec, Section 13.6.2\"\n */\nexport enum ProcessorDayOff {\n  MONDAY,\n  TUESDAY,\n  WEDNESDAY,\n  THURSDAY,\n  FRIDAY,\n  SATURDAY,\n  SUNDAY\n}\n\nexport function ProcessorDayOff_fromOfx(ofxVal: string): ProcessorDayOff {\n  if (\"MONDAY\" === ofxVal) {\n    return ProcessorDayOff.MONDAY;\n  } else if (\"TUESDAY\" === ofxVal) {\n    return ProcessorDayOff.TUESDAY;\n  } else if (\"WEDNESDAY\" === ofxVal) {\n    return ProcessorDayOff.WEDNESDAY;\n  } else if (\"THURSDAY\" === ofxVal) {\n    return ProcessorDayOff.THURSDAY;\n  } else if (\"FRIDAY\" === ofxVal) {\n    return ProcessorDayOff.FRIDAY;\n  } else if (\"SATURDAY\" === ofxVal) {\n    return ProcessorDayOff.SATURDAY;\n  } else if (\"SUNDAY\" === ofxVal) {\n    return ProcessorDayOff.SUNDAY;\n  } else {\n    return null;\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/common/ProcessorDayOff.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../RequestMessage'/>\n\nmodule ofx4js.domain.data.common {\n\nimport RequestMessage = ofx4js.domain.data.RequestMessage;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * @author Aparna Gawali\n * aparna.gawali@sungard.com\n */\nexport class T1099Request extends RequestMessage {\n}\n\nAggregate_add( T1099Request, \"STMTRQ\" );\n\n}\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/common/T1099Request.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n///<reference path='../ResponseMessage'/>\n\nmodule ofx4js.domain.data.common {\n\nimport ResponseMessage = ofx4js.domain.data.ResponseMessage;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n//import java.util.Locale;\n\n/**\n * @author Aparna Gawali\n * aparna.gawali@sungard.com\n */\nexport /*abstract*/ class T1099Response extends ResponseMessage {\n\n \n}\n\n}\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/common/T1099Response.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n///<reference path='../banking/BankAccountDetails'/>\n///<reference path='../creditcard/CreditCardAccountDetails'/>\n\nmodule ofx4js.domain.data.common {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\nimport BankAccountDetails = ofx4js.domain.data.banking.BankAccountDetails;\nimport CreditCardAccountDetails = ofx4js.domain.data.creditcard.CreditCardAccountDetails;\n\n/**\n * @author Ryan Heaton\n */\nexport class TransferInfo {\n\n  private bankAccountFrom: BankAccountDetails;\n  private creditCardAccountFrom: CreditCardAccountDetails;\n  private bankAccountTo: BankAccountDetails;\n  private creditCardAccountTo: CreditCardAccountDetails;\n\n  private amount: number;\n  private due: Date;\n\n  /**\n   * The bank account to transfer from.\n   *\n   * @return The bank account to transfer from.\n   */\n  public getBankAccountFrom(): BankAccountDetails {\n    return this.bankAccountFrom;\n  }\n\n  /**\n   * The bank account to transfer from.\n   *\n   * @param bankAccountFrom The bank account to transfer from.\n   */\n  public setBankAccountFrom(bankAccountFrom: BankAccountDetails): void {\n    this.creditCardAccountFrom = null;\n    this.bankAccountFrom = bankAccountFrom;\n  }\n\n  /**\n   * The account to transfer from.\n   *\n   * @param acct The account to transfer from.\n   */\n  public setAccountFrom(acct: BankAccountDetails | CreditCardAccountDetails): void {\n    if(acct instanceof BankAccountDetails) {\n      this.setBankAccountFrom(<BankAccountDetails>acct);\n    } else {\n      this.setCreditCardAccountFrom(<CreditCardAccountDetails>acct);\n    }\n  }\n\n  /**\n   * The credit card to transfer from.\n   *\n   * @return The credit card to transfer from.\n   */\n  public getCreditCardAccountFrom(): CreditCardAccountDetails {\n    return this.creditCardAccountFrom;\n  }\n\n  /**\n   * The credit card to transfer from.\n   *\n   * @param creditCardAccountFrom The credit card to transfer from.\n   */\n  public setCreditCardAccountFrom(creditCardAccountFrom: CreditCardAccountDetails): void {\n    this.bankAccountFrom = null;\n    this.creditCardAccountFrom = creditCardAccountFrom;\n  }\n\n  /**\n   * The bank account to transfer to.\n   *\n   * @return The bank account to transfer to.\n   */\n  public getBankAccountTo(): BankAccountDetails {\n    return this.bankAccountTo;\n  }\n\n  /**\n   * The bank account to transfer to.\n   *\n   * @param bankAccountTo The bank account to transfer to.\n   */\n  public setBankAccountTo(bankAccountTo: BankAccountDetails): void {\n    this.creditCardAccountTo = null;\n    this.bankAccountTo = bankAccountTo;\n  }\n\n  /**\n   * The bank or credit card account to transfer to.\n   *\n   * @param accountTo The account to transfer to.\n   */\n  public setAccountTo(accountTo: BankAccountDetails | CreditCardAccountDetails): void {\n    if(accountTo instanceof BankAccountDetails)\n      this.setBankAccountTo(accountTo);\n    else if(accountTo instanceof CreditCardAccountDetails)\n      this.setCreditCardAccountTo(accountTo);\n    else\n      throw new OFXException(\"invalid type\");\n  }\n\n\n  /**\n   * The credit card account to transfer to.\n   *\n   * @return The credit card account to transfer to.\n   */\n  public getCreditCardAccountTo(): CreditCardAccountDetails {\n    return this.creditCardAccountTo;\n  }\n\n  /**\n   * The credit card account to transfer to.\n   *\n   * @param creditCardAccountTo The credit card account to transfer to.\n   */\n  public setCreditCardAccountTo(creditCardAccountTo: CreditCardAccountDetails): void {\n    this.bankAccountTo = null;\n    this.creditCardAccountTo = creditCardAccountTo;\n  }\n\n  /**\n   * The amount.\n   *\n   * @return The amount.\n   */\n  public getAmount(): number {\n    return this.amount;\n  }\n\n  /**\n   * The amount.\n   *\n   * @param amount The amount.\n   */\n  public setAmount(amount: number): void {\n    this.amount = amount;\n  }\n\n  /**\n   * The due date.\n   *\n   * @return The due date.\n   */\n  public getDue(): Date {\n    return this.due;\n  }\n\n  /**\n   * The due date.\n   *\n   * @param due The due date.\n   */\n  public setDue(due: Date): void {\n    this.due = due;\n  }\n}\n\nAggregate_add( TransferInfo, \"XFERINFO\" );\nChildAggregate_add(TransferInfo, { name: \"BANKACCTFROM\", order: 0, type: BankAccountDetails, read: TransferInfo.prototype.getBankAccountFrom, write: TransferInfo.prototype.setBankAccountFrom });\nChildAggregate_add(TransferInfo, { name: \"CCACCTFROM\", order: 10, type: CreditCardAccountDetails, read: TransferInfo.prototype.getCreditCardAccountFrom, write: TransferInfo.prototype.setCreditCardAccountFrom });\nChildAggregate_add(TransferInfo, { name: \"BANKACCTTO\", order: 20, type: BankAccountDetails, read: TransferInfo.prototype.getBankAccountTo, write: TransferInfo.prototype.setBankAccountTo });\nChildAggregate_add(TransferInfo, { name: \"CCACCTTO\", order: 30, type: CreditCardAccountDetails, read: TransferInfo.prototype.getCreditCardAccountTo, write: TransferInfo.prototype.setCreditCardAccountTo });\nElement_add(TransferInfo, { name: \"TRNAMT\", required: true, order: 40, type: Number, read: TransferInfo.prototype.getAmount, write: TransferInfo.prototype.setAmount });\nElement_add(TransferInfo, { name: \"DTDUE\", order: 50, type: Date, read: TransferInfo.prototype.getDue, write: TransferInfo.prototype.setDue });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/common/TransferInfo.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule ofx4js.domain.data.common {\n\n/**\n * @author Ryan Heaton\n */\nexport enum TransferStatusEvent {\n\n  WILLPROCESSON,\n\n  POSTEDON,\n\n  NOFUNDSON,\n\n  CANCELEDON,\n\n  FAILEDON\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/common/TransferStatusEvent.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n///<reference path='TransferStatusEvent'/>\n\nmodule ofx4js.domain.data.common {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * @author Ryan Heaton\n */\nexport class TransferStatus {\n\n  private event: TransferStatusEvent;\n  private date: Date;\n\n  /**\n   * The event.\n   *\n   * @return The event.\n   */\n  public getEvent(): TransferStatusEvent {\n    return this.event;\n  }\n\n  /**\n   * The event.\n   *\n   * @param event The event.\n   */\n  public setEvent(event: TransferStatusEvent): void {\n    this.event = event;\n  }\n\n  /**\n   * The date of the event.\n   *\n   * @return The date of the event.\n   */\n  public getDate(): Date {\n    return this.date;\n  }\n\n  /**\n   * The date of the event.\n   *\n   * @param date The date of the event.\n   */\n  public setDate(date: Date): void {\n    this.date = date;\n  }\n}\n\nAggregate_add( TransferStatus, \"XFERPRCSTS\" );\nElement_add(TransferStatus, { name: \"XFERPRCCODE\", required: true, order: 0, type: TransferStatusEvent, read: TransferStatus.prototype.getEvent, write: TransferStatus.prototype.setEvent });\nElement_add(TransferStatus, { name: \"DTXFERPRC\", required: true, order: 10, type: Date, read: TransferStatus.prototype.getDate, write: TransferStatus.prototype.setDate });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/common/TransferStatus.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='BasePosition'/>\n\nmodule ofx4js.domain.data.investment.positions {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\n\n/**\n * Represents a debt position.\n * @see \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class DebtPosition extends BasePosition {\n}\n\nAggregate_add( DebtPosition, \"POSDEBT\" )\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/positions/DebtPosition.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/Element_add'/>\n///<reference path='BasePosition'/>\n\nmodule ofx4js.domain.data.investment.positions {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Represents a mutual fund position.\n * @see \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class MutualFundPosition extends BasePosition {\n\n  private unitsStreet: number;\n  private unitsUser: number;\n  private reinvestDividends: boolean;\n  private reinvestCapitalGains: boolean;\n\n  /**\n   * Gets the number of units in the financial insititution's street name.\n   *\n   * @return the number of units in the financial insititution's street name.\n   */\n  public getUnitsStreet(): number {\n    return this.unitsStreet;\n  }\n\n  /**\n   * Sets the number of units in the financial insititution's street name.\n   *\n   * @param unitsStreet the number of units in the financial insititution's street name.\n   */\n  public setUnitsStreet(unitsStreet: number): void {\n    this.unitsStreet = unitsStreet;\n  }\n\n  /**\n   * Gets the number of units in the user's name.\n   *\n   * @return the number of units in the user's name.\n   */\n  public getUnitsUser(): number {\n    return this.unitsUser;\n  }\n\n  /**\n   * Sets the number of units in the user's name.\n   *\n   * @param unitsUser the number of units in the user's name.\n   */\n  public setUnitsUser(unitsUser: number): void {\n    this.unitsUser = unitsUser;\n  }\n\n  /**\n   * Gets whether dividends are automatically reinvested.\n   *\n   * @return whether dividends are automatically reinvested\n   */\n  public getReinvestDividends(): boolean {\n    return this.reinvestDividends;\n  }\n\n  /**\n   * Sets whether dividends are automatically reinvested.\n   *\n   * @param reinvestDividends whether dividends are automatically reinvested\n   */\n  public setReinvestDividends(reinvestDividends: boolean): void {\n    this.reinvestDividends = reinvestDividends;\n  }\n\n  /**\n   * Gets whether capital gains are automatically reinvested.\n   *\n   * @return whether capital gains are automatically reinvested\n   */\n  public getReinvestCapitalGains(): boolean {\n    return this.reinvestCapitalGains;\n  }\n\n  /**\n   * Sets whether capital gains are automatically reinvested.\n   *\n   * @param reinvestCapitalGains whether capital gains are automatically reinvested\n   */\n  public setReinvestCapitalGains(reinvestCapitalGains: boolean): void {\n    this.reinvestCapitalGains = reinvestCapitalGains;\n  }\n}\n\nAggregate_add( MutualFundPosition, \"POSMF\" );\nElement_add(MutualFundPosition, { name: \"UNITSSTREET\", order: 20, type: Number, read: MutualFundPosition.prototype.getUnitsStreet, write: MutualFundPosition.prototype.setUnitsStreet });\nElement_add(MutualFundPosition, { name: \"UNITSUSER\", order: 30, type: Number, read: MutualFundPosition.prototype.getUnitsUser, write: MutualFundPosition.prototype.setUnitsUser });\nElement_add(MutualFundPosition, { name: \"REINVDIV\", order: 50, type: Boolean, read: MutualFundPosition.prototype.getReinvestDividends, write: MutualFundPosition.prototype.setReinvestDividends });\nElement_add(MutualFundPosition, { name: \"REINVCG\", order: 60, type: Boolean, read: MutualFundPosition.prototype.getReinvestCapitalGains, write: MutualFundPosition.prototype.setReinvestCapitalGains });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/positions/MutualFundPosition.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule ofx4js.domain.data.investment.positions {\n\n/**\n * How a short option is secured.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum ShortOptionSecurity {\n  NAKED,\n  COVERED\n}\n\nexport function ShortOptionSecurity_fromOfx(ofxVal: string): ShortOptionSecurity {\n  if (\"NAKED\" === ofxVal) {\n    return ShortOptionSecurity.NAKED;\n  } else if (\"COVERED\" === ofxVal) {\n    return ShortOptionSecurity.COVERED;\n  } else {\n    return null;\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/positions/ShortOptionSecurity.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/Element_add'/>\n///<reference path='BasePosition'/>\n///<reference path='ShortOptionSecurity'/>\n\nmodule ofx4js.domain.data.investment.positions {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Represents an options position.\n * @see \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class OptionsPosition extends BasePosition {\n  private secured: string;\n\n  /**\n   * Gets how the options position is secured (for short positions).\n   *\n   * @return how the options position is secured\n   */\n  public getSecured(): string {\n    return this.secured;\n  }\n\n  /**\n   * Sets how the options position is secured (for short positions).\n   *\n   * @param secured how the options position is secured\n   */\n  public setSecured(secured: string): void {\n    this.secured = secured;\n  }\n\n  /**\n   * Gets how the options position is secured as a well-known type.\n   *\n   * @return how the option position is secured or null if it's not a well-known type\n   */\n  getSecuredEnum(): ShortOptionSecurity {\n    return ShortOptionSecurity_fromOfx(this.getSecured());\n  }\n}\n\nAggregate_add( OptionsPosition, \"POSOPT\" );\nElement_add(OptionsPosition, { name: \"SECURED\", order: 20, type: String, read: OptionsPosition.prototype.getSecured, write: OptionsPosition.prototype.setSecured });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/positions/OptionsPosition.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='BasePosition'/>\n\nmodule ofx4js.domain.data.investment.positions {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\n\n/**\n * Represents other types of positions.\n * @see \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class OtherPosition extends BasePosition {\n}\n\nAggregate_add( OtherPosition, \"POSOTHER\" );\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/positions/OtherPosition.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/Element_add'/>\n///<reference path='BasePosition'/>\n\nmodule ofx4js.domain.data.investment.positions {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Represents a stock position.\n * @see \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class StockPosition extends BasePosition {\n  private unitsStreet: number;\n  private unitsUser: number;\n  private reinvestDividends: boolean;\n\n  /**\n   * Gets the number of units in the financial insititution's street name.\n   *\n   * @return the number of units in the financial insititution's street name.\n   */\n  public getUnitsStreet(): number {\n    return this.unitsStreet;\n  }\n\n  /**\n   * Sets the number of units in the financial insititution's street name.\n   *\n   * @param unitsStreet the number of units in the financial insititution's street name.\n   */\n  public setUnitsStreet(unitsStreet: number): void {\n    this.unitsStreet = unitsStreet;\n  }\n\n  /**\n   * Gets the number of units in the user's name.\n   *\n   * @return the number of units in the user's name.\n   */\n  public getUnitsUser(): number {\n    return this.unitsUser;\n  }\n\n  /**\n   * Sets the number of units in the user's name.\n   *\n   * @param unitsUser the number of units in the user's name.\n   */\n  public setUnitsUser(unitsUser: number): void {\n    this.unitsUser = unitsUser;\n  }\n\n  /**\n   * Gets whether dividends are automatically reinvested.\n   *\n   * @return whether dividends are automatically reinvested\n   */\n  public getReinvestDividends(): boolean {\n    return this.reinvestDividends;\n  }\n\n  /**\n   * Sets whether dividends are automatically reinvested.\n   *\n   * @param reinvestDividends whether dividends are automatically reinvested\n   */\n  public setReinvestDividends(reinvestDividends: boolean): void {\n    this.reinvestDividends = reinvestDividends;\n  }\n}\n\nAggregate_add( StockPosition, \"POSSTOCK\" );\nElement_add(StockPosition, { name: \"UNITSSTREET\", order: 20, type: Number, read: StockPosition.prototype.getUnitsStreet, write: StockPosition.prototype.setUnitsStreet });\nElement_add(StockPosition, { name: \"UNITSUSER\", order: 30, type: Number, read: StockPosition.prototype.getUnitsUser, write: StockPosition.prototype.setUnitsUser });\nElement_add(StockPosition, { name: \"REINVDIV\", order: 40, type: Boolean, read: StockPosition.prototype.getReinvestDividends, write: StockPosition.prototype.setReinvestDividends });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/positions/StockPosition.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/Element_add'/>\n\nmodule ofx4js.domain.data.investment.transactions {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Original currency aggregate (\"ORIGCURRENCY\"). For investment transactions in other currencies,\n * the financial institution can report the transaction as converted into the default currency\n * and then include this child aggregate to report what the original currency was and what the\n * rate of conversion was.\n * @see \"Section 5.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class OriginalCurrency {\n\n  private currencyRate: number;\n  private currencyCode: string;\n\n  /**\n   * Gets the rate of currency conversion. This is the ratio of \"CURDEF\" (the default currency in\n   * the transaction response) to \"CURSYM\" (the original currency code below).\n   *\n   * @return the currency rate\n   */\n  public getCurrencyRate(): number {\n    return this.currencyRate;\n  }\n\n  /**\n   * Sets the rate of currency conversion. This is the ratio of \"CURDEF\" (the default currency in\n   * the transaction response) to \"CURSYM\" (the original currency code below).\n   *\n   * @param currencyRate the currency rate\n   */\n  public setCurrencyRate(currencyRate: number): void {\n    this.currencyRate = currencyRate;\n  }\n\n  /**\n   * Gets the ISO-4217 3-letter currency identifier of the original currency.\n   * @see java.util.Currency#getCurrencyCode()\n   *\n   * @return the currency code\n   */\n  public getCurrencyCode(): string {\n    return this.currencyCode;\n  }\n\n  /**\n   * Sets the ISO-4217 3-letter currency identifier of the original currency.\n   * @see java.util.Currency#getCurrencyCode()\n   *\n   * @param currencyCode the currency code\n   */\n  public setCurrencyCode(currencyCode: string): void {\n    this.currencyCode = currencyCode;\n  }\n}\n\nAggregate_add( OriginalCurrency, \"ORIGCURRENCY\" );\nElement_add(OriginalCurrency, { name: \"CURRATE\", required: true, order: 10, type: Number, read: OriginalCurrency.prototype.getCurrencyRate, write: OriginalCurrency.prototype.setCurrencyRate });\nElement_add(OriginalCurrency, { name: \"CURSYM\", required: true, order: 20, type: String, read: OriginalCurrency.prototype.getCurrencyCode, write: OriginalCurrency.prototype.setCurrencyCode });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/transactions/OriginalCurrency.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/Element_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../../investment/accounts/SubAccountType'/>\n///<reference path='BaseBuyInvestmentTransaction'/>\n///<reference path='OriginalCurrency'/>\n\nmodule ofx4js.domain.data.investment.transactions {\n\nimport SubAccountType = ofx4js.domain.data.investment.accounts.SubAccountType;\nimport SubAccountType_fromOfx = ofx4js.domain.data.investment.accounts.SubAccountType_fromOfx;\nimport SecurityId = ofx4js.domain.data.seclist.SecurityId;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Buy investment transaction aggregate (\"INVBUY\").\n * @see \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class BuyInvestmentTransaction {\n\n  private investmentTransaction: InvestmentTransaction;\n  private securityId: SecurityId;\n  private units: number;\n  private unitPrice: number;\n  private markup: number;\n  private commission: number;\n  private taxes: number;\n  private fees: number;\n  private load: number;\n  private total: number;\n  private currencyCode: string;\n  private originalCurrencyInfo: OriginalCurrency;\n  private subAccountSecurity: string;\n  private subAccountFund: string;\n\n  /**\n   * Gets the investment transaction child aggregate.\n   *\n   * @return the investment transaction child aggregate\n   */\n  public getInvestmentTransaction(): InvestmentTransaction {\n    return this.investmentTransaction;\n  }\n\n  /**\n   * Sets the investment transaction child aggregate.\n   *\n   * @param investmentTransaction the investment transaction child aggregate\n   */\n  public setInvestmentTransaction(investmentTransaction: InvestmentTransaction): void {\n    this.investmentTransaction = investmentTransaction;\n  }\n\n  /**\n   * Gets the id of the security that was bought. This is a required field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the security id of the security that was bought\n   */\n  public getSecurityId(): SecurityId {\n    return this.securityId;\n  }\n\n  /**\n   * Sets the id of the security that was bought. This is a required field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param securityId the security id of the security that was bought\n   */\n  public setSecurityId(securityId: SecurityId): void {\n    this.securityId = securityId;\n  }\n\n  /**\n   * Gets the number of units of the security that was bought. For security-based actions other\n   * than stock splits, this is the quantity bought. For stocks, mutual funds, and others, this\n   * is the number of shares. For bonds, this is the face value. For options, this is the number of\n   * contacts. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the number of units purchased.\n   */\n  public getUnits(): number {\n    return this.units;\n  }\n\n  /**\n   * Sets the number of units of the security that was bought. For security-based actions other\n   * than stock splits, this is the quantity bought. For stocks, mutual funds, and others, this\n   * is the number of shares. For bonds, this is the face value. For options, this is the number of\n   * contacts. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param units the number of units purchased.\n   */\n  public setUnits(units: number): void {\n    this.units = units;\n  }\n\n  /**\n   * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n   * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n   * per contact) price. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the per unit price\n   */\n  public getUnitPrice(): number {\n    return this.unitPrice;\n  }\n\n  /**\n   * Sets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n   * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n   * per contact) price. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param unitPrice the per unit price\n   */\n  public setUnitPrice(unitPrice: number): void {\n    this.unitPrice = unitPrice;\n  }\n\n  /**\n   * Gets the portion of the unit price that is attributed to the dealer markup. This is an\n   * optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the per unit markeup price\n   */\n  public getMarkup(): number {\n    return this.markup;\n  }\n\n  /**\n   * Sets the portion of the unit price that is attributed to the dealer markup. This is an\n   * optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param markup the per unit markeup price\n   */\n  public setMarkup(markup: number): void {\n    this.markup = markup;\n  }\n\n  /**\n   * Gets the transaction commission for the purchase. This is an optional field according to the\n   * OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the transaction commision\n   */\n  public getCommission(): number {\n    return this.commission;\n  }\n\n  /**\n   * Sets the transaction commission for the purchase. This is an optional field according to the\n   * OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param commission the transaction commision\n   */\n  public setCommission(commission: number): void {\n    this.commission = commission;\n  }\n\n  /**\n   * Gets the taxes for the purchase. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the transaction taxes\n   */\n  public getTaxes(): number {\n    return this.taxes;\n  }\n\n  /**\n   * Sets the taxes for the purchase. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param taxes the transaction taxes\n   */\n  public setTaxes(taxes: number): void {\n    this.taxes = taxes;\n  }\n\n  /**\n   * Gets the fees for the purchase. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the transaction fees\n   */\n  public getFees(): number {\n    return this.fees;\n  }\n\n  /**\n   * Sets the fees for the purchase. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param fees the transaction fees\n   */\n  public setFees(fees: number): void {\n    this.fees = fees; \n  }\n\n  /**\n   * Gets the load for the purchase. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the load\n   */\n  public getLoad(): number {\n    return this.load;\n  }\n\n  /**\n   * Sets the load for the purchase. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param load the load\n   */\n  public setLoad(load: number): void {\n    this.load = load;\n  }\n\n  /**\n   * Gets the total for the purchase. Should be equal to\n   * (units * (unitPrice + markup)) + (commision + fees + taxes) according to the OFX\n   * spec. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the total\n   */\n  public getTotal(): number {\n    return this.total;\n  }\n\n  /**\n   * Sets the total for the purchase. Should be equal to\n   * (units * (unitPrice + markup)) + (commision + fees + taxes) according to the OFX\n   * spec. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param total the total\n   */\n  public setTotal(total: number): void {\n    this.total = total;\n  }\n\n  /**\n   * Gets the currency code for the transaction. Only one of currency code or original currency\n   * info should be set according to the OFX spec. If neither are set, means the default currency.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the currency code for the transaction.\n   */\n  public getCurrencyCode(): string {\n    return this.currencyCode;\n  }\n\n  /**\n   * Sets the currency code for the transaction. Only one of currency code or original currency\n   * info may be set according to the OFX spec. If neither are set, means the default currency.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param currencyCode the currency code for the transaction.\n   */\n  public setCurrencyCode(currencyCode: string): void {\n    this.currencyCode = currencyCode;\n    this.originalCurrencyInfo = null;\n  }\n\n  /**\n   * Gets the original currency info for the transaction.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the original currency info for the transaction\n   */\n  public getOriginalCurrencyInfo(): OriginalCurrency {\n    return this.originalCurrencyInfo;\n  }\n\n  /**\n   * Sets the original currency info for the transaction\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param originalCurrencyInfo the original currency info for the transaction\n   */\n  public setOriginalCurrencyInfo(originalCurrencyInfo: OriginalCurrency): void {\n    this.originalCurrencyInfo = originalCurrencyInfo;\n    this.currencyCode = null;\n  }\n\n /**\n   * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the sub account type\n   */\n  public getSubAccountSecurity(): string {\n    return this.subAccountSecurity;\n  }\n\n  /**\n    * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n    * @see \"Section 13.9.2.4.3, OFX Spec\"\n    *\n    * @param subAccountSecurity the sub account type\n    */\n  public setSubAccountSecurity(subAccountSecurity: string): void {\n    this.subAccountSecurity = subAccountSecurity;\n  }\n\n  /**\n   * Gets the result of getSubAccountSecurity as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types.\n   */\n  public getSubAccountSecurityEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getSubAccountSecurity());\n  }\n\n\n  /**\n   * Gets the sub account type that the money came from. (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the sub account fund\n   */\n  public getSubAccountFund(): string {\n    return this.subAccountFund;\n  }\n\n  /**\n   * Sets the sub account type that the money came from. (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param subAcctFund the sub account fund\n   */\n  public setSubAccountFund(subAcctFund: string): void {\n    this.subAccountFund = subAcctFund;\n  }\n\n  /**\n   * Gets the result of getSubAccountFund as one of the well-known types.\n   *\n   * @return the type or null if it wasn't one of the well known types.\n   */\n  public getSubAccountFundEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getSubAccountFund());\n  }\n}\n\nAggregate_add( BuyInvestmentTransaction, \"INVBUY\" );\nChildAggregate_add(BuyInvestmentTransaction, { order: 10, type: InvestmentTransaction, read: BuyInvestmentTransaction.prototype.getInvestmentTransaction, write: BuyInvestmentTransaction.prototype.setInvestmentTransaction });\nChildAggregate_add(BuyInvestmentTransaction, { required: true, order: 20, type: SecurityId, read: BuyInvestmentTransaction.prototype.getSecurityId, write: BuyInvestmentTransaction.prototype.setSecurityId });\nElement_add(BuyInvestmentTransaction, { name: \"UNITS\", required: true, order: 30, type: Number, read: BuyInvestmentTransaction.prototype.getUnits, write: BuyInvestmentTransaction.prototype.setUnits });\nElement_add(BuyInvestmentTransaction, { name: \"UNITPRICE\", required: true, order: 40, type: Number, read: BuyInvestmentTransaction.prototype.getUnitPrice, write: BuyInvestmentTransaction.prototype.setUnitPrice });\nElement_add(BuyInvestmentTransaction, { name: \"MARKUP\", order: 50, type: Number, read: BuyInvestmentTransaction.prototype.getMarkup, write: BuyInvestmentTransaction.prototype.setMarkup });\nElement_add(BuyInvestmentTransaction, { name: \"COMMISSION\", order: 60, type: Number, read: BuyInvestmentTransaction.prototype.getCommission, write: BuyInvestmentTransaction.prototype.setCommission });\nElement_add(BuyInvestmentTransaction, { name: \"TAXES\", order: 70, type: Number, read: BuyInvestmentTransaction.prototype.getTaxes, write: BuyInvestmentTransaction.prototype.setTaxes });\nElement_add(BuyInvestmentTransaction, { name: \"FEES\", order: 80, type: Number, read: BuyInvestmentTransaction.prototype.getFees, write: BuyInvestmentTransaction.prototype.setFees });\nElement_add(BuyInvestmentTransaction, { name: \"LOAD\", order: 90, type: Number, read: BuyInvestmentTransaction.prototype.getLoad, write: BuyInvestmentTransaction.prototype.setLoad });\nElement_add(BuyInvestmentTransaction, { name: \"TOTAL\", required: true, order: 100, type: Number, read: BuyInvestmentTransaction.prototype.getTotal, write: BuyInvestmentTransaction.prototype.setTotal });\nElement_add(BuyInvestmentTransaction, { name: \"CURRENCY\", order: 110, type: String, read: BuyInvestmentTransaction.prototype.getCurrencyCode, write: BuyInvestmentTransaction.prototype.setCurrencyCode });\nChildAggregate_add(BuyInvestmentTransaction, { order: 120, type: OriginalCurrency, read: BuyInvestmentTransaction.prototype.getOriginalCurrencyInfo, write: BuyInvestmentTransaction.prototype.setOriginalCurrencyInfo });\nElement_add(BuyInvestmentTransaction, { name: \"SUBACCTSEC\", order: 130, type: String, read: BuyInvestmentTransaction.prototype.getSubAccountSecurity, write: BuyInvestmentTransaction.prototype.setSubAccountSecurity });\nElement_add(BuyInvestmentTransaction, { name: \"SUBACCTFUND\", order: 140, type: String, read: BuyInvestmentTransaction.prototype.getSubAccountFund, write: BuyInvestmentTransaction.prototype.setSubAccountFund });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/transactions/BuyInvestmentTransaction.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../../investment/accounts/SubAccountType'/>\n///<reference path='../../seclist/SecurityId'/>\n///<reference path='BaseInvestmentTransaction'/>\n///<reference path='TransactionWithSecurity'/>\n///<reference path='BuyInvestmentTransaction'/>\n///<reference path='TransactionType'/>\n///<reference path='InvestmentTransaction'/>\n///<reference path='OriginalCurrency'/>\n\nmodule ofx4js.domain.data.investment.transactions {\n\nimport SubAccountType = ofx4js.domain.data.investment.accounts.SubAccountType;\nimport SubAccountType_fromOfx = ofx4js.domain.data.investment.accounts.SubAccountType_fromOfx;\nimport SecurityId = ofx4js.domain.data.seclist.SecurityId;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * Base class for all investment transactions for buying securities.\n * <br>\n * This class exposes a read-only view of the flattened aggregates that are\n * common to all buy investment transactions as a convenience to application\n * developers who may not find the ofx aggregation model intuitive.\n *\n * @author Jon Perlow\n */\nexport /*abstract*/ class BaseBuyInvestmentTransaction extends BaseInvestmentTransaction\n    implements TransactionWithSecurity {\n\n  private buyInvestment: BuyInvestmentTransaction;\n\n  constructor(transactionType: TransactionType) {\n    super(transactionType);\n  }\n\n  /**\n   * Gets the buy investment transaction child aggregate.\n   *\n   * @return the buy investment transaction child aggregate\n   */\n  public getBuyInvestment(): BuyInvestmentTransaction {\n    return this.buyInvestment;\n  }\n\n  /**\n   * Sets the buy investment transaction child aggregate.\n   *\n   * @param buyInvestment the buy investment transaction child aggregate\n   */\n  public setBuyInvestment(buyInvestment: BuyInvestmentTransaction): void {\n    this.buyInvestment = buyInvestment;\n  }\n\n  /**\n   * Gets the investment transaction aggregate.\n   *\n   * @return the investment transaction aggregate\n   */\n  // @Overridden\n  public getInvestmentTransaction(): InvestmentTransaction {\n    return this.getBuyInvestment().getInvestmentTransaction();\n  }\n\n  /**\n   * Gets the id of the security that was bought. This is a required field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the security id of the security that was bought\n   */\n  public getSecurityId(): SecurityId {\n    return this.getBuyInvestment().getSecurityId();\n  }\n\n  /**\n   * Gets the number of units of the security that was bought. For security-based actions other\n   * than stock splits, this is the quantity bought. For stocks, mutual funds, and others, this\n   * is the number of shares. For bonds, this is the face value. For options, this is the number of\n   * contacts. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the number of units purchased.\n   */\n  public getUnits(): number {\n    return this.getBuyInvestment().getUnits();\n  }\n\n  /**\n   * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n   * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n   * per contact) price. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the per unit price\n   */\n  public getUnitPrice(): number {\n    return this.getBuyInvestment().getUnitPrice();\n  }\n\n  /**\n   * Gets the portion of the unit price that is attributed to the dealer markup. This is an\n   * optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the per unit markeup price\n   */\n  public getMarkup(): number {\n    return this.getBuyInvestment().getMarkup();\n  }\n\n  /**\n   * Gets the transaction commission for the purchase. This is an optional field according to the\n   * OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the transaction commision\n   */\n  public getCommission(): number {\n    return this.getBuyInvestment().getCommission();\n  }\n\n  /**\n   * Gets the taxes for the purchase. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the transaction taxes\n   */\n  public getTaxes(): number {\n    return this.getBuyInvestment().getTaxes();\n  }\n\n  /**\n   * Gets the fees for the purchase. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the transaction fees\n   */\n  public getFees(): number {\n    return this.getBuyInvestment().getFees();\n  }\n\n  /**\n   * Gets the load for the purchase. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the load\n   */\n  public getLoad(): number {\n    return this.getBuyInvestment().getLoad();\n  }\n\n  /**\n   * Gets the total for the purchase. Should be equal to\n   * (units * (unitPrice + markup)) + (commision + fees + load + taxes) according to the OFX\n   * spec. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the total\n   */\n  public getTotal(): number {\n    return this.getBuyInvestment().getTotal();\n  }\n\n  /**\n   * Gets the currency code for the transaction. Only one of currency code or original currency\n   * info should be set according to the OFX spec. If neither are set, means the default currency.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the currency code for the transaction\n   */\n  public getCurrencyCode(): string {\n    return this.getBuyInvestment().getCurrencyCode();\n  }\n\n  /**\n   * Gets the original currency info for the transaction.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the original currency info for the transaction\n   */\n  public getOriginalCurrencyInfo(): OriginalCurrency {\n    return this.getBuyInvestment().getOriginalCurrencyInfo();\n  }\n\n  /**\n   * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the sub account type\n   */\n  public getSubAccountSecurity(): string {\n    return this.getBuyInvestment().getSubAccountSecurity();\n  }\n\n  /**\n   * Gets the result of getSubAccountSecurity as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types\n   */\n  public getSubAccountSecurityEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getSubAccountSecurity());\n  }\n\n  /**\n   * Gets the sub account type that the money came from. (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the sub account fund\n   */\n  public getSubAccountFund(): string {\n    return this.getBuyInvestment().getSubAccountFund();\n  }\n\n  /**\n   * Gets the result of getSubAccountFund as one of the well-known types.\n   *\n   * @return the type or null if it wasn't one of the well known types.\n   */\n  public getSubAccountFundEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getSubAccountFund());\n  }\n}\n\nChildAggregate_add(BaseBuyInvestmentTransaction, { order: 10, type: BuyInvestmentTransaction, read: BaseBuyInvestmentTransaction.prototype.getBuyInvestment, write: BaseBuyInvestmentTransaction.prototype.setBuyInvestment });\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/transactions/BaseBuyInvestmentTransaction.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../../../../meta/Element_add'/>\n///<reference path='../../investment/accounts/SubAccountType'/>\n///<reference path='../../investment/positions/Inv401KSource'/>\n///<reference path='../../seclist/SecurityId'/>\n///<reference path='InvestmentTransaction'/>\n\nmodule ofx4js.domain.data.investment.transactions {\n\nimport SubAccountType = ofx4js.domain.data.investment.accounts.SubAccountType;\nimport SubAccountType_fromOfx = ofx4js.domain.data.investment.accounts.SubAccountType_fromOfx;\nimport Inv401KSource = ofx4js.domain.data.investment.positions.Inv401KSource;\nimport Inv401KSource_fromOfx = ofx4js.domain.data.investment.positions.Inv401KSource_fromOfx;\nimport SecurityId = ofx4js.domain.data.seclist.SecurityId;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Sell investment transaction aggregate (\"INVSELL\").\n * @see \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class SellInvestmentTransaction {\n  private investmentTransaction: InvestmentTransaction;\n  private securityId: SecurityId;\n  private units: number;\n  private unitPrice: number;\n  private markdown: number;\n  private commission: number;\n  private taxes: number;\n  private fees: number;\n  private load: number;\n  private withholding: number;\n  private taxExempt: boolean;\n  private total: number;\n  private gain: number;\n  private currencyCode: string;\n  private originalCurrencyInfo: OriginalCurrency;\n  private subAccountSecurity: string;\n  private subAccountFund: string;\n  private loanId: string;\n  private stateWithholding: number;\n  private penalty: number;\n  private inv401kSource: string;\n\n  /**\n   * Gets the investment transaction child aggregate.\n   *\n   * @return the investment transaction child aggregate\n   */\n  public getInvestmentTransaction(): InvestmentTransaction {\n    return this.investmentTransaction;\n  }\n\n  /**\n   * Sets the investment transaction child aggregate.\n   *\n   * @param investmentTransaction the investment transaction child aggregate\n   */\n  public setInvestmentTransaction(investmentTransaction: InvestmentTransaction): void {\n    this.investmentTransaction = investmentTransaction;\n  }\n\n  /**\n   * Gets the id of the security that was sold. This is a required field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the security id of the security that was sold\n   */\n  public getSecurityId(): SecurityId {\n    return this.securityId;\n  }\n\n  /**\n   * Sets the id of the security that was sold. This is a required field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param securityId the security id of the security that was sold\n   */\n  public setSecurityId(securityId: SecurityId): void {\n    this.securityId = securityId;\n  }\n\n  /**\n   * Gets the number of units of the security that was sold. For security-based actions other\n   * than stock splits, this is the quantity sold. For stocks, mutual funds, and others, this\n   * is the number of shares. For bonds, this is the face value. For options, this is the number of\n   * contacts. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the number of units sold\n   */\n  public getUnits(): number {\n    return this.units;\n  }\n\n  /**\n   * Sets the number of units of the security that was sold. For security-based actions other\n   * than stock splits, this is the quantity sold. For stocks, mutual funds, and others, this\n   * is the number of shares. For bonds, this is the face value. For options, this is the number of\n   * contacts. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param units the number of units sold\n   */\n  public setUnits(units: number): void {\n    this.units = units;\n  }\n\n  /**\n   * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n   * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n   * per contact) price. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the per unit price\n   */\n  public getUnitPrice(): number {\n    return this.unitPrice;\n  }\n\n  /**\n   * Sets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n   * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n   * per contact) price. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param unitPrice the per unit price\n   */\n  public setUnitPrice(unitPrice: number): void {\n    this.unitPrice = unitPrice;\n  }\n\n  /**\n   * Gets the portion of the unit price that is attributed to the dealer markdown. This is an\n   * optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the per unit markedown price\n   */\n  public getMarkdown(): number {\n    return this.markdown;\n  }\n\n  /**\n   * Sets the portion of the unit price that is attributed to the dealer markdown. This is an\n   * optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param markdown the per unit markedown price\n   */\n  public setMarkdown(markdown: number): void {\n    this.markdown = markdown;\n  }\n\n  /**\n   * Gets the transaction commission for the sale. This is an optional field according to the\n   * OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the transaction commision\n   */\n  public getCommission(): number {\n    return this.commission;\n  }\n\n  /**\n   * Sets the transaction commission for the sale. This is an optional field according to the\n   * OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param commission the transaction commision\n   */\n  public setCommission(commission: number): void {\n    this.commission = commission;\n  }\n\n  /**\n   * Gets the taxes for the sale. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the transaction taxes\n   */\n  public getTaxes(): number {\n    return this.taxes;\n  }\n\n  /**\n   * Sets the taxes for the sale. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param taxes the transaction taxes\n   */\n  public setTaxes(taxes: number): void {\n    this.taxes = taxes;\n  }\n\n  /**\n   * Gets the fees for the sale. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the transaction fees\n   */\n  public getFees(): number {\n    return this.fees;\n  }\n\n  /**\n   * Sets the fees for the sale. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param fees the transaction fees\n   */\n  public setFees(fees: number): void {\n    this.fees = fees;\n  }\n\n  /**\n   * Gets the load for the sale. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the load\n   */\n  public getLoad(): number {\n    return this.load;\n  }\n\n  /**\n   * Sets the load for the sale. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param load the load\n   */\n  public setLoad(load: number): void {\n    this.load = load;\n  }\n\n  /**\n   * Gets the withholding for the sale. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the withholding\n   */\n  public getWithholding(): number {\n    return this.withholding;\n  }\n\n  /**\n   * Sets the withholding for the sale. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param withholding the withholding\n   */\n  public setWithholding(withholding: number): void {\n    this.withholding = withholding;\n  }\n\n  /**\n   * Gets whether the sale was tax exempt. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return whether the transaction was tax exempt\n   */\n  public getTaxExempt(): boolean {\n    return this.taxExempt;\n  }\n\n  /**\n   * Sets whether the sale was tax exempt. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param taxExempt whether the transaction was tax exempt\n   */\n  public setTaxExempt(taxExempt: boolean): void {\n    this.taxExempt = taxExempt;\n  }\n\n  /**\n   * Gets the total for the sale. Should be equal to\n   * (units * (unitPrice + markdown)) + (commision + fees + load + taxes + penalty + withholding +\n   * statewithholding) according to the OFX spec. This is a required field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the total\n   */\n  public getTotal(): number {\n    return this.total;\n  }\n\n  /**\n   * Sets the total for the sale. Should be equal to\n   * (units * (unitPrice + markdown)) + (commision + fees + load + taxes + penalty + withholding +\n   * statewithholding) according to the OFX spec. This is a required field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param total the total\n   */\n  public setTotal(total: number): void {\n    this.total = total;\n  }\n\n  /**\n   * Gets the gain sale. This is aan optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the gain for the sale\n   */\n  public getGain(): number {\n    return this.gain;\n  }\n\n  /**\n   * Sets the gain sale. This is aan optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param gain the gain for the sale\n   */\n  public setGain(gain: number): void {\n    this.gain = gain;\n  }\n\n  /**\n   * Gets the currency code for the transaction. Only one of currency code or original currency\n   * code should be set according to the OFX spec. If neither are set, means the default currency.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the currency code for the transaction\n   */\n  public getCurrencyCode(): string {\n    return this.currencyCode;\n  }\n\n  /**\n   * sets the currency code for the transaction. Only one of currency code or original currency\n   * code should be set according to the OFX spec. If neither are set, means the default currency.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param currencyCode the currency code for the transaction\n   */\n  public setCurrencyCode(currencyCode: string): void {\n    this.currencyCode = currencyCode;\n    this.originalCurrencyInfo = null;\n  }\n\n  /**\n   * Gets the original currency info for the transaction.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the original currency info for the transaction\n   */\n  public getOriginalCurrencyInfo(): OriginalCurrency {\n    return this.originalCurrencyInfo;\n  }\n\n  /**\n   * Sets the original currency info for the transaction.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param originalCurrencyInfo the original currency info for the transaction\n   */\n  public setOriginalCurrencyInfo(originalCurrencyInfo: OriginalCurrency): void {\n    this.originalCurrencyInfo = originalCurrencyInfo;\n    this.currencyCode = null;\n  }\n\n  /**\n   * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the sub account type\n   */\n  public getSubAccountSecurity(): string {\n    return this.subAccountSecurity;\n  }\n\n  /**\n   * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param subAccountSecurity the sub account type\n   */\n  public setSubAccountSecurity(subAccountSecurity: string): void {\n    this.subAccountSecurity = subAccountSecurity;\n  }\n\n  /**\n   * Gets the result of getSubAccountSecurity as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types.\n   */\n  public getSubAccountSecurityEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getSubAccountSecurity());\n  }\n\n  /**\n   * Gets the sub account type that the security is being transfered from\n   * (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the sub account fund\n   */\n  public getSubAccountFund(): string {\n    return this.subAccountFund;\n  }\n\n  /**\n   * Sets the sub account type that the security is being transfered from\n   * (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param subAccountFund the sub account fund\n   */\n  public setSubAccountFund(subAccountFund: string): void {\n    this.subAccountFund = subAccountFund;\n  }\n\n  /**\n   * Gets the result of getSubAccountFund as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types\n   */\n  public getSubAccountFundEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getSubAccountFund());\n  }\n\n  /**\n   * Gets the loan id if this transaction was due to a loan or loan repayment on a 401k. This is an\n   * optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the loan id\n   */\n  public getLoanId(): string {\n    return this.loanId;\n  }\n\n  /**\n   * Sets the loan id if this transaction was due to a loan or loan repayment on a 401k. This is an\n   * optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param loanId the loan id\n   */\n  public setLoanId(loanId: string): void {\n    this.loanId = loanId;\n  }\n\n  /**\n   * Gets the state withholding for the sale. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the state withholding\n   */\n  public getStateWithholding(): number {\n    return this.stateWithholding;\n  }\n\n  /**\n   * Sets the state withholding for the sale. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param stateWithholding the state withholding\n   */\n  public setStateWithholding(stateWithholding: number): void {\n    this.stateWithholding = stateWithholding;\n  }\n\n  /**\n   * Gets the penalty for the sale. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the state withholding\n   */\n  public getPenalty(): number {\n    return this.penalty;\n  }\n\n  /**\n   * Sets the penalty for the sale. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param penalty the state withholding\n   */\n  public setPenalty(penalty: number): void {\n    this.penalty = penalty;\n  }\n\n  /**\n   * Gets the 401K source for the sale. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the 401k source\n   */\n  public get401kSource(): string {\n    return this.inv401kSource;\n  }\n\n  /**\n   * Sets the 401K source for the sale. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param inv401kSource the 401k source\n   */\n  public set401kSource(inv401kSource: string): void {\n    this.inv401kSource = inv401kSource;\n  }\n\n  /**\n   * Gets the 401k source as one of the well-known types.\n   *\n   * @return the 401k source or null if its not one of the well-known types\n   */\n  public get401kSourceEnum(): Inv401KSource {\n    return Inv401KSource_fromOfx(this.get401kSource());\n  }\n}\n\nAggregate_add( SellInvestmentTransaction, \"INVSELL\" );\nChildAggregate_add(SellInvestmentTransaction, { order: 10, type: InvestmentTransaction, read: SellInvestmentTransaction.prototype.getInvestmentTransaction, write: SellInvestmentTransaction.prototype.setInvestmentTransaction });\nChildAggregate_add(SellInvestmentTransaction, { required: true, order: 20, type: SecurityId, read: SellInvestmentTransaction.prototype.getSecurityId, write: SellInvestmentTransaction.prototype.setSecurityId });\nElement_add(SellInvestmentTransaction, { name: \"UNITS\", required: true, order: 30, type: Number, read: SellInvestmentTransaction.prototype.getUnits, write: SellInvestmentTransaction.prototype.setUnits });\nElement_add(SellInvestmentTransaction, { name: \"UNITPRICE\", required: true, order: 40, type: Number, read: SellInvestmentTransaction.prototype.getUnitPrice, write: SellInvestmentTransaction.prototype.setUnitPrice });\nElement_add(SellInvestmentTransaction, { name: \"MARKDOWN\", order: 50, type: Number, read: SellInvestmentTransaction.prototype.getMarkdown, write: SellInvestmentTransaction.prototype.setMarkdown });\nElement_add(SellInvestmentTransaction, { name: \"COMMISSION\", order: 60, type: Number, read: SellInvestmentTransaction.prototype.getCommission, write: SellInvestmentTransaction.prototype.setCommission });\nElement_add(SellInvestmentTransaction, { name: \"TAXES\", order: 70, type: Number, read: SellInvestmentTransaction.prototype.getTaxes, write: SellInvestmentTransaction.prototype.setTaxes });\nElement_add(SellInvestmentTransaction, { name: \"FEES\", order: 80, type: Number, read: SellInvestmentTransaction.prototype.getFees, write: SellInvestmentTransaction.prototype.setFees });\nElement_add(SellInvestmentTransaction, { name: \"LOAD\", order: 90, type: Number, read: SellInvestmentTransaction.prototype.getLoad, write: SellInvestmentTransaction.prototype.setLoad });\nElement_add(SellInvestmentTransaction, { name: \"WITHHOLDING\", order: 93, type: Number, read: SellInvestmentTransaction.prototype.getWithholding, write: SellInvestmentTransaction.prototype.setWithholding });\nElement_add(SellInvestmentTransaction, { name: \"TAXEXEMPT\", order: 97, type: Boolean, read: SellInvestmentTransaction.prototype.getTaxExempt, write: SellInvestmentTransaction.prototype.setTaxExempt });\nElement_add(SellInvestmentTransaction, { name: \"TOTAL\", required: true, order: 100, type: Number, read: SellInvestmentTransaction.prototype.getTotal, write: SellInvestmentTransaction.prototype.setTotal });\nElement_add(SellInvestmentTransaction, { name: \"GAIN\", order: 105, type: Number, read: SellInvestmentTransaction.prototype.getGain, write: SellInvestmentTransaction.prototype.setGain });\nElement_add(SellInvestmentTransaction, { name: \"CURRENCY\", order: 110, type: String, read: SellInvestmentTransaction.prototype.getCurrencyCode, write: SellInvestmentTransaction.prototype.setCurrencyCode });\nElement_add(SellInvestmentTransaction, { name: \"ORIGCURRENCY\", order: 120, type: OriginalCurrency, read: SellInvestmentTransaction.prototype.getOriginalCurrencyInfo, write: SellInvestmentTransaction.prototype.setOriginalCurrencyInfo });\nElement_add(SellInvestmentTransaction, { name: \"SUBACCTSEC\", order: 130, type: String, read: SellInvestmentTransaction.prototype.getSubAccountSecurity, write: SellInvestmentTransaction.prototype.setSubAccountSecurity });\nElement_add(SellInvestmentTransaction, { name: \"SUBACCTFUND\", order: 140, type: String, read: SellInvestmentTransaction.prototype.getSubAccountFund, write: SellInvestmentTransaction.prototype.setSubAccountFund });\nElement_add(SellInvestmentTransaction, { name: \"LOANID\", order: 150, type: String, read: SellInvestmentTransaction.prototype.getLoanId, write: SellInvestmentTransaction.prototype.setLoanId });\nElement_add(SellInvestmentTransaction, { name: \"STATEWITHHOLDING\", order: 160, type: Number, read: SellInvestmentTransaction.prototype.getStateWithholding, write: SellInvestmentTransaction.prototype.setStateWithholding });\nElement_add(SellInvestmentTransaction, { name: \"PENALTY\", order: 170, type: Number, read: SellInvestmentTransaction.prototype.getPenalty, write: SellInvestmentTransaction.prototype.setPenalty });\nElement_add(SellInvestmentTransaction, { name: \"INV401KSOURCE\", order: 180, type: String, read: SellInvestmentTransaction.prototype.get401kSource, write: SellInvestmentTransaction.prototype.set401kSource });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/transactions/SellInvestmentTransaction.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../../investment/positions/Inv401KSource'/>\n///<reference path='../../investment/accounts/SubAccountType'/>\n///<reference path='../../seclist/SecurityId'/>\n///<reference path='BaseInvestmentTransaction'/>\n///<reference path='TransactionWithSecurity'/>\n///<reference path='SellInvestmentTransaction'/>\n///<reference path='InvestmentTransaction'/>\n///<reference path='OriginalCurrency'/>\n\nmodule ofx4js.domain.data.investment.transactions {\n\nimport Inv401KSource = ofx4js.domain.data.investment.positions.Inv401KSource;\nimport Inv401KSource_fromOfx = ofx4js.domain.data.investment.positions.Inv401KSource_fromOfx;\nimport SecurityId = ofx4js.domain.data.seclist.SecurityId;\nimport SubAccountType = ofx4js.domain.data.investment.accounts.SubAccountType;\nimport SubAccountType_fromOfx = ofx4js.domain.data.investment.accounts.SubAccountType_fromOfx;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * Base class for all investment transactions for selling securities.\n * <br>\n * This class exposes a read-only view of the flattened aggregates that are\n * common to all sell investment transactions as a convenience to application\n * developers who may not find the ofx aggregation model intuitive.\n *\n * @author Jon Perlow\n */\nexport /*abstract*/ class BaseSellInvestmentTransaction extends BaseInvestmentTransaction\n    implements TransactionWithSecurity {\n\n  private sellInvestment: SellInvestmentTransaction;\n\n  constructor(transactionType: TransactionType) {\n    super(transactionType);\n  }\n\n  /**\n   * Gets the sell investment transaction child aggregate.\n   *\n   * @return the sell investment transaction child aggregate\n   */\n  // @Override\n  public getSellInvestment(): SellInvestmentTransaction {\n    return this.sellInvestment;\n  }\n\n  /**\n   * Sets the sell investment transaction child aggregate.\n   *\n   * @param sellInvestment the sell investment transaction child aggregate\n   */\n  public setSellInvestment(sellInvestment: SellInvestmentTransaction): void {\n    this.sellInvestment = sellInvestment;\n  }\n\n  /**\n   * Gets the investment transaction aggregate.\n   *\n   * @return the investment transaction aggregate\n   */\n  // @Overridden\n  public getInvestmentTransaction(): InvestmentTransaction {\n    return this.getSellInvestment().getInvestmentTransaction();\n  }\n\n  /**\n   * Gets the id of the security that was sold. This is a required field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the security id of the security that was bought\n   */\n  public getSecurityId(): SecurityId {\n    return this.getSellInvestment().getSecurityId();\n  }\n\n  /**\n   * Gets the number of units of the security that was sold. For security-based actions other\n   * than stock splits, this is the quantity sold. For stocks, mutual funds, and others, this\n   * is the number of shares. For bonds, this is the face value. For options, this is the number of\n   * contacts. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the number of units purchased.\n   */\n  public getUnits(): number {\n    return this.getSellInvestment().getUnits();\n  }\n\n  /**\n   * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n   * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n   * per contact) price. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the per unit price\n   */\n  public getUnitPrice(): number {\n    return this.getSellInvestment().getUnitPrice();\n  }\n\n  /**\n   * Gets the portion of the unit price that is attributed to the dealer markdown. This is an\n   * optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the per unit markedown price\n   */\n  public getMarkdown(): number {\n    return this.getSellInvestment().getMarkdown();\n  }\n\n  /**\n   * Gets the transaction commission for the sale. This is an optional field according to the\n   * OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the transaction commision\n   */\n  public getCommission(): number {\n    return this.getSellInvestment().getCommission();\n  }\n\n  /**\n   * Gets the taxes for the sale. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the transaction taxes\n   */\n  public getTaxes(): number {\n    return this.getSellInvestment().getTaxes();\n  }\n\n  /**\n   * Gets the fees for the sale. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the transaction fees\n   */\n  public getFees(): number {\n    return this.getSellInvestment().getFees();\n  }\n\n  /**\n   * Gets the load for the sale. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the load\n   */\n  public getLoad(): number {\n    return this.getSellInvestment().getLoad();\n  }\n\n  /**\n   * Gets the withholding for the sale. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the withholding\n   */\n  public getWithholding(): number {\n    return this.getSellInvestment().getWithholding();\n  }\n\n  /**\n   * Gets whether the sale was tax exempt. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return whether the transaction was tax exempt\n   */\n  public getTaxExempt(): boolean {\n    return this.getSellInvestment().getTaxExempt();\n  }\n\n  /**\n   * Gets the total for the sale. Should be equal to\n   * (units * (unitPrice + markdown)) + (commision + fees + load + taxes + penalty + withholding +\n   * statewithholding) according to the OFX spec. This is a required field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the total\n   */\n  public getTotal(): number {\n    return this.getSellInvestment().getTotal();\n  }\n\n  /**\n   * Gets the gain sale. This is aan optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the gain for the sale\n   */\n  public getGain(): number {\n    return this.getSellInvestment().getGain();\n  }\n\n  /**\n   * Gets the currency code for the transaction. Only one of currency code or original currency\n   * info should be set according to the OFX spec. If neither are set, means the default currency.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the currency code for the transaction.\n   */\n  public getCurrencyCode(): string {\n    return this.getSellInvestment().getCurrencyCode();\n  }\n\n  /**\n   * Gets the origianl currency info for the transaction.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the currency info for the transaction.\n   */\n  public getOriginalCurrencyInfo(): OriginalCurrency {\n    return this.getSellInvestment().getOriginalCurrencyInfo();\n  }\n\n  /**\n   * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the sub account type\n   */\n  public getSubAccountSecurity(): string {\n    return this.getSellInvestment().getSubAccountSecurity();\n  }\n\n  /**\n   * Gets the result of getSubAccountSecurity as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types.\n   */\n  public getSubAccountSecurityEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getSubAccountSecurity());\n  }\n\n  /**\n   * Gets the sub account type that the money went to  (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the sub account fund\n   */\n  public getSubAccountFund(): string {\n    return this.getSellInvestment().getSubAccountFund();\n  }\n\n  /**\n   * Gets the result of getSubAccountFund as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types.\n   */\n  public getSubAccountFundEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getSubAccountFund());\n  }\n\n  /**\n   * Gets the loan id if this transaction was due to a loan or loan repayment on a 401k. This is an\n   * optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the loan id\n   */\n  public getLoadId(): string {\n    return this.getSellInvestment().getLoanId();\n  }\n\n  /**\n   * Gets the state withholding for the sale. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the state withholding\n   */\n  public getStateWithholding(): number {\n    return this.getSellInvestment().getStateWithholding();\n  }\n\n  /**\n   * Gets the penalty for the sale. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the state withholding\n   */\n  public getPenalty(): number {\n    return this.getSellInvestment().getPenalty();\n  }\n\n  /**\n   * Gets the 401K source for the sale. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the 401k source\n   */\n  public get401kSource(): string {\n    return this.getSellInvestment().get401kSource();\n  }\n\n  /**\n   * Gets the 401k source as one of the well-known types.\n   *\n   * @return the 401k source or null if its not one of the well-known types\n   */\n  public get401kSourceEnum(): Inv401KSource {\n    return Inv401KSource_fromOfx(this.get401kSource());\n  }\n}\n\nChildAggregate_add(BaseSellInvestmentTransaction, { order: 10, type: SellInvestmentTransaction, read: BaseSellInvestmentTransaction.prototype.getSellInvestment, write: BaseSellInvestmentTransaction.prototype.setSellInvestment });\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/transactions/BaseSellInvestmentTransaction.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/Element_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='BaseBuyInvestmentTransaction'/>\n\nmodule ofx4js.domain.data.investment.transactions {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Transaction for buying debt (i.e. bonds, CDs, etc.,).\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class BuyDebtTransaction extends BaseBuyInvestmentTransaction {\n\n  private accruedInterest: number;\n\n  constructor() {\n    super(TransactionType.BUY_DEBT);\n  }\n\n  /**\n   * Gets the amount of accrued interest on the debt. This is an optional field according to the\n   * OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the amount of accrued interest\n   */\n  public getAccruedInterest(): number {\n    return this.accruedInterest;\n  }\n\n  /**\n   * Sets the amount of accrued interest on the debt. This is an optional field according to the\n   * OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param accruedInterest the amount of accrued interest\n   */\n  public setAccruedInterest(accruedInterest: number): void {\n    this.accruedInterest = accruedInterest;\n  }\n}\n\nAggregate_add( BuyDebtTransaction, \"BUYDEBT\" );\nElement_add(BuyDebtTransaction, { name: \"ACCRDINT\", order: 20, type: Number, read: BuyDebtTransaction.prototype.getAccruedInterest, write: BuyDebtTransaction.prototype.setAccruedInterest });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/transactions/BuyDebtTransaction.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule ofx4js.domain.data.investment.transactions {\n\n/**\n * Type of purchase for stocks and mutual funds.\n * @see \"Section 13.9.2.4.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum BuyType {\n  BUY,\n  BUY_TO_COVER\n}\n\nexport function BuyType_fromOfx(ofxVal: string): BuyType {\n  if (\"BUY\" === ofxVal) {\n    return BuyType.BUY;\n  } else if (\"BUYTOCOVER\" === ofxVal) {\n    return BuyType.BUY_TO_COVER;\n  } else {\n    return null;\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/transactions/BuyType.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/Element_add'/>\n///<reference path='BaseBuyInvestmentTransaction'/>\n///<reference path='BuyType'/>\n\nmodule ofx4js.domain.data.investment.transactions {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Transaction for buying mutual funds.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class BuyMutualFundTransaction extends BaseBuyInvestmentTransaction {\n\n  private buyType: string;\n  private relatedTransactionId: string;\n\n  constructor() {\n    super(TransactionType.BUY_MUTUAL_FUND);\n  }\n\n\n  /**\n   * Gets the type of purchase (i.e. \"BUY\" or \"BUYTOCOVER\"). This is a required field according to\n   * the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the buy type\n   */\n  public getBuyType(): string {\n    return this.buyType;\n  }\n\n  /**\n   * Sets the type of purchase (i.e. \"BUY\" or \"BUYTOCOVER\"). This is a required field according to\n   * the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param buyType the buy type\n   */\n  public setBuyType(buyType: string): void {\n    this.buyType = buyType;\n  }\n\n  /**\n   * Gets the buy type as one of the well-known types.\n   *\n   * @return the type of purchase or null if it's not known\n   */\n  public getBuyTypeEnum(): BuyType {\n    return BuyType_fromOfx(this.buyType);\n  }\n\n  /**\n   * Gets any related transaction id for a mutual fund purchase (e.g. for a mutual fund exchange).\n   * This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the related transaction id\n   */\n  public getRelatedTransactionId(): string {\n    return this.relatedTransactionId;\n  }\n\n  /**\n   * Sets any related transaction id for a mutual fund purchase (e.g. for a mutual fund exchange).\n   * This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param relatedTransactionId the related transaction id\n   */\n  public setRelatedTransactionId(relatedTransactionId: string): void {\n    this.relatedTransactionId = relatedTransactionId;\n  }\n}\n\nAggregate_add( BuyMutualFundTransaction, \"BUYMF\" );\nElement_add(BuyMutualFundTransaction, { name: \"BUYTYPE\", required: true, order: 20, type: String, read: BuyMutualFundTransaction.prototype.getBuyType, write: BuyMutualFundTransaction.prototype.setBuyType });\nElement_add(BuyMutualFundTransaction, { name: \"RELFITID\", order: 30, type: String, read: BuyMutualFundTransaction.prototype.getRelatedTransactionId, write: BuyMutualFundTransaction.prototype.setRelatedTransactionId });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/transactions/BuyMutualFundTransaction.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule ofx4js.domain.data.investment.transactions {\n\n/**\n * Type of purchase for options.\n * @see \"Section 13.9.2.4.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum OptionBuyType {\n  BUY_TO_OPEN,\n  BUY_TO_CLOSE\n}\n\nexport function OptionBuyType_fromOfx(ofxVal: string): OptionBuyType {\n  if (\"BUYTOOPEN\" === ofxVal) {\n    return OptionBuyType.BUY_TO_OPEN;\n  } else if (\"BUYTOCLOSE\" === ofxVal) {\n    return OptionBuyType.BUY_TO_CLOSE;\n  } else {\n    return null;\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/transactions/OptionBuyType.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/Element_add'/>\n///<reference path='BaseBuyInvestmentTransaction'/>\n///<reference path='OptionBuyType'/>\n\nmodule ofx4js.domain.data.investment.transactions {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Transaction for buying options.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class BuyOptionTransaction extends BaseBuyInvestmentTransaction {\n\n  private optionBuyType: string;\n  private sharesPerContact: number;\n\n  constructor() {\n    super(TransactionType.BUY_OPTION);\n  }\n\n  /**\n   * Gets the type of option purchase (i.e. \"BUYTOOPEN\" or \"BUYTOCLOSE\"). This is a required field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the option buy type\n   */\n  public getOptionBuyType(): string {\n    return this.optionBuyType;\n  }\n\n  /**\n   * Sets the type of option purchase (i.e. \"BUYTOOPEN\" or \"BUYTOCLOSE\"). This is a required field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param optionBuyType the option buy type\n   */\n  public setOptionBuyType(optionBuyType: string): void {\n    this.optionBuyType = optionBuyType;\n  }\n\n  /**\n   * Gets the option buy type as one of the well-known types.\n   *\n   * @return the type of purchase or null if it's not known\n   */\n  public getOptionBuyTypeEnum(): OptionBuyType {\n    return OptionBuyType_fromOfx(this.optionBuyType);\n  }\n\n  /**\n   * Gets the number of shares per contact. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the number of shares per contact\n   */\n  public getSharesPerContract(): number {\n    return this.sharesPerContact;\n  }\n\n  /**\n   * Sets the number of shares per contact. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param sharesPerContact the number of shares per contact\n   */\n  public setSharesPerContract(sharesPerContact: number): void {\n    this.sharesPerContact = sharesPerContact;\n  }\n}\n\nAggregate_add( BuyOptionTransaction, \"BUYOPT\" );\nElement_add(BuyOptionTransaction, { name: \"OPTBUYTYPE\", required: true, order: 20, type: String, read: BuyOptionTransaction.prototype.getOptionBuyType, write: BuyOptionTransaction.prototype.setOptionBuyType });\nElement_add(BuyOptionTransaction, { name: \"SHPERCTRCT\", required: true, order: 30, type: Number, read: BuyOptionTransaction.prototype.getSharesPerContract, write: BuyOptionTransaction.prototype.setSharesPerContract });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/transactions/BuyOptionTransaction.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='BaseBuyInvestmentTransaction'/>\n\nmodule ofx4js.domain.data.investment.transactions {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\n\n/**\n * Transaction for buying other types of securities.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class BuyOtherTransaction extends BaseBuyInvestmentTransaction {\n\n  constructor() {\n    super(TransactionType.BUY_OTHER);\n  }\n}\n\nAggregate_add( BuyOtherTransaction, \"BUYOTHER\" );\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/transactions/BuyOtherTransaction.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/Element_add'/>\n///<reference path='BaseBuyInvestmentTransaction'/>\n///<reference path='BuyType'/>\n\nmodule ofx4js.domain.data.investment.transactions {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Transaction for buying stock.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class BuyStockTransaction extends BaseBuyInvestmentTransaction {\n\n  private buyType: string;\n\n  constructor() {\n    super(TransactionType.BUY_STOCK);\n  }\n\n  /**\n   * Gets the type of stock purchase (i.e. \"BUY\" or \"BUYTOCOVER\"). This is a required field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the buy type\n   */\n  public getBuyType(): string {\n    return this.buyType;\n  }\n\n  /**\n   * Sets the type of stock purchase (i.e. \"BUY\" or \"BUYTOCOVER\"). This is a required field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param buyType the buy type\n   */\n  public setBuyType(buyType: string): void {\n    this.buyType = buyType;\n  }\n\n  /**\n   * Gets the buy type as one of the well-known types.\n   *\n   * @return the type of purchase or null if it's not well known\n   */\n  public getBuyTypeEnum(): BuyType {\n    return BuyType_fromOfx(this.buyType);\n  }\n}\n\nAggregate_add( BuyStockTransaction, \"BUYSTOCK\" );\nElement_add(BuyStockTransaction, { name: \"BUYTYPE\", required: true, order: 20, type: String, read: BuyStockTransaction.prototype.getBuyType, write: BuyStockTransaction.prototype.setBuyType });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/transactions/BuyStockTransaction.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule ofx4js.domain.data.investment.transactions {\n\n/**\n * Type of action for closing a stock option.\n * @see \"Section 13.9.2.4.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum CloseOptionAction {\n  EXERCISE,\n  ASSIGN,\n  EXPIRE\n}\n\nexport function CloseOptionAction_fromOfx(ofxVal: string): CloseOptionAction {\n  if (\"EXERCISE\" === ofxVal) {\n    return CloseOptionAction.EXERCISE;\n  } else if (\"ASSIGN\" === ofxVal) {\n    return CloseOptionAction.ASSIGN;\n  } else if (\"EXPIRE\" === ofxVal) {\n    return CloseOptionAction.EXPIRE;\n  } else {\n    return null;\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/transactions/CloseOptionAction.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../../../../meta/Element_add'/>\n///<reference path='../../investment/accounts/SubAccountType'/>\n///<reference path='../../seclist/SecurityId'/>\n///<reference path='BaseOtherInvestmentTransaction'/>\n///<reference path='TransactionWithSecurity'/>\n///<reference path='CloseOptionAction'/>\n\nmodule ofx4js.domain.data.investment.transactions {\n\nimport SubAccountType = ofx4js.domain.data.investment.accounts.SubAccountType;\nimport SubAccountType_fromOfx = ofx4js.domain.data.investment.accounts.SubAccountType_fromOfx;\nimport SecurityId = ofx4js.domain.data.seclist.SecurityId;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Transaction for closing an option position due to expiration, exercise, or assignment.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class CloseOptionTransaction extends BaseOtherInvestmentTransaction\n    implements TransactionWithSecurity {\n\n  private securityId: SecurityId;\n  private optionAction: string;\n  private units: number;\n  private sharesPerContact: number;\n  private subAccountSecurity: string;\n  private relatedTransactionId: string;\n  private gain: number;\n\n  constructor() {\n    super(TransactionType.CLOSE_OPTION);\n  }\n\n  /**\n   * Gets the security id of the option.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the security id of the option\n   */\n  public getSecurityId(): SecurityId {\n    return this.securityId;\n  }\n\n  /**\n   * Sets the security id of the option.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param securityId the security id of the option\n   */\n  public setSecurityId(securityId: SecurityId): void {\n    this.securityId = securityId;\n  }\n\n  /**\n   * Gets the action being performed (i.e. \"EXERCISE\", \"ASSIGN\", \"EXPIRE\" This is a required field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the option action\n   */\n  public getOptionAction(): string {\n    return this.optionAction;\n  }\n\n  /**\n   * Sets the action being performed (i.e. \"EXERCISE\", \"ASSIGN\", \"EXPIRE\" This is a required field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param optionAction the option action\n   */\n  public setOptionAction(optionAction: string): void {\n    this.optionAction = optionAction;\n  }\n\n  /**\n   * Gets the action as one of the well-known types.\n   *\n   * @return the type of close or null if it's not a well-known type\n   */\n  public getOptionActionEnum(): CloseOptionAction {\n    return  CloseOptionAction_fromOfx(this.getOptionAction());\n  }\n\n  /**\n   * Gets the number of units of the option that were closed. This is a required field according\n   * to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the number of units closed\n   */\n  public getUnits(): number {\n    return this.units;\n  }\n\n  /**\n   * Sets the number of units of the option that were closed. This is a required field according\n   * to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param units the number of units closed\n   */\n  public setUnits(units: number): void {\n    this.units = units;\n  }\n\n  /**\n   * Gets the number of shares per contact. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the number of shares per contact\n   */\n  public getSharesPerContact(): number {\n    return this.sharesPerContact;\n  }\n\n  /**\n   * Sets the number of shares per contact. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param sharesPerContact the number of shares per contact\n   */\n  public setSharesPerContact(sharesPerContact: number): void {\n    this.sharesPerContact = sharesPerContact;\n  }\n\n  /**\n   * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the sub account type\n   */\n  public getSubAccountSecurity(): string {\n    return this.subAccountSecurity;\n  }\n\n  /**\n   * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param subAccountSecurity the sub account type\n   */\n  public setSubAccountSecurity(subAccountSecurity: string): void {\n    this.subAccountSecurity = subAccountSecurity;\n  }\n\n  /**\n   * Gets the result of getSubAccountFund as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types\n   */\n  public getSubAccountSecurityEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getSubAccountSecurity());\n  }\n\n  /**\n   * Gets the related transaction id for the related buy or sell corresponding to the\n   * EXERCISE or ASSIGN action. This is a required field according to the OFX spec if the\n   * action or EXERCISE or ASSIGN.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the related transaction id\n   */\n  public getRelatedTransactionId(): string {\n    return this.relatedTransactionId;\n  }\n\n  /**\n   * Sets the related transaction id for the related buy or sell corresponding to the\n   * EXERCISE or ASSIGN action. This is a required field according to the OFX spec if the\n   * action or EXERCISE or ASSIGN.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param relatedTransactionId the related transaction id\n   */\n  public setRelatedTransactionId(relatedTransactionId: string): void {\n    this.relatedTransactionId = relatedTransactionId;\n  }\n\n  /**\n   * Gets the gain related to the transaction. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the gain related to the transaction\n   */\n  public getGain(): number {\n    return this.gain;\n  }\n\n  /**\n   * Sets the gain related to the transaction. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param gain the gain related to the transaction\n   */\n  public setGain(gain: number): void {\n    this.gain = gain;\n  }\n}\n\nAggregate_add( CloseOptionTransaction, \"CLOSUREOPT\" );\nChildAggregate_add(CloseOptionTransaction, { order: 20, type: SecurityId, read: CloseOptionTransaction.prototype.getSecurityId, write: CloseOptionTransaction.prototype.setSecurityId });\nElement_add(CloseOptionTransaction, { name: \"OPTACTION\", required: true, order: 30, type: String, read: CloseOptionTransaction.prototype.getOptionAction, write: CloseOptionTransaction.prototype.setOptionAction });\nElement_add(CloseOptionTransaction, { name: \"UNITS\", required: true, order: 40, type: Number, read: CloseOptionTransaction.prototype.getUnits, write: CloseOptionTransaction.prototype.setUnits });\nElement_add(CloseOptionTransaction, { name: \"SHPERCTRCT\", required: true, order: 50, type: Number, read: CloseOptionTransaction.prototype.getSharesPerContact, write: CloseOptionTransaction.prototype.setSharesPerContact });\nElement_add(CloseOptionTransaction, { name: \"SUBACCTSEC\", required: true, order: 60, type: String, read: CloseOptionTransaction.prototype.getSubAccountSecurity, write: CloseOptionTransaction.prototype.setSubAccountSecurity });\nElement_add(CloseOptionTransaction, { name: \"RELFITID\", order: 70, type: String, read: CloseOptionTransaction.prototype.getRelatedTransactionId, write: CloseOptionTransaction.prototype.setRelatedTransactionId });\nElement_add(CloseOptionTransaction, { name: \"GAIN\", order: 80, type: Number, read: CloseOptionTransaction.prototype.getGain, write: CloseOptionTransaction.prototype.setGain });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/transactions/CloseOptionTransaction.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule ofx4js.domain.data.investment.transactions {\n\n/**\n * Type of income.\n * @see \"Section 13.9.2.4.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum IncomeType {\n  LONG_TERM_CAP_GAINS,\n  SHORT_TERM_CAP_GAINS,\n  DIVIDEND,\n  INTEREST,\n  MISC\n}\n\nexport function IncomeType_fromOfx(ofxVal: string): IncomeType {\n  if (\"CGLONG\" === ofxVal) {\n    return IncomeType.LONG_TERM_CAP_GAINS;\n  } else if (\"CGSHORT\" === ofxVal) {\n    return IncomeType.SHORT_TERM_CAP_GAINS;\n  } else if (\"DIV\" === ofxVal) {\n    return IncomeType.DIVIDEND;\n  } else if (\"INTEREST\" === ofxVal) {\n    return IncomeType.INTEREST;\n  } else if (\"MISC\" === ofxVal) {\n    return IncomeType.MISC;\n  } else {\n    return null;\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/transactions/IncomeType.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../../../../meta/Element_add'/>\n///<reference path='../../investment/accounts/SubAccountType'/>\n///<reference path='../../investment/positions/Inv401KSource'/>\n///<reference path='../../seclist/SecurityId'/>\n///<reference path='BaseOtherInvestmentTransaction'/>\n///<reference path='IncomeType'/>\n///<reference path='OriginalCurrency'/>\n///<reference path='TransactionWithSecurity'/>\n\nmodule ofx4js.domain.data.investment.transactions {\n\nimport SubAccountType = ofx4js.domain.data.investment.accounts.SubAccountType;\nimport SubAccountType_fromOfx = ofx4js.domain.data.investment.accounts.SubAccountType_fromOfx;\nimport Inv401KSource = ofx4js.domain.data.investment.positions.Inv401KSource;\nimport Inv401KSource_fromOfx = ofx4js.domain.data.investment.positions.Inv401KSource_fromOfx;\nimport SecurityId = ofx4js.domain.data.seclist.SecurityId;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Transaction for investment income that is realized as cash into the investment account.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class IncomeTransaction extends BaseOtherInvestmentTransaction\n    implements TransactionWithSecurity {\n\n  private securityId: SecurityId;\n  private incomeType: string;\n  private total: number;\n  private subAccountSecurity: string;\n  private subAccountFund: string;\n  private taxExempt: boolean;\n  private withholding: number;\n  private currencyCode: string;\n  private originalCurrencyInfo: OriginalCurrency;\n  private inv401kSource: string;\n\n  constructor() {\n    super(TransactionType.INCOME);\n  }\n\n  /**\n   * Gets the id of the security that the income was for. This is a required field according to the\n   * OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the security id of the security that the income was for\n   */\n  public getSecurityId(): SecurityId {\n    return this.securityId;\n  }\n\n  /**\n   * Sets the id of the security that the income was for. This is a required field according to the\n   * OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param securityId the security id of the security that the income was for\n   */\n  public setSecurityId(securityId: SecurityId): void {\n    this.securityId = securityId;\n  }\n\n  /**\n   * Gets the type of income. One of \"CGLONG\" (long term capital gains), \"CGSHORT\" (short term\n   * capital gains), \"DIV\" (dividend), INTEREST, or MISC>\n   * @see \"Section 13.9.2.4.4, OFX Spec\" This is a required field according to the OFX spec.\n   *\n   * @return the type of income\n   */\n  public getIncomeType(): string {\n    return this.incomeType;\n  }\n\n  /**\n   * Sets the type of income. One of \"CGLONG\" (long term capital gains), \"CGSHORT\" (short term\n   * capital gains), \"DIV\" (dividend), INTEREST, or MISC>\n   * @see \"Section 13.9.2.4.4, OFX Spec\" This is a required field according to the OFX spec.\n   *\n   * @param incomeType the type of income\n   */\n  public setIncomeType(incomeType: string): void {\n    this.incomeType = incomeType;\n  }\n\n  /**\n   * Gets the income type as one of the well-known types.\n   *\n   * @return the income type or null if it's not well known\n   */\n  public getIncomeTypeEnum(): IncomeType {\n    return IncomeType_fromOfx(this.getIncomeType());\n  }\n\n  /**\n   * Gets the total income received.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the total\n   */\n  public getTotal(): number {\n    return this.total;\n  }\n\n  /**\n   * Sets the total income received.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param total the total\n   */\n  public setTotal(total: number): void {\n    this.total = total;\n  }\n\n  /**\n   * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the sub account type\n   */\n  public getSubAccountSecurity(): string {\n    return this.subAccountSecurity;\n  }\n\n  /**\n   * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param subAcctSec the sub account type\n   */\n  public setSubAccountSecurity(subAcctSec: string): void {\n    this.subAccountSecurity = subAcctSec;\n  }\n\n  /**\n   * Gets the result of getSubAccountSecurity as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types.\n   */\n  public getSubAccountSecurityEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getSubAccountSecurity());\n  }\n\n  /**\n   * Gets the sub account type that the security is from (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the sub account fund for the transaction\n   */\n  public getSubAccountFund(): string {\n    return this.subAccountFund;\n  }\n\n  /**\n   * Sets the sub account type that the security is from (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param subAcctFund the sub account fund for the transaction\n   */\n  public setSubAccountFund(subAcctFund: string): void {\n    this.subAccountFund = subAcctFund;\n  }\n\n  /**\n   * Gets the result of getSubAccountFund as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types\n   */\n  public getSubAccountFundEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getSubAccountFund());\n  }\n\n  /**\n   * Gets whether the income was tax exempt. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return whether the transaction was tax exempt\n   */\n  public getTaxExempt(): boolean {\n    return this.taxExempt;\n  }\n\n  /**\n   * Sets whether the income was tax exempt. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param taxExempt whether the transaction was tax exempt\n   */\n  public setTaxExempt(taxExempt: boolean): void {\n    this.taxExempt = taxExempt;\n  }\n\n  /**\n   * Gets the withholding for the income. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the withholding\n   */\n  public getWithholding(): number {\n    return this.withholding;\n  }\n\n  /**\n   * Sets the withholding for the income. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param withholding the withholding\n   */\n  public setWithholding(withholding: number): void {\n    this.withholding = withholding;\n  }\n\n  /**\n   * Gets the currency code for the transaction. Only one of currency code or original currency\n   * info should be set according to the OFX spec. If neither are set, means the default currency.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the currency code for the transaction\n   */\n  public getCurrencyCode(): string {\n    return this.currencyCode;\n  }\n\n  /**\n   * Sets the currency code for the transaction. Only one of currency code or original currency\n   * info should be set according to the OFX spec. If neither are set, means the default currency.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param currencyCode the currency code for the transaction\n   */\n  public setCurrencyCode(currencyCode: string): void {\n    this.currencyCode = currencyCode;\n    this.originalCurrencyInfo = null;\n  }\n\n  /**\n   * Gets the original currency info for the transaction.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the currency info for the transaction\n   */\n  public getOriginalCurrencyInfo(): OriginalCurrency {\n    return this.originalCurrencyInfo;\n  }\n\n  /**\n   * Sets the original currency info for the transaction.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param originalCurrencyInfo the currency info for the transaction\n   */\n  public setOriginalCurrencyInfo(originalCurrencyInfo: OriginalCurrency): void {\n    this.originalCurrencyInfo = originalCurrencyInfo;\n    this.currencyCode = null;\n  }\n\n  /**\n   * Gets the 401K source for the sale. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the state withholding\n   */\n  public get401kSource(): string {\n    return this.inv401kSource;\n  }\n\n  /**\n   * Sets the 401K source for the sale. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param inv401kSource the state withholding\n   */\n  public set401kSource(inv401kSource: string): void {\n    this.inv401kSource = inv401kSource;\n  }\n\n  /**\n   * Gets the 401(k) source as one of the well-known types.\n   *\n   * @return the type of close or null if it's not well known.\n   */\n  public get401kSourceEnum(): Inv401KSource {\n    return Inv401KSource_fromOfx(this.get401kSource());\n  }\n}\n\nAggregate_add( IncomeTransaction, \"INCOME\" );\nChildAggregate_add(IncomeTransaction, { required: true, order: 20, type: SecurityId, read: IncomeTransaction.prototype.getSecurityId, write: IncomeTransaction.prototype.setSecurityId });\nElement_add(IncomeTransaction, { name: \"INCOMETYPE\", required: true, order: 30, type: String, read: IncomeTransaction.prototype.getIncomeType, write: IncomeTransaction.prototype.setIncomeType });\nElement_add(IncomeTransaction, { name: \"TOTAL\", required: true, order: 40, type: Number, read: IncomeTransaction.prototype.getTotal, write: IncomeTransaction.prototype.setTotal });\nElement_add(IncomeTransaction, { name: \"SUBACCTSEC\", order: 50, type: String, read: IncomeTransaction.prototype.getSubAccountSecurity, write: IncomeTransaction.prototype.setSubAccountSecurity });\nElement_add(IncomeTransaction, { name: \"SUBACCTFUND\", order: 60, type: String, read: IncomeTransaction.prototype.getSubAccountFund, write: IncomeTransaction.prototype.setSubAccountFund });\nElement_add(IncomeTransaction, { name: \"TAXEXEMPT\", order: 70, type: Boolean, read: IncomeTransaction.prototype.getTaxExempt, write: IncomeTransaction.prototype.setTaxExempt });\nElement_add(IncomeTransaction, { name: \"WITHHOLDING\", order: 80, type: Number, read: IncomeTransaction.prototype.getWithholding, write: IncomeTransaction.prototype.setWithholding });\nElement_add(IncomeTransaction, { name: \"CURRENCY\", order: 90, type: String, read: IncomeTransaction.prototype.getCurrencyCode, write: IncomeTransaction.prototype.setCurrencyCode });\nChildAggregate_add(IncomeTransaction, { order: 120, type: OriginalCurrency, read: IncomeTransaction.prototype.getOriginalCurrencyInfo, write: IncomeTransaction.prototype.setOriginalCurrencyInfo });\nElement_add(IncomeTransaction, { name: \"INV401KSOURCE\", order: 110, type: String, read: IncomeTransaction.prototype.get401kSource, write: IncomeTransaction.prototype.set401kSource });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/transactions/IncomeTransaction.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../../../../meta/Element_add'/>\n///<reference path='../../investment/accounts/SubAccountType'/>\n///<reference path='../../investment/positions/Inv401KSource'/>\n///<reference path='../../seclist/SecurityId'/>\n///<reference path='BaseOtherInvestmentTransaction'/>\n///<reference path='OriginalCurrency'/>\n\nmodule ofx4js.domain.data.investment.transactions {\n\nimport SubAccountType = ofx4js.domain.data.investment.accounts.SubAccountType;\nimport SubAccountType_fromOfx = ofx4js.domain.data.investment.accounts.SubAccountType_fromOfx;\nimport Inv401KSource = ofx4js.domain.data.investment.positions.Inv401KSource;\nimport Inv401KSource_fromOfx = ofx4js.domain.data.investment.positions.Inv401KSource_fromOfx;\nimport SecurityId = ofx4js.domain.data.seclist.SecurityId;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Transaction for an investment expense\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class InvestmentExpenseTransaction extends BaseOtherInvestmentTransaction {\n\n  private securityId: SecurityId;\n  private total: number;\n  private subAccountSecurity: string;\n  private subAccountFund: string;\n  private currencyCode: string;\n  private originalCurrencyInfo: OriginalCurrency;\n  private inv401kSource: string;\n\n  constructor() {\n    super(TransactionType.INVESTMENT_EXPENSE);\n  }\n\n  /**\n   * Gets the id of the security for the expense. This is a required field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the security id of the security for the expsense\n   */\n  public getSecurityId(): SecurityId {\n    return this.securityId;\n  }\n\n  /**\n   * Sets the id of the security for the expense. This is a required field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param securityId the security id of the security for the expsense\n   */\n  public setSecurityId(securityId: SecurityId): void {\n    this.securityId = securityId;\n  }\n\n  /**\n   * Gets the total for the expense.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the total\n   */\n  public getTotal(): number {\n    return this.total;\n  }\n\n  /**\n   * Sets the total for the expense.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param total the total\n   */\n  public setTotal(total: number): void {\n    this.total = total;\n  }\n\n  /**\n   * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the sub account type\n   */\n  public getSubAccountSecurity(): string {\n    return this.subAccountSecurity;\n  }\n\n  /**\n   * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param subAccountSecurity the sub account type\n   */\n  public setSubAccountSecurity(subAccountSecurity: string): void {\n    this.subAccountSecurity = subAccountSecurity;\n  }\n\n  /**\n   * Gets the result of getSubAccountSecurity as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types.\n   */\n  public getSubAccountSecurityEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getSubAccountSecurity());\n  }\n\n  /**\n   * Gets the sub account type for the fund. (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the sub account fund\n   */\n  public getSubAccountFund(): string {\n    return this.subAccountFund;\n  }\n\n  /**\n   * Sets the sub account type for the fund. (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param subAccountFund the sub account fund\n   */\n  public setSubAccountFund(subAccountFund: string): void {\n    this.subAccountFund = subAccountFund;\n  }\n\n  /**\n   * Gets the result of getSubAccountFund as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types\n   */\n  public getSubAccountFundEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getSubAccountFund());\n  }\n\n  /**\n   * Gets the currency code for the transaction. Only one of currency code or original currency\n   * code should be set according to the OFX spec. If neither are set, means the default currency.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the currency code for the transaction\n   */\n  public getCurrencyCode(): string {\n    return this.currencyCode;\n  }\n\n  /**\n   * sets the currency code for the transaction. Only one of currency code or original currency\n   * code should be set according to the OFX spec. If neither are set, means the default currency.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param currencyCode the currency code for the transaction\n   */\n  public setCurrencyCode(currencyCode: string): void {\n    this.currencyCode = currencyCode;\n    this.originalCurrencyInfo = null;\n  }\n\n  /**\n   * Gets the original currency info for the transaction.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the original currency info for the transaction\n   */\n  public getOriginalCurrencyInfo(): OriginalCurrency {\n    return this.originalCurrencyInfo;\n  }\n\n  /**\n   * Sets the original currency info for the transaction.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param originalCurrencyInfo the original currency info for the transaction\n   */\n  public setOriginalCurrencyInfo(originalCurrencyInfo: OriginalCurrency): void {\n    this.originalCurrencyInfo = originalCurrencyInfo;\n    this.currencyCode = null;\n  }\n\n  /**\n   * Gets the 401K source for the transaction. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the 401k source\n   */\n  public get401kSource(): string {\n    return this.inv401kSource;\n  }\n\n  /**\n   * Sets the 401K source for the transaction. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param inv401kSource the 401k source\n   */\n  public set401kSource(inv401kSource: string): void {\n    this.inv401kSource = inv401kSource;\n  }\n\n  /**\n   * Gets the 401k source as one of the well-known types.\n   *\n   * @return the 401k source or null if its not one of the well-known types\n   */\n  public get401kSourceEnum(): Inv401KSource {\n    return Inv401KSource_fromOfx(this.get401kSource());\n  }\n}\n\nAggregate_add( InvestmentExpenseTransaction, \"INVEXPENSE\" );\nChildAggregate_add(InvestmentExpenseTransaction, { required: true, order: 20, type: SecurityId, read: InvestmentExpenseTransaction.prototype.getSecurityId, write: InvestmentExpenseTransaction.prototype.setSecurityId });\nElement_add(InvestmentExpenseTransaction, { name: \"TOTAL\", required: true, order: 30, type: Number, read: InvestmentExpenseTransaction.prototype.getTotal, write: InvestmentExpenseTransaction.prototype.setTotal });\nElement_add(InvestmentExpenseTransaction, { name: \"SUBACCTSEC\", order: 40, type: String, read: InvestmentExpenseTransaction.prototype.getSubAccountSecurity, write: InvestmentExpenseTransaction.prototype.setSubAccountSecurity });\nElement_add(InvestmentExpenseTransaction, { name: \"SUBACCTFUND\", order: 50, type: String, read: InvestmentExpenseTransaction.prototype.getSubAccountFund, write: InvestmentExpenseTransaction.prototype.setSubAccountFund });\nElement_add(InvestmentExpenseTransaction, { name: \"CURRENCY\", order: 60, type: String, read: InvestmentExpenseTransaction.prototype.getCurrencyCode, write: InvestmentExpenseTransaction.prototype.setCurrencyCode });\nElement_add(InvestmentExpenseTransaction, { name: \"ORIGCURRENCY\", order: 70, type: OriginalCurrency, read: InvestmentExpenseTransaction.prototype.getOriginalCurrencyInfo, write: InvestmentExpenseTransaction.prototype.setOriginalCurrencyInfo });\nElement_add(InvestmentExpenseTransaction, { name: \"INV401KSOURCE\", order: 180, type: String, read: InvestmentExpenseTransaction.prototype.get401kSource, write: InvestmentExpenseTransaction.prototype.set401kSource });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/transactions/InvestmentExpenseTransaction.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../../../../meta/Element_add'/>\n///<reference path='../../investment/accounts/SubAccountType'/>\n///<reference path='BaseOtherInvestmentTransaction'/>\n\nmodule ofx4js.domain.data.investment.transactions {\n\nimport SubAccountType = ofx4js.domain.data.investment.accounts.SubAccountType;\nimport SubAccountType_fromOfx = ofx4js.domain.data.investment.accounts.SubAccountType_fromOfx;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Transaction for journal fund transactions between sub-accounts within the same investment\n * account.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class JournalFundTransaction extends BaseOtherInvestmentTransaction {\n\n  private subAccountFrom: string;\n  private subAccountTo: string;\n  private total: number;\n\n  constructor() {\n    super(TransactionType.JOURNAL_FUND);\n  }\n\n  /**\n   * Gets the sub account type the transer is from (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the sub account type\n   */\n  public getFromSubAccountFund(): string {\n    return this.subAccountFrom;\n  }\n\n  /**\n   * Sets the sub account type the transer is from (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param subAccountFrom the sub account type\n   */\n  public setFromSubAccountFund(subAccountFrom: string): void {\n    this.subAccountFrom = subAccountFrom;\n  }\n\n  /**\n   * Gets the result of getFromSubAccountFund as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types.\n   */\n  public getFromSubAccountFundEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getFromSubAccountFund());\n  }\n\n  /**\n   * Gets the sub account type that the transfer is to (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the sub account fund\n   */\n  public getToSubAccountFund(): string {\n    return this.subAccountTo;\n  }\n\n  /**\n   * Sets the sub account type that the transfer is to (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param subAccountTo the sub account fund\n   */\n  public setToSubAccountFund(subAccountTo: string): void {\n    this.subAccountTo = subAccountTo;\n  }\n\n  /**\n   * Gets the result of getToSubAccountFund as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types.\n   */\n  public getToSubAccountFundEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getToSubAccountFund());\n  }\n\n  /**\n   * Gets the total for the transaction.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the total\n   */\n  public getTotal(): number {\n    return this.total;\n  }\n\n  /**\n   * Sets the total for the transaction.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param total the total\n   */\n  public setTotal(total: number): void {\n    this.total = total;\n  }\n}\n\nAggregate_add( JournalFundTransaction, \"JRNLFUND\" );\nElement_add(JournalFundTransaction, { name: \"SUBACCTFROM\", order: 20, type: String, read: JournalFundTransaction.prototype.getFromSubAccountFund, write: JournalFundTransaction.prototype.setFromSubAccountFund });\nElement_add(JournalFundTransaction, { name: \"SUBACCTTO\", order: 30, type: String, read: JournalFundTransaction.prototype.getToSubAccountFund, write: JournalFundTransaction.prototype.setToSubAccountFund });\nElement_add(JournalFundTransaction, { name: \"TOTAL\", order: 40, type: Number, read: JournalFundTransaction.prototype.getTotal, write: JournalFundTransaction.prototype.setTotal });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/transactions/JournalFundTransaction.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../../../../meta/Element_add'/>\n///<reference path='../../investment/accounts/SubAccountType'/>\n///<reference path='../../seclist/SecurityId'/>\n///<reference path='BaseOtherInvestmentTransaction'/>\n///<reference path='TransactionWithSecurity'/>\n\nmodule ofx4js.domain.data.investment.transactions {\n\nimport SubAccountType = ofx4js.domain.data.investment.accounts.SubAccountType;\nimport SubAccountType_fromOfx = ofx4js.domain.data.investment.accounts.SubAccountType_fromOfx;\nimport SecurityId = ofx4js.domain.data.seclist.SecurityId;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Transaction for journal security transactions between sub-accounts within the same investment\n * account.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class JournalSecurityTransaction extends BaseOtherInvestmentTransaction\n    implements TransactionWithSecurity {\n\n  private securityId: SecurityId;\n  private subAccountFrom: string;\n  private subAccountTo: string;\n  private total: number;\n\n  constructor() {\n    super(TransactionType.JOURNAL_SECURITY);\n  }\n\n  /**\n   * Gets the id of the security that was transferred. This is a required field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the security id of the security that was bought\n   */\n  public getSecurityId(): SecurityId {\n    return this.securityId;\n  }\n\n  /**\n   * Sets the id of the security that was transferred. This is a required field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param securityId the security id of the security that was bought\n   */\n  public setSecurityId(securityId: SecurityId): void {\n    this.securityId = securityId;\n  }\n\n  /**\n   * Gets the sub account type the transer is from (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the sub account type\n   */\n  public getFromSubAccountFund(): string {\n    return this.subAccountFrom;\n  }\n\n  /**\n   * Sets the sub account type the transer is from (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param subAccountFrom the sub account type\n   */\n  public setFromSubAccountFund(subAccountFrom: string): void {\n    this.subAccountFrom = subAccountFrom;\n  }\n\n  /**\n   * Gets the result of getFromSubAccountFund as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types.\n   */\n  public getFromSubAccountFundEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getFromSubAccountFund());\n  }\n\n  /**\n   * Gets the sub account type that the transfer is to (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the sub account fund\n   */\n  public getToSubAccountFund(): string {\n    return this.subAccountTo;\n  }\n\n  /**\n   * sets the sub account type that the transfer is to (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param subAccountTo the sub account fund\n   */\n  public setToSubAccountFund(subAccountTo: string): void {\n    this.subAccountTo = subAccountTo;\n  }\n\n  /**\n   * Gets the result of getToSubAccountFund as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types.\n   */\n  public getToSubAccountFundEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getToSubAccountFund());\n  }\n\n  /**\n   * Gets the total for the transaction.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the total\n   */\n  public getTotal(): number {\n    return this.total;\n  }\n\n  /**\n   * Sets the total for the transaction.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param total the total\n   */\n  public setTotal(total: number): void {\n    this.total = total;\n  }\n}\n\nAggregate_add( JournalSecurityTransaction, \"JRNLSEC\" );\nChildAggregate_add(JournalSecurityTransaction, { required: true, order: 20, type: SecurityId, read: JournalSecurityTransaction.prototype.getSecurityId, write: JournalSecurityTransaction.prototype.setSecurityId });\nElement_add(JournalSecurityTransaction, { name: \"SUBACCTFROM\", order: 30, type: String, read: JournalSecurityTransaction.prototype.getFromSubAccountFund, write: JournalSecurityTransaction.prototype.setFromSubAccountFund });\nElement_add(JournalSecurityTransaction, { name: \"SUBACCTTO\", order: 40, type: String, read: JournalSecurityTransaction.prototype.getToSubAccountFund, write: JournalSecurityTransaction.prototype.setToSubAccountFund });\nElement_add(JournalSecurityTransaction, { name: \"TOTAL\", order: 50, type: Number, read: JournalSecurityTransaction.prototype.getTotal, write: JournalSecurityTransaction.prototype.setTotal });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/transactions/JournalSecurityTransaction.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../../../../meta/Element_add'/>\n///<reference path='../../investment/accounts/SubAccountType'/>\n///<reference path='BaseOtherInvestmentTransaction'/>\n///<reference path='OriginalCurrency'/>\n\nmodule ofx4js.domain.data.investment.transactions {\n\nimport SubAccountType = ofx4js.domain.data.investment.accounts.SubAccountType;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Transaction for journal security transactions between sub-accounts within the same investment\n * account.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class MarginInterestTransaction extends BaseOtherInvestmentTransaction {\n\n  private total: number;\n  private subAccountFund: string;\n  private currencyCode: string;\n  private originalCurrencyInfo: OriginalCurrency;\n\n  constructor() {\n    super(TransactionType.MARGIN_INTEREST);\n  }\n\n  /**\n   * Gets the sub account type the margin interest affects (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the sub account type\n   */\n  public getSubAccountFund(): string {\n    return this.subAccountFund;\n  }\n\n  /**\n   * Sets the sub account type the margin interest affects (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param subAccountFund the sub account type\n   */\n  public setSubAccountFund(subAccountFund: string): void {\n    this.subAccountFund = subAccountFund;\n  }\n\n  /**\n   * Gets the result of getSubAccountFund as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types.\n   */\n  public getSubAccountFundEnum(): SubAccountType {\n    var type: string = this.getSubAccountFund();\n    return type != null ? SubAccountType[type] : null;\n  }\n\n  /**\n   * Gets the total for the transaction.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the total\n   */\n  public getTotal(): number {\n    return this.total;\n  }\n\n  /**\n   * Sets the total for the transaction.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param total the total\n   */\n  public setTotal(total: number): void {\n    this.total = total;\n  }\n\n  /**\n   * Gets the currency code for the transaction. Only one of currency code or original currency\n   * info should be set according to the OFX spec. If neither are set, means the default currency.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the currency code for the transaction.\n   */\n  public getCurrencyCode(): string {\n    return this.currencyCode;\n  }\n\n  /**\n   * Sets the currency code for the transaction. Only one of currency code or original currency\n   * info should be set according to the OFX spec. If neither are set, means the default currency.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param currencyCode the currency code for the transaction.\n   */\n  public setCurrencyCode(currencyCode: string): void {\n    this.currencyCode = currencyCode;\n    this.originalCurrencyInfo = null;\n  }\n\n  /**\n   * Gets the original currency info for the transaction.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the original currency info for the transaction.\n   */\n  public getOriginalCurrencyInfo(): OriginalCurrency {\n    return this.originalCurrencyInfo;\n  }\n\n  /**\n   * Sets the original currency info for the transaction.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param originalCurrency the original currency info for the transaction.\n   */\n  public setOriginalCurrencyInfo(originalCurrency: OriginalCurrency): void {\n    this.originalCurrencyInfo = originalCurrency;\n    this.currencyCode = null;\n  }\n}\n\nAggregate_add( MarginInterestTransaction, \"MARGININTEREST\" );\nElement_add(MarginInterestTransaction, { name: \"SUBACCTFUND\", order: 30, type: String, read: MarginInterestTransaction.prototype.getSubAccountFund, write: MarginInterestTransaction.prototype.setSubAccountFund });\nElement_add(MarginInterestTransaction, { name: \"TOTAL\", order: 40, type: Number, read: MarginInterestTransaction.prototype.getTotal, write: MarginInterestTransaction.prototype.setTotal });\nElement_add(MarginInterestTransaction, { name: \"CURRENCY\", order: 110, type: String, read: MarginInterestTransaction.prototype.getCurrencyCode, write: MarginInterestTransaction.prototype.setCurrencyCode });\nElement_add(MarginInterestTransaction, { name: \"ORIGCURRENCY\", order: 120, type: OriginalCurrency, read: MarginInterestTransaction.prototype.getOriginalCurrencyInfo, write: MarginInterestTransaction.prototype.setOriginalCurrencyInfo });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/transactions/MarginInterestTransaction.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule ofx4js.domain.data.investment.transactions {\n\n/**\n * Type of sale for options.\n * @see \"Section 13.9.2.4.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum OptionSellType {\n  SELL_TO_CLOSE,\n  SELL_TO_OPEN\n}\n\nexport function OptionSellType_fromOfx(ofxVal: string): OptionSellType {\n  if (\"SELLTOOPEN\" === ofxVal) {\n    return OptionSellType.SELL_TO_OPEN;\n  } else if (\"SELLTOCLOSE\" === ofxVal) {\n    return OptionSellType.SELL_TO_CLOSE;\n  } else {\n    return null;\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/transactions/OptionSellType.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../../../../meta/Element_add'/>\n///<reference path='../../investment/accounts/SubAccountType'/>\n///<reference path='../../investment/positions/Inv401KSource'/>\n///<reference path='../../seclist/SecurityId'/>\n///<reference path='BaseOtherInvestmentTransaction'/>\n///<reference path='TransactionWithSecurity'/>\n///<reference path='OriginalCurrency'/>\n///<reference path='IncomeType'/>\n\nmodule ofx4js.domain.data.investment.transactions {\n\nimport SubAccountType = ofx4js.domain.data.investment.accounts.SubAccountType;\nimport SubAccountType_fromOfx = ofx4js.domain.data.investment.accounts.SubAccountType_fromOfx;\nimport Inv401KSource = ofx4js.domain.data.investment.positions.Inv401KSource;\nimport Inv401KSource_fromOfx = ofx4js.domain.data.investment.positions.Inv401KSource_fromOfx;\nimport SecurityId = ofx4js.domain.data.seclist.SecurityId;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Transaction for reinvestment transactions.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class ReinvestIncomeTransaction extends BaseOtherInvestmentTransaction\n    implements TransactionWithSecurity {\n\n  private securityId: SecurityId;\n  private incomeType: string;\n  private total: number;\n  private subAccountSecurity: string;\n  private units: number;\n  private unitPrice: number;\n  private commission: number;\n  private taxes: number;\n  private fees: number;\n  private load: number;\n  private taxExempt: boolean;\n  private currencyCode: string;\n  private originalCurrencyInfo: OriginalCurrency;\n  private inv401kSource: string;\n\n  constructor() {\n    super(TransactionType.REINVEST_INCOME);\n  }\n\n  /**\n   * Gets the id of the security that was reinvested in. This is a required field according to the\n   * OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the security id of the security that was reinvested in\n   */\n  public getSecurityId(): SecurityId {\n    return this.securityId;\n  }\n\n  /**\n   * Sets the id of the security that was reinvested in. This is a required field according to the\n   * OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param securityId the security id of the security that was reinvested in\n   */\n  public setSecurityId(securityId: SecurityId): void {\n    this.securityId = securityId;\n  }\n\n  /**\n   * Gets the type of income. One of \"CGLONG\" (long term capital gains), \"CGSHORT\" (short term\n   * capital gains), \"DIV\" (dividend), INTEREST, or MISC. This is a required field according to the\n   * OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\" This is a required field according to the OFX spec.\n   *\n   * @return the type of income\n   */\n  public getIncomeType(): string {\n    return this.incomeType;\n  }\n\n  /**\n   * Sets the type of income. One of \"CGLONG\" (long term capital gains), \"CGSHORT\" (short term\n   * capital gains), \"DIV\" (dividend), INTEREST, or MISC. This is a required field according to the\n   * OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\" This is a required field according to the OFX spec.\n   *\n   * @param incomeType the type of income\n   */\n  public setIncomeType(incomeType: string): void {\n    this.incomeType = incomeType;\n  }\n\n  /**\n   * Gets the type of income as one of the well-known types.\n   *\n   * @return the income type or null if it's not one of the well-known types\n   */\n  public getIncomeTypeEnum(): IncomeType {\n    return IncomeType_fromOfx(this.getIncomeType());\n  }\n\n  /**\n   * Gets the total income received. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the total\n   */\n  public getTotal(): number {\n    return this.total;\n  }\n\n  /**\n   * Sets the total income received. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param total the total\n   */\n  public setTotal(total: number): void {\n    this.total = total;\n  }\n\n  /**\n   * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER). This is a\n   * required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the sub account type\n   */\n  public getSubAccountSecurity(): string {\n    return this.subAccountSecurity;\n  }\n\n  /**\n   * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER). This is a\n   * required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param subAccountSecurity the sub account type\n   */\n  public setSubAccountSecurity(subAccountSecurity: string): void {\n    this.subAccountSecurity = subAccountSecurity;\n  }\n\n  /**\n   * Gets the result of getSubAccountSecurity as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types\n   */\n  public getSubAccountSecurityEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getSubAccountSecurity());\n  }\n\n  /**\n   * Gets the number of units of the security that was reinvested in. This is a required field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the number of units purchased\n   */\n  public getUnits(): number {\n    return this.units;\n  }\n\n  /**\n   * Sets the number of units of the security that was reinvested in. This is a required field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param units the number of units purchased\n   */\n  public setUnits(units: number): void {\n    this.units = units;\n  }\n\n  /**\n   * Gets the price per commonly-quoted unit. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the per unit price\n   */\n  public getUnitPrice(): number {\n    return this.unitPrice;\n  }\n\n  /**\n   * Sets the price per commonly-quoted unit. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param unitPrice the per unit price\n   */\n  public setUnitPrice(unitPrice: number): void {\n    this.unitPrice = unitPrice;\n  }\n\n  /**\n   * Gets the transaction commission for the reinvestment. This is an optional field according to\n   * the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the transaction commision\n   */\n  public getCommission(): number {\n    return this.commission;\n  }\n\n  /**\n   * Sets the transaction commission for the reinvestment. This is an optional field according to\n   * the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param commission the transaction commision\n   */\n  public setCommission(commission: number): void {\n    this.commission = commission;\n  }\n\n  /**\n   * Gets the taxes for the reinvestment. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the transaction taxes\n   */\n  public getTaxes(): number {\n    return this.taxes;\n  }\n\n  /**\n   * Sets the taxes for the reinvestment. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param taxes the transaction taxes\n   */\n  public setTaxes(taxes: number): void {\n    this.taxes = taxes;\n  }\n\n  /**\n   * Gets the fees for the reinvestment. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the transaction fees\n   */\n  public getFees(): number {\n    return this.fees;\n  }\n\n  /**\n   * Sets the fees for the reinvestment. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param fees the transaction fees\n   */\n  public setFees(fees: number): void {\n    this.fees = fees;\n  }\n\n  /**\n   * Gets the load for the reinvestment. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the load\n   */\n  public getLoad(): number {\n    return this.load;\n  }\n\n  /**\n   * Sets the load for the reinvestment. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param load the load\n   */\n  public setLoad(load: number): void {\n    this.load = load;\n  }\n\n  /**\n   * Gets whether the income was tax exempt. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return whether the transaction was tax exempt\n   */\n  public getTaxExempt(): boolean {\n    return this.taxExempt;\n  }\n\n  /**\n   * Sets whether the income was tax exempt. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param taxExempt whether the transaction was tax exempt\n   */\n  public setTaxExempt(taxExempt: boolean): void {\n    this.taxExempt = taxExempt;\n  }\n\n  /**\n   * Gets the currency code for the transaction. Only one of currency code or original currency\n   * info should be set according to the OFX spec. If neither are set, means the default currency.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the currency code for the transaction\n   */\n  public getCurrencyCode(): string {\n    return this.currencyCode;\n  }\n\n  /**\n   * Sets the currency code for the transaction. Only one of currency code or original currency\n   * info should be set according to the OFX spec. If neither are set, means the default currency.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param currencyCode the currency code for the transaction\n   */\n  public setCurrencyCode(currencyCode: string): void {\n    this.currencyCode = currencyCode;\n    this.originalCurrencyInfo = null;\n  }\n\n  /**\n   * Gets the original currency info for the transaction.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the original currency info for the transaction.\n   */\n  public getOriginalCurrencyInfo(): OriginalCurrency {\n    return this.originalCurrencyInfo;\n  }\n\n  /**\n   * Sets the original currency info for the transaction.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param originalCurrencyInfo the original currency info for the transaction.\n   */\n  public setOriginalCurrencyInfo(originalCurrencyInfo: OriginalCurrency): void {\n    this.originalCurrencyInfo = originalCurrencyInfo;\n    this.currencyCode = null;\n  }\n\n  /**\n   * Gets the 401K source for the reinvestment. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the state withholding\n   */\n  public get401kSource(): string {\n    return this.inv401kSource;\n  }\n\n  /**\n   * Sets the 401K source for the reinvestment. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param inv401kSource the state withholding\n   */\n  public set401kSource(inv401kSource: string): void {\n    this.inv401kSource = inv401kSource;\n  }\n\n  /**\n   * Gets the 401(k) source as one of the well-known types.\n   *\n   * @return the type of close or null if it's not well known\n   */\n  public get401kSourceEnum(): Inv401KSource {\n    return Inv401KSource_fromOfx(this.get401kSource());\n  }\n}\n\nAggregate_add( ReinvestIncomeTransaction, \"REINVEST\" );\nChildAggregate_add(ReinvestIncomeTransaction, { required: true, order: 20, type: SecurityId, read: ReinvestIncomeTransaction.prototype.getSecurityId, write: ReinvestIncomeTransaction.prototype.setSecurityId });\nElement_add(ReinvestIncomeTransaction, { name: \"INCOMETYPE\", required: true, order: 30, type: String, read: ReinvestIncomeTransaction.prototype.getIncomeType, write: ReinvestIncomeTransaction.prototype.setIncomeType });\nElement_add(ReinvestIncomeTransaction, { name: \"TOTAL\", required: true, order: 40, type: Number, read: ReinvestIncomeTransaction.prototype.getTotal, write: ReinvestIncomeTransaction.prototype.setTotal });\nElement_add(ReinvestIncomeTransaction, { name: \"SUBACCTSEC\", order: 50, type: String, read: ReinvestIncomeTransaction.prototype.getSubAccountSecurity, write: ReinvestIncomeTransaction.prototype.setSubAccountSecurity });\nElement_add(ReinvestIncomeTransaction, { name: \"UNITS\", required: true, order: 60, type: Number, read: ReinvestIncomeTransaction.prototype.getUnits, write: ReinvestIncomeTransaction.prototype.setUnits });\nElement_add(ReinvestIncomeTransaction, { name: \"UNITPRICE\", required: true, order: 70, type: Number, read: ReinvestIncomeTransaction.prototype.getUnitPrice, write: ReinvestIncomeTransaction.prototype.setUnitPrice });\nElement_add(ReinvestIncomeTransaction, { name: \"COMMISSION\", order: 80, type: Number, read: ReinvestIncomeTransaction.prototype.getCommission, write: ReinvestIncomeTransaction.prototype.setCommission });\nElement_add(ReinvestIncomeTransaction, { name: \"TAXES\", order: 90, type: Number, read: ReinvestIncomeTransaction.prototype.getTaxes, write: ReinvestIncomeTransaction.prototype.setTaxes });\nElement_add(ReinvestIncomeTransaction, { name: \"FEES\", order: 100, type: Number, read: ReinvestIncomeTransaction.prototype.getFees, write: ReinvestIncomeTransaction.prototype.setFees });\nElement_add(ReinvestIncomeTransaction, { name: \"LOAD\", order: 110, type: Number, read: ReinvestIncomeTransaction.prototype.getLoad, write: ReinvestIncomeTransaction.prototype.setLoad });\nElement_add(ReinvestIncomeTransaction, { name: \"TAXEXEMPT\", order: 120, type: Boolean, read: ReinvestIncomeTransaction.prototype.getTaxExempt, write: ReinvestIncomeTransaction.prototype.setTaxExempt });\nElement_add(ReinvestIncomeTransaction, { name: \"CURRENCY\", order: 130, type: String, read: ReinvestIncomeTransaction.prototype.getCurrencyCode, write: ReinvestIncomeTransaction.prototype.setCurrencyCode });\nElement_add(ReinvestIncomeTransaction, { name: \"ORIGCURRENCY\", order: 140, type: OriginalCurrency, read: ReinvestIncomeTransaction.prototype.getOriginalCurrencyInfo, write: ReinvestIncomeTransaction.prototype.setOriginalCurrencyInfo });\nElement_add(ReinvestIncomeTransaction, { name: \"INV401KSOURCE\", order: 150, type: String, read: ReinvestIncomeTransaction.prototype.get401kSource, write: ReinvestIncomeTransaction.prototype.set401kSource });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/transactions/ReinvestIncomeTransaction.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nmodule ofx4js.domain.data.investment.transactions {\n\n/**\n * Related option transaction type.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum RelatedOptionType {\n  SPREAD,\n  STRADDLE,\n  NONE,\n  OTHER\n}\n\nexport function RelatedOptionType_fromOfx(ofxVal: string): RelatedOptionType {\n  if (\"SPREAD\" === ofxVal) {\n    return RelatedOptionType.SPREAD;\n  } else if (\"STRADDLE\" === ofxVal) {\n    return RelatedOptionType.STRADDLE;\n  } else if (\"NONE\" === ofxVal) {\n    return RelatedOptionType.NONE;\n  } else if (\"OTHER\" === ofxVal) {\n    return RelatedOptionType.OTHER;\n  } else {\n    return null;\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/transactions/RelatedOptionType.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../../../../meta/Element_add'/>\n///<reference path='../../investment/accounts/SubAccountType'/>\n///<reference path='../../investment/positions/Inv401KSource'/>\n///<reference path='../../seclist/SecurityId'/>\n///<reference path='BaseOtherInvestmentTransaction'/>\n///<reference path='TransactionWithSecurity'/>\n///<reference path='OriginalCurrency'/>\n\nmodule ofx4js.domain.data.investment.transactions {\n\nimport SubAccountType = ofx4js.domain.data.investment.accounts.SubAccountType;\nimport SubAccountType_fromOfx = ofx4js.domain.data.investment.accounts.SubAccountType_fromOfx;\nimport Inv401KSource = ofx4js.domain.data.investment.positions.Inv401KSource;\nimport Inv401KSource_fromOfx = ofx4js.domain.data.investment.positions.Inv401KSource_fromOfx;\nimport SecurityId = ofx4js.domain.data.seclist.SecurityId;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Transaction for return of capital transactions.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class ReturnOfCapitalTransaction extends BaseOtherInvestmentTransaction\n    implements TransactionWithSecurity {\n\n  private securityId: SecurityId;\n  private total: number;\n  private subAccountSecurity: string;\n  private subAccountFund: string;\n  private currencyCode: string;\n  private originalCurrencyInfo: OriginalCurrency;\n  private inv401kSource: string;\n\n  constructor() {\n    super(TransactionType.RETURN_OF_CAPITAL);\n  }\n\n  /**\n   * Gets the id of the security that capital was returned from. This is a required field according\n   * to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the security id of the security that capital was returned from\n   */\n  public getSecurityId(): SecurityId {\n    return this.securityId;\n  }\n\n  /**\n   * Sets the id of the security that capital was returned from. This is a required field according\n   * to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param securityId the security id of the security that capital was returned from\n   */\n  public setSecurityId(securityId: SecurityId): void {\n    this.securityId = securityId;\n  }\n\n  /**\n   * Gets the total amount of capital returned. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the total\n   */\n  public getTotal(): number {\n    return this.total;\n  }\n\n  /**\n   * Sets the total amount of capital returned. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param total the total\n   */\n  public setTotal(total: number): void {\n    this.total = total;\n  }\n\n  /**\n   * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER). This is a\n   * required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the sub account type\n   */\n  public getSubAccountSecurity(): string {\n    return this.subAccountSecurity;\n  }\n\n  /**\n   * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER). This is a\n   * required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param subAccountSecurity the sub account type\n   */\n  public setSubAccountSecurity(subAccountSecurity: string): void {\n    this.subAccountSecurity = subAccountSecurity;\n  }\n\n  /**\n   * Gets the result of getSubAccountSecurity as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types.\n   */\n  public getSubAccountSecurityEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getSubAccountSecurity());\n  }\n\n  /**\n   * Gets the sub account type that the transaction affects.\n   * (e.g. CASH, MARGIN, SHORT, OTHER). This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the sub account fund\n   */\n  public getSubAccountFund(): string {\n    return this.subAccountFund;\n  }\n\n  /**\n   * Sets the sub account type that the transaction affects.\n   * (e.g. CASH, MARGIN, SHORT, OTHER). This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param subAccountFund the sub account fund\n   */\n  public setSubAccountFund(subAccountFund: string): void {\n    this.subAccountFund = subAccountFund;\n  }\n\n  /**\n   * Gets the result of getSubAccountFund as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types\n   */\n  public getSubAccountFundEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getSubAccountFund());\n  }\n\n  /**\n   * Gets the currency code for the transaction. Only one of currency code or original currency\n   * info should be set according to the OFX spec. If neither are set, means the default currency.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the currency code for the transaction\n   */\n  public getCurrencyCode(): string {\n    return this.currencyCode;\n  }\n\n  /**\n   * Sets the currency code for the transaction. Only one of currency code or original currency\n   * info should be set according to the OFX spec. If neither are set, means the default currency.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param currencyCode the currency code for the transaction\n   */\n  public setCurrencyCode(currencyCode: string): void {\n    this.currencyCode = currencyCode;\n    this.originalCurrencyInfo = null;\n  }\n\n  /**\n   * Gets the original currency info for the transaction.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the currency code for the transaction.\n   */\n  public getOriginalCurrencyInfo(): OriginalCurrency {\n    return this.originalCurrencyInfo;\n  }\n\n  /**\n   * Sets the original currency info for the transaction.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param originalCurrencyInfo the currency code for the transaction.\n   */\n  public setOriginalCurrencyInfo(originalCurrencyInfo: OriginalCurrency): void {\n    this.originalCurrencyInfo = originalCurrencyInfo;\n    this.currencyCode = null;\n  }\n\n  /**\n   * Gets the 401K source for the reinvestment. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the state withholding\n   */\n  public get401kSource(): string {\n    return this.inv401kSource;\n  }\n\n  /**\n   * Sets the 401K source for the reinvestment. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param inv401kSource the state withholding\n   */\n  public set401kSource(inv401kSource: string): void {\n    this.inv401kSource = inv401kSource;\n  }\n\n  /**\n   * Gets the 401(k) source as one of the well-known types.\n   *\n   * @return the type of close or null if it's not well known.\n   */\n  public get401kSourceEnum(): Inv401KSource {\n    return Inv401KSource_fromOfx(this.get401kSource());\n  }\n}\n\nAggregate_add( ReturnOfCapitalTransaction, \"RETOFCAP\" );\nChildAggregate_add(ReturnOfCapitalTransaction, { required: true, order: 20, type: SecurityId, read: ReturnOfCapitalTransaction.prototype.getSecurityId, write: ReturnOfCapitalTransaction.prototype.setSecurityId });\nElement_add(ReturnOfCapitalTransaction, { name: \"TOTAL\", required: true, order: 40, type: Number, read: ReturnOfCapitalTransaction.prototype.getTotal, write: ReturnOfCapitalTransaction.prototype.setTotal });\nElement_add(ReturnOfCapitalTransaction, { name: \"SUBACCTSEC\", order: 50, type: String, read: ReturnOfCapitalTransaction.prototype.getSubAccountSecurity, write: ReturnOfCapitalTransaction.prototype.setSubAccountSecurity });\nElement_add(ReturnOfCapitalTransaction, { name: \"SUBACCTFUND\", order: 140, type: String, read: ReturnOfCapitalTransaction.prototype.getSubAccountFund, write: ReturnOfCapitalTransaction.prototype.setSubAccountFund });\nElement_add(ReturnOfCapitalTransaction, { name: \"CURRENCY\", order: 110, type: String, read: ReturnOfCapitalTransaction.prototype.getCurrencyCode, write: ReturnOfCapitalTransaction.prototype.setCurrencyCode });\nElement_add(ReturnOfCapitalTransaction, { name: \"ORIGCURRENCY\", order: 120, type: OriginalCurrency, read: ReturnOfCapitalTransaction.prototype.getOriginalCurrencyInfo, write: ReturnOfCapitalTransaction.prototype.setOriginalCurrencyInfo });\nElement_add(ReturnOfCapitalTransaction, { name: \"INV401KSOURCE\", order: 180, type: String, read: ReturnOfCapitalTransaction.prototype.get401kSource, write: ReturnOfCapitalTransaction.prototype.set401kSource });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/transactions/ReturnOfCapitalTransaction.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule ofx4js.domain.data.investment.transactions {\n\n/**\n * Reason debt was sold.\n * @see \"Section 13.9.2.4.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum SellDebtReason {\n  CALL,\n  SELL,\n  MATURITY\n}\n\nexport function SellDebtReason_fromOfx(ofxVal: string): SellDebtReason {\n  if (\"CALL\" === ofxVal) {\n    return SellDebtReason.CALL;\n  } else if (\"SELL\" === ofxVal) {\n    return SellDebtReason.SELL;\n  } else if (\"MATURITY\" === ofxVal) {\n    return SellDebtReason.MATURITY;\n  } else {\n    return null;\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/transactions/SellDebtReason.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../../../../meta/Element_add'/>\n///<reference path='BaseSellInvestmentTransaction'/>\n///<reference path='SellDebtReason'/>\n\nmodule ofx4js.domain.data.investment.transactions {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Transaction for selling debt (i.e. bonds, CDs, etc.,).\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class SellDebtTransaction extends BaseSellInvestmentTransaction {\n\n  private sellReason: string;\n  private accruedInterest: number;\n\n  constructor() {\n    super(TransactionType.SELL_DEBT);\n  }\n\n  /**\n   * Gets the reason for the sale. One of \"CALL\" (the debt was called), \"SELL\" (the debt was sold),\n   * \"MATURITY\" (the debt reached maturity).\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return The reason for the sale\n   */\n  public getSellReason(): string {\n    return this.sellReason;\n  }\n\n  /**\n   * Sets the reason for the sale. One of \"CALL\" (the debt was called), \"SELL\" (the debt was sold),\n   * \"MATURITY\" (the debt reached maturity).\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param sellReason The reason for the sale\n   */\n  public setSellReason(sellReason: string): void {\n    this.sellReason = sellReason;\n  }\n\n  /**\n   * Gets the sell reason as one of the well-known types.\n   *\n   * @return the sell reason or null if it's not well known\n   */\n  public getSellReasonEnum(): SellDebtReason {\n    return SellDebtReason_fromOfx(this.getSellReason());\n  }\n\n  /**\n   * Gets the amount of accrued interest on the debt. This is an optional field according to the\n   * OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the amount of accrued interest\n   */\n  public getAccruedInterest(): number {\n    return this.accruedInterest;\n  }\n\n  /**\n   * Sets the amount of accrued interest on the debt. This is an optional field according to the\n   * OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param accruedInterest the amount of accrued interest\n   */\n  public setAccruedInterest(accruedInterest: number): void {\n    this.accruedInterest = accruedInterest;\n  }\n}\n\nAggregate_add( SellDebtTransaction, \"SELLDEBT\" );\nElement_add(SellDebtTransaction, { name: \"SELLREASON\", order: 30, type: String, read: SellDebtTransaction.prototype.getSellReason, write: SellDebtTransaction.prototype.setSellReason });\nElement_add(SellDebtTransaction, { name: \"ACCRDINT\", order: 40, type: Number, read: SellDebtTransaction.prototype.getAccruedInterest, write: SellDebtTransaction.prototype.setAccruedInterest });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/transactions/SellDebtTransaction.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule ofx4js.domain.data.investment.transactions {\n\n/**\n * Type of sale for stocks and mutual funds.\n *\n * @author Jon Perlow\n */\nexport enum SellType {\n  SELL,\n  SELL_SHORT\n}\n\nexport function SellType_fromOfx(ofxVal: string): SellType {\n  if (\"SELL\" === ofxVal) {\n    return SellType.SELL;\n  } else if (\"SELLSHORT\" === ofxVal) {\n    return SellType.SELL_SHORT;\n  } else {\n    return null;\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/transactions/SellType.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/Element_add'/>\n///<reference path='BaseSellInvestmentTransaction'/>\n///<reference path='SellType'/>\n\nmodule ofx4js.domain.data.investment.transactions {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Transaction for selling mutual fund.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class SellMutualFundTransaction extends BaseSellInvestmentTransaction {\n\n  private sellType: string;\n  private averageCostBasis: number;\n  private relatedTransactionId: string;\n\n  constructor() {\n    super(TransactionType.SELL_MUTUAL_FUND);\n  }\n\n  /**\n   * Gets the type of sale. One of \"SELL\" or \"SELLSHORT\".\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return The type of sale\n   */\n  public getSellType(): string {\n    return this.sellType;\n  }\n\n  /**\n   * Sets the type of sale. One of \"SELL\" or \"SELLSHORT\".\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param sellType The type of sale\n   */\n  public setSellType(sellType: string): void {\n    this.sellType = sellType;\n  }\n\n  /**\n   * Gets the sell type as one of the well-known types.\n   *\n   * @return the type of sale or null if it's not known.\n   */\n  public getSellTypeEnum(): SellType {\n    return SellType_fromOfx(this.sellType);\n  }\n\n  /**\n   * Gets the average cost basis of the sale.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return The average cost basis of the sale\n   */\n  public getAverageCostBasis(): number {\n    return this.averageCostBasis;\n  }\n\n  /**\n   * Sets the average cost basis of the sale.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param averageCostBasis The average cost basis of the sale\n   */\n  public setAverageCostBasis(averageCostBasis: number): void {\n    this.averageCostBasis = averageCostBasis;\n  }\n\n  /**\n   * Gets any related transaction id for a mutual fund sale (e.g. for a mutual fund exchange).\n   * This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the related transaction id\n   */\n  public getRelatedTransactionId(): string {\n    return this.relatedTransactionId;\n  }\n\n  /**\n   * Sets any related transaction id for a mutual fund sale (e.g. for a mutual fund exchange).\n   * This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param relatedTransactionId the related transaction id\n   */\n  public setRelatedTransactionId(relatedTransactionId: string): void {\n    this.relatedTransactionId = relatedTransactionId;\n  }\n}\n\nAggregate_add( SellMutualFundTransaction, \"SELLMF\" );\nElement_add(SellMutualFundTransaction, { name: \"SELLTYPE\", order: 20, type: String, read: SellMutualFundTransaction.prototype.getSellType, write: SellMutualFundTransaction.prototype.setSellType });\nElement_add(SellMutualFundTransaction, { name: \"AVGCOSTBASIS\", order: 30, type: Number, read: SellMutualFundTransaction.prototype.getAverageCostBasis, write: SellMutualFundTransaction.prototype.setAverageCostBasis });\nElement_add(SellMutualFundTransaction, { name: \"RELFITID\", order: 40, type: String, read: SellMutualFundTransaction.prototype.getRelatedTransactionId, write: SellMutualFundTransaction.prototype.setRelatedTransactionId });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/transactions/SellMutualFundTransaction.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../../../../meta/Element_add'/>\n///<reference path='../../investment/positions/ShortOptionSecurity'/>\n///<reference path='BaseSellInvestmentTransaction'/>\n///<reference path='OptionSellType'/>\n///<reference path='RelatedOptionType'/>\n\nmodule ofx4js.domain.data.investment.transactions {\n\nimport ShortOptionSecurity = ofx4js.domain.data.investment.positions.ShortOptionSecurity;\nimport ShortOptionSecurity_fromOfx = ofx4js.domain.data.investment.positions.ShortOptionSecurity_fromOfx;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Transaction for selling options.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class SellOptionTransaction extends BaseSellInvestmentTransaction {\n\n  private optionSellType: string;\n  private sharesPerContact: number;\n  private relatedTransactionId: string;\n  private relatedType: string;\n  private secured: string;\n\n  constructor() {\n    super(TransactionType.SELL_OPTION);\n  }\n\n  /**\n   * Gets the type of option sale (i.e. \"SELLTOCLOSE\" or \"SELLTOOPEN\"). This is a required field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the option sell type\n   */\n  public getOptionSellType(): string {\n    return this.optionSellType;\n  }\n\n  /**\n   * Sets the type of option sale (i.e. \"SELLTOCLOSE\" or \"SELLTOOPEN\"). This is a required field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param optionSellType the option sell type\n   */\n  public setOptionSellType(optionSellType: string): void {\n    this.optionSellType = optionSellType;\n  }\n\n  /**\n   * Gets the option sell type as one of the well-known types.\n   *\n   * @return the type of sale or null if it's not known.\n   */\n  public getOptionSellTypeEnum(): OptionSellType {\n    return OptionSellType_fromOfx(this.optionSellType);\n  }\n\n  /**\n   * Gets the number of shares per contact. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the number of shares per contact\n   */\n  public getSharesPerContact(): number {\n    return this.sharesPerContact;\n  }\n\n  /**\n   * Sets the number of shares per contact. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param sharesPerContact the number of shares per contact\n   */\n  public setSharesPerContact(sharesPerContact: number): void {\n    this.sharesPerContact = sharesPerContact;\n  }\n\n  /**\n   * Gets a related transaction for the option sale for complex option transactions. This\n   * is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return The related transaction id\n   */\n  public getRelatedTransactionId(): string {\n    return this.relatedTransactionId;\n  }\n\n  /**\n   * Sets a related transaction for the option sale for complex option transactions. This\n   * is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param relatedTransactionId The related transaction id\n   */\n  public setRelatedTransactionId(relatedTransactionId: string): void {\n    this.relatedTransactionId = relatedTransactionId;\n  }\n\n  /**\n   * Gets the type for the related transaction. One of \"SPREAD\", \"STRADDLE\", \"NONE\", \"OTHER\". This\n   * is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return The related tansaction type\n   */\n  public getRelatedType(): string {\n    return this.relatedType;\n  }\n\n  /**\n   * Sets the type for the related transaction. One of \"SPREAD\", \"STRADDLE\", \"NONE\", \"OTHER\". This\n   * is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param relatedType The related tansaction type\n   */\n  public setRelatedType(relatedType: string): void {\n    this.relatedType = relatedType;\n  }\n\n  /**\n   * Gets the related transaction as one of the well-known types.\n   *\n   * @return the related tansaction type or null if it's not well known\n   */\n  public getRelatedTypeEnum(): RelatedOptionType {\n    return RelatedOptionType_fromOfx(this.getRelatedType());\n  }\n\n  /**\n   * Gets how the option sale is secured. One of \"NAKED\" or \"COVERED\". This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return how the option sale is secured\n   */\n  public getSecured(): string {\n    return this.secured;\n  }\n\n  /**\n   * Sets how the option sale is secured. One of \"NAKED\" or \"COVERED\". This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param secured how the option sale is secured\n   */\n  public setSecured(secured: string): void {\n    this.secured = secured;\n  }\n\n  /**\n   * Gets how the option sale is secured as one of the well-known types.\n   *\n   * @return the type indicating how the option is secured or null if it's not well known.\n   */\n  public getSecuredEnum(): ShortOptionSecurity {\n    return ShortOptionSecurity_fromOfx(this.getSecured());\n  }\n}\n\nAggregate_add( SellOptionTransaction, \"SELLOPT\" );\nElement_add(SellOptionTransaction, { name: \"OPTSELLTYPE\", required: true, order: 20, type: String, read: SellOptionTransaction.prototype.getOptionSellType, write: SellOptionTransaction.prototype.setOptionSellType });\nElement_add(SellOptionTransaction, { name: \"SHPERCTRCT\", required: true, order: 30, type: Number, read: SellOptionTransaction.prototype.getSharesPerContact, write: SellOptionTransaction.prototype.setSharesPerContact });\nElement_add(SellOptionTransaction, { name: \"RELFITID\", order: 40, type: String, read: SellOptionTransaction.prototype.getRelatedTransactionId, write: SellOptionTransaction.prototype.setRelatedTransactionId });\nElement_add(SellOptionTransaction, { name: \"RELTYPE\", order: 50, type: String, read: SellOptionTransaction.prototype.getRelatedType, write: SellOptionTransaction.prototype.setRelatedType });\nElement_add(SellOptionTransaction, { name: \"SECURED\", order: 60, type: String, read: SellOptionTransaction.prototype.getSecured, write: SellOptionTransaction.prototype.setSecured });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/transactions/SellOptionTransaction.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='BaseSellInvestmentTransaction'/>\n\nmodule ofx4js.domain.data.investment.transactions {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * Transaction for buying other types of securities.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class SellOtherTransaction extends BaseSellInvestmentTransaction {\n\n  constructor() {\n    super(TransactionType.SELL_OTHER);\n  }\n}\n\nAggregate_add( SellOtherTransaction, \"SELLOTHER\" );\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/transactions/SellOtherTransaction.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../../../../meta/Element_add'/>\n///<reference path='BaseSellInvestmentTransaction'/>\n///<reference path='SellType'/>\n\nmodule ofx4js.domain.data.investment.transactions {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Transaction for selling stock.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class SellStockTransaction extends BaseSellInvestmentTransaction {\n\n  private sellType: string;\n\n  constructor() {\n    super(TransactionType.SELL_STOCK);\n  }\n\n  /**\n   * Gets the type of stock sale (i.e. \"SELL\" or \"SELLSHORT\"). This is a required field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the sell type\n   */\n  public getSellType(): string {\n    return this.sellType;\n  }\n\n  /**\n   * Sets the type of stock sale (i.e. \"SELL\" or \"SELLSHORT\"). This is a required field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param sellType the sell type\n   */\n  public setSellType(sellType: string): void {\n    this.sellType = sellType;\n  }\n\n  /**\n   * Gets the sell type as one of the well-known types.\n   *\n   * @return the type of sale or null if it's not known\n   */\n  public getSellTypeEnum(): SellType {\n    return SellType_fromOfx(this.sellType);\n  }\n}\n\nAggregate_add( SellStockTransaction, \"SELLSTOCK\" );\nElement_add(SellStockTransaction, { name: \"SELLTYPE\", required: true, order: 20, type: String, read: SellStockTransaction.prototype.getSellType, write: SellStockTransaction.prototype.setSellType });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/transactions/SellStockTransaction.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../../../../meta/Element_add'/>\n///<reference path='../../investment/accounts/SubAccountType'/>\n///<reference path='../../investment/positions/Inv401KSource'/>\n///<reference path='../../seclist/SecurityId'/>\n///<reference path='BaseOtherInvestmentTransaction'/>\n///<reference path='OriginalCurrency'/>\n\nmodule ofx4js.domain.data.investment.transactions {\n\nimport SubAccountType = ofx4js.domain.data.investment.accounts.SubAccountType;\nimport SubAccountType_fromOfx = ofx4js.domain.data.investment.accounts.SubAccountType_fromOfx;\nimport Inv401KSource = ofx4js.domain.data.investment.positions.Inv401KSource;\nimport Inv401KSource_fromOfx = ofx4js.domain.data.investment.positions.Inv401KSource_fromOfx;\nimport SecurityId = ofx4js.domain.data.seclist.SecurityId;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Transaction for a stock split.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class SplitTransaction extends BaseOtherInvestmentTransaction {\n  private securityId: SecurityId;\n  private subAccountSecurity: string;\n  private oldUnits: number;\n  private newUnits: number;\n  private numerator: number;\n  private denominator: number;\n  private currencyCode: string;\n  private originalCurrencyInfo: OriginalCurrency;\n  private cashForFractionalUnits: number;\n  private subAccountFund: string;\n  private inv401kSource: string;\n\n  constructor() {\n    super(TransactionType.SPLIT);\n  }\n\n  /**\n   * Gets the id of the security for the split. This is a required field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the security id of the security for the expsense\n   */\n  public getSecurityId(): SecurityId {\n    return this.securityId;\n  }\n\n  /**\n   * Sets the id of the security for the split. This is a required field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param securityId the security id of the security for the expsense\n   */\n  public setSecurityId(securityId: SecurityId): void {\n    this.securityId = securityId;\n  }\n\n  /**\n   * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER). This is a\n   * required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the sub account type\n   */\n  public getSubAccountSecurity(): string {\n    return this.subAccountSecurity;\n  }\n\n  /**\n   * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER). This is a\n   * required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param subAccountSecurity the sub account type\n   */\n  public setSubAccountSecurity(subAccountSecurity: string): void {\n    this.subAccountSecurity = subAccountSecurity;\n  }\n\n  /**\n   * Gets the result of getSubAccountSecurity as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types.\n   */\n  public getSubAccountSecurityEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getSubAccountSecurity());\n  }\n\n  /**\n   * Gets the old number of units for the split. This is a required field according to the OFX\n   * spec.\n   *\n   * @return the old number of units.\n   */\n  public getOldUnits(): number {\n    return this.oldUnits;\n  }\n\n  /**\n   * Sets the old number of units for the split. This is a  equired field according to the OFX\n   * spec.\n   *\n   * @param oldUnits the old number of units.\n   */\n  public setOldUnits(oldUnits: number): void {\n    this.oldUnits = oldUnits;\n  }\n\n  /**\n   * Gets the new number of units for the split. This is a required field according to the OFX\n   * spec.\n   *\n   * @return the new number of units.\n   */\n  public getNewUnits(): number {\n    return this.newUnits;\n  }\n\n  /**\n   * Sets the new number of units for the split. This is a required field according to the OFX\n   * spec.\n   *\n   * @param newUnits the new number of units.\n   */\n  public setNewUnits(newUnits: number): void {\n    this.newUnits = newUnits;\n  }\n\n  /**\n   * Gets the numerator for the split ratio. This is a required field according to the OFX spec.\n   *\n   * @return the numerator for the split ratio\n   */\n  public getNumerator(): number {\n    return this.numerator;\n  }\n\n  /**\n   * Sets the numerator for the split ratio. This is a required field according to the OFX spec.\n   *\n   * @param numerator the numerator for the split ratio\n   */\n  public setNumerator(numerator: number): void {\n    this.numerator = numerator;\n  }\n\n  /**\n   * Gets the denominator for the split ratio. This is a required field according to the OFX spec.\n   *\n   * @return the numerator for the split ratio\n   */\n  public getDenominator(): number {\n    return this.denominator;\n  }\n\n  /**\n   * Sets the denominator for the split ratio. This is a required field according to the OFX spec.\n   *\n   * @param denominator the numerator for the split ratio\n   */\n  public setDenominator(denominator: number): void {\n    this.denominator = denominator;\n  }\n\n  /**\n   * Gets the currency code for the transaction. Only one of currency code or original currency\n   * code should be set according to the OFX spec. If neither are set, means the default currency.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the currency code for the transaction\n   */\n  public getCurrencyCode(): string {\n    return this.currencyCode;\n  }\n\n  /**\n   * sets the currency code for the transaction. Only one of currency code or original currency\n   * code should be set according to the OFX spec. If neither are set, means the default currency.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the currency code for the transaction\n   */\n  public setCurrencyCode(currencyCode: string): void {\n    this.currencyCode = currencyCode;\n    this.originalCurrencyInfo = null;\n  }\n\n  /**\n   * Gets the original currency info for the transaction.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the original currency info for the transaction\n   */\n  public getOriginalCurrencyInfo(): OriginalCurrency {\n    return this.originalCurrencyInfo;\n  }\n\n  /**\n   * Sets the original currency info for the transaction.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the original currency info for the transaction\n   */\n  public setOriginalCurrencyInfo(originalCurrencyInfo: OriginalCurrency): void {\n    this.originalCurrencyInfo = originalCurrencyInfo;\n    this.currencyCode = null;\n  }\n\n  /**\n   * Gets the cash for fractional units.\n   *\n   * @return the cash for fractional units\n   */\n  public getCashForFractionalUnits(): number {\n    return this.cashForFractionalUnits;\n  }\n\n  /**\n   * Sets the cash for fractional units.\n   *\n   * @param cashForFractionalUnits the cash for fractional units\n   */\n  public setCashForFractionalUnits(cashForFractionalUnits: number): void {\n    this.cashForFractionalUnits = cashForFractionalUnits;\n  }\n\n  /**\n   * Gets the sub account type for the fund. (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the sub account fund\n   */\n  public getSubAccountFund(): string {\n    return this.subAccountFund;\n  }\n\n  /**\n   * Sets the sub account type for the fund. (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param subAccountFund the sub account fund\n   */\n  public setSubAccountFund(subAccountFund: string): void {\n    this.subAccountFund = subAccountFund;\n  }\n\n  /**\n   * Gets the result of getSubAccountFund as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types\n   */\n  public getSubAccountFundEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getSubAccountFund());\n  }\n\n  /**\n   * Gets the 401K source for the transaction. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the 401k source\n   */\n  public get401kSource(): string {\n    return this.inv401kSource;\n  }\n\n  /**\n   * Sets the 401K source for the transaction. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param inv401kSource the 401k source\n   */\n  public set401kSource(inv401kSource: string): void {\n    this.inv401kSource = inv401kSource;\n  }\n\n  /**\n   * Gets the 401k source as one of the well-known types.\n   *\n   * @return the 401k source or null if its not one of the well-known types\n   */\n  public get401kSourceEnum(): Inv401KSource {\n    return Inv401KSource_fromOfx(this.get401kSource());\n  }\n}\n\nAggregate_add( SplitTransaction, \"SPLIT\" );\nChildAggregate_add(SplitTransaction, { required: true, order: 20, type: SecurityId, read: SplitTransaction.prototype.getSecurityId, write: SplitTransaction.prototype.setSecurityId });\nElement_add(SplitTransaction, { name: \"SUBACCTSEC\", order: 30, type: String, read: SplitTransaction.prototype.getSubAccountSecurity, write: SplitTransaction.prototype.setSubAccountSecurity });\nElement_add(SplitTransaction, { name: \"OLDUNITS\", order: 40, type: Number, read: SplitTransaction.prototype.getOldUnits, write: SplitTransaction.prototype.setOldUnits });\nElement_add(SplitTransaction, { name: \"NEWUNITS\", order: 50, type: Number, read: SplitTransaction.prototype.getNewUnits, write: SplitTransaction.prototype.setNewUnits });\nElement_add(SplitTransaction, { name: \"NUMERATOR\", order: 60, type: Number, read: SplitTransaction.prototype.getNumerator, write: SplitTransaction.prototype.setNumerator });\nElement_add(SplitTransaction, { name: \"DENOMINATOR\", order: 70, type: Number, read: SplitTransaction.prototype.getDenominator, write: SplitTransaction.prototype.setDenominator });\nElement_add(SplitTransaction, { name: \"CURRENCY\", order: 80, type: String, read: SplitTransaction.prototype.getCurrencyCode, write: SplitTransaction.prototype.setCurrencyCode });\nElement_add(SplitTransaction, { name: \"ORIGCURRENCY\", order: 90, type: OriginalCurrency, read: SplitTransaction.prototype.getOriginalCurrencyInfo, write: SplitTransaction.prototype.setOriginalCurrencyInfo });\nElement_add(SplitTransaction, { name: \"FRACCASH\", order: 100, type: Number, read: SplitTransaction.prototype.getCashForFractionalUnits, write: SplitTransaction.prototype.setCashForFractionalUnits });\nElement_add(SplitTransaction, { name: \"SUBACCTFUND\", order: 110, type: String, read: SplitTransaction.prototype.getSubAccountFund, write: SplitTransaction.prototype.setSubAccountFund });\nElement_add(SplitTransaction, { name: \"INV401KSOURCE\", order: 120, type: String, read: SplitTransaction.prototype.get401kSource, write: SplitTransaction.prototype.set401kSource });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/transactions/SplitTransaction.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule ofx4js.domain.data.investment.transactions {\n\n/**\n * Type of transfer.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum TransferAction {\n  IN,\n  OUT\n}\n\nexport function TransferAction_fromOfx(ofxVal: string): TransferAction {\n  if (\"IN\" === ofxVal) {\n    return TransferAction.IN;\n  } else if (\"OUT\" === ofxVal) {\n    return TransferAction.OUT;\n  } else {\n    return null;\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/transactions/TransferAction.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../../../../meta/Element_add'/>\n///<reference path='../../investment/accounts/SubAccountType'/>\n///<reference path='../../investment/positions/Inv401KSource'/>\n///<reference path='../../investment/positions/PositionType'/>\n///<reference path='../../seclist/SecurityId'/>\n///<reference path='BaseOtherInvestmentTransaction'/>\n///<reference path='TransferAction'/>\n\nmodule ofx4js.domain.data.investment.transactions {\n\nimport SubAccountType = ofx4js.domain.data.investment.accounts.SubAccountType;\nimport SubAccountType_fromOfx = ofx4js.domain.data.investment.accounts.SubAccountType_fromOfx;\nimport Inv401KSource = ofx4js.domain.data.investment.positions.Inv401KSource;\nimport Inv401KSource_fromOfx = ofx4js.domain.data.investment.positions.Inv401KSource_fromOfx;\nimport PositionType = ofx4js.domain.data.investment.positions.PositionType;\nimport PositionType_fromOfx = ofx4js.domain.data.investment.positions.PositionType_fromOfx;\nimport SecurityId = ofx4js.domain.data.seclist.SecurityId;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Transaction for transfers.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class TransferInvestmentTransaction extends BaseOtherInvestmentTransaction {\n\n  private securityId: SecurityId;\n  private subAccountSecurity: string;\n  private units: number;\n  private transferAction: string;\n  private positionType: string;\n  private averageCostBasis: number;\n  private unitPrice: number;\n  private purchaseDate: Date;\n  private inv401kSource: string;\n\n  // TODO (jonp) -- INVACCTFROM\n\n  constructor() {\n    super(TransactionType.TRANSFER);\n  }\n\n  /**\n   * Gets the id of the security that was transferred. This is a required field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the security id of the security that was transferred\n   */\n  public getSecurityId(): SecurityId {\n    return this.securityId;\n  }\n\n  /**\n   * Sets the id of the security that was transferred. This is a required field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param securityId the security id of the security that was transferred\n   */\n  public setSecurityId(securityId: SecurityId): void {\n    this.securityId = securityId;\n  }\n\n  /**\n    * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n    * @see \"Section 13.9.2.4.3, OFX Spec\"\n    *\n    * @return the sub account type\n    */\n  public getSubAccountSecurity(): string {\n     return this.subAccountSecurity;\n   }\n\n  /**\n    * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n    * @see \"Section 13.9.2.4.3, OFX Spec\"\n    *\n    * @param subAccountSecurity the sub account type\n    */\n  public setSubAccountSecurity(subAccountSecurity: string): void {\n     this.subAccountSecurity = subAccountSecurity;\n   }\n\n  /**\n   * Gets the result of getSubAccountSecurity as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types.\n   */\n  public getSubAccountSecurityEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getSubAccountSecurity());\n  }\n\n  /**\n   * Gets the number of units of the security that was transferred. For security-based actions other\n   * than stock splits, this is the quantity bought. For stocks, mutual funds, and others, this\n   * is the number of shares. For bonds, this is the face value. For options, this is the number of\n   * contacts. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the number of units transferred\n   */\n  public getUnits(): number {\n    return this.units;\n  }\n\n  /**\n   * Sets the number of units of the security that was transferred. For security-based actions other\n   * than stock splits, this is the quantity bought. For stocks, mutual funds, and others, this\n   * is the number of shares. For bonds, this is the face value. For options, this is the number of\n   * contacts. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param units the number of units transferred\n   */\n  public setUnits(units: number): void {\n    this.units = units;\n  }\n\n  /**\n   * Gets the type of transfer. One of \"IN\" or \"OUT\". This is a required field according to the\n   * OFX spec.\n   *\n   * @return the type of transfer\n   */\n  public getTransferAction(): string {\n    return this.transferAction;\n  }\n\n  /**\n   * Sets the type of transfer. One of \"IN\" or \"OUT\". This is a required field according to the\n   * OFX spec.\n   *\n   * @param transferAction the type of transfer\n   */\n  public setTransferAction(transferAction: string): void {\n    this.transferAction = transferAction;\n  }\n\n  /**\n   * Gets the transfer action as one of the well-known types.\n   *\n   * @return the type of transfer or null if it's not well known\n   */\n  public getTransferActionEnum(): TransferAction {\n    return TransferAction_fromOfx(this.getTransferAction());\n  }\n\n  /**\n   * Gets the type of position. One of \"LONG\" or \"SHORT\". This is a required field according to the\n   * OFX spec.\n   *\n   * @return the position type\n   */\n  public getPositionType(): string {\n    return this.positionType;\n  }\n\n  /**\n   * Sets the type of position. One of \"LONG\" or \"SHORT\". This is a required field according to the\n   * OFX spec.\n   *\n   * @param positionType the position type\n   */\n  public setPositionType(positionType: string): void {\n    this.positionType = positionType;\n  }\n\n  /**\n   * Gets the position type as one of the well-known types.\n   *\n   * @return the position type or null if it's not well known\n   */\n  public getPositionTypeEnum(): PositionType {\n    return PositionType_fromOfx(this.getPositionType());\n  }\n\n  /**\n   * Gets the average cost basis for the securities being transfered. This is an optional field\n   * according to the ofx spec.\n   *\n   * @return the average cost basis\n   */\n  public getAverageCostBasis(): number {\n    return this.averageCostBasis;\n  }\n\n  /**\n   * Sets the average cost basis for the securities being transfered. This is an optional field\n   * according to the ofx spec.\n   *\n   * @param averageCostBasis the average cost basis\n   */\n  public setAverageCostBasis(averageCostBasis: number): void {\n    this.averageCostBasis = averageCostBasis;\n  }\n\n  /**\n   * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n   * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n   * per contact) price. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the per unit price\n   */\n  public getUnitPrice(): number {\n    return this.unitPrice;\n  }\n\n  /**\n   * Sets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n   * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n   * per contact) price. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param unitPrice the per unit price\n   */\n  public setUnitPrice(unitPrice: number): void {\n    this.unitPrice = unitPrice;\n  }\n\n  /**\n   * Gets the original date of purchase for the securities. This is an optional field according to\n   * the ofx spec.\n   *\n   * @return the original date of purchase\n   */\n  public getPurchaseDate(): Date {\n    return this.purchaseDate;\n  }\n\n  /**\n   * Sets the original date of purchase for the securities. This is an optional field according to\n   * the ofx spec.\n   *\n   * @param purchaseDate the original date of purchase\n   */\n  public setPurchaseDate(purchaseDate: Date): void {\n    this.purchaseDate = purchaseDate;\n  }\n\n  /**\n   * Gets the 401K source for the transfer. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the state withholding\n   */\n  public get401kSource(): string {\n    return this.inv401kSource;\n  }\n\n  /**\n   * Sets the 401K source for the transfer. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param inv401kSource the state withholding\n   */\n  public set401kSource(inv401kSource: string): void {\n    this.inv401kSource = inv401kSource;\n  }\n\n  /**\n   * Gets the 401(k) source as one of the well-known types.\n   *\n   * @return the type of close or null if it's not well known.\n   */\n  public get401kSourceEnum(): Inv401KSource {\n    return Inv401KSource_fromOfx(this.get401kSource());\n  }\n}\n\nAggregate_add(TransferInvestmentTransaction, \"TRANSFER\");\nChildAggregate_add(TransferInvestmentTransaction, { required: true, order: 20, type: SecurityId, read: TransferInvestmentTransaction.prototype.getSecurityId, write: TransferInvestmentTransaction.prototype.setSecurityId });\nElement_add(TransferInvestmentTransaction, { name: \"SUBACCTSEC\", order: 30, type: String, read: TransferInvestmentTransaction.prototype.getSubAccountSecurity, write: TransferInvestmentTransaction.prototype.setSubAccountSecurity });\nElement_add(TransferInvestmentTransaction, { name: \"UNITS\", required: true, order: 40, type: Number, read: TransferInvestmentTransaction.prototype.getUnits, write: TransferInvestmentTransaction.prototype.setUnits });\nElement_add(TransferInvestmentTransaction, { name: \"TFERACTION\", required: true, order: 50, type: String, read: TransferInvestmentTransaction.prototype.getTransferAction, write: TransferInvestmentTransaction.prototype.setTransferAction });\nElement_add(TransferInvestmentTransaction, { name: \"POSTYPE\", required: true, order: 60, type: String, read: TransferInvestmentTransaction.prototype.getPositionType, write: TransferInvestmentTransaction.prototype.setPositionType });\nElement_add(TransferInvestmentTransaction, { name: \"AVGCOSTBASIS\", order: 70, type: Number, read: TransferInvestmentTransaction.prototype.getAverageCostBasis, write: TransferInvestmentTransaction.prototype.setAverageCostBasis });\nElement_add(TransferInvestmentTransaction, { name: \"UNITPRICE\", required: true, order: 80, type: Number, read: TransferInvestmentTransaction.prototype.getUnitPrice, write: TransferInvestmentTransaction.prototype.setUnitPrice });\nElement_add(TransferInvestmentTransaction, { name: \"DTPURCHASE\", order: 90, type: Date, read: TransferInvestmentTransaction.prototype.getPurchaseDate, write: TransferInvestmentTransaction.prototype.setPurchaseDate });\nElement_add(TransferInvestmentTransaction, { name: \"INV401KSOURCE\", order: 100, type: String, read: TransferInvestmentTransaction.prototype.get401kSource, write: TransferInvestmentTransaction.prototype.set401kSource });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/investment/transactions/TransferInvestmentTransaction.ts","/*\n * Copyright 2012 TheStash\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../../meta/Aggregate_add'/>\n///<reference path='../../../../../meta/Element_add'/>\n\nmodule ofx4js.domain.data.profile.info.banking {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Email Profile\n * @author Scott Priddy\n * @see \"Section 11.13.2.3 OFX Spec\"\n */\nexport class EmailProfile {\n\n  private canEmail: boolean;\n  private canNotify: boolean;\n\n  public getCanEmail(): boolean {\n    return this.canEmail;\n  }\n\n  public setCanEmail(canEmail: boolean): void {\n    this.canEmail = canEmail;\n  }\n\n  public getCanNotify(): boolean {\n    return this.canNotify;\n  }\n\n  public setCanNotify(canNotify: boolean): void {\n    this.canNotify = canNotify;\n  }\n}\n\nAggregate_add( EmailProfile, \"EMAILPROF\");\nElement_add(EmailProfile, { name: \"CANEMAIL\", required: true, order: 10, type: Boolean, read: EmailProfile.prototype.getCanEmail, write: EmailProfile.prototype.setCanEmail });\nElement_add(EmailProfile, { name: \"CANNOTIFY\", required: true, order: 20, type: Boolean, read: EmailProfile.prototype.getCanNotify, write: EmailProfile.prototype.setCanNotify });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/info/banking/EmailProfile.ts","/*\n * Copyright 2012 TheStash\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../../meta/Aggregate_add'/>\n///<reference path='../../../../../meta/Element_add'/>\n///<reference path='../../../common/ProcessorDayOff'/>\n\nmodule ofx4js.domain.data.profile.info.banking {\n\nimport ProcessorDayOff = ofx4js.domain.data.common.ProcessorDayOff;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Stop Check Profile\n * @author Scott Priddy\n * @see \"Section 11.13.2.3 OFX Spec\"\n */\nexport class StopCheckProfile {\n\n  private processorDaysOff: Array<ProcessorDayOff>;\n  private processEndTime: string;\n  private canUseRange: boolean;\n  private canUseDescription: boolean;\n  private stopCheckFee: number;\n\n  /**\n   * Days of week that no processing occurs: MONDAY, TUESDAY, WEDNESDAY, THURSDAY,\n   * FRIDAY, SATURDAY, or SUNDAY. 0 or more <PROCDAYSOFF> can be sent.\n   * @return List of days during the week that no processing occurs.\n   */\n  public getProcessorDaysOff(): Array<ProcessorDayOff> {\n    return this.processorDaysOff;\n  }\n\n  public setProcessorDaysOff(processorDaysOff: Array<ProcessorDayOff>): void {\n    this.processorDaysOff = processorDaysOff;\n  }\n\n  /**\n   * Gets time of day that day's processing ends.\n   *\n   * Time formatted as \"HHMMSS.XXX[gmt offset[:tz name]]\",\n   * the milliseconds and time zone are still optional, and default to GMT.\n   * @see \"Section 3.2.8.3 OFX Spec\"\n   * @return Time String formatted as \"HHMMSS.XXX[gmt offset[:tz name]]\"\n   */\n  public getProcessEndTime(): string {\n    return this.processEndTime;\n  }\n\n  /**\n   * Sets the time of day that day's processing ends.\n   *\n   * Time formatted as \"HHMMSS.XXX[gmt offset[:tz name]]\",\n   * the milliseconds and time zone are still optional, and default to GMT.\n\n   * @see \"Section 3.2.8.3 OFX Spec\"\n   * @param processEndTime formatted as \"HHMMSS.XXX[gmt offset[:tz name]]\"\n   */\n  public setProcessEndTime(processEndTime: string): void {\n    this.processEndTime = processEndTime;\n  }\n\n  public getCanUseRange(): boolean {\n    return this.canUseRange;\n  }\n\n  public setCanUseRange(canUseRange: boolean): void {\n    this.canUseRange = canUseRange;\n  }\n\n  public getCanUseDescription(): boolean {\n    return this.canUseDescription;\n  }\n\n  public setCanUseDescription(canUseDescription: boolean): void {\n    this.canUseDescription = canUseDescription;\n  }\n\n  public getStopCheckFee(): number {\n    return this.stopCheckFee;\n  }\n\n  public setStopCheckFee(stopCheckFee: number): void {\n    this.stopCheckFee = stopCheckFee;\n  }\n}\n\nAggregate_add( StopCheckProfile, \"STPCHKPROF\" );\nElement_add(StopCheckProfile, { name: \"PROCDAYSOFF\", order: 0, type: Array, collectionEntryType: ProcessorDayOff, read: StopCheckProfile.prototype.getProcessorDaysOff, write: StopCheckProfile.prototype.setProcessorDaysOff });\nElement_add(StopCheckProfile, { name: \"PROCENDTM\", required: true, order: 10, type: String, read: StopCheckProfile.prototype.getProcessEndTime, write: StopCheckProfile.prototype.setProcessEndTime });\nElement_add(StopCheckProfile, { name: \"CANUSERANGE\", required: true, order: 20, type: Boolean, read: StopCheckProfile.prototype.getCanUseRange, write: StopCheckProfile.prototype.setCanUseRange });\nElement_add(StopCheckProfile, { name: \"CANUSEDESC\", required: true, order: 30, type: Boolean, read: StopCheckProfile.prototype.getCanUseDescription, write: StopCheckProfile.prototype.setCanUseDescription });\nElement_add(StopCheckProfile, { name: \"STPCHKFEE\", required: true, order: 40, type: Number, read: StopCheckProfile.prototype.getStopCheckFee, write: StopCheckProfile.prototype.setStopCheckFee });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/info/banking/StopCheckProfile.ts","/*\n * Copyright 2012 TheStash\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../../meta/Aggregate_add'/>\n///<reference path='../../../../../meta/Element_add'/>\n\nmodule ofx4js.domain.data.profile.info.common {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Image Profile\n * @author Scott Priddy\n * @see \"Section 3.1.6.2 OFX Spec\"\n */\nexport class ImageProfile {\n\n  private closingImageAvailable: boolean;\n  private transactionImageAvailable: boolean;\n\n  public getClosingImageAvailable(): boolean {\n    return this.closingImageAvailable;\n  }\n\n  public setClosingImageAvailable(closingImageAvailable: boolean): void {\n    this.closingImageAvailable = closingImageAvailable;\n  }\n\n  public getTransactionImageAvailable(): boolean {\n    return this.transactionImageAvailable;\n  }\n\n  public setTransactionImageAvailable(transactionImageAvailable: boolean): void {\n    this.transactionImageAvailable = transactionImageAvailable;\n  }\n}\n\nAggregate_add( ImageProfile, \"IMAGEPROF\" );\nElement_add(ImageProfile, { name: \"CLOSINGIMGAVAIL\", required: true, order: 10, type: Boolean, read: ImageProfile.prototype.getClosingImageAvailable, write: ImageProfile.prototype.setClosingImageAvailable });\nElement_add(ImageProfile, { name: \"TRANIMGAVAIL\", required: true, order: 20, type: Boolean, read: ImageProfile.prototype.getTransactionImageAvailable, write: ImageProfile.prototype.setTransactionImageAvailable });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/info/common/ImageProfile.ts","/*\n * Copyright 2012 TheStash\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../../meta/Aggregate_add'/>\n///<reference path='../../../../../meta/Element_add'/>\n///<reference path='../../../common/ProcessorDayOff'/>\n\nmodule ofx4js.domain.data.profile.info.common {\n\nimport ProcessorDayOff = ofx4js.domain.data.common.ProcessorDayOff;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Funds Transfer Profile\n * @author Scott Priddy\n * @see \"Section 11.13.2.2 OFX Spec\"\n */\nexport class TransferProfile {\n\n  private processorDaysOff: Array<ProcessorDayOff>;\n  private processEndTime: string;\n  private supportsScheduledTransfers: boolean;\n  private supportsRecurringTransfers: boolean;\n  private supportsLoanTransfers: boolean;\n  private supportsScheduledLoanTransfers: boolean;\n  private supportsRecurringLoanTransfers: boolean;\n  private supportsTransferModification: boolean;\n  private supportsModelModification: boolean;\n  private modelWindow: number;\n  private withdrawnDays: number;\n  private defaultDaysToPay: number;\n\n\n  /**\n   * Days of week that no processing occurs: MONDAY, TUESDAY, WEDNESDAY, THURSDAY,\n   * FRIDAY, SATURDAY, or SUNDAY. 0 or more <PROCDAYSOFF> can be sent.\n   * @return List of days during the week that no processing occurs.\n   */\n  public getProcessorDaysOff(): Array<ProcessorDayOff> {\n    return this.processorDaysOff;\n  }\n\n  public setProcessorDaysOff(processorDaysOff: Array<ProcessorDayOff>): void  {\n    this.processorDaysOff = processorDaysOff;\n  }\n\n  /**\n   * Gets time of day that day's processing ends.\n   *\n   * Time formatted as \"HHMMSS.XXX[gmt offset[:tz name]]\",\n   * the milliseconds and time zone are still optional, and default to GMT.\n   * @see \"Section 3.2.8.3 OFX Spec\"\n   * @return Time String formatted as \"HHMMSS.XXX[gmt offset[:tz name]]\"\n   */\n  public getProcessEndTime(): string  {\n    return this.processEndTime;\n  }\n\n  /**\n   * Sets the time of day that day's processing ends.\n   *\n   * Time formatted as \"HHMMSS.XXX[gmt offset[:tz name]]\",\n   * the milliseconds and time zone are still optional, and default to GMT.\n\n   * @see \"Section 3.2.8.3 OFX Spec\"\n   * @param processEndTime formatted as \"HHMMSS.XXX[gmt offset[:tz name]]\"\n   */\n  public setProcessEndTime(processEndTime: string): void  {\n    this.processEndTime = processEndTime;\n  }\n\n  public getSupportsScheduledTransfers(): boolean  {\n    return this.supportsScheduledTransfers;\n  }\n\n  public setSupportsScheduledTransfers(supportsScheduledTransfers: boolean): void  {\n    this.supportsScheduledTransfers = supportsScheduledTransfers;\n  }\n\n  /**\n   * Requires <CANSCHED>\n   * @return Boolean whether supports recurring transfers\n   */\n  public getSupportsRecurringTransfers(): boolean  {\n    return this.supportsRecurringTransfers;\n  }\n\n  public setSupportsRecurringTransfers(supportsRecurringTransfers: boolean): void  {\n    this.supportsRecurringTransfers = supportsRecurringTransfers;\n  }\n\n  /**\n   * <CANLOAN>Y must be present for transfers to involve loans\n   * @return Boolean whether supports loan transfers\n   */\n  public getSupportsLoanTransfers(): boolean  {\n    return this.supportsLoanTransfers;\n  }\n\n  public setSupportsLoanTransfers(supportsLoanTransfers: boolean): void  {\n    this.supportsLoanTransfers = supportsLoanTransfers;\n  }\n\n  public getSupportsScheduledLoanTransfers(): boolean  {\n    return this.supportsScheduledLoanTransfers;\n  }\n\n  public setSupportsScheduledLoanTransfers(supportsScheduledLoanTransfers: boolean): void  {\n    this.supportsScheduledLoanTransfers = supportsScheduledLoanTransfers;\n  }\n\n  public getSupportsRecurringLoanTransfers(): boolean  {\n    return this.supportsRecurringLoanTransfers;\n  }\n\n  public setSupportsRecurringLoanTransfers(supportsRecurringLoanTransfers: boolean): void  {\n    this.supportsRecurringLoanTransfers = supportsRecurringLoanTransfers;\n  }\n\n  public getSupportsTransferModification(): boolean  {\n    return this.supportsTransferModification;\n  }\n\n  public setSupportsTransferModification(supportsTransferModification: boolean): void  {\n    this.supportsTransferModification = supportsTransferModification;\n  }\n\n  public getSupportsModelModification(): boolean  {\n    return this.supportsModelModification;\n  }\n\n  public setSupportsModelModification(supportsModelModification: boolean): void  {\n    this.supportsModelModification = supportsModelModification;\n  }\n\n  /**\n   * Model window\n   * the number of days before a recurring transaction is scheduled to be processed that it is\n   * instantiated on the system\n   * @return Number number of days before a recurring transaction is scheduled to be processed that it is instantiated on the system\n   */\n  public getModelWindow(): number  {\n    return this.modelWindow;\n  }\n\n  public setModelWindow(modelWindow: number): void  {\n    this.modelWindow = modelWindow;\n  }\n\n  /**\n   * Number of days before processing date that funds are withdrawn\n   * @return Number number of days before processing date that funds are withdrawn\n   */\n  public getWithdrawnDays(): number  {\n    return this.withdrawnDays;\n  }\n\n  public setWithdrawnDays(withdrawnDays: number): void  {\n    this.withdrawnDays = withdrawnDays;\n  }\n\n  /**\n   * Default number of days to pay\n   * @return Number Default number of days to pay\n   */\n  public getDefaultDaysToPay(): number  {\n    return this.defaultDaysToPay;\n  }\n\n  public setDefaultDaysToPay(defaultDaysToPay: number): void  {\n    this.defaultDaysToPay = defaultDaysToPay;\n  }\n}\n\nAggregate_add( TransferProfile, \"XFERPROF\" );\nElement_add(TransferProfile, { name: \"PROCDAYSOFF\", order: 0, type: Array, collectionEntryType: ProcessorDayOff, read: TransferProfile.prototype.getProcessorDaysOff, write: TransferProfile.prototype.setProcessorDaysOff });\nElement_add(TransferProfile, { name: \"PROCENDTM\", required: true, order: 10, type: String, read: TransferProfile.prototype.getProcessEndTime, write: TransferProfile.prototype.setProcessEndTime });\nElement_add(TransferProfile, { name: \"CANSCHED\", required: true, order: 20, type: Boolean, read: TransferProfile.prototype.getSupportsScheduledTransfers, write: TransferProfile.prototype.setSupportsScheduledTransfers });\nElement_add(TransferProfile, { name: \"CANRECUR\", required: true, order: 30, type: Boolean, read: TransferProfile.prototype.getSupportsRecurringTransfers, write: TransferProfile.prototype.setSupportsRecurringTransfers });\nElement_add(TransferProfile, { name: \"CANLOAN\", order: 40, type: Boolean, read: TransferProfile.prototype.getSupportsLoanTransfers, write: TransferProfile.prototype.setSupportsLoanTransfers });\nElement_add(TransferProfile, { name: \"CANSCHEDLOAN\", order: 50, type: Boolean, read: TransferProfile.prototype.getSupportsScheduledLoanTransfers, write: TransferProfile.prototype.setSupportsScheduledLoanTransfers });\nElement_add(TransferProfile, { name: \"CANRECURLOAN\", order: 60, type: Boolean, read: TransferProfile.prototype.getSupportsRecurringLoanTransfers, write: TransferProfile.prototype.setSupportsRecurringLoanTransfers });\nElement_add(TransferProfile, { name: \"CANMODXFERS\", required: true, order: 70, type: Boolean, read: TransferProfile.prototype.getSupportsTransferModification, write: TransferProfile.prototype.setSupportsTransferModification });\nElement_add(TransferProfile, { name: \"CANMODMDLS\", required: true, order: 80, type: Boolean, read: TransferProfile.prototype.getSupportsModelModification, write: TransferProfile.prototype.setSupportsModelModification });\nElement_add(TransferProfile, { name: \"MODELWND\", required: true, order: 90, type: Number, read: TransferProfile.prototype.getModelWindow, write: TransferProfile.prototype.setModelWindow });\nElement_add(TransferProfile, { name: \"DAYSWITH\", required: true, order: 100, type: Number, read: TransferProfile.prototype.getWithdrawnDays, write: TransferProfile.prototype.setWithdrawnDays });\nElement_add(TransferProfile, { name: \"DFLTDAYSTOPAY\", required: true, order: 110, type: Number, read: TransferProfile.prototype.getDefaultDaysToPay, write: TransferProfile.prototype.setDefaultDaysToPay });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/info/common/TransferProfile.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../../banking/AccountType'/>\n///<reference path='banking/EmailProfile'/>\n///<reference path='banking/StopCheckProfile'/>\n///<reference path='common/ImageProfile'/>\n///<reference path='common/TransferProfile'/>\n\nmodule ofx4js.domain.data.profile.info {\n\nimport AccountType = ofx4js.domain.data.banking.AccountType;\nimport VersionSpecificMessageSetInfo = ofx4js.domain.data.profile.VersionSpecificMessageSetInfo;\nimport MessageSetType = ofx4js.domain.data.MessageSetType;\nimport EmailProfile = ofx4js.domain.data.profile.info.banking.EmailProfile;\nimport ImageProfile = ofx4js.domain.data.profile.info.common.ImageProfile;\nimport StopCheckProfile = ofx4js.domain.data.profile.info.banking.StopCheckProfile;\nimport TransferProfile = ofx4js.domain.data.profile.info.common.TransferProfile;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Banking Message Set Profile\n * @author Scott Priddy\n * @author Ryan Heaton\n * @see \"Section 11.13.2.1 OFX Spec\"\n */\nexport class BankingV1MessageSetInfo extends VersionSpecificMessageSetInfo {\n\n  private invalidAccountTypes: Array<AccountType>;\n  private closingAvail: boolean;\n  private transferProfile: TransferProfile;\n  private stopCheckProfile: StopCheckProfile;\n  private emailProfile: EmailProfile;\n  private imageProfile: ImageProfile;\n\n\n  public getMessageSetType(): MessageSetType {\n    return MessageSetType.banking;\n  }\n\n  /**\n   * The invalidAccountTypes list.\n   *\n   * @return The invalidAccountTypes list.\n   */\n  public getInvalidAccountTypes(): Array<AccountType> {\n    return this.invalidAccountTypes;\n  }\n\n  /**\n   * The invalidAccountTypes list.\n   *\n   * @param invalidAccountTypes The invalidAccountTypes list.\n   */\n  public setInvalidAccountTypes(invalidAccountTypes: Array<AccountType>): void {\n    this.invalidAccountTypes = invalidAccountTypes;\n  }\n\n  /**\n   * Gets whether closing statement information is available\n   *\n   * @return whether closing statement information is available\n   */\n  public getClosingAvail(): boolean {\n    return this.closingAvail;\n  }\n\n  /**\n   * Sets whether closing statement information is available\n   *\n   * @param closingAvail whether closing statement information is available\n   */\n  public setClosingAvail(closingAvail: boolean): void {\n    this.closingAvail = closingAvail;\n  }\n\n  public getTransferProfile(): TransferProfile {\n    return this.transferProfile;\n  }\n\n  public setTransferProfile(transferProfile: TransferProfile): void {\n    this.transferProfile = transferProfile;\n  }\n\n  public getStopCheckProfile(): StopCheckProfile {\n    return this.stopCheckProfile;\n  }\n\n  public setStopCheckProfile(stopCheckProfile: StopCheckProfile): void {\n    this.stopCheckProfile = stopCheckProfile;\n  }\n\n  public getEmailProfile(): EmailProfile {\n    return this.emailProfile;\n  }\n\n  public setEmailProfile(emailProfile: EmailProfile): void {\n    this.emailProfile = emailProfile;\n  }\n\n  public getImageProfile(): ImageProfile {\n    return this.imageProfile;\n  }\n\n  public setImageProfile(imageProfile: ImageProfile): void {\n    this.imageProfile = imageProfile;\n  }\n}\n\nAggregate_add( BankingV1MessageSetInfo, \"BANKMSGSETV1\" );\nChildAggregate_add(BankingV1MessageSetInfo, { order: 10, type: Array, collectionEntryType: AccountType, read: BankingV1MessageSetInfo.prototype.getInvalidAccountTypes, write: BankingV1MessageSetInfo.prototype.setInvalidAccountTypes });\nElement_add(BankingV1MessageSetInfo, { name: \"CLOSINGAVAIL\", required: true, order: 20, type: Boolean, read: BankingV1MessageSetInfo.prototype.getClosingAvail, write: BankingV1MessageSetInfo.prototype.setClosingAvail });\nChildAggregate_add(BankingV1MessageSetInfo, { name: \"XFERPROF\", order: 30, type: TransferProfile, read: BankingV1MessageSetInfo.prototype.getTransferProfile, write: BankingV1MessageSetInfo.prototype.setTransferProfile });\nChildAggregate_add(BankingV1MessageSetInfo, { name: \"STPCKPROF\", order: 40, type: StopCheckProfile, read: BankingV1MessageSetInfo.prototype.getStopCheckProfile, write: BankingV1MessageSetInfo.prototype.setStopCheckProfile });\nChildAggregate_add(BankingV1MessageSetInfo, { name: \"EMAILPROF\", required: true, order: 50, type: EmailProfile, read: BankingV1MessageSetInfo.prototype.getEmailProfile, write: BankingV1MessageSetInfo.prototype.setEmailProfile });\nChildAggregate_add(BankingV1MessageSetInfo, { name: \"IMAGEPROF\", order: 60, type: ImageProfile, read: BankingV1MessageSetInfo.prototype.getImageProfile, write: BankingV1MessageSetInfo.prototype.setImageProfile });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/info/BankingV1MessageSetInfo.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../AbstractMessageSetInfo'/>\n///<reference path='BankingV1MessageSetInfo'/>\n\nmodule ofx4js.domain.data.profile.info {\n\nimport AbstractMessageSetInfo = ofx4js.domain.data.profile.AbstractMessageSetInfo;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * @author Ryan Heaton\n */\nexport class BankingMessageSetInfo extends AbstractMessageSetInfo {\n\n  private version1Info: BankingV1MessageSetInfo;\n\n  public getVersion1Info(): BankingV1MessageSetInfo {\n    return this.version1Info;\n  }\n\n  public setVersion1Info(version1Info: BankingV1MessageSetInfo): void {\n    this.version1Info = version1Info;\n  }\n}\n\nAggregate_add( BankingMessageSetInfo, \"BANKMSGSET\" );\nChildAggregate_add(BankingMessageSetInfo, { order: 0, type: BankingV1MessageSetInfo, read: BankingMessageSetInfo.prototype.getVersion1Info, write: BankingMessageSetInfo.prototype.setVersion1Info });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/info/BankingMessageSetInfo.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/Element_add'/>\n///<reference path='../../common/ProcessorDayOff'/>\n///<reference path='../../profile/VersionSpecificMessageSetInfo'/>\n\nmodule ofx4js.domain.data.profile.info {\n\nimport ProcessorDayOff = ofx4js.domain.data.common.ProcessorDayOff;\nimport VersionSpecificMessageSetInfo = ofx4js.domain.data.profile.VersionSpecificMessageSetInfo;\nimport MessageSetType = ofx4js.domain.data.MessageSetType;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * BillPay Message Set Profile\n * @author Scott Priddy\n * @author Ryan Heaton\n * @see \"Section 12.11.2 OFX Spec\"\n */\nexport class BillpayV1MessageSetInfo extends VersionSpecificMessageSetInfo {\n\n  private daysWith: number;\n  private defaultDaysToPay: number;\n  private transferDaysWith: number;\n  private transferDefaultDaysToPay: number;\n  private processorDaysOff: Array<ProcessorDayOff>;\n  private processorEndTime: string;\n  private modelWindow: number;\n  private postProcessorWindow: number;\n  private supportsStatusUpdateViaPaymentModificationResponse: boolean;\n  private supportsPaymentByAddress: boolean;\n  private supportsPaymentByTransfer: boolean;\n  private supportsPaymentByPayeeId: boolean;\n  private userCanAddPayee: boolean;\n  private supportsExtendedPayment: boolean;\n  private canModifyPayments: boolean;\n  private canModifyModels: boolean;\n  private supportsDifferentFirstPayment: boolean;\n  private supportsDifferentLastPayment: boolean;\n  private supportsBillPresentmentContext: boolean;\n\n  public getMessageSetType(): MessageSetType {\n    return MessageSetType.payments;\n  }\n\n  public getDaysWith(): number {\n    return this.daysWith;\n  }\n\n  public setDaysWith(daysWith: number): void {\n    this.daysWith = daysWith;\n  }\n\n  public getDefaultDaysToPay(): number {\n    return this.defaultDaysToPay;\n  }\n\n  public setDefaultDaysToPay(defaultDaysToPay: number): void {\n    this.defaultDaysToPay = defaultDaysToPay;\n  }\n\n  public getTransferDaysWith(): number {\n    return this.transferDaysWith;\n  }\n\n  public setTransferDaysWith(transferDaysWith: number): void {\n    this.transferDaysWith = transferDaysWith;\n  }\n\n  public getTransferDefaultDaysToPay(): number {\n    return this.transferDefaultDaysToPay;\n  }\n\n  public setTransferDefaultDaysToPay(transferDefaultDaysToPay: number): void {\n    this.transferDefaultDaysToPay = transferDefaultDaysToPay;\n  }\n\n  public getProcessorDaysOff(): Array<ProcessorDayOff> {\n    return this.processorDaysOff;\n  }\n\n  public setProcessorDaysOff(processorDaysOff: Array<ProcessorDayOff>): void {\n    this.processorDaysOff = processorDaysOff;\n  }\n\n  public getProcessorEndTime(): string {\n    return this.processorEndTime;\n  }\n\n  public setProcessorEndTime(processorEndTime: string): void {\n    this.processorEndTime = processorEndTime;\n  }\n\n  public getModelWindow(): number {\n    return this.modelWindow;\n  }\n\n  public setModelWindow(modelWindow: number): void {\n    this.modelWindow = modelWindow;\n  }\n\n  public getPostProcessorWindow(): number {\n    return this.postProcessorWindow;\n  }\n\n  public setPostProcessorWindow(postProcessorWindow: number): void {\n    this.postProcessorWindow = postProcessorWindow;\n  }\n\n  public getSupportsStatusUpdateViaPaymentModificationResponse(): boolean {\n    return this.supportsStatusUpdateViaPaymentModificationResponse;\n  }\n\n  public setSupportsStatusUpdateViaPaymentModificationResponse(supportsStatusUpdateViaPaymentModificationResponse: boolean): void {\n    this.supportsStatusUpdateViaPaymentModificationResponse = supportsStatusUpdateViaPaymentModificationResponse;\n  }\n\n  public getSupportsPaymentByAddress(): boolean {\n    return this.supportsPaymentByAddress;\n  }\n\n  public setSupportsPaymentByAddress(supportsPaymentByAddress: boolean): void {\n    this.supportsPaymentByAddress = supportsPaymentByAddress;\n  }\n\n  public getSupportsPaymentByTransfer(): boolean {\n    return this.supportsPaymentByTransfer;\n  }\n\n  public setSupportsPaymentByTransfer(supportsPaymentByTransfer: boolean): void {\n    this.supportsPaymentByTransfer = supportsPaymentByTransfer;\n  }\n\n  public getSupportsPaymentByPayeeId(): boolean {\n    return this.supportsPaymentByPayeeId;\n  }\n\n  public setSupportsPaymentByPayeeId(supportsPaymentByPayeeId: boolean): void {\n    this.supportsPaymentByPayeeId = supportsPaymentByPayeeId;\n  }\n\n  public getUserCanAddPayee(): boolean {\n    return this.userCanAddPayee;\n  }\n\n  public setUserCanAddPayee(userCanAddPayee: boolean): void {\n    this.userCanAddPayee = userCanAddPayee;\n  }\n\n  public getSupportsExtendedPayment(): boolean {\n    return this.supportsExtendedPayment;\n  }\n\n  public setSupportsExtendedPayment(supportsExtendedPayment: boolean): void {\n    this.supportsExtendedPayment = supportsExtendedPayment;\n  }\n\n  public getCanModifyPayments(): boolean {\n    return this.canModifyPayments;\n  }\n\n  public setCanModifyPayments(canModifyPayments: boolean): void {\n    this.canModifyPayments = canModifyPayments;\n  }\n\n  public getCanModifyModels(): boolean {\n    return this.canModifyModels;\n  }\n\n  public setCanModifyModels(canModifyModels: boolean): void {\n    this.canModifyModels = canModifyModels;\n  }\n\n  public getSupportsDifferentFirstPayment(): boolean {\n    return this.supportsDifferentFirstPayment;\n  }\n\n  public setSupportsDifferentFirstPayment(supportsDifferentFirstPayment: boolean): void {\n    this.supportsDifferentFirstPayment = supportsDifferentFirstPayment;\n  }\n\n  public getSupportsDifferentLastPayment(): boolean {\n    return this.supportsDifferentLastPayment;\n  }\n\n  public setSupportsDifferentLastPayment(supportsDifferentLastPayment: boolean): void {\n    this.supportsDifferentLastPayment = supportsDifferentLastPayment;\n  }\n\n  public getSupportsBillPresentmentContext(): boolean {\n    return this.supportsBillPresentmentContext;\n  }\n\n  public setSupportsBillPresentmentContext(supportsBillPresentmentContext: boolean): void {\n    this.supportsBillPresentmentContext = supportsBillPresentmentContext;\n  }\n}\n\nAggregate_add( BillpayV1MessageSetInfo, \"BILLPAYMSGSETV1\" );\nElement_add(BillpayV1MessageSetInfo, { name: \"DAYSWITH\", required: true, order: 10, type: Number, read: BillpayV1MessageSetInfo.prototype.getDaysWith, write: BillpayV1MessageSetInfo.prototype.setDaysWith });\nElement_add(BillpayV1MessageSetInfo, { name: \"DFLTDAYSTOPAY\", required: true, order: 20, type: Number, read: BillpayV1MessageSetInfo.prototype.getDefaultDaysToPay, write: BillpayV1MessageSetInfo.prototype.setDefaultDaysToPay });\nElement_add(BillpayV1MessageSetInfo, { name: \"XFERDAYSWITH\", required: true, order: 30, type: Number, read: BillpayV1MessageSetInfo.prototype.getTransferDaysWith, write: BillpayV1MessageSetInfo.prototype.setTransferDaysWith });\nElement_add(BillpayV1MessageSetInfo, { name: \"XFERDFLTDAYSTOPAY\", required: true, order: 40, type: Number, read: BillpayV1MessageSetInfo.prototype.getTransferDefaultDaysToPay, write: BillpayV1MessageSetInfo.prototype.setTransferDefaultDaysToPay });\nElement_add(BillpayV1MessageSetInfo, { name: \"PROCDAYSOFF\", order: 50, type: Array, /*collectionEntryType: ProcessorDayOff,*/ read: BillpayV1MessageSetInfo.prototype.getProcessorDaysOff, write: BillpayV1MessageSetInfo.prototype.setProcessorDaysOff });\nElement_add(BillpayV1MessageSetInfo, { name: \"PROCENDTM\", required: true, order: 60, type: String, read: BillpayV1MessageSetInfo.prototype.getProcessorEndTime, write: BillpayV1MessageSetInfo.prototype.setProcessorEndTime });\nElement_add(BillpayV1MessageSetInfo, { name: \"MODELWND\", required: true, order: 70, type: Number, read: BillpayV1MessageSetInfo.prototype.getModelWindow, write: BillpayV1MessageSetInfo.prototype.setModelWindow });\nElement_add(BillpayV1MessageSetInfo, { name: \"POSTPROCWND\", required: true, order: 80, type: Number, read: BillpayV1MessageSetInfo.prototype.getPostProcessorWindow, write: BillpayV1MessageSetInfo.prototype.setPostProcessorWindow });\nElement_add(BillpayV1MessageSetInfo, { name: \"STSVIAMODS\", required: true, order: 90, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getSupportsStatusUpdateViaPaymentModificationResponse, write: BillpayV1MessageSetInfo.prototype.setSupportsStatusUpdateViaPaymentModificationResponse });\nElement_add(BillpayV1MessageSetInfo, { name: \"PMTBYADDR\", required: true, order: 100, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getSupportsPaymentByAddress, write: BillpayV1MessageSetInfo.prototype.setSupportsPaymentByAddress });\nElement_add(BillpayV1MessageSetInfo, { name: \"PMTBYXFER\", required: true, order: 110, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getSupportsPaymentByTransfer, write: BillpayV1MessageSetInfo.prototype.setSupportsPaymentByTransfer });\nElement_add(BillpayV1MessageSetInfo, { name: \"PMTBYPAYEEID\", required: true, order: 120, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getSupportsPaymentByPayeeId, write: BillpayV1MessageSetInfo.prototype.setSupportsPaymentByPayeeId });\nElement_add(BillpayV1MessageSetInfo, { name: \"CANADDPAYEE\", required: true, order: 130, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getUserCanAddPayee, write: BillpayV1MessageSetInfo.prototype.setUserCanAddPayee });\nElement_add(BillpayV1MessageSetInfo, { name: \"HASEXTDPMT\", required: true, order: 140, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getSupportsExtendedPayment, write: BillpayV1MessageSetInfo.prototype.setSupportsExtendedPayment });\nElement_add(BillpayV1MessageSetInfo, { name: \"CANMODPMTS\", required: true, order: 150, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getCanModifyPayments, write: BillpayV1MessageSetInfo.prototype.setCanModifyPayments });\nElement_add(BillpayV1MessageSetInfo, { name: \"CANMODMDLS\", required: true, order: 160, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getCanModifyModels, write: BillpayV1MessageSetInfo.prototype.setCanModifyModels });\nElement_add(BillpayV1MessageSetInfo, { name: \"DIFFFIRSTPMT\", required: true, order: 170, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getSupportsDifferentFirstPayment, write: BillpayV1MessageSetInfo.prototype.setSupportsDifferentFirstPayment });\nElement_add(BillpayV1MessageSetInfo, { name: \"DIFFLASTPMT\", required: true, order: 180, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getSupportsDifferentLastPayment, write: BillpayV1MessageSetInfo.prototype.setSupportsDifferentLastPayment });\nElement_add(BillpayV1MessageSetInfo, { name: \"BILLPUBCONTEXT\", order: 190, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getSupportsBillPresentmentContext, write: BillpayV1MessageSetInfo.prototype.setSupportsBillPresentmentContext });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/info/BillpayV1MessageSetInfo.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../AbstractMessageSetInfo'/>\n///<reference path='BillpayV1MessageSetInfo'/>\n\nmodule ofx4js.domain.data.profile.info {\n\nimport AbstractMessageSetInfo = ofx4js.domain.data.profile.AbstractMessageSetInfo;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * @author Ryan Heaton\n */\nexport class BillpayMessageSetInfo extends AbstractMessageSetInfo {\n\n  private version1Info: BillpayV1MessageSetInfo;\n\n  public getVersion1Info(): BillpayV1MessageSetInfo {\n    return this.version1Info;\n  }\n\n  public setVersion1Info(version1Info: BillpayV1MessageSetInfo): void {\n    this.version1Info = version1Info;\n  }\n}\n\nAggregate_add( BillpayMessageSetInfo, \"BILLPAYMSGSET\" );\nChildAggregate_add(BillpayMessageSetInfo, { order: 0, type: BillpayV1MessageSetInfo, read: BillpayMessageSetInfo.prototype.getVersion1Info, write: BillpayMessageSetInfo.prototype.setVersion1Info });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/info/BillpayMessageSetInfo.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../../../../meta/Element_add'/>\n///<reference path='../../profile/VersionSpecificMessageSetInfo'/>\n///<reference path='../../profile/info/common/ImageProfile'/>\n///<reference path='../../MessageSetType'/>\n\nmodule ofx4js.domain.data.profile.info {\n\nimport VersionSpecificMessageSetInfo = ofx4js.domain.data.profile.VersionSpecificMessageSetInfo;\nimport MessageSetType = ofx4js.domain.data.MessageSetType;\nimport ImageProfile = ofx4js.domain.data.profile.info.common.ImageProfile;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Credit Card Message Set Profile\n * @author Scott Priddy\n * @author Ryan Heaton\n * @see \"Section 11.13.3 OFX Spec\"\n */\nexport class CreditCardV1MessageSetInfo extends VersionSpecificMessageSetInfo {\n\n  private closingAvail: boolean;\n  private imageProfile: ImageProfile;\n\n  public getMessageSetType(): MessageSetType {\n    return MessageSetType.creditcard;\n  }\n\n  /**\n   * Closing statement information available\n   * @return Boolean\n   */\n  public getClosingAvail(): boolean {\n    return this.closingAvail;\n  }\n\n  public setClosingAvail(closingAvail: boolean): void {\n    this.closingAvail = closingAvail;\n  }\n\n  /**\n   * Image profile (if supported)\n   * @return ImageProfile\n   */\n  public getImageProfile(): ImageProfile {\n    return this.imageProfile;\n  }\n\n  public setImageProfile(imageProfile: ImageProfile): void {\n    this.imageProfile = imageProfile;\n  }\n}\n\nAggregate_add( CreditCardV1MessageSetInfo, \"CREDITCARDMSGSETV1\" );\nElement_add(CreditCardV1MessageSetInfo, { name: \"CLOSINGAVAIL\", required: true, order: 20, type: Boolean, read: CreditCardV1MessageSetInfo.prototype.getClosingAvail, write: CreditCardV1MessageSetInfo.prototype.setClosingAvail });\nChildAggregate_add(CreditCardV1MessageSetInfo, { name: \"IMAGEPROF\", order: 10, type: ImageProfile, read: CreditCardV1MessageSetInfo.prototype.getImageProfile, write: CreditCardV1MessageSetInfo.prototype.setImageProfile });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/info/CreditCardV1MessageSetInfo.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../../profile/AbstractMessageSetInfo'/>\n///<reference path='CreditCardV1MessageSetInfo'/>\n\nmodule ofx4js.domain.data.profile.info {\n\nimport AbstractMessageSetInfo = ofx4js.domain.data.profile.AbstractMessageSetInfo;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * @author Ryan Heaton\n */\nexport class CreditCardMessageSetInfo extends AbstractMessageSetInfo {\n\n  private version1Info: CreditCardV1MessageSetInfo;\n\n  public getVersion1Info(): CreditCardV1MessageSetInfo {\n    return this.version1Info;\n  }\n\n  public setVersion1Info(version1Info: CreditCardV1MessageSetInfo): void {\n    this.version1Info = version1Info;\n  }\n}\n\nAggregate_add( CreditCardMessageSetInfo, \"CREDITCARDMSGSET\" );\nChildAggregate_add(CreditCardMessageSetInfo, { order: 0, type: CreditCardV1MessageSetInfo, read: CreditCardMessageSetInfo.prototype.getVersion1Info, write: CreditCardMessageSetInfo.prototype.setVersion1Info });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/info/CreditCardMessageSetInfo.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/Element_add'/>\n///<reference path='../../profile/VersionSpecificMessageSetInfo'/>\n///<reference path='EmailV1MessageSetInfo'/>\n\nmodule ofx4js.domain.data.profile.info {\n\nimport VersionSpecificMessageSetInfo = ofx4js.domain.data.profile.VersionSpecificMessageSetInfo;\nimport MessageSetType = ofx4js.domain.data.MessageSetType;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Email Message Set Profile Information\n * @author Scott Priddy\n * @author Ryan Heaton\n * @see \"Section 9.4.2 OFX Spec\"\n */\nexport class EmailV1MessageSetInfo extends VersionSpecificMessageSetInfo {\n\n  private supportsMail: boolean;\n  private supportsMimeType: boolean;\n\n  public getMessageSetType(): MessageSetType {\n    return MessageSetType.email;\n  }\n\n  /**\n   * Y if server supports <MAILRQ> request.\n   * N if server supports only the <MAILSYNCRQ> request.\n   * @return Boolean\n   */\n  public getSupportsMail(): boolean {\n    return this.supportsMail;\n  }\n\n  public setSupportsMail(supportsMail: boolean): void {\n    this.supportsMail = supportsMail;\n  }\n\n  /**\n   * Y if server supports get MIME message\n   * @return Boolean\n   */\n  public getSupportsMimeType(): boolean {\n    return this.supportsMimeType;\n  }\n\n  public setSupportsMimeType(supportsMimeType: boolean): void {\n    this.supportsMimeType = supportsMimeType;\n  }\n\n}\n\nAggregate_add( EmailV1MessageSetInfo, \"EMAILMSGSETV1\" );\nElement_add(EmailV1MessageSetInfo, { name: \"MAILSUP\", required: true, order: 10, type: Boolean, read: EmailV1MessageSetInfo.prototype.getSupportsMail, write: EmailV1MessageSetInfo.prototype.setSupportsMail });\nElement_add(EmailV1MessageSetInfo, { name: \"GETMIMESUP\", required: true, order: 20, type: Boolean, read: EmailV1MessageSetInfo.prototype.getSupportsMimeType, write: EmailV1MessageSetInfo.prototype.setSupportsMimeType });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/info/EmailV1MessageSetInfo.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../../profile/AbstractMessageSetInfo'/>\n///<reference path='EmailV1MessageSetInfo'/>\n\nmodule ofx4js.domain.data.profile.info {\n\nimport AbstractMessageSetInfo = ofx4js.domain.data.profile.AbstractMessageSetInfo;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * @author Ryan Heaton\n */\nexport class EmailMessageSetInfo extends AbstractMessageSetInfo {\n\n  private version1Info: EmailV1MessageSetInfo;\n\n  public getVersion1Info(): EmailV1MessageSetInfo {\n    return this.version1Info;\n  }\n\n  public setVersion1Info(version1Info: EmailV1MessageSetInfo): void {\n    this.version1Info = version1Info;\n  }\n}\n\nAggregate_add( EmailMessageSetInfo, \"EMAILMSGSET\" );\nChildAggregate_add(EmailMessageSetInfo, { order: 0, type: EmailV1MessageSetInfo, read: EmailMessageSetInfo.prototype.getVersion1Info, write: EmailMessageSetInfo.prototype.setVersion1Info });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/info/EmailMessageSetInfo.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../../../../meta/Element_add'/>\n///<reference path='../../profile/info/common/TransferProfile'/>\n\nmodule ofx4js.domain.data.profile.info {\n\nimport VersionSpecificMessageSetInfo = ofx4js.domain.data.profile.VersionSpecificMessageSetInfo;\nimport MessageSetType = ofx4js.domain.data.MessageSetType;\nimport TransferProfile = ofx4js.domain.data.profile.info.common.TransferProfile;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Interbank Funds Transfer Message Set Profile\n * @author Scott Priddy\n * @author Ryan Heaton\n * @see \"Section 11.13.4 OFX Spec\"\n */\nexport class InterbankTransferV1MessageSetInfo extends VersionSpecificMessageSetInfo {\n\n  private transferProfile: TransferProfile;\n  private supportsBillPay: boolean;\n  private cancelWindow: number;\n  private domesticInterbankTransferFee: number;\n  private internationalInterbankTransferFee: number;\n\n  public getMessageSetType(): MessageSetType {\n    return MessageSetType.interbank_transfer;\n  }\n\n  public getTransferProfile(): TransferProfile {\n    return this.transferProfile;\n  }\n\n  public setTransferProfile(transferProfile: TransferProfile): void {\n    this.transferProfile = transferProfile;\n  }\n\n  public getSupportsBillPay(): boolean {\n    return this.supportsBillPay;\n  }\n\n  public setSupportsBillPay(supportsBillPay: boolean): void {\n    this.supportsBillPay = supportsBillPay;\n  }\n\n  public getCancelWindow(): number {\n    return this.cancelWindow;\n  }\n\n  public setCancelWindow(cancelWindow: number): void {\n    this.cancelWindow = cancelWindow;\n  }\n\n  public getDomesticInterbankTransferFee(): number {\n    return this.domesticInterbankTransferFee;\n  }\n\n  public setDomesticInterbankTransferFee(domesticInterbankTransferFee: number): void {\n    this.domesticInterbankTransferFee = domesticInterbankTransferFee;\n  }\n\n  public getInternationalInterbankTransferFee(): number {\n    return this.internationalInterbankTransferFee;\n  }\n\n  public setInternationalInterbankTransferFee(internationalInterbankTransferFee: number): void {\n    this.internationalInterbankTransferFee = internationalInterbankTransferFee;\n  }\n}\n\nAggregate_add( InterbankTransferV1MessageSetInfo, \"INTERXFERMSGSETV1\" );\nChildAggregate_add(InterbankTransferV1MessageSetInfo, { name: \"XFERPROF\", required: true, order: 10, type: TransferProfile, read: InterbankTransferV1MessageSetInfo.prototype.getTransferProfile, write: InterbankTransferV1MessageSetInfo.prototype.setTransferProfile });\nElement_add(InterbankTransferV1MessageSetInfo, { name: \"CANBILLPAY\", required: true, order: 20, type: Boolean, read: InterbankTransferV1MessageSetInfo.prototype.getSupportsBillPay, write: InterbankTransferV1MessageSetInfo.prototype.setSupportsBillPay });\nElement_add(InterbankTransferV1MessageSetInfo, { name: \"CANCELWND\", required: true, order: 30, type: Number, read: InterbankTransferV1MessageSetInfo.prototype.getCancelWindow, write: InterbankTransferV1MessageSetInfo.prototype.setCancelWindow });\nElement_add(InterbankTransferV1MessageSetInfo, { name: \"DOMXFERFEE\", required: true, order: 40, type: Number, read: InterbankTransferV1MessageSetInfo.prototype.getDomesticInterbankTransferFee, write: InterbankTransferV1MessageSetInfo.prototype.setDomesticInterbankTransferFee });\nElement_add(InterbankTransferV1MessageSetInfo, { name: \"INTLXFERFEE\", required: true, order: 50, type: Number, read: InterbankTransferV1MessageSetInfo.prototype.getInternationalInterbankTransferFee, write: InterbankTransferV1MessageSetInfo.prototype.setInternationalInterbankTransferFee });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/info/InterbankTransferV1MessageSetInfo.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../../profile/AbstractMessageSetInfo'/>\n///<reference path='InterbankTransferV1MessageSetInfo'/>\n\nmodule ofx4js.domain.data.profile.info {\n\nimport AbstractMessageSetInfo = ofx4js.domain.data.profile.AbstractMessageSetInfo;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * @author Ryan Heaton\n */\nexport class InterbankTransferMessageSetInfo extends AbstractMessageSetInfo {\n\n  private version1Info: InterbankTransferV1MessageSetInfo;\n\n  public getVersion1Info(): InterbankTransferV1MessageSetInfo {\n    return this.version1Info;\n  }\n\n  public setVersion1Info(version1Info: InterbankTransferV1MessageSetInfo): void {\n    this.version1Info = version1Info;\n  }\n}\n\nAggregate_add( InterbankTransferMessageSetInfo, \"INTERXFERMSGSET\" );\nChildAggregate_add(InterbankTransferMessageSetInfo, { order: 0, type: InterbankTransferV1MessageSetInfo, read: InterbankTransferMessageSetInfo.prototype.getVersion1Info, write: InterbankTransferMessageSetInfo.prototype.setVersion1Info });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/info/InterbankTransferMessageSetInfo.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/Element_add'/>\n///<reference path='../../profile/VersionSpecificMessageSetInfo'/>\n\nmodule ofx4js.domain.data.profile.info {\n\nimport VersionSpecificMessageSetInfo = ofx4js.domain.data.profile.VersionSpecificMessageSetInfo;\nimport MessageSetType = ofx4js.domain.data.MessageSetType;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * @see \"Section 13.7.1.1, OFX Spec\"\n *\n * @author Jon Perlow\n * @author Ryan Heaton\n */\nexport class InvestmentV1MessageSetInfo extends VersionSpecificMessageSetInfo {\n\n  private supportsStatementsDownload: boolean;\n  private supportsOpenOrdersDownload: boolean;\n  private supportsPositionsDownload: boolean;\n  private supportsBalanceDownload: boolean;\n  private supportsEmail: boolean;\n  private supports401kInformation: boolean;\n  private supportsClosingStatements: boolean;\n\n  public getMessageSetType(): MessageSetType {\n    return MessageSetType.investment;\n  }\n\n  public getSupportsStatementsDownload(): boolean {\n    return this.supportsStatementsDownload;\n  }\n\n  public setSupportsStatementsDownload(supportsStatementsDownload: boolean): void {\n    this.supportsStatementsDownload = supportsStatementsDownload;\n  }\n\n  public getSupportsOpenOrdersDownload(): boolean {\n    return this.supportsOpenOrdersDownload;\n  }\n\n  public setSupportsOpenOrdersDownload(supportsOpenOrdersDownload: boolean): void {\n    this.supportsOpenOrdersDownload = supportsOpenOrdersDownload;\n  }\n\n  public getSupportsPositionsDownload(): boolean {\n    return this.supportsPositionsDownload;\n  }\n\n  public setSupportsPositionsDownload(supportsPositionsDownload: boolean): void {\n    this.supportsPositionsDownload = supportsPositionsDownload;\n  }\n\n  public getSupportsBalanceDownload(): boolean {\n    return this.supportsBalanceDownload;\n  }\n\n  public setSupportsBalanceDownload(supportsBalanceDownload: boolean): void {\n    this.supportsBalanceDownload = supportsBalanceDownload;\n  }\n\n  public getSupportsEmail(): boolean {\n    return this.supportsEmail;\n  }\n\n  public setSupportsEmail(supportsEmail: boolean): void {\n    this.supportsEmail = supportsEmail;\n  }\n\n  public getSupports401kInformation(): boolean {\n    return this.supports401kInformation;\n  }\n\n  public setSupports401kInformation(supports401kInformation: boolean): void {\n    this.supports401kInformation = supports401kInformation;\n  }\n\n  public getSupportsClosingStatements(): boolean {\n    return this.supportsClosingStatements;\n  }\n\n  public setSupportsClosingStatements(supportsClosingStatements: boolean): void {\n    this.supportsClosingStatements = supportsClosingStatements;\n  }\n}\n\nAggregate_add( InvestmentV1MessageSetInfo, \"INVSTMTMSGSETV1\" );\nElement_add(InvestmentV1MessageSetInfo, { name: \"TRANDNLD\", required:true, order: 10, type: Boolean, read: InvestmentV1MessageSetInfo.prototype.getSupportsStatementsDownload, write: InvestmentV1MessageSetInfo.prototype.setSupportsStatementsDownload });\nElement_add(InvestmentV1MessageSetInfo, { name: \"OODNLD\", required:true, order: 20, type: Boolean, read: InvestmentV1MessageSetInfo.prototype.getSupportsOpenOrdersDownload, write: InvestmentV1MessageSetInfo.prototype.setSupportsOpenOrdersDownload });\nElement_add(InvestmentV1MessageSetInfo, { name: \"POSDNLD\", required:true, order: 30, type: Boolean, read: InvestmentV1MessageSetInfo.prototype.getSupportsPositionsDownload, write: InvestmentV1MessageSetInfo.prototype.setSupportsPositionsDownload });\nElement_add(InvestmentV1MessageSetInfo, { name: \"BALDNLD\", required:true, order: 40, type: Boolean, read: InvestmentV1MessageSetInfo.prototype.getSupportsBalanceDownload, write: InvestmentV1MessageSetInfo.prototype.setSupportsBalanceDownload });\nElement_add(InvestmentV1MessageSetInfo, { name: \"CANEMAIL\", required:true, order: 50, type: Boolean, read: InvestmentV1MessageSetInfo.prototype.getSupportsEmail, write: InvestmentV1MessageSetInfo.prototype.setSupportsEmail });\nElement_add(InvestmentV1MessageSetInfo, { name: \"INV401KDNLD\", order: 60, type: Boolean, read: InvestmentV1MessageSetInfo.prototype.getSupports401kInformation, write: InvestmentV1MessageSetInfo.prototype.setSupports401kInformation });\nElement_add(InvestmentV1MessageSetInfo, { name: \"CLOSINGAVAIL\", order: 70, type: Boolean, read: InvestmentV1MessageSetInfo.prototype.getSupportsClosingStatements, write: InvestmentV1MessageSetInfo.prototype.setSupportsClosingStatements });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/info/InvestmentV1MessageSetInfo.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../../profile/AbstractMessageSetInfo'/>\n///<reference path='InvestmentV1MessageSetInfo'/>\n\nmodule ofx4js.domain.data.profile.info {\n\nimport AbstractMessageSetInfo = ofx4js.domain.data.profile.AbstractMessageSetInfo;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * @author Ryan Heaton\n */\nexport class InvestmentMessageSetInfo extends AbstractMessageSetInfo {\n\n  private version1Info: InvestmentV1MessageSetInfo;\n\n  public getVersion1Info(): InvestmentV1MessageSetInfo {\n    return this.version1Info;\n  }\n\n  public setVersion1Info(version1Info: InvestmentV1MessageSetInfo): void {\n    this.version1Info = version1Info;\n  }\n}\n\nAggregate_add( InvestmentMessageSetInfo, \"INVSTMTMSGSET\" );\nChildAggregate_add(InvestmentMessageSetInfo, { order: 0, type: InvestmentV1MessageSetInfo, read: InvestmentMessageSetInfo.prototype.getVersion1Info, write: InvestmentMessageSetInfo.prototype.setVersion1Info });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/info/InvestmentMessageSetInfo.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../profile/VersionSpecificMessageSetInfo'/>\n\nmodule ofx4js.domain.data.profile.info {\n\nimport VersionSpecificMessageSetInfo = ofx4js.domain.data.profile.VersionSpecificMessageSetInfo;\nimport MessageSetType = ofx4js.domain.data.MessageSetType;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\n\n/**\n * @author Ryan Heaton\n */\nexport class ProfileV1MessageSetInfo extends VersionSpecificMessageSetInfo {\n  public getMessageSetType(): MessageSetType {\n    return MessageSetType.profile;\n  }\n}\n\nAggregate_add( ProfileV1MessageSetInfo, \"PROFMSGSETV1\" );\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/info/ProfileV1MessageSetInfo.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../../profile/AbstractMessageSetInfo'/>\n///<reference path='ProfileV1MessageSetInfo'/>\n\nmodule ofx4js.domain.data.profile.info {\n\nimport AbstractMessageSetInfo = ofx4js.domain.data.profile.AbstractMessageSetInfo;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * @author Ryan Heaton\n */\nexport class ProfileMessageSetInfo extends AbstractMessageSetInfo {\n\n  private version1Info: ProfileV1MessageSetInfo;\n\n  public getVersion1Info(): ProfileV1MessageSetInfo {\n    return this.version1Info;\n  }\n\n  public setVersion1Info(version1Info: ProfileV1MessageSetInfo): void {\n    this.version1Info = version1Info;\n  }\n}\n\nAggregate_add( ProfileMessageSetInfo, \"PROFMSGSET\" );\nChildAggregate_add(ProfileMessageSetInfo, { order: 0, type: ProfileV1MessageSetInfo, read: ProfileMessageSetInfo.prototype.getVersion1Info, write: ProfileMessageSetInfo.prototype.setVersion1Info });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/info/ProfileMessageSetInfo.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/Element_add'/>\n///<reference path='../../profile/VersionSpecificMessageSetInfo'/>\n\nmodule ofx4js.domain.data.profile.info {\n\nimport VersionSpecificMessageSetInfo = ofx4js.domain.data.profile.VersionSpecificMessageSetInfo;\nimport MessageSetType = ofx4js.domain.data.MessageSetType;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * @see \"Section 13.7.2.1, OFX Spec\"\n *\n * @author Jon Perlow\n * @author Ryan Heaton\n */\nexport class SecurityListV1MessageSetInfo extends VersionSpecificMessageSetInfo {\n\n  private supportsSecurityListDownload: boolean;\n\n  public getMessageSetType(): MessageSetType {\n    return MessageSetType.investment_security;\n  }\n\n  public getSupportsSecurityListDownload(): boolean {\n    return this.supportsSecurityListDownload;\n  }\n\n  public setSupportsSecurityListDownload(supportsSecurityListDownload: boolean): void {\n    this.supportsSecurityListDownload = supportsSecurityListDownload;\n  }\n}\n\nAggregate_add( SecurityListV1MessageSetInfo, \"SECLISTMSGSETV1\" );\nElement_add(SecurityListV1MessageSetInfo, { name: \"SECLISTRQDNLD\", required:true, order: 10, type: Boolean, read: SecurityListV1MessageSetInfo.prototype.getSupportsSecurityListDownload, write: SecurityListV1MessageSetInfo.prototype.setSupportsSecurityListDownload });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/info/SecurityListV1MessageSetInfo.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../../profile/AbstractMessageSetInfo'/>\n///<reference path='SecurityListV1MessageSetInfo'/>\n\nmodule ofx4js.domain.data.profile.info {\n\nimport AbstractMessageSetInfo = ofx4js.domain.data.profile.AbstractMessageSetInfo;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * @author Ryan Heaton\n */\nexport class SecurityListMessageSetInfo extends AbstractMessageSetInfo {\n\n  private version1Info: SecurityListV1MessageSetInfo;\n\n  public getVersion1Info(): SecurityListV1MessageSetInfo {\n    return this.version1Info;\n  }\n\n  public setVersion1Info(version1Info: SecurityListV1MessageSetInfo): void {\n    this.version1Info = version1Info;\n  }\n}\n\nAggregate_add( SecurityListMessageSetInfo, \"SECLISTMSGSET\" );\nChildAggregate_add(SecurityListMessageSetInfo, { order: 0, type: SecurityListV1MessageSetInfo, read: SecurityListMessageSetInfo.prototype.getVersion1Info, write: SecurityListMessageSetInfo.prototype.setVersion1Info });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/info/SecurityListMessageSetInfo.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../profile/VersionSpecificMessageSetInfo'/>\n\nmodule ofx4js.domain.data.profile.info {\n\nimport MessageSetType = ofx4js.domain.data.MessageSetType;\nimport VersionSpecificMessageSetInfo = ofx4js.domain.data.profile.VersionSpecificMessageSetInfo;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\n\n/**\n * @author Jon Perlow\n */\nexport class SignOnV1MessageSetInfo extends VersionSpecificMessageSetInfo {\n  \n  public getMessageSetType(): MessageSetType {\n    return MessageSetType.signon;\n  }\n}\n\nAggregate_add( SignOnV1MessageSetInfo, \"SIGNONMSGSETV1\" );\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/info/SignOnV1MessageSetInfo.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../../profile/AbstractMessageSetInfo'/>\n///<reference path='SignOnV1MessageSetInfo'/>\n\nmodule ofx4js.domain.data.profile.info {\n\nimport AbstractMessageSetInfo = ofx4js.domain.data.profile.AbstractMessageSetInfo;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * @author Jon Perlow\n */\nexport class SignOnMessageSetInfo extends AbstractMessageSetInfo {\n  private version1Info: SignOnV1MessageSetInfo;\n\n  public getVersion1Info(): SignOnV1MessageSetInfo {\n    return this.version1Info;\n  }\n\n  public setVersion1Info(version1Info: SignOnV1MessageSetInfo): void {\n    this.version1Info = version1Info;\n  }\n\n}\n\nAggregate_add( SignOnMessageSetInfo, \"SIGNONMSGSET\" );\nChildAggregate_add(SignOnMessageSetInfo, { order: 0, type: SignOnV1MessageSetInfo, read: SignOnMessageSetInfo.prototype.getVersion1Info, write: SignOnMessageSetInfo.prototype.setVersion1Info });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/info/SignOnMessageSetInfo.ts","/*\n * Copyright 2012 TheStash\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../../meta/Aggregate_add'/>\n///<reference path='../../../../../meta/Element_add'/>\n\nmodule ofx4js.domain.data.profile.info.signup {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Client Enrollment option, contains indicator as to whether the account number is required as part of enrollment\n * @author Scott Priddy\n * @see \"Section 8.8 OFX Spec\"\n */\nexport class ClientEnrollment {\n\n  private accountRequired: boolean;\n\n  /**\n   * Y if account number is required as part of enrollment\n   * @return Boolean\n   */\n  public getAccountRequired(): boolean {\n    return this.accountRequired;\n  }\n\n  public setAccountRequired(accountRequired: boolean): void {\n    this.accountRequired = accountRequired;\n  }\n\n}\n\nAggregate_add( ClientEnrollment, \"CLIENTENROLL\" );\nElement_add(ClientEnrollment, { name: \"ACCTREQUIRED\", required: true, order: 0, type: Boolean, read: ClientEnrollment.prototype.getAccountRequired, write: ClientEnrollment.prototype.setAccountRequired });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/info/signup/ClientEnrollment.ts","/*\n * Copyright 2012 TheStash\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../../meta/Aggregate_add'/>\n///<reference path='../../../../../meta/Element_add'/>\n\nmodule ofx4js.domain.data.profile.info.signup {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Other Enrollment option containing a text message directing users to some other method (such as a phone call)\n * @author Scott Priddy\n * @see \"Section 8.8 OFX Spec\"\n */\nexport class OtherEnrollment {\n\n  private message: string;\n\n  /**\n   * Message to consumer about what to do next (for example, a phone number),\n   * @return String\n   */\n  public getMessage(): string {\n    return this.message;\n  }\n\n  public setMessage(message: string): void {\n    this.message = message;\n  }\n}\n\nAggregate_add( OtherEnrollment, \"OTHERENROLL\" );\nElement_add(OtherEnrollment, { name: \"MESSAGE\", required: true, order: 0, type: String, read: OtherEnrollment.prototype.getMessage, write: OtherEnrollment.prototype.setMessage });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/info/signup/OtherEnrollment.ts","/*\n * Copyright 2012 TheStash\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../../meta/Aggregate_add'/>\n///<reference path='../../../../../meta/Element_add'/>\n\nmodule ofx4js.domain.data.profile.info.signup {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Web Enrollment option containing URL to direct user for web based enrollment, if supported.\n * @author Scott Priddy\n * @see \"Section 8.8 OFX Spec\"\n */\nexport class WebEnrollment {\n\n  private url: string;\n\n  /**\n   * URL to start enrollment process\n   * @return String\n   */\n  public getUrl(): string {\n    return this.url;\n  }\n\n  public setUrl(url: string): void {\n    this.url = url;\n  }\n\n}\n\nAggregate_add( WebEnrollment, \"WEBENROLL\" );\nElement_add(WebEnrollment, { name: \"URL\", required: true, order: 0, type: String, read: WebEnrollment.prototype.getUrl, write: WebEnrollment.prototype.setUrl });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/info/signup/WebEnrollment.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../../../../meta/Element_add'/>\n///<reference path='../../profile/VersionSpecificMessageSetInfo'/>\n///<reference path='../../profile/info/signup/ClientEnrollment'/>\n///<reference path='../../profile/info/signup/OtherEnrollment'/>\n///<reference path='../../profile/info/signup/WebEnrollment'/>\n\nmodule ofx4js.domain.data.profile.info {\n\nimport VersionSpecificMessageSetInfo = ofx4js.domain.data.profile.VersionSpecificMessageSetInfo;\nimport MessageSetType = ofx4js.domain.data.MessageSetType;\nimport ClientEnrollment = ofx4js.domain.data.profile.info.signup.ClientEnrollment;\nimport OtherEnrollment = ofx4js.domain.data.profile.info.signup.OtherEnrollment;\nimport WebEnrollment = ofx4js.domain.data.profile.info.signup.WebEnrollment;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Servers use the Signup Message Set Profile Information to define how enrollment should proceed.\n *\n * This aggregate should contain 1 Enrollment option among <CLIENTENROLL>, <WEBENROLL>, or <OTHERENROLL>.\n * todo: review how best to enforce this constraint\n *\n * @author Scott Priddy\n * @author Ryan Heaton\n * @see \"Section 8.8 OFX Spec\"\n */\nexport class SignupV1MessageSetInfo extends VersionSpecificMessageSetInfo {\n\n  private clientEnrollment: ClientEnrollment;\n  private webEnrollment: WebEnrollment;\n  private otherEnrollment: OtherEnrollment;\n  private supportsClientUserInfoChanges: boolean;\n  private supportsAvailableAccounts: boolean;\n  private supportsClientServiceActivationRequests: boolean;\n\n  public getMessageSetType(): MessageSetType {\n    return MessageSetType.signup;\n  }\n\n  public getClientEnrollment(): ClientEnrollment {\n    return this.clientEnrollment;\n  }\n\n  public setClientEnrollment(clientEnrollment: ClientEnrollment): void {\n    this.clientEnrollment = clientEnrollment;\n  }\n\n  public getWebEnrollment(): WebEnrollment {\n    return this.webEnrollment;\n  }\n\n  public setWebEnrollment(webEnrollment: WebEnrollment): void {\n    this.webEnrollment = webEnrollment;\n  }\n\n  public getOtherEnrollment(): OtherEnrollment {\n    return this.otherEnrollment;\n  }\n\n  public setOtherEnrollment(otherEnrollment: OtherEnrollment): void {\n    this.otherEnrollment = otherEnrollment;\n  }\n\n  /**\n   * Y if server supports client-based user information changes,\n   * @return Boolean\n   */\n  public getSupportsClientUserInfoChanges(): boolean {\n    return this.supportsClientUserInfoChanges;\n  }\n\n  public setSupportsClientUserInfoChanges(supportsClientUserInfoChanges: boolean): void {\n    this.supportsClientUserInfoChanges = supportsClientUserInfoChanges;\n  }\n\n  /**\n   * Y if server can provide information on accounts with SVCSTATUS available,\n   * N means client should expect to ask user for specific account information\n   * @return Boolean\n   */\n  public getSupportsAvailableAccounts(): boolean {\n    return this.supportsAvailableAccounts;\n  }\n\n  public setSupportsAvailableAccounts(supportsAvailableAccounts: boolean): void {\n    this.supportsAvailableAccounts = supportsAvailableAccounts;\n  }\n\n  /**\n   * Y if server allows clients to make service activation requests (<ACCTRQ>),\n   * N if server will only advise clients via synchronization of service additions,\n   * changes, or deletions.\n   * @return Boolean\n   */\n  public getSupportsClientServiceActivationRequests(): boolean {\n    return this.supportsClientServiceActivationRequests;\n  }\n\n  public setSupportsClientServiceActivationRequests(supportsClientServiceActivationRequests: boolean): void {\n    this.supportsClientServiceActivationRequests = supportsClientServiceActivationRequests;\n  }\n}\n\nAggregate_add( SignupV1MessageSetInfo, \"SIGNUPMSGSETV1\" );\nChildAggregate_add(SignupV1MessageSetInfo, { name: \"CLIENTENROLL\", order: 10, type: ClientEnrollment, read: SignupV1MessageSetInfo.prototype.getClientEnrollment, write: SignupV1MessageSetInfo.prototype.setClientEnrollment });\nChildAggregate_add(SignupV1MessageSetInfo, { name: \"WEBENROLL\", order: 20, type: WebEnrollment, read: SignupV1MessageSetInfo.prototype.getWebEnrollment, write: SignupV1MessageSetInfo.prototype.setWebEnrollment });\nChildAggregate_add(SignupV1MessageSetInfo, { name: \"OTHERENROLL\", order: 30, type: OtherEnrollment, read: SignupV1MessageSetInfo.prototype.getOtherEnrollment, write: SignupV1MessageSetInfo.prototype.setOtherEnrollment });\nElement_add(SignupV1MessageSetInfo, { name: \"CHGUSERINFO\", required: true, order: 40, type: Boolean, read: SignupV1MessageSetInfo.prototype.getSupportsClientUserInfoChanges, write: SignupV1MessageSetInfo.prototype.setSupportsClientUserInfoChanges });\nElement_add(SignupV1MessageSetInfo, { name: \"AVAILACCTS\", required: true, order: 50, type: Boolean, read: SignupV1MessageSetInfo.prototype.getSupportsAvailableAccounts, write: SignupV1MessageSetInfo.prototype.setSupportsAvailableAccounts });\nElement_add(SignupV1MessageSetInfo, { name: \"CLIENTACTREQ\", required: true, order: 60, type: Boolean, read: SignupV1MessageSetInfo.prototype.getSupportsClientServiceActivationRequests, write: SignupV1MessageSetInfo.prototype.setSupportsClientServiceActivationRequests });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/info/SignupV1MessageSetInfo.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../../profile/AbstractMessageSetInfo'/>\n///<reference path='SignupV1MessageSetInfo'/>\n\nmodule ofx4js.domain.data.profile.info {\n\nimport AbstractMessageSetInfo = ofx4js.domain.data.profile.AbstractMessageSetInfo;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * @author Ryan Heaton\n */\nexport class SignupMessageSetInfo extends AbstractMessageSetInfo {\n\n  private version1Info: SignupV1MessageSetInfo;\n\n  public getVersion1Info(): SignupV1MessageSetInfo {\n    return this.version1Info;\n  }\n\n  public setVersion1Info(version1Info: SignupV1MessageSetInfo): void {\n    this.version1Info = version1Info;\n  }\n}\n\nAggregate_add( SignupMessageSetInfo, \"SIGNUPMSGSET\" );\nChildAggregate_add(SignupMessageSetInfo, { order: 0, type: SignupV1MessageSetInfo, read: SignupMessageSetInfo.prototype.getVersion1Info, write: SignupMessageSetInfo.prototype.setVersion1Info });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/info/SignupMessageSetInfo.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/Element_add'/>\n///<reference path='../../common/ProcessorDayOff'/>\n///<reference path='../../profile/VersionSpecificMessageSetInfo'/>\n\nmodule ofx4js.domain.data.profile.info {\n\nimport ProcessorDayOff = ofx4js.domain.data.common.ProcessorDayOff;\nimport VersionSpecificMessageSetInfo = ofx4js.domain.data.profile.VersionSpecificMessageSetInfo;\nimport MessageSetType = ofx4js.domain.data.MessageSetType;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Wire Transfer Message Set Profile\n * @author Scott Priddy\n * @author Ryan Heaton\n * @see \"Section 11.13.5 OFX Spec\"\n */\nexport class WireTransferV1MessageSetInfo extends VersionSpecificMessageSetInfo {\n\n  private processorDaysOff: Array<ProcessorDayOff>;\n  private processEndTime: string;\n  private supportsScheduledTransfers: boolean;\n  private domesticWireTransferFee: number;\n  private internationalWireTransferFee: number;\n\n  public getMessageSetType(): MessageSetType {\n    return MessageSetType.wire_transfer;\n  }\n\n  public getProcessorDaysOff(): Array<ProcessorDayOff> {\n    return this.processorDaysOff;\n  }\n\n  public setProcessorDaysOff(processorDaysOff: Array<ProcessorDayOff>): void {\n    this.processorDaysOff = processorDaysOff;\n  }\n\n  public getProcessEndTime(): string {\n    return this.processEndTime;\n  }\n\n  public setProcessEndTime(processEndTime: string): void {\n    this.processEndTime = processEndTime;\n  }\n\n  public getSupportsScheduledTransfers(): boolean {\n    return this.supportsScheduledTransfers;\n  }\n\n  public setSupportsScheduledTransfers(supportsScheduledTransfers: boolean): void {\n    this.supportsScheduledTransfers = supportsScheduledTransfers;\n  }\n\n  public getDomesticWireTransferFee(): number {\n    return this.domesticWireTransferFee;\n  }\n\n  public setDomesticWireTransferFee(domesticWireTransferFee: number): void {\n    this.domesticWireTransferFee = domesticWireTransferFee;\n  }\n\n  public getInternationalWireTransferFee(): number {\n    return this.internationalWireTransferFee;\n  }\n\n  public setInternationalWireTransferFee(internationalWireTransferFee: number): void {\n    this.internationalWireTransferFee = internationalWireTransferFee;\n  }\n}\n\nAggregate_add( WireTransferV1MessageSetInfo, \"WIREXFERMSGSETV1\" );\nElement_add(WireTransferV1MessageSetInfo, { name: \"PROCDAYSOFF\", order: 10, type: Array, collectionEntryType: ProcessorDayOff, read: WireTransferV1MessageSetInfo.prototype.getProcessorDaysOff, write: WireTransferV1MessageSetInfo.prototype.setProcessorDaysOff });\nElement_add(WireTransferV1MessageSetInfo, { name: \"PROCENDTM\", required: true, order: 20, type: String, read: WireTransferV1MessageSetInfo.prototype.getProcessEndTime, write: WireTransferV1MessageSetInfo.prototype.setProcessEndTime });\nElement_add(WireTransferV1MessageSetInfo, { name: \"CANSCHED\", required: true, order: 30, type: Boolean, read: WireTransferV1MessageSetInfo.prototype.getSupportsScheduledTransfers, write: WireTransferV1MessageSetInfo.prototype.setSupportsScheduledTransfers });\nElement_add(WireTransferV1MessageSetInfo, { name: \"DOMXFERFEE\", required: true, order: 40, type: Number, read: WireTransferV1MessageSetInfo.prototype.getDomesticWireTransferFee, write: WireTransferV1MessageSetInfo.prototype.setDomesticWireTransferFee });\nElement_add(WireTransferV1MessageSetInfo, { name: \"INTLXFERFEE\", required: true, order: 50, type: Number, read: WireTransferV1MessageSetInfo.prototype.getInternationalWireTransferFee, write: WireTransferV1MessageSetInfo.prototype.setInternationalWireTransferFee });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/info/WireTransferV1MessageSetInfo.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../../meta/Aggregate_add'/>\n///<reference path='../../../../meta/ChildAggregate_add'/>\n///<reference path='../../profile/AbstractMessageSetInfo'/>\n///<reference path='WireTransferV1MessageSetInfo'/>\n\nmodule ofx4js.domain.data.profile.info {\n\nimport AbstractMessageSetInfo = ofx4js.domain.data.profile.AbstractMessageSetInfo;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * @author Ryan Heaton\n */\nexport class WireTransferMessageSetInfo extends AbstractMessageSetInfo {\n\n  private version1Info: WireTransferV1MessageSetInfo;\n\n  public getVersion1Info(): WireTransferV1MessageSetInfo {\n    return this.version1Info;\n  }\n\n  public setVersion1Info(version1Info: WireTransferV1MessageSetInfo): void {\n    this.version1Info = version1Info;\n  }\n}\n\nAggregate_add( WireTransferMessageSetInfo, \"WIREXFERMSGSET\" );\nChildAggregate_add(WireTransferMessageSetInfo, { order: 0, type: WireTransferV1MessageSetInfo, read: WireTransferMessageSetInfo.prototype.getVersion1Info, write: WireTransferMessageSetInfo.prototype.setVersion1Info });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/profile/info/WireTransferMessageSetInfo.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nmodule ofx4js.domain.data.seclist {\n\n/**\n * Asset class for debt.\n * @see \"Section 13.8.5.7, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum AssetClass {\n  /**\n   * Government or corporate bonds issued in the United States.\n   */\n  DOMESTIC_BOND,\n\n  /**\n   * Government or corporate bonds issued in foreign countries or the United States.\n   */\n  INTL_BOND,\n\n  /**\n   * Stocks for US companies with market caps of $2B or more.\n   */\n  LARGE_STOCK,\n\n  /**\n   * Stocks for US companies with market caps of ~$100M to $2B.\n   */\n  SMALL_STOCK,\n\n  /**\n   * Publicallt traded stocks for companies based in foreign countries.\n   */\n  INTL_STOCK,\n\n  /**\n   * Stable, short-term investments which provide income that rises and falls with short-term\n   * interest rates.\n   */\n  MONEY_MARKET,\n\n  /**\n   * Investments which do not fit into any of the other types.\n   */\n  OTHER\n}\n\nexport function AssetClass_fromOfx(ofxVal: string): AssetClass {\n  if (\"DOMESTICBOND\" === ofxVal) {\n    return AssetClass.DOMESTIC_BOND;\n  } else if (\"INTLBOND\" === ofxVal) {\n    return AssetClass.INTL_BOND;\n  } else if (\"LARGESTOCK\" === ofxVal) {\n    return AssetClass.LARGE_STOCK;\n  } else if (\"SMALLSTOCK\" === ofxVal) {\n    return AssetClass.SMALL_STOCK;\n  } else if (\"INTLSTOCK\" === ofxVal) {\n    return AssetClass.INTL_STOCK;\n  } else if (\"MONEYMARKET\" === ofxVal) {\n    return AssetClass.MONEY_MARKET;\n  } else if (\"OTHER\" === ofxVal) {\n    return AssetClass.OTHER;\n  } else {\n    return null;\n  }\n}\n\n}\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/seclist/AssetClass.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule ofx4js.domain.data.seclist {\n\n/**\n * Call type for debt.\n * @see \"Section 13.8.5.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum CallType {\n  CALL,\n  PUT,\n  PREFUND,\n  MATURITY\n}\n\nexport function CallType_fromOfx(ofxVal: string): CallType {\n  if (\"CALL\" === ofxVal) {\n    return CallType.CALL;\n  } else if (\"PUT\" === ofxVal) {\n    return CallType.PUT;\n  } else if (\"PREFUND\" === ofxVal) {\n    return CallType.PREFUND;\n  } else if (\"MATURITY\" === ofxVal) {\n    return CallType.MATURITY;\n  } else {\n    return null;\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/seclist/CallType.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule ofx4js.domain.data.seclist {\n\n/**\n * Coupon freqency for debt.\n * @see \"Section 13.8.5.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum CouponFrequency {\n  MONTHLY,\n  QUARTERLY,\n  SEMIANNUAL,\n  ANNUAL,\n  OTHER\n}\n\nexport function CouponFrequency_fromOfx(ofxVal: string): CouponFrequency {\n  if (\"MONTHLY\" === ofxVal) {\n    return CouponFrequency.MONTHLY;\n  } else if (\"QUARTERLY\" === ofxVal) {\n    return CouponFrequency.QUARTERLY;\n  } else if (\"SEMIANNUAL\" === ofxVal) {\n    return CouponFrequency.SEMIANNUAL;\n  } else if (\"ANNUAL\" === ofxVal) {\n    return CouponFrequency.ANNUAL;\n  } else if (\"OTHER\" === ofxVal) {\n    return CouponFrequency.OTHER;\n  } else {\n    return null;\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/seclist/CouponFrequency.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule ofx4js.domain.data.seclist {\n\n/**\n * The class of debt.\n * @see \"Section 13.8.5.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum DebtClass {\n  TREASURY,\n  MUNICIPAL,\n  CORPORATE,\n  OTHER\n}\n\nexport function DebtClass_fromOfx(ofxVal: string): DebtClass {\n  if (\"TREASURY\" === ofxVal) {\n    return DebtClass.TREASURY;\n  } else if (\"MUNICIPAL\" === ofxVal) {\n    return DebtClass.MUNICIPAL;\n  } else if (\"CORPORATE\" === ofxVal) {\n    return DebtClass.CORPORATE;\n  } else if (\"OTHER\" === ofxVal) {\n    return DebtClass.OTHER;\n  } else {\n    return null;\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/seclist/DebtClass.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule ofx4js.domain.data.seclist {\n\n/**\n * The type of debt.\n * @see \"Section 13.8.5.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum DebtType {\n  COUPON,\n  ZERO\n}\n\nexport function DebtType_fromOfx(ofxVal: string): DebtType {\n  if (\"COUPON\" === ofxVal) {\n    return DebtType.COUPON;\n  } else if (\"ZERO\" === ofxVal) {\n    return DebtType.ZERO;\n  } else {\n    return null;\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/seclist/DebtType.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n///<reference path='BaseSecurityInfo'/>\n///<reference path='DebtType'/>\n///<reference path='DebtClass'/>\n///<reference path='CouponFrequency'/>\n///<reference path='CallType'/>\n///<reference path='AssetClass'/>\n\nmodule ofx4js.domain.data.seclist {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Info about a debt security.\n * @see \"Section 13.8.5.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class DebtSecurityInfo extends BaseSecurityInfo {\n\n  private parValue: number;\n  private debtType: string;\n  private debtClass: string;\n  private couponRate: number;\n  private nextMaturityDate: Date;\n  private couponFrequency: string;\n  private callPrice: number;\n  private yieldToCall: number;\n  private nextCallDate: Date;\n  private callType: string;\n  private yieldToMaturity: number;\n  private debtMaturityDate: Date;\n  private assetClass: string;\n  private fiAssetClass: string;\n\n  /**\n   * Gets the par value of the debt. This is a required field according to the OFX spec.\n   *\n   * @return the par value of the debt\n   */\n  public getParValue(): number {\n    return this.parValue;\n  }\n\n  /**\n   * Sets the par value of the debt. This is a required field according to the OFX spec.\n   *\n   * @param parValue the par value of the debt\n   */\n  public setParValue(parValue: number): void {\n    this.parValue = parValue;\n  }\n\n  /**\n   * Gets the type of debt. One of \"COUPON\" or \"ZERO\". This is a required field according to the\n   * OFX spec.\n   *\n   * @return the type of debt\n   */\n  public getDebtType(): string {\n    return this.debtType;\n  }\n\n  /**\n   * Sets the type of debt. One of \"COUPON\" or \"ZERO\". This is a required field according to the\n   * OFX spec.\n   *\n   * @param debtType the type of debt\n   */\n  public setDebtType(debtType: string): void {\n    this.debtType = debtType;\n  }\n\n  /**\n   * Gets the type of debt as one of the well-known types.\n   *\n   * @return the type of debt or null if it's not one of the well-known types\n   */\n  public getDebtTypeEnum(): DebtType {\n    return DebtType_fromOfx(this.getDebtType());\n  }\n\n  /**\n   * Gets the class of debt. One of \"TREASURY\", \"MUNICIPAL\", \"CORPORATE\", or \"OTHER\".\n   * This is an optional field according to the OFX spec.\n   *\n   * @return the class of debt\n   */\n  public getDebtClass(): string {\n    return this.debtClass;\n  }\n\n  /**\n   * Sets the class of debt. One of \"TREASURY\", \"MUNICIPAL\", \"CORPORATE\", or \"OTHER\".\n   * This is an optional field according to the OFX spec.\n   *\n   * @param debtClass the class of debt\n   */\n  public setDebtClass(debtClass: string): void {\n    this.debtClass = debtClass;\n  }\n\n  /**\n   * Gets the class of debt as one of the well-known types.\n   *\n   * @return the class of debt or null if it's not one of the well-known types\n   */\n  public getDebtClassEnum(): DebtClass {\n    return DebtClass_fromOfx(this.debtClass);\n  }\n\n  /**\n   * Gets the coupon rate of the debt for the next closest call date.\n   * This is an optional field according to the OFX spec.\n   *\n   * @return the coupon rate\n   */\n  public getCouponRate(): number {\n    return this.couponRate;\n  }\n\n  /**\n   * Sets the coupon rate of the debt for the next closest call date.\n   * This is an optional field according to the OFX spec.\n   *\n   * @param couponRate the coupon rate\n   */\n  public setCouponRate(couponRate: number): void {\n    this.couponRate = couponRate;\n  }\n\n  /**\n   * Gets the next maturity date for the next coupon.\n   * This is an optional field according to the OFX spec.\n   *\n   * @return the maturity date for the next coupon\n   */\n  public getNextMaturityDate(): Date {\n    return this.nextMaturityDate;\n  }\n\n  /**\n   * Sets the next maturity date for the next coupon.\n   * This is an optional field according to the OFX spec.\n   *\n   * @param nextMaturityDate the maturity date for the next coupon.\n   */\n  public setNextMaturityDate(nextMaturityDate: Date): void {\n    this.nextMaturityDate = nextMaturityDate;\n  }\n\n  /**\n   * Gets the coupon frequency. One of \"MONTHLY\", \"QUARTERLY\", \"SEMIANNUAL\", \"ANNUAL\", or \"OTHER\".\n   * This is an optional field according to the OFX spec.\n   *\n   * @return the coupon frequency\n   */\n  public getCouponFrequency(): string {\n    return this.couponFrequency;\n  }\n\n  /**\n   * Sets the coupon frequency. One of \"MONTHLY\", \"QUARTERLY\", \"SEMIANNUAL\", \"ANNUAL\", or \"OTHER\".\n   * This is an optional field according to the OFX spec.\n   *\n   * @param couponFrequency the coupon frequency\n   */\n  public setCouponFrequency(couponFrequency: string): void {\n    this.couponFrequency = couponFrequency;\n  }\n\n  /**\n   * Gets the coupon frequency as one of the well-known types.\n   *\n   * @return the coupon frequency or null if it's not one of the well-known types\n   */\n  public getCouponFrequencyEnum(): CouponFrequency {\n    return CouponFrequency_fromOfx(this.getCouponFrequency());\n  }\n\n  /**\n   * Gets the bond price. This is an optional field according to the OFX spec.\n   *\n   * @return the bond price\n   */\n  public getCallPrice(): number {\n    return this.callPrice;\n  }\n\n  /**\n   * Sets the bond price. This is an optional field according to the OFX spec.\n   *\n   * @param callPrice the bond price\n   */\n  public setCallPrice(callPrice: number): void {\n    this.callPrice = callPrice;\n  }\n\n  /**\n   * Gets the yield to call as a rate. This is an optional field according to the OFX spec.\n   *\n   * @return the yield to call rate\n   */\n  public getYieldToCall(): number {\n    return this.yieldToCall;\n  }\n\n  /**\n   * Sets the yield to call as a rate. This is an optional field according to the OFX spec.\n   *\n   * @param yieldToCall the yield to call rate\n   */\n  public setYieldToCall(yieldToCall: number): void {\n    this.yieldToCall = yieldToCall;\n  }\n\n  /**\n   * Gets the next call date. This is an optional field according to the OFX spec.\n   *\n   * @return the next call date.\n   */\n  public getNextCallDate(): Date {\n    return this.nextCallDate;\n  }\n\n  /**\n   * Sets the next call date. This is an optional field according to the OFX spec.\n   *\n   * @param nextCallDate the next call date.\n   */\n  public setNextCallDate(nextCallDate: Date): void {\n    this.nextCallDate = nextCallDate;\n  }\n\n  /**\n   * Gets the type of call.\n   *\n   * @return the type of call\n   */\n  public getCallType(): string {\n    return this.callType;\n  }\n\n  /**\n   * Sets the type of call.\n   *\n   * @param callType the type of call\n   */\n  public setCallType(callType: string): void {\n    this.callType = callType;\n  }\n\n  /**\n   * Gets the type of call as one of the well-known types.\n   *\n   * @return the type of call or null if it's not one of the well-known types\n   */\n  public getCallTypeEnum(): CallType {\n    return CallType_fromOfx(this.getCallType());\n  }\n\n  /**\n   * Gets the yield to maturity as a rate. This is an optional field according to the OFX spec.\n   *\n   * @return the yield to call rate\n   */\n  public getYieldToMaturity(): number {\n    return this.yieldToMaturity;\n  }\n\n  /**\n   * Sets the yield to maturity as a rate. This is an optional field according to the OFX spec.\n   *\n   * @param yieldToMaturity the yield to call rate\n   */\n  public setYieldToMaturity(yieldToMaturity: number): void {\n    this.yieldToMaturity = yieldToMaturity;\n  }\n\n  /**\n   * Gets the date when the debt matures. This is an optional field according to the OFX spec.\n   *\n   * @return the date when the debt matures\n   */\n  public getDebtMaturityDate(): Date {\n    return this.debtMaturityDate;\n  }\n\n  /**\n   * Sets the date when the debt matures. This is an optional field according to the OFX spec.\n   *\n   * @param debtMaturityDate the date when the debt matures\n   */\n  public setDebtMaturityDate(debtMaturityDate: Date): void {\n    this.debtMaturityDate = debtMaturityDate;\n  }\n\n  /**\n   * Gets the asset class of the debt. This is an optional field according to the OFX spec.\n   *\n   * @return the asset class of the debt\n   */\n  public getAssetClass(): string {\n    return this.assetClass;\n  }\n\n  /**\n   * Sets the asset class of the debt. This is an optional field according to the OFX spec.\n   *\n   * @param assetClass the asset class of the debt\n   */\n  public setAssetClass(assetClass: string): void {\n    this.assetClass = assetClass;\n  }\n\n  /**\n   * Gets the assert class as one of the well-known types.\n   *\n   * @return the asset class or null if it's not one of the well-known types\n   */\n  public getAssetClassEnum(): AssetClass {\n    return AssetClass_fromOfx(this.getAssetClass());\n  }\n\n  /**\n   * Gets the FI-defined asset class of the debt. This is an optional field according to the OFX\n   * spec.\n   *\n   * @return the FI-defined asset class of the debt\n   */\n  public getFiAssetClass(): string {\n    return this.fiAssetClass;\n  }\n\n  /**\n   * Sets the FI-defined asset class of the debt. This is an optional field according to the OFX\n   * spec.\n   *\n   * @param fiAssetClass the FI-defined asset class of the debt\n   */\n  public setFiAssetClass(fiAssetClass: string): void {\n    this.fiAssetClass = fiAssetClass;\n  }\n}\n\nAggregate_add( DebtSecurityInfo, \"DEBTINFO\" );\nElement_add(DebtSecurityInfo, { name: \"PARVALUE\", required:true, order: 20, type: Number, read: DebtSecurityInfo.prototype.getParValue, write: DebtSecurityInfo.prototype.setParValue });\nElement_add(DebtSecurityInfo, { name: \"DEBTTYPE\", required:true, order: 30, type: String, read: DebtSecurityInfo.prototype.getDebtType, write: DebtSecurityInfo.prototype.setDebtType });\nElement_add(DebtSecurityInfo, { name: \"DEBTCLASS\", order: 40, type: String, read: DebtSecurityInfo.prototype.getDebtClass, write: DebtSecurityInfo.prototype.setDebtClass });\nElement_add(DebtSecurityInfo, { name: \"COUPONRT\", order: 50, type: Number, read: DebtSecurityInfo.prototype.getCouponRate, write: DebtSecurityInfo.prototype.setCouponRate });\nElement_add(DebtSecurityInfo, { name: \"DTCOUPON\", order: 60, type: Date, read: DebtSecurityInfo.prototype.getNextMaturityDate, write: DebtSecurityInfo.prototype.setNextMaturityDate });\nElement_add(DebtSecurityInfo, { name: \"COUPONFREQ\", order: 70, type: String, read: DebtSecurityInfo.prototype.getCouponFrequency, write: DebtSecurityInfo.prototype.setCouponFrequency });\nElement_add(DebtSecurityInfo, { name: \"CALLPRICE\", order: 80, type: Number, read: DebtSecurityInfo.prototype.getCallPrice, write: DebtSecurityInfo.prototype.setCallPrice });\nElement_add(DebtSecurityInfo, { name: \"YIELDTOCALL\", order: 90, type: Number, read: DebtSecurityInfo.prototype.getYieldToCall, write: DebtSecurityInfo.prototype.setYieldToCall });\nElement_add(DebtSecurityInfo, { name: \"DTCALL\", order: 100, type: Date, read: DebtSecurityInfo.prototype.getNextCallDate, write: DebtSecurityInfo.prototype.setNextCallDate });\nElement_add(DebtSecurityInfo, { name: \"CALLTYPE\", order: 110, type: String, read: DebtSecurityInfo.prototype.getCallType, write: DebtSecurityInfo.prototype.setCallType });\nElement_add(DebtSecurityInfo, { name: \"YIELDTOMAT\", order: 120, type: Number, read: DebtSecurityInfo.prototype.getYieldToMaturity, write: DebtSecurityInfo.prototype.setYieldToMaturity });\nElement_add(DebtSecurityInfo, { name: \"DTMAT\", order: 130, type: Date, read: DebtSecurityInfo.prototype.getDebtMaturityDate, write: DebtSecurityInfo.prototype.setDebtMaturityDate });\nElement_add(DebtSecurityInfo, { name: \"ASSETCLASS\", order: 140, type: String, read: DebtSecurityInfo.prototype.getAssetClass, write: DebtSecurityInfo.prototype.setAssetClass });\nElement_add(DebtSecurityInfo, { name: \"FIASSETCLASS\", order: 150, type: String, read: DebtSecurityInfo.prototype.getFiAssetClass, write: DebtSecurityInfo.prototype.setFiAssetClass });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/seclist/DebtSecurityInfo.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule ofx4js.domain.data.seclist {\n\n/**\n * The type of mutual fund.\n * @see \"Section 13.8.5.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum MutualFundType {\n  OPEN_END,\n  CLOSE_END,\n  OTHER\n}\n\nexport function MutualFundType_fromOfx(ofxVal: string): MutualFundType {\n  if (\"OPENEND\" === ofxVal) {\n    return MutualFundType.OPEN_END;\n  } else if (\"CLOSEEND\" === ofxVal) {\n    return MutualFundType.CLOSE_END;\n  } else if (\"OTHER\" === ofxVal) {\n    return MutualFundType.OTHER;\n  } else {\n    return null;\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/seclist/MutualFundType.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n///<reference path='BaseSecurityInfo'/>\n///<reference path='MutualFundType'/>\n\nmodule ofx4js.domain.data.seclist {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Info about a mutual fund security.\n * @see \"Section 13.8.5.3, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class MutualFundSecurityInfo extends BaseSecurityInfo {\n  private mfType: string;\n  private yield: number;\n  private dateYieldAsOf: Date;\n\n  /**\n   * Gets the mutual fund type. One of \"OPENEND\", \"CLOSEEND\", or \"OTHER\". This is an optional field\n   * according to the OFX spec.\n   *\n   * @return the mutual fund type\n   */\n  public getType(): string {\n    return this.mfType;\n  }\n\n  /**\n   * Sets the mutual fund type. One of \"OPENEND\", \"CLOSEEND\", or \"OTHER\". This is an optional field\n   * according to the OFX spec.\n   *\n   * @param mfType the mutual fund type\n   */\n  public setType(mfType: string): void {\n    this.mfType = mfType;\n  }\n\n  /**\n   * Gets the mutual fund type as one of the well-known types.\n   *\n   * @return the mutual fund type or null if it's not one of the well-known types\n   */\n  public getTypeEnum(): MutualFundType {\n    return MutualFundType_fromOfx(this.getType());\n  }\n\n  /**\n   * Gets the yield as a rate. This is an optional field according to the OFX spec.\n   *\n   * @return the yield as a rate\n   */\n  public getYield(): number {\n    return this.yield;\n  }\n\n  /**\n   * Sets the yield as a rate. This is an optional field according to the OFX spec.\n   *\n   * @param yield the yield as a rate\n   */\n  public setYield(yield_: number): void {\n    this.yield = yield_;\n  }\n\n  /**\n   * Gets the as-of date for the yield. This is an optional field according to the OFX spec.\n   *\n   * @return the as-of date for the yield\n   */\n  public getDateYieldAsOf(): Date {\n    return this.dateYieldAsOf;\n  }\n\n  /**\n   * Sets the as-of date for the yield. This is an optional field according to the OFX spec.\n   *\n   * @param dateYieldAsOf the as-of date for the yield\n   */\n  public setDateYieldAsOf(dateYieldAsOf: Date): void {\n    this.dateYieldAsOf = dateYieldAsOf;\n  }\n\n  // TODO(jonp) -- MFASSERTCLASS and FIMFASSERTCLASS child aggregates\n}\n\nAggregate_add( MutualFundSecurityInfo, \"MFINFO\" );\nElement_add(MutualFundSecurityInfo, { name: \"MFTYPE\", order: 20, type: String, read: MutualFundSecurityInfo.prototype.getType, write: MutualFundSecurityInfo.prototype.setType });\nElement_add(MutualFundSecurityInfo, { name: \"YIELD\", order: 30, type: Number, read: MutualFundSecurityInfo.prototype.getYield, write: MutualFundSecurityInfo.prototype.setYield });\nElement_add(MutualFundSecurityInfo, { name: \"DTYIELDASOF\", order: 40, type: Date, read: MutualFundSecurityInfo.prototype.getDateYieldAsOf, write: MutualFundSecurityInfo.prototype.setDateYieldAsOf });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/seclist/MutualFundSecurityInfo.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule ofx4js.domain.data.seclist {\n\n/**\n * Type of option.\n * @see \"Section 13.8.5.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum OptionType {\n  PUT,\n  CALL\n}\n\n\nexport function OptionType_fromOfx(ofxVal: string): OptionType {\n  if (\"PUT\" === ofxVal) {\n    return OptionType.PUT;\n  } else if (\"CALL\" === ofxVal) {\n    return OptionType.CALL;\n  } else {\n    return null;\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/seclist/OptionType.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n///<reference path='BaseSecurityInfo'/>\n///<reference path='OptionType'/>\n///<reference path='AssetClass'/>\n\nmodule ofx4js.domain.data.seclist {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Info about an option security.\n * @see \"Section 13.8.5.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class OptionSecurityInfo extends BaseSecurityInfo {\n\n  private optionType: string;\n  private strikePrice: number;\n  private expirationDate: Date;\n  private sharesPerContact: number;\n  private underlyingSecurity: SecurityId;\n  private assetClass: string;\n  private fiAssetClass: string;\n\n  /**\n   * Gets the type of option. One of \"PUT\" or \"CALL\". This is a required field according to the\n   * OFX spec.\n   *\n   * @return the option type\n   */\n  public getOptionType(): string {\n    return this.optionType;\n  }\n\n  /**\n   * Sets the type of option. One of \"PUT\" or \"CALL\". This is a required field according to the\n   * OFX spec.\n   *\n   * @param optionType the option type\n   */\n  public setOptionType(optionType: string): void {\n    this.optionType = optionType;\n  }\n\n  /**\n   * Gets the option type as a well-known enum value.\n   *\n   * @return the option type or null if it's not one of the well-known types\n   */\n  public getOptionTypeEnum(): OptionType {\n    return OptionType_fromOfx(this.getOptionType());\n  }\n\n  /**\n   * Gets the strike price of the option. This is a required field according to the OFX spec.\n   *\n   * @return the option strike price\n   */\n  public getStrikePrice(): number {\n    return this.strikePrice;\n  }\n\n  /**\n   * Sets the strike price of the option. This is a required field according to the OFX spec.\n   *\n   * @param strikePrice the option strike price\n   */\n  public setStrikePrice(strikePrice: number): void {\n    this.strikePrice = strikePrice;\n  }\n\n  /**\n   * Gets the expiration date of the option. This is a required field according to the OFX spec.\n   *\n   * @return the expiration date of the option\n   */\n  public getExpirationDate(): Date {\n    return this.expirationDate;\n  }\n\n  /**\n   * Sets the expiration date of the option. This is a required field according to the OFX spec.\n   *\n   * @param expirationDate the expiration date of the option\n   */\n  public setExpirationDate(expirationDate: Date): void {\n    this.expirationDate = expirationDate;\n  }\n\n  /**\n   * Gets the number of shares per option contact. This is a required field according to the OFX\n   * spec.\n   *\n   * @return the number of shares per option contact\n   */\n  public getSharesPerContact(): number {\n    return this.sharesPerContact;\n  }\n\n  /**\n   * Sets the number of shares per option contact. This is a required field according to the OFX\n   * spec.\n   *\n   * @param sharesPerContact the number of shares per option contact\n   */\n  public setSharesPerContact(sharesPerContact: number): void {\n    this.sharesPerContact = sharesPerContact;\n  }\n\n  /**\n   * Gets the security id of the underling security. This is an optional field according to the OFX\n   * spec.\n   *\n   * @return the security id of the underlying security\n   */\n  public getUnderlyingSecurity(): SecurityId {\n    return this.underlyingSecurity;\n  }\n\n  /**\n   * Sets the security id of the underling security. This is an optional field according to the OFX\n   * spec.\n   *\n   * @param underlyingSecurity the security id of the underlying security\n   */\n  public setUnderlyingSecurity(underlyingSecurity: SecurityId): void {\n    this.underlyingSecurity = underlyingSecurity;\n  }\n\n  /**\n   * Gets the asset class of the option. This is an optional field according to the OFX spec.\n   *\n   * @return the asset class of the option\n   */\n  public getAssetClass(): string {\n    return this.assetClass;\n  }\n\n  /**\n   * Sets the asset class of the option. This is an optional field according to the OFX spec.\n   *\n   * @param assetClass the asset class of the option\n   */\n  public setAssetClass(assetClass: string): void {\n    this.assetClass = assetClass;\n  }\n\n  /**\n   * Gets the assert class as one of the well-known types.\n   *\n   * @return the asset class or null if it's not one of the well-known types\n   */\n  public getAssetClassEnum(): AssetClass {\n    return AssetClass_fromOfx(this.getAssetClass());\n  }\n\n  /**\n   * Gets the FI-defined asset class of the option. This is an optional field according to the OFX\n   * spec.\n   *\n   * @return the FI-defined asset class of the option\n   */\n  public getFiAssetClass(): string {\n    return this.fiAssetClass;\n  }\n\n  /**\n   * Sets the FI-defined asset class of the option. This is an optional field according to the OFX\n   * spec.\n   *\n   * @param fiAssetClass the FI-defined asset class of the option\n   */\n  public setFiAssetClass(fiAssetClass: string): void {\n    this.fiAssetClass = fiAssetClass;\n  }\n}\n\nAggregate_add( OptionSecurityInfo, \"OPTINFO\" );\nElement_add(OptionSecurityInfo, { name: \"OPTTYPE\", order: 20, type: String, read: OptionSecurityInfo.prototype.getOptionType, write: OptionSecurityInfo.prototype.setOptionType });\nElement_add(OptionSecurityInfo, { name: \"STRIKEPRICE\", order: 30, type: Number, read: OptionSecurityInfo.prototype.getStrikePrice, write: OptionSecurityInfo.prototype.setStrikePrice });\nElement_add(OptionSecurityInfo, { name: \"DTEXPIRE\", order: 40, type: Date, read: OptionSecurityInfo.prototype.getExpirationDate, write: OptionSecurityInfo.prototype.setExpirationDate });\nElement_add(OptionSecurityInfo, { name: \"SHPERCTRCT\", order: 50, type: Number, read: OptionSecurityInfo.prototype.getSharesPerContact, write: OptionSecurityInfo.prototype.setSharesPerContact });\nElement_add(OptionSecurityInfo, { name: \"SECID\", order: 60, type: SecurityId, read: OptionSecurityInfo.prototype.getUnderlyingSecurity, write: OptionSecurityInfo.prototype.setUnderlyingSecurity });\nElement_add(OptionSecurityInfo, { name: \"ASSETCLASS\", order: 70, type: String, read: OptionSecurityInfo.prototype.getAssetClass, write: OptionSecurityInfo.prototype.setAssetClass });\nElement_add(OptionSecurityInfo, { name: \"FIASSETCLASS\", order: 80, type: String, read: OptionSecurityInfo.prototype.getFiAssetClass, write: OptionSecurityInfo.prototype.setFiAssetClass });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/seclist/OptionSecurityInfo.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n///<reference path='BaseSecurityInfo'/>\n///<reference path='AssetClass'/>\n\nmodule ofx4js.domain.data.seclist {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Info about any other type of security.\n * @see \"Section 13.8.5.5, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class OtherSecurityInfo extends BaseSecurityInfo {\n\n  private typeDesc: string;\n  private assetClass: string;\n  private fiAssetClass: string;\n\n  /**\n   * Gets a description of the type of security. This is an optional field according to the OFX\n   * spec.\n   *\n   * @return the description of the security\n   */\n  public getTypeDesc(): string {\n    return this.typeDesc;\n  }\n\n  /**\n   * Sets a description of the type of security. This is an optional field according to the OFX\n   * spec.\n   *\n   * @param typeDesc the description of the security\n   */\n  public setTypeDesc(typeDesc: string): void {\n    this.typeDesc = typeDesc;\n  }\n\n  /**\n   * Gets the asset class of the option. This is an optional field according to the OFX spec.\n   *\n   * @return the asset class of the debt\n   */\n  public getAssetClass(): string {\n    return this.assetClass;\n  }\n\n  /**\n   * Sets the asset class of the debt. This is an optional field according to the OFX spec.\n   *\n   * @param assetClass the asset class of the debt\n   */\n  public setAssetClass(assetClass: string): void {\n    this.assetClass = assetClass;\n  }\n\n  /**\n   * Gets the assert class as one of the well-known types.\n   *\n   * @return the asset class or null if it's not one of the well-known types\n   */\n  public getAssetClassEnum(): AssetClass {\n    return AssetClass_fromOfx(this.getAssetClass());\n  }\n\n  /**\n   * Gets the FI-defined asset class of the debt. This is an optional field according to the OFX\n   * spec.\n   *\n   * @return the FI-defined asset class of the debt\n   */\n  public getFiAssetClass(): string {\n    return this.fiAssetClass;\n  }\n\n  /**\n   * Sets the FI-defined asset class of the debt. This is an optional field according to the OFX\n   * spec.\n   *\n   * @param fiAssetClass the FI-defined asset class of the debt\n   */\n  public setFiAssetClass(fiAssetClass: string): void {\n    this.fiAssetClass = fiAssetClass;\n  }\n}\n\nAggregate_add( OtherSecurityInfo, \"OTHERINFO\" );\nElement_add(OtherSecurityInfo, { name: \"TYPEDESC\", order: 20, type: String, read: OtherSecurityInfo.prototype.getTypeDesc, write: OtherSecurityInfo.prototype.setTypeDesc });\nElement_add(OtherSecurityInfo, { name: \"ASSETCLASS\", order: 30, type: String, read: OtherSecurityInfo.prototype.getAssetClass, write: OtherSecurityInfo.prototype.setAssetClass });\nElement_add(OtherSecurityInfo, { name: \"FIASSETCLASS\", order: 40, type: String, read: OtherSecurityInfo.prototype.getFiAssetClass, write: OtherSecurityInfo.prototype.setFiAssetClass });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/seclist/OtherSecurityInfo.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule ofx4js.domain.data.seclist {\n\n/**\n * The type of debt.\n * @see \"Section 13.8.5.6, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum StockType {\n  COMMON,\n  PREFERRED,\n  CONVERTIBLE,\n  OTHER\n}\n\nexport function StockType_fromOfx(ofxVal: string): StockType {\n  if (\"COMMON\" === ofxVal) {\n    return StockType.COMMON;\n  } else if (\"PREFERRED\" === ofxVal) {\n    return StockType.PREFERRED;\n  } else if (\"CONVERTIBLE\" === ofxVal) {\n    return StockType.CONVERTIBLE;\n  } else if (\"OTHER\" === ofxVal) {\n    return StockType.OTHER;\n  } else {\n    return null;\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/seclist/StockType.ts","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n///<reference path='BaseSecurityInfo'/>\n///<reference path='StockType'/>\n///<reference path='AssetClass'/>\n\nmodule ofx4js.domain.data.seclist {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * Info about a stock security.\n * @see \"Section 13.8.5.6, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class StockSecurityInfo extends BaseSecurityInfo {\n\n  private stockType: string;\n  private yield: number;\n  private dateYieldAsOf: Date;\n  private assetClass: string;\n  private fiAssetClass: string;\n\n  /**\n   * Gets the type of stock. One of \"COMMON\", \"PREFERRED\", \"CONVERTIBLE\", or \"OTHER\". This is an\n   * optional field according to the OFX spec.\n   *\n   * @return the type of stock\n   */\n  public getType(): string {\n    return this.stockType;\n  }\n\n  /**\n   * Sets the type of stock. One of \"COMMON\", \"PREFERRED\", \"CONVERTIBLE\", or \"OTHER\". This is an\n   * optional field according to the OFX spec.\n   *\n   * @param stockType the type of stock\n   */\n  public setType(stockType: string): void {\n    this.stockType = stockType;\n  }\n\n  /**\n   * Gets the type of stock as one of the well-known types.\n   *\n   * @return the type of stock or null if it's not one of the well-known types\n   */\n  public getTypeEnum(): StockType {\n    return StockType_fromOfx(this.getType());\n  }\n\n  /**\n   * Gets the current yield reported as the dividend expressed as a portion of the current stock\n   * price, a rate. This is an optional field according to the OFX spec.\n   *\n   * @return the dividend yield\n   */\n  public getYield(): number {\n    return this.yield;\n  }\n\n  /**\n   * Sets the current yield reported as the dividend expressed as a portion of the current stock\n   * price, a rate. This is an optional field according to the OFX spec.\n   *\n   * @param yield the dividend yield\n   */\n  public setYield(yield_: number): void {\n    this.yield = yield_;\n  }\n\n  /**\n   * Gets the as-of date for the yield. This is an optional field according to the OFX spec.\n   *\n   * @return the as-of date for the yield\n   */\n  public getDateYieldAsOf(): Date {\n    return this.dateYieldAsOf;\n  }\n\n  /**\n   * Sets the as-of date for the yield. This is an optional field according to the OFX spec.\n   *\n   * @param dateYieldAsOf the as-of date for the yield\n   */\n  public setDateYieldAsOf(dateYieldAsOf: Date): void {\n    this.dateYieldAsOf = dateYieldAsOf;\n  }\n\n  /**\n   * Gets the asset class of the stock. This is an optional field according to the OFX spec.\n   *\n   * @return the asset class of the stock\n   */\n  public getAssetClass(): string {\n    return this.assetClass;\n  }\n\n  /**\n   * Sets the asset class of the stock. This is an optional field according to the OFX spec.\n   *\n   * @param assetClass the asset class of the stock\n   */\n  public setAssetClass(assetClass: string): void {\n    this.assetClass = assetClass;\n  }\n\n  /**\n   * Gets the assert class as one of the well-known types.\n   *\n   * @return the asset class or null if it's not one of the well-known types\n   */\n  public getAssetClassEnum(): AssetClass {\n    return AssetClass_fromOfx(this.getAssetClass());\n  }\n\n  /**\n   * Gets the FI-defined asset class of the stock. This is an optional field according to the OFX\n   * spec.\n   *\n   * @return the FI-defined asset class of the stock\n   */\n  public getFiAssetClass(): string {\n    return this.fiAssetClass;\n  }\n\n  /**\n   * Sets the FI-defined asset class of the stock. This is an optional field according to the OFX\n   * spec.\n   *\n   * @param fiAssetClass the FI-defined asset class of the stock\n   */\n  public setFiAssetClass(fiAssetClass: string): void {\n    this.fiAssetClass = fiAssetClass;\n  }\n}\n\nAggregate_add( StockSecurityInfo, \"STOCKINFO\" );\nElement_add(StockSecurityInfo, { name: \"STOCKTYPE\", order: 20, type: String, read: StockSecurityInfo.prototype.getType, write: StockSecurityInfo.prototype.setType });\nElement_add(StockSecurityInfo, { name: \"YIELD\", order: 30, type: Number, read: StockSecurityInfo.prototype.getYield, write: StockSecurityInfo.prototype.setYield });\nElement_add(StockSecurityInfo, { name: \"DTYIELDASOF\", order: 40, type: Date, read: StockSecurityInfo.prototype.getDateYieldAsOf, write: StockSecurityInfo.prototype.setDateYieldAsOf });\nElement_add(StockSecurityInfo, { name: \"ASSETCLASS\", order: 50, type: String, read: StockSecurityInfo.prototype.getAssetClass, write: StockSecurityInfo.prototype.setAssetClass });\nElement_add(StockSecurityInfo, { name: \"FIASSETCLASS\", order: 60, type: String, read: StockSecurityInfo.prototype.getFiAssetClass, write: StockSecurityInfo.prototype.setFiAssetClass });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/seclist/StockSecurityInfo.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n\nmodule ofx4js.domain.data.tax1099 {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * @author Aparna Gawali\n * aparna.gawali@sungard.com\n */\nexport class ProcDet {\n\n\tprivate dtAqd: string;\n\tprivate dtSale: string;\n\tprivate secName: string;\n\tprivate costBasis: string;\n\tprivate saleSpr: string;\n\tprivate longShort: string;\n\tprivate wasDisAllowed: string;\n\tprivate noncoveredSec: string;\n\tprivate basisNotshown: string;\n\t/**\n\t * @return the dtAqd\n\t */\n\tpublic getDtAqd(): string {\n\t\treturn this.dtAqd;\n\t}\n\t/**\n\t * @param dtAqd the dtAqd to set\n\t */\n\tpublic setDtAqd(dtAqd: string): void {\n\t\tthis.dtAqd = dtAqd;\n\t}\n\t/**\n\t * @return the dtSale\n\t */\n\tpublic getDtSale(): string {\n\t\treturn this.dtSale;\n\t}\n\t/**\n\t * @param dtSale the dtSale to set\n\t */\n\tpublic setDtSale(dtSale: string): void {\n\t\tthis.dtSale = dtSale;\n\t}\n\t/**\n\t * @return the secName\n\t */\n\tpublic getSecName(): string {\n\t\treturn this.secName;\n\t}\n\t/**\n\t * @param secName the secName to set\n\t */\n\tpublic setSecName(secName: string): void {\n\t\tthis.secName = secName;\n\t}\n\t/**\n\t * @return the costBasis\n\t */\n\tpublic getCostBasis(): string {\n\t\treturn this.costBasis;\n\t}\n\t/**\n\t * @param costBasis the costBasis to set\n\t */\n\tpublic setCostBasis(costBasis: string): void {\n\t\tthis.costBasis = costBasis;\n\t}\n\t/**\n\t * @return the saleSpr\n\t */\n\tpublic getSaleSpr(): string {\n\t\treturn this.saleSpr;\n\t}\n\t/**\n\t * @param saleSpr the saleSpr to set\n\t */\n\tpublic setSaleSpr(saleSpr: string): void {\n\t\tthis.saleSpr = saleSpr;\n\t}\n\t/**\n\t * @return the longShort\n\t */\n\tpublic getLongShort(): string {\n\t\treturn this.longShort;\n\t}\n\t/**\n\t * @param longShort the longShort to set\n\t */\n\tpublic setLongShort(longShort: string): void {\n\t\tthis.longShort = longShort;\n\t}\n\t/**\n\t * @return the wasDisAllowed\n\t */\n\tpublic getWasDisAllowed(): string {\n\t\treturn this.wasDisAllowed;\n\t}\n\t/**\n\t * @param wasDisAllowed the wasDisAllowed to set\n\t */\n\tpublic setWasDisAllowed(wasDisAllowed: string): void {\n\t\tthis.wasDisAllowed = wasDisAllowed;\n\t}\n\t/**\n\t * @return the noncoveredSec\n\t */\n\tpublic getNoncoveredSec(): string {\n\t\treturn this.noncoveredSec;\n\t}\n\t/**\n\t * @param noncoveredSec the noncoveredSec to set\n\t */\n\tpublic setNoncoveredSec(noncoveredSec: string): void {\n\t\tthis.noncoveredSec = noncoveredSec;\n\t}\n\t/**\n\t * @return the basisNotshown\n\t */\n\tpublic getBasisNotshown(): string {\n\t\treturn this.basisNotshown;\n\t}\n\t/**\n\t * @param basisNotshown the basisNotshown to set\n\t */\n\tpublic setBasisNotshown(basisNotshown: string): void {\n\t\tthis.basisNotshown = basisNotshown;\n\t}\n}\n\nAggregate_add( ProcDet, \"PROCDET_V100\");\nElement_add(ProcDet, { name: \"DTAQD\", required: false, order: 0, type: String, read: ProcDet.prototype.getDtAqd, write: ProcDet.prototype.setDtAqd });\nElement_add(ProcDet, { name: \"DTSALE\", required: false, order: 2, type: String, read: ProcDet.prototype.getDtSale, write: ProcDet.prototype.setDtSale });\nElement_add(ProcDet, { name: \"SECNAME\", required: false, order: 3, type: String, read: ProcDet.prototype.getSecName, write: ProcDet.prototype.setSecName });\nElement_add(ProcDet, { name: \"COSTBASIS\", required: false, order: 4, type: String, read: ProcDet.prototype.getCostBasis, write: ProcDet.prototype.setCostBasis });\nElement_add(ProcDet, { name: \"SALESPR\", required: false, order: 5, type: String, read: ProcDet.prototype.getSaleSpr, write: ProcDet.prototype.setSaleSpr });\nElement_add(ProcDet, { name: \"LONGSHORT\", required: false, order: 6, type: String, read: ProcDet.prototype.getLongShort, write: ProcDet.prototype.setLongShort });\nElement_add(ProcDet, { name: \"WASHSALELOSSDISALLOWED\", required: false, order: 7, type: String, read: ProcDet.prototype.getWasDisAllowed, write: ProcDet.prototype.setWasDisAllowed });\nElement_add(ProcDet, { name: \"NONCOVEREDSECURITY\", required: false, order: 8, type: String, read: ProcDet.prototype.getNoncoveredSec, write: ProcDet.prototype.setNoncoveredSec });\nElement_add(ProcDet, { name: \"BASISNOTSHOWN\", required: false, order: 9, type: String, read: ProcDet.prototype.getBasisNotshown, write: ProcDet.prototype.setBasisNotshown });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/tax1099/ProcDet.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n///<reference path='ProcDet'/>\n\nmodule ofx4js.domain.data.tax1099 {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n\n/**\n * @author Aparna Gawali\n * aparna.gawali@sungard.com\n */\nexport class ExtDBInfo {\n\n\tprivate procDet: Array<ProcDet>;\n\tprivate teInterest: string;\n\tprivate pabInterest: string;\n\tprivate teIntDividend: string;\n\tprivate pabDividend: string;\n\t\n\t/**\n\t * @return the procDet\n\t */\n\tpublic getProcDet(): Array<ProcDet> {\n\t\treturn this.procDet;\n\t}\n\n\t/**\n\t * @param procDet the procDet to set\n\t */\n    public setProcDet(procDet: Array<ProcDet>): void {\n\t\tthis.procDet = procDet;\n\t}\n\n\t/**\n\t * @return the teInterest\n\t */\n\tpublic getTeInterest(): string {\n\t\treturn this.teInterest;\n\t}\n\n\t/**\n\t * @param teInterest the teInterest to set\n\t */\n\tpublic setTeInterest(teInterest: string): void {\n\t\tthis.teInterest = teInterest;\n\t}\n\n\t/**\n\t * @return the pabInterest\n\t */\n\tpublic getPabInterest(): string {\n\t\treturn this.pabInterest;\n\t}\n\n\t/**\n\t * @param pabInterest the pabInterest to set\n\t */\n\tpublic setPabInterest(pabInterest: string): void {\n\t\tthis.pabInterest = pabInterest;\n\t}\n\n\t/**\n\t * @return the teIntDividend\n\t */\n\tpublic getTeIntDividend(): string {\n\t\treturn this.teIntDividend;\n\t}\n\n\t/**\n\t * @param teIntDividend the teIntDividend to set\n\t */\n\tpublic setTeIntDividend(teIntDividend: string): void {\n\t\tthis.teIntDividend = teIntDividend;\n\t}\n\n\t/**\n\t * @return the pabDividend\n\t */\n\tpublic getPabDividend(): string {\n\t\treturn this.pabDividend;\n\t}\n\n\t/**\n\t * @param pabDividend the pabDividend to set\n\t */\n\tpublic setPabDividend(pabDividend: string): void {\n\t\tthis.pabDividend = pabDividend;\n\t}\t\n}\n\nAggregate_add( ExtDBInfo, \"EXTDBINFO_V100\");\nChildAggregate_add(ExtDBInfo, { required:false, order: 0, type: Array, collectionEntryType: ProcDet, read: ExtDBInfo.prototype.getProcDet, write: ExtDBInfo.prototype.setProcDet });\nElement_add(ExtDBInfo, { name: \"TEINTEREST\",required: false , order: 1, type: String, read: ExtDBInfo.prototype.getTeInterest, write: ExtDBInfo.prototype.setTeInterest });\nElement_add(ExtDBInfo, { name: \"PABINTEREST\",required: false , order: 2, type: String, read: ExtDBInfo.prototype.getPabInterest, write: ExtDBInfo.prototype.setPabInterest });\nElement_add(ExtDBInfo, { name: \"TEINTDIVIDEND\",required: false , order: 3, type: String, read: ExtDBInfo.prototype.getTeIntDividend, write: ExtDBInfo.prototype.setTeIntDividend });\nElement_add(ExtDBInfo, { name: \"PABDIVIDEND\",required: false , order: 4, type: String, read: ExtDBInfo.prototype.getPabDividend, write: ExtDBInfo.prototype.setPabDividend });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/tax1099/ExtDBInfo.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n\nmodule ofx4js.domain.data.tax1099 {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * @author Aparna Gawali\n * aparna.gawali@sungard.com\n */\nexport class PayerAddress {\n\n\tprivate payerName1: string;\n\tprivate payerName2: string;\n\tprivate address1: string;\n\tprivate address2: string;\n\tprivate city: string;\n\tprivate state: string;\n\tprivate postalCode: string;\n\tprivate phone: string;\n\t/**\n\t * @return the payerName1\n\t */\n\tpublic getPayerName1(): string {\n\t\treturn this.payerName1;\n\t}\n\t/**\n\t * @param payerName1 the payerName1 to set\n\t */\n\tpublic setPayerName1(payerName1: string): void {\n\t\tthis.payerName1 = payerName1;\n\t}\n\t/**\n\t * @return the payerName2\n\t */\n\tpublic getPayerName2(): string {\n\t\treturn this.payerName2;\n\t}\n\t/**\n\t * @param payerName2 the payerName2 to set\n\t */\n\tpublic setPayerName2(payerName2: string): void {\n\t\tthis.payerName2 = payerName2;\n\t}\n\t/**\n\t * @return the address1\n\t */\n\tpublic getAddress1(): string {\n\t\treturn this.address1;\n\t}\n\t/**\n\t * @param address1 the address1 to set\n\t */\n\tpublic setAddress1(address1: string): void {\n\t\tthis.address1 = address1;\n\t}\n\t\n\t/**\n\t * @return the address2\n\t */\n\tpublic getAddress2(): string {\n\t\treturn this.address2;\n\t}\n\t/**\n\t * @param address2 the address2 to set\n\t */\n\tpublic setAddress2(address2: string): void {\n\t\tthis.address2 = address2;\n\t}\n\t/**\n\t * @return the city\n\t */\n\tpublic getCity(): string {\n\t\treturn this.city;\n\t}\n\t/**\n\t * @param city the city to set\n\t */\n\tpublic setCity(city: string): void {\n\t\tthis.city = city;\n\t}\n\t/**\n\t * @return the state\n\t */\n\tpublic getState(): string {\n\t\treturn this.state;\n\t}\n\t/**\n\t * @param state the state to set\n\t */\n\tpublic setState(state: string): void {\n\t\tthis.state = state;\n\t}\n\t/**\n\t * @return the postalCode\n\t */\n\tpublic getPostalCode(): string {\n\t\treturn this.postalCode;\n\t}\n\t/**\n\t * @param postalCode the postalCode to set\n\t */\n\tpublic setPostalCode(postalCode: string): void {\n\t\tthis.postalCode = postalCode;\n\t}\n\t/**\n\t * @return the phone\n\t */\n\tpublic getPhone(): string {\n\t\treturn this.phone;\n\t}\n\t/**\n\t * @param phone the phone to set\n\t */\n\tpublic setPhone(phone: string): void {\n\t\tthis.phone = phone;\n\t}\n}\n\nAggregate_add(PayerAddress, \"PAYERADDR\");\nElement_add(PayerAddress, { name: \"PAYERNAME1\",required: true , order: 0, type: String, read: PayerAddress.prototype.getPayerName1, write: PayerAddress.prototype.setPayerName1 });\nElement_add(PayerAddress, { name: \"PAYERNAME2\",required: false , order: 1, type: String, read: PayerAddress.prototype.getPayerName2, write: PayerAddress.prototype.setPayerName2 });\nElement_add(PayerAddress, { name: \"ADDR1\",required: true , order: 2, type: String, read: PayerAddress.prototype.getAddress1, write: PayerAddress.prototype.setAddress1 });\nElement_add(PayerAddress, { name: \"ADDR2\",required: true , order: 3, type: String, read: PayerAddress.prototype.getAddress2, write: PayerAddress.prototype.setAddress2 });\nElement_add(PayerAddress, { name: \"CITY\",required: true , order: 4, type: String, read: PayerAddress.prototype.getCity, write: PayerAddress.prototype.setCity });\nElement_add(PayerAddress, { name: \"STATE\",required: true , order: 5, type: String, read: PayerAddress.prototype.getState, write: PayerAddress.prototype.setState });\nElement_add(PayerAddress, { name: \"POSTALCODE\",required: true , order: 6, type: String, read: PayerAddress.prototype.getPostalCode, write: PayerAddress.prototype.setPostalCode });\nElement_add(PayerAddress, { name: \"PHONE\",required: false , order: 7, type: String, read: PayerAddress.prototype.getPhone, write: PayerAddress.prototype.setPhone });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/tax1099/PayerAddress.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n\nmodule ofx4js.domain.data.tax1099 {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * @author Aparna Gawali\n * aparna.gawali@sungard.com\n */\n\n\nexport class RecAddress {\n\n\tprivate recName1: string;\n\tprivate recName2: string;\n\tprivate address1: string;\n\tprivate address2: string;\n\tprivate city: string;\n\tprivate state: string;\n\tprivate postalCode: string;\n\tprivate phone: string;\n\t/**\n\t * @return the recName1\n\t */\n\tpublic getRecName1(): string {\n\t\treturn this.recName1;\n\t}\n\t/**\n\t * @param recName1 the recName1 to set\n\t */\n\tpublic setRecName1(recName1: string): void {\n\t\tthis.recName1 = recName1;\n\t}\n\t\n\t/**\n\t * @return the recName2\n\t */\n\tpublic getRecName2(): string {\n\t\treturn this.recName2;\n\t}\n\t/**\n\t * @param recName2 the recName2 to set\n\t */\n\tpublic setRecName2(recName2: string): void {\n\t\tthis.recName2 = recName2;\n\t}\n\t/**\n\t * @return the address1\n\t */\n\tpublic getAddress1(): string {\n\t\treturn this.address1;\n\t}\n\t/**\n\t * @param address1 the address1 to set\n\t */\n\tpublic setAddress1(address1: string): void {\n\t\tthis.address1 = address1;\n\t}\n\t\t\n\t/**\n\t * @return the address2\n\t */\n\tpublic getAddress2(): string {\n\t\treturn this.address2;\n\t}\n\t/**\n\t * @param address2 the address2 to set\n\t */\n\tpublic setAddress2(address2: string): void {\n\t\tthis.address2 = address2;\n\t}\n\t/**\n\t * @return the city\n\t */\n\tpublic getCity(): string {\n\t\treturn this.city;\n\t}\n\t/**\n\t * @param city the city to set\n\t */\n\tpublic setCity(city: string): void {\n\t\tthis.city = city;\n\t}\n\t/**\n\t * @return the state\n\t */\n\tpublic getState(): string {\n\t\treturn this.state;\n\t}\n\t/**\n\t * @param state the state to set\n\t */\n\tpublic setState(state: string): void {\n\t\tthis.state = state;\n\t}\n\t/**\n\t * @return the postalCode\n\t */\n\tpublic getPostalCode(): string {\n\t\treturn this.postalCode;\n\t}\n\t/**\n\t * @param postalCode the postalCode to set\n\t */\n\tpublic setPostalCode(postalCode: string): void {\n\t\tthis.postalCode = postalCode;\n\t}\n\t/**\n\t * @return the phone\n\t */\n\tpublic getPhone(): string {\n\t\treturn this.phone;\n\t}\n\t/**\n\t * @param phone the phone to set\n\t */\n\tpublic setPhone(phone: string): void {\n\t\tthis.phone = phone;\n\t}\n}\n\nAggregate_add(RecAddress, \"RECADDR\");\nElement_add(RecAddress, { name: \"RECNAME1\",required: true , order: 0, type: String, read: RecAddress.prototype.getRecName1, write: RecAddress.prototype.setRecName1 });\nElement_add(RecAddress, { name: \"RECNAME2\",required: false , order: 1, type: String, read: RecAddress.prototype.getRecName2, write: RecAddress.prototype.setRecName2 });\nElement_add(RecAddress, { name: \"ADDR1\",required: true , order: 2, type: String, read: RecAddress.prototype.getAddress1, write: RecAddress.prototype.setAddress1 });\nElement_add(RecAddress, { name: \"ADDR2\",required: true , order: 3, type: String, read: RecAddress.prototype.getAddress2, write: RecAddress.prototype.setAddress2 });\nElement_add(RecAddress, { name: \"CITY\",required: true , order: 4, type: String, read: RecAddress.prototype.getCity, write: RecAddress.prototype.setCity });\nElement_add(RecAddress, { name: \"STATE\",required: true , order: 5, type: String, read: RecAddress.prototype.getState, write: RecAddress.prototype.setState });\nElement_add(RecAddress, { name: \"POSTALCODE\",required: true , order: 6, type: String, read: RecAddress.prototype.getPostalCode, write: RecAddress.prototype.setPostalCode });\nElement_add(RecAddress, { name: \"PHONE\",required: false , order: 7, type: String, read: RecAddress.prototype.getPhone, write: RecAddress.prototype.setPhone });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/tax1099/RecAddress.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n///<reference path='PayerAddress'/>\n///<reference path='RecAddress'/>\n///<reference path='ExtDBInfo'/>\n\nmodule ofx4js.domain.data.tax1099 {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * @author Aparna Gawali\n * aparna.gawali@sungard.com\n */\nexport class Tax1099B  {\n\tprivate srvrtId: string;\n\tprivate taxYear: string;\n\tprivate extDBInfo: ExtDBInfo;\n\tprivate payerAddress: PayerAddress;\n\tprivate payerId: string;\n\tprivate recAddress: RecAddress;\n\tprivate recId: string;\n\tprivate recAcct: string;\n\t\n\t \n\t  public getSrvrtId(): string {\n\t    return this.srvrtId;\n\t  }\n\n\t  \n      public setSrvrtId(srvrtId: string): void {\n\t    this.srvrtId = srvrtId;\n\t  }\n\n\t \n      public getTaxYear(): string {\n\t    return this.taxYear;\n\t  }\n\n\t \n\t  public setTaxYear(taxYear: string): void {\n\t    this.taxYear = taxYear;\n\t  }\n\n\t/**\n\t * @return the extDBInfo\n\t */\n\tpublic getExtDBInfo(): ExtDBInfo {\n\t\treturn this.extDBInfo;\n\t}\n\n\n\t/**\n\t * @param extDBInfo the extDBInfo to set\n\t */\n\tpublic setExtDBInfo(extDBInfo: ExtDBInfo): void {\n\t\tthis.extDBInfo = extDBInfo;\n\t}\n\n\n\t/**\n\t * @return the payerAddress\n\t */\n\tpublic getPayerAddress(): PayerAddress {\n\t\treturn this.payerAddress;\n\t}\n\n\n\t/**\n\t * @param payerAddress the payerAddress to set\n\t */\n\tpublic setPayerAddress(payerAddress: PayerAddress): void {\n\t\tthis.payerAddress = payerAddress;\n\t}\n\t\n\t/**\n\t * @return the payerId\n\t */\n\tpublic getPayerId(): string {\n\t\treturn this.payerId;\n\t}\n\n\n\t/**\n\t * @param payerId the payerId to set\n\t */\n\tpublic setPayerId(payerId: string): void {\n\t\tthis.payerId = payerId;\n\t}\n\t\n\n\t/**\n\t * @return the recAddress\n\t */\n\tpublic getRecAddress(): RecAddress {\n\t\treturn this.recAddress;\n\t}\n\n\n\t/**\n\t * @param recAddress the recAddress to set\n\t */\n\tpublic setRecAddress(recAddress: RecAddress): void {\n\t\tthis.recAddress = recAddress;\n\t}\n\n\t/**\n\t * @return the recId\n\t */\n\tpublic getRecId(): string {\n\t\treturn this.recId;\n\t}\n\n\n\t/**\n\t * @param recId the recId to set\n\t */\n\tpublic setRecId(recId: string): void {\n\t\tthis.recId = recId;\n\t}\n\n\n\t/**\n\t * @return the recAcct\n\t */\n\tpublic getRecAcct(): string {\n\t\treturn this.recAcct;\n\t}\n\n\n\t/**\n\t * @param recAcct the recAcct to set\n\t */\n\tpublic setRecAcct(recAcct: string): void {\n\t\tthis.recAcct = recAcct;\n\t}\n}\n\nAggregate_add( Tax1099B, \"TAX1099B_V100\");\nElement_add(Tax1099B, { name: \"SRVRTID\",required: true , order: 0, type: String, read: Tax1099B.prototype.getSrvrtId, write: Tax1099B.prototype.setSrvrtId });\nElement_add(Tax1099B, { name: \"TAXYEAR\", required: true, order: 1, type: String, read: Tax1099B.prototype.getTaxYear, write: Tax1099B.prototype.setTaxYear });\nChildAggregate_add(Tax1099B, { required:true, order: 2, type: ExtDBInfo, read: Tax1099B.prototype.getExtDBInfo, write: Tax1099B.prototype.setExtDBInfo });\nChildAggregate_add(Tax1099B, { required:true, order: 3, type: PayerAddress, read: Tax1099B.prototype.getPayerAddress, write: Tax1099B.prototype.setPayerAddress });\nElement_add(Tax1099B, { name: \"PAYERID\", required: true, order: 4, type: String, read: Tax1099B.prototype.getPayerId, write: Tax1099B.prototype.setPayerId });\nChildAggregate_add(Tax1099B, { required:true, order: 5, type: RecAddress, read: Tax1099B.prototype.getRecAddress, write: Tax1099B.prototype.setRecAddress });\nElement_add(Tax1099B, { name: \"RECID\", required: true, order: 6, type: String, read: Tax1099B.prototype.getRecId, write: Tax1099B.prototype.setRecId });\nElement_add(Tax1099B, { name: \"RECACCT\", required: true, order: 7, type: String, read: Tax1099B.prototype.getRecAcct, write: Tax1099B.prototype.setRecAcct });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/tax1099/Tax1099B.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n///<reference path='PayerAddress'/>\n///<reference path='RecAddress'/>\n\nmodule ofx4js.domain.data.tax1099 {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * @author Aparna Gawali\n * aparna.gawali@sungard.com\n */\nexport class Tax1099DIV  {\n\n  \n\tprivate srvrtId: string;\n\tprivate taxYear: string;\n\tprivate ordDiv: string;\n\tprivate qualifiedDiv: string;\n\tprivate totCapGain: string;\n\tprivate p28Gain: string;\n\tprivate unrecSec1250: string;\n\tprivate sec1202: string;\n\tprivate nonTaxDist: string;\n\tprivate fedTaxWh: string;\n\tprivate investExp: string;\n\tprivate forTaxPd: string;\n\tprivate cashLiq: string;\n\tprivate nonCashLiq: string;\n\t\n\tprivate payerAddress: PayerAddress;\n\tprivate payerId: string;\n\tprivate recAddress: RecAddress;\n\tprivate recId: string;\n\tprivate recAcct: string;\n\t\n\t \n\t  public getSrvrtId(): string {\n\t    return this.srvrtId;\n\t  }\n\n\t  \n      public setSrvrtId(srvrtId: string): void {\n\t    this.srvrtId = srvrtId;\n\t  }\n\n\t \n      public getTaxYear(): string {\n\t    return this.taxYear;\n\t  }\n\n\t \n\t  public setTaxYear(taxYear: string): void {\n\t    this.taxYear = taxYear;\n\t  }\n\n\n\t/**\n\t * @return the ordDiv\n\t */\n\tpublic getOrdDiv(): string {\n\t\treturn this.ordDiv;\n\t}\n\n\n\t/**\n\t * @param ordDiv the ordDiv to set\n\t */\n\tpublic setOrdDiv(ordDiv: string): void {\n\t\tthis.ordDiv = ordDiv;\n\t}\n\n\n\t/**\n\t * @return the qualifiedDiv\n\t */\n\tpublic getQualifiedDiv(): string {\n\t\treturn this.qualifiedDiv;\n\t}\n\n\n\t/**\n\t * @param qualifiedDiv the qualifiedDiv to set\n\t */\n\tpublic setQualifiedDiv(qualifiedDiv: string): void {\n\t\tthis.qualifiedDiv = qualifiedDiv;\n\t}\n\n\n\t/**\n\t * @return the totCapGain\n\t */\n\tpublic getTotCapGain(): string {\n\t\treturn this.totCapGain;\n\t}\n\n\n\t/**\n\t * @param totCapGain the totCapGain to set\n\t */\n\tpublic setTotCapGain(totCapGain: string): void {\n\t\tthis.totCapGain = totCapGain;\n\t}\n\n\n\t/**\n\t * @return the p28Gain\n\t */\n\tpublic getP28Gain(): string {\n\t\treturn this.p28Gain;\n\t}\n\n\n\t/**\n\t * @param p28Gain the p28Gain to set\n\t */\n\tpublic setP28Gain(p28Gain: string): void {\n\t\tthis.p28Gain = p28Gain;\n\t}\n\n\n\t/**\n\t * @return the unrecSec1250\n\t */\n\tpublic getUnrecSec1250(): string {\n\t\treturn this.unrecSec1250;\n\t}\n\n\n\t/**\n\t * @param unrecSec1250 the unrecSec1250 to set\n\t */\n\tpublic setUnrecSec1250(unrecSec1250: string): void {\n\t\tthis.unrecSec1250 = unrecSec1250;\n\t}\n\n\n\t/**\n\t * @return the sec1202\n\t */\n\tpublic getSec1202(): string {\n\t\treturn this.sec1202;\n\t}\n\n\n\t/**\n\t * @param sec1202 the sec1202 to set\n\t */\n\tpublic setSec1202(sec1202: string): void {\n\t\tthis.sec1202 = sec1202;\n\t}\n\n\n\t/**\n\t * @return the nonTaxDist\n\t */\n\tpublic getNonTaxDist(): string {\n\t\treturn this.nonTaxDist;\n\t}\n\n\n\t/**\n\t * @param nonTaxDist the nonTaxDist to set\n\t */\n\tpublic setNonTaxDist(nonTaxDist: string): void {\n\t\tthis.nonTaxDist = nonTaxDist;\n\t}\n\n\n\t/**\n\t * @return the fedTaxWh\n\t */\n\tpublic getFedTaxWh(): string {\n\t\treturn this.fedTaxWh;\n\t}\n\n\n\t/**\n\t * @param fedTaxWh the fedTaxWh to set\n\t */\n\tpublic setFedTaxWh(fedTaxWh: string): void {\n\t\tthis.fedTaxWh = fedTaxWh;\n\t}\n\n\n\t/**\n\t * @return the investExp\n\t */\n\tpublic getInvestExp(): string {\n\t\treturn this.investExp;\n\t}\n\n\n\t/**\n\t * @param investExp the investExp to set\n\t */\n\tpublic setInvestExp(investExp: string): void {\n\t\tthis.investExp = investExp;\n\t}\n\n\n\t/**\n\t * @return the forTaxPd\n\t */\n\tpublic getForTaxPd(): string {\n\t\treturn this.forTaxPd;\n\t}\n\n\n\t/**\n\t * @param forTaxPd the forTaxPd to set\n\t */\n\tpublic setForTaxPd(forTaxPd: string): void {\n\t\tthis.forTaxPd = forTaxPd;\n\t}\n\n\n\t/**\n\t * @return the cashLiq\n\t */\n\tpublic getCashLiq(): string {\n\t\treturn this.cashLiq;\n\t}\n\n\n\t/**\n\t * @param cashLiq the cashLiq to set\n\t */\n\tpublic setCashLiq(cashLiq: string): void {\n\t\tthis.cashLiq = cashLiq;\n\t}\n\n\n\t/**\n\t * @return the nonCashLiq\n\t */\n\tpublic getNonCashLiq(): string {\n\t\treturn this.nonCashLiq;\n\t}\n\n\n\t/**\n\t * @param nonCashLiq the nonCashLiq to set\n\t */\n\tpublic setNonCashLiq(nonCashLiq: string): void {\n\t\tthis.nonCashLiq = nonCashLiq;\n\t}\n\n\n\t/**\n\t * @return the payerAddress\n\t */\n\tpublic getPayerAddress(): PayerAddress {\n\t\treturn this.payerAddress;\n\t}\n\n\n\t/**\n\t * @param payerAddress the payerAddress to set\n\t */\n\tpublic setPayerAddress(payerAddress: PayerAddress): void {\n\t\tthis.payerAddress = payerAddress;\n\t}\n\t\n\t/**\n\t * @return the payerId\n\t */\n\tpublic getPayerId(): string {\n\t\treturn this.payerId;\n\t}\n\n\n\t/**\n\t * @param payerId the payerId to set\n\t */\n\tpublic setPayerId(payerId: string): void {\n\t\tthis.payerId = payerId;\n\t}\n\t\n\n\t/**\n\t * @return the recAddress\n\t */\n\tpublic getRecAddress(): RecAddress {\n\t\treturn this.recAddress;\n\t}\n\n\n\t/**\n\t * @param recAddress the recAddress to set\n\t */\n\tpublic setRecAddress(recAddress: RecAddress): void {\n\t\tthis.recAddress = recAddress;\n\t}\n\n\t/**\n\t * @return the recId\n\t */\n\tpublic getRecId(): string {\n\t\treturn this.recId;\n\t}\n\n\n\t/**\n\t * @param recId the recId to set\n\t */\n\tpublic setRecId(recId: string): void {\n\t\tthis.recId = recId;\n\t}\n\n\n\t/**\n\t * @return the recAcct\n\t */\n\tpublic getRecAcct(): string {\n\t\treturn this.recAcct;\n\t}\n\n\n\t/**\n\t * @param recAcct the recAcct to set\n\t */\n\tpublic setRecAcct(recAcct: string): void {\n\t\tthis.recAcct = recAcct;\n\t}\n}\n\nAggregate_add(Tax1099DIV, \"TAX1099DIV_V100\");\nElement_add(Tax1099DIV, { name: \"SRVRTID\",required: false , order: 0, type: String, read: Tax1099DIV.prototype.getSrvrtId, write: Tax1099DIV.prototype.setSrvrtId });\nElement_add(Tax1099DIV, { name: \"TAXYEAR\", required: false, order: 1, type: String, read: Tax1099DIV.prototype.getTaxYear, write: Tax1099DIV.prototype.setTaxYear });\nElement_add(Tax1099DIV, { name: \"ORDDIV\", required: false, order: 2, type: String, read: Tax1099DIV.prototype.getOrdDiv, write: Tax1099DIV.prototype.setOrdDiv });\nElement_add(Tax1099DIV, { name: \"QUALIFIEDDIV\", required: false, order: 3, type: String, read: Tax1099DIV.prototype.getQualifiedDiv, write: Tax1099DIV.prototype.setQualifiedDiv });\nElement_add(Tax1099DIV, { name: \"TOTCAPGAIN\", required: false, order: 4, type: String, read: Tax1099DIV.prototype.getTotCapGain, write: Tax1099DIV.prototype.setTotCapGain });\nElement_add(Tax1099DIV, { name: \"P28GAIN\", required: false, order: 5, type: String, read: Tax1099DIV.prototype.getP28Gain, write: Tax1099DIV.prototype.setP28Gain });\nElement_add(Tax1099DIV, { name: \"UNRECSEC1250\", required: false, order: 6, type: String, read: Tax1099DIV.prototype.getUnrecSec1250, write: Tax1099DIV.prototype.setUnrecSec1250 });\nElement_add(Tax1099DIV, { name: \"SEC1202\", required: false, order: 7, type: String, read: Tax1099DIV.prototype.getSec1202, write: Tax1099DIV.prototype.setSec1202 });\nElement_add(Tax1099DIV, { name: \"NONTAXDIST\", required: false, order: 8, type: String, read: Tax1099DIV.prototype.getNonTaxDist, write: Tax1099DIV.prototype.setNonTaxDist });\nElement_add(Tax1099DIV, { name: \"FEDTAXWH\", required: false, order: 9, type: String, read: Tax1099DIV.prototype.getFedTaxWh, write: Tax1099DIV.prototype.setFedTaxWh });\nElement_add(Tax1099DIV, { name: \"INVESTEXP\", required: false, order: 10, type: String, read: Tax1099DIV.prototype.getInvestExp, write: Tax1099DIV.prototype.setInvestExp });\nElement_add(Tax1099DIV, { name: \"FORTAXPD\", required: false, order: 11, type: String, read: Tax1099DIV.prototype.getForTaxPd, write: Tax1099DIV.prototype.setForTaxPd });\nElement_add(Tax1099DIV, { name: \"CASHLIQ\", required: false, order: 12, type: String, read: Tax1099DIV.prototype.getCashLiq, write: Tax1099DIV.prototype.setCashLiq });\nElement_add(Tax1099DIV, { name: \"NONCASHLIQ\", required: false, order: 13, type: String, read: Tax1099DIV.prototype.getNonCashLiq, write: Tax1099DIV.prototype.setNonCashLiq });\nChildAggregate_add(Tax1099DIV, { required:true, order: 14, type: PayerAddress, read: Tax1099DIV.prototype.getPayerAddress, write: Tax1099DIV.prototype.setPayerAddress });\nElement_add(Tax1099DIV, { name: \"PAYERID\", required: true, order: 15, type: String, read: Tax1099DIV.prototype.getPayerId, write: Tax1099DIV.prototype.setPayerId });\nChildAggregate_add(Tax1099DIV, { required:true, order: 16, type: RecAddress, read: Tax1099DIV.prototype.getRecAddress, write: Tax1099DIV.prototype.setRecAddress });\nElement_add(Tax1099DIV, { name: \"RECID\", required: true, order: 17, type: String, read: Tax1099DIV.prototype.getRecId, write: Tax1099DIV.prototype.setRecId });\nElement_add(Tax1099DIV, { name: \"RECACCT\", required: true, order: 18, type: String, read: Tax1099DIV.prototype.getRecAcct, write: Tax1099DIV.prototype.setRecAcct });\n\n}\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/tax1099/Tax1099DIV.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n///<reference path='PayerAddress'/>\n///<reference path='RecAddress'/>\n\nmodule ofx4js.domain.data.tax1099 {\n\nimport PayerAddress = ofx4js.domain.data.tax1099.PayerAddress;\nimport RecAddress = ofx4js.domain.data.tax1099.RecAddress;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * @author Aparna Gawali\n * aparna.gawali@sungard.com\n */\nexport class Tax1099INT  {\n\tprivate srvrtId: string;\n\tprivate taxYear: string;\n\tprivate intIncome: string;\n\tprivate erlWithPen: string;\n\tprivate intUsbndtrs: string;\n\tprivate fedTaxWh: string;\n\tprivate investExp: string;\n\tprivate forTaxPd: string;\n\t\t\n\tprivate payerAddress: PayerAddress;\n\tprivate payerId: string;\n\tprivate recAddress: RecAddress;\n\tprivate recId: string;\n\tprivate recAcct: string;\n\tprivate taxExemptInt: string;\n\tprivate specifiedPabInt: string;\n\t \n\t  public getSrvrtId(): string {\n\t    return this.srvrtId;\n\t  }\n\n\t  \n      public setSrvrtId(srvrtId: string): void {\n\t    this.srvrtId = srvrtId;\n\t  }\n\n\t \n      public getTaxYear(): string {\n\t    return this.taxYear;\n\t  }\n\n\t \n\t  public setTaxYear(taxYear: string): void {\n\t    this.taxYear = taxYear;\n\t  }\n\n\t  \t\n\n\t/**\n\t * @return the intIncome\n\t */\n\tpublic getIntIncome(): string {\n\t\treturn this.intIncome;\n\t}\n\n\n\t/**\n\t * @param intIncome the intIncome to set\n\t */\n\tpublic setIntIncome(intIncome: string): void {\n\t\tthis.intIncome = intIncome;\n\t}\n\n\n\t/**\n\t * @return the erlWithPen\n\t */\n\tpublic getErlWithPen(): string {\n\t\treturn this.erlWithPen;\n\t}\n\n\n\t/**\n\t * @param erlWithPen the erlWithPen to set\n\t */\n\tpublic setErlWithPen(erlWithPen: string): void {\n\t\tthis.erlWithPen = erlWithPen;\n\t}\n\n\n\t/**\n\t * @return the intUsbndtrs\n\t */\n\tpublic getIntUsbndtrs(): string {\n\t\treturn this.intUsbndtrs;\n\t}\n\n\n\t/**\n\t * @param intUsbndtrs the intUsbndtrs to set\n\t */\n\tpublic setIntUsbndtrs(intUsbndtrs: string): void {\n\t\tthis.intUsbndtrs = intUsbndtrs;\n\t}\n\n\n\t/**\n\t * @return the fedTaxWh\n\t */\n\tpublic getFedTaxWh(): string {\n\t\treturn this.fedTaxWh;\n\t}\n\n\n\t/**\n\t * @param fedTaxWh the fedTaxWh to set\n\t */\n\tpublic setFedTaxWh(fedTaxWh: string): void {\n\t\tthis.fedTaxWh = fedTaxWh;\n\t}\n\n\n\t/**\n\t * @return the investExp\n\t */\n\tpublic getInvestExp(): string {\n\t\treturn this.investExp;\n\t}\n\n\n\t/**\n\t * @param investExp the investExp to set\n\t */\n\tpublic setInvestExp(investExp: string): void {\n\t\tthis.investExp = investExp;\n\t}\n\n\n\t/**\n\t * @return the forTaxPd\n\t */\n\tpublic getForTaxPd(): string {\n\t\treturn this.forTaxPd;\n\t}\n\n\n\t/**\n\t * @param forTaxPd the forTaxPd to set\n\t */\n\tpublic setForTaxPd(forTaxPd: string): void {\n\t\tthis.forTaxPd = forTaxPd;\n\t}\n\n\n\t/**\n\t * @return the payerAddress\n\t */\n\tpublic getPayerAddress(): PayerAddress {\n\t\treturn this.payerAddress;\n\t}\n\n\n\t/**\n\t * @param payerAddress the payerAddress to set\n\t */\n\tpublic setPayerAddress(payerAddress: PayerAddress): void {\n\t\tthis.payerAddress = payerAddress;\n\t}\n\t\n\t/**\n\t * @return the payerId\n\t */\n\tpublic getPayerId(): string {\n\t\treturn this.payerId;\n\t}\n\n\n\t/**\n\t * @param payerId the payerId to set\n\t */\n\tpublic setPayerId(payerId: string): void {\n\t\tthis.payerId = payerId;\n\t}\n\t\n\n\t/**\n\t * @return the recAddress\n\t */\n\tpublic getRecAddress(): RecAddress {\n\t\treturn this.recAddress;\n\t}\n\n\n\t/**\n\t * @param recAddress the recAddress to set\n\t */\n\tpublic setRecAddress(recAddress: RecAddress): void {\n\t\tthis.recAddress = recAddress;\n\t}\n\n\t/**\n\t * @return the recId\n\t */\n\tpublic getRecId(): string {\n\t\treturn this.recId;\n\t}\n\n\n\t/**\n\t * @param recId the recId to set\n\t */\n\tpublic setRecId(recId: string): void {\n\t\tthis.recId = recId;\n\t}\n\n\n\t/**\n\t * @return the recAcct\n\t */\n\tpublic getRecAcct(): string {\n\t\treturn this.recAcct;\n\t}\n\n\n\t/**\n\t * @param recAcct the recAcct to set\n\t */\n\tpublic setRecAcct(recAcct: string): void {\n\t\tthis.recAcct = recAcct;\n\t}\n\n\n\t/**\n\t * @return the taxExemptInt\n\t */\n\tpublic getTaxExemptInt(): string {\n\t\treturn this.taxExemptInt;\n\t}\n\n\n\t/**\n\t * @param taxExemptInt the taxExemptInt to set\n\t */\n\tpublic setTaxExemptInt(taxExemptInt: string): void {\n\t\tthis.taxExemptInt = taxExemptInt;\n\t}\n\n\n\t/**\n\t * @return the specifiedPabInt\n\t */\n\tpublic getSpecifiedPabInt(): string {\n\t\treturn this.specifiedPabInt;\n\t}\n\n\n\t/**\n\t * @param specifiedPabInt the specifiedPabInt to set\n\t */\n\tpublic setSpecifiedPabInt(specifiedPabInt: string): void {\n\t\tthis.specifiedPabInt = specifiedPabInt;\n\t}\n}\n\nAggregate_add(Tax1099INT, \"TAX1099INT_V100\");\nElement_add(Tax1099INT, { name: \"SRVRTID\",required: true , order: 0, type: String, read: Tax1099INT.prototype.getSrvrtId, write: Tax1099INT.prototype.setSrvrtId });\nElement_add(Tax1099INT, { name: \"TAXYEAR\", required: true, order: 1, type: String, read: Tax1099INT.prototype.getTaxYear, write: Tax1099INT.prototype.setTaxYear });\nElement_add(Tax1099INT, { name: \"INTINCOME\",required: false , order: 2, type: String, read: Tax1099INT.prototype.getIntIncome, write: Tax1099INT.prototype.setIntIncome });\nElement_add(Tax1099INT, { name: \"ERLWITHPEN\",required: false , order: 3, type: String, read: Tax1099INT.prototype.getErlWithPen, write: Tax1099INT.prototype.setErlWithPen });\nElement_add(Tax1099INT, { name: \"INTUSBNDTRS\",required: false , order: 4, type: String, read: Tax1099INT.prototype.getIntUsbndtrs, write: Tax1099INT.prototype.setIntUsbndtrs });\nElement_add(Tax1099INT, { name: \"FEDTAXWH\", required: false, order: 5, type: String, read: Tax1099INT.prototype.getFedTaxWh, write: Tax1099INT.prototype.setFedTaxWh });\nElement_add(Tax1099INT, { name: \"INVESTEXP\", required: false, order: 6, type: String, read: Tax1099INT.prototype.getInvestExp, write: Tax1099INT.prototype.setInvestExp });\nElement_add(Tax1099INT, { name: \"FORTAXPD\", required: false, order: 7, type: String, read: Tax1099INT.prototype.getForTaxPd, write: Tax1099INT.prototype.setForTaxPd });\nChildAggregate_add(Tax1099INT, { required:true, order: 8, type: PayerAddress, read: Tax1099INT.prototype.getPayerAddress, write: Tax1099INT.prototype.setPayerAddress });\nElement_add(Tax1099INT, { name: \"PAYERID\", required: true, order: 9, type: String, read: Tax1099INT.prototype.getPayerId, write: Tax1099INT.prototype.setPayerId });\nChildAggregate_add(Tax1099INT, { required:true, order: 10, type: RecAddress, read: Tax1099INT.prototype.getRecAddress, write: Tax1099INT.prototype.setRecAddress });\nElement_add(Tax1099INT, { name: \"RECID\", required: true, order: 11, type: String, read: Tax1099INT.prototype.getRecId, write: Tax1099INT.prototype.setRecId });\nElement_add(Tax1099INT, { name: \"RECACCT\", required: true, order: 12, type: String, read: Tax1099INT.prototype.getRecAcct, write: Tax1099INT.prototype.setRecAcct });\nElement_add(Tax1099INT, { name: \"TAXEXEMPTINT\", required: false, order: 13, type: String, read: Tax1099INT.prototype.getTaxExemptInt, write: Tax1099INT.prototype.setTaxExemptInt });\nElement_add(Tax1099INT, { name: \"SPECIFIEDPABINT\", required: false, order: 14, type: String, read: Tax1099INT.prototype.getSpecifiedPabInt, write: Tax1099INT.prototype.setSpecifiedPabInt });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/tax1099/Tax1099INT.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n///<reference path='PayerAddress'/>\n///<reference path='RecAddress'/>\n\nmodule ofx4js.domain.data.tax1099 {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * @author Aparna Gawali\n * aparna.gawali@sungard.com\n */\n\n\nexport class Tax1099MISC  {\n\n  \n\tprivate srvrtId: string;\n\tprivate taxYear: string;\n\t\n\tprivate royalties: string;\n\tprivate otherIncome: string;\n\tprivate fedTaxWh: string;\n\tprivate subPmts: string;\n\t\t\t\n\tprivate payerAddress: PayerAddress;\n\tprivate payerId: string;\n\tprivate recAddress: RecAddress;\n\tprivate recId: string;\n\tprivate recAcct: string;\n\t\n\t \n      public getSrvrtId(): string {\n\t    return this.srvrtId;\n\t  }\n\n\t  \n      public setSrvrtId(srvrtId: string): void {\n\t    this.srvrtId = srvrtId;\n\t  }\n\n\t \n      public getTaxYear(): string {\n\t    return this.taxYear;\n\t  }\n\n\t \n\t  public setTaxYear(taxYear: string): void {\n\t    this.taxYear = taxYear;\n\t  }\n\n\t/**\n\t * @return the royalties\n\t */\n\tpublic getRoyalties(): string {\n\t\treturn this.royalties;\n\t}\n\n\n\t/**\n\t * @param royalties the royalties to set\n\t */\n\tpublic setRoyalties(royalties: string): void {\n\t\tthis.royalties = royalties;\n\t}\n\n\n\t/**\n\t * @return the otherIncome\n\t */\n\tpublic getOtherIncome(): string {\n\t\treturn this.otherIncome;\n\t}\n\n\n\t/**\n\t * @param otherIncome the otherIncome to set\n\t */\n\tpublic setOtherIncome(otherIncome: string): void {\n\t\tthis.otherIncome = otherIncome;\n\t}\n\n\n\t/**\n\t * @return the fedTaxWh\n\t */\n\tpublic getFedTaxWh(): string {\n\t\treturn this.fedTaxWh;\n\t}\n\n\n\t/**\n\t * @param fedTaxWh the fedTaxWh to set\n\t */\n\tpublic setFedTaxWh(fedTaxWh: string): void {\n\t\tthis.fedTaxWh = fedTaxWh;\n\t}\n\n\n\t/**\n\t * @return the subPmts\n\t */\n\tpublic getSubPmts(): string {\n\t\treturn this.subPmts;\n\t}\n\n\n\t/**\n\t * @param subPmts the subPmts to set\n\t */\n\tpublic setSubPmts(subPmts: string): void {\n\t\tthis.subPmts = subPmts;\n\t}\n\n\n\t/**\n\t * @return the payerAddress\n\t */\n\tpublic getPayerAddress(): PayerAddress {\n\t\treturn this.payerAddress;\n\t}\n\n\n\t/**\n\t * @param payerAddress the payerAddress to set\n\t */\n\tpublic setPayerAddress(payerAddress: PayerAddress): void {\n\t\tthis.payerAddress = payerAddress;\n\t}\n\t\n\t/**\n\t * @return the payerId\n\t */\n\tpublic getPayerId(): string {\n\t\treturn this.payerId;\n\t}\n\n\n\t/**\n\t * @param payerId the payerId to set\n\t */\n\tpublic setPayerId(payerId: string): void {\n\t\tthis.payerId = payerId;\n\t}\n\t\n\n\t/**\n\t * @return the recAddress\n\t */\n\tpublic getRecAddress(): RecAddress {\n\t\treturn this.recAddress;\n\t}\n\n\n\t/**\n\t * @param recAddress the recAddress to set\n\t */\n\tpublic setRecAddress(recAddress: RecAddress): void {\n\t\tthis.recAddress = recAddress;\n\t}\n\n\t/**\n\t * @return the recId\n\t */\n\tpublic getRecId(): string {\n\t\treturn this.recId;\n\t}\n\n\n\t/**\n\t * @param recId the recId to set\n\t */\n\tpublic setRecId(recId: string): void {\n\t\tthis.recId = recId;\n\t}\n\n\n\t/**\n\t * @return the recAcct\n\t */\n\tpublic getRecAcct(): string {\n\t\treturn this.recAcct;\n\t}\n\n\n\t/**\n\t * @param recAcct the recAcct to set\n\t */\n\tpublic setRecAcct(recAcct: string): void {\n\t\tthis.recAcct = recAcct;\n\t}\n}\n\nAggregate_add( Tax1099MISC, \"TAX1099MISC_V100\");\nElement_add(Tax1099MISC, { name: \"SRVRTID\",required: true , order: 0, type: String, read: Tax1099MISC.prototype.getSrvrtId, write: Tax1099MISC.prototype.setSrvrtId });\nElement_add(Tax1099MISC, { name: \"TAXYEAR\", required: true, order: 1, type: String, read: Tax1099MISC.prototype.getTaxYear, write: Tax1099MISC.prototype.setTaxYear });\nElement_add(Tax1099MISC, { name: \"ROYALTIES\",required: false , order: 2, type: String, read: Tax1099MISC.prototype.getRoyalties, write: Tax1099MISC.prototype.setRoyalties });\nElement_add(Tax1099MISC, { name: \"OTHERINCOME\",required: false , order: 3, type: String, read: Tax1099MISC.prototype.getOtherIncome, write: Tax1099MISC.prototype.setOtherIncome });\nElement_add(Tax1099MISC, { name: \"FEDTAXWH\",required: false , order: 4, type: String, read: Tax1099MISC.prototype.getFedTaxWh, write: Tax1099MISC.prototype.setFedTaxWh });\nElement_add(Tax1099MISC, { name: \"SUBPMTS\",required: false , order: 5, type: String, read: Tax1099MISC.prototype.getSubPmts, write: Tax1099MISC.prototype.setSubPmts });\nChildAggregate_add(Tax1099MISC, { required:true, order: 6, type: PayerAddress, read: Tax1099MISC.prototype.getPayerAddress, write: Tax1099MISC.prototype.setPayerAddress });\nElement_add(Tax1099MISC, { name: \"PAYERID\", required: true, order: 7, type: String, read: Tax1099MISC.prototype.getPayerId, write: Tax1099MISC.prototype.setPayerId });\nChildAggregate_add(Tax1099MISC, { required:true, order: 8, type: RecAddress, read: Tax1099MISC.prototype.getRecAddress, write: Tax1099MISC.prototype.setRecAddress });\nElement_add(Tax1099MISC, { name: \"RECID\", required: true, order: 9, type: String, read: Tax1099MISC.prototype.getRecId, write: Tax1099MISC.prototype.setRecId });\nElement_add(Tax1099MISC, { name: \"RECACCT\", required: true, order: 10, type: String, read: Tax1099MISC.prototype.getRecAcct, write: Tax1099MISC.prototype.setRecAcct });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/tax1099/Tax1099MISC.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n///<reference path='PayerAddress'/>\n///<reference path='RecAddress'/>\n\nmodule ofx4js.domain.data.tax1099 {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * @author Aparna Gawali\n * aparna.gawali@sungard.com\n */\nexport class Tax1099OID  {\n\n  \n\tprivate srvrtId: string;\n\tprivate taxYear: string;\n\t\n\tprivate originalDisc: string;\n\tprivate otherPerInt: string;\n\tprivate erlWithPen: string;\n\tprivate fedTaxWh: string;\n\tprivate desc: string;\n\tprivate oidOnUstres: string;\n\tprivate investExp: string;\n\t\t\t\t\n\tprivate payerAddress: PayerAddress;\n\tprivate payerId: string;\n\tprivate recAddress: RecAddress;\n\tprivate recId: string;\n\tprivate recAcct: string;\n\t\n\t \n\t  public getSrvrtId(): string {\n\t    return this.srvrtId;\n\t  }\n\n\t  \n      public setSrvrtId(srvrtId: string): void {\n\t    this.srvrtId = srvrtId;\n\t  }\n\n\t \n      public getTaxYear(): string {\n\t    return this.taxYear;\n\t  }\n\n\t \n\t  public setTaxYear(taxYear: string): void {\n\t    this.taxYear = taxYear;\n\t  }\n\n\t/**\n\t * @return the originalDisc\n\t */\n\tpublic getOriginalDisc(): string {\n\t\treturn this.originalDisc;\n\t}\n\n\n\t/**\n\t * @param originalDisc the originalDisc to set\n\t */\n\tpublic setOriginalDisc(originalDisc: string): void {\n\t\tthis.originalDisc = originalDisc;\n\t}\n\n\n\t/**\n\t * @return the otherPerInt\n\t */\n\tpublic getOtherPerInt(): string {\n\t\treturn this.otherPerInt;\n\t}\n\n\n\t/**\n\t * @param otherPerInt the otherPerInt to set\n\t */\n\tpublic setOtherPerInt(otherPerInt: string): void {\n\t\tthis.otherPerInt = otherPerInt;\n\t}\n\n\n\t/**\n\t * @return the erlWithPen\n\t */\n\tpublic getErlWithPen(): string {\n\t\treturn this.erlWithPen;\n\t}\n\n\n\t/**\n\t * @param erlWithPen the erlWithPen to set\n\t */\n\tpublic setErlWithPen(erlWithPen: string): void {\n\t\tthis.erlWithPen = erlWithPen;\n\t}\n\n\n\t/**\n\t * @return the fedTaxWh\n\t */\n\tpublic getFedTaxWh(): string {\n\t\treturn this.fedTaxWh;\n\t}\n\n\n\t/**\n\t * @param fedTaxWh the fedTaxWh to set\n\t */\n\tpublic setFedTaxWh(fedTaxWh: string): void {\n\t\tthis.fedTaxWh = fedTaxWh;\n\t}\n\n\n\t/**\n\t * @return the desc\n\t */\n\tpublic getDesc(): string {\n\t\treturn this.desc;\n\t}\n\n\n\t/**\n\t * @param desc the desc to set\n\t */\n\tpublic setDesc(desc: string): void {\n\t\tthis.desc = desc;\n\t}\n\n\n\t/**\n\t * @return the oidOnUstres\n\t */\n\tpublic getOidOnUstres(): string {\n\t\treturn this.oidOnUstres;\n\t}\n\n\n\t/**\n\t * @param oidOnUstres the oidOnUstres to set\n\t */\n\tpublic setOidOnUstres(oidOnUstres: string): void {\n\t\tthis.oidOnUstres = oidOnUstres;\n\t}\n\n\n\t/**\n\t * @return the investExp\n\t */\n\tpublic getInvestExp(): string {\n\t\treturn this.investExp;\n\t}\n\n\n\t/**\n\t * @param investExp the investExp to set\n\t */\n\tpublic setInvestExp(investExp: string): void {\n\t\tthis.investExp = investExp;\n\t}\n\n\n\t/**\n\t * @return the payerAddress\n\t */\n\tpublic getPayerAddress(): PayerAddress {\n\t\treturn this.payerAddress;\n\t}\n\n\n\t/**\n\t * @param payerAddress the payerAddress to set\n\t */\n\tpublic setPayerAddress(payerAddress: PayerAddress): void {\n\t\tthis.payerAddress = payerAddress;\n\t}\n\t\n\t/**\n\t * @return the payerId\n\t */\n\tpublic getPayerId(): string {\n\t\treturn this.payerId;\n\t}\n\n\n\t/**\n\t * @param payerId the payerId to set\n\t */\n\tpublic setPayerId(payerId: string): void {\n\t\tthis.payerId = payerId;\n\t}\n\t\n\n\t/**\n\t * @return the recAddress\n\t */\n\tpublic getRecAddress(): RecAddress {\n\t\treturn this.recAddress;\n\t}\n\n\n\t/**\n\t * @param recAddress the recAddress to set\n\t */\n\tpublic setRecAddress(recAddress: RecAddress): void {\n\t\tthis.recAddress = recAddress;\n\t}\n\n\t/**\n\t * @return the recId\n\t */\n\tpublic getRecId(): string {\n\t\treturn this.recId;\n\t}\n\n\n\t/**\n\t * @param recId the recId to set\n\t */\n\tpublic setRecId(recId: string): void {\n\t\tthis.recId = recId;\n\t}\n\n\n\t/**\n\t * @return the recAcct\n\t */\n\tpublic getRecAcct(): string {\n\t\treturn this.recAcct;\n\t}\n\n\n\t/**\n\t * @param recAcct the recAcct to set\n\t */\n\tpublic setRecAcct(recAcct: string): void {\n\t\tthis.recAcct = recAcct;\n\t}\n}\n\nAggregate_add(Tax1099OID, \"TAX1099OID_V100\");\nElement_add(Tax1099OID, { name: \"SRVRTID\",required: true , order: 0, type: String, read: Tax1099OID.prototype.getSrvrtId, write: Tax1099OID.prototype.setSrvrtId });\nElement_add(Tax1099OID, { name: \"TAXYEAR\", required: true, order: 1, type: String, read: Tax1099OID.prototype.getTaxYear, write: Tax1099OID.prototype.setTaxYear });\nElement_add(Tax1099OID, { name: \"ORIGISDISC\", required: false, order: 2, type: String, read: Tax1099OID.prototype.getOriginalDisc, write: Tax1099OID.prototype.setOriginalDisc });\nElement_add(Tax1099OID, { name: \"OTHERPERINT\", required: false, order: 3, type: String, read: Tax1099OID.prototype.getOtherPerInt, write: Tax1099OID.prototype.setOtherPerInt });\nElement_add(Tax1099OID, { name: \"ERLWITHPEN\", required: false, order: 4, type: String, read: Tax1099OID.prototype.getErlWithPen, write: Tax1099OID.prototype.setErlWithPen });\nElement_add(Tax1099OID, { name: \"FEDTAXWH\", required: false, order: 5, type: String, read: Tax1099OID.prototype.getFedTaxWh, write: Tax1099OID.prototype.setFedTaxWh });\nElement_add(Tax1099OID, { name: \"DESCRIPTION\", required: true, order: 6, type: String, read: Tax1099OID.prototype.getDesc, write: Tax1099OID.prototype.setDesc });\nElement_add(Tax1099OID, { name: \"OIDONUSTRES\", required: false, order: 7, type: String, read: Tax1099OID.prototype.getOidOnUstres, write: Tax1099OID.prototype.setOidOnUstres });\nElement_add(Tax1099OID, { name: \"INVESTEXP\", required: false, order: 8, type: String, read: Tax1099OID.prototype.getInvestExp, write: Tax1099OID.prototype.setInvestExp });\nChildAggregate_add(Tax1099OID, { required:true, order: 9, type: PayerAddress, read: Tax1099OID.prototype.getPayerAddress, write: Tax1099OID.prototype.setPayerAddress });\nElement_add(Tax1099OID, { name: \"PAYERID\", required: true, order: 10, type: String, read: Tax1099OID.prototype.getPayerId, write: Tax1099OID.prototype.setPayerId });\nChildAggregate_add(Tax1099OID, { required:true, order: 11, type: RecAddress, read: Tax1099OID.prototype.getRecAddress, write: Tax1099OID.prototype.setRecAddress });\nElement_add(Tax1099OID, { name: \"RECID\", required: true, order: 12, type: String, read: Tax1099OID.prototype.getRecId, write: Tax1099OID.prototype.setRecId });\nElement_add(Tax1099OID, { name: \"RECACCT\", required: true, order: 13, type: String, read: Tax1099OID.prototype.getRecAcct, write: Tax1099OID.prototype.setRecAcct });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/tax1099/Tax1099OID.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n///<reference path='PayerAddress'/>\n///<reference path='RecAddress'/>\n\nmodule ofx4js.domain.data.tax1099 {\n\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * @author Aparna Gawali\n * aparna.gawali@sungard.com\n */\nexport class Tax1099R  {\n\tprivate srvrtId: string;\n\tprivate taxYear: string;\n\tprivate grossDist: string;\n\t\n\tprivate taxAmt: string;\n\tprivate taxAmtNd: string;\n\tprivate capGain: string;\n\tprivate fedTaxWh: string;\n\tprivate empContins: string;\n\tprivate netUnapEmp: string;\n\tprivate distCode: string;\n\tprivate iraSepSimp: string;\n\tprivate annCtrctDist: string;\n\tprivate totEmpCount: string;\n\t\t\n\tprivate payerAddress: PayerAddress;\n\tprivate payerId: string;\n\tprivate recAddress: RecAddress;\n\tprivate recId: string;\n\tprivate recAcct: string;\n\t\n\t \n\t  public getSrvrtId(): string {\n\t    return this.srvrtId;\n\t  }\n\n\t  \n      public setSrvrtId(srvrtId: string): void {\n\t    this.srvrtId = srvrtId;\n\t  }\n\n\t \n      public getTaxYear(): string {\n\t    return this.taxYear;\n\t  }\n\n\t \n\t  public setTaxYear(taxYear: string): void {\n\t    this.taxYear = taxYear;\n\t  }\n\n\n\t  /**\n\t\t * @return the grossDist\n\t\t */\n\t\tpublic getGrossDist(): string {\n\t\t\treturn this.grossDist;\n\t\t}\n\n\n\t\t/**\n\t\t * @param grossDist the grossDist to set\n\t\t */\n\t\tpublic setGrossDist(grossDist: string): void {\n\t\t\tthis.grossDist = grossDist;\n\t\t}\n\n\n\t\t/**\n\t\t * @return the taxAmt\n\t\t */\n\t\tpublic getTaxAmt(): string {\n\t\t\treturn this.taxAmt;\n\t\t}\n\n\n\t\t/**\n\t\t * @param taxAmt the taxAmt to set\n\t\t */\n\t\tpublic setTaxAmt(taxAmt: string): void {\n\t\t\tthis.taxAmt = taxAmt;\n\t\t}\n\n\n\t\t/**\n\t\t * @return the taxAmtNd\n\t\t */\n\t\tpublic getTaxAmtNd(): string {\n\t\t\treturn this.taxAmtNd;\n\t\t}\n\n\n\t\t/**\n\t\t * @param taxAmtNd the taxAmtNd to set\n\t\t */\n\t\tpublic setTaxAmtNd(taxAmtNd: string): void {\n\t\t\tthis.taxAmtNd = taxAmtNd;\n\t\t}\n\n\n\t\t/**\n\t\t * @return the capGain\n\t\t */\n\t\tpublic getCapGain(): string {\n\t\t\treturn this.capGain;\n\t\t}\n\n\n\t\t/**\n\t\t * @param capGain the capGain to set\n\t\t */\n\t\tpublic setCapGain(capGain: string): void {\n\t\t\tthis.capGain = capGain;\n\t\t}\n\n\n\n\n\t/**\n\t * @return the fedTaxWh\n\t */\n\tpublic getFedTaxWh(): string {\n\t\treturn this.fedTaxWh;\n\t}\n\n\n\t/**\n\t * @param fedTaxWh the fedTaxWh to set\n\t */\n\tpublic setFedTaxWh(fedTaxWh: string): void {\n\t\tthis.fedTaxWh = fedTaxWh;\n\t}\n\t\n\t/**\n\t * @return the empContins\n\t */\n\tpublic getEmpContins(): string {\n\t\treturn this.empContins;\n\t}\n\n\n\t/**\n\t * @param empContins the empContins to set\n\t */\n\tpublic setEmpContins(empContins: string): void {\n\t\tthis.empContins = empContins;\n\t}\n\n\n\t/**\n\t * @return the netUnapEmp\n\t */\n\tpublic getNetUnapEmp(): string {\n\t\treturn this.netUnapEmp;\n\t}\n\n\n\t/**\n\t * @param netUnapEmp the netUnapEmp to set\n\t */\n\tpublic setNetUnapEmp(netUnapEmp: string): void {\n\t\tthis.netUnapEmp = netUnapEmp;\n\t}\n\n\n\t/**\n\t * @return the distCode\n\t */\n\tpublic getDistCode(): string {\n\t\treturn this.distCode;\n\t}\n\n\n\t/**\n\t * @param distCode the distCode to set\n\t */\n\tpublic setDistCode(distCode: string): void {\n\t\tthis.distCode = distCode;\n\t}\n\n\n\t/**\n\t * @return the iraSepSimp\n\t */\n\tpublic getIraSepSimp(): string {\n\t\treturn this.iraSepSimp;\n\t}\n\n\n\t/**\n\t * @param iraSepSimp the iraSepSimp to set\n\t */\n\tpublic setIraSepSimp(iraSepSimp: string): void {\n\t\tthis.iraSepSimp = iraSepSimp;\n\t}\n\n\n\t/**\n\t * @return the annCtrctDist\n\t */\n\tpublic getAnnCtrctDist(): string {\n\t\treturn this.annCtrctDist;\n\t}\n\n\n\t/**\n\t * @param annCtrctDist the annCtrctDist to set\n\t */\n\tpublic setAnnCtrctDist(annCtrctDist: string): void {\n\t\tthis.annCtrctDist = annCtrctDist;\n\t}\n\n\n\t/**\n\t * @return the totEmpCount\n\t */\n\tpublic getTotEmpCount(): string {\n\t\treturn this.totEmpCount;\n\t}\n\n\n\t/**\n\t * @param totEmpCount the totEmpCount to set\n\t */\n\tpublic setTotEmpCount(totEmpCount: string): void {\n\t\tthis.totEmpCount = totEmpCount;\n\t}\n\n\n\t/**\n\t * @return the payerAddress\n\t */\n\tpublic getPayerAddress(): PayerAddress {\n\t\treturn this.payerAddress;\n\t}\n\n\n\t/**\n\t * @param payerAddress the payerAddress to set\n\t */\n\tpublic setPayerAddress(payerAddress: PayerAddress): void {\n\t\tthis.payerAddress = payerAddress;\n\t}\n\t\n\t/**\n\t * @return the payerId\n\t */\n\tpublic getPayerId(): string {\n\t\treturn this.payerId;\n\t}\n\n\n\t/**\n\t * @param payerId the payerId to set\n\t */\n\tpublic setPayerId(payerId: string): void {\n\t\tthis.payerId = payerId;\n\t}\n\t\n\n\t/**\n\t * @return the recAddress\n\t */\n\tpublic getRecAddress(): RecAddress {\n\t\treturn this.recAddress;\n\t}\n\n\n\t/**\n\t * @param recAddress the recAddress to set\n\t */\n\tpublic setRecAddress(recAddress: RecAddress): void {\n\t\tthis.recAddress = recAddress;\n\t}\n\n\t/**\n\t * @return the recId\n\t */\n\tpublic getRecId(): string {\n\t\treturn this.recId;\n\t}\n\n\n\t/**\n\t * @param recId the recId to set\n\t */\n\tpublic setRecId(recId: string): void {\n\t\tthis.recId = recId;\n\t}\n\n\n\t/**\n\t * @return the recAcct\n\t */\n\tpublic getRecAcct(): string {\n\t\treturn this.recAcct;\n\t}\n\n\n\t/**\n\t * @param recAcct the recAcct to set\n\t */\n\tpublic setRecAcct(recAcct: string): void {\n\t\tthis.recAcct = recAcct;\n\t}\n}\n\nAggregate_add(Tax1099R, \"TAX1099R_V100\");\nElement_add(Tax1099R, { name: \"SRVRTID\",required: true , order: 0, type: String, read: Tax1099R.prototype.getSrvrtId, write: Tax1099R.prototype.setSrvrtId });\nElement_add(Tax1099R, { name: \"TAXYEAR\", required: true, order: 1, type: String, read: Tax1099R.prototype.getTaxYear, write: Tax1099R.prototype.setTaxYear });\nElement_add(Tax1099R, { name: \"GROSSDIST\", required: true, order: 2, type: String, read: Tax1099R.prototype.getGrossDist, write: Tax1099R.prototype.setGrossDist });\nElement_add(Tax1099R, { name: \"TAXAMT\", required: false, order: 3, type: String, read: Tax1099R.prototype.getTaxAmt, write: Tax1099R.prototype.setTaxAmt });\nElement_add(Tax1099R, { name: \"TAXAMTND\", required: false, order: 4, type: String, read: Tax1099R.prototype.getTaxAmtNd, write: Tax1099R.prototype.setTaxAmtNd });\nElement_add(Tax1099R, { name: \"CAPGAIN\", required: false, order: 5, type: String, read: Tax1099R.prototype.getCapGain, write: Tax1099R.prototype.setCapGain });\nElement_add(Tax1099R, { name: \"FEDTAXWH\", required: false, order: 6, type: String, read: Tax1099R.prototype.getFedTaxWh, write: Tax1099R.prototype.setFedTaxWh });\nElement_add(Tax1099R, { name: \"EMPCONTINS\", required: false, order: 7, type: String, read: Tax1099R.prototype.getEmpContins, write: Tax1099R.prototype.setEmpContins });\nElement_add(Tax1099R, { name: \"NETUNAPEMP\", required: false, order: 8, type: String, read: Tax1099R.prototype.getNetUnapEmp, write: Tax1099R.prototype.setNetUnapEmp });\nElement_add(Tax1099R, { name: \"DISTCODE\", required: true, order: 9, type: String, read: Tax1099R.prototype.getDistCode, write: Tax1099R.prototype.setDistCode });\nElement_add(Tax1099R, { name: \"IRASEPSIMP\", required: true, order: 10, type: String, read: Tax1099R.prototype.getIraSepSimp, write: Tax1099R.prototype.setIraSepSimp });\nElement_add(Tax1099R, { name: \"ANNCTRCTDIST\", required: false, order: 11, type: String, read: Tax1099R.prototype.getAnnCtrctDist, write: Tax1099R.prototype.setAnnCtrctDist });\nElement_add(Tax1099R, { name: \"TOTEMPCONT\", required: false, order: 12, type: String, read: Tax1099R.prototype.getTotEmpCount, write: Tax1099R.prototype.setTotEmpCount });\nChildAggregate_add(Tax1099R, { required:true, order: 13, type: PayerAddress, read: Tax1099R.prototype.getPayerAddress, write: Tax1099R.prototype.setPayerAddress });\nElement_add(Tax1099R, { name: \"PAYERID\", required: true, order: 14, type: String, read: Tax1099R.prototype.getPayerId, write: Tax1099R.prototype.setPayerId });\nChildAggregate_add(Tax1099R, { required:true, order: 15, type: RecAddress, read: Tax1099R.prototype.getRecAddress, write: Tax1099R.prototype.setRecAddress });\nElement_add(Tax1099R, { name: \"RECID\", required: true, order: 16, type: String, read: Tax1099R.prototype.getRecId, write: Tax1099R.prototype.setRecId });\nElement_add(Tax1099R, { name: \"RECACCT\", required: true, order: 17, type: String, read: Tax1099R.prototype.getRecAcct, write: Tax1099R.prototype.setRecAcct });\n\n}\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/tax1099/Tax1099R.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/Element_add'/>\n///<reference path='../common/T1099Request'/>\n\nmodule ofx4js.domain.data.tax1099 {\n\n\nimport T1099Request = ofx4js.domain.data.common.T1099Request;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport Element_add = ofx4js.meta.Element_add;\n\n/**\n * @author Aparna Gawali\n * aparna.gawali@sungard.com\n */\nexport class Tax1099Request extends T1099Request {\n\n    public getTaxYear(): string {\n\t\treturn this.taxYear;\n\t}\n\n\tpublic setTaxYear(taxYear: string): void {\n\t\tthis.taxYear = taxYear;\n\t}\n\n\tprivate taxYear: string;\n}\n\nAggregate_add(Tax1099Request, \"TAX1099RQ\");\nElement_add(Tax1099Request, { name: \"TAXYEAR\", required: true, order: 0, type: String, read: Tax1099Request.prototype.getTaxYear, write: Tax1099Request.prototype.setTaxYear });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/tax1099/Tax1099Request.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../TransactionWrappedRequestMessage'/>\n///<reference path='Tax1099Request'/>\n\nmodule ofx4js.domain.data.tax1099 {\n\nimport TransactionWrappedRequestMessage = ofx4js.domain.data.TransactionWrappedRequestMessage;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * @author Aparna Gawali\n * aparna.gawali@sungard.com\n */\nexport class Tax1099RequestTransaction extends TransactionWrappedRequestMessage<Tax1099Request> {\n\n  private tax1099Request: Tax1099Request;\n\n  /**\n   * The tax1099Request.\n   *\n   * @return The tax1099Request.\n   */\n  public getTax1099Request(): Tax1099Request {\n    return this.tax1099Request;\n  }\n\n  /**\n   * The tax1099Request.\n   *\n   * @param tax1099Request The message.\n   *\n   */\n  public setTax1099Request(tax1099Request: Tax1099Request): void {\n    this.tax1099Request = tax1099Request;\n  }\n\n  // Inherited.\n  public setWrappedMessage(tax1099Request: Tax1099Request): void {\n\t  this.setTax1099Request(tax1099Request);\n  }\n}\n\nAggregate_add(Tax1099RequestTransaction, \"TAX1099TRNRQ\");\nChildAggregate_add(Tax1099RequestTransaction, { required: true, order: 30, type: Tax1099Request, read: Tax1099RequestTransaction.prototype.getTax1099Request, write: Tax1099RequestTransaction.prototype.setTax1099Request });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/tax1099/Tax1099RequestTransaction.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../MessageSetType'/>\n///<reference path='../RequestMessageSet'/>\n///<reference path='Tax1099RequestTransaction'/>\n\nmodule ofx4js.domain.data.tax1099 {\n\nimport MessageSetType = ofx4js.domain.data.MessageSetType;\nimport RequestMessageSet = ofx4js.domain.data.RequestMessageSet;\nimport RequestMessage = ofx4js.domain.data.RequestMessage;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * @author aparna.gawali\n * aparna.gawali@sungard.com\n * \n */\nexport class Tax1099RequestMessageSet extends RequestMessageSet {\n\n  private taxRequestTransaction: Tax1099RequestTransaction;\n\n  public getType(): MessageSetType {\n    return MessageSetType.tax1099;\n  }\n\n  /**\n   * The statement request.\n   *\n   * @return The statement request.\n   */\n  public getTaxRequestTransaction(): Tax1099RequestTransaction {\n    return this.taxRequestTransaction;\n  }\n\n  /**\n   * The statement request.\n   *\n   * @param taxRequestTransaction The statement request.\n   */\n  public setTaxRequestTransaction(taxRequestTransaction: Tax1099RequestTransaction) {\n    this.taxRequestTransaction = taxRequestTransaction;\n  }\n\n  // Inherited.\n  public getRequestMessages(): Array<RequestMessage> {\n    var requestMessages: Array<RequestMessage> = new Array<RequestMessage>();\n    if (this.getTaxRequestTransaction() != null) {\n      requestMessages.push(this.getTaxRequestTransaction());\n    }\n    return requestMessages;\n  }\n}\n\nAggregate_add(Tax1099RequestMessageSet, \"TAX1099MSGSRQV1\" );\nChildAggregate_add(Tax1099RequestMessageSet, { order: 0, type: Tax1099RequestTransaction, read: Tax1099RequestMessageSet.prototype.getTaxRequestTransaction, write: Tax1099RequestMessageSet.prototype.setTaxRequestTransaction });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/tax1099/Tax1099RequestMessageSet.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../common/T1099Response'/>\n///<reference path='Tax1099DIV'/>\n///<reference path='Tax1099INT'/>\n///<reference path='Tax1099R'/>\n///<reference path='Tax1099B'/>\n///<reference path='Tax1099MISC'/>\n///<reference path='Tax1099OID'/>\n\nmodule ofx4js.domain.data.tax1099 {\n\nimport T1099Response = ofx4js.domain.data.common.T1099Response;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * @author Aparna Gawali\n * aparna.gawali@sungard.com\n */\nexport class Tax1099Response extends T1099Response {\n\n\t// private tax1099div: Tax1099DIV;\n\tprivate lstTax1099DIV: Array<Tax1099DIV>;\n\t\n\tprivate lstTax1099INT: Array<Tax1099INT>;\n\t\n\tprivate lstTax1099R: Array<Tax1099R>;\n\t\n\tprivate lstTax1099B: Array<Tax1099B>;\n\t\n\tprivate lstTax1099MISC: Array<Tax1099MISC>;\n\t\n\tprivate lstTax1099OID: Array<Tax1099OID>;\n\n\t/**\n\t * @return the lstTax1099DIV\n\t */\n\tpublic getLstTax1099DIV(): Array<Tax1099DIV> {\n\t\treturn this.lstTax1099DIV;\n\t}\n\n\t/**\n\t * @param lstTax1099DIV\n\t *            the lstTax1099DIV to set\n\t */\n    public setLstTax1099DIV(lstTax1099DIV: Array<Tax1099DIV>): void {\n\t\tthis.lstTax1099DIV = lstTax1099DIV;\n\t}\n\n\t\n\n\tpublic getResponseMessageName(): string {\n\t\treturn \"1099 Tax details\";\n\t}\n\n\t/**\n\t * @return the lstTax1099INT\n\t */\n\tpublic getLstTax1099INT(): Array<Tax1099INT> {\n\t\treturn this.lstTax1099INT;\n\t}\n\n\t/**\n\t * @param lstTax1099INT the lstTax1099INT to set\n\t */\n    public setLstTax1099INT(lstTax1099INT: Array<Tax1099INT>): void {\n\t\tthis.lstTax1099INT = lstTax1099INT;\n\t}\n\n\t/**\n\t * @return the lstTax1099R\n\t */\n\tpublic getLstTax1099R(): Array<Tax1099R> {\n\t\treturn this.lstTax1099R;\n\t}\n\n\t/**\n\t * @param lstTax1099R the lstTax1099R to set\n\t */\n    public setLstTax1099R(lstTax1099R: Array<Tax1099R>): void {\n\t\tthis.lstTax1099R = lstTax1099R;\n\t}\n\n\t/**\n\t * @return the lstTax1099B\n\t */\n\tpublic getLstTax1099B(): Array<Tax1099B> {\n\t\treturn this.lstTax1099B;\n\t}\n\n\t/**\n\t * @param lstTax1099B the lstTax1099B to set\n\t */\n    public setLstTax1099B(lstTax1099B: Array<Tax1099B>): void {\n\t\tthis.lstTax1099B = lstTax1099B;\n\t}\n\n\t/**\n\t * @return the lstTax1099MISC\n\t */\n\tpublic getLstTax1099MISC(): Array<Tax1099MISC> {\n\t\treturn this.lstTax1099MISC;\n\t}\n\n\t/**\n\t * @param lstTax1099MISC the lstTax1099MISC to set\n\t */\n    public setLstTax1099MISC(lstTax1099MISC: Array<Tax1099MISC>): void {\n\t\tthis.lstTax1099MISC = lstTax1099MISC;\n\t}\n\n\t/**\n\t * @return the lstTax1099OID\n\t */\n\tpublic getLstTax1099OID(): Array<Tax1099OID> {\n\t\treturn this.lstTax1099OID;\n\t}\n\n\t/**\n\t * @param lstTax1099OID the lstTax1099OID to set\n\t */\n    public setLstTax1099OID(lstTax1099OID: Array<Tax1099OID>): void {\n\t\tthis.lstTax1099OID = lstTax1099OID;\n\t}\n}\n\nAggregate_add(Tax1099Response, \"TAX1099RS\");\nChildAggregate_add(Tax1099Response, { required: false, order: 0, type: Array, collectionEntryType: Tax1099DIV, read: Tax1099Response.prototype.getLstTax1099DIV, write: Tax1099Response.prototype.setLstTax1099DIV });\nChildAggregate_add(Tax1099Response, { required: false, order: 1, type: Array, collectionEntryType: Tax1099INT, read: Tax1099Response.prototype.getLstTax1099INT, write: Tax1099Response.prototype.setLstTax1099INT });\nChildAggregate_add(Tax1099Response, { required: false, order: 2, type: Array, collectionEntryType: Tax1099R, read: Tax1099Response.prototype.getLstTax1099R, write: Tax1099Response.prototype.setLstTax1099R });\nChildAggregate_add(Tax1099Response, { required: false, order: 3, type: Array, collectionEntryType: Tax1099B, read: Tax1099Response.prototype.getLstTax1099B, write: Tax1099Response.prototype.setLstTax1099B });\nChildAggregate_add(Tax1099Response, { required: false, order: 4, type: Array, collectionEntryType: Tax1099MISC, read: Tax1099Response.prototype.getLstTax1099MISC, write: Tax1099Response.prototype.setLstTax1099MISC });\nChildAggregate_add(Tax1099Response, { required: false, order:5, type: Array, collectionEntryType: Tax1099OID, read: Tax1099Response.prototype.getLstTax1099OID, write: Tax1099Response.prototype.setLstTax1099OID });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/tax1099/Tax1099Response.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../TransactionWrappedResponseMessage'/>\n///<reference path='Tax1099Response'/>\n\nmodule ofx4js.domain.data.tax1099 {\n\nimport TransactionWrappedResponseMessage = ofx4js.domain.data.TransactionWrappedResponseMessage;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * @author Aparna Gawali\n * aparna.gawali@sungard.com\n */\nexport class Tax1099ResponseTransaction extends TransactionWrappedResponseMessage<Tax1099Response> {\n\n  private tax1099Response: Tax1099Response;\n\n  /**\n   * The tax1099Response.\n   *\n   * @return The tax1099Response.\n   */\n  public getTax1099Response(): Tax1099Response {\n    return this.tax1099Response;\n  }\n\n  /**\n   * The tax1099Response.\n   *\n   * @param tax1099Response The message.\n   */\n  public setTax1099Response(tax1099Response: Tax1099Response): void {\n    this.tax1099Response = tax1099Response;\n  }\n\n  // Inherited.\n  public getWrappedMessage(): Tax1099Response {\n    return this.getTax1099Response();\n  }\n}\n\nAggregate_add( Tax1099ResponseTransaction, \"TAX1099TRNRS\");\nChildAggregate_add(Tax1099ResponseTransaction, { required:false, order: 2, type: Tax1099Response, read: Tax1099ResponseTransaction.prototype.getTax1099Response, write: Tax1099ResponseTransaction.prototype.setTax1099Response });\n\n}\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/tax1099/Tax1099ResponseTransaction.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../../../meta/Aggregate_add'/>\n///<reference path='../../../meta/ChildAggregate_add'/>\n///<reference path='../MessageSetType'/>\n///<reference path='../ResponseMessageSet'/>\n///<reference path='Tax1099ResponseTransaction'/>\n\nmodule ofx4js.domain.data.tax1099 {\n\nimport MessageSetType = ofx4js.domain.data.MessageSetType;\nimport ResponseMessage = ofx4js.domain.data.ResponseMessage;\nimport ResponseMessageSet = ofx4js.domain.data.ResponseMessageSet;\nimport Aggregate_add = ofx4js.meta.Aggregate_add;\nimport ChildAggregate_add = ofx4js.meta.ChildAggregate_add;\n\n/**\n * @author Aparna Gawali\n * aparna.gawali@sungard.com\n */\nexport class Tax1099ResponseMessageSet extends ResponseMessageSet {\n\n  private taxResponseTransaction: Array<Tax1099ResponseTransaction>;\n\n  public getType(): MessageSetType {\n    return MessageSetType.tax1099;\n  }\n\n  /**\n   * The taxResponseTransaction list.\n   *\n   * Most OFX files have a single statement response, except MT2OFX\n   * which outputs OFX with multiple statement responses\n   * in a single banking response message set.\n   *\n   * @return The taxResponseTransaction list.\n   */\n  public getTaxResponseTransaction(): Array<Tax1099ResponseTransaction> {\n    return this.taxResponseTransaction;\n  }\n\n  /**\n   * The taxResponseTransaction.\n   *\n   * @param taxResponseTransaction The statement responses.\n   */\n  public setTaxResponseTransaction(taxResponseTransaction: Tax1099ResponseTransaction | Array<Tax1099ResponseTransaction>): void {\n    if(taxResponseTransaction instanceof Array) {\n      this.taxResponseTransaction = <Array<Tax1099ResponseTransaction>>taxResponseTransaction;\n    } else if(taxResponseTransaction instanceof Tax1099ResponseTransaction) {\n      this.taxResponseTransaction = [<Tax1099ResponseTransaction>taxResponseTransaction];\n    } else {\n      throw new OFXException(\"invalid type\");\n    }\n  }\n\n  // Inherited.\n  public getResponseMessages(): Array<ResponseMessage> {\n    return this.taxResponseTransaction;\n  }\n\n  /**\n   * The first statement response.\n   *\n   * @return the first bank statement response.\n   * @deprecated Use getStatementResponses() because sometimes there are multiple responses\n   */\n  public getStatementResponse(): Tax1099ResponseTransaction {\n    return this.taxResponseTransaction == null || this.taxResponseTransaction.length == 0 ? null : this.taxResponseTransaction[0];\n  }\n}\n  \nAggregate_add( Tax1099ResponseMessageSet, \"TAX1099MSGSRSV1\" );\nChildAggregate_add(Tax1099ResponseMessageSet, { order: 0, type: Array, collectionEntryType: Tax1099ResponseTransaction, read: Tax1099ResponseMessageSet.prototype.getTaxResponseTransaction, write: Tax1099ResponseMessageSet.prototype.setTaxResponseTransaction });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../domain/data/tax1099/Tax1099ResponseMessageSet.ts","\nmodule ofx4js {\n\texport interface dummy {};\n}\n\ndeclare var module: any;\n\nmodule.exports = ofx4js;\n\n\n\n// WEBPACK FOOTER //\n// ../../export.ts","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n///<reference path='../OFXRuntimeException'/>\n\nmodule ofx4js.io {\n\nimport OFXRuntimeException = ofx4js.OFXRuntimeException;\n\n/**\n * Thrown when a required attribute of an aggregate is null or empty.\n *\n * @author Ryan Heaton\n */\nexport class RequiredAttributeException extends OFXRuntimeException {\n\n  constructor(message: string) {\n    super(message);\n  }\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../io/RequiredAttributeException.ts","//     uuid.js\n//\n//     Copyright (c) 2010-2012 Robert Kieffer\n//     MIT License - http://opensource.org/licenses/mit-license.php\n\n// Unique ID creation requires a high quality random # generator.  We feature\n// detect to determine the best RNG source, normalizing to a function that\n// returns 128-bits of randomness, since that's what's usually required\nvar _rng = require('./rng');\n\n// Maps for number <-> hex string conversion\nvar _byteToHex = [];\nvar _hexToByte = {};\nfor (var i = 0; i < 256; i++) {\n  _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n  _hexToByte[_byteToHex[i]] = i;\n}\n\n// **`parse()` - Parse a UUID into it's component bytes**\nfunction parse(s, buf, offset) {\n  var i = (buf && offset) || 0, ii = 0;\n\n  buf = buf || [];\n  s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {\n    if (ii < 16) { // Don't overflow!\n      buf[i + ii++] = _hexToByte[oct];\n    }\n  });\n\n  // Zero out remaining bytes if string was short\n  while (ii < 16) {\n    buf[i + ii++] = 0;\n  }\n\n  return buf;\n}\n\n// **`unparse()` - Convert UUID byte array (ala parse()) into a string**\nfunction unparse(buf, offset) {\n  var i = offset || 0, bth = _byteToHex;\n  return  bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\n// random #'s we need to init node and clockseq\nvar _seedBytes = _rng();\n\n// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\nvar _nodeId = [\n  _seedBytes[0] | 0x01,\n  _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n];\n\n// Per 4.2.2, randomize (14 bit) clockseq\nvar _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\n// Previous uuid creation time\nvar _lastMSecs = 0, _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  var node = options.node || _nodeId;\n  for (var n = 0; n < 6; n++) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : unparse(b);\n}\n\n// **`v4()` - Generate random UUID**\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v4(options, buf, offset) {\n  // Deprecated - 'format' argument, as supported in v1.2\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options == 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || _rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ii++) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || unparse(rnds);\n}\n\n// Export public API\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\nuuid.parse = parse;\nuuid.unparse = unparse;\n\nmodule.exports = uuid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/uuid/uuid.js\n// module id = 1\n// module chunks = 0","\nvar rng;\n\nvar crypto = global.crypto || global.msCrypto; // for IE 11\nif (crypto && crypto.getRandomValues) {\n  // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto\n  // Moderately fast, high quality\n  var _rnds8 = new Uint8Array(16);\n  rng = function whatwgRNG() {\n    crypto.getRandomValues(_rnds8);\n    return _rnds8;\n  };\n}\n\nif (!rng) {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var  _rnds = new Array(16);\n  rng = function() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return _rnds;\n  };\n}\n\nmodule.exports = rng;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/uuid/rng-browser.js\n// module id = 2\n// module chunks = 0",";(function (sax) { // wrapper for non-node envs\n  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\n  sax.SAXParser = SAXParser\n  sax.SAXStream = SAXStream\n  sax.createStream = createStream\n\n  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n  // since that's the earliest that a buffer overrun could occur.  This way, checks are\n  // as rare as required, but as often as necessary to ensure never crossing this bound.\n  // Furthermore, buffers are only tested at most once per write(), so passing a very\n  // large string into write() might have undesirable effects, but this is manageable by\n  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n  // edge case, result in creating at most one complete copy of the string passed in.\n  // Set to Infinity to have unlimited buffers.\n  sax.MAX_BUFFER_LENGTH = 64 * 1024\n\n  var buffers = [\n    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\n    'procInstName', 'procInstBody', 'entity', 'attribName',\n    'attribValue', 'cdata', 'script'\n  ]\n\n  sax.EVENTS = [\n    'text',\n    'processinginstruction',\n    'sgmldeclaration',\n    'doctype',\n    'comment',\n    'opentagstart',\n    'attribute',\n    'opentag',\n    'closetag',\n    'opencdata',\n    'cdata',\n    'closecdata',\n    'error',\n    'end',\n    'ready',\n    'script',\n    'opennamespace',\n    'closenamespace'\n  ]\n\n  function SAXParser (strict, opt) {\n    if (!(this instanceof SAXParser)) {\n      return new SAXParser(strict, opt)\n    }\n\n    var parser = this\n    clearBuffers(parser)\n    parser.q = parser.c = ''\n    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n    parser.opt = opt || {}\n    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\n    parser.tags = []\n    parser.closed = parser.closedRoot = parser.sawRoot = false\n    parser.tag = parser.error = null\n    parser.strict = !!strict\n    parser.noscript = !!(strict || parser.opt.noscript)\n    parser.state = S.BEGIN\n    parser.strictEntities = parser.opt.strictEntities\n    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\n    parser.attribList = []\n\n    // namespaces form a prototype chain.\n    // it always points at the current tag,\n    // which protos to its parent tag.\n    if (parser.opt.xmlns) {\n      parser.ns = Object.create(rootNS)\n    }\n\n    // mostly just for error reporting\n    parser.trackPosition = parser.opt.position !== false\n    if (parser.trackPosition) {\n      parser.position = parser.line = parser.column = 0\n    }\n    emit(parser, 'onready')\n  }\n\n  if (!Object.create) {\n    Object.create = function (o) {\n      function F () {}\n      F.prototype = o\n      var newf = new F()\n      return newf\n    }\n  }\n\n  if (!Object.keys) {\n    Object.keys = function (o) {\n      var a = []\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n      return a\n    }\n  }\n\n  function checkBufferLength (parser) {\n    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    var maxActual = 0\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      var len = parser[buffers[i]].length\n      if (len > maxAllowed) {\n        // Text/cdata nodes can get big, and since they're buffered,\n        // we can get here under normal conditions.\n        // Avoid issues by emitting the text node now,\n        // so at least it won't get any bigger.\n        switch (buffers[i]) {\n          case 'textNode':\n            closeText(parser)\n            break\n\n          case 'cdata':\n            emitNode(parser, 'oncdata', parser.cdata)\n            parser.cdata = ''\n            break\n\n          case 'script':\n            emitNode(parser, 'onscript', parser.script)\n            parser.script = ''\n            break\n\n          default:\n            error(parser, 'Max buffer length exceeded: ' + buffers[i])\n        }\n      }\n      maxActual = Math.max(maxActual, len)\n    }\n    // schedule the next check for the earliest possible buffer overrun.\n    var m = sax.MAX_BUFFER_LENGTH - maxActual\n    parser.bufferCheckPosition = m + parser.position\n  }\n\n  function clearBuffers (parser) {\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      parser[buffers[i]] = ''\n    }\n  }\n\n  function flushBuffers (parser) {\n    closeText(parser)\n    if (parser.cdata !== '') {\n      emitNode(parser, 'oncdata', parser.cdata)\n      parser.cdata = ''\n    }\n    if (parser.script !== '') {\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n  }\n\n  SAXParser.prototype = {\n    end: function () { end(this) },\n    write: write,\n    resume: function () { this.error = null; return this },\n    close: function () { return this.write(null) },\n    flush: function () { flushBuffers(this) }\n  }\n\n  var Stream\n  try {\n    Stream = require('stream').Stream\n  } catch (ex) {\n    Stream = function () {}\n  }\n\n  var streamWraps = sax.EVENTS.filter(function (ev) {\n    return ev !== 'error' && ev !== 'end'\n  })\n\n  function createStream (strict, opt) {\n    return new SAXStream(strict, opt)\n  }\n\n  function SAXStream (strict, opt) {\n    if (!(this instanceof SAXStream)) {\n      return new SAXStream(strict, opt)\n    }\n\n    Stream.apply(this)\n\n    this._parser = new SAXParser(strict, opt)\n    this.writable = true\n    this.readable = true\n\n    var me = this\n\n    this._parser.onend = function () {\n      me.emit('end')\n    }\n\n    this._parser.onerror = function (er) {\n      me.emit('error', er)\n\n      // if didn't throw, then means error was handled.\n      // go ahead and clear error, so we can write again.\n      me._parser.error = null\n    }\n\n    this._decoder = null\n\n    streamWraps.forEach(function (ev) {\n      Object.defineProperty(me, 'on' + ev, {\n        get: function () {\n          return me._parser['on' + ev]\n        },\n        set: function (h) {\n          if (!h) {\n            me.removeAllListeners(ev)\n            me._parser['on' + ev] = h\n            return h\n          }\n          me.on(ev, h)\n        },\n        enumerable: true,\n        configurable: false\n      })\n    })\n  }\n\n  SAXStream.prototype = Object.create(Stream.prototype, {\n    constructor: {\n      value: SAXStream\n    }\n  })\n\n  SAXStream.prototype.write = function (data) {\n    if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n      if (!this._decoder) {\n        var SD = require('string_decoder').StringDecoder\n        this._decoder = new SD('utf8')\n      }\n      data = this._decoder.write(data)\n    }\n\n    this._parser.write(data.toString())\n    this.emit('data', data)\n    return true\n  }\n\n  SAXStream.prototype.end = function (chunk) {\n    if (chunk && chunk.length) {\n      this.write(chunk)\n    }\n    this._parser.end()\n    return true\n  }\n\n  SAXStream.prototype.on = function (ev, handler) {\n    var me = this\n    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n      me._parser['on' + ev] = function () {\n        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\n        args.splice(0, 0, ev)\n        me.emit.apply(me, args)\n      }\n    }\n\n    return Stream.prototype.on.call(me, ev, handler)\n  }\n\n  // character classes and tokens\n  var whitespace = '\\r\\n\\t '\n\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  var number = '0124356789'\n  var letter = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\n  // (Letter | \"_\" | \":\")\n  var quote = '\\'\"'\n  var attribEnd = whitespace + '>'\n  var CDATA = '[CDATA['\n  var DOCTYPE = 'DOCTYPE'\n  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\n  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\n  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n  // turn all the string character sets into character class objects.\n  whitespace = charClass(whitespace)\n  number = charClass(number)\n  letter = charClass(letter)\n\n  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n  // This implementation works on strings, a single character at a time\n  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n  // without a significant breaking change to either this  parser, or the\n  // JavaScript language.  Implementation of an emoji-capable xml parser\n  // is left as an exercise for the reader.\n  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\n  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040\\.\\d-]/\n\n  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040\\.\\d-]/\n\n  quote = charClass(quote)\n  attribEnd = charClass(attribEnd)\n\n  function charClass (str) {\n    return str.split('').reduce(function (s, c) {\n      s[c] = true\n      return s\n    }, {})\n  }\n\n  function isRegExp (c) {\n    return Object.prototype.toString.call(c) === '[object RegExp]'\n  }\n\n  function is (charclass, c) {\n    return isRegExp(charclass) ? !!c.match(charclass) : charclass[c]\n  }\n\n  function not (charclass, c) {\n    return !is(charclass, c)\n  }\n\n  var S = 0\n  sax.STATE = {\n    BEGIN: S++, // leading byte order mark or whitespace\n    BEGIN_WHITESPACE: S++, // leading whitespace\n    TEXT: S++, // general stuff\n    TEXT_ENTITY: S++, // &amp and such.\n    OPEN_WAKA: S++, // <\n    SGML_DECL: S++, // <!BLARG\n    SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\n    DOCTYPE: S++, // <!DOCTYPE\n    DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\n    DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\n    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\n    COMMENT_STARTING: S++, // <!-\n    COMMENT: S++, // <!--\n    COMMENT_ENDING: S++, // <!-- blah -\n    COMMENT_ENDED: S++, // <!-- blah --\n    CDATA: S++, // <![CDATA[ something\n    CDATA_ENDING: S++, // ]\n    CDATA_ENDING_2: S++, // ]]\n    PROC_INST: S++, // <?hi\n    PROC_INST_BODY: S++, // <?hi there\n    PROC_INST_ENDING: S++, // <?hi \"there\" ?\n    OPEN_TAG: S++, // <strong\n    OPEN_TAG_SLASH: S++, // <strong /\n    ATTRIB: S++, // <a\n    ATTRIB_NAME: S++, // <a foo\n    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\n    ATTRIB_VALUE: S++, // <a foo=\n    ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\n    ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\n    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\n    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\n    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\n    CLOSE_TAG: S++, // </a\n    CLOSE_TAG_SAW_WHITE: S++, // </a   >\n    SCRIPT: S++, // <script> ...\n    SCRIPT_ENDING: S++ // <script> ... <\n  }\n\n  sax.XML_ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\"\n  }\n\n  sax.ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\",\n    'AElig': 198,\n    'Aacute': 193,\n    'Acirc': 194,\n    'Agrave': 192,\n    'Aring': 197,\n    'Atilde': 195,\n    'Auml': 196,\n    'Ccedil': 199,\n    'ETH': 208,\n    'Eacute': 201,\n    'Ecirc': 202,\n    'Egrave': 200,\n    'Euml': 203,\n    'Iacute': 205,\n    'Icirc': 206,\n    'Igrave': 204,\n    'Iuml': 207,\n    'Ntilde': 209,\n    'Oacute': 211,\n    'Ocirc': 212,\n    'Ograve': 210,\n    'Oslash': 216,\n    'Otilde': 213,\n    'Ouml': 214,\n    'THORN': 222,\n    'Uacute': 218,\n    'Ucirc': 219,\n    'Ugrave': 217,\n    'Uuml': 220,\n    'Yacute': 221,\n    'aacute': 225,\n    'acirc': 226,\n    'aelig': 230,\n    'agrave': 224,\n    'aring': 229,\n    'atilde': 227,\n    'auml': 228,\n    'ccedil': 231,\n    'eacute': 233,\n    'ecirc': 234,\n    'egrave': 232,\n    'eth': 240,\n    'euml': 235,\n    'iacute': 237,\n    'icirc': 238,\n    'igrave': 236,\n    'iuml': 239,\n    'ntilde': 241,\n    'oacute': 243,\n    'ocirc': 244,\n    'ograve': 242,\n    'oslash': 248,\n    'otilde': 245,\n    'ouml': 246,\n    'szlig': 223,\n    'thorn': 254,\n    'uacute': 250,\n    'ucirc': 251,\n    'ugrave': 249,\n    'uuml': 252,\n    'yacute': 253,\n    'yuml': 255,\n    'copy': 169,\n    'reg': 174,\n    'nbsp': 160,\n    'iexcl': 161,\n    'cent': 162,\n    'pound': 163,\n    'curren': 164,\n    'yen': 165,\n    'brvbar': 166,\n    'sect': 167,\n    'uml': 168,\n    'ordf': 170,\n    'laquo': 171,\n    'not': 172,\n    'shy': 173,\n    'macr': 175,\n    'deg': 176,\n    'plusmn': 177,\n    'sup1': 185,\n    'sup2': 178,\n    'sup3': 179,\n    'acute': 180,\n    'micro': 181,\n    'para': 182,\n    'middot': 183,\n    'cedil': 184,\n    'ordm': 186,\n    'raquo': 187,\n    'frac14': 188,\n    'frac12': 189,\n    'frac34': 190,\n    'iquest': 191,\n    'times': 215,\n    'divide': 247,\n    'OElig': 338,\n    'oelig': 339,\n    'Scaron': 352,\n    'scaron': 353,\n    'Yuml': 376,\n    'fnof': 402,\n    'circ': 710,\n    'tilde': 732,\n    'Alpha': 913,\n    'Beta': 914,\n    'Gamma': 915,\n    'Delta': 916,\n    'Epsilon': 917,\n    'Zeta': 918,\n    'Eta': 919,\n    'Theta': 920,\n    'Iota': 921,\n    'Kappa': 922,\n    'Lambda': 923,\n    'Mu': 924,\n    'Nu': 925,\n    'Xi': 926,\n    'Omicron': 927,\n    'Pi': 928,\n    'Rho': 929,\n    'Sigma': 931,\n    'Tau': 932,\n    'Upsilon': 933,\n    'Phi': 934,\n    'Chi': 935,\n    'Psi': 936,\n    'Omega': 937,\n    'alpha': 945,\n    'beta': 946,\n    'gamma': 947,\n    'delta': 948,\n    'epsilon': 949,\n    'zeta': 950,\n    'eta': 951,\n    'theta': 952,\n    'iota': 953,\n    'kappa': 954,\n    'lambda': 955,\n    'mu': 956,\n    'nu': 957,\n    'xi': 958,\n    'omicron': 959,\n    'pi': 960,\n    'rho': 961,\n    'sigmaf': 962,\n    'sigma': 963,\n    'tau': 964,\n    'upsilon': 965,\n    'phi': 966,\n    'chi': 967,\n    'psi': 968,\n    'omega': 969,\n    'thetasym': 977,\n    'upsih': 978,\n    'piv': 982,\n    'ensp': 8194,\n    'emsp': 8195,\n    'thinsp': 8201,\n    'zwnj': 8204,\n    'zwj': 8205,\n    'lrm': 8206,\n    'rlm': 8207,\n    'ndash': 8211,\n    'mdash': 8212,\n    'lsquo': 8216,\n    'rsquo': 8217,\n    'sbquo': 8218,\n    'ldquo': 8220,\n    'rdquo': 8221,\n    'bdquo': 8222,\n    'dagger': 8224,\n    'Dagger': 8225,\n    'bull': 8226,\n    'hellip': 8230,\n    'permil': 8240,\n    'prime': 8242,\n    'Prime': 8243,\n    'lsaquo': 8249,\n    'rsaquo': 8250,\n    'oline': 8254,\n    'frasl': 8260,\n    'euro': 8364,\n    'image': 8465,\n    'weierp': 8472,\n    'real': 8476,\n    'trade': 8482,\n    'alefsym': 8501,\n    'larr': 8592,\n    'uarr': 8593,\n    'rarr': 8594,\n    'darr': 8595,\n    'harr': 8596,\n    'crarr': 8629,\n    'lArr': 8656,\n    'uArr': 8657,\n    'rArr': 8658,\n    'dArr': 8659,\n    'hArr': 8660,\n    'forall': 8704,\n    'part': 8706,\n    'exist': 8707,\n    'empty': 8709,\n    'nabla': 8711,\n    'isin': 8712,\n    'notin': 8713,\n    'ni': 8715,\n    'prod': 8719,\n    'sum': 8721,\n    'minus': 8722,\n    'lowast': 8727,\n    'radic': 8730,\n    'prop': 8733,\n    'infin': 8734,\n    'ang': 8736,\n    'and': 8743,\n    'or': 8744,\n    'cap': 8745,\n    'cup': 8746,\n    'int': 8747,\n    'there4': 8756,\n    'sim': 8764,\n    'cong': 8773,\n    'asymp': 8776,\n    'ne': 8800,\n    'equiv': 8801,\n    'le': 8804,\n    'ge': 8805,\n    'sub': 8834,\n    'sup': 8835,\n    'nsub': 8836,\n    'sube': 8838,\n    'supe': 8839,\n    'oplus': 8853,\n    'otimes': 8855,\n    'perp': 8869,\n    'sdot': 8901,\n    'lceil': 8968,\n    'rceil': 8969,\n    'lfloor': 8970,\n    'rfloor': 8971,\n    'lang': 9001,\n    'rang': 9002,\n    'loz': 9674,\n    'spades': 9824,\n    'clubs': 9827,\n    'hearts': 9829,\n    'diams': 9830\n  }\n\n  Object.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n  })\n\n  for (var s in sax.STATE) {\n    sax.STATE[sax.STATE[s]] = s\n  }\n\n  // shorthand\n  S = sax.STATE\n\n  function emit (parser, event, data) {\n    parser[event] && parser[event](data)\n  }\n\n  function emitNode (parser, nodeType, data) {\n    if (parser.textNode) closeText(parser)\n    emit(parser, nodeType, data)\n  }\n\n  function closeText (parser) {\n    parser.textNode = textopts(parser.opt, parser.textNode)\n    if (parser.textNode) emit(parser, 'ontext', parser.textNode)\n    parser.textNode = ''\n  }\n\n  function textopts (opt, text) {\n    if (opt.trim) text = text.trim()\n    if (opt.normalize) text = text.replace(/\\s+/g, ' ')\n    return text\n  }\n\n  function error (parser, er) {\n    closeText(parser)\n    if (parser.trackPosition) {\n      er += '\\nLine: ' + parser.line +\n        '\\nColumn: ' + parser.column +\n        '\\nChar: ' + parser.c\n    }\n    er = new Error(er)\n    parser.error = er\n    emit(parser, 'onerror', er)\n    return parser\n  }\n\n  function end (parser) {\n    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\n    if ((parser.state !== S.BEGIN) &&\n      (parser.state !== S.BEGIN_WHITESPACE) &&\n      (parser.state !== S.TEXT)) {\n      error(parser, 'Unexpected end')\n    }\n    closeText(parser)\n    parser.c = ''\n    parser.closed = true\n    emit(parser, 'onend')\n    SAXParser.call(parser, parser.strict, parser.opt)\n    return parser\n  }\n\n  function strictFail (parser, message) {\n    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\n      throw new Error('bad call to strictFail')\n    }\n    if (parser.strict) {\n      error(parser, message)\n    }\n  }\n\n  function newTag (parser) {\n    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    var tag = parser.tag = { name: parser.tagName, attributes: {} }\n\n    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n    if (parser.opt.xmlns) {\n      tag.ns = parent.ns\n    }\n    parser.attribList.length = 0\n    emitNode(parser, 'onopentagstart', tag)\n  }\n\n  function qname (name, attribute) {\n    var i = name.indexOf(':')\n    var qualName = i < 0 ? [ '', name ] : name.split(':')\n    var prefix = qualName[0]\n    var local = qualName[1]\n\n    // <x \"xmlns\"=\"http://foo\">\n    if (attribute && name === 'xmlns') {\n      prefix = 'xmlns'\n      local = ''\n    }\n\n    return { prefix: prefix, local: local }\n  }\n\n  function attrib (parser) {\n    if (!parser.strict) {\n      parser.attribName = parser.attribName[parser.looseCase]()\n    }\n\n    if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n      parser.attribName = parser.attribValue = ''\n      return\n    }\n\n    if (parser.opt.xmlns) {\n      var qn = qname(parser.attribName, true)\n      var prefix = qn.prefix\n      var local = qn.local\n\n      if (prefix === 'xmlns') {\n        // namespace binding attribute. push the binding into scope\n        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n          strictFail(parser,\n            'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n          strictFail(parser,\n            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else {\n          var tag = parser.tag\n          var parent = parser.tags[parser.tags.length - 1] || parser\n          if (tag.ns === parent.ns) {\n            tag.ns = Object.create(parent.ns)\n          }\n          tag.ns[local] = parser.attribValue\n        }\n      }\n\n      // defer onattribute events until all attributes have been seen\n      // so any new bindings can take effect. preserve attribute order\n      // so deferred events can be emitted in document order\n      parser.attribList.push([parser.attribName, parser.attribValue])\n    } else {\n      // in non-xmlns mode, we can emit the event right away\n      parser.tag.attributes[parser.attribName] = parser.attribValue\n      emitNode(parser, 'onattribute', {\n        name: parser.attribName,\n        value: parser.attribValue\n      })\n    }\n\n    parser.attribName = parser.attribValue = ''\n  }\n\n  function openTag (parser, selfClosing) {\n    if (parser.opt.xmlns) {\n      // emit namespace binding events\n      var tag = parser.tag\n\n      // add namespace info to tag\n      var qn = qname(parser.tagName)\n      tag.prefix = qn.prefix\n      tag.local = qn.local\n      tag.uri = tag.ns[qn.prefix] || ''\n\n      if (tag.prefix && !tag.uri) {\n        strictFail(parser, 'Unbound namespace prefix: ' +\n          JSON.stringify(parser.tagName))\n        tag.uri = qn.prefix\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (tag.ns && parent.ns !== tag.ns) {\n        Object.keys(tag.ns).forEach(function (p) {\n          emitNode(parser, 'onopennamespace', {\n            prefix: p,\n            uri: tag.ns[p]\n          })\n        })\n      }\n\n      // handle deferred onattribute events\n      // Note: do not apply default ns to attributes:\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\n      for (var i = 0, l = parser.attribList.length; i < l; i++) {\n        var nv = parser.attribList[i]\n        var name = nv[0]\n        var value = nv[1]\n        var qualName = qname(name, true)\n        var prefix = qualName.prefix\n        var local = qualName.local\n        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\n        var a = {\n          name: name,\n          value: value,\n          prefix: prefix,\n          local: local,\n          uri: uri\n        }\n\n        // if there's any attributes with an undefined namespace,\n        // then fail on them now.\n        if (prefix && prefix !== 'xmlns' && !uri) {\n          strictFail(parser, 'Unbound namespace prefix: ' +\n            JSON.stringify(prefix))\n          a.uri = prefix\n        }\n        parser.tag.attributes[name] = a\n        emitNode(parser, 'onattribute', a)\n      }\n      parser.attribList.length = 0\n    }\n\n    parser.tag.isSelfClosing = !!selfClosing\n\n    // process the tag\n    parser.sawRoot = true\n    parser.tags.push(parser.tag)\n    emitNode(parser, 'onopentag', parser.tag)\n    if (!selfClosing) {\n      // special case for <script> in non-strict mode.\n      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n        parser.state = S.SCRIPT\n      } else {\n        parser.state = S.TEXT\n      }\n      parser.tag = null\n      parser.tagName = ''\n    }\n    parser.attribName = parser.attribValue = ''\n    parser.attribList.length = 0\n  }\n\n  function closeTag (parser) {\n    if (!parser.tagName) {\n      strictFail(parser, 'Weird empty close tag.')\n      parser.textNode += '</>'\n      parser.state = S.TEXT\n      return\n    }\n\n    if (parser.script) {\n      if (parser.tagName !== 'script') {\n        parser.script += '</' + parser.tagName + '>'\n        parser.tagName = ''\n        parser.state = S.SCRIPT\n        return\n      }\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n\n    // first make sure that the closing tag actually exists.\n    // <a><b></c></b></a> will close everything, otherwise.\n    var t = parser.tags.length\n    var tagName = parser.tagName\n    if (!parser.strict) {\n      tagName = tagName[parser.looseCase]()\n    }\n    var closeTo = tagName\n    while (t--) {\n      var close = parser.tags[t]\n      if (close.name !== closeTo) {\n        // fail the first time in strict mode\n        strictFail(parser, 'Unexpected close tag')\n      } else {\n        break\n      }\n    }\n\n    // didn't find it.  we already failed for strict, so just abort.\n    if (t < 0) {\n      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\n      parser.textNode += '</' + parser.tagName + '>'\n      parser.state = S.TEXT\n      return\n    }\n    parser.tagName = tagName\n    var s = parser.tags.length\n    while (s-- > t) {\n      var tag = parser.tag = parser.tags.pop()\n      parser.tagName = parser.tag.name\n      emitNode(parser, 'onclosetag', parser.tagName)\n\n      var x = {}\n      for (var i in tag.ns) {\n        x[i] = tag.ns[i]\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (parser.opt.xmlns && tag.ns !== parent.ns) {\n        // remove namespace bindings introduced by tag\n        Object.keys(tag.ns).forEach(function (p) {\n          var n = tag.ns[p]\n          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\n        })\n      }\n    }\n    if (t === 0) parser.closedRoot = true\n    parser.tagName = parser.attribValue = parser.attribName = ''\n    parser.attribList.length = 0\n    parser.state = S.TEXT\n  }\n\n  function parseEntity (parser) {\n    var entity = parser.entity\n    var entityLC = entity.toLowerCase()\n    var num\n    var numStr = ''\n\n    if (parser.ENTITIES[entity]) {\n      return parser.ENTITIES[entity]\n    }\n    if (parser.ENTITIES[entityLC]) {\n      return parser.ENTITIES[entityLC]\n    }\n    entity = entityLC\n    if (entity.charAt(0) === '#') {\n      if (entity.charAt(1) === 'x') {\n        entity = entity.slice(2)\n        num = parseInt(entity, 16)\n        numStr = num.toString(16)\n      } else {\n        entity = entity.slice(1)\n        num = parseInt(entity, 10)\n        numStr = num.toString(10)\n      }\n    }\n    entity = entity.replace(/^0+/, '')\n    if (numStr.toLowerCase() !== entity) {\n      strictFail(parser, 'Invalid character entity')\n      return '&' + parser.entity + ';'\n    }\n\n    return String.fromCodePoint(num)\n  }\n\n  function beginWhiteSpace (parser, c) {\n    if (c === '<') {\n      parser.state = S.OPEN_WAKA\n      parser.startTagPosition = parser.position\n    } else if (not(whitespace, c)) {\n      // have to process this as a text node.\n      // weird, but happens.\n      strictFail(parser, 'Non-whitespace before first tag.')\n      parser.textNode = c\n      parser.state = S.TEXT\n    }\n  }\n\n  function charAt (chunk, i) {\n    var result = ''\n    if (i < chunk.length) {\n      result = chunk.charAt(i)\n    }\n    return result\n  }\n\n  function write (chunk) {\n    var parser = this\n    if (this.error) {\n      throw this.error\n    }\n    if (parser.closed) {\n      return error(parser,\n        'Cannot write after close. Assign an onready handler.')\n    }\n    if (chunk === null) {\n      return end(parser)\n    }\n    if (typeof chunk === 'object') {\n      chunk = chunk.toString()\n    }\n    var i = 0\n    var c = ''\n    while (true) {\n      c = charAt(chunk, i++)\n      parser.c = c\n      if (!c) {\n        break\n      }\n      if (parser.trackPosition) {\n        parser.position++\n        if (c === '\\n') {\n          parser.line++\n          parser.column = 0\n        } else {\n          parser.column++\n        }\n      }\n      switch (parser.state) {\n        case S.BEGIN:\n          parser.state = S.BEGIN_WHITESPACE\n          if (c === '\\uFEFF') {\n            continue\n          }\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.BEGIN_WHITESPACE:\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.TEXT:\n          if (parser.sawRoot && !parser.closedRoot) {\n            var starti = i - 1\n            while (c && c !== '<' && c !== '&') {\n              c = charAt(chunk, i++)\n              if (c && parser.trackPosition) {\n                parser.position++\n                if (c === '\\n') {\n                  parser.line++\n                  parser.column = 0\n                } else {\n                  parser.column++\n                }\n              }\n            }\n            parser.textNode += chunk.substring(starti, i - 1)\n          }\n          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n            parser.state = S.OPEN_WAKA\n            parser.startTagPosition = parser.position\n          } else {\n            if (not(whitespace, c) && (!parser.sawRoot || parser.closedRoot)) {\n              strictFail(parser, 'Text data outside of root node.')\n            }\n            if (c === '&') {\n              parser.state = S.TEXT_ENTITY\n            } else {\n              parser.textNode += c\n            }\n          }\n          continue\n\n        case S.SCRIPT:\n          // only non-strict\n          if (c === '<') {\n            parser.state = S.SCRIPT_ENDING\n          } else {\n            parser.script += c\n          }\n          continue\n\n        case S.SCRIPT_ENDING:\n          if (c === '/') {\n            parser.state = S.CLOSE_TAG\n          } else {\n            parser.script += '<' + c\n            parser.state = S.SCRIPT\n          }\n          continue\n\n        case S.OPEN_WAKA:\n          // either a /, ?, !, or text is coming next.\n          if (c === '!') {\n            parser.state = S.SGML_DECL\n            parser.sgmlDecl = ''\n          } else if (is(whitespace, c)) {\n            // wait for it...\n          } else if (is(nameStart, c)) {\n            parser.state = S.OPEN_TAG\n            parser.tagName = c\n          } else if (c === '/') {\n            parser.state = S.CLOSE_TAG\n            parser.tagName = ''\n          } else if (c === '?') {\n            parser.state = S.PROC_INST\n            parser.procInstName = parser.procInstBody = ''\n          } else {\n            strictFail(parser, 'Unencoded <')\n            // if there was some whitespace, then add that in.\n            if (parser.startTagPosition + 1 < parser.position) {\n              var pad = parser.position - parser.startTagPosition\n              c = new Array(pad).join(' ') + c\n            }\n            parser.textNode += '<' + c\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.SGML_DECL:\n          if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n            emitNode(parser, 'onopencdata')\n            parser.state = S.CDATA\n            parser.sgmlDecl = ''\n            parser.cdata = ''\n          } else if (parser.sgmlDecl + c === '--') {\n            parser.state = S.COMMENT\n            parser.comment = ''\n            parser.sgmlDecl = ''\n          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n            parser.state = S.DOCTYPE\n            if (parser.doctype || parser.sawRoot) {\n              strictFail(parser,\n                'Inappropriately located doctype declaration')\n            }\n            parser.doctype = ''\n            parser.sgmlDecl = ''\n          } else if (c === '>') {\n            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\n            parser.sgmlDecl = ''\n            parser.state = S.TEXT\n          } else if (is(quote, c)) {\n            parser.state = S.SGML_DECL_QUOTED\n            parser.sgmlDecl += c\n          } else {\n            parser.sgmlDecl += c\n          }\n          continue\n\n        case S.SGML_DECL_QUOTED:\n          if (c === parser.q) {\n            parser.state = S.SGML_DECL\n            parser.q = ''\n          }\n          parser.sgmlDecl += c\n          continue\n\n        case S.DOCTYPE:\n          if (c === '>') {\n            parser.state = S.TEXT\n            emitNode(parser, 'ondoctype', parser.doctype)\n            parser.doctype = true // just remember that we saw it.\n          } else {\n            parser.doctype += c\n            if (c === '[') {\n              parser.state = S.DOCTYPE_DTD\n            } else if (is(quote, c)) {\n              parser.state = S.DOCTYPE_QUOTED\n              parser.q = c\n            }\n          }\n          continue\n\n        case S.DOCTYPE_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.q = ''\n            parser.state = S.DOCTYPE\n          }\n          continue\n\n        case S.DOCTYPE_DTD:\n          parser.doctype += c\n          if (c === ']') {\n            parser.state = S.DOCTYPE\n          } else if (is(quote, c)) {\n            parser.state = S.DOCTYPE_DTD_QUOTED\n            parser.q = c\n          }\n          continue\n\n        case S.DOCTYPE_DTD_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.state = S.DOCTYPE_DTD\n            parser.q = ''\n          }\n          continue\n\n        case S.COMMENT:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDING\n          } else {\n            parser.comment += c\n          }\n          continue\n\n        case S.COMMENT_ENDING:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDED\n            parser.comment = textopts(parser.opt, parser.comment)\n            if (parser.comment) {\n              emitNode(parser, 'oncomment', parser.comment)\n            }\n            parser.comment = ''\n          } else {\n            parser.comment += '-' + c\n            parser.state = S.COMMENT\n          }\n          continue\n\n        case S.COMMENT_ENDED:\n          if (c !== '>') {\n            strictFail(parser, 'Malformed comment')\n            // allow <!-- blah -- bloo --> in non-strict mode,\n            // which is a comment of \" blah -- bloo \"\n            parser.comment += '--' + c\n            parser.state = S.COMMENT\n          } else {\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.CDATA:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING\n          } else {\n            parser.cdata += c\n          }\n          continue\n\n        case S.CDATA_ENDING:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING_2\n          } else {\n            parser.cdata += ']' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.CDATA_ENDING_2:\n          if (c === '>') {\n            if (parser.cdata) {\n              emitNode(parser, 'oncdata', parser.cdata)\n            }\n            emitNode(parser, 'onclosecdata')\n            parser.cdata = ''\n            parser.state = S.TEXT\n          } else if (c === ']') {\n            parser.cdata += ']'\n          } else {\n            parser.cdata += ']]' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.PROC_INST:\n          if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else if (is(whitespace, c)) {\n            parser.state = S.PROC_INST_BODY\n          } else {\n            parser.procInstName += c\n          }\n          continue\n\n        case S.PROC_INST_BODY:\n          if (!parser.procInstBody && is(whitespace, c)) {\n            continue\n          } else if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else {\n            parser.procInstBody += c\n          }\n          continue\n\n        case S.PROC_INST_ENDING:\n          if (c === '>') {\n            emitNode(parser, 'onprocessinginstruction', {\n              name: parser.procInstName,\n              body: parser.procInstBody\n            })\n            parser.procInstName = parser.procInstBody = ''\n            parser.state = S.TEXT\n          } else {\n            parser.procInstBody += '?' + c\n            parser.state = S.PROC_INST_BODY\n          }\n          continue\n\n        case S.OPEN_TAG:\n          if (is(nameBody, c)) {\n            parser.tagName += c\n          } else {\n            newTag(parser)\n            if (c === '>') {\n              openTag(parser)\n            } else if (c === '/') {\n              parser.state = S.OPEN_TAG_SLASH\n            } else {\n              if (not(whitespace, c)) {\n                strictFail(parser, 'Invalid character in tag name')\n              }\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.OPEN_TAG_SLASH:\n          if (c === '>') {\n            openTag(parser, true)\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Forward-slash in opening tag not followed by >')\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.ATTRIB:\n          // haven't read the attribute name yet.\n          if (is(whitespace, c)) {\n            continue\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (is(nameStart, c)) {\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (c === '>') {\n            strictFail(parser, 'Attribute without value')\n            parser.attribValue = parser.attribName\n            attrib(parser)\n            openTag(parser)\n          } else if (is(whitespace, c)) {\n            parser.state = S.ATTRIB_NAME_SAW_WHITE\n          } else if (is(nameBody, c)) {\n            parser.attribName += c\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME_SAW_WHITE:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (is(whitespace, c)) {\n            continue\n          } else {\n            strictFail(parser, 'Attribute without value')\n            parser.tag.attributes[parser.attribName] = ''\n            parser.attribValue = ''\n            emitNode(parser, 'onattribute', {\n              name: parser.attribName,\n              value: ''\n            })\n            parser.attribName = ''\n            if (c === '>') {\n              openTag(parser)\n            } else if (is(nameStart, c)) {\n              parser.attribName = c\n              parser.state = S.ATTRIB_NAME\n            } else {\n              strictFail(parser, 'Invalid attribute name')\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.ATTRIB_VALUE:\n          if (is(whitespace, c)) {\n            continue\n          } else if (is(quote, c)) {\n            parser.q = c\n            parser.state = S.ATTRIB_VALUE_QUOTED\n          } else {\n            strictFail(parser, 'Unquoted attribute value')\n            parser.state = S.ATTRIB_VALUE_UNQUOTED\n            parser.attribValue = c\n          }\n          continue\n\n        case S.ATTRIB_VALUE_QUOTED:\n          if (c !== parser.q) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_Q\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          parser.q = ''\n          parser.state = S.ATTRIB_VALUE_CLOSED\n          continue\n\n        case S.ATTRIB_VALUE_CLOSED:\n          if (is(whitespace, c)) {\n            parser.state = S.ATTRIB\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (is(nameStart, c)) {\n            strictFail(parser, 'No whitespace between attributes')\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_VALUE_UNQUOTED:\n          if (not(attribEnd, c)) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_U\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          if (c === '>') {\n            openTag(parser)\n          } else {\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.CLOSE_TAG:\n          if (!parser.tagName) {\n            if (is(whitespace, c)) {\n              continue\n            } else if (not(nameStart, c)) {\n              if (parser.script) {\n                parser.script += '</' + c\n                parser.state = S.SCRIPT\n              } else {\n                strictFail(parser, 'Invalid tagname in closing tag.')\n              }\n            } else {\n              parser.tagName = c\n            }\n          } else if (c === '>') {\n            closeTag(parser)\n          } else if (is(nameBody, c)) {\n            parser.tagName += c\n          } else if (parser.script) {\n            parser.script += '</' + parser.tagName\n            parser.tagName = ''\n            parser.state = S.SCRIPT\n          } else {\n            if (not(whitespace, c)) {\n              strictFail(parser, 'Invalid tagname in closing tag')\n            }\n            parser.state = S.CLOSE_TAG_SAW_WHITE\n          }\n          continue\n\n        case S.CLOSE_TAG_SAW_WHITE:\n          if (is(whitespace, c)) {\n            continue\n          }\n          if (c === '>') {\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Invalid characters in closing tag')\n          }\n          continue\n\n        case S.TEXT_ENTITY:\n        case S.ATTRIB_VALUE_ENTITY_Q:\n        case S.ATTRIB_VALUE_ENTITY_U:\n          var returnState\n          var buffer\n          switch (parser.state) {\n            case S.TEXT_ENTITY:\n              returnState = S.TEXT\n              buffer = 'textNode'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_Q:\n              returnState = S.ATTRIB_VALUE_QUOTED\n              buffer = 'attribValue'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_U:\n              returnState = S.ATTRIB_VALUE_UNQUOTED\n              buffer = 'attribValue'\n              break\n          }\n\n          if (c === ';') {\n            parser[buffer] += parseEntity(parser)\n            parser.entity = ''\n            parser.state = returnState\n          } else if (is(parser.entity.length ? entityBody : entityStart, c)) {\n            parser.entity += c\n          } else {\n            strictFail(parser, 'Invalid character in entity name')\n            parser[buffer] += '&' + parser.entity + c\n            parser.entity = ''\n            parser.state = returnState\n          }\n\n          continue\n\n        default:\n          throw new Error(parser, 'Unknown state: ' + parser.state)\n      }\n    } // while\n\n    if (parser.position >= parser.bufferCheckPosition) {\n      checkBufferLength(parser)\n    }\n    return parser\n  }\n\n  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n  if (!String.fromCodePoint) {\n    (function () {\n      var stringFromCharCode = String.fromCharCode\n      var floor = Math.floor\n      var fromCodePoint = function () {\n        var MAX_SIZE = 0x4000\n        var codeUnits = []\n        var highSurrogate\n        var lowSurrogate\n        var index = -1\n        var length = arguments.length\n        if (!length) {\n          return ''\n        }\n        var result = ''\n        while (++index < length) {\n          var codePoint = Number(arguments[index])\n          if (\n            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n            codePoint < 0 || // not a valid Unicode code point\n            codePoint > 0x10FFFF || // not a valid Unicode code point\n            floor(codePoint) !== codePoint // not an integer\n          ) {\n            throw RangeError('Invalid code point: ' + codePoint)\n          }\n          if (codePoint <= 0xFFFF) { // BMP code point\n            codeUnits.push(codePoint)\n          } else { // Astral code point; split in surrogate halves\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            codePoint -= 0x10000\n            highSurrogate = (codePoint >> 10) + 0xD800\n            lowSurrogate = (codePoint % 0x400) + 0xDC00\n            codeUnits.push(highSurrogate, lowSurrogate)\n          }\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n            result += stringFromCharCode.apply(null, codeUnits)\n            codeUnits.length = 0\n          }\n        }\n        return result\n      }\n      if (Object.defineProperty) {\n        Object.defineProperty(String, 'fromCodePoint', {\n          value: fromCodePoint,\n          configurable: true,\n          writable: true\n        })\n      } else {\n        String.fromCodePoint = fromCodePoint\n      }\n    }())\n  }\n})(typeof exports === 'undefined' ? this.sax = {} : exports)\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/sax/lib/sax.js\n// module id = 3\n// module chunks = 0","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/buffer/index.js\n// module id = 4\n// module chunks = 0","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return b64.length * 3 / 4 - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/base64-js/index.js\n// module id = 5\n// module chunks = 0","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ieee754/index.js\n// module id = 6\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/buffer/~/isarray/index.js\n// module id = 7\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-browserify/index.js\n// module id = 8\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/events/events.js\n// module id = 9\n// module chunks = 0","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inherits/inherits_browser.js\n// module id = 10\n// module chunks = 0","var Stream = (function (){\n  try {\n    return require('st' + 'ream'); // hack to fix a circular dependency issue when used with browserify\n  } catch(_){}\n}());\nexports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = Stream || exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n\nif (!process.browser && process.env.READABLE_STREAM === 'disable' && Stream) {\n  module.exports = Stream;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-browserify/~/readable-stream/readable.js\n// module id = 11\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 12\n// module chunks = 0","'use strict';\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream;\n(function () {\n  try {\n    Stream = require('st' + 'ream');\n  } catch (_) {} finally {\n    if (!Stream) Stream = require('events').EventEmitter;\n  }\n})();\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\n/*<replacement>*/\nvar bufferShim = require('buffer-shims');\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') {\n    return emitter.prependListener(event, fn);\n  } else {\n    // This is a hack to make sure that our error handler is attached before any\n    // userland ones.  NEVER DO THIS. This is here only because this code needs\n    // to continue to work with older versions of Node.js that do not include\n    // the prependListener() method. The goal is to eventually remove this hack.\n    if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n  }\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~ ~this.highWaterMark;\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // when piping, we only care about 'readable' events that happen\n  // after read()ing all the bytes and not getting any pushback.\n  this.ranOut = false;\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options && typeof options.read === 'function') this._read = options.read;\n\n  Stream.call(this);\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n\n  if (!state.objectMode && typeof chunk === 'string') {\n    encoding = encoding || state.defaultEncoding;\n    if (encoding !== state.encoding) {\n      chunk = bufferShim.from(chunk, encoding);\n      encoding = '';\n    }\n  }\n\n  return readableAddChunk(this, state, chunk, encoding, false);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  var state = this._readableState;\n  return readableAddChunk(this, state, chunk, '', true);\n};\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\nfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n  var er = chunkInvalid(state, chunk);\n  if (er) {\n    stream.emit('error', er);\n  } else if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else if (state.objectMode || chunk && chunk.length > 0) {\n    if (state.ended && !addToFront) {\n      var e = new Error('stream.push() after EOF');\n      stream.emit('error', e);\n    } else if (state.endEmitted && addToFront) {\n      var _e = new Error('stream.unshift() after end event');\n      stream.emit('error', _e);\n    } else {\n      var skipAdd;\n      if (state.decoder && !addToFront && !encoding) {\n        chunk = state.decoder.write(chunk);\n        skipAdd = !state.objectMode && chunk.length === 0;\n      }\n\n      if (!addToFront) state.reading = false;\n\n      // Don't add to the buffer if we've decoded to an empty string chunk and\n      // we're not in object mode\n      if (!skipAdd) {\n        // if we want the data now, just emit it.\n        if (state.flowing && state.length === 0 && !state.sync) {\n          stream.emit('data', chunk);\n          stream.read(0);\n        } else {\n          // update the buffer info.\n          state.length += state.objectMode ? 1 : chunk.length;\n          if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n          if (state.needReadable) emitReadable(stream);\n        }\n      }\n\n      maybeReadMore(stream, state);\n    }\n  } else if (!addToFront) {\n    state.reading = false;\n  }\n\n  return needMoreData(state);\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction chunkInvalid(state, chunk) {\n  var er = null;\n  if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== null && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) processNextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    processNextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : cleanup;\n  if (state.endEmitted) processNextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable) {\n    debug('onunpipe');\n    if (readable === src) {\n      cleanup();\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', cleanup);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        processNextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this, state);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    processNextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n  forEach(events, function (ev) {\n    stream.on(ev, self.emit.bind(self, ev));\n  });\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = bufferShim.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    processNextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction forEach(xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-browserify/~/readable-stream/lib/_stream_readable.js\n// module id = 13\n// module chunks = 0","'use strict';\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = nextTick;\n} else {\n  module.exports = process.nextTick;\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process-nextick-args/index.js\n// module id = 14\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-browserify/~/isarray/index.js\n// module id = 15\n// module chunks = 0","'use strict';\n\nvar buffer = require('buffer');\nvar Buffer = buffer.Buffer;\nvar SlowBuffer = buffer.SlowBuffer;\nvar MAX_LEN = buffer.kMaxLength || 2147483647;\nexports.alloc = function alloc(size, fill, encoding) {\n  if (typeof Buffer.alloc === 'function') {\n    return Buffer.alloc(size, fill, encoding);\n  }\n  if (typeof encoding === 'number') {\n    throw new TypeError('encoding must not be number');\n  }\n  if (typeof size !== 'number') {\n    throw new TypeError('size must be a number');\n  }\n  if (size > MAX_LEN) {\n    throw new RangeError('size is too large');\n  }\n  var enc = encoding;\n  var _fill = fill;\n  if (_fill === undefined) {\n    enc = undefined;\n    _fill = 0;\n  }\n  var buf = new Buffer(size);\n  if (typeof _fill === 'string') {\n    var fillBuf = new Buffer(_fill, enc);\n    var flen = fillBuf.length;\n    var i = -1;\n    while (++i < size) {\n      buf[i] = fillBuf[i % flen];\n    }\n  } else {\n    buf.fill(_fill);\n  }\n  return buf;\n}\nexports.allocUnsafe = function allocUnsafe(size) {\n  if (typeof Buffer.allocUnsafe === 'function') {\n    return Buffer.allocUnsafe(size);\n  }\n  if (typeof size !== 'number') {\n    throw new TypeError('size must be a number');\n  }\n  if (size > MAX_LEN) {\n    throw new RangeError('size is too large');\n  }\n  return new Buffer(size);\n}\nexports.from = function from(value, encodingOrOffset, length) {\n  if (typeof Buffer.from === 'function' && (!global.Uint8Array || Uint8Array.from !== Buffer.from)) {\n    return Buffer.from(value, encodingOrOffset, length);\n  }\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number');\n  }\n  if (typeof value === 'string') {\n    return new Buffer(value, encodingOrOffset);\n  }\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    var offset = encodingOrOffset;\n    if (arguments.length === 1) {\n      return new Buffer(value);\n    }\n    if (typeof offset === 'undefined') {\n      offset = 0;\n    }\n    var len = length;\n    if (typeof len === 'undefined') {\n      len = value.byteLength - offset;\n    }\n    if (offset >= value.byteLength) {\n      throw new RangeError('\\'offset\\' is out of bounds');\n    }\n    if (len > value.byteLength - offset) {\n      throw new RangeError('\\'length\\' is out of bounds');\n    }\n    return new Buffer(value.slice(offset, offset + len));\n  }\n  if (Buffer.isBuffer(value)) {\n    var out = new Buffer(value.length);\n    value.copy(out, 0, 0, value.length);\n    return out;\n  }\n  if (value) {\n    if (Array.isArray(value) || (typeof ArrayBuffer !== 'undefined' && value.buffer instanceof ArrayBuffer) || 'length' in value) {\n      return new Buffer(value);\n    }\n    if (value.type === 'Buffer' && Array.isArray(value.data)) {\n      return new Buffer(value.data);\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ' + 'ArrayBuffer, Array, or array-like object.');\n}\nexports.allocUnsafeSlow = function allocUnsafeSlow(size) {\n  if (typeof Buffer.allocUnsafeSlow === 'function') {\n    return Buffer.allocUnsafeSlow(size);\n  }\n  if (typeof size !== 'number') {\n    throw new TypeError('size must be a number');\n  }\n  if (size >= MAX_LEN) {\n    throw new RangeError('size is too large');\n  }\n  return new SlowBuffer(size);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/buffer-shims/index.js\n// module id = 16\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-util-is/lib/util.js\n// module id = 17\n// module chunks = 0","'use strict';\n\nvar Buffer = require('buffer').Buffer;\n/*<replacement>*/\nvar bufferShim = require('buffer-shims');\n/*</replacement>*/\n\nmodule.exports = BufferList;\n\nfunction BufferList() {\n  this.head = null;\n  this.tail = null;\n  this.length = 0;\n}\n\nBufferList.prototype.push = function (v) {\n  var entry = { data: v, next: null };\n  if (this.length > 0) this.tail.next = entry;else this.head = entry;\n  this.tail = entry;\n  ++this.length;\n};\n\nBufferList.prototype.unshift = function (v) {\n  var entry = { data: v, next: this.head };\n  if (this.length === 0) this.tail = entry;\n  this.head = entry;\n  ++this.length;\n};\n\nBufferList.prototype.shift = function () {\n  if (this.length === 0) return;\n  var ret = this.head.data;\n  if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n  --this.length;\n  return ret;\n};\n\nBufferList.prototype.clear = function () {\n  this.head = this.tail = null;\n  this.length = 0;\n};\n\nBufferList.prototype.join = function (s) {\n  if (this.length === 0) return '';\n  var p = this.head;\n  var ret = '' + p.data;\n  while (p = p.next) {\n    ret += s + p.data;\n  }return ret;\n};\n\nBufferList.prototype.concat = function (n) {\n  if (this.length === 0) return bufferShim.alloc(0);\n  if (this.length === 1) return this.head.data;\n  var ret = bufferShim.allocUnsafe(n >>> 0);\n  var p = this.head;\n  var i = 0;\n  while (p) {\n    p.data.copy(ret, i);\n    i += p.data.length;\n    p = p.next;\n  }\n  return ret;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-browserify/~/readable-stream/lib/internal/streams/BufferList.js\n// module id = 19\n// module chunks = 0","// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\nvar keys = objectKeys(Writable.prototype);\nfor (var v = 0; v < keys.length; v++) {\n  var method = keys[v];\n  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  processNextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nfunction forEach(xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-browserify/~/readable-stream/lib/_stream_duplex.js\n// module id = 20\n// module chunks = 0","// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nmodule.exports = Writable;\n\n/*<replacement>*/\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : processNextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream;\n(function () {\n  try {\n    Stream = require('st' + 'ream');\n  } catch (_) {} finally {\n    if (!Stream) Stream = require('events').EventEmitter;\n  }\n})();\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\n/*<replacement>*/\nvar bufferShim = require('buffer-shims');\n/*</replacement>*/\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~ ~this.highWaterMark;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  processNextTick(cb, er);\n}\n\n// If we get something that is not a buffer, string, null, or undefined,\n// and we're not in objectMode, then that's an error.\n// Otherwise stream chunks are all considered to be of length=1, and the\n// watermarks determine how many objects to keep in the buffer, rather than\n// how many bytes or characters.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n  // Always throw error if a null is written\n  // if we are not in object mode then throw\n  // if it is not a buffer, string, or undefined.\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    processNextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (Buffer.isBuffer(chunk)) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = bufferShim.from(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n  chunk = decodeChunk(state, chunk, encoding);\n\n  if (Buffer.isBuffer(chunk)) encoding = 'buffer';\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = new WriteReq(chunk, encoding, cb);\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) processNextTick(cb, er);else cb(er);\n\n  stream._writableState.errorEmitted = true;\n  stream.emit('error', er);\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n        afterWrite(stream, state, finished, cb);\n      }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    while (entry) {\n      buffer[count] = entry;\n      entry = entry.next;\n      count += 1;\n    }\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequestCount = 0;\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished) {\n    state.prefinished = true;\n    stream.emit('prefinish');\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    if (state.pendingcb === 0) {\n      prefinish(stream, state);\n      state.finished = true;\n      stream.emit('finish');\n    } else {\n      prefinish(stream, state);\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) processNextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function (err) {\n    var entry = _this.entry;\n    _this.entry = null;\n    while (entry) {\n      var cb = entry.callback;\n      state.pendingcb--;\n      cb(err);\n      entry = entry.next;\n    }\n    if (state.corkedRequestsFree) {\n      state.corkedRequestsFree.next = _this;\n    } else {\n      state.corkedRequestsFree = _this;\n    }\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-browserify/~/readable-stream/lib/_stream_writable.js\n// module id = 21\n// module chunks = 0","var apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\nexports.setImmediate = setImmediate;\nexports.clearImmediate = clearImmediate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/timers-browserify/main.js\n// module id = 22\n// module chunks = 0","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/setimmediate/setImmediate.js\n// module id = 23\n// module chunks = 0","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/util-deprecate/browser.js\n// module id = 24\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar Buffer = require('buffer').Buffer;\n\nvar isBufferEncoding = Buffer.isEncoding\n  || function(encoding) {\n       switch (encoding && encoding.toLowerCase()) {\n         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n         default: return false;\n       }\n     }\n\n\nfunction assertEncoding(encoding) {\n  if (encoding && !isBufferEncoding(encoding)) {\n    throw new Error('Unknown encoding: ' + encoding);\n  }\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters. CESU-8 is handled as part of the UTF-8 encoding.\n//\n// @TODO Handling all encodings inside a single object makes it very difficult\n// to reason about this code, so it should be split up in the future.\n// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n// points as used by CESU-8.\nvar StringDecoder = exports.StringDecoder = function(encoding) {\n  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n  assertEncoding(encoding);\n  switch (this.encoding) {\n    case 'utf8':\n      // CESU-8 represents each of Surrogate Pair by 3-bytes\n      this.surrogateSize = 3;\n      break;\n    case 'ucs2':\n    case 'utf16le':\n      // UTF-16 represents each of Surrogate Pair by 2-bytes\n      this.surrogateSize = 2;\n      this.detectIncompleteChar = utf16DetectIncompleteChar;\n      break;\n    case 'base64':\n      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n      this.surrogateSize = 3;\n      this.detectIncompleteChar = base64DetectIncompleteChar;\n      break;\n    default:\n      this.write = passThroughWrite;\n      return;\n  }\n\n  // Enough space to store all bytes of a single character. UTF-8 needs 4\n  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n  this.charBuffer = new Buffer(6);\n  // Number of bytes received for the current incomplete multi-byte character.\n  this.charReceived = 0;\n  // Number of bytes expected for the current incomplete multi-byte character.\n  this.charLength = 0;\n};\n\n\n// write decodes the given buffer and returns it as JS string that is\n// guaranteed to not contain any partial multi-byte characters. Any partial\n// character found at the end of the buffer is buffered up, and will be\n// returned when calling write again with the remaining bytes.\n//\n// Note: Converting a Buffer containing an orphan surrogate to a String\n// currently works, but converting a String to a Buffer (via `new Buffer`, or\n// Buffer#write) will replace incomplete surrogates with the unicode\n// replacement character. See https://codereview.chromium.org/121173009/ .\nStringDecoder.prototype.write = function(buffer) {\n  var charStr = '';\n  // if our last write ended with an incomplete multibyte character\n  while (this.charLength) {\n    // determine how many remaining bytes this buffer has to offer for this char\n    var available = (buffer.length >= this.charLength - this.charReceived) ?\n        this.charLength - this.charReceived :\n        buffer.length;\n\n    // add the new bytes to the char buffer\n    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n    this.charReceived += available;\n\n    if (this.charReceived < this.charLength) {\n      // still not enough chars in this buffer? wait for more ...\n      return '';\n    }\n\n    // remove bytes belonging to the current character from the buffer\n    buffer = buffer.slice(available, buffer.length);\n\n    // get the character that was split\n    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\n    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n    var charCode = charStr.charCodeAt(charStr.length - 1);\n    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n      this.charLength += this.surrogateSize;\n      charStr = '';\n      continue;\n    }\n    this.charReceived = this.charLength = 0;\n\n    // if there are no more bytes in this buffer, just emit our char\n    if (buffer.length === 0) {\n      return charStr;\n    }\n    break;\n  }\n\n  // determine and set charLength / charReceived\n  this.detectIncompleteChar(buffer);\n\n  var end = buffer.length;\n  if (this.charLength) {\n    // buffer the incomplete character bytes we got\n    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n    end -= this.charReceived;\n  }\n\n  charStr += buffer.toString(this.encoding, 0, end);\n\n  var end = charStr.length - 1;\n  var charCode = charStr.charCodeAt(end);\n  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n    var size = this.surrogateSize;\n    this.charLength += size;\n    this.charReceived += size;\n    this.charBuffer.copy(this.charBuffer, size, 0, size);\n    buffer.copy(this.charBuffer, 0, 0, size);\n    return charStr.substring(0, end);\n  }\n\n  // or just emit the charStr\n  return charStr;\n};\n\n// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n// the end of the given buffer. If so, it sets this.charLength to the byte\n// length that character, and sets this.charReceived to the number of bytes\n// that are available for this character.\nStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n  // determine how many bytes we have to check at the end of this buffer\n  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\n  // Figure out if one of the last i bytes of our buffer announces an\n  // incomplete char.\n  for (; i > 0; i--) {\n    var c = buffer[buffer.length - i];\n\n    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\n    // 110XXXXX\n    if (i == 1 && c >> 5 == 0x06) {\n      this.charLength = 2;\n      break;\n    }\n\n    // 1110XXXX\n    if (i <= 2 && c >> 4 == 0x0E) {\n      this.charLength = 3;\n      break;\n    }\n\n    // 11110XXX\n    if (i <= 3 && c >> 3 == 0x1E) {\n      this.charLength = 4;\n      break;\n    }\n  }\n  this.charReceived = i;\n};\n\nStringDecoder.prototype.end = function(buffer) {\n  var res = '';\n  if (buffer && buffer.length)\n    res = this.write(buffer);\n\n  if (this.charReceived) {\n    var cr = this.charReceived;\n    var buf = this.charBuffer;\n    var enc = this.encoding;\n    res += buf.slice(0, cr).toString(enc);\n  }\n\n  return res;\n};\n\nfunction passThroughWrite(buffer) {\n  return buffer.toString(this.encoding);\n}\n\nfunction utf16DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 2;\n  this.charLength = this.charReceived ? 2 : 0;\n}\n\nfunction base64DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 3;\n  this.charLength = this.charReceived ? 3 : 0;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/string_decoder/index.js\n// module id = 25\n// module chunks = 0","// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction TransformState(stream) {\n  this.afterTransform = function (er, data) {\n    return afterTransform(stream, er, data);\n  };\n\n  this.needTransform = false;\n  this.transforming = false;\n  this.writecb = null;\n  this.writechunk = null;\n  this.writeencoding = null;\n}\n\nfunction afterTransform(stream, er, data) {\n  var ts = stream._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) return stream.emit('error', new Error('no writecb in Transform class'));\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data !== null && data !== undefined) stream.push(data);\n\n  cb(er);\n\n  var rs = stream._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    stream._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = new TransformState(this);\n\n  var stream = this;\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.once('prefinish', function () {\n    if (typeof this._flush === 'function') this._flush(function (er, data) {\n      done(stream, er, data);\n    });else done(stream);\n  });\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data !== null && data !== undefined) stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  var ws = stream._writableState;\n  var ts = stream._transformState;\n\n  if (ws.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (ts.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-browserify/~/readable-stream/lib/_stream_transform.js\n// module id = 26\n// module chunks = 0","// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-browserify/~/readable-stream/lib/_stream_passthrough.js\n// module id = 27\n// module chunks = 0","module.exports = require(\"./lib/_stream_writable.js\")\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-browserify/~/readable-stream/writable.js\n// module id = 28\n// module chunks = 0","module.exports = require(\"./lib/_stream_duplex.js\")\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-browserify/~/readable-stream/duplex.js\n// module id = 29\n// module chunks = 0","module.exports = require(\"./lib/_stream_transform.js\")\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-browserify/~/readable-stream/transform.js\n// module id = 30\n// module chunks = 0","module.exports = require(\"./lib/_stream_passthrough.js\")\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-browserify/~/readable-stream/passthrough.js\n// module id = 31\n// module chunks = 0"],"sourceRoot":""}