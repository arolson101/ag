{"version":3,"file":"ofx4js.js","sources":["../src/OFXException.ts","../src/OFXRuntimeException.ts","../src/OFXStatusException.ts","../src/OFXTransactionException.ts","../src/UnsupportedOFXSecurityTypeException.ts","../src/client/NoOFXResponseException.ts","../src/client/context/DefaultApplicationContext.ts","../src/client/context/OFXApplicationContextHolder.ts","../src/domain/data/MessageSetType.ts","../src/domain/data/banking/AccountType.ts","../src/log/Log.ts","../src/collections/SortedSet.ts","../src/meta/PropertyDescriptor.ts","../src/meta/ChildAggregate.ts","../src/meta/Element.ts","../src/io/AggregateAttribute.ts","../src/io/AggregateInfo.ts","../src/io/AggregateIntrospector.ts","../src/meta/Aggregate_Add.ts","../src/meta/Element_add.ts","../src/domain/data/banking/BankAccountDetails.ts","../src/domain/data/creditcard/CreditCardAccountDetails.ts","../src/domain/data/investment/accounts/InvestmentAccountDetails.ts","../src/domain/data/common/StatementRange.ts","../src/client/impl/BaseAccountImpl.ts","../src/domain/data/RequestMessageSet.ts","../src/domain/data/RequestMessage.ts","../src/domain/data/TransactionWrappedRequestMessage.ts","../src/meta/ChildAggregate_add.ts","../src/domain/data/common/StatementRequest.ts","../src/domain/data/banking/BankStatementRequest.ts","../src/domain/data/banking/BankStatementRequestTransaction.ts","../src/domain/data/banking/BankingRequestMessageSet.ts","../src/client/impl/BankingAccountImpl.ts","../src/client/impl/BaseFinancialInstitutionData.ts","../src/domain/data/creditcard/CreditCardStatementRequest.ts","../src/domain/data/creditcard/CreditCardStatementRequestTransaction.ts","../src/domain/data/creditcard/CreditCardRequestMessageSet.ts","../src/client/impl/CreditCardAccountImpl.ts","../src/meta/Aggregate_add.ts","../src/meta/Header.ts","../src/meta/Header_add.ts","../src/domain/data/ApplicationSecurity.ts","../src/domain/data/RequestEnvelope.ts","../src/domain/data/signon/FinancialInstitution.ts","../src/domain/data/signon/SignonRequest.ts","../src/domain/data/profile/ClientRoutingCapability.ts","../src/domain/data/profile/ProfileRequest.ts","../src/domain/data/profile/ProfileRequestTransaction.ts","../src/domain/data/profile/ProfileRequestMessageSet.ts","../src/domain/data/signup/AccountInfoRequest.ts","../src/domain/data/signup/AccountInfoRequestTransaction.ts","../src/domain/data/signup/SignupRequestMessageSet.ts","../src/domain/data/investment/statements/IncludePosition.ts","../src/domain/data/investment/statements/InvestmentStatementRequest.ts","../src/domain/data/investment/statements/InvestmentStatementRequestTransaction.ts","../src/domain/data/seclist/SecurityId.ts","../src/domain/data/seclist/SecurityRequest.ts","../src/domain/data/seclist/SecurityListRequest.ts","../src/domain/data/seclist/SecurityListRequestTransaction.ts","../src/domain/data/investment/statements/InvestmentStatementRequestMessageSet.ts","../src/domain/data/seclist/SecurityListRequestMessageSet.ts","../src/client/impl/InvestmentAccountImpl.ts","../src/domain/data/signon/PasswordChangeRequest.ts","../src/domain/data/signon/PasswordChangeRequestTransaction.ts","../src/domain/data/signon/SignonRequestMessageSet.ts","../src/domain/data/common/StatusHolder.ts","../src/domain/data/ResponseMessage.ts","../src/domain/data/common/StatusCode.ts","../src/domain/data/common/Status.ts","../src/domain/data/TransactionWrappedResponseMessage.ts","../src/client/impl/FinancialInstitutionImpl.ts","../src/client/net/OFXConnectionException.ts","../src/client/net/OFXServerException.ts","../src/domain/data/common/UnknownStatusCode.ts","../src/io/DefaultStringConversion.ts","../src/io/AggregateMarshaller.ts","../src/io/StringReader.ts","../src/io/DefaultHandler.ts","../src/io/OFXParseException.ts","../src/collections/Stack.ts","../src/io/OFXParseEvent.ts","../src/io/OFXV2ContentHandler.ts","../src/io/BaseOFXReader.ts","../src/io/OFXSyntaxException.ts","../src/io/AggregateStackContentHandler.ts","../src/io/AggregateUnmarshaller.ts","../src/domain/data/ResponseMessageSet.ts","../src/domain/data/ResponseEnvelope.ts","../src/io/StreamWriter.ts","../src/io/v1/OFXV1Writer.ts","../src/client/net/OFXV1Connection.ts","../src/io/v2/OFXV2Writer.ts","../src/client/net/OFXV2Connection.ts","../src/domain/data/common/AccountStatus.ts","../src/domain/data/banking/BankAccountInfo.ts","../src/domain/data/investment/transactions/TransactionType.ts","../src/domain/data/common/CorrectionAction.ts","../src/domain/data/common/Payee.ts","../src/domain/data/common/Currency.ts","../src/domain/data/common/Transaction.ts","../src/domain/data/common/TransactionList.ts","../src/domain/data/common/BalanceInfo.ts","../src/domain/data/common/StatementResponse.ts","../src/domain/data/banking/BankStatementResponse.ts","../src/domain/data/banking/BankStatementResponseTransaction.ts","../src/domain/data/banking/BankingResponseMessageSet.ts","../src/domain/data/common/BalanceRecord.ts","../src/domain/data/common/ProcessorDayOff.ts","../src/domain/data/common/T1099Request.ts","../src/domain/data/common/T1099Response.ts","../src/domain/data/common/TransactionType.ts","../src/domain/data/common/TransferInfo.ts","../src/domain/data/common/TransferStatusEvent.ts","../src/domain/data/common/TransferStatus.ts","../src/domain/data/creditcard/CreditCardAccountInfo.ts","../src/domain/data/creditcard/CreditCardStatementResponse.ts","../src/domain/data/creditcard/CreditCardStatementResponseTransaction.ts","../src/domain/data/creditcard/CreditCardResponseMessageSet.ts","../src/domain/data/investment/accounts/AccountType.ts","../src/domain/data/investment/accounts/ActivationStatus.ts","../src/domain/data/investment/accounts/UnitedStatesAccountType.ts","../src/domain/data/investment/accounts/InvestmentAccountInfo.ts","../src/domain/data/investment/accounts/SubAccountType.ts","../src/domain/data/investment/positions/PositionType.ts","../src/domain/data/investment/positions/Inv401KSource.ts","../src/domain/data/investment/positions/InvestmentPosition.ts","../src/domain/data/investment/positions/BasePosition.ts","../src/domain/data/investment/positions/DebtPosition.ts","../src/domain/data/investment/positions/InvestmentPositionList.ts","../src/domain/data/investment/positions/MutualFundPosition.ts","../src/domain/data/investment/positions/ShortOptionSecurity.ts","../src/domain/data/investment/positions/OptionsPosition.ts","../src/domain/data/investment/positions/OtherPosition.ts","../src/domain/data/investment/positions/StockPosition.ts","../src/domain/data/investment/statements/BalanceList.ts","../src/domain/data/investment/statements/InvestmentBalance.ts","../src/domain/data/investment/transactions/BaseInvestmentTransaction.ts","../src/domain/data/investment/transactions/InvestmentBankTransaction.ts","../src/domain/data/investment/transactions/InvestmentTransactionList.ts","../src/domain/data/investment/statements/InvestmentStatementResponse.ts","../src/domain/data/investment/statements/InvestmentStatementResponseTransaction.ts","../src/domain/data/investment/statements/InvestmentStatementResponseMessageSet.ts","../src/domain/data/investment/transactions/InvestmentTransaction.ts","../src/domain/data/investment/transactions/OriginalCurrency.ts","../src/domain/data/investment/transactions/BuyInvestmentTransaction.ts","../src/domain/data/investment/transactions/BaseBuyInvestmentTransaction.ts","../src/domain/data/investment/transactions/BaseOtherInvestmentTransaction.ts","../src/domain/data/investment/transactions/SellInvestmentTransaction.ts","../src/domain/data/investment/transactions/BaseSellInvestmentTransaction.ts","../src/domain/data/investment/transactions/BuyDebtTransaction.ts","../src/domain/data/investment/transactions/BuyType.ts","../src/domain/data/investment/transactions/BuyMutualFundTransaction.ts","../src/domain/data/investment/transactions/OptionBuyType.ts","../src/domain/data/investment/transactions/BuyOptionTransaction.ts","../src/domain/data/investment/transactions/BuyOtherTransaction.ts","../src/domain/data/investment/transactions/BuyStockTransaction.ts","../src/domain/data/investment/transactions/CloseOptionAction.ts","../src/domain/data/investment/transactions/CloseOptionTransaction.ts","../src/domain/data/investment/transactions/IncomeType.ts","../src/domain/data/investment/transactions/IncomeTransaction.ts","../src/domain/data/investment/transactions/InvestmentExpenseTransaction.ts","../src/domain/data/investment/transactions/JournalFundTransaction.ts","../src/domain/data/investment/transactions/JournalSecurityTransaction.ts","../src/domain/data/investment/transactions/MarginInterestTransaction.ts","../src/domain/data/investment/transactions/OptionSellType.ts","../src/domain/data/investment/transactions/ReinvestIncomeTransaction.ts","../src/domain/data/investment/transactions/RelatedOptionType.ts","../src/domain/data/investment/transactions/ReturnOfCapitalTransaction.ts","../src/domain/data/investment/transactions/SellDebtReason.ts","../src/domain/data/investment/transactions/SellDebtTransaction.ts","../src/domain/data/investment/transactions/SellType.ts","../src/domain/data/investment/transactions/SellMutualFundTransaction.ts","../src/domain/data/investment/transactions/SellOptionTransaction.ts","../src/domain/data/investment/transactions/SellOtherTransaction.ts","../src/domain/data/investment/transactions/SellStockTransaction.ts","../src/domain/data/investment/transactions/SplitTransaction.ts","../src/domain/data/investment/transactions/TransferAction.ts","../src/domain/data/investment/transactions/TransferInvestmentTransaction.ts","../src/domain/data/profile/SynchronizationCapability.ts","../src/domain/data/profile/CoreMessageSetInfo.ts","../src/domain/data/profile/VersionSpecificMessageSetInfo.ts","../src/domain/data/profile/AbstractMessageSetInfo.ts","../src/domain/data/profile/CharacterType.ts","../src/domain/data/profile/MessageSetInfoList.ts","../src/domain/data/profile/SignonInfo.ts","../src/domain/data/profile/SignonInfoList.ts","../src/domain/data/profile/ProfileResponse.ts","../src/domain/data/profile/ProfileResponseTransaction.ts","../src/domain/data/profile/ProfileResponseMessageSet.ts","../src/domain/data/profile/info/common/TransferProfile.ts","../src/domain/data/profile/info/banking/StopCheckProfile.ts","../src/domain/data/profile/info/banking/EmailProfile.ts","../src/domain/data/profile/info/common/ImageProfile.ts","../src/domain/data/profile/info/BankingV1MessageSetInfo.ts","../src/domain/data/profile/info/BankingMessageSetInfo.ts","../src/domain/data/profile/info/BillpayV1MessageSetInfo.ts","../src/domain/data/profile/info/BillpayMessageSetInfo.ts","../src/domain/data/profile/info/CreditCardV1MessageSetInfo.ts","../src/domain/data/profile/info/CreditCardMessageSetInfo.ts","../src/domain/data/profile/info/EmailV1MessageSetInfo.ts","../src/domain/data/profile/info/EmailMessageSetInfo.ts","../src/domain/data/profile/info/InterbankTransferV1MessageSetInfo.ts","../src/domain/data/profile/info/InterbankTransferMessageSetInfo.ts","../src/domain/data/profile/info/InvestmentV1MessageSetInfo.ts","../src/domain/data/profile/info/InvestmentMessageSetInfo.ts","../src/domain/data/profile/info/ProfileV1MessageSetInfo.ts","../src/domain/data/profile/info/ProfileMessageSetInfo.ts","../src/domain/data/profile/info/SecurityListV1MessageSetInfo.ts","../src/domain/data/profile/info/SecurityListMessageSetInfo.ts","../src/domain/data/profile/info/SignOnV1MessageSetInfo.ts","../src/domain/data/profile/info/SignOnMessageSetInfo.ts","../src/domain/data/profile/info/signup/ClientEnrollment.ts","../src/domain/data/profile/info/signup/WebEnrollment.ts","../src/domain/data/profile/info/signup/OtherEnrollment.ts","../src/domain/data/profile/info/SignupV1MessageSetInfo.ts","../src/domain/data/profile/info/SignupMessageSetInfo.ts","../src/domain/data/profile/info/WireTransferV1MessageSetInfo.ts","../src/domain/data/profile/info/WireTransferMessageSetInfo.ts","../src/domain/data/seclist/AssetClass.ts","../src/domain/data/seclist/SecurityInfo.ts","../src/domain/data/seclist/BaseSecurityInfo.ts","../src/domain/data/seclist/CallType.ts","../src/domain/data/seclist/CouponFrequency.ts","../src/domain/data/seclist/DebtClass.ts","../src/domain/data/seclist/DebtType.ts","../src/domain/data/seclist/DebtSecurityInfo.ts","../src/domain/data/seclist/MutualFundType.ts","../src/domain/data/seclist/MutualFundSecurityInfo.ts","../src/domain/data/seclist/OptionType.ts","../src/domain/data/seclist/OptionSecurityInfo.ts","../src/domain/data/seclist/OtherSecurityInfo.ts","../src/domain/data/seclist/SecurityList.ts","../src/domain/data/seclist/SecurityListResponse.ts","../src/domain/data/seclist/SecurityListResponseTransaction.ts","../src/domain/data/seclist/SecurityListResponseMessageSet.ts","../src/domain/data/seclist/StockType.ts","../src/domain/data/seclist/StockSecurityInfo.ts","../src/domain/data/signon/PasswordChangeResponse.ts","../src/domain/data/signon/PasswordChangeResponseTransaction.ts","../src/domain/data/signon/SignonResponse.ts","../src/domain/data/signon/SignonResponseMessageSet.ts","../src/domain/data/signup/AccountProfile.ts","../src/domain/data/signup/AccountInfoResponse.ts","../src/domain/data/signup/AccountInfoResponseTransaction.ts","../src/domain/data/signup/SignupResponseMessageSet.ts","../src/domain/data/tax1099/ProcDet.ts","../src/domain/data/tax1099/ExtDBInfo.ts","../src/domain/data/tax1099/PayerAddress.ts","../src/domain/data/tax1099/RecAddress.ts","../src/domain/data/tax1099/Tax1099B.ts","../src/domain/data/tax1099/Tax1099DIV.ts","../src/domain/data/tax1099/Tax1099INT.ts","../src/domain/data/tax1099/Tax1099MISC.ts","../src/domain/data/tax1099/Tax1099OID.ts","../src/domain/data/tax1099/Tax1099R.ts","../src/domain/data/tax1099/Tax1099Request.ts","../src/domain/data/tax1099/Tax1099RequestTransaction.ts","../src/domain/data/tax1099/Tax1099RequestMessageSet.ts","../src/domain/data/tax1099/Tax1099Response.ts","../src/domain/data/tax1099/Tax1099ResponseTransaction.ts","../src/domain/data/tax1099/Tax1099ResponseMessageSet.ts","../src/io/RequiredAttributeException.ts","../src/meta/Aggregate.ts"],"sourcesContent":["/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport declare class Error {\n    public name: string;\n    public message: string;\n    public stack: string;\n    constructor(message?: string);\n}\n\n\n/**\n * Base exception class.\n *\n * @author Ryan Heaton\n */\nexport class OFXException extends Error {\n  private innerError: Error;\n\n  constructor(message: string = null, e: Error = null) {\n    super(message);\n    this.message = message;\n    this.innerError = e;\n  }\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { OFXException } from './OFXException';\n\n/**\n * @author Ryan Heaton\n */\nexport class OFXRuntimeException extends OFXException {\n\n  constructor(message: string = null) {\n    super(message);\n  }\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Status } from './domain/data/common/Status'\nimport { OFXException } from './OFXException';\n\n/**\n * Exception based on a StatusCode response\n *\n * @author Michael Mosseri\n */\nexport class OFXStatusException extends OFXException {\n\tprivate status: Status;\n\n  constructor(status: Status, message: string) {\n    super(message);\n    this.status = status;\n  }\n\n  public getStatus(): Status {\n  \treturn this.status;\n  }\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { OFXException } from \"./OFXException\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class OFXTransactionException extends OFXException {\n  public constructor(message: string = null) {\n    super(message);\n  }\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { OFXException } from \"./OFXException\";\n\n\n/**\n * Thrown for unsupported OFX security type.\n *\n * @author Ryan Heaton\n */\nexport class UnsupportedOFXSecurityTypeException extends OFXException {\n  constructor(message: string) {\n    super(message);\n  }\n}\n","/*\n* Copyright 2008 Web Cohesion\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nimport { OFXException } from \"../OFXException\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class NoOFXResponseException extends OFXException {\n\n  public constructor(message: string = null) {\n    super(message);\n  }\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { OFXApplicationContext } from \"./OFXApplicationContext\";\n\n\n/**\n * Default application context.\n *\n * @author Ryan Heaton\n */\nexport class DefaultApplicationContext implements OFXApplicationContext {\n\n  private appId: string;\n  private appVersion: string;\n\n  constructor(appId: string, appVersion: string) {\n    this.appId = appId;\n    this.appVersion = appVersion;\n  }\n\n  public getAppId(): string {\n    return this.appId;\n  }\n\n  public getAppVersion(): string {\n    return this.appVersion;\n  }\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { OFXApplicationContext } from \"./OFXApplicationContext\";\nimport { DefaultApplicationContext } from \"./DefaultApplicationContext\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class OFXApplicationContextHolder {\n\n  private static CURRENT_CONTEXT: OFXApplicationContext = new DefaultApplicationContext(\"Money\", \"1600\"); //some apps fail unless you're Quicken or Money...\n\n  /**\n   * Get the current (thread-safe) context.\n   *\n   * @return The thread-safe context.\n   */\n  public static getCurrentContext(): OFXApplicationContext {\n    //todo: implement a strategy (perhaps for thread-local access or something)?\n    return this.CURRENT_CONTEXT;\n  }\n\n  /**\n   * Set the current context.\n   *\n   * @param context The context.\n   */\n  public static setCurrentContext(context: OFXApplicationContext): void {\n    this.CURRENT_CONTEXT = context;\n  }\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The message set type, used to define message set order in the envelope.\n *\n * @author Ryan Heaton\n * @see \"Section 2.4.5.2, OFX spec\"\n */\nexport enum MessageSetType {\n\n  signon,\n\n  signup,\n\n  banking,\n\n  creditcard,\n\n  investment,\n\n  interbank_transfer,\n\n  wire_transfer,\n\n  payments,\n\n  email,\n\n  investment_security,\n\n  profile,\n\n  tax1099\n\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @author Ryan Heaton\n *\n * @see \"OFX Spec, Section 11.3.1.1\"\n */\nexport enum AccountType {\n\n  CHECKING,\n\n  SAVINGS,\n\n  MONEYMRKT,\n\n  CREDITLINE\n\n}\n","\nexport class Log {\n\tprivate infoEnabled: boolean;\n\tprivate debugEnabled: boolean;\n\n\tconstructor() {\n\t\tthis.infoEnabled = false;\n\t\tthis.debugEnabled = false;\n\t}\n\n\tpublic setInfoEnabled(value: boolean): void {\n\t\tthis.infoEnabled = value;\n\t}\n\n\tpublic isInfoEnabled(): boolean {\n\t\treturn this.infoEnabled;\n\t}\n\n\tpublic info(...texts: Array<string>): void {\n\t\tif(this.isInfoEnabled()) {\n\t\t\tconsole.log(texts);\n\t\t}\n\t}\n\n\tpublic setDebugEnabled(value: boolean): void {\n\t\tthis.debugEnabled = value;\n\t}\n\n\tpublic isDebugEnabled(): boolean {\n\t\treturn this.debugEnabled;\n\t}\n\n\tpublic debug(...texts: Array<string>): void {\n\t\tif(this.isDebugEnabled()) {\n\t\t\tconsole.log(texts);\n\t\t}\n\t}\n\n\tpublic warning(...texts: Array<string>): void {\n\t\tconsole.log(texts);\n\t}\n\n\tpublic error(...texts: Array<string>): void {\n\t\tconsole.log(texts);\n\t}\n}\n\n\nexport class LogFactory {\n\n\tstatic getLog(clazz: any) {\n\t\tif(!clazz.Log) {\n\t\t\tclazz.Log = new Log();\n\t\t}\n\n\t\treturn clazz.Log;\n\t}\n}\n","\nexport interface CompareFcn<T> {\n\t(a: T, b: T): number;\n}\n\n\nexport class SortedSet<T> {\n\tprivate valueArray: Array<T>;\n\tprivate compareFcn: CompareFcn<T>;\n\tprivate isSorted: boolean;\n\n\tconstructor(compareFcn: CompareFcn<T>) {\n\t\tthis.valueArray = [];\n\t\tthis.compareFcn = compareFcn;\n\t}\n\n\tvalues(): Array<T> {\n\t\tif(!this.isSorted) {\n            console.assert(!!this.compareFcn);\n\t\t\tthis.valueArray.sort(this.compareFcn);\n\t\t\tthis.isSorted = true;\n\t\t}\n\t\treturn this.valueArray;\n\t}\n\n\tinsert(element: T): void {\n\t\tvar index: number = this.valueArray.indexOf(element);\n\t\tif(index == -1) {\n\t\t\tthis.isSorted = false;\n\t\t\tthis.valueArray.push(element);\n\t\t}\n\t}\n\n\tpush(element: T): void {\n\t\tthis.insert(element);\n\t}\n\n\tremove(element: T): boolean {\n\t\tvar index: number = this.valueArray.indexOf(element);\n\t\tif(index == -1) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.valueArray = this.valueArray.splice(index, 1);\n\t}\n\n\tcount(): number {\n\t\treturn this.valueArray.length;\n\t}\n}\n","/**\n * convenience function to supply a default value if the given value is not specified\n */\nexport function _default<T>(value: T, defaultValue: T): T {\n  return (typeof value !== 'undefined') ? value : defaultValue;\n}\n\n\nexport function isAssignableFrom(entryType: any, assignableTo: any) {\n  return (assignableTo === entryType) ||\n    ((typeof entryType === \"function\") && (assignableTo.prototype instanceof entryType));\n};\n\n\n/**\n * a function called on an object instance that will return the desired property value\n */\nexport interface ReadMethod<Type> {\n\t(): Type;\n}\n\n\n/**\n * a function called on an object instance that will set the desired property value\n */\nexport interface WriteMethod<Type> {\n\t(value: Type): void;\n}\n\n\n/**\n * parameters used to create a PropertyDescriptor\n */\nexport interface PropertyDescriptorParams<T> {\n\ttype: any;\n\tread: ReadMethod<T>;\n\twrite: WriteMethod<T>;\n}\n\n\n/**\n * an interface to read and write a value into an object\n */\nexport abstract class PropertyDescriptor {\n\tprivate propertyType: any;\n\tprivate readMethod: ReadMethod<any>;\n\tprivate writeMethod: WriteMethod<any>;\n\n\tconstructor(params: PropertyDescriptorParams<any>) {\n\t\tthis.propertyType = params.type;\n\t\tthis.readMethod = params.read;\n\t\tthis.writeMethod = params.write;\n\t}\n\n\tpublic getPropertyType(): any {\n\t\treturn this.propertyType;\n\t}\n\n\tpublic getReadMethod(): ReadMethod<any> {\n\t\treturn this.readMethod;\n\t}\n\n\tpublic getWriteMethod(): WriteMethod<any> {\n\t\treturn this.writeMethod;\n\t}\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { PropertyDescriptorParams, PropertyDescriptor, _default } from \"./PropertyDescriptor\";\n\n\nexport interface ChildAggregateParams<T> extends PropertyDescriptorParams<T> {\n  order: number;\n  name?: string;\n  required?: boolean;\n  collectionEntryType?: any;\n}\n\n\n/**\n * Marks a method as providing a child aggregate (or set of them to a top-level aggregate).\n *\n * @author Ryan Heaton\n */\nexport class ChildAggregate extends PropertyDescriptor {\n  private _name: string;\n  private _required: boolean;\n  private _order: number;\n  private _collectionEntryType: any;\n\n  constructor(params: ChildAggregateParams<any>) {\n    super(params);\n    this._order = params.order;\n    this._name = _default(params.name, \"##not_specified##\");\n    this._required = _default(params.required, false);\n    this._collectionEntryType = _default(params.collectionEntryType, null);\n  }\n\n  /**\n   * Used to specify the name of the aggregate in its context as a child aggregate.\n   *\n   * @return Used to specify the name of the aggregate in its context as a child aggregate.\n   */\n  public name(): string {\n    return this._name;\n  }\n\n  /**\n   * Whether this aggregate is required.\n   *\n   * @return Whether this aggregate is required.\n   */\n  public required(): boolean {\n    return this._required;\n  }\n\n  /**\n   * The order this child aggregate comes in its parent aggregate.\n   *\n   * @return The order this child aggregate comes in its parent aggregate.\n   */\n  public order(): number {\n    return this._order;\n  }\n\n  /**\n   * If the type is a collection, return the type of the elements of the collection (otherwise null)\n   */\n  public collectionEntryType(): any {\n    return this._collectionEntryType;\n  }\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { PropertyDescriptorParams, PropertyDescriptor, _default } from \"./PropertyDescriptor\";\n\n\nexport interface ElementParams<T> extends PropertyDescriptorParams<T> {\n  order: number;\n  name: string;\n  required?: boolean;\n  collectionEntryType?: any;\n}\n\n\n/**\n * An OFX element, applied to a javabean property.\n *\n * @author Ryan Heaton\n */\nexport class Element extends PropertyDescriptor {\n  private _name: string;\n  private _required: boolean;\n  private _order: number;\n  private _collectionEntryType: any;\n\n  constructor(params: ElementParams<any>) {\n    super(params);\n    this._name = params.name;\n    this._required = _default(params.required, false);\n    this._order = params.order;\n    this._collectionEntryType = _default(params.collectionEntryType, null);\n  }\n\n  /**\n   * The name of the element.\n   *\n   * @return The name of the element.\n   */\n  public name(): string {\n    return this._name;\n  }\n\n  /**\n   * Whether this element is required.\n   *\n   * @return Whether this element is required.\n   */\n  public required(): boolean {\n    return this._required;\n  }\n\n  /**\n   * The order this element comes in its parent aggregate.\n   *\n   * @return The order this element comes in its parent aggregate.\n   */\n  public order(): number {\n    return this._order;\n  }\n\n  /**\n   * If the type is a collection, return the type of the elements of the collection (otherwise null)\n   */\n  public collectionEntryType(): any {\n    return this._collectionEntryType;\n  }\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ChildAggregate } from '../meta/ChildAggregate';\nimport { Element } from '../meta/Element';\nimport { ReadMethod, WriteMethod } from '../meta/PropertyDescriptor';\nimport { SortedSet } from '../collections/SortedSet';\nimport { AggregateInfo } from './AggregateInfo';\nimport { OFXException } from '../OFXException';\nimport { AggregateIntrospector } from './AggregateIntrospector';\n\n//import Log = org.apache.commons.logging.Log;\n//import LogFactory = org.apache.commons.logging.LogFactory;\n\n\nexport enum AggregateAttributeType {\n\n  CHILD_AGGREGATE,\n\n  ELEMENT\n\n}\n\n\n/**\n * A generic descriptor for an attribute of an OFX aggregate.\n *\n * @author Ryan Heaton\n */\nexport class AggregateAttribute {\n\n  private readMethod: ReadMethod<any>;\n  private writeMethod: WriteMethod<any>;\n  private attributeType: any;\n  private collectionEntryType: any;\n  private name: string;\n  private order: number;\n  private required: boolean;\n  private type: AggregateAttributeType;\n  private toString_: string;\n  private collection: boolean;\n\n  constructor(arg: Element | ChildAggregate) {\n    if(arg instanceof Element) {\n      this.AggregateAttributeFromElement(arg);\n    } else if(arg instanceof ChildAggregate) {\n      this.AggregateAttributeFromChildAggregate(arg);\n    } else {\n      throw new OFXException(\"invalid type\");\n    }\n  }\n\n  AggregateAttributeFromElement(elementInfo: Element) {\n    this.readMethod = elementInfo.getReadMethod();\n    this.writeMethod = elementInfo.getWriteMethod();\n    if (this.readMethod == null) {\n      throw new OFXException(\"Illegal property for aggregate: no read method.\");\n    }\n    else if (this.writeMethod == null) {\n      throw new OFXException(\"Illegal property for aggregate: no write method.\");\n    }\n\n    this.attributeType = elementInfo.getPropertyType();\n    this.collectionEntryType = null;\n    this.name = elementInfo.name();\n    this.order = elementInfo.order();\n    this.required = elementInfo.required();\n    this.type = AggregateAttributeType.ELEMENT;\n    this.toString_ = \"Element '\" + this.name + \"'\";\n    this.collection = false;\n\n    //todo: validate known/supported element types here?\n  }\n\n  AggregateAttributeFromChildAggregate(childAggregate: ChildAggregate) {\n    this.readMethod = childAggregate.getReadMethod();\n    this.writeMethod = childAggregate.getWriteMethod();\n    if (this.readMethod == null) {\n      throw new OFXException(\"Illegal property for aggregate: no read method.\");\n    }\n    else if (this.writeMethod == null) {\n      throw new OFXException(\"Illegal property for aggregate: no write method.\");\n    }\n\n    this.attributeType = childAggregate.getPropertyType();\n    this.collection = false;\n    if (childAggregate.collectionEntryType()) {\n      this.collection = true;\n      this.name = null;\n      this.collectionEntryType = childAggregate.collectionEntryType();\n    }\n    else if (\"##not_specified##\" === childAggregate.name()) {\n      var aggregateInfo: AggregateInfo = AggregateIntrospector.getAggregateInfo(this.attributeType);\n      if (aggregateInfo == null) {\n        throw new OFXException(\"Illegal child aggregate type '\" + childAggregate.getPropertyType() + \"': no aggregate information available.\");\n      }\n\n      this.name = aggregateInfo.getName();\n      if (\"##not_specified##\" === this.name) {\n        throw new OFXException(\"Illegal child aggregate type '\" + childAggregate.getPropertyType() + \"': a child aggregate name must be specified.\");\n      }\n      this.collectionEntryType = null;\n    }\n    else {\n      this.name = childAggregate.name();\n      this.collectionEntryType = null;\n    }\n\n    this.order = childAggregate.order();\n    this.required = childAggregate.required();\n    this.type = AggregateAttributeType.CHILD_AGGREGATE;\n    this.toString_ = \"ChildAggregate '\" + this.name + \"'\";\n  }\n\n  public get(instance: Object) /*throws Exception*/: any {\n    let val = this.readMethod.call(instance);\n    if (this.attributeType && val in this.attributeType) {\n      val = this.attributeType[val]\n    }\n    return val;\n  }\n\n  public set(value: any, instance: Object) /*throws Exception*/: void {\n    if(this.collection) {\n      var collection: Array<Object> = this.get(instance);\n      if (collection == null) {\n        if(this.attributeType === SortedSet) {\n          console.assert(\"contentCompare\" in this.collectionEntryType);\n          collection = <any>new SortedSet((<any>this.collectionEntryType).contentCompare);\n        } else {\n          collection = new this.attributeType();\n        }\n      }\n      collection.push(value);\n      value = collection;\n    }\n\n    this.writeMethod.call(instance, value);\n  }\n\n  public getAttributeType(): any {\n    return this.attributeType;\n  }\n\n  public getArrayEntryType(): any {\n    return this.collectionEntryType;\n  }\n\n  public getName(): string {\n    return this.name;\n  }\n\n  public isRequired(): boolean {\n    return this.required;\n  }\n\n  public getOrder(): number {\n    return this.order;\n  }\n\n  public getType(): AggregateAttributeType {\n    return this.type;\n  }\n\n  public static contentCompare(left: AggregateAttribute, right: AggregateAttribute): number {\n    return left.order - right.order;\n  }\n\n//  public int compareTo(other: AggregateAttribute) {\n//    return this.order - other.order;\n//  }\n\n  public isArray(): boolean {\n    return this.collection;\n  }\n\n  //@Override\n  public toString(): string {\n    return this.toString_;\n  }\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SortedSet } from '../collections/SortedSet';\nimport { ChildAggregate } from '../meta/ChildAggregate';\nimport { Element } from '../meta/Element';\nimport { Header } from '../meta/Header';\nimport { isAssignableFrom } from '../meta/PropertyDescriptor';\nimport { AggregateAttribute } from './AggregateAttribute';\n\nexport interface HeaderMap {\n  [key: string]: Header;\n}\n\nexport interface HeaderValues {\n  [key: string]: Object;\n}\n\n/**\n * Holder for meta information about an aggregate class.\n *\n * @author Ryan Heaton\n */\nexport class AggregateInfo {\n\n  private name: string;\n  private attributes: SortedSet<AggregateAttribute>;\n  private headers: HeaderMap;\n  private owner: any;\n\n  constructor(name: string, owner: any, parentInfo?: AggregateInfo) {\n    this.name = name;\n    this.owner = owner;\n    this.headers = {};\n    this.attributes = new SortedSet<AggregateAttribute>(AggregateAttribute.contentCompare);\n\n    if(parentInfo) {\n      for(var header in parentInfo.headers) {\n        this.headers[header] = parentInfo.headers[header];\n      }\n      var parentAttributes: Array<AggregateAttribute> = parentInfo.attributes.values();\n      for(var i in parentAttributes) {\n        var attribute: AggregateAttribute = parentAttributes[i];\n        this.attributes.insert(attribute);\n      }\n    }\n  }\n\n  /**\n   * The name of the aggregate.\n   *\n   * @return The name of the aggregate.\n   */\n  public getName(): string {\n    return this.name;\n  }\n\n  public setName(name: string): void {\n    this.name = name;\n  }\n\n  public getOwner(): any {\n    return this.owner;\n  }\n\n  /**\n   * The attributes.\n   *\n   * @return The attributes.\n   */\n  public getAttributes(): SortedSet<AggregateAttribute> {\n    return this.attributes;\n  }\n\n  /**\n   * Get the attribute by the specified name.\n   *\n   * @param name The name of the attribute.\n   * @param orderHint The order at which the attribute should come after in case there are more than one candidates.\n   * @param assignableTo The class this attribute must be assignable to\n   * @return The attribute by the specified name,\n   * or if there are more than one by that name,\n   * the first one after the specified order,\n   * or if there are none then the first collection that\n   * comes after the order hint, or the latest if there\n   * are none that come after the order hint, or null.\n   */\n  public getAttribute(name: string, orderHint: number, assignableTo: any = null): AggregateAttribute {\n    var candidates: Array<AggregateAttribute> = new Array<AggregateAttribute>();\n    var collectionBucket: AggregateAttribute = null;\n    for (var i in this.attributes.values()) {\n      var attribute: AggregateAttribute = this.attributes.values()[i];\n      if (name === attribute.getName()) {\n        candidates.push(attribute);\n      }\n      else if (attribute.isArray()) {\n        if (assignableTo != null) {\n          // Verify it's the right generic type.\n          var entryType: any = attribute.getArrayEntryType();\n          if (entryType != null && !isAssignableFrom(entryType, assignableTo)) {\n            // Array is of wrong type.\n            continue;\n          }\n        }\n        if (collectionBucket == null || collectionBucket.getOrder() < orderHint) {\n          //the default is the first collection that comes after the order hint, or the latest if there are none that come after the order hint.\n          collectionBucket = attribute;\n        }\n      }\n    }\n\n    if (candidates.length != 0) {\n      if (candidates.length == 1) {\n        return candidates[0];\n      }\n      else {\n        for (var candidate of candidates) {\n          if (candidate.getOrder() >= orderHint) {\n            return candidate;\n          }\n        }\n      }\n    }\n\n    return collectionBucket;\n  }\n\n  /**\n   * Whether this aggregate has headers.\n   *\n   * @return Whether this aggregate has headers.\n   */\n  public hasHeaders(): boolean {\n    return Object.keys(this.headers).length != 0;\n  }\n\n  /**\n   * Get the headers defined by the specific aggregate instance.\n   *\n   * @param instance The aggregate instance.\n   * @return The headers.\n   */\n  public getHeaders(instance: Object): HeaderValues {\n    var headers: HeaderValues = {};\n    for (var headerKey in this.headers) {\n      var header: Header = this.headers[headerKey];\n      var headerValue: Object = header.getReadMethod().call(instance);\n      headers[header.name()] = headerValue;\n    }\n    return headers;\n  }\n\n  /**\n   * The type of the specified header.\n   *\n   * @param name The header name.\n   * @return The header type, or null if no header by the specified name exists.\n   */\n  public getHeaderType(name: string): any {\n    return (name in this.headers) ? this.headers[name].getPropertyType() : null;\n  }\n\n  /**\n   * Set the header value for the specified instance.\n   *\n   * @param instance The instance.\n   * @param name     The name of the header.\n   * @param value    the value of the header.\n   */\n  public setHeader(instance: Object, name: string, value: Object): void {\n    if (name in this.headers) {\n      this.headers[name].getWriteMethod().call(instance, value);\n    }\n  }\n\n\n  public addChildAggregate(childAggregate: ChildAggregate): void {\n    var attribute = new AggregateAttribute(childAggregate);\n    this.attributes.insert(attribute);\n  }\n\n  public addElement(element: Element): void {\n    var attribute = new AggregateAttribute(element);\n    this.attributes.insert(attribute);\n  }\n\n  public addHeader(header: Header): void {\n    console.assert(<boolean><any>header.name());\n    this.headers[header.name()] = header;\n  }\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ChildAggregate } from '../meta/ChildAggregate';\nimport { Header } from '../meta/Header';\nimport { Element } from '../meta/Element';\nimport { Log, LogFactory } from '../log/Log';\nimport { AggregateInfo } from './AggregateInfo';\nimport { AnyMap } from '../collections/collections';\n\n//import Log = org.apache.commons.logging.Log;\n//import LogFactory = org.apache.commons.logging.LogFactory;\n\nvar LOG: Log;\n\n/**\n * Introspector for aggregate information.\n *\n * @author Ryan Heaton\n */\nexport class AggregateIntrospector {\n\n  private static AGGREGATE_CLASSES_BY_NAME: AnyMap = {};\n  private static placeholderName = \"##PLACEHOLDER##\";\n\n  /**\n   * Get the aggregate meta information for the specified class.\n   *\n   * @param clazz the aggregate class.\n   * @return The aggregate meta information, or null if the class isn't an aggregate.\n   */\n  public static getAggregateInfo(clazz: any): AggregateInfo {\n    var aggregate: AggregateInfo = clazz.Aggregate;\n    if(aggregate != null && aggregate.getOwner() === clazz) {\n      return aggregate;\n    } else {\n      return null;\n    }\n  }\n\n  private static getAncestorAggregateInfo(clazz: Function): AggregateInfo {\n    // traverse inheritence hierarchy.  This is janky because of typescript's __extends function, and may break in the future\n    for(var proto: Function = clazz.prototype; proto; proto = Object.getPrototypeOf(proto)) {\n      if((<any>proto).constructor && (<any>proto).constructor.Aggregate) {\n        return (<any>proto).constructor.Aggregate;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Find the aggregate class by name.\n   *\n   * @param aggregateName The name of the aggregate.\n   * @return The aggregate class.\n   */\n  public static findAggregateByName(aggregateName: string): any {\n    return AggregateIntrospector.AGGREGATE_CLASSES_BY_NAME[aggregateName];\n  }\n\n  public static addAggregate(clazz: any, name: string) {\n    AggregateIntrospector.AGGREGATE_CLASSES_BY_NAME[name] = clazz;\n\n    var aggregateInfo: AggregateInfo = AggregateIntrospector.getAggregateInfo(clazz);\n    if(aggregateInfo) {\n      console.assert(aggregateInfo.getName() === AggregateIntrospector.placeholderName);\n      aggregateInfo.setName(name);\n    } else {\n      var parentInfo: AggregateInfo = AggregateIntrospector.getAncestorAggregateInfo(clazz);\n      clazz.Aggregate = new AggregateInfo(name, clazz, parentInfo);\n    }\n  }\n\n  public static addChildAggregate(clazz: any, childAggregate: ChildAggregate) {\n    var aggregateInfo: AggregateInfo = AggregateIntrospector.getAggregateInfo(clazz);\n    if(!aggregateInfo) {\n      var parentInfo: AggregateInfo = AggregateIntrospector.getAncestorAggregateInfo(clazz);\n      aggregateInfo = clazz.Aggregate = new AggregateInfo(AggregateIntrospector.placeholderName, clazz, parentInfo);\n    }\n    console.assert(aggregateInfo != null);\n    if(aggregateInfo) {\n      aggregateInfo.addChildAggregate(childAggregate);\n    }\n  }\n\n  public static addElement(clazz: any, element: Element) {\n    var aggregateInfo: AggregateInfo = AggregateIntrospector.getAggregateInfo(clazz);\n    if(!aggregateInfo) {\n      var parentInfo: AggregateInfo = AggregateIntrospector.getAncestorAggregateInfo(clazz);\n      aggregateInfo = clazz.Aggregate = new AggregateInfo(AggregateIntrospector.placeholderName, clazz, parentInfo);\n    }\n    console.assert(aggregateInfo != null);\n    if(aggregateInfo) {\n      aggregateInfo.addElement(element);\n    }\n  }\n\n  public static addHeader(clazz: any, header: Header) {\n    var aggregateInfo = AggregateIntrospector.getAggregateInfo(clazz);\n    if(!aggregateInfo) {\n      var parentInfo: AggregateInfo = AggregateIntrospector.getAncestorAggregateInfo(clazz);\n      aggregateInfo = clazz.Aggregate = new AggregateInfo(AggregateIntrospector.placeholderName, clazz, parentInfo);\n    }\n    console.assert(aggregateInfo != null);\n    if(aggregateInfo) {\n      aggregateInfo.addHeader(header);\n    }\n  }\n}\n\nLOG = LogFactory.getLog(AggregateIntrospector);\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { AggregateIntrospector } from \"../io/AggregateIntrospector\";\n\nexport function Aggregate_add(clazz: Object, value: string = \"#NOT_SET#\"): void {\n  AggregateIntrospector.addAggregate(clazz, value);\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ElementParams, Element } from \"./Element\";\nimport { AggregateIntrospector } from \"../io/AggregateIntrospector\";\n\n\nexport function Element_add<Type>(clazz: any, params: ElementParams<Type>): void {\n  console.assert(params.type != null);\n  AggregateIntrospector.addElement(clazz, new Element(params));\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { AccountDetails } from \"../common/AccountDetails\";\nimport { AccountType } from \"./AccountType\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../meta/Element_add\";\n\n\n/**\n * Base bank account details.\n *\n * @author Ryan Heaton\n * @see \"OFX Spec, Section 11.3.1\"\n */\nexport class BankAccountDetails implements AccountDetails {\n\n  private bankId: string;\n  private branchId: string;\n  private accountNumber: string;\n  private accountType: AccountType;\n  private accountKey: string;\n\n  /**\n   * The routing and transit number.\n   *\n   * @return The routing and transit number.\n   */\n  public getBankId(): string {\n    return this.bankId;\n  }\n\n  /**\n   * The routing and transit number.\n   *\n   * @param bankId The routing and transit number.\n   */\n  public setBankId(bankId: string): void {\n    this.bankId = bankId;\n  }\n\n  /**\n   * The routing and transit number.\n   *\n   * @return The routing and transit number.\n   */\n  public getRoutingNumber(): string {\n    return this.getBankId();\n  }\n\n  /**\n   * The routing and transit number.\n   *\n   * @param routingNumber The routing and transit number.\n   */\n  public setRoutingNumber(routingNumber: string): void {\n    this.setBankId(routingNumber);\n  }\n\n  /**\n   * The branch id.\n   *\n   * @return The branch id.\n   */\n  public getBranchId(): string {\n    return this.branchId;\n  }\n\n  /**\n   * The branch id.\n   *\n   * @param branchId The branch id.\n   */\n  public setBranchId(branchId: string): void {\n    this.branchId = branchId;\n  }\n\n  /**\n   * The account number.\n   *\n   * @return The account number.\n   */\n  public getAccountNumber(): string {\n    return this.accountNumber;\n  }\n\n  /**\n   * The account number.\n   *\n   * @param accountNumber The account number.\n   */\n  public setAccountNumber(accountNumber: string): void {\n    this.accountNumber = accountNumber;\n  }\n\n  /**\n   * The account type.\n   *\n   * @return The account type.\n   */\n  public getAccountType(): AccountType {\n    return this.accountType;\n  }\n\n  /**\n   * The account type.\n   *\n   * @param accountType The account type.\n   */\n  public setAccountType(accountType: AccountType): void {\n    this.accountType = accountType;\n  }\n\n  /**\n   * The account key.\n   *\n   * @return The account key.\n   */\n  public getAccountKey(): string {\n    return this.accountKey;\n  }\n\n  /**\n   * The account key.\n   *\n   * @param accountKey The account key.\n   */\n  public setAccountKey(accountKey: string): void {\n    this.accountKey = accountKey;\n  }\n}\n\nAggregate_add( BankAccountDetails );\nElement_add(BankAccountDetails, { name: \"BANKID\", required: true, order: 0, type: String, read: BankAccountDetails.prototype.getBankId, write: BankAccountDetails.prototype.setBankId });\nElement_add(BankAccountDetails, { name: \"BRANCHID\", order: 10, type: String, read: BankAccountDetails.prototype.getBranchId, write: BankAccountDetails.prototype.setBranchId });\nElement_add(BankAccountDetails, { name: \"ACCTID\", required: true, order: 20, type: String, read: BankAccountDetails.prototype.getAccountNumber, write: BankAccountDetails.prototype.setAccountNumber });\nElement_add(BankAccountDetails, { name: \"ACCTTYPE\", required: true, order: 30, type: AccountType, read: BankAccountDetails.prototype.getAccountType, write: BankAccountDetails.prototype.setAccountType });\nElement_add(BankAccountDetails, { name: \"ACCTKEY\", order: 40, type: String, read: BankAccountDetails.prototype.getAccountKey, write: BankAccountDetails.prototype.setAccountKey });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { AccountDetails } from \"../common/AccountDetails\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../meta/Element_add\";\n\n\n/**\n * @author Ryan Heaton\n *\n * @see \"OFX Spec, Section 11.3.2\"\n */\nexport class CreditCardAccountDetails implements AccountDetails {\n\n  private accountNumber: string;\n  private accountKey: string;\n\n  /**\n   * The account number.\n   *\n   * @return The account number.\n   */\n  public getAccountNumber(): string {\n    return this.accountNumber;\n  }\n\n  /**\n   * The account number.\n   *\n   * @param accountNumber The account number.\n   */\n  public setAccountNumber(accountNumber: string): void {\n    this.accountNumber = accountNumber;\n  }\n\n  /**\n   * The account key.\n   *\n   * @return The account key.\n   */\n  public getAccountKey(): string {\n    return this.accountKey;\n  }\n\n  /**\n   * The account key.\n   *\n   * @param accountKey The account key.\n   */\n  public setAccountKey(accountKey: string): void {\n    this.accountKey = accountKey;\n  }\n}\n\nAggregate_add( CreditCardAccountDetails );\nElement_add(CreditCardAccountDetails, { name: \"ACCTID\", required: true, order: 0, type: String, read: CreditCardAccountDetails.prototype.getAccountNumber, write: CreditCardAccountDetails.prototype.setAccountNumber });\nElement_add(CreditCardAccountDetails, { name: \"ACCTKEY\", order: 10, type: String, read: CreditCardAccountDetails.prototype.getAccountKey, write: CreditCardAccountDetails.prototype.setAccountKey });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { AccountDetails } from \"../../common/AccountDetails\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../../meta/Element_add\";\n\n\n/**\n * Aggregate for the details that identifity a brokerage account.\n *\n * @author Jon Perlow\n * @see \"OFX Spec, Section 13.6.1\"\n */\nexport class InvestmentAccountDetails implements AccountDetails {\n\n  private brokerId: string;\n  private accountNumber: string;\n  private accountKey: string;\n\n\n  /**\n   * Gets the broker id.\n   *\n   * @return the id of the broker\n   */\n  public getBrokerId(): string {\n    return this.brokerId;\n  }\n\n  /**\n   * Sets the broker id.\n   *\n   * @param brokerId the id of the broker\n   */\n  public setBrokerId(brokerId: string): void {\n    this.brokerId = brokerId;\n  }\n\n  /**\n   * Gets the account number.\n   *\n   * @return the account number\n   */\n  public getAccountNumber(): string {\n    return this.accountNumber;\n  }\n\n  /**\n   * Sets the account number.\n   *\n   * @param accountNumber the account number\n   */\n  public setAccountNumber(accountNumber: string): void {\n    this.accountNumber = accountNumber;\n  }\n\n  /**\n   * Gets the account key.\n   *\n   * @return the account key\n   */\n  public getAccountKey(): string {\n    return this.accountKey;\n  }\n\n  /**\n   * Sets the account key.\n   *\n   * @param accountKey the account key\n   */\n  public setAccountKey(accountKey: string): void {\n    this.accountKey = accountKey;\n  }\n}\n\nAggregate_add( InvestmentAccountDetails );\nElement_add(InvestmentAccountDetails, { name: \"BROKERID\", required: true, order: 0, type: String, read: InvestmentAccountDetails.prototype.getBrokerId, write: InvestmentAccountDetails.prototype.setBrokerId });\nElement_add(InvestmentAccountDetails, { name: \"ACCTID\", required: true, order: 20, type: String, read: InvestmentAccountDetails.prototype.getAccountNumber, write: InvestmentAccountDetails.prototype.setAccountNumber });\nElement_add(InvestmentAccountDetails, { name: \"ACCTKEY\", order: 40, type: String, read: InvestmentAccountDetails.prototype.getAccountKey, write: InvestmentAccountDetails.prototype.setAccountKey });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../meta/Element_add\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class StatementRange {\n\n  private start: Date;\n  private end: Date;\n  private includeTransactions: boolean;\n\n  constructor() {\n    this.includeTransactions = true;\n  }\n\n  /**\n   * The start of the statement range.\n   *\n   * @return The start of the statement range.\n   */\n  public getStart(): Date {\n    return this.start;\n  }\n\n  /**\n   * The start of the statement range.\n   *\n   * @param start The start of the statement range.\n   */\n  public setStart(start: Date): void {\n    this.start = start;\n  }\n\n  /**\n   * The end of the statement range.\n   *\n   * @return The end of the statement range.\n   */\n  public getEnd(): Date {\n    return this.end;\n  }\n\n  /**\n   * The end of the statement range.\n   *\n   * @param end The end of the statement range.\n   */\n  public setEnd(end: Date): void {\n    this.end = end;\n  }\n\n  /**\n   * Whether to include transactions.\n   *\n   * @return Whether to include transactions.\n   */\n  public getIncludeTransactions(): boolean {\n    return this.includeTransactions;\n  }\n\n  /**\n   * Whether to include transactions.\n   *\n   * @param includeTransactions Whether to include transactions.\n   */\n  public setIncludeTransactions(includeTransactions: boolean): void {\n    this.includeTransactions = includeTransactions;\n  }\n}\n\nAggregate_add( StatementRange, \"INCTRAN\" );\nElement_add(StatementRange, { name: \"DTSTART\", order: 0, type: Date, read: StatementRange.prototype.getStart, write: StatementRange.prototype.setStart });\nElement_add(StatementRange, { name: \"DTEND\", order: 10, type: Date, read: StatementRange.prototype.getEnd, write: StatementRange.prototype.setEnd });\nElement_add(StatementRange, { name: \"INCLUDE\", required: true, order: 20, type: Boolean, read: StatementRange.prototype.getIncludeTransactions, write: StatementRange.prototype.setIncludeTransactions });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { FinancialInstitutionAccount } from \"../FinancialInstitutionAccount\";\nimport { MessageSetType } from \"../../domain/data/MessageSetType\";\nimport { FinancialInstitutionImpl } from \"./FinancialInstitutionImpl\";\nimport { BankAccountDetails } from \"../../domain/data/banking/BankAccountDetails\";\nimport { CreditCardAccountDetails } from \"../../domain/data/creditcard/CreditCardAccountDetails\";\nimport { InvestmentAccountDetails } from \"../../domain/data/investment/accounts/InvestmentAccountDetails\";\nimport { OFXException } from \"../../OFXException\";\nimport { AccountStatement } from \"../AccountStatement\";\nimport { StatementRange } from \"../../domain/data/common/StatementRange\";\nimport { RequestEnvelope } from \"../../domain/data/RequestEnvelope\";\nimport { TransactionWrappedRequestMessage } from \"../../domain/data/TransactionWrappedRequestMessage\";\nimport { RequestMessage } from \"../../domain/data/RequestMessage\";\nimport { ResponseEnvelope } from \"../../domain/data/ResponseEnvelope\";\nimport { StatementResponse } from \"../../domain/data/common/StatementResponse\";\nimport { RequestMessageSet } from \"../../domain/data/RequestMessageSet\";\nimport { StatementRequest } from \"../../domain/data/common/StatementRequest\";\n\n\n/**\n * Base account implementation. Supports banking and credit card accounts.\n *\n * @author Ryan Heaton\n */\nexport abstract class BaseAccountImpl<D> implements FinancialInstitutionAccount {\n\n  private details: D;\n  private messageType: MessageSetType;\n  private username: string;\n  private password: string;\n  private institution: FinancialInstitutionImpl;\n\n  constructor(details: D, username: string, password: string, institution: FinancialInstitutionImpl) {\n    this.details = details;\n    this.username = username;\n    this.password = password;\n    this.institution = institution;\n    this.messageType = this.getMessageSetType(details);\n  }\n\n  /**\n   * Get the message set type of the specified details.\n   *\n   * @param details The details.\n   * @return The message set type.\n   */\n  protected getMessageSetType(details: D): MessageSetType {\n    var messageType: MessageSetType;\n    if (details instanceof BankAccountDetails) {\n      messageType = MessageSetType.banking;\n    }\n    else if (this.getDetails() instanceof CreditCardAccountDetails) {\n      messageType = MessageSetType.creditcard;\n    }\n    else if (this.getDetails() instanceof InvestmentAccountDetails) {\n      messageType = MessageSetType.investment;\n    }\n    else {\n      throw new OFXException(\"Illegal details\");\n    }\n    return messageType;\n  }\n\n  public readStatement(start: Date, end: Date) /*throws OFXException*/: Promise<AccountStatement> {\n    var range: StatementRange = new StatementRange();\n    range.setIncludeTransactions(true);\n    range.setStart(start);\n    range.setEnd(end);\n\n    var request: RequestEnvelope = this.institution.createAuthenticatedRequest(this.username, this.password);\n    var requestTransaction: TransactionWrappedRequestMessage<RequestMessage> = this.createTransaction();\n    requestTransaction.setWrappedMessage(this.createStatementRequest(this.getDetails(), range));\n    request.getMessageSets().insert(this.createRequestMessageSet(requestTransaction));\n\n    return this.institution.sendRequest(request)\n    .then((response: ResponseEnvelope): AccountStatement => {\n      this.institution.doGeneralValidationChecks(request, response);\n\n      return this.unwrapStatementResponse(response);\n    });\n  }\n\n  /**\n   * Unwrap the statement response from the specified response envelope.\n   *\n   * @param response The response envelope to unwrap.\n   * @return The response.\n   */\n  protected abstract unwrapStatementResponse(response: ResponseEnvelope): StatementResponse /*throws OFXException*/;\n\n  /**\n   * Create a request message set from the specified transaction.\n   *\n   * @param transaction The transaction.\n   * @return The request message set.\n   */\n  protected abstract createRequestMessageSet(transaction: TransactionWrappedRequestMessage<RequestMessage>): RequestMessageSet;\n\n  /**\n   * Create a transaction.\n   *\n   * @return The transaction.\n   */\n  protected abstract createTransaction(): TransactionWrappedRequestMessage<RequestMessage>;\n\n  /**\n   * Create a statement request.\n   *\n   * @param details The details.\n   * @param range the range.\n   * @return The statement request.\n   */\n  protected abstract createStatementRequest(details: D, range: StatementRange): StatementRequest;\n\n  /**\n   * The details of this account.\n   *\n   * @return The details of this account.\n   */\n  public getDetails(): D {\n    return this.details;\n  }\n\n  /**\n   * The message set type.\n   *\n   * @return The message set type.\n   */\n  protected getMessageType(): MessageSetType {\n    return this.messageType;\n  }\n}\n","import { RequestMessage } from \"./RequestMessage\";\nimport { MessageSetType } from \"./MessageSetType\";\n\n/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /**\n * A message set enclosed in an OFX request envelope.\n *\n * @author Ryan Heaton\n */\nexport abstract class RequestMessageSet /*implements Comparable<RequestMessageSet>*/ {\n\n  private version: string;\n\n  public abstract getType(): MessageSetType;\n\n  constructor() {\n    this.version = \"1\";\n  }\n\n  /**\n   * The version of this request message.\n   *\n   * @return The version of this request message.\n   */\n  public getVersion(): string {\n    return this.version;\n  }\n\n  /**\n   * The version of this request message.\n   *\n   * @param version The version of this request message.\n   */\n  public setVersion(version: string): void {\n    this.version = version;\n  }\n\n  /**\n   * The request messages for this request message set.\n   *\n   * @return The request messages for this request message set.\n   */\n  public abstract getRequestMessages(): Array<RequestMessage>;\n\n  // Inherited.\n  /*public compareTo(o: RequestMessageSet): number {\n    return getType().compareTo(o.getType());\n  }*/\n\n  public static contentCompare(left: RequestMessageSet, right: RequestMessageSet): number {\n    return left.getType() - right.getType();\n  }\n\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A message applicable to a request message set.\n *\n * @author Ryan Heaton\n */\nexport abstract class RequestMessage {\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as UUID from 'uuid'\nimport { RequestMessage } from './RequestMessage';\nimport { Element_add } from '../../meta/Element_add';\n\n/**\n * A request message wrapped in a transaction.\n *\n * @author Ryan Heaton\n * @see \"Section 2.4.6, OFX Spec\"\n */\nexport abstract class TransactionWrappedRequestMessage<M extends RequestMessage> extends RequestMessage {\n\n  private UID: string;\n  private clientCookie: string;\n  private transactionAuthorizationNumber: string;\n\n  constructor(UID: string = UUID.v1()) {\n    super();\n    this.UID = UID;\n  }\n\n  /**\n   * UID of this transaction.\n   *\n   * @return UID of this transaction.\n   */\n  public getUID(): string {\n    return this.UID;\n  }\n\n  /**\n   * UID of this transaction.\n   *\n   * @param UID UID of this transaction.\n   */\n  public setUID(UID: string): void {\n    this.UID = UID;\n  }\n\n  /**\n   * Client cookie (echoed back by the response).\n   *\n   * @return Client cookie (echoed back by the response).\n   */\n  public getClientCookie(): string {\n    return this.clientCookie;\n  }\n\n  /**\n   * Client cookie (echoed back by the response).\n   *\n   * @param clientCookie Client cookie (echoed back by the response).\n   */\n  public setClientCookie(clientCookie: string): void {\n    this.clientCookie = clientCookie;\n  }\n\n  /**\n   * The transaction authorization number.\n   *\n   * @return The transaction authorization number.\n   */\n  public getTransactionAuthorizationNumber(): string {\n    return this.transactionAuthorizationNumber;\n  }\n\n  /**\n   * The transaction authorization number.\n   *\n   * @param transactionAuthorizationNumber The transaction authorization number.\n   */\n  public setTransactionAuthorizationNumber(transactionAuthorizationNumber: string): void {\n    this.transactionAuthorizationNumber = transactionAuthorizationNumber;\n  }\n\n  /**\n   * Set the wrapped message.\n   *\n   * @param message The wrapped message.\n   */\n  public abstract setWrappedMessage(message: M): void;\n\n}\n\nElement_add(TransactionWrappedRequestMessage, { name: \"TRNUID\", required: true, order: 0, type: String, read: TransactionWrappedRequestMessage.prototype.getUID, write: TransactionWrappedRequestMessage.prototype.setUID });\nElement_add(TransactionWrappedRequestMessage, { name: \"CLTCOOKIE\", order: 10, type: String, read: TransactionWrappedRequestMessage.prototype.getClientCookie, write: TransactionWrappedRequestMessage.prototype.setClientCookie });\nElement_add(TransactionWrappedRequestMessage, { name: \"TAN\", order: 20, type: String, read: TransactionWrappedRequestMessage.prototype.getTransactionAuthorizationNumber, write: TransactionWrappedRequestMessage.prototype.setTransactionAuthorizationNumber });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { AggregateIntrospector } from \"../io/AggregateIntrospector\";\nimport { ChildAggregate, ChildAggregateParams } from \"./ChildAggregate\";\n\nexport function ChildAggregate_add<Type>(clazz: any, params: ChildAggregateParams<Type>): void {\n  console.assert(params.type != null);\n  AggregateIntrospector.addChildAggregate(clazz, new ChildAggregate(params));\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { RequestMessage } from \"../RequestMessage\";\nimport { StatementRange } from \"./StatementRange\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class StatementRequest extends RequestMessage {\n\n  private statementRange: StatementRange;\n\n  /**\n   * The statement range.\n   *\n   * @return The statement range.\n   */\n  public getStatementRange(): StatementRange {\n    return this.statementRange;\n  }\n\n  /**\n   * The statement range.\n   *\n   * @param statementRange The statement range.\n   */\n  public setStatementRange(statementRange: StatementRange): void {\n    this.statementRange = statementRange;\n  }\n}\n\nAggregate_add( StatementRequest, \"STMTRQ\" );\nChildAggregate_add(StatementRequest, { name: \"INCTRAN\", required: false, order: 10, type: StatementRange, read: StatementRequest.prototype.getStatementRange, write: StatementRequest.prototype.setStatementRange });\n","/*\n* Copyright 2008 Web Cohesion\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nimport { StatementRequest } from \"../common/StatementRequest\";\nimport { BankAccountDetails } from \"./BankAccountDetails\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class BankStatementRequest extends StatementRequest {\n\n  private account: BankAccountDetails;\n\n  /**\n   * The account details.\n   *\n   * @return The account details.\n   */\n  public getAccount(): BankAccountDetails {\n    return this.account;\n  }\n\n  /**\n   * The account details.\n   *\n   * @param account The account details.\n   */\n  public setAccount(account: BankAccountDetails): void {\n    this.account = account;\n  }\n\n}\n\nAggregate_add( BankStatementRequest, \"STMTRQ\" );\nChildAggregate_add(BankStatementRequest, { name: \"BANKACCTFROM\", required: true, order: 0, type: BankAccountDetails, read: BankStatementRequest.prototype.getAccount, write: BankStatementRequest.prototype.setAccount });\n","/*\n* Copyright 2008 Web Cohesion\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TransactionWrappedRequestMessage } from \"../TransactionWrappedRequestMessage\";\nimport { BankStatementRequest } from \"./BankStatementRequest\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class BankStatementRequestTransaction extends TransactionWrappedRequestMessage<BankStatementRequest> {\n\n  private message: BankStatementRequest;\n\n  /**\n   * The message.\n   *\n   * @return The message.\n   */\n  public getMessage(): BankStatementRequest {\n    return this.message;\n  }\n\n  /**\n   * The message.\n   *\n   * @param message The message.\n   *\n   */\n  public setMessage(message: BankStatementRequest): void {\n    this.message = message;\n  }\n\n  // Inherited.\n  public setWrappedMessage(message: BankStatementRequest): void {\n    this.setMessage(message);\n  }\n}\n\nAggregate_add( BankStatementRequestTransaction, \"STMTTRNRQ\" );\nChildAggregate_add(BankStatementRequestTransaction, { required: true, order: 30, type: BankStatementRequest, read: BankStatementRequestTransaction.prototype.getMessage, write: BankStatementRequestTransaction.prototype.setMessage });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { RequestMessageSet } from \"../RequestMessageSet\";\nimport { BankStatementRequestTransaction } from \"./BankStatementRequestTransaction\";\nimport { MessageSetType } from \"../MessageSetType\";\nimport { RequestMessage } from \"../RequestMessage\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class BankingRequestMessageSet extends RequestMessageSet {\n\n  private statementRequest: BankStatementRequestTransaction;\n\n  public getType(): MessageSetType {\n    return MessageSetType.banking;\n  }\n\n  /**\n   * The statement request.\n   *\n   * @return The statement request.\n   */\n  public getStatementRequest(): BankStatementRequestTransaction {\n    return this.statementRequest;\n  }\n\n  /**\n   * The statement request.\n   *\n   * @param statementRequest The statement request.\n   */\n  public setStatementRequest(statementRequest: BankStatementRequestTransaction): void {\n    this.statementRequest = statementRequest;\n  }\n\n  // Inherited.\n  public getRequestMessages(): Array<RequestMessage> {\n    var requestMessages: Array<RequestMessage> = [];\n    if (this.getStatementRequest() != null) {\n      requestMessages.push(this.getStatementRequest());\n    }\n    return requestMessages;\n  }\n}\n\nAggregate_add( BankingRequestMessageSet, \"BANKMSGSRQV1\" );\nChildAggregate_add(BankingRequestMessageSet, { order: 0, type: BankStatementRequestTransaction, read: BankingRequestMessageSet.prototype.getStatementRequest, write: BankingRequestMessageSet.prototype.setStatementRequest });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { BaseAccountImpl } from \"./BaseAccountImpl\";\nimport { BankAccountDetails } from \"../../domain/data/banking/BankAccountDetails\";\nimport { BankAccount } from \"../BankAccount\";\nimport { FinancialInstitutionImpl } from \"./FinancialInstitutionImpl\";\nimport { ResponseEnvelope } from \"../../domain/data/ResponseEnvelope\";\nimport { StatementResponse } from \"../../domain/data/common/StatementResponse\";\nimport { BankingResponseMessageSet } from \"../../domain/data/banking/BankingResponseMessageSet\";\nimport { MessageSetType } from \"../../domain/data/MessageSetType\";\nimport { OFXException } from \"../../OFXException\";\nimport { BankStatementResponseTransaction } from \"../../domain/data/banking/BankStatementResponseTransaction\";\nimport { BankStatementResponse } from \"../../domain/data/banking/BankStatementResponse\";\nimport { TransactionWrappedRequestMessage } from \"../../domain/data/TransactionWrappedRequestMessage\";\nimport { RequestMessage } from \"../../domain/data/RequestMessage\";\nimport { RequestMessageSet } from \"../../domain/data/RequestMessageSet\";\nimport { BankingRequestMessageSet } from \"../../domain/data/banking/BankingRequestMessageSet\";\nimport { BankStatementRequestTransaction } from \"../../domain/data/banking/BankStatementRequestTransaction\";\nimport { StatementRange } from \"../../domain/data/common/StatementRange\";\nimport { StatementRequest } from \"../../domain/data/common/StatementRequest\";\nimport { BankStatementRequest } from \"../../domain/data/banking/BankStatementRequest\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class BankingAccountImpl extends BaseAccountImpl<BankAccountDetails> implements BankAccount {\n\n  constructor(details: BankAccountDetails, username: string, password: string, institution: FinancialInstitutionImpl) {\n    super(details, username, password, institution);\n  }\n\n  protected unwrapStatementResponse(response: ResponseEnvelope) /*throws OFXException*/: StatementResponse {\n    var bankingSet: BankingResponseMessageSet = <BankingResponseMessageSet> response.getMessageSet(MessageSetType.banking);\n    if (bankingSet == null) {\n      throw new OFXException(\"No banking response message set.\");\n    }\n\n    var statementTransactionResponse: BankStatementResponseTransaction = bankingSet.getStatementResponse();\n    if (statementTransactionResponse == null) {\n      throw new OFXException(\"No banking statement response transaction.\");\n    }\n\n    var statement: BankStatementResponse = statementTransactionResponse.getMessage();\n    if (statement == null) {\n      throw new OFXException(\"No banking statement in the transaction.\");\n    }\n\n    return statement;\n  }\n\n  protected createRequestMessageSet(transaction: TransactionWrappedRequestMessage<RequestMessage>): RequestMessageSet {\n    var bankingRequest: BankingRequestMessageSet = new BankingRequestMessageSet();\n    bankingRequest.setStatementRequest(<BankStatementRequestTransaction> transaction);\n    return bankingRequest;\n  }\n\n  protected createTransaction(): TransactionWrappedRequestMessage<RequestMessage> {\n    return new BankStatementRequestTransaction();\n  }\n\n  protected createStatementRequest(details: BankAccountDetails, range: StatementRange): StatementRequest {\n    var bankRequest: BankStatementRequest = new BankStatementRequest();\n    bankRequest.setAccount(details);\n    bankRequest.setStatementRange(range);\n    return bankRequest;\n  }\n\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { FinancialInstitutionData } from \"../FinancialInstitutionData\";\n\n\n//import java.net.URL;\n\n/**\n * Base bean for FI data.\n *\n * @author Ryan Heaton\n */\nexport class BaseFinancialInstitutionData implements FinancialInstitutionData {\n\n  private id: string;\n  private fid: string;\n  private name: string;\n  private organization: string;\n  private ofxUrl: string;\n  private brokerId: string;\n\n  public constructor(id?: string) {\n    this.id = id;\n  }\n\n  public getId(): string {\n    return this.id;\n  }\n\n  public setId(id: string): void {\n    this.id = id;\n  }\n\n  public getFinancialInstitutionId(): string {\n    return this.fid;\n  }\n\n  public setFinancialInstitutionId(id: string): void {\n    this.fid = id;\n  }\n\n  public getName(): string {\n    return this.name;\n  }\n\n  public setName(name: string): void {\n    this.name = name;\n  }\n\n  public getOrganization(): string {\n    return this.organization;\n  }\n\n  public setOrganization(organization: string): void {\n    this.organization = organization;\n  }\n\n  public getOFXURL(): string {\n    return this.ofxUrl;\n  }\n\n  public setOFXURL(OFXURL: string): void {\n    this.ofxUrl = OFXURL;\n  }\n\n  public getBrokerId(): string {\n    return this.brokerId;\n  }\n\n  public setBrokerId(brokerId: string): void {\n    this.brokerId = brokerId;\n  }\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { StatementRequest } from \"../common/StatementRequest\";\nimport { CreditCardAccountDetails } from \"./CreditCardAccountDetails\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class CreditCardStatementRequest extends StatementRequest {\n\n  private account: CreditCardAccountDetails;\n\n  /**\n   * The account details.\n   *\n   * @return The account details.\n   */\n  public getAccount(): CreditCardAccountDetails {\n    return this.account;\n  }\n\n  /**\n   * The account details.\n   *\n   * @param account The account details.\n   */\n  public setAccount(account: CreditCardAccountDetails): void {\n    this.account = account;\n  }\n}\n\nAggregate_add( CreditCardStatementRequest, \"CCSTMTRQ\" );\nChildAggregate_add(CreditCardStatementRequest, { name: \"CCACCTFROM\", required: true, order: 0, type: CreditCardAccountDetails, read: CreditCardStatementRequest.prototype.getAccount, write: CreditCardStatementRequest.prototype.setAccount });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CreditCardStatementRequest } from \"./CreditCardStatementRequest\";\nimport { TransactionWrappedRequestMessage } from \"../TransactionWrappedRequestMessage\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class CreditCardStatementRequestTransaction extends TransactionWrappedRequestMessage<CreditCardStatementRequest> {\n\n  private message: CreditCardStatementRequest;\n\n  /**\n   * The message.\n   *\n   * @return The message.\n   */\n  public getMessage(): CreditCardStatementRequest {\n    return this.message;\n  }\n\n  /**\n   * The message.\n   *\n   * @param message The message.\n   *\n   */\n  public setMessage(message: CreditCardStatementRequest): void {\n    this.message = message;\n  }\n\n  // Inherited.\n  public setWrappedMessage(message: CreditCardStatementRequest): void {\n    this.setMessage(message);\n  }\n}\n\nAggregate_add( CreditCardStatementRequestTransaction, \"CCSTMTTRNRQ\" );\nChildAggregate_add(CreditCardStatementRequestTransaction, { required: true, order: 30, type: CreditCardStatementRequest, read: CreditCardStatementRequestTransaction.prototype.getMessage, write: CreditCardStatementRequestTransaction.prototype.setMessage });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { RequestMessageSet } from \"../RequestMessageSet\";\nimport { CreditCardStatementRequestTransaction } from \"./CreditCardStatementRequestTransaction\";\nimport { MessageSetType } from \"../MessageSetType\";\nimport { RequestMessage } from \"../RequestMessage\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\n//import java.util.List;\n//import java.util.ArrayList;\n\n/**\n * @author Ryan Heaton\n */\nexport class CreditCardRequestMessageSet extends RequestMessageSet {\n\n  private statementRequest: CreditCardStatementRequestTransaction;\n\n  public getType(): MessageSetType {\n    return MessageSetType.creditcard;\n  }\n\n  /**\n   * The request.\n   *\n   * @return The request.\n   */\n  public getStatementRequest(): CreditCardStatementRequestTransaction {\n    return this.statementRequest;\n  }\n\n  /**\n   * The request.\n   *\n   * @param statementRequest The request.\n   */\n  public setStatementRequest(statementRequest: CreditCardStatementRequestTransaction): void {\n    this.statementRequest = statementRequest;\n  }\n\n  // Inherited.\n  public getRequestMessages(): Array<RequestMessage> {\n    var requestMessages: Array<RequestMessage> = [];\n    if (this.getStatementRequest() != null) {\n      requestMessages.push(this.getStatementRequest());\n    }\n    return requestMessages;\n  }\n}\n\nAggregate_add( CreditCardRequestMessageSet, \"CREDITCARDMSGSRQV1\" );\nChildAggregate_add(CreditCardRequestMessageSet, { order: 0, type: CreditCardStatementRequestTransaction, read: CreditCardRequestMessageSet.prototype.getStatementRequest, write: CreditCardRequestMessageSet.prototype.setStatementRequest });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { BaseAccountImpl } from \"./BaseAccountImpl\";\nimport { CreditCardAccountDetails } from \"../../domain/data/creditcard/CreditCardAccountDetails\";\nimport { CreditCardAccount } from \"../CreditCardAccount\";\nimport { FinancialInstitutionImpl } from \"./FinancialInstitutionImpl\";\nimport { ResponseEnvelope } from \"../../domain/data/ResponseEnvelope\";\nimport { StatementResponse } from \"../../domain/data/common/StatementResponse\";\nimport { CreditCardResponseMessageSet } from \"../../domain/data/creditcard/CreditCardResponseMessageSet\";\nimport { MessageSetType } from \"../../domain/data/MessageSetType\";\nimport { OFXException } from \"../../OFXException\";\nimport { CreditCardStatementResponseTransaction } from \"../../domain/data/creditcard/CreditCardStatementResponseTransaction\";\nimport { CreditCardStatementResponse } from \"../../domain/data/creditcard/CreditCardStatementResponse\";\nimport { TransactionWrappedRequestMessage } from \"../../domain/data/TransactionWrappedRequestMessage\";\nimport { RequestMessage } from \"../../domain/data/RequestMessage\";\nimport { RequestMessageSet } from \"../../domain/data/RequestMessageSet\";\nimport { CreditCardRequestMessageSet } from \"../../domain/data/creditcard/CreditCardRequestMessageSet\";\nimport { CreditCardStatementRequestTransaction } from \"../../domain/data/creditcard/CreditCardStatementRequestTransaction\";\nimport { StatementRange } from \"../../domain/data/common/StatementRange\";\nimport { StatementRequest } from \"../../domain/data/common/StatementRequest\";\nimport { CreditCardStatementRequest } from \"../../domain/data/creditcard/CreditCardStatementRequest\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class CreditCardAccountImpl extends BaseAccountImpl<CreditCardAccountDetails> implements CreditCardAccount {\n\n  constructor(details: CreditCardAccountDetails, username: string, password: string, institution: FinancialInstitutionImpl) {\n    super(details, username, password, institution);\n  }\n\n  protected unwrapStatementResponse(response: ResponseEnvelope) /*throws OFXException*/: StatementResponse {\n    var creditCardSet: CreditCardResponseMessageSet = <CreditCardResponseMessageSet> response.getMessageSet(MessageSetType.creditcard);\n    if (creditCardSet == null) {\n      throw new OFXException(\"No credit card response message set.\");\n    }\n\n    var statementTransactionResponse: CreditCardStatementResponseTransaction = creditCardSet.getStatementResponse();\n    if (statementTransactionResponse == null) {\n      throw new OFXException(\"No credit card statement response transaction.\");\n    }\n\n    var statement: CreditCardStatementResponse = statementTransactionResponse.getMessage();\n    if (statement == null) {\n      throw new OFXException(\"No credit card statement in the transaction.\");\n    }\n\n    return statement;\n  }\n\n  protected createRequestMessageSet(transaction: TransactionWrappedRequestMessage<RequestMessage>): RequestMessageSet {\n    var creditCardRequest: CreditCardRequestMessageSet = new CreditCardRequestMessageSet();\n    creditCardRequest.setStatementRequest(<CreditCardStatementRequestTransaction> transaction);\n    return creditCardRequest;\n  }\n\n  protected createTransaction(): TransactionWrappedRequestMessage<RequestMessage> {\n    return new CreditCardStatementRequestTransaction();\n  }\n\n  protected createStatementRequest(details: CreditCardAccountDetails, range: StatementRange): StatementRequest {\n    var bankRequest: CreditCardStatementRequest = new CreditCardStatementRequest();\n    bankRequest.setAccount(details);\n    bankRequest.setStatementRange(range);\n    return bankRequest;\n  }\n\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { AggregateIntrospector } from \"../io/AggregateIntrospector\";\n\nexport function Aggregate_add(clazz: Object, value: string = \"#NOT_SET#\"): void {\n  AggregateIntrospector.addAggregate(clazz, value);\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { PropertyDescriptorParams, PropertyDescriptor } from \"./PropertyDescriptor\";\n\n\nexport interface HeaderParams<T> extends PropertyDescriptorParams<T> {\n  name: string;\n}\n\n\n/**\n * An OFX element, applied to a javabean property.\n *\n * @author Ryan Heaton\n */\nexport class Header extends PropertyDescriptor {\n  private _name: string;\n\n  constructor(params: HeaderParams<any>) {\n    super(params);\n    this._name = params.name;\n  }\n\n  /**\n   * The name of the element.\n   *\n   * @return The name of the element.\n   */\n  public name(): string {\n    return this._name;\n  }\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { HeaderParams, Header } from \"./Header\";\nimport { AggregateIntrospector } from \"../io/AggregateIntrospector\";\n\n\nexport function Header_add<Type>(clazz: any, params: HeaderParams<Type>): void {\n  console.assert(params.type != null);\n  AggregateIntrospector.addHeader(clazz, new Header(params));\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @author Ryan Heaton\n * @see \"Section 4, OFX spec\"\n */\nexport enum ApplicationSecurity {\n\n  NONE,\n\n  TYPE1\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as UUID from 'uuid';\nimport { SortedSet } from '../../collections/SortedSet';\nimport { Aggregate_add } from '../../meta/Aggregate_add';\nimport { ChildAggregate_add } from '../../meta/ChildAggregate_add';\nimport { Header_add } from '../../meta/Header_add';\nimport { ApplicationSecurity } from './ApplicationSecurity';\nimport { RequestMessageSet } from './RequestMessageSet';\n\n// import java.util.SortedSet;\n// import java.util.UUID;\n\n/**\n * Envelope for enclosing an OFX request.\n *\n * @author Ryan Heaton\n * @see \"Section 2.4.3, OFX Spec\"\n */\nexport class RequestEnvelope {\n\n  //headers\n  private security: ApplicationSecurity;\n  private UID: string;\n  private lastProcessedUID: string;\n\n  //content\n  private messageSets: SortedSet<RequestMessageSet>;\n\n  constructor(UID: string = UUID.v1()) {\n    this.security = ApplicationSecurity.NONE;\n    this.UID = UID;\n  }\n\n  /**\n   * The security of this envelope.\n   *\n   * @return The security of this envelope.\n   * @see \"Section 2.2, OFX spec\"\n   */\n  public getSecurity(): ApplicationSecurity {\n    return this.security;\n  }\n\n  /**\n   * The security of this envelope.\n   *\n   * @param security The security of this envelope.\n   * @see \"Section 2.2, OFX spec\"\n   */\n  public setSecurity(security: ApplicationSecurity): void {\n    this.security = security;\n  }\n\n  /**\n   * The UID for the envelope.\n   *\n   * @return The UID for the envelope.\n   * @see \"Section 2.2, OFX spec\"\n   */\n  public getUID(): string {\n    return this.UID;\n  }\n\n  /**\n   * The UID for the envelope.\n   *\n   * @param UID The UID for the envelope.\n   * @see \"Section 2.2, OFX spec\"\n   */\n  public setUID(UID: string): void {\n    this.UID = UID;\n  }\n\n  /**\n   * The UID of the last-processed request/response (used for file-based error recovery).\n   *\n   * @return The UID of the last-processed request/response (used for file-based error recovery).\n   * @see \"Section 2.2, OFX spec\"\n   */\n  public getLastProcessedUID(): string {\n    return this.lastProcessedUID;\n  }\n\n  /**\n   * The UID of the last-processed request/response (used for file-based error recovery).\n   *\n   * @param lastProcessedUID The UID of the last-processed request/response (used for file-based error recovery).\n   * @see \"Section 2.2, OFX spec\"\n   */\n  public setLastProcessedUID(lastProcessedUID: string): void {\n    this.lastProcessedUID = lastProcessedUID;\n  }\n\n  /**\n   * The message sets that make up the content of this request.\n   *\n   * @return The message sets that make up the content of this request.\n   * @see \"Section 2.4.5, OFX Spec\"\n   */\n  public getMessageSets(): SortedSet<RequestMessageSet> {\n    return this.messageSets;\n  }\n\n  /**\n   * The message sets that make up the content of this request.\n   *\n   * @param messageSets The message sets that make up the content of this request.\n   * @see \"Section 2.4.5, OFX Spec\"\n   */\n  public setMessageSets(messageSets: SortedSet<RequestMessageSet>): void {\n    this.messageSets = messageSets;\n  }\n}\n\nAggregate_add( RequestEnvelope, \"OFX\" );\nHeader_add(RequestEnvelope, { name: \"SECURITY\", type: ApplicationSecurity, read: RequestEnvelope.prototype.getSecurity, write: RequestEnvelope.prototype.setSecurity });\nHeader_add(RequestEnvelope, { name: \"NEWFILEUID\", type: String, read: RequestEnvelope.prototype.getUID, write: RequestEnvelope.prototype.setUID });\nHeader_add(RequestEnvelope, { name: \"OLDFILEUID\", type: String, read: RequestEnvelope.prototype.getLastProcessedUID, write: RequestEnvelope.prototype.setLastProcessedUID });\nChildAggregate_add(RequestEnvelope, { order: 1, type: SortedSet, collectionEntryType: RequestMessageSet, read: RequestEnvelope.prototype.getMessageSets, write: RequestEnvelope.prototype.setMessageSets });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../meta/Element_add\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class FinancialInstitutionInfo {\n\n  private id: string;\n  private organization: string;\n\n  /**\n   * Financial institution id.\n   *\n   * @return Financial institution id.\n   */\n  public getId(): string {\n    return this.id;\n  }\n\n  /**\n   * Financial institution id.\n   *\n   * @param id Financial institution id.\n   */\n  public setId(id: string): void {\n    this.id = id;\n  }\n\n  /**\n   * The organization.\n   *\n   * @return The organization.\n   */\n  public getOrganization(): string {\n    return this.organization;\n  }\n\n  /**\n   * The organization.\n   *\n   * @param organization The organization.\n   */\n  public setOrganization(organization: string): void {\n    this.organization = organization;\n  }\n}\n\nAggregate_add( FinancialInstitutionInfo, \"FI\" );\nElement_add(FinancialInstitutionInfo, { name: \"FID\", order: 10, type: String, read: FinancialInstitutionInfo.prototype.getId, write: FinancialInstitutionInfo.prototype.setId });\nElement_add(FinancialInstitutionInfo, { name: \"ORG\", required: true, order: 0, type: String, read: FinancialInstitutionInfo.prototype.getOrganization, write: FinancialInstitutionInfo.prototype.setOrganization });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { RequestMessage } from \"../RequestMessage\";\nimport { Element_add } from \"../../../meta/Element_add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\nimport { FinancialInstitutionInfo } from \"./FinancialInstitution\";\n\n\n/**\n * Sign-on request\n *\n * @author Ryan Heaton\n * @see \"Section 2.5.1.2, OFX Spec.\"\n */\nexport class SignonRequest extends RequestMessage {\n\n  /**\n   * @see \"Section 2.5.1\"\n   */\n  public static ANONYMOUS_USER: string = \"anonymous00000000000000000000000\";\n\n  private timestamp: Date;\n  private userId: string;\n  private password: string;\n  private userKey: string;\n  private generateUserKey: boolean;\n  private language: string;\n  private financialInstitution: FinancialInstitutionInfo;\n  private sessionId: string;\n  private applicationId: string;\n  private applicationVersion: string;\n  private clientUID: string;\n  private additionalCredentials1: string;\n  private additionalCredentials2: string;\n  private authToken: string;\n  private accessKey: string;\n\n  constructor() {\n    super();\n    this.language = \"ENG\"; //Locale.US.getISO3Language().toUpperCase();\n    this.applicationId = \"Money\"; //many institutions just won't work with an unrecognized app id...\n    this.applicationVersion = \"1600\"; //many institutions just won't work with an unrecognized app id...\n  }\n\n  /**\n   * The date and time of the request.\n   *\n   * @return The date and time of the request.\n   */\n  public getTimestamp(): Date {\n    return this.timestamp;\n  }\n\n  /**\n   * The date and time of the request.\n   *\n   * @param timestamp The date and time of the request.\n   */\n  public setTimestamp(timestamp: Date): void {\n    this.timestamp = timestamp;\n  }\n\n  /**\n   * The user id.\n   *\n   * @return The user id.\n   */\n  public getUserId(): string {\n    return this.userId;\n  }\n\n  /**\n   * The user id.\n   *\n   * @param userId The user id.\n   */\n  public setUserId(userId: string): void {\n    this.userId = userId;\n  }\n\n  /**\n   * The password.\n   *\n   * @return The password.\n   */\n  public getPassword(): string {\n    return this.password;\n  }\n\n  /**\n   * The password.\n   *\n   * @param password The password.\n   */\n  public setPassword(password: string): void {\n    this.password = password;\n  }\n\n  /**\n   * The user key provided by the server so as not to require further username/password authentication.\n   *\n   * @return The user key provided by the server so as not to require further username/password authentication.\n   */\n  public getUserKey(): string {\n    return this.userKey;\n  }\n\n  /**\n   * The user key provided by the server so as not to require further username/password authentication.\n   *\n   * @param userKey The user key provided by the server so as not to require further username/password authentication.\n   */\n  public setUserKey(userKey: string): void {\n    this.userKey = userKey;\n  }\n\n  /**\n   * Whether to request the server to generate a user key.\n   *\n   * @return Whether to request the server to generate a user key.\n   */\n  public getGenerateUserKey(): boolean {\n    return this.generateUserKey;\n  }\n\n  /**\n   * Whether to request the server to generate a user key.\n   *\n   * @param generateUserKey Whether to request the server to generate a user key.\n   */\n  public setGenerateUserKey(generateUserKey: boolean): void {\n    this.generateUserKey = generateUserKey;\n  }\n\n  /**\n   * The three-letter langauge code.\n   *\n   * @return The three-letter langauge code.\n   * @see java.util.Locale#getISO3Language()\n   */\n  public getLanguage(): string {\n    return this.language;\n  }\n\n  /**\n   * The three-letter langauge code.\n   *\n   * @param language The three-letter langauge code.\n   */\n  public setLanguage(language: string): void {\n    this.language = language;\n  }\n\n  /**\n   * The financial institution.\n   *\n   * @return The financial institution.\n   */\n  public getFinancialInstitution(): FinancialInstitutionInfo {\n    return this.financialInstitution;\n  }\n\n  /**\n   * The financial institution.\n   *\n   * @param financialInstitution The financial institution.\n   */\n  public setFinancialInstitution(financialInstitution: FinancialInstitutionInfo): void {\n    this.financialInstitution = financialInstitution;\n  }\n\n  /**\n   * The server-supplied session id.\n   *\n   * @return The server-supplied session id.\n   */\n  public getSessionId(): string {\n    return this.sessionId;\n  }\n\n  /**\n   * The server-supplied session id.\n   *\n   * @param sessionId The server-supplied session id.\n   */\n  public setSessionId(sessionId: string): void {\n    this.sessionId = sessionId;\n  }\n\n  /**\n   * The application id.\n   *\n   * @return The application id.\n   */\n  public getApplicationId(): string {\n    return this.applicationId;\n  }\n\n  /**\n   * The application id.\n   *\n   * @param applicationId The application id.\n   */\n  public setApplicationId(applicationId: string): void {\n    this.applicationId = applicationId;\n  }\n\n  /**\n   * The application version.\n   *\n   * @return The application version.\n   */\n  public getApplicationVersion(): string {\n    return this.applicationVersion;\n  }\n\n  /**\n   * The application version.\n   *\n   * @param applicationVersion The application version.\n   */\n  public setApplicationVersion(applicationVersion: string): void {\n    this.applicationVersion = applicationVersion;\n  }\n\n  /**\n   * The client-supplied UID.\n   *\n   * @return The client-supplied UID.\n   */\n  public getClientUID(): string {\n    return this.clientUID;\n  }\n\n  /**\n   * The client-supplied UID.\n   *\n   * @param clientUID The client-supplied UID.\n   */\n  public setClientUID(clientUID: string): void {\n    this.clientUID = clientUID;\n  }\n\n  /**\n   * Any additional credentials.\n   *\n   * @return Any additional credentials.\n   */\n  public getAdditionalCredentials1(): string {\n    return this.additionalCredentials1;\n  }\n\n  /**\n   * Any additional credentials.\n   *\n   * @param additionalCredentials1 Any additional credentials.\n   */\n  public setAdditionalCredentials1(additionalCredentials1: string): void {\n    this.additionalCredentials1 = additionalCredentials1;\n  }\n\n  /**\n   * Any additional credentials.\n   *\n   * @return Any additional credentials.\n   */\n  public getAdditionalCredentials2(): string {\n    return this.additionalCredentials2;\n  }\n\n  /**\n   * Any additional credentials.\n   *\n   * @param additionalCredentials2 Any additional credentials.\n   */\n  public setAdditionalCredentials2(additionalCredentials2: string): void {\n    this.additionalCredentials2 = additionalCredentials2;\n  }\n\n  /**\n   * The authentication token.\n   *\n   * @return The authentication token.\n   */\n  public getAuthToken(): string {\n    return this.authToken;\n  }\n\n  /**\n   * The authentication token.\n   *\n   * @param authToken The authentication token.\n   */\n  public setAuthToken(authToken: string): void {\n    this.authToken = authToken;\n  }\n\n  /**\n   * The access key.\n   *\n   * @return The access key.\n   */\n  public getAccessKey(): string {\n    return this.accessKey;\n  }\n\n  /**\n   * The access key.\n   *\n   * @param accessKey The access key.\n   */\n  public setAccessKey(accessKey: string): void {\n    this.accessKey = accessKey;\n  }\n\n  //todo: MFA challenge stuff.\n}\n\nAggregate_add( SignonRequest, \"SONRQ\" );\nElement_add(SignonRequest, { name: \"DTCLIENT\", required: true, order: 0, type: Date, read: SignonRequest.prototype.getTimestamp, write: SignonRequest.prototype.setTimestamp });\nElement_add(SignonRequest, { name: \"USERID\", order: 10, type: String, read: SignonRequest.prototype.getUserId, write: SignonRequest.prototype.setUserId });\nElement_add(SignonRequest, { name: \"USERPASS\", order: 20, type: String, read: SignonRequest.prototype.getPassword, write: SignonRequest.prototype.setPassword });\nElement_add(SignonRequest, { name: \"USERKEY\", order: 30, type: String, read: SignonRequest.prototype.getUserKey, write: SignonRequest.prototype.setUserKey });\nElement_add(SignonRequest, { name: \"GENUSERKEY\", order: 40, type: Boolean, read: SignonRequest.prototype.getGenerateUserKey, write: SignonRequest.prototype.setGenerateUserKey });\nElement_add(SignonRequest, { name: \"LANGUAGE\", required: true, order: 50, type: String, read: SignonRequest.prototype.getLanguage, write: SignonRequest.prototype.setLanguage });\nChildAggregate_add(SignonRequest, { order: 60, type: FinancialInstitutionInfo, read: SignonRequest.prototype.getFinancialInstitution, write: SignonRequest.prototype.setFinancialInstitution });\nElement_add(SignonRequest, { name: \"SESSCOOKIE\", order: 70, type: String, read: SignonRequest.prototype.getSessionId, write: SignonRequest.prototype.setSessionId });\nElement_add(SignonRequest, { name: \"APPID\", required: true, order: 80, type: String, read: SignonRequest.prototype.getApplicationId, write: SignonRequest.prototype.setApplicationId });\nElement_add(SignonRequest, { name: \"APPVER\", required: true, order: 90, type: String, read: SignonRequest.prototype.getApplicationVersion, write: SignonRequest.prototype.setApplicationVersion });\nElement_add(SignonRequest, { name: \"CLIENTUID\", order: 100, type: String, read: SignonRequest.prototype.getClientUID, write: SignonRequest.prototype.setClientUID });\nElement_add(SignonRequest, { name: \"USERCRED1\", order: 110, type: String, read: SignonRequest.prototype.getAdditionalCredentials1, write: SignonRequest.prototype.setAdditionalCredentials1 });\nElement_add(SignonRequest, { name: \"USERCRED2\", order: 120, type: String, read: SignonRequest.prototype.getAdditionalCredentials2, write: SignonRequest.prototype.setAdditionalCredentials2 });\nElement_add(SignonRequest, { name: \"AUTHTOKEN\", order: 130, type: String, read: SignonRequest.prototype.getAuthToken, write: SignonRequest.prototype.setAuthToken });\nElement_add(SignonRequest, { name: \"ACCESSKEY\", order: 140, type: String, read: SignonRequest.prototype.getAccessKey, write: SignonRequest.prototype.setAccessKey });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @author Ryan Heaton\n * @see \"Section 7.1.5, OFX Spec\"\n */\nexport enum ClientRoutingCapability {\n\n  NONE,\n\n  SERVICE,\n\n  MESSAGE_SET\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { RequestMessage } from \"../RequestMessage\";\nimport { ClientRoutingCapability } from \"./ClientRoutingCapability\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../meta/Element_add\";\n\n\n/**\n * @author Ryan Heaton\n * @see \"Section 7.1.5, OFX Spec\"\n */\nexport class ProfileRequest extends RequestMessage {\n\n  private routingCapability: ClientRoutingCapability;\n  private profileLastUpdated: Date;\n\n  constructor() {\n    super();\n    this.routingCapability = ClientRoutingCapability.MESSAGE_SET;\n  }\n\n  /**\n   * The client routing capability.\n   *\n   * @return The client routing capability.\n   */\n  public getRoutingCapability(): ClientRoutingCapability {\n    return this.routingCapability;\n  }\n\n  /**\n   * The client routing capability.\n   *\n   * @param routingCapability The client routing capability.\n   */\n  public setRoutingCapability(routingCapability: ClientRoutingCapability): void {\n    this.routingCapability = routingCapability;\n  }\n\n  /**\n   * The date the profile was last updated.\n   *\n   * @return The date the profile was last updated.\n   */\n  public getProfileLastUpdated(): Date {\n    return this.profileLastUpdated;\n  }\n\n  /**\n   * The date the profile was last updated.\n   *\n   * @param profileLastUpdated The date the profile was last updated.\n   */\n  public setProfileLastUpdated(profileLastUpdated: Date): void {\n    this.profileLastUpdated = profileLastUpdated;\n  }\n}\n\nAggregate_add( ProfileRequest, \"PROFRQ\" );\nElement_add(ProfileRequest, { name: \"CLIENTROUTING\", order: 0, type: ClientRoutingCapability, read: ProfileRequest.prototype.getRoutingCapability, write: ProfileRequest.prototype.setRoutingCapability });\nElement_add(ProfileRequest, { name: \"DTPROFUP\", order: 10, type: Date, read: ProfileRequest.prototype.getProfileLastUpdated, write: ProfileRequest.prototype.setProfileLastUpdated });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TransactionWrappedRequestMessage } from \"../TransactionWrappedRequestMessage\";\nimport { ProfileRequest } from \"./ProfileRequest\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class ProfileRequestTransaction extends TransactionWrappedRequestMessage<ProfileRequest> {\n\n  private message: ProfileRequest;\n\n  /**\n   * The wrapped message.\n   *\n   * @return The wrapped message.\n   */\n  public getMessage(): ProfileRequest {\n    return this.message;\n  }\n\n  /**\n   * The wrapped message.\n   *\n   * @param message The wrapped message.\n   */\n  public setMessage(message: ProfileRequest): void {\n    this.message = message;\n  }\n\n  // Inherited.\n  public setWrappedMessage(message: ProfileRequest): void {\n    this.setMessage(message);\n  }\n}\n\nAggregate_add( ProfileRequestTransaction, \"PROFTRNRQ\" );\nChildAggregate_add(ProfileRequestTransaction, { required: true, order: 30, type: ProfileRequest, read: ProfileRequestTransaction.prototype.getMessage, write: ProfileRequestTransaction.prototype.setMessage });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { RequestMessageSet } from \"../RequestMessageSet\";\nimport { ProfileRequestTransaction } from \"./ProfileRequestTransaction\";\nimport { MessageSetType } from \"../MessageSetType\";\nimport { RequestMessage } from \"../RequestMessage\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\n/**\n * @author Ryan Heaton\n * @see \"Section 7 OFX Spec\"\n */\nexport class ProfileRequestMessageSet extends RequestMessageSet {\n\n  private profileRequest: ProfileRequestTransaction;\n\n  public getType(): MessageSetType {\n    return MessageSetType.profile;\n  }\n\n  /**\n   * The profile request.\n   *\n   * @return The profile request.\n   */\n  public getProfileRequest(): ProfileRequestTransaction {\n    return this.profileRequest;\n  }\n\n  /**\n   * The profile request.\n   *\n   * @param profileRequest The profile request.\n   */\n  public setProfileRequest(profileRequest: ProfileRequestTransaction): void {\n    this.profileRequest = profileRequest;\n  }\n\n\n  // Inherited.\n  public getRequestMessages(): Array<RequestMessage> {\n    var requestMessages: Array<RequestMessage> = new Array<RequestMessage>();\n    if (this.getProfileRequest() != null) {\n      requestMessages.push(this.getProfileRequest());\n    }\n    return requestMessages;\n  }\n}\n\nAggregate_add( ProfileRequestMessageSet, \"PROFMSGSRQV1\" );\nChildAggregate_add(ProfileRequestMessageSet, { required: true, order: 0, type: ProfileRequestTransaction, read: ProfileRequestMessageSet.prototype.getProfileRequest, write: ProfileRequestMessageSet.prototype.setProfileRequest });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { RequestMessage } from \"../RequestMessage\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../meta/Element_add\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class AccountInfoRequest extends RequestMessage {\n\n  private lastUpdated: Date;\n\n  constructor() {\n    super();\n    this.lastUpdated = new Date(0); //default is never updated.\n  }\n\n  /**\n   * When the account info was last updated.\n   *\n   * @return When the account info was last updated.\n   */\n  public getLastUpdated(): Date {\n    return this.lastUpdated;\n  }\n\n  /**\n   * When the account info was last updated.\n   *\n   * @param lastUpdated When the account info was last updated.\n   */\n  public setLastUpdated(lastUpdated: Date): void {\n    this.lastUpdated = lastUpdated;\n  }\n}\n\nAggregate_add(AccountInfoRequest, \"ACCTINFORQ\");\nElement_add(AccountInfoRequest, { name: \"DTACCTUP\", required: true, order: 0, type: Date, read: AccountInfoRequest.prototype.getLastUpdated, write: AccountInfoRequest.prototype.setLastUpdated });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TransactionWrappedRequestMessage } from \"../TransactionWrappedRequestMessage\";\nimport { AccountInfoRequest } from \"./AccountInfoRequest\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class AccountInfoRequestTransaction extends TransactionWrappedRequestMessage<AccountInfoRequest> {\n\n  private message: AccountInfoRequest;\n\n  /**\n   * The wrapped message.\n   *\n   * @return The wrapped message.\n   */\n  public getMessage(): AccountInfoRequest {\n    return this.message;\n  }\n\n  /**\n   * The wrapped message.\n   *\n   * @param message The wrapped message.\n   */\n  public setMessage(message: AccountInfoRequest): void {\n    this.message = message;\n  }\n\n  // Inherited.\n  public setWrappedMessage(message: AccountInfoRequest): void {\n    this.setMessage(message);\n  }\n}\n\nAggregate_add( AccountInfoRequestTransaction, \"ACCTINFOTRNRQ\" );\nChildAggregate_add(AccountInfoRequestTransaction, { required: true, order: 30, type: AccountInfoRequest, read: AccountInfoRequestTransaction.prototype.getMessage, write: AccountInfoRequestTransaction.prototype.setMessage });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { RequestMessageSet } from \"../RequestMessageSet\";\nimport { AccountInfoRequestTransaction } from \"./AccountInfoRequestTransaction\";\nimport { MessageSetType } from \"../MessageSetType\";\nimport { RequestMessage } from \"../RequestMessage\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class SignupRequestMessageSet extends RequestMessageSet {\n\n  private accountInfoRequest: AccountInfoRequestTransaction;\n\n  public getType(): MessageSetType {\n    return MessageSetType.signup;\n  }\n\n  /**\n   * The account info request.\n   *\n   * @return The account info request.\n   */\n  public getAccountInfoRequest(): AccountInfoRequestTransaction {\n    return this.accountInfoRequest;\n  }\n\n  /**\n   * The account info request.\n   *\n   * @param accountInfoRequest The account info request.\n   */\n  public setAccountInfoRequest(accountInfoRequest: AccountInfoRequestTransaction): void {\n    this.accountInfoRequest = accountInfoRequest;\n  }\n\n  /**\n   * The request messages.\n   *\n   * @return The request messages.\n   */\n  public getRequestMessages(): Array<RequestMessage> {\n    var messages: Array<RequestMessage> = new Array<RequestMessage>();\n\n    if (this.getAccountInfoRequest() != null) {\n      messages.push(this.getAccountInfoRequest());\n    }\n\n    return messages;\n  }\n}\n\nAggregate_add(SignupRequestMessageSet, \"SIGNUPMSGSRQV1\");\nChildAggregate_add(SignupRequestMessageSet, { order: 0, type: AccountInfoRequestTransaction, read: SignupRequestMessageSet.prototype.getAccountInfoRequest, write: SignupRequestMessageSet.prototype.setAccountInfoRequest });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../../meta/Element_add\";\n\n\n/**\n * Aggreate to indicate whether position information is requested as part of the statement\n * @see \"Section 13.9.1.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class IncludePosition {\n\n  private sentDownDate: Date;\n  private includePositions: boolean;\n\n  constructor() {\n    this.includePositions = true;\n  }\n\n  /**\n   * Gets the date that the position should be sent down for. This is an optional field according\n   * to the OFX spec.\n   *\n   * @return the date for the position\n   */\n  public getDateSentDown(): Date {\n    return this.sentDownDate;\n  }\n\n  /**\n   * Sets the date that the position should be sent down for. This is an optional field according\n   * to the OFX spec.\n   *\n   * @param sentDownDate the date for the position\n   */\n  public setDateSentDown(sentDownDate: Date): void {\n    this.sentDownDate = sentDownDate;\n  }\n\n  /**\n   * Gets whether to include positions in the statement download.\n   *\n   * @return whether to include positions in the statement download\n   */\n  public getIncludePositions(): boolean {\n    return this.includePositions;\n  }\n\n  /**\n   * Sets whether to include positions in the statement download.\n   *\n   * @param includePositions whether to include positions in the statement download\n   */\n  public setIncludePositions(includePositions: boolean): void {\n    this.includePositions = includePositions;\n  }\n}\n\nAggregate_add( IncludePosition, \"INCPOS\" );\nElement_add(IncludePosition, { name: \"DTASOF\", order: 0, type: Date, read: IncludePosition.prototype.getDateSentDown, write: IncludePosition.prototype.setDateSentDown });\nElement_add(IncludePosition, { name: \"INCLUDE\", order: 10, type: Boolean, read: IncludePosition.prototype.getIncludePositions, write: IncludePosition.prototype.setIncludePositions });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { StatementRequest } from \"../../common/StatementRequest\";\nimport { InvestmentAccountDetails } from \"../accounts/InvestmentAccountDetails\";\nimport { IncludePosition } from \"./IncludePosition\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\nimport { Element_add } from \"../../../../meta/Element_add\";\n\n\n/**\n * Aggregate for the investment statement download request.\n * @see \"Section 13.9.1.1, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class InvestmentStatementRequest extends StatementRequest {\n\n  private account: InvestmentAccountDetails;\n  private includeOpenOrders: boolean;\n  private includePosition: IncludePosition;\n  private includeBalance: boolean;\n\n  constructor() {\n    super();\n    this.includeOpenOrders = false;\n    this.includeBalance = true;\n  }\n\n  /**\n   * The account details.\n   *\n   * @return The account details.\n   */\n  public getAccount(): InvestmentAccountDetails {\n    return this.account;\n  }\n\n  /**\n   * The account details.\n   *\n   * @param account The account details.\n   */\n  public setAccount(account: InvestmentAccountDetails): void {\n    this.account = account;\n  }\n\n  /**\n   * Gets whether to include open orders. This is an optional field according to the OFX spec.\n   * <br>\n   * Note, open orders are not yet implemented.\n   *\n   * @return whether to include open orders\n   */\n  public getIncludeOpenOrders(): boolean {\n    return this.includeOpenOrders;\n  }\n\n  /**\n   * Sets whether to include open orders. This is an optional field according to the OFX spec.\n   * <br>\n   * Note, open orders are not yet implemented.\n   *\n   * @param includeOpenOrders whether to include open orders\n   */\n  public setIncludeOpenOrders(includeOpenOrders: boolean): void {\n    this.includeOpenOrders = includeOpenOrders;\n  }\n\n  /**\n   * Gets the include position child aggregate. This is a required field according to the OFX spec.\n   *\n   * @return the include position child aggregate\n   */\n  public getIncludePosition(): IncludePosition {\n    return this.includePosition;\n  }\n\n  /**\n   * Gets the include position child aggregate. This is a required field according to the OFX spec.\n   *\n   * @param includePosition the include position child aggregate\n   */\n  public setIncludePosition(includePosition: IncludePosition): void {\n    this.includePosition = includePosition;\n  }\n\n  /**\n   * Gets whether to include balance info in the response. This is a required field according to\n   * the OFX spec.\n   *\n   * @return whether to include balance info in the response\n   */\n  public getIncludeBalance(): boolean {\n    return this.includeBalance;\n  }\n\n  /**\n   * Sets whether to include balance info in the response. This is a required field according to\n   * the OFX spec.\n   *\n   * @param includeBalance whether to include balance info in the response\n   */\n  public setIncludeBalance(includeBalance: boolean): void {\n    this.includeBalance = includeBalance;\n  }\n}\n\nAggregate_add(InvestmentStatementRequest, \"INVSTMTRQ\");\nChildAggregate_add(InvestmentStatementRequest, { name: \"INVACCTFROM\", required: true, order: 0, type: InvestmentAccountDetails, read: InvestmentStatementRequest.prototype.getAccount, write: InvestmentStatementRequest.prototype.setAccount });\nElement_add(InvestmentStatementRequest, { name: \"INCOO\", order: 20, type: Boolean, read: InvestmentStatementRequest.prototype.getIncludeOpenOrders, write: InvestmentStatementRequest.prototype.setIncludeOpenOrders });\nChildAggregate_add(InvestmentStatementRequest, { name: \"INCPOS\", required: true, order: 30, type: IncludePosition, read: InvestmentStatementRequest.prototype.getIncludePosition, write: InvestmentStatementRequest.prototype.setIncludePosition });\nElement_add(InvestmentStatementRequest, { name: \"INCBAL\", required: true, order: 40, type: Boolean, read: InvestmentStatementRequest.prototype.getIncludeBalance, write: InvestmentStatementRequest.prototype.setIncludeBalance });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { InvestmentStatementRequest } from \"./InvestmentStatementRequest\";\nimport { TransactionWrappedRequestMessage } from \"../../TransactionWrappedRequestMessage\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\n\n\n/**\n * Investment statement transaction request.\n * @see \"Section 13.9.1.1, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class InvestmentStatementRequestTransaction\n    extends TransactionWrappedRequestMessage<InvestmentStatementRequest> {\n\n  private message: InvestmentStatementRequest;\n\n  /**\n   * Gets the the statement request message.\n   *\n   * @return the statement request message.\n   */\n  public getMessage(): InvestmentStatementRequest {\n    return this.message;\n  }\n\n  /**\n   * Sets the the statement request message.\n   *\n   * @param message the statement request message.\n   */\n  public setMessage(message: InvestmentStatementRequest): void {\n    this.message = message;\n  }\n\n  // Inherited.\n  public setWrappedMessage(message: InvestmentStatementRequest): void {\n    this.setMessage(message);\n  }\n}\n\nAggregate_add(InvestmentStatementRequestTransaction, \"INVSTMTTRNRQ\");\nChildAggregate_add(InvestmentStatementRequestTransaction, { required: true, order: 30, type: InvestmentStatementRequest, read: InvestmentStatementRequestTransaction.prototype.getMessage, write: InvestmentStatementRequestTransaction.prototype.setMessage });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../meta/Element_add\";\n\n\n/**\n * Identifier for a security.\n * @see \"Section 13.8.1, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class SecurityId {\n\n  private uniqueId: string;\n  private uniqueIdType: string;\n\n  /**\n   * Gets the unique id for the security. This is a required field according to the OFX spec.\n   *\n   * @return the unique id\n   */\n  public getUniqueId(): string {\n    return this.uniqueId;\n  }\n\n  /**\n   * Sets the unique id for the security. This is a required field according to the OFX spec.\n   *\n   * @param uniqueId the unique id\n   */\n  public setUniqueId(uniqueId: string): void {\n    this.uniqueId = uniqueId;\n  }\n\n  /**\n   * Gets the type of unique id.\n   *\n   * @return the type of unique id\n   */\n  public getUniqueIdType(): string {\n    return this.uniqueIdType;\n  }\n\n  /**\n   * Sets the type of unique id.\n   *\n   * @param uniqueIdType the type of unique id\n   */\n  public setUniqueIdType(uniqueIdType: string): void {\n    this.uniqueIdType = uniqueIdType;\n  }\n}\n\nAggregate_add( SecurityId, \"SECID\" );\nElement_add(SecurityId, { name: \"UNIQUEID\", required: true, order: 10, type: String, read: SecurityId.prototype.getUniqueId, write: SecurityId.prototype.setUniqueId });\nElement_add(SecurityId, { name: \"UNIQUEIDTYPE\", required: true, order: 20, type: String, read: SecurityId.prototype.getUniqueIdType, write: SecurityId.prototype.setUniqueIdType });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SecurityId } from \"./SecurityId\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../meta/Element_add\";\n\n\n/**\n * Security request aggregate.\n * @see \"Section 13.8.2.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class SecurityRequest {\n\n  private securityId: SecurityId;\n  private tickerSymbol: string;\n  private fiId: string;\n\n  public getSecurityId(): SecurityId {\n    return this.securityId;\n  }\n\n  public setSecurityId(securityId: SecurityId): void {\n    this.securityId = securityId;\n    this.tickerSymbol = null;\n    this.fiId = null;\n  }\n\n  public getTickerSymbol(): string {\n    return this.tickerSymbol;\n  }\n\n  public setTickerSymbol(tickerSymbol: string): void {\n    this.tickerSymbol = tickerSymbol;\n    this.securityId = null;\n    this.fiId = null;\n  }\n\n  public getFiId(): string {\n    return this.fiId;\n  }\n\n  public setFiId(fiId: string): void {\n    this.fiId = fiId;\n    this.securityId = null;\n    this.tickerSymbol = null;\n  }\n}\n\nAggregate_add(SecurityRequest, \"SECRQ\");\nElement_add(SecurityRequest, { name: \"SECID\", order: 10, type: SecurityId, read: SecurityRequest.prototype.getSecurityId, write: SecurityRequest.prototype.setSecurityId });\nElement_add(SecurityRequest, { name: \"TICKER\", order: 20, type: String, read: SecurityRequest.prototype.getTickerSymbol, write: SecurityRequest.prototype.setTickerSymbol });\nElement_add(SecurityRequest, { name: \"FIID\", order: 30, type: String, read: SecurityRequest.prototype.getFiId, write: SecurityRequest.prototype.setFiId });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { RequestMessage } from \"../RequestMessage\";\nimport { SecurityRequest } from \"./SecurityRequest\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\n/**\n * Request aggregate for the security list.\n * @see \"Section 13.8.2.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class SecurityListRequest extends RequestMessage {\n\n  private securityRequests: Array<SecurityRequest>;\n\n  public getSecurityRequests(): Array<SecurityRequest> {\n    return this.securityRequests;\n  }\n\n  public setSecurityRequests(securityRequests: Array<SecurityRequest>): void {\n    this.securityRequests = securityRequests;\n  }\n}\n\nAggregate_add(SecurityListRequest, \"SECLISTRQ\");\nChildAggregate_add(SecurityListRequest, { required: true, order: 10, type: Array, collectionEntryType: SecurityRequest, read: SecurityListRequest.prototype.getSecurityRequests, write: SecurityListRequest.prototype.setSecurityRequests });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TransactionWrappedRequestMessage } from \"../TransactionWrappedRequestMessage\";\nimport { SecurityListRequest } from \"./SecurityListRequest\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\n/**\n * Security list transaction request.\n * @see \"Section 13.8.2.1, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class SecurityListRequestTransaction\n    extends TransactionWrappedRequestMessage<SecurityListRequest> {\n\n  private message: SecurityListRequest;\n\n  /**\n   * The message.\n   *\n   * @return The message.\n   */\n  public getMessage(): SecurityListRequest {\n    return this.message;\n  }\n\n  /**\n   * The message.\n   *\n   * @param message The message.\n   *\n   */\n  public setMessage(message: SecurityListRequest) {\n    this.message = message;\n  }\n\n  // Inherited.\n  public setWrappedMessage(message: SecurityListRequest): void {\n    this.setMessage(message);\n  }\n}\n\nAggregate_add( SecurityListRequestTransaction, \"SECLISTTRNRQ\" );\nChildAggregate_add(SecurityListRequestTransaction, { required: true, order: 30, type: SecurityListRequest, read: SecurityListRequestTransaction.prototype.getMessage, write: SecurityListRequestTransaction.prototype.setMessage });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { RequestMessageSet } from \"../../RequestMessageSet\";\nimport { InvestmentStatementRequestTransaction } from \"./InvestmentStatementRequestTransaction\";\nimport { MessageSetType } from \"../../MessageSetType\";\nimport { RequestMessage } from \"../../RequestMessage\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\n\n\n/**\n * Investment statement request message set.\n * @see \"Section 13.7.1.2.1, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class InvestmentStatementRequestMessageSet extends RequestMessageSet {\n\n  private statementRequest: InvestmentStatementRequestTransaction;\n\n  public getType(): MessageSetType {\n    return MessageSetType.investment;\n  }\n\n  /**\n   * Gets the statement request.\n   *\n   * @return the request\n   */\n  public getStatementRequest(): InvestmentStatementRequestTransaction {\n    return this.statementRequest;\n  }\n\n  /**\n   * Sets the statement request.\n   *\n   * @param statementRequest the request\n   */\n  public setStatementRequest(statementRequest: InvestmentStatementRequestTransaction): void {\n    this.statementRequest = statementRequest;\n  }\n\n  // Inherited.\n  public getRequestMessages(): Array<RequestMessage> {\n    var requestMessages: Array<RequestMessage> = new Array<RequestMessage>();\n    if (this.getStatementRequest() != null) {\n      requestMessages.push(this.getStatementRequest());\n    }\n    return requestMessages;\n  }\n}\n\nAggregate_add( InvestmentStatementRequestMessageSet, \"INVSTMTMSGSRQV1\" );\nChildAggregate_add(InvestmentStatementRequestMessageSet, { order: 0, type: InvestmentStatementRequestTransaction, read: InvestmentStatementRequestMessageSet.prototype.getStatementRequest, write: InvestmentStatementRequestMessageSet.prototype.setStatementRequest });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { RequestMessageSet } from \"../RequestMessageSet\";\nimport { SecurityListRequestTransaction } from \"./SecurityListRequestTransaction\";\nimport { MessageSetType } from \"../MessageSetType\";\nimport { RequestMessage } from \"../RequestMessage\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\n/**\n * Security list request message set.\n * @see \"Section 13.7.2.2.1, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class SecurityListRequestMessageSet extends RequestMessageSet {\n\n  private securityListRequest: SecurityListRequestTransaction;\n\n  public getType(): MessageSetType {\n    return MessageSetType.investment;\n  }\n\n  /**\n   * Gets the security list request.\n   *\n   * @return the request\n   */\n  public getSecurityListRequest(): SecurityListRequestTransaction {\n    return this.securityListRequest;\n  }\n\n  /**\n   * Sets the security list request.\n   *\n   * @param statementRequest the request\n   */\n  public setSecurityListRequest(statementRequest: SecurityListRequestTransaction): void {\n    this.securityListRequest = statementRequest;\n  }\n\n  // Inherited.\n  public getRequestMessages(): Array<RequestMessage> {\n    var requestMessages: Array<RequestMessage> = new Array<RequestMessage>();\n    if (this.getSecurityListRequest() != null) {\n      requestMessages.push(this.getSecurityListRequest());\n    }\n    return requestMessages;\n  }\n}\n\nAggregate_add( SecurityListRequestMessageSet, \"SECLISTMSGSRQV1\" );\nChildAggregate_add(SecurityListRequestMessageSet, { order: 0, type: SecurityListRequestTransaction, read: SecurityListRequestMessageSet.prototype.getSecurityListRequest, write: SecurityListRequestMessageSet.prototype.setSecurityListRequest });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { InvestmentAccount } from \"../InvestmentAccount\";\nimport { InvestmentAccountDetails } from \"../../domain/data/investment/accounts/InvestmentAccountDetails\";\nimport { FinancialInstitutionImpl } from \"./FinancialInstitutionImpl\";\nimport { InvestmentStatementResponse } from \"../../domain/data/investment/statements/InvestmentStatementResponse\";\nimport { StatementRange } from \"../../domain/data/common/StatementRange\";\nimport { RequestEnvelope } from \"../../domain/data/RequestEnvelope\";\nimport { InvestmentStatementRequestTransaction } from \"../../domain/data/investment/statements/InvestmentStatementRequestTransaction\";\nimport { ResponseEnvelope } from \"../../domain/data/ResponseEnvelope\";\nimport { SecurityRequest } from \"../../domain/data/seclist/SecurityRequest\";\nimport { SecurityList } from \"../../domain/data/seclist/SecurityList\";\nimport { SecurityListRequestTransaction } from \"../../domain/data/seclist/SecurityListRequestTransaction\";\nimport { InvestmentStatementResponseMessageSet } from \"../../domain/data/investment/statements/InvestmentStatementResponseMessageSet\";\nimport { MessageSetType } from \"../../domain/data/MessageSetType\";\nimport { OFXException } from \"../../OFXException\";\nimport { InvestmentStatementResponseTransaction } from \"../../domain/data/investment/statements/InvestmentStatementResponseTransaction\";\nimport { SecurityListResponseMessageSet } from \"../../domain/data/seclist/SecurityListResponseMessageSet\";\nimport { RequestMessageSet } from \"../../domain/data/RequestMessageSet\";\nimport { InvestmentStatementRequestMessageSet } from \"../../domain/data/investment/statements/InvestmentStatementRequestMessageSet\";\nimport { InvestmentStatementRequest } from \"../../domain/data/investment/statements/InvestmentStatementRequest\";\nimport { IncludePosition } from \"../../domain/data/investment/statements/IncludePosition\";\nimport { SecurityListRequestMessageSet } from \"../../domain/data/seclist/SecurityListRequestMessageSet\";\nimport { SecurityListRequest } from \"../../domain/data/seclist/SecurityListRequest\";\n\n\n/**\n * @author Jon Perlow\n */\nexport class InvestmentAccountImpl implements InvestmentAccount {\n  private details: InvestmentAccountDetails;\n  private username: string;\n  private password: string;\n  private institution: FinancialInstitutionImpl;\n\n  constructor(details: InvestmentAccountDetails, username: string, password: string,\n                               institution: FinancialInstitutionImpl) {\n    this.details = details;\n    this.username = username;\n    this.password = password;\n    this.institution = institution;\n  }\n\n  public readStatement(start: Date, end: Date) /*throws OFXException*/: Promise<InvestmentStatementResponse> {\n    var range: StatementRange = new StatementRange();\n    range.setIncludeTransactions(true);\n    range.setStart(start);\n    range.setEnd(end);\n\n    var request: RequestEnvelope = this.institution.createAuthenticatedRequest(this.username, this.password);\n    var requestTransaction: InvestmentStatementRequestTransaction = new InvestmentStatementRequestTransaction();\n    requestTransaction.setWrappedMessage(this.createStatementRequest(this.getDetails(), range));\n    request.getMessageSets().insert(this.createStatementRequestMessageSet(requestTransaction));\n\n    return this.institution.sendRequest(request)\n    .then((response: ResponseEnvelope): InvestmentStatementResponse => {\n      this.institution.doGeneralValidationChecks(request, response);\n      return this.unwrapStatementResponse(response);\n    });\n  }\n\n  public readSecurityList(securities: Array<SecurityRequest>) /*throws OFXException*/: Promise<SecurityList> {\n    var request: RequestEnvelope = this.institution.createAuthenticatedRequest(this.username, this.password);\n    var requestTransaction: SecurityListRequestTransaction = new SecurityListRequestTransaction();\n    requestTransaction.setWrappedMessage(this.createSecurityListRequest(securities));\n    request.getMessageSets().insert(this.createSecurityListRequestMessageSet(requestTransaction));\n\n    return this.institution.sendRequest(request)\n    .then((response: ResponseEnvelope): SecurityList => {\n      this.institution.doGeneralValidationChecks(request, response);\n\n      return this.unwrapSecurityList(response);\n    });\n  }\n\n  /**\n   * The details of this account.\n   *\n   * @return The details of this account.\n   */\n  public getDetails(): InvestmentAccountDetails {\n    return this.details;\n  }\n\n  private unwrapStatementResponse(response: ResponseEnvelope) /*throws OFXException*/: InvestmentStatementResponse {\n    var investmentStatementSet: InvestmentStatementResponseMessageSet =\n        <InvestmentStatementResponseMessageSet> response.getMessageSet(MessageSetType.investment);\n    if (investmentStatementSet == null) {\n      throw new OFXException(\"No investment response message set.\");\n    }\n\n    var statementTransactionResponse: InvestmentStatementResponseTransaction =\n        investmentStatementSet.getStatementResponse();\n    if (statementTransactionResponse == null) {\n      throw new OFXException(\"No investment statement response transaction.\");\n    }\n\n    var statement: InvestmentStatementResponse = statementTransactionResponse.getMessage();\n    if (statement == null) {\n      throw new OFXException(\"No investment statement in the transaction.\");\n    }\n\n    // See if there's a security list -- often sent back with an account statement by servers.\n    var securityListMessageSet: SecurityListResponseMessageSet =\n        <SecurityListResponseMessageSet> response.getMessageSet(\n            MessageSetType.investment_security);\n    if (securityListMessageSet != null) {\n      statement.setSecurityList(securityListMessageSet.getSecurityList());\n    }\n\n    return statement;\n  }\n\n  private createStatementRequestMessageSet(transaction: InvestmentStatementRequestTransaction): RequestMessageSet {\n    var investmentStatementRequest: InvestmentStatementRequestMessageSet =\n        new InvestmentStatementRequestMessageSet();\n    investmentStatementRequest.setStatementRequest(transaction);\n    return investmentStatementRequest;\n  }\n\n  private createStatementRequest(details: InvestmentAccountDetails, range: StatementRange): InvestmentStatementRequest {\n    var investRequest: InvestmentStatementRequest = new InvestmentStatementRequest();\n    investRequest.setAccount(details);\n    investRequest.setStatementRange(range);\n    investRequest.setIncludePosition(new IncludePosition());\n    return investRequest;\n  }\n\n  private createSecurityListRequestMessageSet(transaction: SecurityListRequestTransaction): RequestMessageSet {\n    var securityListRequest: SecurityListRequestMessageSet =\n        new SecurityListRequestMessageSet();\n    securityListRequest.setSecurityListRequest(transaction);\n    return securityListRequest;\n  }\n\n  private createSecurityListRequest(securities: Array<SecurityRequest>): SecurityListRequest {\n    var securityListRequest: SecurityListRequest = new SecurityListRequest();\n    securityListRequest.setSecurityRequests(securities);\n    return securityListRequest;\n  }\n\n  private unwrapSecurityList(response: ResponseEnvelope) /*throws OFXException*/: SecurityList {\n    var securityListSet: SecurityListResponseMessageSet =\n        <SecurityListResponseMessageSet> response.getMessageSet(MessageSetType.investment_security);\n    if (securityListSet == null) {\n      throw new OFXException(\"No security list response message set.\");\n    }\n\n    var securityList: SecurityList = securityListSet.getSecurityList();\n    if (securityList == null) {\n      throw new OFXException(\"No security list response transaction.\");\n    }\n\n    return securityList;\n  }\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { RequestMessage } from \"../RequestMessage\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../meta/Element_add\";\n\n\n/**\n * Request to change a user password.\n *\n * @author Ryan Heaton\n * @see \"Section 2.5.2.1, OFX Spec.\"\n */\nexport class PasswordChangeRequest extends RequestMessage {\n\n  private userId: string;\n  private newPassword: string;\n\n  /**\n   * The id of the user changing password.\n   *\n   * @return The id of the user changing password.\n   */\n  public getUserId(): string {\n    return this.userId;\n  }\n\n  /**\n   * The id of the user changing password.\n   *\n   * @param userId The id of the user changing password.\n   */\n  public setUserId(userId: string): void {\n    this.userId = userId;\n  }\n\n  /**\n   * The new password.\n   *\n   * @return The new password.\n   */\n  public getNewPassword(): string {\n    return this.newPassword;\n  }\n\n  /**\n   * The new password.\n   *\n   * @param newPassword The new password.\n   */\n  public setNewPassword(newPassword: string): void {\n    this.newPassword = newPassword;\n  }\n}\n\nAggregate_add( PasswordChangeRequest, \"PINCHRQ\" );\nElement_add(PasswordChangeRequest, { name: \"USERID\", required: true, order: 0, type: String, read: PasswordChangeRequest.prototype.getUserId, write: PasswordChangeRequest.prototype.setUserId });\nElement_add(PasswordChangeRequest, { name: \"NEWUSERPASS\", required: true, order: 10, type: String, read: PasswordChangeRequest.prototype.getNewPassword, write: PasswordChangeRequest.prototype.setNewPassword });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TransactionWrappedRequestMessage } from \"../TransactionWrappedRequestMessage\";\nimport { PasswordChangeRequest } from \"./PasswordChangeRequest\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class PasswordChangeRequestTransaction extends TransactionWrappedRequestMessage<PasswordChangeRequest> {\n\n  private message: PasswordChangeRequest;\n\n  /**\n   * The wrapped message.\n   *\n   * @return The wrapped message.\n   */\n  public getMessage(): PasswordChangeRequest {\n    return this.message;\n  }\n\n  /**\n   * The wrapped message.\n   *\n   * @param message The wrapped message.\n   */\n  public setMessage(message: PasswordChangeRequest) {\n    this.message = message;\n  }\n\n  // Inherited.\n  public setWrappedMessage(message: PasswordChangeRequest): void {\n    this.setMessage(message);\n  }\n}\n\nAggregate_add(PasswordChangeRequestTransaction, \"PINCHTRNRQ\");\nChildAggregate_add(PasswordChangeRequestTransaction, { required: true, order: 30, type: PasswordChangeRequest, read: PasswordChangeRequestTransaction.prototype.getMessage, write: PasswordChangeRequestTransaction.prototype.setMessage });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { RequestMessageSet } from \"../RequestMessageSet\";\nimport { SignonRequest } from \"./SignonRequest\";\nimport { PasswordChangeRequestTransaction } from \"./PasswordChangeRequestTransaction\";\nimport { MessageSetType } from \"../MessageSetType\";\nimport { RequestMessage } from \"../RequestMessage\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\n/**\n * The sign-on request message set.\n *\n * @author Ryan Heaton\n * @see \"Section 2.5, OFX Spec.\"\n */\nexport class SignonRequestMessageSet extends RequestMessageSet {\n\n  private signonRequest: SignonRequest;\n  private passwordChangeRequest: PasswordChangeRequestTransaction;\n\n  public getType(): MessageSetType {\n    return MessageSetType.signon;\n  }\n\n  /**\n   * The message for this message set.\n   *\n   * @return The message for this message set.\n   */\n  public getSignonRequest(): SignonRequest {\n    return this.signonRequest;\n  }\n\n  /**\n   * The message for this message set.\n   *\n   * @param signonRequest The message for this message set.\n   */\n  public setSignonRequest(signonRequest: SignonRequest): void {\n    this.signonRequest = signonRequest;\n  }\n\n  /**\n   * The password change request.\n   *\n   * @return The password change request.\n   */\n  public getPasswordChangeRequest(): PasswordChangeRequestTransaction {\n    return this.passwordChangeRequest;\n  }\n\n  /**\n   * The password change request.\n   *\n   * @param passwordChangeRequest The password change request.\n   */\n  public setPasswordChangeRequest(passwordChangeRequest: PasswordChangeRequestTransaction): void {\n    this.passwordChangeRequest = passwordChangeRequest;\n  }\n\n  //todo: challenge request/response\n\n\n  // Inherited.\n  public getRequestMessages(): Array<RequestMessage> {\n    var requestMessages: Array<RequestMessage> = new Array<RequestMessage>();\n\n    if (this.getSignonRequest() != null) {\n      requestMessages.push(this.getSignonRequest());\n    }\n\n    if (this.getPasswordChangeRequest() != null) {\n      requestMessages.push(this.getPasswordChangeRequest());\n    }\n\n    return requestMessages;\n  }\n}\n\nAggregate_add(SignonRequestMessageSet, \"SIGNONMSGSRQV1\");\nChildAggregate_add(SignonRequestMessageSet, { required: true, order: 0, type: SignonRequest, read: SignonRequestMessageSet.prototype.getSignonRequest, write: SignonRequestMessageSet.prototype.setSignonRequest });\nChildAggregate_add(SignonRequestMessageSet, { order: 10, type: PasswordChangeRequestTransaction, read: SignonRequestMessageSet.prototype.getPasswordChangeRequest, write: SignonRequestMessageSet.prototype.setPasswordChangeRequest });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Status } from \"./Status\";\n\n\n/**\n * A status holder (usually applied to a response).\n *\n * @author Ryan Heaton\n */\nexport interface StatusHolder {\n\n  /**\n   * The name of this status holder (for error reporting).\n   *\n   * @return The name of this status holder (for error reporting).\n   */\n  getStatusHolderName(): string;\n\n  /**\n   * Get the status.\n   *\n   * @return The status.\n   */\n  getStatus(): Status;\n}\n\n\nexport function instanceof_StatusHolder(obj: any) : boolean {\n   return (obj instanceof Object\n       && (typeof obj.getStatusHolderName === 'function')\n       && (typeof obj.getStatus === 'function'));\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A message applicable to a response message set.\n *\n * @author Ryan Heaton\n */\nexport abstract class ResponseMessage {\n\n  /**\n   * The name of the response message.\n   *\n   * @return The name of the response message.\n   */\n  public abstract getResponseMessageName(): string;\n\n}\n","\n/*\n* Copyright 2008 Web Cohesion\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { OFXException } from \"../../../OFXException\";\n\n/**\n * Severity of the status.\n */\nexport enum Severity {\n  INFO,\n  WARN,\n  ERROR\n}\n\n/**\n * @author Ryan Heaton\n */\nexport abstract class StatusCode {\n\n  getCode(): number { throw new OFXException(\"abstract\"); }\n\n  getMessage(): string { throw new OFXException(\"abstract\"); }\n\n  getDefaultSeverity(): /*Status.*/Severity { throw new OFXException(\"abstract\"); }\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Aggregate_add } from '../../../meta/Aggregate_add'\nimport { Element_add } from '../../../meta/Element_add'\nimport { Severity, StatusCode } from './StatusCode'\n\n\n/**\n * Known status codes.\n */\nexport class KnownCode extends StatusCode {\n  public static SUCCESS: KnownCode = new KnownCode(0, \"Success\", Severity.INFO);\n  public static CLIENT_UP_TO_DATE: KnownCode = new KnownCode(1, \"Client is up-to-date\", Severity.INFO);\n  public static GENERAL_ERROR: KnownCode = new KnownCode(2000, \"General error.\", Severity.ERROR);\n  public static GENERAL_ACCOUNT_ERROR: KnownCode = new KnownCode(2002, \"General account error.\", Severity.ERROR);\n  public static ACCOUNT_NOT_FOUND: KnownCode = new KnownCode(2003, \"Account not found.\", Severity.ERROR);\n  public static ACCOUNT_CLOSED: KnownCode = new KnownCode(2004, \"Account closed.\", Severity.ERROR);\n  public static ACCOUNT_NOT_AUTHORIZED: KnownCode = new KnownCode(2005, \"Account not authorized.\", Severity.ERROR);\n  public static DATE_TOO_SOON: KnownCode = new KnownCode(2014, \"Date too soon\", Severity.ERROR);\n  public static DUPLICATE_REQUEST: KnownCode = new KnownCode(2019, \"Duplicate request.\", Severity.ERROR);\n  public static UNSUPPORTED_VERSION: KnownCode = new KnownCode(2021, \"Unsupported version\", Severity.ERROR);\n  public static INVALID_TAN: KnownCode = new KnownCode(2022, \"Invalid transaction authorization number.\", Severity.ERROR);\n  public static MFA_CHALLENGE_REQUIRED: KnownCode = new KnownCode(3000, \"Further authentication required.\", Severity.ERROR);\n  public static MFA_CHALLENGE_FAILED: KnownCode = new KnownCode(3001, \"MFA failed.\", Severity.ERROR);\n  public static PASSWORD_CHANGE_REQUIRED: KnownCode = new KnownCode(15000, \"Password change required.\", Severity.INFO);\n  public static SIGNON_INVALID: KnownCode = new KnownCode(15500, \"Invalid signon\", Severity.ERROR);\n  public static CUSTOMER_ACCOUNT_IN_USE: KnownCode = new KnownCode(15501, \"Customer account in use.\", Severity.ERROR);\n  public static PASSWORD_LOCKED: KnownCode = new KnownCode(15502, \"Password locked.\", Severity.ERROR);\n  public static INVALID_CLIENT_UID: KnownCode = new KnownCode(15510, \"Invalid client UID.\", Severity.ERROR);\n  public static CONTACT_FI: KnownCode = new KnownCode(15511, \"User must contact FI.\", Severity.ERROR);\n  public static AUTHTOKEN_REQUIRED: KnownCode = new KnownCode(15512, \"Auth token required.\", Severity.ERROR);\n  public static INVALID_AUTHTOKEN: KnownCode = new KnownCode(15513, \"Invalid auth token.\", Severity.ERROR);\n  public static NO_DATA: KnownCode = new KnownCode(14701, \"No Tax Data for Account.\", Severity.ERROR);\n  public static DB_EXCEPTION: KnownCode = new KnownCode(14702,\"Database error has occured.\",Severity.ERROR);\n  public static NO_TAXSUPPORT: KnownCode = new KnownCode(14703,\"This Tax Year is not supported.\",Severity.ERROR);\n\n  static KnownCodes: KnownCode[] = [\n    KnownCode.SUCCESS,\n    KnownCode.CLIENT_UP_TO_DATE,\n    KnownCode.GENERAL_ERROR,\n    KnownCode.GENERAL_ACCOUNT_ERROR,\n    KnownCode.ACCOUNT_NOT_FOUND,\n    KnownCode.ACCOUNT_CLOSED,\n    KnownCode.ACCOUNT_NOT_AUTHORIZED,\n    KnownCode.DATE_TOO_SOON,\n    KnownCode.DUPLICATE_REQUEST,\n    KnownCode.UNSUPPORTED_VERSION,\n    KnownCode.INVALID_TAN,\n    KnownCode.MFA_CHALLENGE_REQUIRED,\n    KnownCode.MFA_CHALLENGE_FAILED,\n    KnownCode.PASSWORD_CHANGE_REQUIRED,\n    KnownCode.SIGNON_INVALID,\n    KnownCode.CUSTOMER_ACCOUNT_IN_USE,\n    KnownCode.PASSWORD_LOCKED,\n    KnownCode.INVALID_CLIENT_UID,\n    KnownCode.CONTACT_FI,\n    KnownCode.AUTHTOKEN_REQUIRED,\n    KnownCode.INVALID_AUTHTOKEN,\n    KnownCode.NO_DATA,\n    KnownCode.DB_EXCEPTION,\n    KnownCode.NO_TAXSUPPORT,\n  ];\n\n  private code: number;\n  private message: string;\n  private defaultSeverity: Severity;\n\n  constructor(code: number, message: string, defaultSeverity: Severity) {\n    super();\n    this.code = code;\n    this.message = message;\n    this.defaultSeverity = defaultSeverity;\n  }\n\n  public getCode(): number {\n    return this.code;\n  }\n\n  public getMessage(): string {\n    return this.message;\n  }\n\n  public getDefaultSeverity(): Severity {\n    return this.defaultSeverity;\n  }\n\n  public static fromCode(code: number): KnownCode {\n    for (var i in KnownCode.KnownCodes) {\n      var value: KnownCode = KnownCode.KnownCodes[i];\n      if (value.getCode() == code) {\n        return value;\n      }\n    }\n    return null;\n  }\n\n\n  //@Override\n  public toString(): string {\n    return this.code.toString();\n  }\n}\n\n\n/**\n * Transaction status element.\n *\n * @author Ryan Heaton\n * @see \"Section 3.1.4, OFX Spec\"\n */\nexport class Status {\n\n  private code: StatusCode;\n  private severity: Severity;\n  private message: string;\n\n  constructor() {\n    this.code = KnownCode.SUCCESS;\n    this.severity = undefined;\n  }\n\n  /**\n   * Status code.\n   *\n   * @return The status code.\n   */\n  public getCode(): StatusCode {\n    return this.code;\n  }\n\n  /**\n   * Status code.\n   *\n   * @param code Status code.\n   */\n  public setCode(code: StatusCode): void {\n    this.code = code;\n    if (typeof this.severity === 'undefined') {\n      this.severity = code.getDefaultSeverity();\n    }\n  }\n\n  /**\n   * The severity.\n   *\n   * @return The severity.\n   */\n  public getSeverity(): Severity {\n    return this.severity;\n  }\n\n  /**\n   * The severity.\n   *\n   * @param severity The severity.\n   */\n  public setSeverity(severity: Severity): void {\n    this.severity = severity;\n  }\n\n  /**\n   * Server-supplied message.\n   *\n   * @return Server-supplied message.\n   */\n  public getMessage(): string {\n    return this.message;\n  }\n\n  /**\n   * Server-supplied message.\n   *\n   * @param message Server-supplied message.\n   */\n  public setMessage(message: string): void {\n    this.message = message;\n  }\n}\n\nAggregate_add( Status, \"STATUS\" );\nElement_add(Status, { name: \"CODE\", required: true, order: 0, type: StatusCode, read: Status.prototype.getCode, write: Status.prototype.setCode });\nElement_add(Status, { name: \"SEVERITY\", required: true, order: 10, type: Severity, read: Status.prototype.getSeverity, write: Status.prototype.setSeverity });\nElement_add(Status, { name: \"MESSAGE\", order: 20, type: String, read: Status.prototype.getMessage, write: Status.prototype.setMessage });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ResponseMessage } from \"./ResponseMessage\";\nimport { StatusHolder } from \"./common/StatusHolder\";\nimport { Status } from \"./common/Status\";\nimport { Element_add } from \"../../meta/Element_add\";\nimport { ChildAggregate_add } from \"../../meta/ChildAggregate_add\";\n\n\n/**\n * A response message wrapped in a transaction.\n *\n * @author Ryan Heaton\n * @see \"Section 2.4.6, OFX Spec\"\n */\nexport abstract class TransactionWrappedResponseMessage<M extends ResponseMessage> extends ResponseMessage implements StatusHolder {\n\n  private UID: string;\n  private clientCookie: string;\n  private status: Status;\n\n  /**\n   * UID of this transaction.\n   *\n   * @return UID of this transaction.\n   */\n  public getUID(): string {\n    return this.UID;\n  }\n\n  /**\n   * UID of this transaction.\n   *\n   * @param UID UID of this transaction.\n   */\n  public setUID(UID: string): void {\n    this.UID = UID;\n  }\n\n  /**\n   * Client cookie (echoed back by the response).\n   *\n   * @return Client cookie (echoed back by the response).\n   */\n  public getClientCookie(): string {\n    return this.clientCookie;\n  }\n\n  /**\n   * Client cookie (echoed back by the response).\n   *\n   * @param clientCookie Client cookie (echoed back by the response).\n   */\n  public setClientCookie(clientCookie: string): void {\n    this.clientCookie = clientCookie;\n  }\n\n  // Inherited.\n  public getStatusHolderName(): string {\n    return this.getResponseMessageName();\n  }\n\n  // Inherited.\n  public getResponseMessageName(): string {\n    var name: string = \"transaction response\";\n    if (this.getWrappedMessage() != null) {\n      name = this.getWrappedMessage().getResponseMessageName() + \" transaction\";\n    }\n//    else if ((<any>(<Object>this).constructor).Aggregate) {\n//      // TODO- does this work?\n//      var aggregate: AggregateInfo = (<any>(<Object>this).constructor).Aggregate;\n//      name = aggregate.getName() + \" transaction\";\n//    }\n\n    return name;\n  }\n\n  /**\n   * Status of the transaction.\n   *\n   * @return Status of the transaction.\n   */\n  public getStatus(): Status {\n    return this.status;\n  }\n\n  /**\n   * Status of the transaction.\n   *\n   * @param status Status of the transaction.\n   */\n  public setStatus(status: Status): void {\n    this.status = status;\n  }\n\n  /**\n   * Get the wrapped message.\n   *\n   * @return The wrapped message.\n   */\n  public abstract getWrappedMessage(): M;\n\n}\n\nElement_add(TransactionWrappedResponseMessage, { name: \"TRNUID\", required: true, order: 0, type: String, read: TransactionWrappedResponseMessage.prototype.getUID, write: TransactionWrappedResponseMessage.prototype.setUID });\nElement_add(TransactionWrappedResponseMessage, { name: \"CLTCOOKIE\", order: 20, type: String, read: TransactionWrappedResponseMessage.prototype.getClientCookie, write: TransactionWrappedResponseMessage.prototype.setClientCookie });\nChildAggregate_add(TransactionWrappedResponseMessage, { required: true, order: 10, type: Status, read: TransactionWrappedResponseMessage.prototype.getStatus, write: TransactionWrappedResponseMessage.prototype.setStatus });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { OFXConnection } from \"../net/OFXConnection\";\nimport { FinancialInstitutionData } from \"../FinancialInstitutionData\";\nimport { OFXException } from \"../../OFXException\";\nimport { FinancialInstitutionProfile } from \"../FinancialInstitutionProfile\";\nimport { RequestEnvelope } from \"../../domain/data/RequestEnvelope\";\nimport { SignonRequest } from \"../../domain/data/signon/SignonRequest\";\nimport { ProfileRequestMessageSet } from \"../../domain/data/profile/ProfileRequestMessageSet\";\nimport { ResponseEnvelope } from \"../../domain/data/ResponseEnvelope\";\nimport { AccountProfile } from \"../../domain/data/signup/AccountProfile\";\nimport { SignupRequestMessageSet } from \"../../domain/data/signup/SignupRequestMessageSet\";\nimport { BankAccountDetails } from \"../../domain/data/banking/BankAccountDetails\";\nimport { BankAccount } from \"../BankAccount\";\nimport { BankingAccountImpl } from \"./BankingAccountImpl\";\nimport { CreditCardAccountDetails } from \"../../domain/data/creditcard/CreditCardAccountDetails\";\nimport { CreditCardAccount } from \"../CreditCardAccount\";\nimport { CreditCardAccountImpl } from \"./CreditCardAccountImpl\";\nimport { InvestmentAccountDetails } from \"../../domain/data/investment/accounts/InvestmentAccountDetails\";\nimport { InvestmentAccount } from \"../InvestmentAccount\";\nimport { InvestmentAccountImpl } from \"./InvestmentAccountImpl\";\nimport { SortedSet } from \"../../collections/SortedSet\";\nimport { RequestMessageSet } from \"../../domain/data/RequestMessageSet\";\nimport { SignonRequestMessageSet } from \"../../domain/data/signon/SignonRequestMessageSet\";\nimport { ProfileResponseMessageSet } from \"../../domain/data/profile/ProfileResponseMessageSet\";\nimport { MessageSetType } from \"../../domain/data/MessageSetType\";\nimport { ProfileResponseTransaction } from \"../../domain/data/profile/ProfileResponseTransaction\";\nimport { ProfileResponse } from \"../../domain/data/profile/ProfileResponse\";\nimport { ApplicationSecurity } from \"../../domain/data/ApplicationSecurity\";\nimport { UnsupportedOFXSecurityTypeException } from \"../../UnsupportedOFXSecurityTypeException\";\nimport { ResponseMessageSet } from \"../../domain/data/ResponseMessageSet\";\nimport { NoOFXResponseException } from \"../NoOFXResponseException\";\nimport { SignonResponse } from \"../../domain/data/signon/SignonResponse\";\nimport { SignonResponseMessageSet } from \"../../domain/data/signon/SignonResponseMessageSet\";\nimport { StringSet } from \"../../collections/collections\";\nimport { TransactionWrappedRequestMessage } from \"../../domain/data/TransactionWrappedRequestMessage\";\nimport { RequestMessage } from \"../../domain/data/RequestMessage\";\nimport { instanceof_StatusHolder, StatusHolder } from \"../../domain/data/common/StatusHolder\";\nimport { TransactionWrappedResponseMessage } from \"../../domain/data/TransactionWrappedResponseMessage\";\nimport { ResponseMessage } from \"../../domain/data/ResponseMessage\";\nimport { OFXTransactionException } from \"../../OFXTransactionException\";\nimport { Status, KnownCode } from \"../../domain/data/common/Status\";\nimport { OFXStatusException } from \"../../OFXStatusException\";\nimport { ProfileRequestTransaction } from \"../../domain/data/profile/ProfileRequestTransaction\";\nimport { ProfileRequest } from \"../../domain/data/profile/ProfileRequest\";\nimport { OFXApplicationContextHolder } from \"../context/OFXApplicationContextHolder\";\nimport { AccountInfoRequestTransaction } from \"../../domain/data/signup/AccountInfoRequestTransaction\";\nimport { AccountInfoRequest } from \"../../domain/data/signup/AccountInfoRequest\";\nimport { SignupResponseMessageSet } from \"../../domain/data/signup/SignupResponseMessageSet\";\nimport { AccountInfoResponseTransaction } from \"../../domain/data/signup/AccountInfoResponseTransaction\";\nimport { AccountInfoResponse } from \"../../domain/data/signup/AccountInfoResponse\";\nimport { FinancialInstitutionInfo } from \"../../domain/data/signon/FinancialInstitution\";\n\n\n//import java.net.URL;\n\n/**\n * Base implementation for the financial institution.\n *\n * @author Ryan Heaton\n */\nexport class FinancialInstitutionImpl extends FinancialInstitutionInfo {\n\n  private connection: OFXConnection;\n  private data: FinancialInstitutionData;\n\n  constructor(data: FinancialInstitutionData, connection: OFXConnection) {\n    super();\n    if (data == null) {\n      throw new OFXException(\"Data cannot be null\");\n    }\n    if (connection == null) {\n      throw new OFXException(\"An OFX connection must be supplied\");\n    }\n\n    this.data = data;\n    this.connection = connection;\n  }\n\n  // Inherited.\n  public readProfile() /*throws OFXException*/: Promise<FinancialInstitutionProfile> {\n    var request: RequestEnvelope = this.createAuthenticatedRequest(SignonRequest.ANONYMOUS_USER, SignonRequest.ANONYMOUS_USER);\n    var profileRequest: ProfileRequestMessageSet = new ProfileRequestMessageSet();\n    profileRequest.setProfileRequest(this.createProfileTransaction());\n    request.getMessageSets().insert(profileRequest);\n    return this.sendRequest(request, this.getData().getOFXURL())\n    .then((response: ResponseEnvelope): FinancialInstitutionProfile => {\n      this.doGeneralValidationChecks(request, response);\n      return this.getProfile(response);\n    });\n  }\n\n  // Inherited.\n  public readAccountProfiles(username: string, password: string) /*throws OFXException*/: Promise<Array<AccountProfile>> {\n    var request: RequestEnvelope = this.createAuthenticatedRequest(username, password);\n    var signupRequest: SignupRequestMessageSet = new SignupRequestMessageSet();\n    signupRequest.setAccountInfoRequest(this.createAccountInfoTransaction());\n    request.getMessageSets().insert(signupRequest);\n    return this.sendRequest(request, this.getData().getOFXURL())\n    .then((response: ResponseEnvelope): Array<AccountProfile> => {\n      this.doGeneralValidationChecks(request, response);\n      return this.getAccountProfiles(response);\n    });\n  }\n\n  // Inherited.\n  public loadBankAccount(details: BankAccountDetails, username: string, password: string): BankAccount {\n    return new BankingAccountImpl(details, username, password, this);\n  }\n\n  // Inherited.\n  public loadCreditCardAccount(details: CreditCardAccountDetails, username: string, password: string): CreditCardAccount {\n    return new CreditCardAccountImpl(details, username, password, this);\n  }\n\n  // Inherited\n  public loadInvestmentAccount(details: InvestmentAccountDetails, username: string, password: string): InvestmentAccount {\n    return new InvestmentAccountImpl(details, username, password, this);\n  }\n\n  /**\n   * Create an authenticated request envelope.\n   *\n   * @param username The username.\n   * @param password The password.\n   * @return The request envelope.\n   */\n  public createAuthenticatedRequest(username: string, password: string): RequestEnvelope {\n    var request: RequestEnvelope = new RequestEnvelope();\n    var messageSets: SortedSet<RequestMessageSet> = new SortedSet<RequestMessageSet>(RequestMessageSet.contentCompare);\n    var signonRequest: SignonRequestMessageSet = new SignonRequestMessageSet();\n    signonRequest.setSignonRequest(this.createSignonRequest(username, password));\n    messageSets.insert(signonRequest);\n    request.setMessageSets(messageSets);\n    return request;\n  }\n\n//  /**\n//   * Send a request.\n//   *\n//   * @param request The request.\n//   * @return The request.\n//   */\n//  protected sendRequest(request: RequestEnvelope) /*throws OFXConnectionException*/: ResponseEnvelope {\n//    return this.getConnection().sendRequest(request, getData().getOFXURL());\n//  }\n\n  /**\n   * Send a request to a specific URL.\n   *\n   * @param request The request.\n   * @param url The url.\n   * @return The request.\n   */\n  public sendRequest(request: RequestEnvelope, url: string = this.getData().getOFXURL()) /*throws OFXConnectionException*/: Promise<ResponseEnvelope> {\n    return this.getConnection().sendRequest(request, url);\n  }\n\n  /**\n   * Open the specified response envelope and look for the profile.\n   *\n   * @param response The response envelope.\n   * @return The profile.\n   */\n  protected getProfile(response: ResponseEnvelope) /*throws OFXException*/: FinancialInstitutionProfile {\n\n    var profileSet: ProfileResponseMessageSet = <ProfileResponseMessageSet> response.getMessageSet(MessageSetType.profile);\n    if (profileSet == null) {\n      throw new OFXException(\"No profile response set.\");\n    }\n\n    var transactionResponse: ProfileResponseTransaction = profileSet.getProfileResponse();\n    if (transactionResponse == null) {\n      throw new OFXException(\"No profile transaction wrapper.\");\n    }\n\n    var message: ProfileResponse = transactionResponse.getMessage();\n    if (message == null) {\n      throw new OFXException(\"No profile message.\");\n    }\n    return message;\n  }\n\n  /**\n   * General validation checks on the specified response.\n   *\n   * @param request The request.\n   * @param response Their response.\n   * @throws OFXException Upon invalid response.\n   */\n  public doGeneralValidationChecks(request: RequestEnvelope, response: ResponseEnvelope) /*throws OFXException*/: void {\n    if (response.getSecurity() != ApplicationSecurity.NONE) {\n      throw new UnsupportedOFXSecurityTypeException(\"Unable to participate in \" + response.getSecurity() + \" security.\");\n    }\n\n    if (request.getUID() !== response.getUID()) {\n      throw new OFXException(\"Invalid transaction ID '\" + response.getUID() + \"' in response.  Expected: \" + request);\n    }\n\n    for (var requestSet of request.getMessageSets().values()) {\n      var responseSet: ResponseMessageSet = response.getMessageSet(requestSet.getType());\n      if (responseSet == null) {\n        throw new NoOFXResponseException(\"No response for the \" + requestSet.getType() + \" request.\");\n      }\n\n      if (responseSet.getType() == MessageSetType.signon) {\n        var signonResponse: SignonResponse = (<SignonResponseMessageSet> responseSet).getSignonResponse();\n\n        if (signonResponse == null) {\n          throw new NoOFXResponseException(\"No signon response.\");\n        }\n      }\n\n      var transactionIds: StringSet = {};\n      for (var requestMessage of requestSet.getRequestMessages()) {\n        if (requestMessage instanceof TransactionWrappedRequestMessage) {\n          transactionIds[(<TransactionWrappedRequestMessage<RequestMessage>> requestMessage).getUID()] = true;\n        }\n      }\n\n      for (var responseMessage of responseSet.getResponseMessages()) {\n        if (instanceof_StatusHolder(responseMessage)) {\n          this.validateStatus(<StatusHolder><any>responseMessage);\n        }\n\n        if (responseMessage instanceof TransactionWrappedResponseMessage) {\n          var uid: string = (<TransactionWrappedResponseMessage<ResponseMessage>> responseMessage).getUID();\n          if (uid == null) {\n            throw new OFXTransactionException(\"Invalid response transaction: no UID.\");\n          }\n          else if (!(uid in transactionIds)) {\n            throw new OFXTransactionException(\"Response to an unknown transaction: \" + uid + \".\");\n          } else {\n            delete transactionIds[uid];\n          }\n        }\n      }\n\n      if (Object.keys(transactionIds).length != 0) {\n        throw new OFXTransactionException(\"No response to the following transactions: \" + transactionIds);\n      }\n    }\n  }\n\n  /**\n   * Validate the status of the given status holder.\n   *\n   * @param statusHolder The status holder.\n   */\n  protected validateStatus(statusHolder: StatusHolder) /*throws OFXException*/: void {\n    var status: Status = statusHolder.getStatus();\n    if (status == null) {\n      throw new OFXException(\"Invalid OFX response: no status returned in the \" + statusHolder.getStatusHolderName() + \" response.\");\n    }\n\n    if (KnownCode.SUCCESS != status.getCode()) {\n      var message: string = status.getMessage();\n      if (message == null) {\n        message = \"No response status code.\";\n\n        if (status.getCode() != null) {\n          message = status.getCode().getMessage();\n        }\n      }\n\n      throw new OFXStatusException(status, \"Invalid \" + statusHolder.getStatusHolderName() + \": \" + message);\n    }\n  }\n\n  /**\n   * Create a transaction message for a profile request.\n   *\n   * @return The transaction message.\n   */\n  protected createProfileTransaction(): ProfileRequestTransaction {\n    var profileTx: ProfileRequestTransaction = new ProfileRequestTransaction();\n    profileTx.setMessage(this.createProfileRequest());\n    return profileTx;\n  }\n\n  /**\n   * Create a profile request.\n   *\n   * @return The profile request.\n   */\n  protected createProfileRequest(): ProfileRequest {\n    var profileRequest: ProfileRequest = new ProfileRequest();\n    profileRequest.setProfileLastUpdated(new Date(0));\n    return profileRequest;\n  }\n\n  /**\n   * Create a sign-on request for the specified user.\n   *\n   * @param username The username.\n   * @param password The password.\n   * @return The signon request.\n   */\n  protected createSignonRequest(username: string, password: string): SignonRequest {\n    var signonRequest: SignonRequest = new SignonRequest();\n    signonRequest.setTimestamp(new Date());\n    var fi: FinancialInstitutionInfo = new FinancialInstitutionInfo();\n    fi.setId(this.getData().getFinancialInstitutionId());\n    fi.setOrganization(this.getData().getOrganization());\n    signonRequest.setFinancialInstitution(fi);\n    signonRequest.setUserId(username);\n    signonRequest.setPassword(password);\n    signonRequest.setApplicationId(OFXApplicationContextHolder.getCurrentContext().getAppId());\n    signonRequest.setApplicationVersion(OFXApplicationContextHolder.getCurrentContext().getAppVersion());\n    return signonRequest;\n  }\n\n  /**\n   * Create a transaction for an account info request.\n   *\n   * @return The transaction.\n   */\n  protected createAccountInfoTransaction(): AccountInfoRequestTransaction {\n    var transaction: AccountInfoRequestTransaction = new AccountInfoRequestTransaction();\n    transaction.setMessage(this.createAccountInfoRequest());\n    return transaction;\n  }\n\n  /**\n   * Create an account info request.\n   *\n   * @return The account info request.\n   */\n  protected createAccountInfoRequest(): AccountInfoRequest {\n    return new AccountInfoRequest();\n  }\n\n  /**\n   * Get the account profiles for the specified response envelope.\n   *\n   * @param response The response envelope.\n   * @return The account profiles.\n   */\n  protected getAccountProfiles(response: ResponseEnvelope) /*throws OFXException*/: Array<AccountProfile> {\n    var messageSet: SignupResponseMessageSet = <SignupResponseMessageSet> response.getMessageSet(MessageSetType.signup);\n    if (messageSet == null) {\n      throw new OFXException(\"No signup response message set.\");\n    }\n\n    var transaction: AccountInfoResponseTransaction = messageSet.getAccountInfoResponse();\n    if (transaction == null) {\n      throw new OFXException(\"No account info transaction in the signup response.\");\n    }\n\n    var infoResponse: AccountInfoResponse = transaction.getMessage();\n    if (infoResponse == null) {\n      throw new OFXException(\"No account info response in the transaction.\");\n    }\n\n    return infoResponse.getAccounts();\n  }\n\n  /**\n   * The connection used by this implementation.\n   *\n   * @return The connection used by this implementation.\n   */\n  public getConnection(): OFXConnection {\n    return this.connection;\n  }\n\n  /**\n   * The financial institution data.\n   *\n   * @return The financial institution data.\n   */\n  public getData(): FinancialInstitutionData {\n    return this.data;\n  }\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { OFXException, Error } from \"../../OFXException\";\n\n\n/**\n * Error with a particular OFX connection.\n *\n * @author Ryan Heaton\n */\nexport class OFXConnectionException extends OFXException {\n\n  public constructor(message: string, e: Error = null) {\n    super(message, e);\n  }\n\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { OFXConnectionException } from \"./OFXConnectionException\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class OFXServerException extends OFXConnectionException {\n\n  private httpCode: number;\n\n  constructor(message: string, httpCode: number) {\n    super(message);\n    this.httpCode = httpCode;\n  }\n\n  public getHttpCode(): number {\n    return this.httpCode;\n  }\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Severity, StatusCode } from \"./StatusCode\";\n\n/**\n * Holder for an unknown status code.\n *\n * @author Ryan Heaton\n */\nexport class UnknownStatusCode extends StatusCode {\n\n  private code: number;\n  private message: string;\n  private defaultSeverity: /*Status.*/Severity;\n\n  constructor(code: number, message: string, defaultSeverity: /*Status.*/Severity) {\n    super();\n    this.code = code;\n    this.message = message;\n    this.defaultSeverity = defaultSeverity;\n  }\n\n  public getCode(): number {\n    return this.code;\n  }\n\n  public getMessage(): string {\n    return this.message;\n  }\n\n  public getDefaultSeverity(): /*Status.*/Severity {\n    return this.defaultSeverity;\n  }\n\n  //@Override\n  public toString(): string {\n    return this.code.toString();\n  }\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { KnownCode } from '../domain/data/common/Status';\nimport { StatusCode, Severity } from '../domain/data/common/StatusCode';\nimport { UnknownStatusCode } from '../domain/data/common/UnknownStatusCode';\nimport { isAssignableFrom } from '../meta/PropertyDescriptor';\nimport { StringConversion } from './StringConversion';\n\n/**\n * Utility class for conversion to/from OFX strings.\n *\n * @author Ryan Heaton\n */\nexport class DefaultStringConversion implements StringConversion {\n\n  public toString(value: Object): string {\n    if (!value) {\n      return null;\n    }\n    else if (typeof value === \"boolean\") {\n      return value ? \"Y\" : \"N\";\n    }\n    else if (value instanceof Date) {\n      return this.formatDate(value);\n    }\n    else if (typeof value === \"number\") {\n      return value + \"\";\n    }\n    else {\n      return value.toString();\n    }\n  }\n\n  public fromString<E>(clazz: any, value: string): E {\n    if (!value) {\n      return null;\n    }\n    else if (clazz === StatusCode) {\n      var code: number = <number><any>value;\n      var statusCode: StatusCode = KnownCode.fromCode(code);\n      if (!statusCode) {\n        statusCode = new UnknownStatusCode(code, \"Unknown status code.\", Severity.ERROR);\n      }\n\n      return <E><any>statusCode;\n    }\n    else if (isAssignableFrom(Number, clazz)) {\n      return <E><any>parseFloat(value)\n    }\n    else if (isAssignableFrom(Boolean, clazz)) {\n      return <E><any>(\"Y\" === value.toUpperCase());\n    }\n    else if (isAssignableFrom(Date, clazz)) {\n      return <E><any>this.parseDate(value);\n    }\n    // this goes last because a lot of things are objects\n    else if (typeof clazz === \"object\") {\n      // enum\n      console.assert(value in clazz);\n      if(value in clazz) {\n        return clazz[value];\n      }\n    }\n    return <E><any>value;\n  }\n\n  /**\n   * Parses a date according to OFX.\n   *\n   * @param value The value of the date.\n   * @return The date value.\n   */\n  protected parseDate(value: string) {\n    var year: number = parseInt(value.substr(0, 4));\n    var month: number = parseInt(value.substr(4, 2)) - 1; // javascript month numbers are zero-based\n    var day: number = parseInt(value.substr(6, 2));\n    var hour: number = parseInt(value.substr(8, 2));\n    var minute: number = parseInt(value.substr(10, 2));\n    var second: number = parseInt(value.substr(12, 2)) || 0;\n    var milli: number = parseInt(value.substr(15, 3)) || 0;\n\n    // add timezone offset\n    var bracket: number = value.indexOf(\"[\");\n    if(bracket != -1) {\n      var close = value.indexOf(\":\");\n      if(close === -1) {\n        close = value.indexOf(\"]\");\n      }\n      var gmtOffset: any = value.substring(bracket+1, close);\n      hour -= 1.0 * gmtOffset;\n    }\n\n    // create date as UTC\n    return new Date(Date.UTC(year, month, day, hour, minute, second, milli));\n  }\n\n  /**\n   * Format the date according to the OFX spec.\n   *\n   * @param date The date.\n   * @return The date format.\n   */\n  protected formatDate(date: Date): string {\n    var gmt = new Date(date.valueOf() + date.getTimezoneOffset() * 60000);\n    return this.pad(gmt.getFullYear(), 4) +\n      this.pad(gmt.getMonth() + 1, 2) +\n      this.pad(gmt.getDate(), 2) +\n      this.pad(gmt.getHours(), 2) +\n      this.pad(gmt.getMinutes(), 2) +\n      this.pad(gmt.getSeconds(), 2) +\n      \".\" +\n      this.dpad(gmt.getMilliseconds(), 3);\n  }\n\n\n  /**\n   * Pad a number with leading zeroes until it is of <tt>size</tt> length\n   *\n   * @param num number\n   * @param size number of digits in final number\n   * @return padded number\n   */\n  private pad(num: number, size: number): string {\n    var s = num+\"\";\n    while (s.length < size) {\n      s = \"0\" + s;\n    }\n    return s;\n  }\n\n  /**\n   * Pad a number with trailing zeroes until it is of <tt>size</tt> length.\n   * Intended for numbers after a decimal point to get a fixed number of decimals\n   *\n   * @param num number\n   * @param size number of digits in final number\n   * @return padded number\n   */\n  private dpad(num: number, size: number): string {\n    var s = num+\"\";\n    while (s.length < size) {\n      s = s + \"0\";\n    }\n    return s;\n  }\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Log, LogFactory } from \"../log/Log\";\nimport { StringConversion } from \"./StringConversion\";\nimport { DefaultStringConversion } from \"./DefaultStringConversion\";\nimport { OFXWriter } from \"./OFXWriter\";\nimport { AggregateInfo, HeaderValues } from \"./AggregateInfo\";\nimport { AggregateIntrospector } from \"./AggregateIntrospector\";\nimport { OFXException } from \"../OFXException\";\nimport { StringMap } from \"../collections/collections\";\nimport { SortedSet } from \"../collections/SortedSet\";\nimport { AggregateAttribute, AggregateAttributeType } from \"./AggregateAttribute\";\n\n\nvar LOG: Log;\n\n/**\n * Marshaller for aggregate objects.\n *\n * @author Ryan Heaton\n */\nexport class AggregateMarshaller {\n\n  private conversion: StringConversion;\n\n  constructor() {\n    this.conversion = new DefaultStringConversion();\n  }\n\n  /**\n   * Marshal the specified aggregate object.\n   *\n   * @param aggregate The aggregate to marshal.\n   * @param writer    The writer.\n   */\n  public marshal(aggregate: Object, writer: OFXWriter) /*throws IOException*/: void {\n    var aggregateInfo: AggregateInfo = AggregateIntrospector.getAggregateInfo(aggregate.constructor);\n    if (aggregateInfo == null) {\n      throw new OFXException(\"Unable to marshal object (no aggregate metadata found).\");\n    }\n\n    if (aggregateInfo.hasHeaders()) {\n      var headerValues: HeaderValues = aggregateInfo.getHeaders(aggregate);\n      var convertedValues: StringMap = {};\n      for (var header in headerValues) {\n        convertedValues[header] = this.getConversion().toString(headerValues[header]);\n      }\n      writer.writeHeaders(convertedValues);\n    }\n\n    writer.writeStartAggregate(aggregateInfo.getName());\n    var AggregateAttributes: SortedSet<AggregateAttribute> = aggregateInfo.getAttributes();\n    this.writeAggregateAttributes(aggregate, writer, AggregateAttributes);\n    writer.writeEndAggregate(aggregateInfo.getName());\n  }\n\n  /**\n   * Write the aggregate attributes for the specified aggregate.\n   *\n   * @param aggregate           The aggregate.\n   * @param writer              The writer.\n   * @param aggregateAttributes The aggregate attributes.\n   */\n  protected writeAggregateAttributes(aggregate: Object, writer: OFXWriter, aggregateAttributes: SortedSet<AggregateAttribute>) /*throws IOException*/: void {\n    for (var i in aggregateAttributes.values()) {\n      var aggregateAttribute: AggregateAttribute = aggregateAttributes.values()[i];\n      var childValue: Object = null;\n      try {\n        childValue = aggregateAttribute.get(aggregate);\n      }\n      catch (e) {\n        LOG.error(\"Unable to get \" + aggregateAttribute.toString(), e);\n      }\n\n      if (childValue != null) {\n        switch (aggregateAttribute.getType()) {\n          case AggregateAttributeType.CHILD_AGGREGATE:\n            var childValues: Array<Object>;\n            if (childValue instanceof Array) {\n              childValues = childValue;\n            }\n            else if(childValue instanceof SortedSet) {\n              childValues = (<SortedSet<Object>>childValue).values();\n            }\n            else {\n              childValues = [childValue];\n            }\n\n            for (var objValue of childValues) {\n              var aggregateInfo: AggregateInfo = AggregateIntrospector.getAggregateInfo(objValue.constructor);\n              if (aggregateInfo == null) {\n                throw new OFXException(\"Unable to marshal object of type \" + objValue.constructor.name + \" (no aggregate metadata found).\");\n              }\n\n              var attributeName: string = aggregateAttribute.getName();\n              if (aggregateAttribute.isArray()) {\n                attributeName = aggregateInfo.getName();\n              }\n\n              writer.writeStartAggregate(attributeName);\n              this.writeAggregateAttributes(objValue, writer, aggregateInfo.getAttributes());\n              writer.writeEndAggregate(attributeName);\n            }\n            break;\n          case AggregateAttributeType.ELEMENT:\n            var strValue: string = this.getConversion().toString(childValue);\n            if ((strValue != null) && (\"\" !== strValue.trim())) {\n              writer.writeElement(aggregateAttribute.getName(), strValue);\n            }\n            break;\n          default:\n            throw new OFXException(\"Unknown aggregate attribute type: \" + aggregateAttribute.getType());\n        }\n      }\n      else if (aggregateAttribute.isRequired()) {\n        throw new OFXException(\"Required \" + aggregateAttribute.toString() + \" is null or empty.\");\n      }\n    }\n  }\n\n  /**\n   * The conversion.\n   *\n   * @return The conversion.\n   */\n  public getConversion(): StringConversion {\n    return this.conversion;\n  }\n\n  /**\n   * The conversion.\n   *\n   * @param conversion The conversion.\n   */\n  public setConversion(conversion: StringConversion): void {\n    this.conversion = conversion;\n  }\n}\n\nLOG = LogFactory.getLog(AggregateMarshaller);\n","export class StringReader {\n  private _text: string;\n  private _cursor: number;\n  private _mark: number;\n\n  constructor(text: string) {\n    this._text = text;\n    this._cursor = 0;\n    this._mark = 0;\n  }\n\n  public read(cbuf?: Array<string>, offset?: number, length?: number): number|string {\n    if(this._cursor >= this._text.length) {\n      return -1;\n    } else {\n      if(arguments.length === 0) {\n        return this.readChar();\n      } else {\n        offset = offset || 0;\n        length = length || cbuf.length;\n        length = Math.min(length, this._text.length - this._cursor);\n        for(var i=0; i<length; i++) {\n          cbuf[offset + i] = this.readChar();\n        }\n        return length;\n      }\n    }\n  }\n\n\n  public readChar(): string {\n    console.assert(this._cursor < this._text.length);\n    var ch = this._text[this._cursor];\n    this._cursor++;\n    return ch;\n  }\n\n\n  public close(): void {\n    this._text = null;\n    this._cursor = null;\n    this._mark = null;\n  }\n\n\n  public mark(/*readLimit*/): void {\n    this._mark = this._cursor;\n  }\n\n\n  public reset(): void {\n    this._cursor = this._mark;\n  }\n\n\n  public remainder(): string {\n    return this._text.substring(this._cursor);\n  }\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { OFXHandler } from \"./OFXHandler\";\n\n\n/**\n * Default (no-op) implementation of an OFX handler.\n *\n * @author Ryan Heaton\n */\nexport class DefaultHandler implements OFXHandler {\n\n  public onHeader(name: string, value: string): void {\n  }\n\n  public onElement(name: string, value: string): void {\n  }\n\n  public startAggregate(aggregateName: string): void {\n  }\n\n  public endAggregate(aggregateName: string): void {\n  }\n\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { OFXException } from '../OFXException'\n\n/**\n * @author Ryan Heaton\n */\nexport class OFXParseException extends OFXException {\n\n  constructor(message: string) {\n    super(message);\n  }\n}\n","export class Stack<T> {\n\tprivate values: Array<T>;\n\n\tconstructor() {\n\t\tthis.values = [];\n\t}\n\n\n\tpublic push(...values: Array<T>): void {\n\t  return Array.prototype.push.apply(this.values, arguments);\n\t}\n\n\n\tpublic pop(): T {\n\t  return Array.prototype.pop.call(this.values);\n\t}\n\n\n\tpublic peek(): T {\n\t  if(this.values.length === 0) {\n\t    return null;\n\t  } else {\n\t    return this.values[this.values.length - 1];\n\t  }\n\t}\n\n\n\tpublic isEmpty(): boolean {\n\t  return this.values.length === 0;\n\t}\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum OFXParseEventType {\n  CHARACTERS,\n  ELEMENT\n}\n\n/**\n * An event during OFX parsing.\n *\n * @author Ryan Heaton\n */\nexport class OFXParseEvent {\n  private eventType: OFXParseEventType;\n  private eventValue: string;\n\n  constructor(eventType: OFXParseEventType, eventValue: string) {\n    this.eventType = eventType;\n    this.eventValue = eventValue;\n  }\n\n  public getEventType(): OFXParseEventType {\n    return this.eventType;\n  }\n\n  public getEventValue(): string {\n    return this.eventValue;\n  }\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Stack } from '../collections/Stack'\nimport { OFXParseEvent, OFXParseEventType } from './OFXParseEvent'\nimport { OFXHandler } from './OFXHandler'\nimport { Log, LogFactory } from '../log/Log'\nimport { OFXException } from '../OFXException';\nimport { SAXParser, Tag as SAXTag } from 'sax';\n\nvar LOG: Log;\n\n/**\n * @author Ryan Heaton\n */\nexport class OFXV2ContentHandler {\n\n  private eventStack: Stack<OFXParseEvent>;\n  private ofxHandler: OFXHandler;\n  private startedEvents: Array<OFXParseEvent>;\n\n  constructor(ofxHandler: OFXHandler) {\n    this.eventStack = new Stack<OFXParseEvent>();\n    this.startedEvents = new Array<OFXParseEvent>();\n\n    if (ofxHandler == null) {\n      throw new OFXException(\"An OFX handler must be supplied.\");\n    }\n\n    this.ofxHandler = ofxHandler;\n  }\n\n  public install(parser: SAXParser) {\n    parser.ontext = this.ontext.bind(this);\n    parser.onopentag = this.onopentag.bind(this);\n    parser.onclosetag = this.onclosetag.bind(this);\n  }\n\n  public onopentag(node: SAXTag): void {\n    var qName: string = node.name;\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"START ELEMENT: \" + qName);\n    }\n\n    if ((!this.eventStack.isEmpty()) && (this.eventStack.peek().getEventType() == OFXParseEventType.ELEMENT) && (!this.isAlreadyStarted(this.eventStack.peek()))) {\n      var eventValue: string = this.eventStack.peek().getEventValue();\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Element \" + qName + \" is starting aggregate \" + eventValue);\n      }\n\n      //the last element started was not ended; we are assuming we've started a new aggregate.\n      this.ofxHandler.startAggregate(eventValue);\n\n      this.startedEvents.push(this.eventStack.peek());\n    }\n\n    this.eventStack.push(new OFXParseEvent(OFXParseEventType.ELEMENT, qName));\n  }\n\n  /**\n   * Whether the specified element aggregate has already been started.\n   *\n   * @param event The event containing the start.\n   * @return Whether the specified element aggregate has already been started.\n   */\n  protected isAlreadyStarted(event: OFXParseEvent): boolean {\n    return this.startedEvents.indexOf(event) != -1;\n  }\n\n  public onclosetag(qName: string): void {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"END ELEMENT: \" + qName);\n    }\n\n    var eventToFinish: OFXParseEvent = this.eventStack.pop();\n    if (eventToFinish.getEventType() == OFXParseEventType.CHARACTERS) {\n      var chars: string = eventToFinish.getEventValue().trim();\n\n      if (this.eventStack.isEmpty()) {\n        throw new OFXException(\"Illegal character data outside main OFX root element: \\\"\" + chars + \"\\\".\");\n      }\n      else {\n        var elementEvent: OFXParseEvent = this.eventStack.pop();\n        if (elementEvent.getEventType() != OFXParseEventType.ELEMENT) {\n          throw new OFXException(\"Illegal OFX event before characters \\\"\" + chars + \"\\\" (\" + elementEvent.getEventType() + \")!\");\n        }\n        else {\n          var value: string = elementEvent.getEventValue();\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Element \" + value + \" processed with value \" + chars);\n          }\n          this.ofxHandler.onElement(value, chars);\n        }\n      }\n    }\n    else if (eventToFinish.getEventType() == OFXParseEventType.ELEMENT) {\n      //we're ending an aggregate (no character data on the stack).\n      if (qName === eventToFinish.getEventValue()) {\n        //the last element on the stack is ours; we're ending an OFX aggregate.\n        var value: string = eventToFinish.getEventValue();\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Ending aggregate \" + value);\n        }\n        this.ofxHandler.endAggregate(value);\n\n        var i = this.startedEvents.indexOf(eventToFinish);\n        console.assert(i !== -1);\n        if (i > -1) {\n          this.startedEvents.splice(i, 1);\n        }\n      }\n      else {\n        throw new OFXException(\"Unexpected end tag: \" + eventToFinish.getEventValue());\n      }\n    }\n    else {\n      throw new OFXException(\"Illegal OFX event: \" + eventToFinish.getEventType());\n    }\n  }\n\n  public ontext(value: string): void {\n    if (value.trim().length > 0) {\n      var event: OFXParseEvent;\n      if ((!this.eventStack.isEmpty()) && (this.eventStack.peek().getEventType() == OFXParseEventType.CHARACTERS)) {\n        //append the characters...\n        event = new OFXParseEvent(OFXParseEventType.CHARACTERS, this.eventStack.pop().getEventValue() + value);\n      }\n      else {\n        event = new OFXParseEvent(OFXParseEventType.CHARACTERS, value);\n      }\n      this.eventStack.push(event);\n    }\n  }\n}\n\nLOG = LogFactory.getLog(OFXV2ContentHandler);\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SAXParser } from \"sax\";\nimport * as sax from \"sax\";\nimport { Log, LogFactory } from \"../log/Log\";\nimport { OFXReader } from \"./OFXReader\";\nimport { OFXHandler } from \"./OFXHandler\";\nimport { DefaultHandler } from \"./DefaultHandler\";\nimport { StringReader } from \"./StringReader\";\nimport { OFXParseException } from \"./OFXParseException\";\nimport { OFXV2ContentHandler } from \"./OFXV2ContentHandler\";\n\nvar LOG: Log;\n\nfunction arraysEqual(a1: Array<string>, a2: Array<string>) {\n  if(a1.length !== a2.length) {\n    return false;\n  }\n  for(var i=0; i<a1.length; i++) {\n    if(a1[i] !== a2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Base class for an OFX reader.  Parses the headers and determines whether we're parsing an\n * OFX v2 or OFX v1 element.  For OFX v2, uses a standard SAX library.\n *\n * @author Ryan Heaton\n */\nexport /*abstract*/ class BaseOFXReader implements OFXReader {\n  public static OFX_2_PROCESSING_INSTRUCTION_PATTERN: RegExp = /<\\\\?OFX ([^\\\\?]+)\\\\?>/;\n  private contentHandler: OFXHandler;\n\n  constructor() {\n    this.contentHandler = new DefaultHandler();\n  }\n\n  /**\n   * The content handler.\n   *\n   * @return The content handler.\n   */\n  public getContentHandler(): OFXHandler {\n    return this.contentHandler;\n  }\n\n  /**\n   * The content handler.\n   *\n   * @param handler The content handler.\n   */\n  public setContentHandler(handler: OFXHandler): void {\n    this.contentHandler = handler;\n  }\n\n  /**\n   * Parse the reader, including the headers.\n   *\n   * @param reader The reader.\n   */\n  public parse(reader: StringReader): void  {\n    var header: string = \"\";\n    var firstElementStart = this.getFirstElementStart();\n    var buffer: Array<string> = new Array(firstElementStart.length);\n    reader.mark(/*firstElementStart.length*/);\n    var ch: any = reader.read(buffer);\n    while ((ch != -1) && (!arraysEqual(buffer, firstElementStart))) {\n      if (!this.contains(buffer, '<')) {\n        //if the buffer contains a '<', then we might already have marked the beginning.\n        reader.mark(/*firstElementStart.length*/);\n      }\n      ch = reader.read();\n      var shifted: string = this.shiftAndAppend(buffer, ch);\n      header += shifted;\n    }\n\n    if (ch == -1) {\n      throw new OFXParseException(\"Invalid OFX: no root <OFX> element!\");\n    }\n    else {\n      var matches = BaseOFXReader.OFX_2_PROCESSING_INSTRUCTION_PATTERN.exec(header);\n      if (matches) {\n        if (LOG.isInfoEnabled()) {\n          LOG.info(\"Processing OFX 2 header...\");\n        }\n\n        this.processOFXv2Headers(matches[1]);\n        reader.reset();\n        this.parseV2FromFirstElement(reader.remainder());\n      }\n      else {\n        LOG.info(\"Processing OFX 1 headers...\");\n        this.processOFXv1Headers(header);\n        reader.reset();\n        this.parseV1FromFirstElement(reader.remainder());\n      }\n    }\n  }\n\n  /**\n   * The first characters of the first OFX element, '<', 'O', 'F', 'X'\n   *\n   * @return The first characters of the OFX element.\n   */\n  protected getFirstElementStart(): Array<string> {\n    return [ '<', 'O', 'F', 'X' ];\n  }\n\n  /**\n   * Whether the specified buffer contains the specified character.\n   *\n   * @param buffer The buffer.\n   * @param c The character to search for.\n   * @return Whether the specified buffer contains the specified character.\n   */\n  private contains(buffer: Array<string>, c: string): boolean {\n    for (var i=0; i<buffer.length; i++) {\n      var ch = buffer[i];\n      if (ch === c) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private shiftAndAppend(buffer: Array<string>, c: string): string {\n    var shifted = buffer[0];\n    for (var i = 0; i + 1 < buffer.length; i++) {\n      buffer[i] = buffer[i + 1];\n    }\n    buffer[buffer.length - 1] = c;\n    return shifted;\n  }\n\n  /**\n   * Parse an OFX version 1 stream from the first OFX element (defined by the {@link #getFirstElementStart() first element characters}).\n   *\n   * @param text The text.\n   */\n  protected parseV1FromFirstElement(text: string): void {\n    var strict = false;\n    var parser: SAXParser = sax.parser(strict, {});\n    var handler = new OFXV2ContentHandler(this.getContentHandler());\n    handler.install(parser);\n    parser.write(text);\n  }\n\n  /**\n   * Parse an OFX version 2 stream from the first OFX element (defined by the {@link #getFirstElementStart() first element characters}).\n   *\n   * @param text The text.\n   */\n  protected parseV2FromFirstElement(text: string): void {\n    var strict = true;\n    var parser: SAXParser = sax.parser(strict, {});\n    var handler = new OFXV2ContentHandler(this.getContentHandler());\n    handler.install(parser);\n    parser.write(text);\n  }\n\n  /**\n   * Process the given characters as OFX version 1 headers.\n   *\n   * @param chars The characters to process.\n   */\n  protected processOFXv1Headers(chars: string): void {\n    var lines: Array<string> = chars.split(/(\\n|\\r\\n)/);\n    for(var i=0; i<lines.length; i++) {\n      var line: string = lines[i];\n      var colonIndex: number = line.indexOf(':');\n      if (colonIndex >= 0) {\n        var name: string = line.substring(0, colonIndex);\n        var value: string = line.length > colonIndex ? line.substring(colonIndex + 1) : \"\";\n        this.contentHandler.onHeader(name, value);\n      }\n    }\n  }\n\n  /**\n   * Process the given characters as OFX version 2 headers.\n   *\n   * @param chars The characters to process.\n   */\n  protected processOFXv2Headers(chars: string) /*throws OFXParseException*/: void {\n    var nameValuePairs: string[] = chars.split(\"\\\\s+\");\n    for (var nameValuePair of nameValuePairs) {\n      var equalsIndex: number = nameValuePair.indexOf('=');\n      if (equalsIndex >= 0) {\n        var name: string = nameValuePair.substring(0, equalsIndex);\n        var value: string = nameValuePair.length > equalsIndex ? nameValuePair.substring(equalsIndex + 1) : \"\";\n        value = value.replace('\"', ' ');\n        value = value.replace('\\'', ' ');\n        value = value.trim();\n        this.contentHandler.onHeader(name, value);\n      }\n    }\n  }\n}\n\nLOG = LogFactory.getLog(BaseOFXReader);\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { OFXParseException } from \"./OFXParseException\";\n\n/**\n * @author Ryan Heaton\n */\nexport class OFXSyntaxException extends OFXParseException {\n\n  constructor(message: string) {\n    super(message);\n  }\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Log, LogFactory } from \"../log/Log\";\nimport { AggregateInfo } from \"./AggregateInfo\";\nimport { OFXException } from \"../OFXException\";\nimport { OFXHandler } from \"./OFXHandler\";\nimport { Stack } from \"../collections/Stack\";\nimport { StringConversion } from \"./StringConversion\";\nimport { AggregateIntrospector } from \"./AggregateIntrospector\";\nimport { AggregateAttribute, AggregateAttributeType } from \"./AggregateAttribute\";\nimport { OFXSyntaxException } from \"./OFXSyntaxException\";\n\n\nvar LOG: Log;\n\nclass AggregateInfoHolder {\n  public aggregate: Object;\n  public info: AggregateInfo;\n  public aggregateName: string;\n  public currentAttributeIndex: number;\n\n  constructor(arg1: string | Object, arg2?: AggregateInfo, arg3?: string) {\n    this.currentAttributeIndex = 0;\n    switch(arguments.length) {\n      case 1:\n        this.AggregateInfoHolder1.apply(this, arguments);\n        break;\n\n      case 3:\n        this.AggregateInfoHolder3.apply(this, arguments);\n        break;\n\n      default:\n        throw new OFXException(\"invalid number of arguments\");\n    }\n  }\n\n  private AggregateInfoHolder1(ignoredAggregateName: string) {\n    this.aggregate = null;\n    this.info = null;\n    this.aggregateName = ignoredAggregateName;\n  }\n\n  private AggregateInfoHolder3(aggregate: Object, info: AggregateInfo, aggregateName: string) {\n    this.aggregateName = aggregateName;\n    this.aggregate = aggregate;\n    this.info = info;\n  }\n\n  public isBeingSkipped(): boolean {\n    return this.aggregate == null || this.info == null;\n  }\n\n  public isSkipping(aggregateName: string): boolean {\n    return this.isBeingSkipped() && aggregateName === this.aggregateName;\n  }\n}\n\n\n/**\n * Content handler that manages the aggregate using a stack-based implementation.\n *\n * @author Ryan Heaton\n */\nexport class AggregateStackContentHandler<A> implements OFXHandler {\n\n  private stack: Stack<AggregateInfoHolder> = new Stack<AggregateInfoHolder>();\n  private conversion: StringConversion;\n  private parsingRoot: boolean = false;\n\n  constructor(root: A, conversion: StringConversion) {\n    this.stack = new Stack<AggregateInfoHolder>();\n    this.parsingRoot = false;\n\n    var aggregateInfo: AggregateInfo = AggregateIntrospector.getAggregateInfo(root.constructor);\n    if (aggregateInfo == null) {\n      throw new OFXException(\"Unable to marshal object of type '\" + root.constructor.name + \"' (no aggregate metadata found).\");\n    }\n\n    this.stack.push(new AggregateInfoHolder(root, aggregateInfo, aggregateInfo.getName()));\n    this.conversion = conversion;\n  }\n\n  public onHeader(name: string, value: string): void {\n    var headerType: any = this.stack.peek().info.getHeaderType(name);\n    if (headerType != null) {\n      this.stack.peek().info.setHeader(this.stack.peek().aggregate, name, this.conversion.fromString(headerType, value));\n    }\n  }\n\n  public onElement(name: string, value: string): void {\n    if (!this.stack.peek().isBeingSkipped()) {\n      var attribute: AggregateAttribute = this.stack.peek().info.getAttribute(name, this.stack.peek().currentAttributeIndex);\n      if (attribute != null && attribute.getType() == AggregateAttributeType.ELEMENT) {\n        try {\n          attribute.set(this.conversion.fromString(attribute.getAttributeType(), value), this.stack.peek().aggregate);\n        }\n        catch (e) {\n          LOG.error(\"Unable to set \" + attribute.toString(), e);\n        }\n        this.stack.peek().currentAttributeIndex = attribute.getOrder();\n      }\n      else if (LOG.isInfoEnabled()) {\n        LOG.info(\"Element \" + name + \" is not supported on aggregate \" + this.stack.peek().info.getName() + \" at index \" + this.stack.peek().currentAttributeIndex);\n      }\n    }\n  }\n\n  public startAggregate(aggregateName: string): void {\n    if (this.stack.peek().isBeingSkipped()) {\n      this.stack.push(new AggregateInfoHolder(aggregateName));\n    }\n    else if (!this.parsingRoot) {\n      if (aggregateName !== this.stack.peek().info.getName()) {\n        throw new OFXException(\"Unexpected root element: \" + aggregateName);\n      }\n\n      this.parsingRoot = true;\n    }\n    else {\n      var infoHolder: AggregateInfoHolder;\n\n      var attribute: AggregateAttribute = this.stack.peek().info.getAttribute(aggregateName, this.stack.peek().currentAttributeIndex);\n      if (attribute != null) {\n        if (attribute.getType() == AggregateAttributeType.CHILD_AGGREGATE) {\n          var aggregateType: any;\n          if (attribute.isArray()) {\n            aggregateType = AggregateIntrospector.findAggregateByName(aggregateName);\n          }\n          else {\n            aggregateType = attribute.getAttributeType();\n          }\n\n          if (aggregateType != null) {\n            var aggregateInfo: AggregateInfo = AggregateIntrospector.getAggregateInfo(aggregateType);\n            if (aggregateInfo == null) {\n              throw new OFXException(\"Unable to locate aggregate info for type \" + aggregateType.getName());\n            }\n\n            var aggregate: Object = aggregate = new aggregateType();\n            infoHolder = new AggregateInfoHolder(aggregate, aggregateInfo, aggregateName);\n          }\n          else {\n            if (LOG.isInfoEnabled()) {\n              LOG.info(\"Child aggregate \" + aggregateName + \" is not supported on aggregate \" + this.stack.peek().info.getName() + \": name not assigned a type.\");\n            }\n\n            //element not supported.  push a skipping aggregate on the stack.\n            infoHolder = new AggregateInfoHolder(aggregateName);\n          }\n\n          this.stack.peek().currentAttributeIndex = attribute.getOrder();\n        }\n        else {\n          if (LOG.isInfoEnabled()) {\n            LOG.info(\"Child aggregate \" + aggregateName + \" is not supported on aggregate \" + this.stack.peek().info.getName() + \": no child aggregate, but there does exist an element by that name.\");\n          }\n\n          //child aggregate not supported.  push a skipping aggregate on the stack.\n          infoHolder = new AggregateInfoHolder(aggregateName);\n        }\n      }\n      else {\n        if (LOG.isInfoEnabled()) {\n          LOG.info(\"Child aggregate \" + aggregateName + \" is not supported on aggregate \" + this.stack.peek().info.getName() + \": no attributes found by that name after index \" + this.stack.peek().currentAttributeIndex);\n        }\n\n        //child aggregate not supported.  push a skipping aggregate on the stack.\n        infoHolder = new AggregateInfoHolder(aggregateName);\n      }\n\n      this.stack.push(infoHolder);\n    }\n  }\n\n  public endAggregate(aggregateName: string): void {\n    var infoHolder: AggregateInfoHolder = this.stack.pop();\n    if (aggregateName !== infoHolder.aggregateName) {\n      throw new OFXSyntaxException(\"Unexpected end aggregate \" + aggregateName + \". (Perhaps \" +\n        infoHolder.aggregateName + \" is an element with an empty value, making it impossible to parse.)\");\n    }\n\n    if (!this.stack.isEmpty()) {\n      if (!infoHolder.isSkipping(aggregateName)) {\n        //we're not skipping the top aggregate, so process it.\n        var attribute: AggregateAttribute = this.stack.peek().info.getAttribute(\n            aggregateName, this.stack.peek().currentAttributeIndex, infoHolder.aggregate.constructor);\n        try {\n          if (attribute != null) {\n            attribute.set(infoHolder.aggregate, this.stack.peek().aggregate);\n          } else {\n            if (LOG.isInfoEnabled()) {\n              LOG.info(\"Child aggregate \" + aggregateName + \" is not supported on aggregate \" + this.stack.peek().info.getName() + \": no attributes found by that name after index \" + this.stack.peek().currentAttributeIndex);\n            }\n          }\n        }\n        catch (e) {\n          LOG.error(\"Unable to set \" + attribute.toString(), e);\n        }\n        if (attribute != null) {\n          this.stack.peek().currentAttributeIndex = attribute.getOrder();\n        }\n      }\n    }\n    else {\n      //ended the root element.\n    }\n  }\n}\n\nLOG = LogFactory.getLog(AggregateStackContentHandler);\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { StringConversion } from \"./StringConversion\";\nimport { DefaultStringConversion } from \"./DefaultStringConversion\";\nimport { StringReader } from \"./StringReader\";\nimport { OFXReader } from \"./OFXReader\";\nimport { BaseOFXReader } from \"./BaseOFXReader\";\nimport { AggregateStackContentHandler } from \"./AggregateStackContentHandler\";\n\n\n/**\n * Unmarshaller for aggregate objects.\n *\n * @author Ryan Heaton\n */\nexport class AggregateUnmarshaller<A> {\n\n  private clazz: any;\n  private conversion: StringConversion;\n\n  constructor(clazz: any) {\n    this.clazz = clazz;\n    this.conversion = new DefaultStringConversion();\n  }\n\n  public unmarshal(arg: StringReader | string): A {\n    var stream: StringReader = (<any>arg instanceof StringReader) ? <StringReader>arg : new StringReader(<string>arg);\n    var aggregate: A = new this.clazz();\n    var reader: OFXReader = this.newReader();\n    reader.setContentHandler(new AggregateStackContentHandler<A>(aggregate, this.getConversion()));\n    reader.parse(stream);\n    return aggregate;\n  }\n\n  /**\n   * New OFX reader.\n   *\n   * @return new OFX reader.\n   */\n  protected newReader(): OFXReader {\n    return new BaseOFXReader();\n  }\n\n  /**\n   * The conversion.\n   *\n   * @return The conversion.\n   */\n  public getConversion(): StringConversion {\n    return this.conversion;\n  }\n\n  /**\n   * The conversion.\n   *\n   * @param conversion The conversion.\n   */\n  public setConversion(conversion: StringConversion): void {\n    this.conversion = conversion;\n  }\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ResponseMessage } from \"./ResponseMessage\";\nimport { MessageSetType } from \"./MessageSetType\";\n\n\n/**\n * A message set enclosed in a response envelope.\n *\n * @author Ryan Heaton\n */\nexport abstract class ResponseMessageSet /*implements Comparable<ResponseMessageSet>*/ {\n\n  private version: string;\n\n  public abstract getType(): MessageSetType\n\n  constructor() {\n    this.version = \"1\";\n  }\n\n  /**\n   * The version of this message set.\n   *\n   * @return The version of this message set.\n   */\n  public getVersion(): string {\n    return this.version;\n  }\n\n  /**\n   * The version of this message set.\n   *\n   * @param version The version of this message set.\n   */\n  public setVersion(version: string): void {\n    this.version = version;\n  }\n\n  /**\n   * The list of response messages.\n   *\n   * @return The list of response messages.\n   */\n  public abstract getResponseMessages(): Array<ResponseMessage>;\n/*\n  // Inherited.\n  public compareTo(o: ResponseMessageSet): number {\n    return getType().compareTo(o.getType());\n  }\n*/\n\n  public static contentCompare(left: ResponseMessageSet, right: ResponseMessageSet): number {\n    return left.getType() - right.getType();\n  }\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Aggregate_add } from \"../../meta/Aggregate_Add\";\nimport { Header_add } from \"../../meta/Header_add\";\nimport { ChildAggregate_add } from \"../../meta/ChildAggregate_add\";\nimport { ApplicationSecurity } from \"./ApplicationSecurity\";\nimport { SortedSet } from \"../../collections/SortedSet\";\nimport { ResponseMessageSet } from \"./ResponseMessageSet\";\nimport { SignonResponse } from \"./signon/SignonResponse\";\nimport { MessageSetType } from \"./MessageSetType\";\nimport { SignonResponseMessageSet } from \"./signon/SignonResponseMessageSet\";\n\n\n//import java.util.SortedSet;\n\n/**\n * Envelope for enclosing an OFX response.\n *\n * @author Ryan Heaton\n * @see \"Section 2.4.3, OFX Spec\"\n */\nexport class ResponseEnvelope {\n\n  //headers\n  private security: ApplicationSecurity;\n  private UID: string;\n\n  //content\n  private messageSets: SortedSet<ResponseMessageSet>;\n\n  /**\n   * The security of this envelope.\n   *\n   * @return The security of this envelope.\n   * @see \"Section 2.2, OFX spec\"\n   */\n  public getSecurity(): ApplicationSecurity {\n    return this.security;\n  }\n\n  /**\n   * The security of this envelope.\n   *\n   * @param security The security of this envelope.\n   * @see \"Section 2.2, OFX spec\"\n   */\n  public setSecurity(security: ApplicationSecurity): void {\n    this.security = security;\n  }\n\n  /**\n   * The UID for the envelope.\n   *\n   * @return The UID for the envelope.\n   * @see \"Section 2.2, OFX spec\"\n   */\n  public getUID(): string {\n    return this.UID;\n  }\n\n  /**\n   * The UID for the envelope.\n   *\n   * @param UID The UID for the envelope.\n   * @see \"Section 2.2, OFX spec\"\n   */\n  public setUID(UID: string): void {\n    this.UID = UID;\n  }\n\n  /**\n   * The message sets that make up the content of this response.\n   *\n   * @return The message sets that make up the content of this response.\n   * @see \"Section 2.4.5, OFX Spec\"\n   */\n  public getMessageSets(): SortedSet<ResponseMessageSet> {\n    return this.messageSets;\n  }\n\n  /**\n   * The message sets that make up the content of this response.\n   *\n   * @param messageSets The message sets that make up the content of this response.\n   * @see \"Section 2.4.5, OFX Spec\"\n   */\n  public setMessageSets(messageSets: SortedSet<ResponseMessageSet>): void {\n    this.messageSets = messageSets;\n  }\n\n  /**\n   * Helper method for looking up the signon response.\n   *\n   * @return The signon response, or null if none found.\n   */\n  public getSignonResponse(): SignonResponse {\n    var type: MessageSetType = MessageSetType.signon;\n    var message: ResponseMessageSet = this.getMessageSet(type);\n\n    if (message != null) {\n      return (<SignonResponseMessageSet> message).getSignonResponse();\n    }\n    else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the message set of the specified type.\n   *\n   * @param type The type.\n   * @return The message set, or null.\n   */\n  public getMessageSet(type: MessageSetType): ResponseMessageSet {\n    var message: ResponseMessageSet = null;\n    if (this.messageSets != null) {\n      for (var i in this.messageSets.values()) {\n        var messageSet: ResponseMessageSet = this.messageSets.values()[i];\n        if (messageSet.getType() == type) {\n          message = messageSet;\n          break;\n        }\n      }\n    }\n    return message;\n  }\n}\n\nAggregate_add( ResponseEnvelope, \"OFX\" );\nHeader_add(ResponseEnvelope, { name: \"SECURITY\", type: ApplicationSecurity, read: ResponseEnvelope.prototype.getSecurity, write: ResponseEnvelope.prototype.setSecurity });\nHeader_add(ResponseEnvelope, { name: \"NEWFILEUID\", type: String, read: ResponseEnvelope.prototype.getUID, write: ResponseEnvelope.prototype.setUID });\nChildAggregate_add(ResponseEnvelope, { order: 1, type: SortedSet, collectionEntryType: ResponseMessageSet, read: ResponseEnvelope.prototype.getMessageSets, write: ResponseEnvelope.prototype.setMessageSets });\n","export class OutputBuffer {\n  private data: Array<string>;\n\n  constructor() {\n    this.data = [];\n  }\n\n  public toString(encoding?: string): string {\n    return this.data.join('');\n  }\n\n  public append(data: string): void {\n    this.data.push(data);\n  }\n\n  public size(): number {\n    return this.data.reduce(function(previousValue: number, currentValue: string): number {\n      return currentValue.length;\n    }, 0);\n  }\n}\n\n\n\nexport class StreamWriter {\n  private out: OutputBuffer;\n  private encoding: string;\n\n  constructor(out: OutputBuffer, encoding: string) {\n    this.out = out;\n    this.encoding = encoding;\n  }\n\n\n  flush(): void {\n  }\n\n\n  close(): void {\n  }\n\n\n  write(data: string): void {\n    this.out.append(data);\n    //TODO\n    //Array.prototype.push.apply(this.out, data.split(''));\n  }\n\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { OFXWriter } from \"../OFXWriter\";\nimport { StreamWriter, OutputBuffer } from \"../StreamWriter\";\nimport { OFXException } from \"../../OFXException\";\nimport { StringMap } from \"../../collections/collections\";\n\n\n//import Map = java.util.Map;\n\n/**\n * OFX writer to SGML, suitable for OFX versions < 2.0.\n *\n * @author Ryan Heaton\n */\nexport class OFXV1Writer implements OFXWriter {\n\n  private LINE_SEPARATOR: string;\n  protected headersWritten: boolean;\n  protected writer: StreamWriter;\n  private writeAttributesOnNewLine: boolean;\n\n  constructor(out: OutputBuffer | StreamWriter) {\n    this.LINE_SEPARATOR = \"\\r\\n\";\n    this.headersWritten = false;\n    this.writeAttributesOnNewLine = false;\n\n    if(out instanceof StreamWriter) {\n      this.writer = out;\n    } else if(out instanceof OutputBuffer) {\n      this.writer = this.newWriter(out);\n    } else {\n      throw new OFXException(\"invalid parameter type\");\n    }\n  }\n\n  protected newWriter(out: OutputBuffer): StreamWriter {\n    return new StreamWriter(out, \"ISO-8859-1\");\n  }\n\n  public writeHeaders(headers: StringMap) /*throws IOException*/: void {\n    if (this.headersWritten) {\n      throw new OFXException(\"Headers have already been written!\");\n    }\n\n    //write out the 1.0 headers\n    this.println(\"OFXHEADER:100\");\n    this.println(\"DATA:OFXSGML\");\n    this.println(\"VERSION:102\");\n\n    this.print(\"SECURITY:\");\n    var security: string = headers[\"SECURITY\"];\n    if (security == null) {\n      security = \"NONE\";\n    }\n    this.println(security);\n    this.println(\"ENCODING:USASCII\"); //too many ofx v1 servers don't read unicode...\n    this.println(\"CHARSET:1252\"); //windows-compatible.\n    this.println(\"COMPRESSION:NONE\");\n    this.print(\"OLDFILEUID:\");\n    var olduid: string = headers[\"OLDFILEUID\"];\n    if (olduid == null) {\n      olduid = \"NONE\";\n    }\n    this.println(olduid);\n    this.print(\"NEWFILEUID:\");\n    var uid: string = headers[\"NEWFILEUID\"];\n    if (uid == null) {\n      uid = \"NONE\";\n    }\n    this.println(uid);\n    this.println();\n\n    this.headersWritten = true;\n  }\n\n  public writeStartAggregate(aggregateName: string) /*throws IOException*/: void {\n    this.print('<');\n    this.print(aggregateName);\n    this.print('>');\n    if (this.isWriteAttributesOnNewLine()) {\n      this.println();\n    }\n  }\n\n  public writeElement(name: string, value: string) /*throws IOException*/: void {\n    if ((value == null) || (\"\" === value)) {\n      throw new OFXException(\"Illegal element value for element '\" + name + \"' (value must not be null or empty).\");\n    }\n\n    //todo: optimize performance of the character escaping\n    if (value.indexOf('&') >= 0) {\n      value = value.replace(/\\\\&/g, \"&amp;\");\n    }\n\n    if (value.indexOf('<') >= 0) {\n      value = value.replace(/</g, \"&lt;\");\n    }\n\n    if (value.indexOf('>') >= 0) {\n      value = value.replace(/>/g, \"&gt;\");\n    }\n\n    this.print('<');\n    this.print(name);\n    this.print('>');\n    this.print(value);\n    if (this.isWriteAttributesOnNewLine()) {\n      this.println();\n    }\n  }\n\n  public writeEndAggregate(aggregateName: string) /*throws IOException*/:void {\n    this.print(\"</\");\n    this.print(aggregateName);\n    this.print('>');\n    if (this.isWriteAttributesOnNewLine()) {\n      this.println();\n    }\n  }\n\n  public isWriteAttributesOnNewLine(): boolean {\n    return this.writeAttributesOnNewLine;\n  }\n\n  public setWriteAttributesOnNewLine(writeAttributesOnNewLine: boolean): void {\n    this.writeAttributesOnNewLine = writeAttributesOnNewLine;\n  }\n\n  public close() /*throws IOException*/: void {\n    this.flush();\n    this.writer.close();\n  }\n\n  public flush() /*throws IOException*/: void {\n    this.writer.flush();\n  }\n\n  /*protected*/ println(line: string = null) /*throws IOException*/: void {\n    if(line != null) {\n      this.print(line);\n    }\n    this.writer.write(this.LINE_SEPARATOR);\n  }\n\n  /*protected*/ print(line: string) /*throws IOException*/: void {\n    this.writer.write(line == null ? \"null\" : line);\n  }\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Log, LogFactory } from \"../../log/Log\";\nimport { OFXException } from \"../../OFXException\";\nimport { OFXConnection } from \"./OFXConnection\";\nimport { AggregateMarshaller } from \"../../io/AggregateMarshaller\";\nimport { AggregateUnmarshaller } from \"../../io/AggregateUnmarshaller\";\nimport { ResponseEnvelope } from \"../../domain/data/ResponseEnvelope\";\nimport { RequestEnvelope } from \"../../domain/data/RequestEnvelope\";\nimport { OutputBuffer } from \"../../io/StreamWriter\";\nimport { OFXWriter } from \"../../io/OFXWriter\";\nimport { StringReader } from \"../../io/StringReader\";\nimport { OFXConnectionException } from \"./OFXConnectionException\";\nimport { OFXV1Writer } from \"../../io/v1/OFXV1Writer\";\n\n\n// import java.io.*;\n// import java.net.HttpURLConnection;\n// import java.net.URL;\n\n// import org.apache.commons.logging.Log;\n// import org.apache.commons.logging.LogFactory;\n\nvar LOG: Log;\n\nexport type HeadersObject = { [header: string]: string };\nexport type AjaxHandler = (url: string, verb: string, headers: HeadersObject, data: string, async: boolean) => Promise<string>;\n\n\nfunction DefaultAjaxHandler(url: string, verb: string, headers: HeadersObject, data: string, async: boolean): Promise<string> {\n  return new Promise(function(resolve, reject) {\n    var request = new XMLHttpRequest();\n    var onloadCalled: boolean = false;\n    request.open(\"POST\", url, async);\n    for (var header in headers) {\n      request.setRequestHeader(header, headers[header]);\n    }\n    request.onload = function() {\n      onloadCalled = true;\n      if (request.status >= 200 && request.status < 300) {\n        resolve(request.responseText);\n      } else if (request.status >= 400 && request.status < 500) {\n        reject(new OFXException(\"Error \" + request.status + \" with client request: \" + request.responseText));\n      } else {\n        reject(new OFXException(\"Invalid response code from OFX server: \" + request.status));\n      }\n    };\n    request.onerror = function() {\n      reject(new OFXException(\"Network error\"));\n    };\n\n    request.send(data);\n\n    if (!async && !onloadCalled) {\n      (<any>request).onload();\n    }\n  });\n}\n\n\n/**\n * Base implementation for an OFX connection.\n *\n * @author Ryan Heaton\n */\nexport class OFXV1Connection implements OFXConnection {\n\n  private async: boolean;\n  private marshaller: AggregateMarshaller;\n  private unmarshaller: AggregateUnmarshaller<ResponseEnvelope>;\n  private ajax: AjaxHandler;\n\n  constructor() {\n    this.async = true;\n    this.marshaller = new AggregateMarshaller();\n    this.unmarshaller = new AggregateUnmarshaller<ResponseEnvelope>(ResponseEnvelope);\n    this.ajax = DefaultAjaxHandler;\n  }\n\n  // Inherited.\n  public sendRequest(request: RequestEnvelope, url: string): Promise<ResponseEnvelope> {\n//    if (!url.protocol().toLowerCase().startsWith(\"http\")) {\n//      throw new OFXException(\"Invalid URL: \" + url + \" only http(s) is supported.\");\n//    }\n\n    //marshal to memory so we can determine the size...\n    var outBuffer = new OutputBuffer();\n    var ofxWriter: OFXWriter = this.newOFXWriter(outBuffer);\n    this.getMarshaller().marshal(request, ofxWriter);\n    ofxWriter.close();\n    this.logRequest(outBuffer);\n    return this.sendBuffer(url, outBuffer)\n    .then((in_: string): ResponseEnvelope => {\n      this.logResponse(in_);\n      return this.unmarshal(in_);\n    });\n  }\n\n  /**\n   * Log a request buffer.\n   *\n   * @param outBuffer The buffer to log.\n   */\n  protected logRequest(outBuffer: OutputBuffer) /*throws UnsupportedEncodingException*/: void {\n    if (LOG.isInfoEnabled()) {\n      LOG.info(\"Marshalling \" + outBuffer.size() + \" bytes of the OFX request.\");\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(outBuffer.toString(\"utf-8\"));\n      }\n    }\n  }\n\n  protected logResponse(inBuffer: string) {\n    if (LOG.isInfoEnabled()) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Received OFX response:\", inBuffer);\n      }\n    }\n  }\n\n  /**\n   * Send the specified buffer to the specified URL.\n   *\n   * @param url The URL.\n   * @param outBuffer The buffer.\n   * @return a promise that resolves with the response.\n   */\n  protected sendBuffer(url: string, outBuffer: OutputBuffer) /*throws IOException, OFXConnectionException*/: Promise<string> {\n    var outText = outBuffer.toString();\n    var async: boolean = this.getAsync();\n    var headers: HeadersObject = {\n      \"Content-Type\": \"application/x-ofx\",\n      \"Accept\": \"*/*, application/x-ofx\"\n    };\n\n    return this.ajax(url, \"POST\", headers, outText, async);\n  }\n\n  /**\n   * Unmarshal the input stream.\n   *\n   * @param in The input stream.\n   * @return The response envelope.\n   */\n  protected unmarshal(in_: string) /*throws IOException, OFXConnectionException*/: ResponseEnvelope {\n    try {\n      var reader = new StringReader(in_);\n      return this.getUnmarshaller().unmarshal(reader);\n    }\n    catch (e) {\n      throw new OFXConnectionException(\"Unable to parse the OFX response.\", e);\n    }\n  }\n\n  /**\n   * Create a new OFX writer.\n   *\n   * @param out The output stream for the writer.\n   * @return The OFX writer.\n   */\n  protected newOFXWriter(out: OutputBuffer): OFXWriter {\n    return new OFXV1Writer(out);\n  }\n\n  /**\n   * The marshaller.\n   *\n   * @return The marshaller.\n   */\n  public getMarshaller(): AggregateMarshaller {\n    return this.marshaller;\n  }\n\n  /**\n   * The marshaller.\n   *\n   * @param marshaller The marshaller.\n   */\n  public setMarshaller(marshaller: AggregateMarshaller): void {\n    this.marshaller = marshaller;\n  }\n\n  /**\n   * The unmarshaller.\n   *\n   * @return The unmarshaller.\n   */\n  public getUnmarshaller(): AggregateUnmarshaller<ResponseEnvelope> {\n    return this.unmarshaller;\n  }\n\n  /**\n   * The unmarshaller.\n   *\n   * @param unmarshaller The unmarshaller.\n   */\n  public setUnmarshaller(unmarshaller: AggregateUnmarshaller<ResponseEnvelope>): void {\n    this.unmarshaller = unmarshaller;\n  }\n\n  /**\n   * Async mode\n   *\n   * @return {bool} Whether in async mode.\n   */\n  public getAsync() {\n    return this.async;\n  }\n\n\n  /**\n   * Async mode\n   *\n   * @param {bool} async async mode.\n   */\n  public setAsync(async: boolean) {\n    this.async = async;\n  }\n\n  /**\n   * Async mode\n   *\n   * @return {bool} Whether in async mode.\n   */\n  public getAjax() {\n    return this.ajax;\n  }\n\n\n  /**\n   * Async mode\n   *\n   * @param {bool} async async mode.\n   */\n  public setAjax(ajax: AjaxHandler) {\n    this.ajax = ajax;\n  }\n\n}\n\nLOG = LogFactory.getLog(OFXV1Connection);\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { OFXV1Writer } from \"../v1/OFXV1Writer\";\nimport { OutputBuffer, StreamWriter } from \"../StreamWriter\";\nimport { StringMap } from \"../../collections/collections\";\nimport { OFXException } from \"../../OFXException\";\n\n\n/**\n * OFX writer to XML, suitable for OFX version 2.0.\n *\n * @author Ryan Heaton\n */\nexport class OFXV2Writer extends OFXV1Writer {\n\n  constructor(out: OutputBuffer | StreamWriter) {\n    super(out);\n  }\n\n  //@Override\n  protected newWriter(out: OutputBuffer) /*throws UnsupportedEncodingException*/: StreamWriter {\n    return new StreamWriter(out, \"UTF-8\");\n  }\n\n  public writeHeaders(headers: StringMap) /*throws IOException*/: void {\n    if (this.headersWritten) {\n      throw new OFXException(\"Headers have already been written!\");\n    }\n\n    //write out the XML PI\n    this.print(\"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\" ?>\");\n    var security: string = headers[\"SECURITY\"];\n    if (security == null) {\n      security = \"NONE\";\n    }\n    var olduid: string = headers[\"OLDFILEUID\"];\n    if (olduid == null) {\n      olduid = \"NONE\";\n    }\n    // println(olduid);\n    var uid: string = headers[\"NEWFILEUID\"];\n    if (uid == null) {\n      uid = \"NONE\";\n    }\n\n    this.print(\"<?OFX OFXHEADER=\\\"200\\\" VERSION=\\\"202\\\" SECURITY=\\\"\" + security + \"\\\" OLDFILEUID=\\\"\" + olduid + \"\\\" NEWFILEUID=\\\"\" + uid + \"\\\"?>\");\n    this.headersWritten = true;\n  }\n\n  public writeElement(name: string, value: string): void {\n    super.writeElement(name, value);\n    this.print(\"</\");\n    this.print(name);\n    this.print('>');\n  }\n\n  //@Override\n  public isWriteAttributesOnNewLine(): boolean {\n    return false;\n  }\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { OFXV1Connection } from \"./OFXV1Connection\";\nimport { OFXWriter } from \"../../io/OFXWriter\";\nimport { OFXV2Writer } from \"../../io/v2/OFXV2Writer\";\nimport { OutputBuffer } from \"../../io/StreamWriter\";\n\n/**\n * @author Ryan Heaton\n */\nexport class OFXV2Connection extends OFXV1Connection {\n\n  //@Override\n  protected newOFXWriter(out: OutputBuffer): OFXWriter {\n    return new OFXV2Writer(out);\n  }\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @author Ryan Heaton\n */\nexport enum AccountStatus {\n\n  /**\n   * Available, but not yet requested.\n   */\n  AVAIL,\n\n  /**\n   * Requested, but not yet available.\n   */\n  PEND,\n\n  /**\n   * Active.\n   */\n  ACTIVE\n\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { AccountInfo } from \"../common/AccountInfo\";\nimport { BankAccountDetails } from \"./BankAccountDetails\";\nimport { AccountStatus } from \"../common/AccountStatus\";\nimport { AccountDetails } from \"../common/AccountDetails\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\nimport { Element_add } from \"../../../meta/Element_add\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class BankAccountInfo implements AccountInfo {\n\n  private bankAccount: BankAccountDetails;\n  private supportsTransactionDetailOperations: boolean;\n  private supportsTransferToOtherAccountOperations: boolean;\n  private supportsTransferFromOtherAccountOperations: boolean;\n  private status: AccountStatus;\n\n  /**\n   * The bank account this information is referencing.\n   *\n   * @return The bank account this information is referencing.\n   */\n  public getBankAccount(): BankAccountDetails {\n    return this.bankAccount;\n  }\n\n  /**\n   * The bank account this information is referencing.\n   *\n   * @param bankAccount The bank account this information is referencing.\n   */\n  public setBankAccount(bankAccount: BankAccountDetails): void {\n    this.bankAccount = bankAccount;\n  }\n\n  // Inherited.\n  public getAccountDetails(): AccountDetails {\n    return this.getBankAccount();\n  }\n\n  /**\n   * Whether this account supports download of transaction details.\n   *\n   * @return Whether this account supports download of transaction details.\n   */\n  public getSupportsTransactionDetailOperations(): boolean {\n    return this.supportsTransactionDetailOperations;\n  }\n\n  /**\n   * Whether this account supports download of transaction details.\n   *\n   * @param supportsTransactionDetailOperations Whether this account supports download of transaction details.\n   */\n  public setSupportsTransactionDetailOperations(supportsTransactionDetailOperations: boolean): void {\n    this.supportsTransactionDetailOperations = supportsTransactionDetailOperations;\n  }\n\n  /**\n   * Whether this account supports transfer operations to other accounts.\n   *\n   * @return Whether this account supports transfer operations to other accounts.\n   */\n  public getSupportsTransferToOtherAccountOperations(): boolean {\n    return this.supportsTransferToOtherAccountOperations;\n  }\n\n  /**\n   * Whether this account supports transfer operations to other accounts.\n   *\n   * @param supportsTransferToOtherAccountOperations Whether this account supports transfer operations to other accounts.\n   */\n  public setSupportsTransferToOtherAccountOperations(supportsTransferToOtherAccountOperations: boolean): void {\n    this.supportsTransferToOtherAccountOperations = supportsTransferToOtherAccountOperations;\n  }\n\n  /**\n   * Whether this account supports transfer operations from other accounts.\n   *\n   * @return Whether this account supports transfer operations from other accounts.\n   */\n  public getSupportsTransferFromOtherAccountOperations(): boolean {\n    return this.supportsTransferFromOtherAccountOperations;\n  }\n\n  /**\n   * Whether this account supports transfer operations from other accounts.\n   *\n   * @param supportsTransferFromOtherAccountOperations Whether this account supports transfer operations from other accounts.\n   */\n  public setSupportsTransferFromOtherAccountOperations(supportsTransferFromOtherAccountOperations: boolean): void {\n    this.supportsTransferFromOtherAccountOperations = supportsTransferFromOtherAccountOperations;\n  }\n\n  /**\n   * The account status.\n   *\n   * @return The account status.\n   */\n  public getStatus(): AccountStatus {\n    return this.status;\n  }\n\n  /**\n   * The account status.\n   *\n   * @param status The account status.\n   */\n  public setStatus(status: AccountStatus): void {\n    this.status = status;\n  }\n}\n\nAggregate_add( BankAccountInfo, \"BANKACCTINFO\" );\nChildAggregate_add(BankAccountInfo, { name: \"BANKACCTFROM\", required: true, order: 0, type: BankAccountDetails, read: BankAccountInfo.prototype.getBankAccount, write: BankAccountInfo.prototype.setBankAccount });\nElement_add(BankAccountInfo, { name: \"SUPTXDL\", required: true, order: 10, type: Boolean, read: BankAccountInfo.prototype.getSupportsTransactionDetailOperations, write: BankAccountInfo.prototype.setSupportsTransactionDetailOperations });\nElement_add(BankAccountInfo, { name: \"XFERSRC\", required: true, order: 20, type: Boolean, read: BankAccountInfo.prototype.getSupportsTransferToOtherAccountOperations, write: BankAccountInfo.prototype.setSupportsTransferToOtherAccountOperations });\nElement_add(BankAccountInfo, { name: \"XFERDEST\", required: true, order: 30, type: Boolean, read: BankAccountInfo.prototype.getSupportsTransferFromOtherAccountOperations, write: BankAccountInfo.prototype.setSupportsTransferFromOtherAccountOperations });\nElement_add(BankAccountInfo, { name: \"SVCSTATUS\", required: true, order: 40, type: AccountStatus, read: BankAccountInfo.prototype.getStatus, write: BankAccountInfo.prototype.setStatus });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Type of investment transaction.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum InvestmentTransactionType {\n\n  BUY_DEBT,\n  BUY_MUTUAL_FUND,\n  BUY_OPTION,\n  BUY_OTHER,\n  BUY_STOCK,\n  CLOSE_OPTION,\n  INCOME,\n  INVESTMENT_EXPENSE,\n  JOURNAL_FUND,\n  JOURNAL_SECURITY,\n  MARGIN_INTEREST,\n  REINVEST_INCOME,\n  RETURN_OF_CAPITAL,\n  SELL_DEBT,\n  SELL_MUTUAL_FUND,\n  SELL_OPTION,\n  SELL_OTHER,\n  SELL_STOCK,\n  SPLIT,\n  TRANSFER\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @author Ryan Heaton\n */\nexport enum CorrectionAction {\n\n  REPLACE,\n\n  DELETE\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../meta/Element_add\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class Payee {\n\n  private name: string;\n  private address1: string;\n  private address2: string;\n  private address3: string;\n  private city: string;\n  private state: string;\n  private zip: string;\n  private country: string;\n  private phone: string;\n\n  /**\n   * The name of the payee.\n   *\n   * @return The name of the payee.\n   */\n  public getName(): string {\n    return this.name;\n  }\n\n  /**\n   * The name of the payee.\n   *\n   * @param name The name of the payee.\n   */\n  public setName(name: string): void {\n    this.name = name;\n  }\n\n  /**\n   * The address of the payee.\n   *\n   * @return The address of the payee.\n   */\n  public getAddress1(): string {\n    return this.address1;\n  }\n\n  /**\n   * The address of the payee.\n   *\n   * @param address1 The address of the payee.\n   */\n  public setAddress1(address1: string): void {\n    this.address1 = address1;\n  }\n\n  /**\n   * The address of the payee.\n   *\n   * @return The address of the payee.\n   */\n  public getAddress2(): string {\n    return this.address2;\n  }\n\n  /**\n   * The address of the payee.\n   *\n   * @param address2 The address of the payee.\n   */\n  public setAddress2(address2: string): void {\n    this.address2 = address2;\n  }\n\n  /**\n   * The address of the payee.\n   *\n   * @return The address of the payee.\n   */\n  public getAddress3(): string {\n    return this.address3;\n  }\n\n  /**\n   * The address of the payee.\n   *\n   * @param address3 The address of the payee.\n   */\n  public setAddress3(address3: string): void {\n    this.address3 = address3;\n  }\n\n  /**\n   * The city of the payee.\n   *\n   * @return The city of the payee.\n   */\n  public getCity(): string {\n    return this.city;\n  }\n\n  /**\n   * The city of the payee.\n   *\n   * @param city The city of the payee.\n   */\n  public setCity(city: string): void {\n    this.city = city;\n  }\n\n  /**\n   * The state of this payee.\n   *\n   * @return The state of this payee.\n   */\n  public getState(): string {\n    return this.state;\n  }\n\n  /**\n   * The state of this payee.\n   *\n   * @param state The state of this payee.\n   */\n  public setState(state: string): void {\n    this.state = state;\n  }\n\n  /**\n   * The postal code of this payee.\n   *\n   * @return The postal code of this payee.\n   */\n  public getZip(): string {\n    return this.zip;\n  }\n\n  /**\n   * The postal code of this payee.\n   *\n   * @param zip The postal code of this payee.\n   */\n  public setZip(zip: string): void {\n    this.zip = zip;\n  }\n\n  /**\n   * The country code for this payee.\n   *\n   * @return The country code for this payee.\n   * @see java.util.Locale#getISO3Country()\n   */\n  public getCountry(): string {\n    return this.country;\n  }\n\n  /**\n   * The country code for this payee.\n   *\n   * @param country The country code for this payee.\n   */\n  public setCountry(country: string): void {\n    this.country = country;\n  }\n\n  /**\n   * The phone number.\n   *\n   * @return The phone number.\n   */\n  public getPhone(): string {\n    return this.phone;\n  }\n\n  /**\n   * The phone number.\n   *\n   * @param phone The phone number.\n   */\n  public setPhone(phone: string): void {\n    this.phone = phone;\n  }\n\n}\n\nAggregate_add( Payee, \"PAYEE\" );\nElement_add(Payee, { name: \"NAME\", order: 30, type: String, read: Payee.prototype.getName, write: Payee.prototype.setName });\nElement_add(Payee, { name: \"ADDR1\", required: true, order: 40, type: String, read: Payee.prototype.getAddress1, write: Payee.prototype.setAddress1 });\nElement_add(Payee, { name: \"ADDR2\", order: 50, type: String, read: Payee.prototype.getAddress2, write: Payee.prototype.setAddress2 });\nElement_add(Payee, { name: \"ADDR3\", order: 60, type: String, read: Payee.prototype.getAddress3, write: Payee.prototype.setAddress3 });\nElement_add(Payee, { name: \"CITY\", required: true, order: 70, type: String, read: Payee.prototype.getCity, write: Payee.prototype.setCity });\nElement_add(Payee, { name: \"STATE\", required: true, order: 80, type: String, read: Payee.prototype.getState, write: Payee.prototype.setState });\nElement_add(Payee, { name: \"POSTALCODE\", required: true, order: 90, type: String, read: Payee.prototype.getZip, write: Payee.prototype.setZip });\nElement_add(Payee, { name: \"COUNTRY\", required: true, order: 100, type: String, read: Payee.prototype.getCountry, write: Payee.prototype.setCountry });\nElement_add(Payee, { name: \"PHONE\", order: 110, type: String, read: Payee.prototype.getPhone, write: Payee.prototype.setPhone });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../meta/Element_add\";\n\n\n/**\n * @author Ryan Heaton\n * @see \"Section 5.2, OFX Spec\"\n */\nexport class Currency {\n\n  private code: string;\n  private exchangeRate: number;\n\n  constructor() {\n    this.code = \"USD\"; //java.util.Currency.getInstance(Locale.US).getCurrencyCode().toUpperCase();\n  }\n\n  /**\n   * The currency code.\n   *\n   * @return The currency code.\n   * @see java.util.Currency#getCurrencyCode()\n   */\n  public getCode(): string {\n    return this.code;\n  }\n\n  /**\n   * The currency code\n   *\n   * @param code The currency code\n   */\n  public setCode(code: string): void {\n    this.code = code;\n  }\n\n  /**\n   * The exchange rate.\n   *\n   * @return The exchange rate.\n   */\n  public getExchangeRate(): number {\n    return this.exchangeRate;\n  }\n\n  /**\n   * The exchange rate.\n   *\n   * @param exchangeRate The exchange rate.\n   */\n  public setExchangeRate(exchangeRate: number): void {\n    this.exchangeRate = exchangeRate;\n  }\n}\n\nAggregate_add( Currency, \"CURRENCY\" );\nElement_add(Currency, { name: \"CURSYM\", required: true, order: 0, type: String, read: Currency.prototype.getCode, write: Currency.prototype.setCode });\nElement_add(Currency, { name: \"CURRATE\", required: true, order: 10, type: Number, read: Currency.prototype.getExchangeRate, write: Currency.prototype.setExchangeRate });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { InvestmentTransactionType } from \"../investment/transactions/TransactionType\";\nimport { CorrectionAction } from \"./CorrectionAction\";\nimport { Payee } from \"./Payee\";\nimport { BankAccountDetails } from \"../banking/BankAccountDetails\";\nimport { CreditCardAccountDetails } from \"../creditcard/CreditCardAccountDetails\";\nimport { Currency } from \"./Currency\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../meta/Element_add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class Transaction {\n\n  private transactionType: InvestmentTransactionType;\n  private datePosted: Date;\n  private dateInitiated: Date;\n  private dateAvailable: Date;\n  private amount: number;\n  private id: string;\n  private correctionId: string;\n  private correctionAction: CorrectionAction;\n  private tempId: string;\n  private checkNumber: string;\n  private referenceNumber: string;\n  private standardIndustrialCode: string;\n  private payeeId: string;\n  private name: string;\n  private payee: Payee;\n  private bankAccountTo: BankAccountDetails;\n  private creditCardAccountTo: CreditCardAccountDetails;\n  private memo: string;\n  private currency: Currency;\n  private originalCurrency: Currency;\n\n  /**\n   * The transaction type.\n   *\n   * @return The transaction type.\n   */\n  public getTransactionType(): InvestmentTransactionType {\n    return this.transactionType;\n  }\n\n  /**\n   * The transaction type.\n   *\n   * @param transactionType The transaction type.\n   */\n  public setTransactionType(transactionType: InvestmentTransactionType): void {\n    this.transactionType = transactionType;\n  }\n\n  /**\n   * The date the transaction was posted.\n   *\n   * @return The date the transaction was posted.\n   */\n  public getDatePosted(): Date {\n    return this.datePosted;\n  }\n\n  /**\n   * The date the transaction was posted.\n   *\n   * @param datePosted The date the transaction was posted.\n   */\n  public setDatePosted(datePosted: Date): void {\n    this.datePosted = datePosted;\n  }\n\n  /**\n   * The date the transaction was initiated.\n   *\n   * @return The date the transaction was initiated.\n   */\n  public getDateInitiated(): Date {\n    return this.dateInitiated;\n  }\n\n  /**\n   * The date the transaction was initiated.\n   *\n   * @param dateInitiated The date the transaction was initiated.\n   */\n  public setDateInitiated(dateInitiated: Date): void {\n    this.dateInitiated = dateInitiated;\n  }\n\n  /**\n   * The date the funds are available.\n   *\n   * @return The date the funds are available.\n   */\n  public getDateAvailable(): Date {\n    return this.dateAvailable;\n  }\n\n  /**\n   * The date the funds are available.\n   *\n   * @param dateAvailable The date the funds are available.\n   */\n  public setDateAvailable(dateAvailable: Date): void {\n    this.dateAvailable = dateAvailable;\n  }\n\n  /**\n   * The transaction amount.\n   *\n   * @return The transaction amount.\n   */\n  public getAmount(): number {\n    return this.amount;\n  }\n\n  /**\n   * The transaction amount.\n   *\n   * @param amount The transaction amount.\n   */\n  public setAmount(amount: number): void {\n    this.amount = amount;\n  }\n\n  /**\n   * The transaction amount.\n   *\n   * @return The transaction amount.\n   */\n  public getBigDecimalAmount(): number {\n    return this.amount;\n  }\n\n  /**\n   * The transaction amount.\n   *\n   * @param amount The transaction amount.\n   */\n  public setBigDecimalAmount(amount: number): void {\n    this.amount = amount;\n  }\n\n  /**\n   * The transaction id (server-assigned).\n   *\n   * @return The transaction id (server-assigned).\n   */\n  public getId(): string {\n    return this.id;\n  }\n\n  /**\n   * The transaction id (server-assigned).\n   *\n   * @param id The transaction id (server-assigned).\n   */\n  public setId(id: string): void {\n    this.id = id;\n  }\n\n  /**\n   * The id of the transaction that this is correcting.\n   *\n   * @return The id of the transaction that this is correcting.\n   */\n  public getCorrectionId(): string {\n    return this.correctionId;\n  }\n\n  /**\n   * The id of the transaction that this is correcting.\n   *\n   * @param correctionId The id of the transaction that this is correcting.\n   */\n  public setCorrectionId(correctionId: string): void {\n    this.correctionId = correctionId;\n  }\n\n  /**\n   * The action to take on the {@link #getCorrectionId() corrected transaction}.\n   *\n   * @return The action to take on the {@link #getCorrectionId() corrected transaction}.\n   */\n  public getCorrectionAction(): CorrectionAction {\n    return this.correctionAction;\n  }\n\n  /**\n   * The action to take on the {@link #getCorrectionId() corrected transaction}.\n   *\n   * @param correctionAction The action to take on the {@link #getCorrectionId() corrected transaction}.\n   */\n  public setCorrectionAction(correctionAction: CorrectionAction): void {\n    this.correctionAction = correctionAction;\n  }\n\n  /**\n   * The server-assigned temporary id for client-initiated transactions.\n   *\n   * @return The server-assigned temporary id for client-initiated transactions.\n   */\n  public getTempId(): string {\n    return this.tempId;\n  }\n\n  /**\n   * The server-assigned temporary id for client-initiated transactions.\n   *\n   * @param tempId The server-assigned temporary id for client-initiated transactions.\n   */\n  public setTempId(tempId: string): void {\n    this.tempId = tempId;\n  }\n\n  /**\n   * The check number.\n   *\n   * @return The check number.\n   */\n  public getCheckNumber(): string {\n    return this.checkNumber;\n  }\n\n  /**\n   * The check number.\n   *\n   * @param checkNumber The check number.\n   */\n  public setCheckNumber(checkNumber: string): void {\n    this.checkNumber = checkNumber;\n  }\n\n  /**\n   * The reference number.\n   *\n   * @return The reference number.\n   */\n  public getReferenceNumber(): string {\n    return this.referenceNumber;\n  }\n\n  /**\n   * The reference number.\n   *\n   * @param referenceNumber The reference number.\n   */\n  public setReferenceNumber(referenceNumber: string): void {\n    this.referenceNumber = referenceNumber;\n  }\n\n  /**\n   * The standard industrial code.\n   *\n   * @return The standard industrial code.\n   */\n  public getStandardIndustrialCode(): string {\n    return this.standardIndustrialCode;\n  }\n\n  /**\n   * The standard industrial code.\n   *\n   * @param standardIndustrialCode The standard industrial code.\n   */\n  public setStandardIndustrialCode(standardIndustrialCode: string): void {\n    this.standardIndustrialCode = standardIndustrialCode;\n  }\n\n  /**\n   * The payee id.\n   *\n   * @return The payee id.\n   */\n  public getPayeeId(): string {\n    return this.payeeId;\n  }\n\n  /**\n   * The payee id.\n   *\n   * @param payeeId The payee id.\n   */\n  public setPayeeId(payeeId: string): void {\n    this.payeeId = payeeId;\n  }\n\n  /**\n   * The name (description) or the transaction.\n   *\n   * @return The name (description) or the transaction.\n   */\n  public getName(): string {\n    return this.name;\n  }\n\n  /**\n   * The name (description) or the transaction.\n   *\n   * @param name The name (description) or the transaction.\n   */\n  public setName(name: string): void {\n    this.name = name;\n  }\n\n  /**\n   * The payee.\n   *\n   * @return The payee.\n   */\n  public getPayee(): Payee {\n    return this.payee;\n  }\n\n  /**\n   * The payee.\n   *\n   * @param payee The payee.\n   */\n  public setPayee(payee: Payee): void {\n    this.payee = payee;\n  }\n\n  /**\n   * The bank account the transfer was to.\n   *\n   * @return The bank account the transfer was to.\n   */\n  public getBankAccountTo(): BankAccountDetails {\n    return this.bankAccountTo;\n  }\n\n  /**\n   * The bank account the transfer was to.\n   *\n   * @param bankAccountTo The bank account the transfer was to.\n   */\n  public setBankAccountTo(bankAccountTo: BankAccountDetails): void {\n    this.bankAccountTo = bankAccountTo;\n  }\n\n  /**\n   * The credit-card account the transfer was to.\n   *\n   * @return The credit-card account the transfer was to.\n   */\n  public getCreditCardAccountTo(): CreditCardAccountDetails {\n    return this.creditCardAccountTo;\n  }\n\n  /**\n   * The credit-card account the transfer was to.\n   *\n   * @param creditCardAccountTo The credit-card account the transfer was to.\n   */\n  public setCreditCardAccountTo(creditCardAccountTo: CreditCardAccountDetails): void {\n    this.creditCardAccountTo = creditCardAccountTo;\n  }\n\n  /**\n   * Notes.\n   *\n   * @return Notes.\n   */\n  public getMemo(): string {\n    return this.memo;\n  }\n\n  /**\n   * Notes.\n   *\n   * @param memo Notes.\n   */\n  public setMemo(memo: string): void {\n    this.memo = memo;\n  }\n\n  /**\n   * The currency.\n   *\n   * @return The currency.\n   */\n  public getCurrency(): Currency {\n    return this.currency;\n  }\n\n  /**\n   * The currency.\n   *\n   * @param currency The currency.\n   */\n  public setCurrency(currency: Currency): void {\n    this.currency = currency;\n  }\n\n  /**\n   * The original currency.\n   *\n   * @return The original currency.\n   */\n  public getOriginalCurrency(): Currency {\n    return this.originalCurrency;\n  }\n\n  /**\n   * The original currency.\n   *\n   * @param originalCurrency The original currency.\n   */\n  public setOriginalCurrency(originalCurrency: Currency): void {\n    this.originalCurrency = originalCurrency;\n  }\n}\n\nAggregate_add( Transaction, \"STMTTRN\" );\nElement_add(Transaction, { name: \"TRNTYPE\", required: true, order: 0, type: InvestmentTransactionType, read: Transaction.prototype.getTransactionType, write: Transaction.prototype.setTransactionType });\nElement_add(Transaction, { name: \"DTPOSTED\", required: true, order: 10, type: Date, read: Transaction.prototype.getDatePosted, write: Transaction.prototype.setDatePosted });\nElement_add(Transaction, { name: \"DTUSER\", order: 20, type: Date, read: Transaction.prototype.getDateInitiated, write: Transaction.prototype.setDateInitiated });\nElement_add(Transaction, { name: \"DTAVAIL\", order: 30, type: Date, read: Transaction.prototype.getDateAvailable, write: Transaction.prototype.setDateAvailable });\nElement_add(Transaction, { name: \"TRNAMT\", required: true, order: 40, type: Number, read: Transaction.prototype.getBigDecimalAmount, write: Transaction.prototype.setBigDecimalAmount });\nElement_add(Transaction, { name: \"FITID\", required: true, order: 50, type: String, read: Transaction.prototype.getId, write: Transaction.prototype.setId });\nElement_add(Transaction, { name: \"CORRECTFITID\", order: 60, type: String, read: Transaction.prototype.getCorrectionId, write: Transaction.prototype.setCorrectionId });\nElement_add(Transaction, { name: \"CORRECTACTION\", order: 70, type: CorrectionAction, read: Transaction.prototype.getCorrectionAction, write: Transaction.prototype.setCorrectionAction });\nElement_add(Transaction, { name: \"SRVRTID\", order: 80, type: String, read: Transaction.prototype.getTempId, write: Transaction.prototype.setTempId });\nElement_add(Transaction, { name: \"CHECKNUM\", order: 90, type: String, read: Transaction.prototype.getCheckNumber, write: Transaction.prototype.setCheckNumber });\nElement_add(Transaction, { name: \"REFNUM\", order: 100, type: String, read: Transaction.prototype.getReferenceNumber, write: Transaction.prototype.setReferenceNumber });\nElement_add(Transaction, { name: \"SIC\", order: 110, type: String, read: Transaction.prototype.getStandardIndustrialCode, write: Transaction.prototype.setStandardIndustrialCode });\nElement_add(Transaction, { name: \"PAYEEID\", order: 120, type: String, read: Transaction.prototype.getPayeeId, write: Transaction.prototype.setPayeeId });\nElement_add(Transaction, { name: \"NAME\", order: 130, type: String, read: Transaction.prototype.getName, write: Transaction.prototype.setName });\nChildAggregate_add(Transaction, { order: 140, type: Payee, read: Transaction.prototype.getPayee, write: Transaction.prototype.setPayee });\nChildAggregate_add(Transaction, { name: \"BANKACCTTO\", order: 150, type: BankAccountDetails, read: Transaction.prototype.getBankAccountTo, write: Transaction.prototype.setBankAccountTo });\nChildAggregate_add(Transaction, { name: \"CCACCTTO\", order: 160, type: CreditCardAccountDetails, read: Transaction.prototype.getCreditCardAccountTo, write: Transaction.prototype.setCreditCardAccountTo });\nElement_add(Transaction, { name: \"MEMO\", order: 170, type: String, read: Transaction.prototype.getMemo, write: Transaction.prototype.setMemo });\nChildAggregate_add(Transaction, { order: 180, type: Currency, read: Transaction.prototype.getCurrency, write: Transaction.prototype.setCurrency });\nChildAggregate_add(Transaction, { name: \"ORIGCURRENCY\", order: 190, type: Currency, read: Transaction.prototype.getOriginalCurrency, write: Transaction.prototype.setOriginalCurrency });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Transaction } from \"./Transaction\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../meta/Element_add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\n//import java.util.Date;\n//import java.util.List;\n\n/**\n * @author Ryan Heaton\n */\nexport class TransactionList {\n\n  private start: Date;\n  private end: Date;\n  private transactions: Array<Transaction>;\n\n  /**\n   * The start date.\n   *\n   * @return The start date.\n   */\n  public getStart(): Date {\n    return this.start;\n  }\n\n  /**\n   * The start date.\n   *\n   * @param start The start date.\n   */\n  public setStart(start: Date): void {\n    this.start = start;\n  }\n\n  /**\n   * The end date.\n   *\n   * @return The end date.\n   */\n  public getEnd(): Date {\n    return this.end;\n  }\n\n  /**\n   * The end date.\n   *\n   * @param end The end date.\n   */\n  public setEnd(end: Date): void {\n    this.end = end;\n  }\n\n  /**\n   * The transaction list.\n   *\n   * @return The transaction list.\n   */\n  public getTransactions(): Array<Transaction> {\n    return this.transactions;\n  }\n\n  /**\n   * The transaction list.\n   *\n   * @param transactions The transaction list.\n   */\n  public setTransactions(transactions: Array<Transaction>): void {\n    this.transactions = transactions;\n  }\n}\n\nAggregate_add( TransactionList, \"BANKTRANLIST\" );\nElement_add(TransactionList, { name: \"DTSTART\", required: true, order: 0, type: Date, read: TransactionList.prototype.getStart, write: TransactionList.prototype.setStart });\nElement_add(TransactionList, { name: \"DTEND\", required: true, order: 10, type: Date, read: TransactionList.prototype.getEnd, write: TransactionList.prototype.setEnd });\nChildAggregate_add(TransactionList, { order: 20, type: Array, collectionEntryType: Transaction, read: TransactionList.prototype.getTransactions, write: TransactionList.prototype.setTransactions });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../meta/Element_add\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class BalanceInfo {\n\n  private amount: number;\n  private asOfDate: Date;\n\n  /**\n   * The amount.\n   *\n   * @return The amount.\n   */\n  public getAmount(): number {\n    return this.amount;\n  }\n\n  /**\n   * The amount.\n   *\n   * @param amount The amount.\n   */\n  public setAmount(amount: number): void {\n    this.amount = amount;\n  }\n\n  /**\n   * The as-of date.\n   *\n   * @return The as-of date.\n   */\n  public getAsOfDate(): Date {\n    return this.asOfDate;\n  }\n\n  /**\n   * The as-of date.\n   *\n   * @param asOfDate The as-of date.\n   */\n  public setAsOfDate(asOfDate: Date): void {\n    this.asOfDate = asOfDate;\n  }\n}\n\nAggregate_add( BalanceInfo );\nElement_add(BalanceInfo, { name: \"BALAMT\", required: true, order: 0, type: Number, read: BalanceInfo.prototype.getAmount, write: BalanceInfo.prototype.setAmount });\nElement_add(BalanceInfo, { name: \"DTASOF\", required: true, order: 10, type: Date, read: BalanceInfo.prototype.getAsOfDate, write: BalanceInfo.prototype.setAsOfDate });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ResponseMessage } from \"../ResponseMessage\";\nimport { AccountStatement } from \"../../../client/AccountStatement\";\nimport { TransactionList } from \"./TransactionList\";\nimport { BalanceInfo } from \"./BalanceInfo\";\nimport { Element_add } from \"../../../meta/Element_add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\n//import java.util.Locale;\n\n/**\n * @author Ryan Heaton\n */\nexport abstract class StatementResponse extends ResponseMessage implements AccountStatement {\n\n  private currencyCode: string;\n  private transactionList: TransactionList;\n  private ledgerBalance: BalanceInfo;\n  private availableBalance: BalanceInfo;\n  private marketingInfo: string;\n\n  constructor() {\n    super();\n    this.currencyCode = \"USD\"; //java.util.Currency.getInstance(Locale.US).getCurrencyCode().toUpperCase();\n  }\n\n  /**\n   * The currency code.\n   *\n   * @return The currency code.\n   * @see java.util.Currency#getCurrencyCode()\n   */\n  public getCurrencyCode(): string {\n    return this.currencyCode;\n  }\n\n  /**\n   * The currency code.\n   *\n   * @param currencyCode The currency code.\n   */\n  public setCurrencyCode(currencyCode: string): void {\n    this.currencyCode = currencyCode;\n  }\n\n  /**\n   * The transaction list.\n   *\n   * @return The transaction list.\n   */\n  public getTransactionList(): TransactionList {\n    return this.transactionList;\n  }\n\n  /**\n   * The transaction list.\n   *\n   * @param transactionList The transaction list.\n   */\n  public setTransactionList(transactionList: TransactionList): void {\n    this.transactionList = transactionList;\n  }\n\n  /**\n   * The ledger balance.\n   *\n   * @return The ledger balance.\n   */\n  public getLedgerBalance(): BalanceInfo {\n    return this.ledgerBalance;\n  }\n\n  /**\n   * The ledger balance.\n   *\n   * @param ledgerBalance The ledger balance.\n   */\n  public setLedgerBalance(ledgerBalance: BalanceInfo): void {\n    this.ledgerBalance = ledgerBalance;\n  }\n\n  /**\n   * The available balance.\n   *\n   * @return The available balance.\n   */\n  public getAvailableBalance(): BalanceInfo {\n    return this.availableBalance;\n  }\n\n  /**\n   * The available balance.\n   *\n   * @param availableBalance The available balance.\n   */\n  public setAvailableBalance(availableBalance: BalanceInfo): void {\n    this.availableBalance = availableBalance;\n  }\n\n  /**\n   * Marketing information. (?)\n   *\n   * @return Marketing information.\n   */\n  public getMarketingInfo(): string {\n    return this.marketingInfo;\n  }\n\n  /**\n   * Marketing information. (?)\n   *\n   * @param marketingInfo Marketing information.\n   */\n  public setMarketingInfo(marketingInfo: string): void {\n    this.marketingInfo = marketingInfo;\n  }\n}\n\nElement_add(StatementResponse, { name: \"CURDEF\", required: true, order: 0, type: String, read: StatementResponse.prototype.getCurrencyCode, write: StatementResponse.prototype.setCurrencyCode });\nChildAggregate_add(StatementResponse, { order: 20, type: TransactionList, read: StatementResponse.prototype.getTransactionList, write: StatementResponse.prototype.setTransactionList });\nChildAggregate_add(StatementResponse, { name: \"LEDGERBAL\", order: 30, type: BalanceInfo, read: StatementResponse.prototype.getLedgerBalance, write: StatementResponse.prototype.setLedgerBalance });\nChildAggregate_add(StatementResponse, { name: \"AVAILBAL\", order: 40, type: BalanceInfo, read: StatementResponse.prototype.getAvailableBalance, write: StatementResponse.prototype.setAvailableBalance });\nElement_add(StatementResponse, { name: \"MKTGINFO\", order: 50, type: String, read: StatementResponse.prototype.getMarketingInfo, write: StatementResponse.prototype.setMarketingInfo });\n","/*\n* Copyright 2008 Web Cohesion\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nimport { StatementResponse } from \"../common/StatementResponse\";\nimport { BankAccountDetails } from \"./BankAccountDetails\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class BankStatementResponse extends StatementResponse {\n\n  private account: BankAccountDetails;\n\n  public getResponseMessageName(): string {\n    return \"bank statement\";\n  }\n\n  /**\n   * The account for the statement.\n   *\n   * @return The account for the statement.\n   */\n  public getAccount(): BankAccountDetails {\n    return this.account;\n  }\n\n  /**\n   * The account for the statement.\n   *\n   * @param account The account for the statement.\n   */\n  public setAccount(account: BankAccountDetails): void {\n    this.account = account;\n  }\n\n}\n\nAggregate_add( BankStatementResponse, \"STMTRS\" );\nChildAggregate_add(BankStatementResponse, { name:\"BANKACCTFROM\", order: 10, type: BankAccountDetails, read: BankStatementResponse.prototype.getAccount, write: BankStatementResponse.prototype.setAccount });\n","/*\n* Copyright 2008 Web Cohesion\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nimport { TransactionWrappedResponseMessage } from \"../TransactionWrappedResponseMessage\";\nimport { BankStatementResponse } from \"./BankStatementResponse\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class BankStatementResponseTransaction extends TransactionWrappedResponseMessage<BankStatementResponse> {\n\n  private message: BankStatementResponse;\n\n  /**\n   * The message.\n   *\n   * @return The message.\n   */\n  public getMessage(): BankStatementResponse {\n    return this.message;\n  }\n\n  /**\n   * The message.\n   *\n   * @param message The message.\n   */\n  public setMessage(message: BankStatementResponse): void {\n    this.message = message;\n  }\n\n  // Inherited.\n  public getWrappedMessage(): BankStatementResponse {\n    return this.getMessage();\n  }\n}\n\nAggregate_add( BankStatementResponseTransaction, \"STMTTRNRS\" );\nChildAggregate_add(BankStatementResponseTransaction, { required: true, order: 30, type: BankStatementResponse, read: BankStatementResponseTransaction.prototype.getMessage, write: BankStatementResponseTransaction.prototype.setMessage });\n","/*\n* Copyright 2008 Web Cohesion\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nimport { ResponseMessageSet } from \"../ResponseMessageSet\";\nimport { BankStatementResponseTransaction } from \"./BankStatementResponseTransaction\";\nimport { MessageSetType } from \"../MessageSetType\";\nimport { ResponseMessage } from \"../ResponseMessage\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class BankingResponseMessageSet extends ResponseMessageSet {\n\n  private statementResponses: Array<BankStatementResponseTransaction>;\n\n  public getType(): MessageSetType {\n    return MessageSetType.banking;\n  }\n\n  /**\n   * The statement response list.\n   *\n   * Most OFX files have a single statement response, except MT2OFX\n   * which outputs OFX with multiple statement responses\n   * in a single banking response message set.\n   *\n   * @return The statement response list.\n   */\n  public getStatementResponses(): Array<BankStatementResponseTransaction> {\n    return this.statementResponses;\n  }\n\n  /**\n   * The statement response.\n   *\n   * @param statementResponses The statement responses.\n   */\n  public setStatementResponses(statementResponses: Array<BankStatementResponseTransaction>): void {\n    this.statementResponses = statementResponses;\n  }\n\n  // Inherited.\n  public getResponseMessages(): Array<ResponseMessage> {\n    return this.statementResponses;\n  }\n\n  /**\n   * The first statement response.\n   *\n   * @return the first bank statement response.\n   * @deprecated Use getStatementResponses() because sometimes there are multiple responses\n   */\n  public getStatementResponse(): BankStatementResponseTransaction {\n    return this.statementResponses == null || this.statementResponses.length == 0 ? null : this.statementResponses[0];\n  }\n\n  public setStatementResponse(statementResponse: BankStatementResponseTransaction): void {\n    this.statementResponses = [statementResponse];\n  }\n\n}\n\nAggregate_add( BankingResponseMessageSet, \"BANKMSGSRSV1\" );\nChildAggregate_add(BankingResponseMessageSet, { order: 0, type: Array, collectionEntryType: BankStatementResponseTransaction, read: BankingResponseMessageSet.prototype.getStatementResponses, write: BankingResponseMessageSet.prototype.setStatementResponses });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../meta/Element_add\";\nimport { Currency } from \"./Currency\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\nexport enum BalanceRecordType {\n\n  DOLLAR,\n\n  PERCENT,\n\n  NUMBER\n}\n\n\n/**\n * @author Ryan Heaton\n * @see \"Section 3.1.3, OFX Spec\"\n */\nexport class BalanceRecord {\n\n  private name: string;\n  private description: string;\n  private type: BalanceRecordType;\n  private value: string;\n  private timestamp: Date;\n  private currency: Currency;\n\n  /**\n   * Name of the balance.\n   *\n   * @return Name of the balance.\n   */\n  public getName(): string {\n    return this.name;\n  }\n\n  /**\n   * Name of the balance.\n   *\n   * @param name Name of the balance.\n   */\n  public setName(name: string): void {\n    this.name = name;\n  }\n\n  /**\n   * Description of the balance.\n   *\n   * @return Description of the balance.\n   */\n  public getDescription(): string {\n    return this.description;\n  }\n\n  /**\n   * Description of the balance.\n   *\n   * @param description Description of the balance.\n   */\n  public setDescription(description: string): void {\n    this.description = description;\n  }\n\n  /**\n   * Type of the balance.\n   *\n   * @return Type of the balance.\n   */\n  public getType(): BalanceRecordType {\n    return this.type;\n  }\n\n  /**\n   * Type of the balance.\n   *\n   * @param type Type of the balance.\n   */\n  public setType(type: BalanceRecordType): void {\n    this.type = type;\n  }\n\n  /**\n   * The value of the balance.\n   *\n   * @return The value of the balance.\n   */\n  public getValue(): string {\n    return this.value;\n  }\n\n  /**\n   * The value of the balance.\n   *\n   * @param value The value of the balance.\n   */\n  public setValue(value: string): void {\n    this.value = value;\n  }\n\n  /**\n   * Timestamp of the balance.\n   *\n   * @return Timestamp of the balance.\n   */\n  public getTimestamp(): Date {\n    return this.timestamp;\n  }\n\n  /**\n   * Timestamp of the balance.\n   *\n   * @param timestamp Timestamp of the balance.\n   */\n  public setTimestamp(timestamp: Date): void {\n    this.timestamp = timestamp;\n  }\n\n  /**\n   * Currency.\n   *\n   * @return Currency.\n   */\n  public getCurrency(): Currency {\n    return this.currency;\n  }\n\n  /**\n   * Currency.\n   *\n   * @param currency Currency.\n   */\n  public setCurrency(currency: Currency): void {\n    this.currency = currency;\n  }\n}\n\nAggregate_add( BalanceRecord, \"BAL\" );\nElement_add(BalanceRecord, { name: \"NAME\", required: true, order: 0, type: String, read: BalanceRecord.prototype.getName, write: BalanceRecord.prototype.setName });\nElement_add(BalanceRecord, { name: \"DESC\", required: true, order: 10, type: String, read: BalanceRecord.prototype.getDescription, write: BalanceRecord.prototype.setDescription });\nElement_add(BalanceRecord, { name: \"BALTYPE\", required: true, order: 20, type: BalanceRecordType, read: BalanceRecord.prototype.getType, write: BalanceRecord.prototype.setType });\nElement_add(BalanceRecord, { name: \"VALUE\", required: true, order: 30, type: String, read: BalanceRecord.prototype.getValue, write: BalanceRecord.prototype.setValue });\nElement_add(BalanceRecord, { name: \"DTASOF\", order: 40, type: Date, read: BalanceRecord.prototype.getTimestamp, write: BalanceRecord.prototype.setTimestamp });\nChildAggregate_add(BalanceRecord, { order: 50, type: Currency, read: BalanceRecord.prototype.getCurrency, write: BalanceRecord.prototype.setCurrency });\n","/*\n * Copyright 2012 TheStash\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Day of week used in \"PROCDAYSOFF\" lists.\n *\n * @author Scott Priddy\n * @see \"OFX Spec, Section 13.6.2\"\n */\nexport enum ProcessorDayOff {\n  MONDAY,\n  TUESDAY,\n  WEDNESDAY,\n  THURSDAY,\n  FRIDAY,\n  SATURDAY,\n  SUNDAY\n}\n\nexport function ProcessorDayOff_fromOfx(ofxVal: string): ProcessorDayOff {\n  if (\"MONDAY\" === ofxVal) {\n    return ProcessorDayOff.MONDAY;\n  } else if (\"TUESDAY\" === ofxVal) {\n    return ProcessorDayOff.TUESDAY;\n  } else if (\"WEDNESDAY\" === ofxVal) {\n    return ProcessorDayOff.WEDNESDAY;\n  } else if (\"THURSDAY\" === ofxVal) {\n    return ProcessorDayOff.THURSDAY;\n  } else if (\"FRIDAY\" === ofxVal) {\n    return ProcessorDayOff.FRIDAY;\n  } else if (\"SATURDAY\" === ofxVal) {\n    return ProcessorDayOff.SATURDAY;\n  } else if (\"SUNDAY\" === ofxVal) {\n    return ProcessorDayOff.SUNDAY;\n  } else {\n    return null;\n  }\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { RequestMessage } from \"../RequestMessage\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\n\n\n/**\n * @author Aparna Gawali\n * aparna.gawali@sungard.com\n */\nexport class T1099Request extends RequestMessage {\n}\n\nAggregate_add( T1099Request, \"STMTRQ\" );\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ResponseMessage } from \"../ResponseMessage\";\n\n\n//import java.util.Locale;\n\n/**\n * @author Aparna Gawali\n * aparna.gawali@sungard.com\n */\nexport abstract class T1099Response extends ResponseMessage {\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @author Ryan Heaton\n */\nexport enum TransactionType {\n\n  /**\n   * generic credit.\n   */\n  CREDIT,\n\n  /**\n   * genertic debit.\n   */\n  DEBIT,\n\n  /**\n   * interest earned.\n   */\n  INT,\n\n  /**\n   * dividend.\n   */\n  DIV,\n\n  /**\n   * bank fee.\n   */\n  FEE,\n\n  /**\n   * service charge.\n   */\n  SRVCHG,\n\n  /**\n   * deposit.\n   */\n  DEP,\n\n  /**\n   * ATM transaction.\n   */\n  ATM,\n\n  /**\n   * point of sale\n   */\n  POS,\n\n  /**\n   * transfer\n   */\n  XFER,\n\n  /**\n   * check\n   */\n  CHECK,\n\n  /**\n   * electronic payment\n   */\n  PAYMENT,\n\n  /**\n   * cash.\n   */\n  CASH,\n\n  /**\n   * direct deposit.\n   */\n  DIRECTDEP,\n\n  /**\n   * merchant-initiated debit\n   */\n  DIRECTDEBIT,\n\n  /**\n   * repeating payment.\n   */\n  REPEATPMT,\n\n  /**\n   * other\n   */\n  OTHER\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { BankAccountDetails } from \"../banking/BankAccountDetails\";\nimport { CreditCardAccountDetails } from \"../creditcard/CreditCardAccountDetails\";\nimport { OFXException } from \"../../../OFXException\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\nimport { Element_add } from \"../../../meta/Element_add\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class TransferInfo {\n\n  private bankAccountFrom: BankAccountDetails;\n  private creditCardAccountFrom: CreditCardAccountDetails;\n  private bankAccountTo: BankAccountDetails;\n  private creditCardAccountTo: CreditCardAccountDetails;\n\n  private amount: number;\n  private due: Date;\n\n  /**\n   * The bank account to transfer from.\n   *\n   * @return The bank account to transfer from.\n   */\n  public getBankAccountFrom(): BankAccountDetails {\n    return this.bankAccountFrom;\n  }\n\n  /**\n   * The bank account to transfer from.\n   *\n   * @param bankAccountFrom The bank account to transfer from.\n   */\n  public setBankAccountFrom(bankAccountFrom: BankAccountDetails): void {\n    this.creditCardAccountFrom = null;\n    this.bankAccountFrom = bankAccountFrom;\n  }\n\n  /**\n   * The account to transfer from.\n   *\n   * @param acct The account to transfer from.\n   */\n  public setAccountFrom(acct: BankAccountDetails | CreditCardAccountDetails): void {\n    if(acct instanceof BankAccountDetails) {\n      this.setBankAccountFrom(<BankAccountDetails>acct);\n    } else {\n      this.setCreditCardAccountFrom(<CreditCardAccountDetails>acct);\n    }\n  }\n\n  /**\n   * The credit card to transfer from.\n   *\n   * @return The credit card to transfer from.\n   */\n  public getCreditCardAccountFrom(): CreditCardAccountDetails {\n    return this.creditCardAccountFrom;\n  }\n\n  /**\n   * The credit card to transfer from.\n   *\n   * @param creditCardAccountFrom The credit card to transfer from.\n   */\n  public setCreditCardAccountFrom(creditCardAccountFrom: CreditCardAccountDetails): void {\n    this.bankAccountFrom = null;\n    this.creditCardAccountFrom = creditCardAccountFrom;\n  }\n\n  /**\n   * The bank account to transfer to.\n   *\n   * @return The bank account to transfer to.\n   */\n  public getBankAccountTo(): BankAccountDetails {\n    return this.bankAccountTo;\n  }\n\n  /**\n   * The bank account to transfer to.\n   *\n   * @param bankAccountTo The bank account to transfer to.\n   */\n  public setBankAccountTo(bankAccountTo: BankAccountDetails): void {\n    this.creditCardAccountTo = null;\n    this.bankAccountTo = bankAccountTo;\n  }\n\n  /**\n   * The bank or credit card account to transfer to.\n   *\n   * @param accountTo The account to transfer to.\n   */\n  public setAccountTo(accountTo: BankAccountDetails | CreditCardAccountDetails): void {\n    if(accountTo instanceof BankAccountDetails)\n      this.setBankAccountTo(accountTo);\n    else if(accountTo instanceof CreditCardAccountDetails)\n      this.setCreditCardAccountTo(accountTo);\n    else\n      throw new OFXException(\"invalid type\");\n  }\n\n\n  /**\n   * The credit card account to transfer to.\n   *\n   * @return The credit card account to transfer to.\n   */\n  public getCreditCardAccountTo(): CreditCardAccountDetails {\n    return this.creditCardAccountTo;\n  }\n\n  /**\n   * The credit card account to transfer to.\n   *\n   * @param creditCardAccountTo The credit card account to transfer to.\n   */\n  public setCreditCardAccountTo(creditCardAccountTo: CreditCardAccountDetails): void {\n    this.bankAccountTo = null;\n    this.creditCardAccountTo = creditCardAccountTo;\n  }\n\n  /**\n   * The amount.\n   *\n   * @return The amount.\n   */\n  public getAmount(): number {\n    return this.amount;\n  }\n\n  /**\n   * The amount.\n   *\n   * @param amount The amount.\n   */\n  public setAmount(amount: number): void {\n    this.amount = amount;\n  }\n\n  /**\n   * The due date.\n   *\n   * @return The due date.\n   */\n  public getDue(): Date {\n    return this.due;\n  }\n\n  /**\n   * The due date.\n   *\n   * @param due The due date.\n   */\n  public setDue(due: Date): void {\n    this.due = due;\n  }\n}\n\nAggregate_add( TransferInfo, \"XFERINFO\" );\nChildAggregate_add(TransferInfo, { name: \"BANKACCTFROM\", order: 0, type: BankAccountDetails, read: TransferInfo.prototype.getBankAccountFrom, write: TransferInfo.prototype.setBankAccountFrom });\nChildAggregate_add(TransferInfo, { name: \"CCACCTFROM\", order: 10, type: CreditCardAccountDetails, read: TransferInfo.prototype.getCreditCardAccountFrom, write: TransferInfo.prototype.setCreditCardAccountFrom });\nChildAggregate_add(TransferInfo, { name: \"BANKACCTTO\", order: 20, type: BankAccountDetails, read: TransferInfo.prototype.getBankAccountTo, write: TransferInfo.prototype.setBankAccountTo });\nChildAggregate_add(TransferInfo, { name: \"CCACCTTO\", order: 30, type: CreditCardAccountDetails, read: TransferInfo.prototype.getCreditCardAccountTo, write: TransferInfo.prototype.setCreditCardAccountTo });\nElement_add(TransferInfo, { name: \"TRNAMT\", required: true, order: 40, type: Number, read: TransferInfo.prototype.getAmount, write: TransferInfo.prototype.setAmount });\nElement_add(TransferInfo, { name: \"DTDUE\", order: 50, type: Date, read: TransferInfo.prototype.getDue, write: TransferInfo.prototype.setDue });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @author Ryan Heaton\n */\nexport enum TransferStatusEvent {\n\n  WILLPROCESSON,\n\n  POSTEDON,\n\n  NOFUNDSON,\n\n  CANCELEDON,\n\n  FAILEDON\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TransferStatusEvent } from \"./TransferStatusEvent\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../meta/Element_add\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class TransferStatus {\n\n  private event: TransferStatusEvent;\n  private date: Date;\n\n  /**\n   * The event.\n   *\n   * @return The event.\n   */\n  public getEvent(): TransferStatusEvent {\n    return this.event;\n  }\n\n  /**\n   * The event.\n   *\n   * @param event The event.\n   */\n  public setEvent(event: TransferStatusEvent): void {\n    this.event = event;\n  }\n\n  /**\n   * The date of the event.\n   *\n   * @return The date of the event.\n   */\n  public getDate(): Date {\n    return this.date;\n  }\n\n  /**\n   * The date of the event.\n   *\n   * @param date The date of the event.\n   */\n  public setDate(date: Date): void {\n    this.date = date;\n  }\n}\n\nAggregate_add( TransferStatus, \"XFERPRCSTS\" );\nElement_add(TransferStatus, { name: \"XFERPRCCODE\", required: true, order: 0, type: TransferStatusEvent, read: TransferStatus.prototype.getEvent, write: TransferStatus.prototype.setEvent });\nElement_add(TransferStatus, { name: \"DTXFERPRC\", required: true, order: 10, type: Date, read: TransferStatus.prototype.getDate, write: TransferStatus.prototype.setDate });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { AccountInfo } from \"../common/AccountInfo\";\nimport { CreditCardAccountDetails } from \"./CreditCardAccountDetails\";\nimport { AccountStatus } from \"../common/AccountStatus\";\nimport { AccountDetails } from \"../common/AccountDetails\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\nimport { Element_add } from \"../../../meta/Element_add\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class CreditCardAccountInfo implements AccountInfo {\n\n  private creditCardAccount: CreditCardAccountDetails;\n  private supportsTransactionDetailOperations: boolean;\n  private supportsTransferToOtherAccountOperations: boolean;\n  private supportsTransferFromOtherAccountOperations: boolean;\n  private status: AccountStatus;\n\n  /**\n   * The credit card account this information is referencing.\n   *\n   * @return The credit card account this information is referencing.\n   */\n  public getCreditCardAccount(): CreditCardAccountDetails {\n    return this.creditCardAccount;\n  }\n\n  /**\n   * The credit card account this information is referencing.\n   *\n   * @param creditCardAccount The credit card account this information is referencing.\n   */\n  public setCreditCardAccount(creditCardAccount: CreditCardAccountDetails): void {\n    this.creditCardAccount = creditCardAccount;\n  }\n\n  // Inherited.\n  public getAccountDetails(): AccountDetails {\n    return this.getCreditCardAccount();\n  }\n\n  /**\n   * Whether this account supports download of transaction details.\n   *\n   * @return Whether this account supports download of transaction details.\n   */\n  public getSupportsTransactionDetailOperations(): boolean {\n    return this.supportsTransactionDetailOperations;\n  }\n\n  /**\n   * Whether this account supports download of transaction details.\n   *\n   * @param supportsTransactionDetailOperations Whether this account supports download of transaction details.\n   */\n  public setSupportsTransactionDetailOperations(supportsTransactionDetailOperations: boolean): void {\n    this.supportsTransactionDetailOperations = supportsTransactionDetailOperations;\n  }\n\n  /**\n   * Whether this account supports transfer operations to other accounts.\n   *\n   * @return Whether this account supports transfer operations to other accounts.\n   */\n  public getSupportsTransferToOtherAccountOperations(): boolean {\n    return this.supportsTransferToOtherAccountOperations;\n  }\n\n  /**\n   * Whether this account supports transfer operations to other accounts.\n   *\n   * @param supportsTransferToOtherAccountOperations Whether this account supports transfer operations to other accounts.\n   */\n  public setSupportsTransferToOtherAccountOperations(supportsTransferToOtherAccountOperations: boolean): void {\n    this.supportsTransferToOtherAccountOperations = supportsTransferToOtherAccountOperations;\n  }\n\n  /**\n   * Whether this account supports transfer operations from other accounts.\n   *\n   * @return Whether this account supports transfer operations from other accounts.\n   */\n  public getSupportsTransferFromOtherAccountOperations(): boolean {\n    return this.supportsTransferFromOtherAccountOperations;\n  }\n\n  /**\n   * Whether this account supports transfer operations from other accounts.\n   *\n   * @param supportsTransferFromOtherAccountOperations Whether this account supports transfer operations from other accounts.\n   */\n  public setSupportsTransferFromOtherAccountOperations(supportsTransferFromOtherAccountOperations: boolean): void {\n    this.supportsTransferFromOtherAccountOperations = supportsTransferFromOtherAccountOperations;\n  }\n\n  /**\n   * The account status.\n   *\n   * @return The account status.\n   */\n  public getStatus(): AccountStatus {\n    return this.status;\n  }\n\n  /**\n   * The account status.\n   *\n   * @param status The account status.\n   */\n  public setStatus(status: AccountStatus): void {\n    this.status = status;\n  }\n}\n\nAggregate_add( CreditCardAccountInfo, \"CCACCTINFO\" );\nChildAggregate_add(CreditCardAccountInfo, { name: \"CCACCTFROM\", required: true, order: 0, type: CreditCardAccountDetails, read: CreditCardAccountInfo.prototype.getCreditCardAccount, write: CreditCardAccountInfo.prototype.setCreditCardAccount });\nElement_add(CreditCardAccountInfo, { name: \"SUPTXDL\", required: true, order: 10, type: Boolean, read: CreditCardAccountInfo.prototype.getSupportsTransactionDetailOperations, write: CreditCardAccountInfo.prototype.setSupportsTransactionDetailOperations });\nElement_add(CreditCardAccountInfo, { name: \"XFERSRC\", required: true, order: 20, type: Boolean, read: CreditCardAccountInfo.prototype.getSupportsTransferToOtherAccountOperations, write: CreditCardAccountInfo.prototype.setSupportsTransferToOtherAccountOperations });\nElement_add(CreditCardAccountInfo, { name: \"XFERDEST\", required: true, order: 30, type: Boolean, read: CreditCardAccountInfo.prototype.getSupportsTransferFromOtherAccountOperations, write: CreditCardAccountInfo.prototype.setSupportsTransferFromOtherAccountOperations });\nElement_add(CreditCardAccountInfo, { name: \"SVCSTATUS\", required: true, order: 40, type: AccountStatus, read: CreditCardAccountInfo.prototype.getStatus, write: CreditCardAccountInfo.prototype.setStatus });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { StatementResponse } from \"../common/StatementResponse\";\nimport { CreditCardAccountDetails } from \"./CreditCardAccountDetails\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class CreditCardStatementResponse extends StatementResponse {\n\n  private account: CreditCardAccountDetails;\n\n  public getResponseMessageName(): string {\n    return \"credit card statement\";\n  }\n\n  /**\n   * The account for the statement.\n   *\n   * @return The account for the statement.\n   */\n  public getAccount(): CreditCardAccountDetails {\n    return this.account;\n  }\n\n  /**\n   * The account for the statement.\n   *\n   * @param account The account for the statement.\n   */\n  public setAccount(account: CreditCardAccountDetails): void {\n    this.account = account;\n  }\n}\n\nAggregate_add( CreditCardStatementResponse, \"CCSTMTRS\");\nChildAggregate_add(CreditCardStatementResponse, { name:\"CCACCTFROM\", order: 10, type: CreditCardAccountDetails, read: CreditCardStatementResponse.prototype.getAccount, write: CreditCardStatementResponse.prototype.setAccount });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CreditCardStatementResponse } from \"./CreditCardStatementResponse\";\nimport { TransactionWrappedResponseMessage } from \"../TransactionWrappedResponseMessage\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class CreditCardStatementResponseTransaction extends TransactionWrappedResponseMessage<CreditCardStatementResponse> {\n\n  private message: CreditCardStatementResponse;\n\n  /**\n   * The message.\n   *\n   * @return The message.\n   */\n  public getMessage(): CreditCardStatementResponse {\n    return this.message;\n  }\n\n  /**\n   * The message.\n   *\n   * @param message The message.\n   */\n  public setMessage(message: CreditCardStatementResponse): void {\n    this.message = message;\n  }\n\n  // Inherited.\n  public getWrappedMessage(): CreditCardStatementResponse {\n    return this.getMessage();\n  }\n}\n\nAggregate_add( CreditCardStatementResponseTransaction, \"CCSTMTTRNRS\" )\nChildAggregate_add(CreditCardStatementResponseTransaction, { required: true, order: 30, type: CreditCardStatementResponse, read: CreditCardStatementResponseTransaction.prototype.getMessage, write: CreditCardStatementResponseTransaction.prototype.setMessage });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ResponseMessageSet } from \"../ResponseMessageSet\";\nimport { CreditCardStatementResponseTransaction } from \"./CreditCardStatementResponseTransaction\";\nimport { MessageSetType } from \"../MessageSetType\";\nimport { ResponseMessage } from \"../ResponseMessage\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class CreditCardResponseMessageSet extends ResponseMessageSet {\n\n  private statementResponses: Array<CreditCardStatementResponseTransaction>;\n\n  public getType(): MessageSetType {\n    return MessageSetType.creditcard;\n  }\n\n  /**\n   * The statement response list.\n   *\n   * Most OFX files have a single statement response, except MT2OFX\n   * which outputs OFX with multiple statement responses\n   * in a single banking response message set.\n   *\n   * @return The statement response list.\n   */\n  public getStatementResponses(): Array<CreditCardStatementResponseTransaction> {\n    return this.statementResponses;\n  }\n\n\n  /**\n   * The statement reponse list.\n   *\n   * @param statementResponses The statement response list.\n   */\n  public setStatementResponses(statementResponses: Array<CreditCardStatementResponseTransaction>): void {\n    this.statementResponses = statementResponses;\n  }\n\n\n  /**\n   * The first statement response.\n   *\n   * @return the first bank statement response.\n   * @deprecated Use getStatementResponses() because sometimes there are multiple responses\n   */\n  public getStatementResponse(): CreditCardStatementResponseTransaction {\n    return this.statementResponses == null || this.statementResponses.length == 0 ? null : this.statementResponses[0];\n  }\n\n  /**\n   * The statement response.\n   *\n   * @param statementResponse The statement response.\n   */\n  public setStatementResponse(statementResponse: CreditCardStatementResponseTransaction): void {\n    this.statementResponses = [statementResponse];\n  }\n\n\n  // Inherited.\n  public getResponseMessages(): Array<ResponseMessage> {\n    return this.statementResponses;\n  }\n}\n\nAggregate_add( CreditCardResponseMessageSet, \"CREDITCARDMSGSRSV1\" );\nChildAggregate_add(CreditCardResponseMessageSet, { order: 0, type: Array, collectionEntryType: CreditCardStatementResponseTransaction, read: CreditCardResponseMessageSet.prototype.getStatementResponses, write: CreditCardResponseMessageSet.prototype.setStatementResponses });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Type of investment account.\n *\n * @author Jon Perlow\n * @see \"OFX Spec, Section 13.6.2\"\n */\nexport enum InvestmentAccountType {\n  INDIVIDUAL,\n  JOINT,\n  TRUST,\n  CORPORATE,\n}\n\n\nexport function InvestmentAccountType_fromOfx(ofxVal: string): InvestmentAccountType {\n  if (\"INDIVIDUAL\" === ofxVal) {\n    return InvestmentAccountType.INDIVIDUAL;\n  } else if (\"JOINT\" === ofxVal) {\n    return InvestmentAccountType.JOINT;\n  } else if (\"CORPORATE\" === ofxVal) {\n    return InvestmentAccountType.CORPORATE;\n  } else if (\"CORPORATE\" === ofxVal) {\n    return InvestmentAccountType.CORPORATE;\n  } else {\n    return null;\n  }\n}\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Activation status of an account.\n * @see \"Section 13.6.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum ActivationStatus {\n  ACTIVE,\n  PENDING,\n  AVAILABLE\n}\n\nexport function ActivationStatus_fromOfx(ofxVal: string): ActivationStatus {\n  if (\"ACTIVE\" === ofxVal) {\n    return ActivationStatus.ACTIVE;\n  } else if (\"PEND\" === ofxVal) {\n    return ActivationStatus.PENDING;\n  } else if (\"AVAIL\" === ofxVal) {\n    return ActivationStatus.AVAILABLE;\n  } else {\n    return null;\n  }\n}\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n//import java.util.HashMap;\n//import java.util.Map;\n\n/**\n * @author Jon Perlow\n * @see \"OFX Spec, Section 13.6.2.1\"\n */\nexport enum UnitedStatesAccountType {\n\n  /** A 401(k) retirement account */\n  R401K,\n\n  /** A 403(B) retirement account */\n  R403B,\n\n  /** An IRA retirement account */\n  IRA,\n\n  /** Keough (money purchase/profit sharing) account */\n  KEOUGH,\n\n  /** Other account type */\n  OTHER,\n\n  /** Salary Reduction Employer Pension Plan */\n  SARSEP,\n\n  /** Savings Incentive Match Plan for Employees*/\n  SIMPLE,\n\n  /** Regular investment account */\n  NORMAL,\n\n  /** Tax Deferred Annuity */\n  TDA,\n\n  /** Trust (including UTMA) */\n  TRUST,\n\n  /** Custodial account */\n  UGMA\n}\n\ninterface OfxMappingType {\n  [key: string]: UnitedStatesAccountType;\n}\n\nvar ofxMapping: OfxMappingType = {\n  \"401K\": UnitedStatesAccountType.R401K,\n  \"403B\": UnitedStatesAccountType.R403B,\n  \"IRA\": UnitedStatesAccountType.IRA,\n  \"KEOUGH\": UnitedStatesAccountType.KEOUGH,\n  \"OTHER\": UnitedStatesAccountType.OTHER,\n  \"SARSEP\": UnitedStatesAccountType.SARSEP,\n  \"SIMPLE\": UnitedStatesAccountType.SIMPLE,\n  \"NORMAL\": UnitedStatesAccountType.NORMAL,\n  \"TDA\": UnitedStatesAccountType.TDA,\n  \"TRUST\": UnitedStatesAccountType.TRUST,\n  \"UGMA\": UnitedStatesAccountType.UGMA,\n};\n\nexport function UnitedStatesAccountType_fromOfx(ofxVal: string): UnitedStatesAccountType {\n  return ofxVal == null ? null : ofxMapping[ofxVal];\n}\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { AccountInfo } from \"../../common/AccountInfo\";\nimport { InvestmentAccountDetails } from \"./InvestmentAccountDetails\";\nimport { AccountDetails } from \"../../common/AccountDetails\";\nimport { UnitedStatesAccountType, UnitedStatesAccountType_fromOfx } from \"./UnitedStatesAccountType\";\nimport { ActivationStatus, ActivationStatus_fromOfx } from \"./ActivationStatus\";\nimport { InvestmentAccountType } from \"./AccountType\";\nimport { InvestmentAccountType_fromOfx } from \"./AccountType\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\nimport { Element_add } from \"../../../../meta/Element_add\";\n\n\n/**\n * Aggregate for the info about a brokerage account.\n *\n * @author Jon Perlow\n * @see \"OFX Spec, Section 13.6.2\"\n */\nexport class InvestmentAccountInfo implements AccountInfo {\n\n  private investmentAccount: InvestmentAccountDetails;\n  private unitedStatesAccountType: string;\n  private supportsChecking: boolean;\n  private activationStatus: string;\n  private investmentAccountType: string;\n  private optionLevel: string;\n\n  /**\n   * Gets the investment account this information is referencing.\n   *\n   * @return the investment account this information is referencing\n   */\n  public getInvestmentAccount(): InvestmentAccountDetails {\n    return this.investmentAccount;\n  }\n\n  /**\n   * Sets the investment account this information is referencing. This is a required field\n   * according to the OFX spec.\n   *\n   * @param investmentAccount the investment account this information is referencing\n   */\n  public setInvestmentAccount(investmentAccount: InvestmentAccountDetails): void {\n    this.investmentAccount = investmentAccount;\n  }\n\n  // Inherited.\n  public getAccountDetails(): AccountDetails {\n    return this.getInvestmentAccount();\n  }\n\n  /**\n   * Gets the United States account type. This is a required field according to the OFX spec.\n   * @see \"OFX Spec, Section 13.6.1\"\n   *\n   * @return the United States account type\n   */\n  public getUnitedStatesAccountType(): string {\n    return this.unitedStatesAccountType;\n  }\n\n  /**\n   * Sets United States account type. This is a required field according to the OFX spec.\n   * @see \"OFX Spec, Section 13.6.1\"\n   *\n   * @param unitedStatesAccountType the United States account type\n   */\n  public setUnitedStatesAccountType(unitedStatesAccountType: string): void {\n    this.unitedStatesAccountType = unitedStatesAccountType;\n  }\n\n  /**\n   * Gets the United States account type as one of the well-known types.\n   *\n   * @return the account type or null if it's not one of the well-known types\n   */\n  public getUnitedStatesAccountTypeEnum(): UnitedStatesAccountType {\n    return UnitedStatesAccountType_fromOfx(this.unitedStatesAccountType);\n  }\n\n  /**\n   * Gets whether the account supports checking. This is a required field according to the OFX spec.\n   * @see \"OFX Spec, Section 13.6.1\"\n   *\n   * @return whether the account supports checking\n   */\n  public getSupportsChecking(): boolean {\n    return this.supportsChecking;\n  }\n\n  /**\n   * Sets whether the account supports checking. This is a required field according to the OFX spec.\n   * @see \"OFX Spec, Section 13.6.1\"\n   *\n   * @param supportsChecking whether the account supports checking\n   */\n  public setSupportsChecking(supportsChecking: boolean): void {\n    this.supportsChecking = supportsChecking;\n  }\n\n  /**\n   * Gets the activation status for investment statement download. This is a required field\n   * according to the OFX spec.\n   *\n   * @return the activation status\n   */\n  public getActivationStatus(): string {\n    return this.activationStatus;\n  }\n\n  /**\n   * Sets the activation status for investment statement download. This is a required field\n   * according to the OFX spec.\n   *\n   * @param activationStatus the activation status\n   */\n  public setActivationStatus(activationStatus: string): void {\n    this.activationStatus = activationStatus;\n  }\n\n  /**\n   * Gets the activation status as one of the well-known types.\n   *\n   * @return the activation status or null if it wasn't one of the well known types\n   */\n  public getActivationStatusEnum(): ActivationStatus {\n    return ActivationStatus_fromOfx(this.getActivationStatus());\n  }\n\n  /**\n   * Gets the type of investment account. One of \"INDIVIDUAL\", \"JOINT\", \"TRUST\", or \"CORPORATE\".\n   * This is an optional field according to the OFX spec.\n   *\n   * @return the type of account\n   */\n  public getInvestmentAccountType(): string {\n    return this.investmentAccountType;\n  }\n\n  /**\n   * Sets the type of investment account. One of \"INDIVIDUAL\", \"JOINT\", \"TRUST\", or \"CORPORATE\".\n   * This is an optional field according to the OFX spec.\n   *\n   * @param investmentAccountType the type of account\n   */\n  public setInvestmentAccountType(investmentAccountType: string): void {\n    this.investmentAccountType = investmentAccountType;\n  }\n\n  /**\n   * Gets the type of investment account as one of the well-known types.\n   *\n   * @return the type of investment account or null if it's not one of the well-known types\n   */\n  public getInvestmentAccountTypeEnum(): InvestmentAccountType {\n    return  InvestmentAccountType_fromOfx(this.getInvestmentAccountType());\n  }\n\n  /**\n   * Gets the description of option trading privileges. * This is an optional field according to\n   * the OFX spec.\n   *\n   * @return the description of option trading privileges.\n   */\n  public getOptionLevel(): string {\n    return this.optionLevel;\n  }\n\n  /**\n   * Sets the description of option trading privileges. * This is an optional field according to\n   * the OFX spec.\n   *\n   * @param optionLevel the description of option trading privileges.\n   */\n  public setOptionLevel(optionLevel: string): void {\n    this.optionLevel = optionLevel;\n  }\n}\n\nAggregate_add( InvestmentAccountInfo, \"INVACCTINFO\" );\nChildAggregate_add(InvestmentAccountInfo, { name: \"INVACCTFROM\", required: true, order: 0, type: InvestmentAccountDetails, read: InvestmentAccountInfo.prototype.getInvestmentAccount, write: InvestmentAccountInfo.prototype.setInvestmentAccount });\nElement_add(InvestmentAccountInfo, { name: \"USPRODUCTTYPE\", required: true, order: 10, type: String, read: InvestmentAccountInfo.prototype.getUnitedStatesAccountType, write: InvestmentAccountInfo.prototype.setUnitedStatesAccountType });\nElement_add(InvestmentAccountInfo, { name: \"CHECKING\", required: true, order: 20, type: Boolean, read: InvestmentAccountInfo.prototype.getSupportsChecking, write: InvestmentAccountInfo.prototype.setSupportsChecking });\nElement_add(InvestmentAccountInfo, { name: \"SVCSTATUS\", required: true, order: 30, type: String, read: InvestmentAccountInfo.prototype.getActivationStatus, write: InvestmentAccountInfo.prototype.setActivationStatus });\nElement_add(InvestmentAccountInfo, { name: \"INVACCTTYPE\", order: 40, type: String, read: InvestmentAccountInfo.prototype.getInvestmentAccountType, write: InvestmentAccountInfo.prototype.setInvestmentAccountType });\nElement_add(InvestmentAccountInfo, { name: \"OPTIONLEVEL\", order: 50, type: String, read: InvestmentAccountInfo.prototype.getOptionLevel, write: InvestmentAccountInfo.prototype.setOptionLevel });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Types of well-known sub-accounts.\n * @see \"Section 13.9.2.4.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum SubAccountType {\n  CASH,\n  MARGIN,\n  SHORT,\n  OTHER\n}\n\nexport function SubAccountType_fromOfx(ofxVal: string): SubAccountType {\n  if (\"CASH\" === ofxVal) {\n    return SubAccountType.CASH;\n  } else if (\"MARGIN\" === ofxVal) {\n    return SubAccountType.MARGIN;\n  } else if (\"SHORT\" === ofxVal) {\n    return SubAccountType.SHORT;\n  } else if (\"OTHER\" === ofxVal) {\n    return SubAccountType.OTHER;\n  } else {\n    return null;\n  }\n}\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Type of position.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum PositionType {\n  LONG,\n  SHORT\n}\n\nexport function PositionType_fromOfx(ofxVal: string): PositionType {\n  if (\"LONG\" === ofxVal) {\n    return PositionType.LONG;\n  } else if (\"SHORT\" === ofxVal) {\n    return PositionType.SHORT;\n  } else {\n    return null;\n  }\n}\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Types of 401(k) sources.\n * @see \"Section 13.9.2.4.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum Inv401KSource {\n  PRETAX,\n  AFTER_TAX,\n  MATCH,\n  PROFIT_SHARING,\n  ROLLOVER,\n  OTHER_VEST,\n  OTHER_NONVEST\n}\n\ninterface MappingType {\n  [key: string]: Inv401KSource;\n}\n\nvar ofxMapping: MappingType = {\n  \"PRETAX\": Inv401KSource.PRETAX,\n  \"AFTERTAX\": Inv401KSource.AFTER_TAX,\n  \"MATCH\": Inv401KSource.MATCH,\n  \"PROFITSHARING\": Inv401KSource.PROFIT_SHARING,\n  \"ROLLOVER\": Inv401KSource.ROLLOVER,\n  \"OTHERVEST\": Inv401KSource.OTHER_VEST,\n  \"OTHERNONVEST\": Inv401KSource.OTHER_NONVEST,\n};\n\nexport function Inv401KSource_fromOfx(ofxVal: string): Inv401KSource {\n  return ofxVal == null ? null : ofxMapping[ofxVal];\n}\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SecurityId } from \"../../seclist/SecurityId\";\nimport { SubAccountType, SubAccountType_fromOfx } from \"../accounts/SubAccountType\";\nimport { PositionType, PositionType_fromOfx } from \"./PositionType\";\nimport { Inv401KSource, Inv401KSource_fromOfx } from \"./Inv401KSource\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\nimport { Element_add } from \"../../../../meta/Element_add\";\n\n\n/**\n * Class for the investment position aggregate.\n * @see \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class InvestmentPosition {\n\n  private securityId: SecurityId;\n  private heldInAccount: string;\n  private positionType: string;\n  private units: number;\n  private unitPrice: number;\n  private marketValue: number;\n  private marketValueDate: Date;\n  private currencyCode: string;\n  private memo: string;\n  private inv401kSource: string;\n\n  /**\n   * Gets the security id for the position. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the security id for the position\n   */\n  public getSecurityId(): SecurityId {\n    return this.securityId;\n  }\n\n  /**\n   * Sets the security id for the position. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @param securityId the security id for the position\n   */\n  public setSecurityId(securityId: SecurityId): void {\n    this.securityId = securityId;\n  }\n\n  /**\n   * Gets the sub-account type. One of \"CASH\", \"MARGIN\", \"SHORT\", \"OTHER\". This is a required field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the sub-account type\n   */\n  public getHeldInAccount(): string {\n    return this.heldInAccount;\n  }\n\n  /**\n   * Sets the sub-account type. One of \"CASH\", \"MARGIN\", \"SHORT\", \"OTHER\". This is a required field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @param heldInAccount the sub-account type\n   */\n  public setHeldInAccount(heldInAccount: string): void {\n    this.heldInAccount = heldInAccount;\n  }\n\n  /**\n   * Gets the sub-account type as one of the well-known types.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the sub-account type or null if it's not one of the well-known types\n   */\n  getHeldInAccountEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getHeldInAccount());\n  }\n\n  /**\n   * Gets the position type. One of SHORT or LONG. This is a required field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the position type\n   */\n  public getPositionType(): string {\n    return this.positionType;\n  }\n\n  /**\n   * Sets the position type. One of SHORT or LONG. This is a required field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @param positionType the position type\n   */\n  public setPositionType(positionType: string): void {\n    this.positionType = positionType;\n  }\n\n  /**\n   * Gets the position type as one of the well-known types.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the position type or null if it's not one of the well-known types\n   */\n  public getPositionTypeEnum(): PositionType {\n    return PositionType_fromOfx(this.getPositionType());\n  }\n\n  /**\n   * Gets the number of units in the position. For stocks, mutual funds, and others, this\n   * is the number of shares. For bonds, this is the face value. For options, this is the number of\n   * contacts. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the number of units in the position\n   */\n  public getUnits(): number {\n    return this.units;\n  }\n\n  /**\n   * Sets the number of units in the position. For stocks, mutual funds, and others, this\n   * is the number of shares. For bonds, this is the face value. For options, this is the number of\n   * contacts. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @param units the number of units in the position\n   */\n  public setUnits(units: number): void {\n    this.units = units;\n  }\n\n  /**\n   * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n   * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n   * per contact) price. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the per unit price\n   */\n  public getUnitPrice(): number {\n    return this.unitPrice;\n  }\n\n  /**\n   * Sets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n   * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n   * per contact) price. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @param unitPrice the per unit price\n   */\n  public setUnitPrice(unitPrice: number): void {\n    this.unitPrice = unitPrice;\n  }\n\n  /**\n   * Gets the market value of this position. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the market value of the position\n   */\n  public getMarketValue(): number {\n    return this.marketValue;\n  }\n\n  /**\n   * Sets the market value of this position. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @param marketValue the market value of the position\n   */\n  public setMarketValue(marketValue: number): void {\n    this.marketValue = marketValue;\n  }\n\n  /**\n   * Gets the date and time of the unit price and market value. This is a required field according\n   * to the OFX spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the market value date\n   */\n  public getMarketValueDate(): Date {\n    return this.marketValueDate;\n  }\n\n  /**\n   * Sets the date and time of the unit price and market value. This is a required field according\n   * to the OFX spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @param marketValueDate the market value date\n   */\n  public setMarketValueDate(marketValueDate: Date): void {\n    this.marketValueDate = marketValueDate;\n  }\n\n  /**\n   * Gets the currency code of the position. This is an optional field according to the OFX spec.\n   * If not present, it's the default currency of the account.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the currency code of the position or null for the default currency\n   */\n  public getCurrencyCode(): string {\n    return this.currencyCode;\n  }\n\n  /**\n   * Sets the currency code of the position. This is an optional field according to the OFX spec.\n   * If not present, it's the default currency of the account.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @param currencyCode the currency code of the position or null for the default currency\n   */\n  public setCurrencyCode(currencyCode: string): void {\n    this.currencyCode = currencyCode;\n  }\n\n  /**\n   * Gets the memo associated with the position. This is an optional field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the memo\n   */\n  public getMemo(): string {\n    return this.memo;\n  }\n\n  /**\n   * Sets the memo associated with the position. This is an optional field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @param memo the memo\n   */\n  public setMemo(memo: string): void {\n    this.memo = memo;\n  }\n\n  /**\n   * Gets the 401K source for the sale. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the 401k source\n   */\n  public get401kSource(): string {\n    return this.inv401kSource;\n  }\n\n  /**\n   * Sets the 401K source for the sale. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param inv401kSource the 401k source\n   */\n  public set401kSource(inv401kSource: string): void {\n    this.inv401kSource = inv401kSource;\n  }\n\n  /**\n   * Gets the 401k source as one of the well-known types.\n   *\n   * @return the 401k source or null if it's not one of the well-known types\n   */\n  public get401kSourceEnum(): Inv401KSource {\n    return Inv401KSource_fromOfx(this.get401kSource());\n  }\n}\n\nAggregate_add( InvestmentPosition, \"INVPOS\" );\nChildAggregate_add(InvestmentPosition, { required: true, order: 10, type: SecurityId, read: InvestmentPosition.prototype.getSecurityId, write: InvestmentPosition.prototype.setSecurityId });\nElement_add(InvestmentPosition, { name: \"HELDINACCT\", required: true, order: 20, type: String, read: InvestmentPosition.prototype.getHeldInAccount, write: InvestmentPosition.prototype.setHeldInAccount });\nElement_add(InvestmentPosition, { name: \"POSTYPE\", required: true, order: 30, type: String, read: InvestmentPosition.prototype.getPositionType, write: InvestmentPosition.prototype.setPositionType });\nElement_add(InvestmentPosition, { name: \"UNITS\", required: true, order: 40, type: Number, read: InvestmentPosition.prototype.getUnits, write: InvestmentPosition.prototype.setUnits });\nElement_add(InvestmentPosition, { name: \"UNITPRICE\", required: true, order: 50, type: Number, read: InvestmentPosition.prototype.getUnitPrice, write: InvestmentPosition.prototype.setUnitPrice });\nElement_add(InvestmentPosition, { name: \"MKTVAL\", required: true, order: 60, type: Number, read: InvestmentPosition.prototype.getMarketValue, write: InvestmentPosition.prototype.setMarketValue });\nElement_add(InvestmentPosition, { name: \"DTPRICEASOF\", required: true, order: 70, type: Date, read: InvestmentPosition.prototype.getMarketValueDate, write: InvestmentPosition.prototype.setMarketValueDate });\nElement_add(InvestmentPosition, { name: \"CURRENCY\", order: 80, type: String, read: InvestmentPosition.prototype.getCurrencyCode, write: InvestmentPosition.prototype.setCurrencyCode });\nElement_add(InvestmentPosition, { name: \"MEMO\", order: 90, type: String, read: InvestmentPosition.prototype.getMemo, write: InvestmentPosition.prototype.setMemo });\nElement_add(InvestmentPosition, { name: \"INV401KSOURCE\", order: 100, type: String, read: InvestmentPosition.prototype.get401kSource, write: InvestmentPosition.prototype.set401kSource });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { InvestmentPosition } from \"./InvestmentPosition\";\nimport { SecurityId } from \"../../seclist/SecurityId\";\nimport { SubAccountType, SubAccountType_fromOfx } from \"../accounts/SubAccountType\";\nimport { PositionType, PositionType_fromOfx } from \"./PositionType\";\nimport { Inv401KSource, Inv401KSource_fromOfx } from \"./Inv401KSource\";\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\n\n\n/**\n * Base class for the various types of positions.\n * <br>\n * This class exposes a read-only view of the flattened aggregates that are\n * common to all positions as a convenience to application\n * developers who may not find the ofx aggregation model intuitive.\n *\n * @author Jon Perlow\n */\nexport class BasePosition {\n  private investmentPosition: InvestmentPosition;\n\n  /**\n   * Gets the investment position child aggregate.\n   *\n   * @return the investment position child aggregate\n   */\n  public getInvestmentPosition(): InvestmentPosition {\n    return this.investmentPosition;\n  }\n\n  /**\n   * Sets the investment position child aggregate.\n   *\n   * @param investmentPosition the investment position child aggregate\n   */\n  public setInvestmentPosition(investmentPosition: InvestmentPosition): void {\n    this.investmentPosition = investmentPosition;\n  }\n\n  /**\n   * Gets the security id for the position. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the security id for the position\n   */\n  public getSecurityId(): SecurityId {\n    return this.getInvestmentPosition().getSecurityId();\n  }\n\n  /**\n   * Gets the sub-account type. One of \"CASH\", \"MARGIN\", \"SHORT\", \"OTHER\". This is a required field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the sub-account type\n   */\n  public getHeldInAccount(): string {\n    return this.getInvestmentPosition().getHeldInAccount();\n  }\n\n  /**\n   * Gets the sub-account type as one of the well-known types.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the sub-account type or null if it's not one of the well-known types\n   */\n  getHeldInAccountEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getHeldInAccount());\n  }\n\n  /**\n   * Gets the position type. One of SHORT or LONG. This is a required field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the position type\n   */\n  public getPositionType(): string {\n    return this.getInvestmentPosition().getPositionType();\n  }\n\n  /**\n   * Gets the position type as one of the well-known types.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the position type or null if it's not one of the well-known types\n   */\n  public getPositionTypeEnum(): PositionType {\n    return PositionType_fromOfx(this.getPositionType());\n  }\n\n  /**\n   * Gets the number of units in the position. For stocks, mutual funds, and others, this\n   * is the number of shares. For bonds, this is the face value. For options, this is the number of\n   * contacts. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the number of units in the position\n   */\n  public getUnits(): number {\n    return this.getInvestmentPosition().getUnits();\n  }\n\n  /**\n   * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n   * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n   * per contact) price. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the per unit price\n   */\n  public getUnitPrice(): number {\n    return this.getInvestmentPosition().getUnitPrice();\n  }\n\n  /**\n   * Gets the market value of this position. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the market value of the position\n   */\n  public getMarketValue(): number {\n    return this.getInvestmentPosition().getMarketValue();\n  }\n\n  /**\n   * Gets the date and time of the unit price and market value. This is a required field according\n   * to the OFX spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the market value date\n   */\n  public getMarketValueDate(): Date {\n    return this.getInvestmentPosition().getMarketValueDate();\n  }\n\n  /**\n   * Gets the currency code of the position. This is an optional field according to the OFX spec.\n   * If not present, it's the default currency of the account.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the currency code of the position or null for the default currency\n   */\n  public getCurrencyCode(): string {\n    return this.getInvestmentPosition().getCurrencyCode();\n  }\n\n  /**\n   * Gets the memo associated with the position. This is an optional field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\n   *\n   * @return the memo\n   */\n  public getMemo(): string {\n    return this.getInvestmentPosition().getMemo();\n  }\n\n  /**\n   * Gets the 401K source for the sale. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the 401k source\n   */\n  public get401kSource(): string {\n    return this.getInvestmentPosition().get401kSource();\n  }\n\n  /**\n   * Gets the 401k source as one of the well-known types.\n   *\n   * @return the 401k source or null if it's not one of the well-known types\n   */\n  public get401kSourceEnum(): Inv401KSource {\n    return Inv401KSource_fromOfx(this.get401kSource());\n  }\n}\n\nChildAggregate_add(BasePosition, { required: true, order: 10, type: InvestmentPosition, read: BasePosition.prototype.getInvestmentPosition, write: BasePosition.prototype.setInvestmentPosition });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { BasePosition } from \"./BasePosition\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\n\n\n/**\n * Represents a debt position.\n * @see \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class DebtPosition extends BasePosition {\n}\n\nAggregate_add( DebtPosition, \"POSDEBT\" )\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { BasePosition } from \"./BasePosition\";\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\n\n\n/**\n * Aggregate for a list of invesment positions.\n * @see \"Section 13.9.2.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class InvestmentPositionList {\n  private positions: Array<BasePosition>;\n\n  /**\n   * Gets the list of positions\n   *\n   * @return the list of positions\n   */\n  public getPositions(): Array<BasePosition> {\n    return this.positions;\n  }\n\n  /**\n   * Sets the list of positions.\n   *\n   * @param positions the list of positions\n   */\n  public setPositions(positions: Array<BasePosition>): void {\n    this.positions = positions;\n  }\n}\n\nAggregate_add( InvestmentPositionList, \"INVPOSLIST\" );\nChildAggregate_add(InvestmentPositionList, { order: 10, type: Array, collectionEntryType: BasePosition, read: InvestmentPositionList.prototype.getPositions, write: InvestmentPositionList.prototype.setPositions });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { BasePosition } from \"./BasePosition\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../../meta/Element_add\";\n\n\n/**\n * Represents a mutual fund position.\n * @see \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class MutualFundPosition extends BasePosition {\n\n  private unitsStreet: number;\n  private unitsUser: number;\n  private reinvestDividends: boolean;\n  private reinvestCapitalGains: boolean;\n\n  /**\n   * Gets the number of units in the financial insititution's street name.\n   *\n   * @return the number of units in the financial insititution's street name.\n   */\n  public getUnitsStreet(): number {\n    return this.unitsStreet;\n  }\n\n  /**\n   * Sets the number of units in the financial insititution's street name.\n   *\n   * @param unitsStreet the number of units in the financial insititution's street name.\n   */\n  public setUnitsStreet(unitsStreet: number): void {\n    this.unitsStreet = unitsStreet;\n  }\n\n  /**\n   * Gets the number of units in the user's name.\n   *\n   * @return the number of units in the user's name.\n   */\n  public getUnitsUser(): number {\n    return this.unitsUser;\n  }\n\n  /**\n   * Sets the number of units in the user's name.\n   *\n   * @param unitsUser the number of units in the user's name.\n   */\n  public setUnitsUser(unitsUser: number): void {\n    this.unitsUser = unitsUser;\n  }\n\n  /**\n   * Gets whether dividends are automatically reinvested.\n   *\n   * @return whether dividends are automatically reinvested\n   */\n  public getReinvestDividends(): boolean {\n    return this.reinvestDividends;\n  }\n\n  /**\n   * Sets whether dividends are automatically reinvested.\n   *\n   * @param reinvestDividends whether dividends are automatically reinvested\n   */\n  public setReinvestDividends(reinvestDividends: boolean): void {\n    this.reinvestDividends = reinvestDividends;\n  }\n\n  /**\n   * Gets whether capital gains are automatically reinvested.\n   *\n   * @return whether capital gains are automatically reinvested\n   */\n  public getReinvestCapitalGains(): boolean {\n    return this.reinvestCapitalGains;\n  }\n\n  /**\n   * Sets whether capital gains are automatically reinvested.\n   *\n   * @param reinvestCapitalGains whether capital gains are automatically reinvested\n   */\n  public setReinvestCapitalGains(reinvestCapitalGains: boolean): void {\n    this.reinvestCapitalGains = reinvestCapitalGains;\n  }\n}\n\nAggregate_add( MutualFundPosition, \"POSMF\" );\nElement_add(MutualFundPosition, { name: \"UNITSSTREET\", order: 20, type: Number, read: MutualFundPosition.prototype.getUnitsStreet, write: MutualFundPosition.prototype.setUnitsStreet });\nElement_add(MutualFundPosition, { name: \"UNITSUSER\", order: 30, type: Number, read: MutualFundPosition.prototype.getUnitsUser, write: MutualFundPosition.prototype.setUnitsUser });\nElement_add(MutualFundPosition, { name: \"REINVDIV\", order: 50, type: Boolean, read: MutualFundPosition.prototype.getReinvestDividends, write: MutualFundPosition.prototype.setReinvestDividends });\nElement_add(MutualFundPosition, { name: \"REINVCG\", order: 60, type: Boolean, read: MutualFundPosition.prototype.getReinvestCapitalGains, write: MutualFundPosition.prototype.setReinvestCapitalGains });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * How a short option is secured.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum ShortOptionSecurity {\n  NAKED,\n  COVERED\n}\n\nexport function ShortOptionSecurity_fromOfx(ofxVal: string): ShortOptionSecurity {\n  if (\"NAKED\" === ofxVal) {\n    return ShortOptionSecurity.NAKED;\n  } else if (\"COVERED\" === ofxVal) {\n    return ShortOptionSecurity.COVERED;\n  } else {\n    return null;\n  }\n}\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { BasePosition } from \"./BasePosition\";\nimport { ShortOptionSecurity, ShortOptionSecurity_fromOfx } from \"./ShortOptionSecurity\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../../meta/Element_add\";\n\n\n/**\n * Represents an options position.\n * @see \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class OptionsPosition extends BasePosition {\n  private secured: string;\n\n  /**\n   * Gets how the options position is secured (for short positions).\n   *\n   * @return how the options position is secured\n   */\n  public getSecured(): string {\n    return this.secured;\n  }\n\n  /**\n   * Sets how the options position is secured (for short positions).\n   *\n   * @param secured how the options position is secured\n   */\n  public setSecured(secured: string): void {\n    this.secured = secured;\n  }\n\n  /**\n   * Gets how the options position is secured as a well-known type.\n   *\n   * @return how the option position is secured or null if it's not a well-known type\n   */\n  getSecuredEnum(): ShortOptionSecurity {\n    return ShortOptionSecurity_fromOfx(this.getSecured());\n  }\n}\n\nAggregate_add( OptionsPosition, \"POSOPT\" );\nElement_add(OptionsPosition, { name: \"SECURED\", order: 20, type: String, read: OptionsPosition.prototype.getSecured, write: OptionsPosition.prototype.setSecured });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { BasePosition } from \"./BasePosition\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\n\n\n/**\n * Represents other types of positions.\n * @see \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class OtherPosition extends BasePosition {\n}\n\nAggregate_add( OtherPosition, \"POSOTHER\" );\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { BasePosition } from \"./BasePosition\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../../meta/Element_add\";\n\n\n/**\n * Represents a stock position.\n * @see \"Section 13.9.2.6.1, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class StockPosition extends BasePosition {\n  private unitsStreet: number;\n  private unitsUser: number;\n  private reinvestDividends: boolean;\n\n  /**\n   * Gets the number of units in the financial insititution's street name.\n   *\n   * @return the number of units in the financial insititution's street name.\n   */\n  public getUnitsStreet(): number {\n    return this.unitsStreet;\n  }\n\n  /**\n   * Sets the number of units in the financial insititution's street name.\n   *\n   * @param unitsStreet the number of units in the financial insititution's street name.\n   */\n  public setUnitsStreet(unitsStreet: number): void {\n    this.unitsStreet = unitsStreet;\n  }\n\n  /**\n   * Gets the number of units in the user's name.\n   *\n   * @return the number of units in the user's name.\n   */\n  public getUnitsUser(): number {\n    return this.unitsUser;\n  }\n\n  /**\n   * Sets the number of units in the user's name.\n   *\n   * @param unitsUser the number of units in the user's name.\n   */\n  public setUnitsUser(unitsUser: number): void {\n    this.unitsUser = unitsUser;\n  }\n\n  /**\n   * Gets whether dividends are automatically reinvested.\n   *\n   * @return whether dividends are automatically reinvested\n   */\n  public getReinvestDividends(): boolean {\n    return this.reinvestDividends;\n  }\n\n  /**\n   * Sets whether dividends are automatically reinvested.\n   *\n   * @param reinvestDividends whether dividends are automatically reinvested\n   */\n  public setReinvestDividends(reinvestDividends: boolean): void {\n    this.reinvestDividends = reinvestDividends;\n  }\n}\n\nAggregate_add( StockPosition, \"POSSTOCK\" );\nElement_add(StockPosition, { name: \"UNITSSTREET\", order: 20, type: Number, read: StockPosition.prototype.getUnitsStreet, write: StockPosition.prototype.setUnitsStreet });\nElement_add(StockPosition, { name: \"UNITSUSER\", order: 30, type: Number, read: StockPosition.prototype.getUnitsUser, write: StockPosition.prototype.setUnitsUser });\nElement_add(StockPosition, { name: \"REINVDIV\", order: 40, type: Boolean, read: StockPosition.prototype.getReinvestDividends, write: StockPosition.prototype.setReinvestDividends });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { BalanceRecord } from \"../../common/BalanceRecord\";\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\n\n\n/**\n * Aggregate for the investment balance list.\n * @see \"Section 13.9.2.7, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class BalanceList {\n\n  private balanceRecords: Array<BalanceRecord>;\n\n  /**\n   * Gets the list of balance records.\n   *\n   * @return the list of balance records.\n   */\n  public getBalanceRecords(): Array<BalanceRecord> {\n    return this.balanceRecords;\n  }\n\n  /**\n   * Sets the list of balance records.\n   *\n   * @param balanceRecords the list of balance records.\n   */\n  public setBalanceRecords(balanceRecords: Array<BalanceRecord>): void {\n    this.balanceRecords = balanceRecords;\n  }\n}\n\nAggregate_add( BalanceList, \"BALLIST\" );\nChildAggregate_add(BalanceList, { order: 10, type: Array, collectionEntryType: BalanceRecord, read: BalanceList.prototype.getBalanceRecords, write: BalanceList.prototype.setBalanceRecords });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { BalanceList } from \"./BalanceList\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../../meta/Element_add\";\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\n\n\n/**\n * Aggregate for the investment balance.\n * @see \"Section 13.9.2.7, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class InvestmentBalance {\n\n  private availableCash: number;\n  private marginBalance: number;\n  private shortBalance: number;\n  private buyingPower: number;\n  private balanceList: BalanceList;\n\n  /**\n   * Gets the available cash balance across all sub-accounts, including sweep funds. This is\n   * required field according to the OFX spec.\n   *\n   * @return the available cash balance\n   */\n  public getAvailableCash(): number {\n    return this.availableCash;\n  }\n\n  /**\n   * Sets the available cash balance across all sub-accounts, including sweep funds. This is\n   * required field according to the OFX spec.\n   *\n   * @param availableCash the available cash balance\n   */\n  public setAvailableCash(availableCash: number): void {\n    this.availableCash = availableCash;\n  }\n\n  /**\n   * Gets the margin account balance. A positive balance indicates a positive cash balance, while\n   * a negative balance indicates the customer borrowed funds. This is a required field according\n   * to the OFX spec.\n   *\n   * @return the margin account balance\n   */\n  public getMarginBalance(): number {\n    return this.marginBalance;\n  }\n\n  /**\n   * Sets the margin account balance. A positive balance indicates a positive cash balance, while\n   * a negative balance indicates the customer borrowed funds. This is a required field according\n   * to the OFX spec.\n   *\n   * @param marginBalance the margin account balance\n   */\n  public setMarginBalance(marginBalance: number): void {\n    this.marginBalance = marginBalance;\n  }\n\n  /**\n   * Gets the market value of all short positions. This is a positive balance. This is a required\n   * field according to the OFX spec.\n   *\n   * @return the market value of all short positions\n   */\n  public getShortBalance(): number {\n    return this.shortBalance;\n  }\n\n  /**\n   * Sets the market value of all short positions. This is a positive balance. This is a required\n   * field according to the OFX spec.\n   *\n   * @param shortBalance the market value of all short positions\n   */\n  public setShortBalance(shortBalance: number): void {\n    this.shortBalance = shortBalance;\n  }\n\n  /**\n   * Gets the buying power amount. This is an optional field according to the OFX spec.\n   *\n   * @return the buying power\n   */\n  public getBuyingPower(): number {\n    return this.buyingPower;\n  }\n\n  /**\n   * Sets the buying power amount. This is an optional field according to the OFX spec.\n   *\n   * @param buyingPower the buying power\n   */\n  public setBuyingPower(buyingPower: number): void {\n    this.buyingPower = buyingPower;\n  }\n\n  /**\n   * Gets the investment balance list. This is an optional field according to the OFX spec.\n   *\n   * @return the investment balance list\n   */\n  public getBalanceList(): BalanceList {\n    return this.balanceList;\n  }\n\n  /**\n   * Sets the investment balance list. This is an optional field according to the OFX spec.\n   *\n   * @param balanceList the investment balance list\n   */\n  public setBalanceList(balanceList: BalanceList): void {\n    this.balanceList = balanceList;\n  }\n}\n\nAggregate_add(InvestmentBalance, \"INVBAL\");\nElement_add(InvestmentBalance, { name: \"AVAILCASH\", required: true, order: 10, type: Number, read: InvestmentBalance.prototype.getAvailableCash, write: InvestmentBalance.prototype.setAvailableCash });\nElement_add(InvestmentBalance, { name: \"MARGINBALANCE\", required: true, order: 20, type: Number, read: InvestmentBalance.prototype.getMarginBalance, write: InvestmentBalance.prototype.setMarginBalance });\nElement_add(InvestmentBalance, { name: \"SHORTBALANCE\", required: true, order: 30, type: Number, read: InvestmentBalance.prototype.getShortBalance, write: InvestmentBalance.prototype.setShortBalance });\nElement_add(InvestmentBalance, { name: \"BUYPOWER\", order: 40, type: Number, read: InvestmentBalance.prototype.getBuyingPower, write: InvestmentBalance.prototype.setBuyingPower });\nChildAggregate_add(InvestmentBalance, { order: 50, type: BalanceList, read: InvestmentBalance.prototype.getBalanceList, write: InvestmentBalance.prototype.setBalanceList });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { InvestmentTransactionType } from \"./TransactionType\";\nimport { InvestmentTransaction } from \"./InvestmentTransaction\";\n\n\n/**\n * Base class for all investment transactions.\n * <br>\n * This class exposes a read-only view of the flattened aggregates that are\n * common to all investment transactions as a convenience to application\n * developers who may not find the ofx aggregation model intuitive.\n *\n * @author Jon Perlow\n */\nexport abstract class BaseInvestmentTransaction {\n\n  private transactionType: InvestmentTransactionType;\n\n  constructor(transactionType: InvestmentTransactionType) {\n    this.transactionType = transactionType;\n  }\n\n  /**\n   * Gets the type of transaction.\n   *\n   * @return the type of transaction\n   */\n  public getTransactionType(): InvestmentTransactionType {\n    return this.transactionType;\n  }\n\n  /**\n   * Gets the {@link InvestmentTransaction} aggregate.\n   *\n   * @return the {@link InvestmentTransaction} aggregate\n   */\n  public abstract getInvestmentTransaction(): InvestmentTransaction;\n\n  /**\n   * Gets the unique financial institution assigned transaction id. This is a\n   * required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\n   *\n   * @return the financial institution asssigned transaction id\n   */\n  public getTransactionId(): string {\n    return this.getInvestmentTransaction().getTransactionId();\n  }\n\n  /**\n   * Gets the server assigned transaction id. This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\n   *\n   * @return the server assigned transaction id\n   */\n  public getServerId(): string {\n    return this.getInvestmentTransaction().getServerId();\n  }\n\n  /**\n   * Gets the trade date of the transaction. For stock splits, this is the\n   * day of record. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\n   *\n   * @return the trade date\n   */\n  public getTradeDate(): Date {\n    return this.getInvestmentTransaction().getTradeDate();\n  }\n\n  /**\n   * Gets the settlement date of the transaction. For stock splits, this is the\n   * day of of execution. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\n   *\n   * @return the trade date\n   */\n  public getSettlementDate(): Date {\n    return this.getInvestmentTransaction().getSettlementDate();\n  }\n\n  /**\n   * For a reveral transaction, gets the financial institution assigned\n   * transaction id for the transaction being revesed.\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\n   *\n   * @return the transaction id of the transaction being reversed\n   */\n  public getReversalTransactionId(): string {\n    return this.getInvestmentTransaction().getReversalTransactionId();\n  }\n\n  /**\n   * Gets the memo associated with the transaction. This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\n   *\n   * @return the memo\n   */\n  public getMemo(): string {\n    return this.getInvestmentTransaction().getMemo();\n  }\n}\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Transaction } from \"../../common/Transaction\";\nimport { SubAccountType, SubAccountType_fromOfx } from \"../accounts/SubAccountType\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\nimport { Element_add } from \"../../../../meta/Element_add\";\n\n\n/**\n * Bank transactions that are part of an investment account statement. Wraps a {@link Transaction}.\n * @see \"Section 13.9.2.3, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class InvestmentBankTransaction {\n\n  private transaction: Transaction;\n  private subAccountFund: string;\n\n  /**\n   * Gets the wrapped transaction aggregate.\n   * @return the wrapped transaction\n   */\n  public getTransaction(): Transaction {\n    return this.transaction;\n  }\n\n  /**\n   * Sets the wrapped transaction aggregate.\n   * @param transaction the wrapped transaction\n   */\n  public setTransaction(transaction: Transaction): void {\n    this.transaction = transaction;\n  }\n\n  /**\n   * Gets the sub account type that the security is from (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.2, OFX Spec\"\n   *\n   * @return the sub account fund for the transaction\n   */\n  public getSubAccountFund(): string {\n    return this.subAccountFund;\n  }\n\n  /**\n   * Sets the sub account type that the security is from (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.2, OFX Spec\"\n   *\n   * @param subAccountFund the sub account fund for the transaction\n   */\n  public setSubAccountFund(subAccountFund: string): void {\n    this.subAccountFund = subAccountFund;\n  }\n\n  /**\n   * Gets the result of getSubAccountFund as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types\n   */\n  public getSubAccountFundEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getSubAccountFund());\n  }\n}\n\nAggregate_add( InvestmentBankTransaction, \"INVBANKTRAN\" );\nChildAggregate_add(InvestmentBankTransaction, { order: 10, type: Transaction, read: InvestmentBankTransaction.prototype.getTransaction, write: InvestmentBankTransaction.prototype.setTransaction });\nElement_add(InvestmentBankTransaction, { name: \"SUBACCTFUND\", required: true, order: 20, type: String, read: InvestmentBankTransaction.prototype.getSubAccountFund, write: InvestmentBankTransaction.prototype.setSubAccountFund });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { BaseInvestmentTransaction } from \"./BaseInvestmentTransaction\";\nimport { InvestmentBankTransaction } from \"./InvestmentBankTransaction\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../../meta/Element_add\";\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\n\n\n/**\n * The transaction list aggregate.\n * @see \"Section 13.9.1.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class InvestmentTransactionList {\n  private start: Date;\n  private end: Date;\n  private transactions: Array<BaseInvestmentTransaction>;\n  private bankTransactions: Array<InvestmentBankTransaction>;\n\n  /**\n   * Gets the start date. This is a required field according to the OFX spec.\n   *\n   * @return The start date\n   */\n  public getStart(): Date {\n    return this.start;\n  }\n\n  /**\n   * Sets the start date. This is a required field according to the OFX spec.\n   *\n   * @param start The start date\n   */\n  public setStart(start: Date): void {\n    this.start = start;\n  }\n\n  /**\n   * Gets the end date. This is a required field according to the OFX spec.\n   *\n   * @return he end date\n   */\n  public getEnd(): Date {\n    return this.end;\n  }\n\n  /**\n   * Sets the end date. This is a required field according to the OFX spec.\n   *\n   * @param end the end date\n   */\n  public setEnd(end: Date): void {\n    this.end = end;\n  }\n\n  /**\n   * Gets the investment transaction list. This is a heterogenous list of different types of\n   * transactions returned in the order the brokerage provides them.\n   *\n   * @return the investment transaction list\n   */\n  public getInvestmentTransactions(): Array<BaseInvestmentTransaction> {\n    return this.transactions;\n  }\n\n  /**\n   * Sets the investment transaction list. This is a heterogenous list of different types of\n   * transactions returned in the order the brokerage provides them.\n   *\n   * @param transactions the investment transaction list\n   */\n  public setInvestmentTransactions(transactions: Array<BaseInvestmentTransaction>): void {\n    this.transactions = transactions;\n  }\n\n  /**\n   * Gets the bank transaction list.\n   *\n   * @return the bank transaction list\n   */\n  public getBankTransactions(): Array<InvestmentBankTransaction> {\n    return this.bankTransactions;\n  }\n\n  /**\n   * Sets the bank transaction list.\n   *\n   * @param bankTransactions the bank transaction list\n   */\n  public setBankTransactions(bankTransactions: Array<InvestmentBankTransaction>): void {\n    this.bankTransactions = bankTransactions;\n  }\n}\n\nAggregate_add( InvestmentTransactionList, \"INVTRANLIST\" );\nElement_add(InvestmentTransactionList, { name: \"DTSTART\", required: true, order: 0, type: Date, read: InvestmentTransactionList.prototype.getStart, write: InvestmentTransactionList.prototype.setStart });\nElement_add(InvestmentTransactionList, { name: \"DTEND\", required: true, order: 10, type: Date, read: InvestmentTransactionList.prototype.getEnd, write: InvestmentTransactionList.prototype.setEnd });\nChildAggregate_add(InvestmentTransactionList, { order: 20, type: Array, collectionEntryType: BaseInvestmentTransaction, read: InvestmentTransactionList.prototype.getInvestmentTransactions, write: InvestmentTransactionList.prototype.setInvestmentTransactions });\nChildAggregate_add(InvestmentTransactionList, { order: 30, type: Array, collectionEntryType: InvestmentBankTransaction, read: InvestmentTransactionList.prototype.getBankTransactions, write: InvestmentTransactionList.prototype.setBankTransactions });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { StatementResponse } from \"../../common/StatementResponse\";\nimport { InvestmentAccountDetails } from \"../accounts/InvestmentAccountDetails\";\nimport { InvestmentTransactionList } from \"../transactions/InvestmentTransactionList\";\nimport { InvestmentPositionList } from \"../positions/InvestmentPositionList\";\nimport { InvestmentBalance } from \"./InvestmentBalance\";\nimport { SecurityList } from \"../../seclist/SecurityList\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../../meta/Element_add\";\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\n\n\n/**\n * Aggregate for the investment statement download response.\n * @see \"Section 13.9.2.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class InvestmentStatementResponse extends StatementResponse {\n\n  private dateOfStatement: Date;\n  private account: InvestmentAccountDetails;\n  private investmentTransactionList: InvestmentTransactionList;\n  private positionList: InvestmentPositionList;\n  private accountBalance: InvestmentBalance;\n\n  // This is not actually technically part of the INVSTMTRS, but according to Section 13.8.4,\n  // OFX spec, this aggregate can appear in a statement response as part of the SECLISTMSGSRQV1\n  // message set even when it wasn't requested. We include it here to make it accessible as part of\n  // the AccountStatement\n  private securityList: SecurityList;\n\n  /**\n   * Gets the name of the response message.\n   *\n   * @return the name of the response message\n   */\n  //@Override\n  public getResponseMessageName(): string {\n    return \"investment statement\";\n  }\n\n  /**\n   * Gets the date and time for the statement download. This is a required field according to the\n   * OFX spec.\n   *\n   * @return the date and time for the statement download\n   */\n  public getDateOfStatement(): Date {\n    return this.dateOfStatement;\n  }\n\n  /**\n   * Sets the date and time for the statement download. This is a required field according to the\n   * OFX spec.\n   *\n   * @param dateOfStatement the date and time for the statement download\n   */\n  public setDateOfStatement(dateOfStatement: Date): void {\n    this.dateOfStatement = dateOfStatement;\n  }\n\n  /**\n   * Gets the account for the statement. This is a required field according to the OFX spec.\n   *\n   * @return the account for the statement\n   */\n  public getAccount(): InvestmentAccountDetails {\n    return this.account;\n  }\n\n  /**\n   * Sets the account for the statement. This is a required field according to the OFX spec.\n   *\n   * @param account the account for the statement\n   */\n  public setAccount(account: InvestmentAccountDetails): void {\n    this.account = account;\n  }\n\n  /**\n   * Gets the transaction list aggregate. This is an optional field according to the OFX spec.\n   *\n   * @return the transaction list aggregate\n   */\n  public getInvestmentTransactionList(): InvestmentTransactionList {\n    return this.investmentTransactionList;\n  }\n\n  /**\n   * Sets the transaction list aggregate. This is an optional field according to the OFX spec.\n   *\n   * @param transactionList the transaction list aggregate\n   */\n  public setInvestmentTransactionList(transactionList: InvestmentTransactionList): void {\n    this.investmentTransactionList = transactionList;\n  }\n\n  /**\n   * Gets the position list aggreate. This is an optional field according to the OFX spec.\n   *\n   * @return the position list aggregate\n   */\n  public getPositionList(): InvestmentPositionList {\n    return this.positionList;\n  }\n\n  /**\n   * Sets the position list aggreate. This is an optional field according to the OFX spec.\n   *\n   * @param positionList the position list aggregate\n   */\n  public setPositionList(positionList: InvestmentPositionList): void {\n    this.positionList = positionList;\n  }\n\n  /**\n   * Gets the account balance. This is an optional field according to the OFX spec.\n   *\n   * @return the account balance\n   */\n  public getAccountBalance(): InvestmentBalance {\n    return this.accountBalance;\n  }\n\n  /**\n   * Sets the account balance. This is an optional field according to the OFX spec.\n   *\n   * @param accountBalance the account balance\n   */\n  public setAccountBalance(accountBalance: InvestmentBalance): void {\n    this.accountBalance = accountBalance;\n  }\n\n  /**\n   * Gets the security list aggregate.\n   * <br>\n   * This is not actually technically part of the investment statement responsr aggregate, but\n   * according to Section 13.8.4, OFX spec, this aggregate can appear the overall response and\n   * we provide it here for convenience.\n   *\n   * @return the security list aggregate\n   */\n  public getSecurityList(): SecurityList {\n    return this.securityList;\n  }\n\n  /**\n   * Sets the security list aggregate.\n   * <br>\n   * This is not actually technically part of the investment statement responsr aggregate, but\n   * according to Section 13.8.4, OFX spec, this aggregate can appear the overall response and\n   * we provide it here for convenience.\n   *\n   * @param securityList the security list aggregate\n   */\n  public setSecurityList(securityList: SecurityList): void {\n    this.securityList = securityList;\n  }\n}\n\nAggregate_add(InvestmentStatementResponse, \"INVSTMTRS\");\nElement_add(InvestmentStatementResponse, { name: \"DTASOF\", required: true, order: 60, type: Date, read: InvestmentStatementResponse.prototype.getDateOfStatement, write: InvestmentStatementResponse.prototype.setDateOfStatement });\nChildAggregate_add(InvestmentStatementResponse, { name:\"INVACCTFROM\", required: true, order: 10, type: InvestmentAccountDetails, read: InvestmentStatementResponse.prototype.getAccount, write: InvestmentStatementResponse.prototype.setAccount });\nChildAggregate_add(InvestmentStatementResponse, { order: 70, type: InvestmentTransactionList, read: InvestmentStatementResponse.prototype.getInvestmentTransactionList, write: InvestmentStatementResponse.prototype.setInvestmentTransactionList });\nChildAggregate_add(InvestmentStatementResponse, { order: 80, type: InvestmentPositionList, read: InvestmentStatementResponse.prototype.getPositionList, write: InvestmentStatementResponse.prototype.setPositionList });\nChildAggregate_add(InvestmentStatementResponse, { order: 90, type: InvestmentBalance, read: InvestmentStatementResponse.prototype.getAccountBalance, write: InvestmentStatementResponse.prototype.setAccountBalance });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { InvestmentStatementResponse } from \"./InvestmentStatementResponse\";\nimport { TransactionWrappedResponseMessage } from \"../../TransactionWrappedResponseMessage\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\n\n\n/**\n * Investment statement transaction response.\n * @see \"Section 13.9.2.1, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class InvestmentStatementResponseTransaction\n    extends TransactionWrappedResponseMessage<InvestmentStatementResponse> {\n\n  private message: InvestmentStatementResponse;\n\n  /**\n   * Gets the the statement response message.\n   *\n   * @return the statement response message.\n   */\n  public getMessage(): InvestmentStatementResponse {\n    return this.message;\n  }\n\n  /**\n   * Sets the the statement response message.\n   *\n   * @param message the statement response message.\n   */\n  public setMessage(message: InvestmentStatementResponse): void {\n    this.message = message;\n  }\n\n  // Inherited.\n  public getWrappedMessage(): InvestmentStatementResponse {\n    return this.getMessage();\n  }\n}\n\nAggregate_add( InvestmentStatementResponseTransaction, \"INVSTMTTRNRS\" );\nChildAggregate_add(InvestmentStatementResponseTransaction, { required: true, order: 30, type: InvestmentStatementResponse, read: InvestmentStatementResponseTransaction.prototype.getMessage, write: InvestmentStatementResponseTransaction.prototype.setMessage });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { MessageSetType } from \"../../MessageSetType\";\nimport { ResponseMessageSet } from \"../../ResponseMessageSet\";\nimport { InvestmentStatementResponseTransaction } from \"./InvestmentStatementResponseTransaction\";\nimport { ResponseMessage } from \"../../ResponseMessage\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\n\n\n/**\n * Investment statement response message set.\n * @see \"Section 13.7.1.2.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class InvestmentStatementResponseMessageSet extends ResponseMessageSet {\n\n  private statementResponses: Array<InvestmentStatementResponseTransaction>;\n\n  public getType(): MessageSetType {\n    return MessageSetType.investment;\n  }\n\n  /**\n   * Gets the statement response list. Most OFX files have a single statement response.\n   *\n   * @return the statement response list\n   */\n  public getStatementResponses(): Array<InvestmentStatementResponseTransaction> {\n    return this.statementResponses;\n  }\n\n\n  /**\n   * Sets the statement reponse list. Most OFX files have a single statement response.\n   *\n   * @param statementResponses the statement response list\n   */\n  public setStatementResponses(statementResponses: Array<InvestmentStatementResponseTransaction>): void {\n    this.statementResponses = statementResponses;\n  }\n\n\n  /**\n   * Gets the first statement response. Use getStatementResponses() if you are expecting multiple\n   * responses.\n   *\n   * @return the first investment statement response.\n   */\n  public getStatementResponse(): InvestmentStatementResponseTransaction {\n    return this.statementResponses == null || this.statementResponses.length == 0 ? null : this.statementResponses[0];\n  }\n\n  /**\n   * Sets the statement response if there is a single response.\n   *\n   * @param statementResponse The statement response.\n   */\n  public setStatementResponse(statementResponse: InvestmentStatementResponseTransaction): void {\n    this.statementResponses = [statementResponse];\n  }\n\n  // Inherited.\n  public getResponseMessages(): Array<ResponseMessage> {\n    return this.statementResponses;\n  }\n}\n\nAggregate_add( InvestmentStatementResponseMessageSet, \"INVSTMTMSGSRSV1\" );\nChildAggregate_add(InvestmentStatementResponseMessageSet, { order: 0, type: Array, collectionEntryType: InvestmentStatementResponseTransaction, read: InvestmentStatementResponseMessageSet.prototype.getStatementResponses, write: InvestmentStatementResponseMessageSet.prototype.setStatementResponses });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../../meta/Element_add\";\n\n\n/**\n * Investment transaction aggregate (\"INVTRAN\").\n * @see \"Section 13.9.2.4.1, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class InvestmentTransaction {\n\n  private transactionId: string;\n  private serverId: string;\n  private tradeDate: Date;\n  private settlementDate: Date;\n  private reversalTransactionId: string;\n  private memo: string;\n\n  /**\n   * Gets the unique financial institution assigned transaction id. This is a\n   * required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\n   *\n   * @return the financial institution asssigned transaction id\n   */\n  public getTransactionId(): string {\n    return this.transactionId;\n  }\n\n  /**\n   * Sets the unique financial institution assigned transaction id. This is a\n   * required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\n   *\n   * @param transactionId the financial institution asssigned transaction id\n   */\n  public setTransactionId(transactionId: string): void {\n    this.transactionId = transactionId;\n  }\n\n  /**\n   * Gets the server assigned transaction id. This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\n   *\n   * @return the server assigned transaction id\n   */\n  public getServerId(): string {\n    return this.serverId;\n  }\n\n  /**\n   * Sets the server assigned transaction id. This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\n   *\n   * @param serverId the server assigned transaction id\n   */\n  public setServerId(serverId: string): void {\n    this.serverId = serverId;\n  }\n\n  /**\n   * Gets the trade date of the transaction. For stock splits, this is the\n   * day of record. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\n   *\n   * @return the trade date\n   */\n  public getTradeDate(): Date {\n    return this.tradeDate;\n  }\n\n  /**\n   * Sets the trade date of the transaction. For stock splits, this is the\n   * day of record. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\n   *\n   * @param tradeDate the trade date\n   */\n  public setTradeDate(tradeDate: Date): void {\n    this.tradeDate = tradeDate;\n  }\n\n  /**\n   * Gets the settlement date of the transaction. For stock splits, this is the\n   * day of of execution. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\n   *\n   * @return the trade date\n   */\n  public getSettlementDate(): Date {\n    return this.settlementDate;\n  }\n\n  /**\n   * Sets the settlement date of the transaction. For stock splits, this is the\n   * day of of execution. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\n   *\n   * @param settlementDate the trade date\n   */\n  public setSettlementDate(settlementDate: Date): void {\n    this.settlementDate = settlementDate;\n  }\n\n  /**\n   * For a reveral transaction, gets the financial institution assigned\n   * transaction id for the transaction being revesed.\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\n   *\n   * @return the transaction id of the transaction being reversed\n   */\n  public getReversalTransactionId(): string {\n    return this.reversalTransactionId;\n  }\n\n  /**\n   * For a reveral transaction, gets the financial institution assigned\n   * transaction id for the transaction being revesed.\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\n   *\n   * @param reversalTransactionId the transaction id of the transaction being reversed\n   */\n  public setReversalTransactionId(reversalTransactionId: string): void {\n    this.reversalTransactionId = reversalTransactionId;\n  }\n\n  /**\n   * Gets the memo associated with the transaction. This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\n   *\n   * @return the memo\n   */\n  public getMemo(): string {\n    return this.memo;\n  }\n\n  /**\n   * Sets the memo associated with the transaction. This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\n   *\n   * @param memo the memo\n   */\n  public setMemo(memo: string): void {\n    this.memo = memo;\n  }\n}\n\nAggregate_add( InvestmentTransaction, \"INVTRAN\" );\nElement_add(InvestmentTransaction, { name: \"FITID\", required: true, order: 0, type: String, read: InvestmentTransaction.prototype.getTransactionId, write: InvestmentTransaction.prototype.setTransactionId });\nElement_add(InvestmentTransaction, { name: \"SRVRTID\", order: 10, type: String, read: InvestmentTransaction.prototype.getServerId, write: InvestmentTransaction.prototype.setServerId });\nElement_add(InvestmentTransaction, { name: \"DTTRADE\", required: true, order: 20, type: Date, read: InvestmentTransaction.prototype.getTradeDate, write: InvestmentTransaction.prototype.setTradeDate });\nElement_add(InvestmentTransaction, { name: \"DTSETTLE\", order: 30, type: Date, read: InvestmentTransaction.prototype.getSettlementDate, write: InvestmentTransaction.prototype.setSettlementDate });\nElement_add(InvestmentTransaction, { name: \"REVERSALFITID\", order: 40, type: String, read: InvestmentTransaction.prototype.getReversalTransactionId, write: InvestmentTransaction.prototype.setReversalTransactionId });\nElement_add(InvestmentTransaction, { name: \"MEMO\", order: 50, type: String, read: InvestmentTransaction.prototype.getMemo, write: InvestmentTransaction.prototype.setMemo });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../../meta/Element_add\";\n\n\n/**\n * Original currency aggregate (\"ORIGCURRENCY\"). For investment transactions in other currencies,\n * the financial institution can report the transaction as converted into the default currency\n * and then include this child aggregate to report what the original currency was and what the\n * rate of conversion was.\n * @see \"Section 5.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class OriginalCurrency {\n\n  private currencyRate: number;\n  private currencyCode: string;\n\n  /**\n   * Gets the rate of currency conversion. This is the ratio of \"CURDEF\" (the default currency in\n   * the transaction response) to \"CURSYM\" (the original currency code below).\n   *\n   * @return the currency rate\n   */\n  public getCurrencyRate(): number {\n    return this.currencyRate;\n  }\n\n  /**\n   * Sets the rate of currency conversion. This is the ratio of \"CURDEF\" (the default currency in\n   * the transaction response) to \"CURSYM\" (the original currency code below).\n   *\n   * @param currencyRate the currency rate\n   */\n  public setCurrencyRate(currencyRate: number): void {\n    this.currencyRate = currencyRate;\n  }\n\n  /**\n   * Gets the ISO-4217 3-letter currency identifier of the original currency.\n   * @see java.util.Currency#getCurrencyCode()\n   *\n   * @return the currency code\n   */\n  public getCurrencyCode(): string {\n    return this.currencyCode;\n  }\n\n  /**\n   * Sets the ISO-4217 3-letter currency identifier of the original currency.\n   * @see java.util.Currency#getCurrencyCode()\n   *\n   * @param currencyCode the currency code\n   */\n  public setCurrencyCode(currencyCode: string): void {\n    this.currencyCode = currencyCode;\n  }\n}\n\nAggregate_add( OriginalCurrency, \"ORIGCURRENCY\" );\nElement_add(OriginalCurrency, { name: \"CURRATE\", required: true, order: 10, type: Number, read: OriginalCurrency.prototype.getCurrencyRate, write: OriginalCurrency.prototype.setCurrencyRate });\nElement_add(OriginalCurrency, { name: \"CURSYM\", required: true, order: 20, type: String, read: OriginalCurrency.prototype.getCurrencyCode, write: OriginalCurrency.prototype.setCurrencyCode });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { InvestmentTransaction } from \"./InvestmentTransaction\";\nimport { SecurityId } from \"../../seclist/SecurityId\";\nimport { OriginalCurrency } from \"./OriginalCurrency\";\nimport { SubAccountType, SubAccountType_fromOfx } from \"../accounts/SubAccountType\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\nimport { Element_add } from \"../../../../meta/Element_add\";\n\n\n/**\n * Buy investment transaction aggregate (\"INVBUY\").\n * @see \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class BuyInvestmentTransaction {\n\n  private investmentTransaction: InvestmentTransaction;\n  private securityId: SecurityId;\n  private units: number;\n  private unitPrice: number;\n  private markup: number;\n  private commission: number;\n  private taxes: number;\n  private fees: number;\n  private load: number;\n  private total: number;\n  private currencyCode: string;\n  private originalCurrencyInfo: OriginalCurrency;\n  private subAccountSecurity: string;\n  private subAccountFund: string;\n\n  /**\n   * Gets the investment transaction child aggregate.\n   *\n   * @return the investment transaction child aggregate\n   */\n  public getInvestmentTransaction(): InvestmentTransaction {\n    return this.investmentTransaction;\n  }\n\n  /**\n   * Sets the investment transaction child aggregate.\n   *\n   * @param investmentTransaction the investment transaction child aggregate\n   */\n  public setInvestmentTransaction(investmentTransaction: InvestmentTransaction): void {\n    this.investmentTransaction = investmentTransaction;\n  }\n\n  /**\n   * Gets the id of the security that was bought. This is a required field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the security id of the security that was bought\n   */\n  public getSecurityId(): SecurityId {\n    return this.securityId;\n  }\n\n  /**\n   * Sets the id of the security that was bought. This is a required field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param securityId the security id of the security that was bought\n   */\n  public setSecurityId(securityId: SecurityId): void {\n    this.securityId = securityId;\n  }\n\n  /**\n   * Gets the number of units of the security that was bought. For security-based actions other\n   * than stock splits, this is the quantity bought. For stocks, mutual funds, and others, this\n   * is the number of shares. For bonds, this is the face value. For options, this is the number of\n   * contacts. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the number of units purchased.\n   */\n  public getUnits(): number {\n    return this.units;\n  }\n\n  /**\n   * Sets the number of units of the security that was bought. For security-based actions other\n   * than stock splits, this is the quantity bought. For stocks, mutual funds, and others, this\n   * is the number of shares. For bonds, this is the face value. For options, this is the number of\n   * contacts. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param units the number of units purchased.\n   */\n  public setUnits(units: number): void {\n    this.units = units;\n  }\n\n  /**\n   * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n   * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n   * per contact) price. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the per unit price\n   */\n  public getUnitPrice(): number {\n    return this.unitPrice;\n  }\n\n  /**\n   * Sets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n   * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n   * per contact) price. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param unitPrice the per unit price\n   */\n  public setUnitPrice(unitPrice: number): void {\n    this.unitPrice = unitPrice;\n  }\n\n  /**\n   * Gets the portion of the unit price that is attributed to the dealer markup. This is an\n   * optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the per unit markeup price\n   */\n  public getMarkup(): number {\n    return this.markup;\n  }\n\n  /**\n   * Sets the portion of the unit price that is attributed to the dealer markup. This is an\n   * optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param markup the per unit markeup price\n   */\n  public setMarkup(markup: number): void {\n    this.markup = markup;\n  }\n\n  /**\n   * Gets the transaction commission for the purchase. This is an optional field according to the\n   * OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the transaction commision\n   */\n  public getCommission(): number {\n    return this.commission;\n  }\n\n  /**\n   * Sets the transaction commission for the purchase. This is an optional field according to the\n   * OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param commission the transaction commision\n   */\n  public setCommission(commission: number): void {\n    this.commission = commission;\n  }\n\n  /**\n   * Gets the taxes for the purchase. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the transaction taxes\n   */\n  public getTaxes(): number {\n    return this.taxes;\n  }\n\n  /**\n   * Sets the taxes for the purchase. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param taxes the transaction taxes\n   */\n  public setTaxes(taxes: number): void {\n    this.taxes = taxes;\n  }\n\n  /**\n   * Gets the fees for the purchase. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the transaction fees\n   */\n  public getFees(): number {\n    return this.fees;\n  }\n\n  /**\n   * Sets the fees for the purchase. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param fees the transaction fees\n   */\n  public setFees(fees: number): void {\n    this.fees = fees;\n  }\n\n  /**\n   * Gets the load for the purchase. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the load\n   */\n  public getLoad(): number {\n    return this.load;\n  }\n\n  /**\n   * Sets the load for the purchase. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param load the load\n   */\n  public setLoad(load: number): void {\n    this.load = load;\n  }\n\n  /**\n   * Gets the total for the purchase. Should be equal to\n   * (units * (unitPrice + markup)) + (commision + fees + taxes) according to the OFX\n   * spec. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the total\n   */\n  public getTotal(): number {\n    return this.total;\n  }\n\n  /**\n   * Sets the total for the purchase. Should be equal to\n   * (units * (unitPrice + markup)) + (commision + fees + taxes) according to the OFX\n   * spec. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param total the total\n   */\n  public setTotal(total: number): void {\n    this.total = total;\n  }\n\n  /**\n   * Gets the currency code for the transaction. Only one of currency code or original currency\n   * info should be set according to the OFX spec. If neither are set, means the default currency.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the currency code for the transaction.\n   */\n  public getCurrencyCode(): string {\n    return this.currencyCode;\n  }\n\n  /**\n   * Sets the currency code for the transaction. Only one of currency code or original currency\n   * info may be set according to the OFX spec. If neither are set, means the default currency.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param currencyCode the currency code for the transaction.\n   */\n  public setCurrencyCode(currencyCode: string): void {\n    this.currencyCode = currencyCode;\n    this.originalCurrencyInfo = null;\n  }\n\n  /**\n   * Gets the original currency info for the transaction.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the original currency info for the transaction\n   */\n  public getOriginalCurrencyInfo(): OriginalCurrency {\n    return this.originalCurrencyInfo;\n  }\n\n  /**\n   * Sets the original currency info for the transaction\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param originalCurrencyInfo the original currency info for the transaction\n   */\n  public setOriginalCurrencyInfo(originalCurrencyInfo: OriginalCurrency): void {\n    this.originalCurrencyInfo = originalCurrencyInfo;\n    this.currencyCode = null;\n  }\n\n /**\n   * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the sub account type\n   */\n  public getSubAccountSecurity(): string {\n    return this.subAccountSecurity;\n  }\n\n  /**\n    * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n    * @see \"Section 13.9.2.4.3, OFX Spec\"\n    *\n    * @param subAccountSecurity the sub account type\n    */\n  public setSubAccountSecurity(subAccountSecurity: string): void {\n    this.subAccountSecurity = subAccountSecurity;\n  }\n\n  /**\n   * Gets the result of getSubAccountSecurity as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types.\n   */\n  public getSubAccountSecurityEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getSubAccountSecurity());\n  }\n\n\n  /**\n   * Gets the sub account type that the money came from. (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the sub account fund\n   */\n  public getSubAccountFund(): string {\n    return this.subAccountFund;\n  }\n\n  /**\n   * Sets the sub account type that the money came from. (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param subAcctFund the sub account fund\n   */\n  public setSubAccountFund(subAcctFund: string): void {\n    this.subAccountFund = subAcctFund;\n  }\n\n  /**\n   * Gets the result of getSubAccountFund as one of the well-known types.\n   *\n   * @return the type or null if it wasn't one of the well known types.\n   */\n  public getSubAccountFundEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getSubAccountFund());\n  }\n}\n\nAggregate_add( BuyInvestmentTransaction, \"INVBUY\" );\nChildAggregate_add(BuyInvestmentTransaction, { order: 10, type: InvestmentTransaction, read: BuyInvestmentTransaction.prototype.getInvestmentTransaction, write: BuyInvestmentTransaction.prototype.setInvestmentTransaction });\nChildAggregate_add(BuyInvestmentTransaction, { required: true, order: 20, type: SecurityId, read: BuyInvestmentTransaction.prototype.getSecurityId, write: BuyInvestmentTransaction.prototype.setSecurityId });\nElement_add(BuyInvestmentTransaction, { name: \"UNITS\", required: true, order: 30, type: Number, read: BuyInvestmentTransaction.prototype.getUnits, write: BuyInvestmentTransaction.prototype.setUnits });\nElement_add(BuyInvestmentTransaction, { name: \"UNITPRICE\", required: true, order: 40, type: Number, read: BuyInvestmentTransaction.prototype.getUnitPrice, write: BuyInvestmentTransaction.prototype.setUnitPrice });\nElement_add(BuyInvestmentTransaction, { name: \"MARKUP\", order: 50, type: Number, read: BuyInvestmentTransaction.prototype.getMarkup, write: BuyInvestmentTransaction.prototype.setMarkup });\nElement_add(BuyInvestmentTransaction, { name: \"COMMISSION\", order: 60, type: Number, read: BuyInvestmentTransaction.prototype.getCommission, write: BuyInvestmentTransaction.prototype.setCommission });\nElement_add(BuyInvestmentTransaction, { name: \"TAXES\", order: 70, type: Number, read: BuyInvestmentTransaction.prototype.getTaxes, write: BuyInvestmentTransaction.prototype.setTaxes });\nElement_add(BuyInvestmentTransaction, { name: \"FEES\", order: 80, type: Number, read: BuyInvestmentTransaction.prototype.getFees, write: BuyInvestmentTransaction.prototype.setFees });\nElement_add(BuyInvestmentTransaction, { name: \"LOAD\", order: 90, type: Number, read: BuyInvestmentTransaction.prototype.getLoad, write: BuyInvestmentTransaction.prototype.setLoad });\nElement_add(BuyInvestmentTransaction, { name: \"TOTAL\", required: true, order: 100, type: Number, read: BuyInvestmentTransaction.prototype.getTotal, write: BuyInvestmentTransaction.prototype.setTotal });\nElement_add(BuyInvestmentTransaction, { name: \"CURRENCY\", order: 110, type: String, read: BuyInvestmentTransaction.prototype.getCurrencyCode, write: BuyInvestmentTransaction.prototype.setCurrencyCode });\nChildAggregate_add(BuyInvestmentTransaction, { order: 120, type: OriginalCurrency, read: BuyInvestmentTransaction.prototype.getOriginalCurrencyInfo, write: BuyInvestmentTransaction.prototype.setOriginalCurrencyInfo });\nElement_add(BuyInvestmentTransaction, { name: \"SUBACCTSEC\", order: 130, type: String, read: BuyInvestmentTransaction.prototype.getSubAccountSecurity, write: BuyInvestmentTransaction.prototype.setSubAccountSecurity });\nElement_add(BuyInvestmentTransaction, { name: \"SUBACCTFUND\", order: 140, type: String, read: BuyInvestmentTransaction.prototype.getSubAccountFund, write: BuyInvestmentTransaction.prototype.setSubAccountFund });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { InvestmentTransactionType } from \"./TransactionType\";\nimport { BaseInvestmentTransaction } from \"./BaseInvestmentTransaction\";\nimport { TransactionWithSecurity } from \"./TransactionWithSecurity\";\nimport { BuyInvestmentTransaction } from \"./BuyInvestmentTransaction\";\nimport { InvestmentTransaction } from \"./InvestmentTransaction\";\nimport { SecurityId } from \"../../seclist/SecurityId\";\nimport { OriginalCurrency } from \"./OriginalCurrency\";\nimport { SubAccountType, SubAccountType_fromOfx } from \"../accounts/SubAccountType\";\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\n\n\n/**\n * Base class for all investment transactions for buying securities.\n * <br>\n * This class exposes a read-only view of the flattened aggregates that are\n * common to all buy investment transactions as a convenience to application\n * developers who may not find the ofx aggregation model intuitive.\n *\n * @author Jon Perlow\n */\nexport abstract class BaseBuyInvestmentTransaction extends BaseInvestmentTransaction\n    implements TransactionWithSecurity {\n\n  private buyInvestment: BuyInvestmentTransaction;\n\n  constructor(transactionType: InvestmentTransactionType) {\n    super(transactionType);\n  }\n\n  /**\n   * Gets the buy investment transaction child aggregate.\n   *\n   * @return the buy investment transaction child aggregate\n   */\n  public getBuyInvestment(): BuyInvestmentTransaction {\n    return this.buyInvestment;\n  }\n\n  /**\n   * Sets the buy investment transaction child aggregate.\n   *\n   * @param buyInvestment the buy investment transaction child aggregate\n   */\n  public setBuyInvestment(buyInvestment: BuyInvestmentTransaction): void {\n    this.buyInvestment = buyInvestment;\n  }\n\n  /**\n   * Gets the investment transaction aggregate.\n   *\n   * @return the investment transaction aggregate\n   */\n  // @Overridden\n  public getInvestmentTransaction(): InvestmentTransaction {\n    return this.getBuyInvestment().getInvestmentTransaction();\n  }\n\n  /**\n   * Gets the id of the security that was bought. This is a required field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the security id of the security that was bought\n   */\n  public getSecurityId(): SecurityId {\n    return this.getBuyInvestment().getSecurityId();\n  }\n\n  /**\n   * Gets the number of units of the security that was bought. For security-based actions other\n   * than stock splits, this is the quantity bought. For stocks, mutual funds, and others, this\n   * is the number of shares. For bonds, this is the face value. For options, this is the number of\n   * contacts. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the number of units purchased.\n   */\n  public getUnits(): number {\n    return this.getBuyInvestment().getUnits();\n  }\n\n  /**\n   * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n   * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n   * per contact) price. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the per unit price\n   */\n  public getUnitPrice(): number {\n    return this.getBuyInvestment().getUnitPrice();\n  }\n\n  /**\n   * Gets the portion of the unit price that is attributed to the dealer markup. This is an\n   * optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the per unit markeup price\n   */\n  public getMarkup(): number {\n    return this.getBuyInvestment().getMarkup();\n  }\n\n  /**\n   * Gets the transaction commission for the purchase. This is an optional field according to the\n   * OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the transaction commision\n   */\n  public getCommission(): number {\n    return this.getBuyInvestment().getCommission();\n  }\n\n  /**\n   * Gets the taxes for the purchase. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the transaction taxes\n   */\n  public getTaxes(): number {\n    return this.getBuyInvestment().getTaxes();\n  }\n\n  /**\n   * Gets the fees for the purchase. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the transaction fees\n   */\n  public getFees(): number {\n    return this.getBuyInvestment().getFees();\n  }\n\n  /**\n   * Gets the load for the purchase. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the load\n   */\n  public getLoad(): number {\n    return this.getBuyInvestment().getLoad();\n  }\n\n  /**\n   * Gets the total for the purchase. Should be equal to\n   * (units * (unitPrice + markup)) + (commision + fees + load + taxes) according to the OFX\n   * spec. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the total\n   */\n  public getTotal(): number {\n    return this.getBuyInvestment().getTotal();\n  }\n\n  /**\n   * Gets the currency code for the transaction. Only one of currency code or original currency\n   * info should be set according to the OFX spec. If neither are set, means the default currency.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the currency code for the transaction\n   */\n  public getCurrencyCode(): string {\n    return this.getBuyInvestment().getCurrencyCode();\n  }\n\n  /**\n   * Gets the original currency info for the transaction.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the original currency info for the transaction\n   */\n  public getOriginalCurrencyInfo(): OriginalCurrency {\n    return this.getBuyInvestment().getOriginalCurrencyInfo();\n  }\n\n  /**\n   * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the sub account type\n   */\n  public getSubAccountSecurity(): string {\n    return this.getBuyInvestment().getSubAccountSecurity();\n  }\n\n  /**\n   * Gets the result of getSubAccountSecurity as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types\n   */\n  public getSubAccountSecurityEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getSubAccountSecurity());\n  }\n\n  /**\n   * Gets the sub account type that the money came from. (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the sub account fund\n   */\n  public getSubAccountFund(): string {\n    return this.getBuyInvestment().getSubAccountFund();\n  }\n\n  /**\n   * Gets the result of getSubAccountFund as one of the well-known types.\n   *\n   * @return the type or null if it wasn't one of the well known types.\n   */\n  public getSubAccountFundEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getSubAccountFund());\n  }\n}\n\nChildAggregate_add(BaseBuyInvestmentTransaction, { order: 10, type: BuyInvestmentTransaction, read: BaseBuyInvestmentTransaction.prototype.getBuyInvestment, write: BaseBuyInvestmentTransaction.prototype.setBuyInvestment });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { InvestmentTransaction } from \"./InvestmentTransaction\";\nimport { BaseInvestmentTransaction } from \"./BaseInvestmentTransaction\";\nimport { InvestmentTransactionType } from \"./TransactionType\";\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\n\n\n/**\n * Base class for investment transactions that aren't buys or sales..\n * <br>\n * This class exposes a read-only view of the flattened aggregates that are\n * common to all investment transactions as a convenience to application\n * developers who may not find the ofx aggregation model intuitive.\n *\n * @author Jon Perlow\n */\nexport class BaseOtherInvestmentTransaction extends BaseInvestmentTransaction {\n\n  private investmentTransaction: InvestmentTransaction;\n\n  constructor(transactionType: InvestmentTransactionType) {\n    super(transactionType);\n  }\n\n  /**\n   * Gets the {@link InvestmentTransaction} aggregate.\n   *\n   * @return the {@link InvestmentTransaction} aggregate\n   */\n  // @Override\n  public getInvestmentTransaction(): InvestmentTransaction {\n    return this.investmentTransaction;\n  }\n\n  /**\n   * Sets the {@link InvestmentTransaction} aggregate.\n   *\n   * @param investmentTransaction the {@link InvestmentTransaction} aggregate\n   */\n  public setInvestmentTransaction(investmentTransaction: InvestmentTransaction): void {\n    this.investmentTransaction = investmentTransaction;\n  }\n}\n\nChildAggregate_add(BaseOtherInvestmentTransaction, { order: 10, type: InvestmentTransaction, read: BaseOtherInvestmentTransaction.prototype.getInvestmentTransaction, write: BaseOtherInvestmentTransaction.prototype.setInvestmentTransaction });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { InvestmentTransaction } from \"./InvestmentTransaction\";\nimport { SecurityId } from \"../../seclist/SecurityId\";\nimport { OriginalCurrency } from \"./OriginalCurrency\";\nimport { SubAccountType, SubAccountType_fromOfx } from \"../accounts/SubAccountType\";\nimport { Inv401KSource, Inv401KSource_fromOfx } from \"../positions/Inv401KSource\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\nimport { Element_add } from \"../../../../meta/Element_add\";\n\n\n/**\n * Sell investment transaction aggregate (\"INVSELL\").\n * @see \"Section 13.9.2.4.3, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class SellInvestmentTransaction {\n  private investmentTransaction: InvestmentTransaction;\n  private securityId: SecurityId;\n  private units: number;\n  private unitPrice: number;\n  private markdown: number;\n  private commission: number;\n  private taxes: number;\n  private fees: number;\n  private load: number;\n  private withholding: number;\n  private taxExempt: boolean;\n  private total: number;\n  private gain: number;\n  private currencyCode: string;\n  private originalCurrencyInfo: OriginalCurrency;\n  private subAccountSecurity: string;\n  private subAccountFund: string;\n  private loanId: string;\n  private stateWithholding: number;\n  private penalty: number;\n  private inv401kSource: string;\n\n  /**\n   * Gets the investment transaction child aggregate.\n   *\n   * @return the investment transaction child aggregate\n   */\n  public getInvestmentTransaction(): InvestmentTransaction {\n    return this.investmentTransaction;\n  }\n\n  /**\n   * Sets the investment transaction child aggregate.\n   *\n   * @param investmentTransaction the investment transaction child aggregate\n   */\n  public setInvestmentTransaction(investmentTransaction: InvestmentTransaction): void {\n    this.investmentTransaction = investmentTransaction;\n  }\n\n  /**\n   * Gets the id of the security that was sold. This is a required field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the security id of the security that was sold\n   */\n  public getSecurityId(): SecurityId {\n    return this.securityId;\n  }\n\n  /**\n   * Sets the id of the security that was sold. This is a required field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param securityId the security id of the security that was sold\n   */\n  public setSecurityId(securityId: SecurityId): void {\n    this.securityId = securityId;\n  }\n\n  /**\n   * Gets the number of units of the security that was sold. For security-based actions other\n   * than stock splits, this is the quantity sold. For stocks, mutual funds, and others, this\n   * is the number of shares. For bonds, this is the face value. For options, this is the number of\n   * contacts. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the number of units sold\n   */\n  public getUnits(): number {\n    return this.units;\n  }\n\n  /**\n   * Sets the number of units of the security that was sold. For security-based actions other\n   * than stock splits, this is the quantity sold. For stocks, mutual funds, and others, this\n   * is the number of shares. For bonds, this is the face value. For options, this is the number of\n   * contacts. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param units the number of units sold\n   */\n  public setUnits(units: number): void {\n    this.units = units;\n  }\n\n  /**\n   * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n   * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n   * per contact) price. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the per unit price\n   */\n  public getUnitPrice(): number {\n    return this.unitPrice;\n  }\n\n  /**\n   * Sets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n   * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n   * per contact) price. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param unitPrice the per unit price\n   */\n  public setUnitPrice(unitPrice: number): void {\n    this.unitPrice = unitPrice;\n  }\n\n  /**\n   * Gets the portion of the unit price that is attributed to the dealer markdown. This is an\n   * optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the per unit markedown price\n   */\n  public getMarkdown(): number {\n    return this.markdown;\n  }\n\n  /**\n   * Sets the portion of the unit price that is attributed to the dealer markdown. This is an\n   * optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param markdown the per unit markedown price\n   */\n  public setMarkdown(markdown: number): void {\n    this.markdown = markdown;\n  }\n\n  /**\n   * Gets the transaction commission for the sale. This is an optional field according to the\n   * OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the transaction commision\n   */\n  public getCommission(): number {\n    return this.commission;\n  }\n\n  /**\n   * Sets the transaction commission for the sale. This is an optional field according to the\n   * OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param commission the transaction commision\n   */\n  public setCommission(commission: number): void {\n    this.commission = commission;\n  }\n\n  /**\n   * Gets the taxes for the sale. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the transaction taxes\n   */\n  public getTaxes(): number {\n    return this.taxes;\n  }\n\n  /**\n   * Sets the taxes for the sale. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param taxes the transaction taxes\n   */\n  public setTaxes(taxes: number): void {\n    this.taxes = taxes;\n  }\n\n  /**\n   * Gets the fees for the sale. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the transaction fees\n   */\n  public getFees(): number {\n    return this.fees;\n  }\n\n  /**\n   * Sets the fees for the sale. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param fees the transaction fees\n   */\n  public setFees(fees: number): void {\n    this.fees = fees;\n  }\n\n  /**\n   * Gets the load for the sale. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the load\n   */\n  public getLoad(): number {\n    return this.load;\n  }\n\n  /**\n   * Sets the load for the sale. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param load the load\n   */\n  public setLoad(load: number): void {\n    this.load = load;\n  }\n\n  /**\n   * Gets the withholding for the sale. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the withholding\n   */\n  public getWithholding(): number {\n    return this.withholding;\n  }\n\n  /**\n   * Sets the withholding for the sale. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param withholding the withholding\n   */\n  public setWithholding(withholding: number): void {\n    this.withholding = withholding;\n  }\n\n  /**\n   * Gets whether the sale was tax exempt. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return whether the transaction was tax exempt\n   */\n  public getTaxExempt(): boolean {\n    return this.taxExempt;\n  }\n\n  /**\n   * Sets whether the sale was tax exempt. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param taxExempt whether the transaction was tax exempt\n   */\n  public setTaxExempt(taxExempt: boolean): void {\n    this.taxExempt = taxExempt;\n  }\n\n  /**\n   * Gets the total for the sale. Should be equal to\n   * (units * (unitPrice + markdown)) + (commision + fees + load + taxes + penalty + withholding +\n   * statewithholding) according to the OFX spec. This is a required field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the total\n   */\n  public getTotal(): number {\n    return this.total;\n  }\n\n  /**\n   * Sets the total for the sale. Should be equal to\n   * (units * (unitPrice + markdown)) + (commision + fees + load + taxes + penalty + withholding +\n   * statewithholding) according to the OFX spec. This is a required field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param total the total\n   */\n  public setTotal(total: number): void {\n    this.total = total;\n  }\n\n  /**\n   * Gets the gain sale. This is aan optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the gain for the sale\n   */\n  public getGain(): number {\n    return this.gain;\n  }\n\n  /**\n   * Sets the gain sale. This is aan optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param gain the gain for the sale\n   */\n  public setGain(gain: number): void {\n    this.gain = gain;\n  }\n\n  /**\n   * Gets the currency code for the transaction. Only one of currency code or original currency\n   * code should be set according to the OFX spec. If neither are set, means the default currency.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the currency code for the transaction\n   */\n  public getCurrencyCode(): string {\n    return this.currencyCode;\n  }\n\n  /**\n   * sets the currency code for the transaction. Only one of currency code or original currency\n   * code should be set according to the OFX spec. If neither are set, means the default currency.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param currencyCode the currency code for the transaction\n   */\n  public setCurrencyCode(currencyCode: string): void {\n    this.currencyCode = currencyCode;\n    this.originalCurrencyInfo = null;\n  }\n\n  /**\n   * Gets the original currency info for the transaction.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the original currency info for the transaction\n   */\n  public getOriginalCurrencyInfo(): OriginalCurrency {\n    return this.originalCurrencyInfo;\n  }\n\n  /**\n   * Sets the original currency info for the transaction.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param originalCurrencyInfo the original currency info for the transaction\n   */\n  public setOriginalCurrencyInfo(originalCurrencyInfo: OriginalCurrency): void {\n    this.originalCurrencyInfo = originalCurrencyInfo;\n    this.currencyCode = null;\n  }\n\n  /**\n   * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the sub account type\n   */\n  public getSubAccountSecurity(): string {\n    return this.subAccountSecurity;\n  }\n\n  /**\n   * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param subAccountSecurity the sub account type\n   */\n  public setSubAccountSecurity(subAccountSecurity: string): void {\n    this.subAccountSecurity = subAccountSecurity;\n  }\n\n  /**\n   * Gets the result of getSubAccountSecurity as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types.\n   */\n  public getSubAccountSecurityEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getSubAccountSecurity());\n  }\n\n  /**\n   * Gets the sub account type that the security is being transfered from\n   * (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the sub account fund\n   */\n  public getSubAccountFund(): string {\n    return this.subAccountFund;\n  }\n\n  /**\n   * Sets the sub account type that the security is being transfered from\n   * (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param subAccountFund the sub account fund\n   */\n  public setSubAccountFund(subAccountFund: string): void {\n    this.subAccountFund = subAccountFund;\n  }\n\n  /**\n   * Gets the result of getSubAccountFund as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types\n   */\n  public getSubAccountFundEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getSubAccountFund());\n  }\n\n  /**\n   * Gets the loan id if this transaction was due to a loan or loan repayment on a 401k. This is an\n   * optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the loan id\n   */\n  public getLoanId(): string {\n    return this.loanId;\n  }\n\n  /**\n   * Sets the loan id if this transaction was due to a loan or loan repayment on a 401k. This is an\n   * optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param loanId the loan id\n   */\n  public setLoanId(loanId: string): void {\n    this.loanId = loanId;\n  }\n\n  /**\n   * Gets the state withholding for the sale. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the state withholding\n   */\n  public getStateWithholding(): number {\n    return this.stateWithholding;\n  }\n\n  /**\n   * Sets the state withholding for the sale. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param stateWithholding the state withholding\n   */\n  public setStateWithholding(stateWithholding: number): void {\n    this.stateWithholding = stateWithholding;\n  }\n\n  /**\n   * Gets the penalty for the sale. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the state withholding\n   */\n  public getPenalty(): number {\n    return this.penalty;\n  }\n\n  /**\n   * Sets the penalty for the sale. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param penalty the state withholding\n   */\n  public setPenalty(penalty: number): void {\n    this.penalty = penalty;\n  }\n\n  /**\n   * Gets the 401K source for the sale. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the 401k source\n   */\n  public get401kSource(): string {\n    return this.inv401kSource;\n  }\n\n  /**\n   * Sets the 401K source for the sale. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param inv401kSource the 401k source\n   */\n  public set401kSource(inv401kSource: string): void {\n    this.inv401kSource = inv401kSource;\n  }\n\n  /**\n   * Gets the 401k source as one of the well-known types.\n   *\n   * @return the 401k source or null if its not one of the well-known types\n   */\n  public get401kSourceEnum(): Inv401KSource {\n    return Inv401KSource_fromOfx(this.get401kSource());\n  }\n}\n\nAggregate_add( SellInvestmentTransaction, \"INVSELL\" );\nChildAggregate_add(SellInvestmentTransaction, { order: 10, type: InvestmentTransaction, read: SellInvestmentTransaction.prototype.getInvestmentTransaction, write: SellInvestmentTransaction.prototype.setInvestmentTransaction });\nChildAggregate_add(SellInvestmentTransaction, { required: true, order: 20, type: SecurityId, read: SellInvestmentTransaction.prototype.getSecurityId, write: SellInvestmentTransaction.prototype.setSecurityId });\nElement_add(SellInvestmentTransaction, { name: \"UNITS\", required: true, order: 30, type: Number, read: SellInvestmentTransaction.prototype.getUnits, write: SellInvestmentTransaction.prototype.setUnits });\nElement_add(SellInvestmentTransaction, { name: \"UNITPRICE\", required: true, order: 40, type: Number, read: SellInvestmentTransaction.prototype.getUnitPrice, write: SellInvestmentTransaction.prototype.setUnitPrice });\nElement_add(SellInvestmentTransaction, { name: \"MARKDOWN\", order: 50, type: Number, read: SellInvestmentTransaction.prototype.getMarkdown, write: SellInvestmentTransaction.prototype.setMarkdown });\nElement_add(SellInvestmentTransaction, { name: \"COMMISSION\", order: 60, type: Number, read: SellInvestmentTransaction.prototype.getCommission, write: SellInvestmentTransaction.prototype.setCommission });\nElement_add(SellInvestmentTransaction, { name: \"TAXES\", order: 70, type: Number, read: SellInvestmentTransaction.prototype.getTaxes, write: SellInvestmentTransaction.prototype.setTaxes });\nElement_add(SellInvestmentTransaction, { name: \"FEES\", order: 80, type: Number, read: SellInvestmentTransaction.prototype.getFees, write: SellInvestmentTransaction.prototype.setFees });\nElement_add(SellInvestmentTransaction, { name: \"LOAD\", order: 90, type: Number, read: SellInvestmentTransaction.prototype.getLoad, write: SellInvestmentTransaction.prototype.setLoad });\nElement_add(SellInvestmentTransaction, { name: \"WITHHOLDING\", order: 93, type: Number, read: SellInvestmentTransaction.prototype.getWithholding, write: SellInvestmentTransaction.prototype.setWithholding });\nElement_add(SellInvestmentTransaction, { name: \"TAXEXEMPT\", order: 97, type: Boolean, read: SellInvestmentTransaction.prototype.getTaxExempt, write: SellInvestmentTransaction.prototype.setTaxExempt });\nElement_add(SellInvestmentTransaction, { name: \"TOTAL\", required: true, order: 100, type: Number, read: SellInvestmentTransaction.prototype.getTotal, write: SellInvestmentTransaction.prototype.setTotal });\nElement_add(SellInvestmentTransaction, { name: \"GAIN\", order: 105, type: Number, read: SellInvestmentTransaction.prototype.getGain, write: SellInvestmentTransaction.prototype.setGain });\nElement_add(SellInvestmentTransaction, { name: \"CURRENCY\", order: 110, type: String, read: SellInvestmentTransaction.prototype.getCurrencyCode, write: SellInvestmentTransaction.prototype.setCurrencyCode });\nElement_add(SellInvestmentTransaction, { name: \"ORIGCURRENCY\", order: 120, type: OriginalCurrency, read: SellInvestmentTransaction.prototype.getOriginalCurrencyInfo, write: SellInvestmentTransaction.prototype.setOriginalCurrencyInfo });\nElement_add(SellInvestmentTransaction, { name: \"SUBACCTSEC\", order: 130, type: String, read: SellInvestmentTransaction.prototype.getSubAccountSecurity, write: SellInvestmentTransaction.prototype.setSubAccountSecurity });\nElement_add(SellInvestmentTransaction, { name: \"SUBACCTFUND\", order: 140, type: String, read: SellInvestmentTransaction.prototype.getSubAccountFund, write: SellInvestmentTransaction.prototype.setSubAccountFund });\nElement_add(SellInvestmentTransaction, { name: \"LOANID\", order: 150, type: String, read: SellInvestmentTransaction.prototype.getLoanId, write: SellInvestmentTransaction.prototype.setLoanId });\nElement_add(SellInvestmentTransaction, { name: \"STATEWITHHOLDING\", order: 160, type: Number, read: SellInvestmentTransaction.prototype.getStateWithholding, write: SellInvestmentTransaction.prototype.setStateWithholding });\nElement_add(SellInvestmentTransaction, { name: \"PENALTY\", order: 170, type: Number, read: SellInvestmentTransaction.prototype.getPenalty, write: SellInvestmentTransaction.prototype.setPenalty });\nElement_add(SellInvestmentTransaction, { name: \"INV401KSOURCE\", order: 180, type: String, read: SellInvestmentTransaction.prototype.get401kSource, write: SellInvestmentTransaction.prototype.set401kSource });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { InvestmentTransactionType } from \"./TransactionType\";\nimport { BaseInvestmentTransaction } from \"./BaseInvestmentTransaction\";\nimport { TransactionWithSecurity } from \"./TransactionWithSecurity\";\nimport { SellInvestmentTransaction } from \"./SellInvestmentTransaction\";\nimport { InvestmentTransaction } from \"./InvestmentTransaction\";\nimport { SecurityId } from \"../../seclist/SecurityId\";\nimport { OriginalCurrency } from \"./OriginalCurrency\";\nimport { SubAccountType, SubAccountType_fromOfx } from \"../accounts/SubAccountType\";\nimport { Inv401KSource, Inv401KSource_fromOfx } from \"../positions/Inv401KSource\";\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\n\n\n/**\n * Base class for all investment transactions for selling securities.\n * <br>\n * This class exposes a read-only view of the flattened aggregates that are\n * common to all sell investment transactions as a convenience to application\n * developers who may not find the ofx aggregation model intuitive.\n *\n * @author Jon Perlow\n */\nexport abstract class BaseSellInvestmentTransaction extends BaseInvestmentTransaction\n    implements TransactionWithSecurity {\n\n  private sellInvestment: SellInvestmentTransaction;\n\n  constructor(transactionType: InvestmentTransactionType) {\n    super(transactionType);\n  }\n\n  /**\n   * Gets the sell investment transaction child aggregate.\n   *\n   * @return the sell investment transaction child aggregate\n   */\n  // @Override\n  public getSellInvestment(): SellInvestmentTransaction {\n    return this.sellInvestment;\n  }\n\n  /**\n   * Sets the sell investment transaction child aggregate.\n   *\n   * @param sellInvestment the sell investment transaction child aggregate\n   */\n  public setSellInvestment(sellInvestment: SellInvestmentTransaction): void {\n    this.sellInvestment = sellInvestment;\n  }\n\n  /**\n   * Gets the investment transaction aggregate.\n   *\n   * @return the investment transaction aggregate\n   */\n  // @Overridden\n  public getInvestmentTransaction(): InvestmentTransaction {\n    return this.getSellInvestment().getInvestmentTransaction();\n  }\n\n  /**\n   * Gets the id of the security that was sold. This is a required field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the security id of the security that was bought\n   */\n  public getSecurityId(): SecurityId {\n    return this.getSellInvestment().getSecurityId();\n  }\n\n  /**\n   * Gets the number of units of the security that was sold. For security-based actions other\n   * than stock splits, this is the quantity sold. For stocks, mutual funds, and others, this\n   * is the number of shares. For bonds, this is the face value. For options, this is the number of\n   * contacts. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the number of units purchased.\n   */\n  public getUnits(): number {\n    return this.getSellInvestment().getUnits();\n  }\n\n  /**\n   * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n   * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n   * per contact) price. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the per unit price\n   */\n  public getUnitPrice(): number {\n    return this.getSellInvestment().getUnitPrice();\n  }\n\n  /**\n   * Gets the portion of the unit price that is attributed to the dealer markdown. This is an\n   * optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the per unit markedown price\n   */\n  public getMarkdown(): number {\n    return this.getSellInvestment().getMarkdown();\n  }\n\n  /**\n   * Gets the transaction commission for the sale. This is an optional field according to the\n   * OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the transaction commision\n   */\n  public getCommission(): number {\n    return this.getSellInvestment().getCommission();\n  }\n\n  /**\n   * Gets the taxes for the sale. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the transaction taxes\n   */\n  public getTaxes(): number {\n    return this.getSellInvestment().getTaxes();\n  }\n\n  /**\n   * Gets the fees for the sale. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the transaction fees\n   */\n  public getFees(): number {\n    return this.getSellInvestment().getFees();\n  }\n\n  /**\n   * Gets the load for the sale. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the load\n   */\n  public getLoad(): number {\n    return this.getSellInvestment().getLoad();\n  }\n\n  /**\n   * Gets the withholding for the sale. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the withholding\n   */\n  public getWithholding(): number {\n    return this.getSellInvestment().getWithholding();\n  }\n\n  /**\n   * Gets whether the sale was tax exempt. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return whether the transaction was tax exempt\n   */\n  public getTaxExempt(): boolean {\n    return this.getSellInvestment().getTaxExempt();\n  }\n\n  /**\n   * Gets the total for the sale. Should be equal to\n   * (units * (unitPrice + markdown)) + (commision + fees + load + taxes + penalty + withholding +\n   * statewithholding) according to the OFX spec. This is a required field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the total\n   */\n  public getTotal(): number {\n    return this.getSellInvestment().getTotal();\n  }\n\n  /**\n   * Gets the gain sale. This is aan optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the gain for the sale\n   */\n  public getGain(): number {\n    return this.getSellInvestment().getGain();\n  }\n\n  /**\n   * Gets the currency code for the transaction. Only one of currency code or original currency\n   * info should be set according to the OFX spec. If neither are set, means the default currency.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the currency code for the transaction.\n   */\n  public getCurrencyCode(): string {\n    return this.getSellInvestment().getCurrencyCode();\n  }\n\n  /**\n   * Gets the origianl currency info for the transaction.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the currency info for the transaction.\n   */\n  public getOriginalCurrencyInfo(): OriginalCurrency {\n    return this.getSellInvestment().getOriginalCurrencyInfo();\n  }\n\n  /**\n   * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the sub account type\n   */\n  public getSubAccountSecurity(): string {\n    return this.getSellInvestment().getSubAccountSecurity();\n  }\n\n  /**\n   * Gets the result of getSubAccountSecurity as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types.\n   */\n  public getSubAccountSecurityEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getSubAccountSecurity());\n  }\n\n  /**\n   * Gets the sub account type that the money went to  (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the sub account fund\n   */\n  public getSubAccountFund(): string {\n    return this.getSellInvestment().getSubAccountFund();\n  }\n\n  /**\n   * Gets the result of getSubAccountFund as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types.\n   */\n  public getSubAccountFundEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getSubAccountFund());\n  }\n\n  /**\n   * Gets the loan id if this transaction was due to a loan or loan repayment on a 401k. This is an\n   * optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the loan id\n   */\n  public getLoadId(): string {\n    return this.getSellInvestment().getLoanId();\n  }\n\n  /**\n   * Gets the state withholding for the sale. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the state withholding\n   */\n  public getStateWithholding(): number {\n    return this.getSellInvestment().getStateWithholding();\n  }\n\n  /**\n   * Gets the penalty for the sale. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the state withholding\n   */\n  public getPenalty(): number {\n    return this.getSellInvestment().getPenalty();\n  }\n\n  /**\n   * Gets the 401K source for the sale. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the 401k source\n   */\n  public get401kSource(): string {\n    return this.getSellInvestment().get401kSource();\n  }\n\n  /**\n   * Gets the 401k source as one of the well-known types.\n   *\n   * @return the 401k source or null if its not one of the well-known types\n   */\n  public get401kSourceEnum(): Inv401KSource {\n    return Inv401KSource_fromOfx(this.get401kSource());\n  }\n}\n\nChildAggregate_add(BaseSellInvestmentTransaction, { order: 10, type: SellInvestmentTransaction, read: BaseSellInvestmentTransaction.prototype.getSellInvestment, write: BaseSellInvestmentTransaction.prototype.setSellInvestment });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { InvestmentTransactionType } from \"./TransactionType\";\nimport { BaseBuyInvestmentTransaction } from \"./BaseBuyInvestmentTransaction\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../../meta/Element_add\";\n\n\n/**\n * Transaction for buying debt (i.e. bonds, CDs, etc.,).\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class BuyDebtTransaction extends BaseBuyInvestmentTransaction {\n\n  private accruedInterest: number;\n\n  constructor() {\n    super(InvestmentTransactionType.BUY_DEBT);\n  }\n\n  /**\n   * Gets the amount of accrued interest on the debt. This is an optional field according to the\n   * OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the amount of accrued interest\n   */\n  public getAccruedInterest(): number {\n    return this.accruedInterest;\n  }\n\n  /**\n   * Sets the amount of accrued interest on the debt. This is an optional field according to the\n   * OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param accruedInterest the amount of accrued interest\n   */\n  public setAccruedInterest(accruedInterest: number): void {\n    this.accruedInterest = accruedInterest;\n  }\n}\n\nAggregate_add( BuyDebtTransaction, \"BUYDEBT\" );\nElement_add(BuyDebtTransaction, { name: \"ACCRDINT\", order: 20, type: Number, read: BuyDebtTransaction.prototype.getAccruedInterest, write: BuyDebtTransaction.prototype.setAccruedInterest });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Type of purchase for stocks and mutual funds.\n * @see \"Section 13.9.2.4.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum BuyType {\n  BUY,\n  BUY_TO_COVER\n}\n\nexport function BuyType_fromOfx(ofxVal: string): BuyType {\n  if (\"BUY\" === ofxVal) {\n    return BuyType.BUY;\n  } else if (\"BUYTOCOVER\" === ofxVal) {\n    return BuyType.BUY_TO_COVER;\n  } else {\n    return null;\n  }\n}\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { InvestmentTransactionType } from \"./TransactionType\";\nimport { BaseBuyInvestmentTransaction } from \"./BaseBuyInvestmentTransaction\";\nimport { BuyType, BuyType_fromOfx } from \"./BuyType\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../../meta/Element_add\";\n\n\n/**\n * Transaction for buying mutual funds.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class BuyMutualFundTransaction extends BaseBuyInvestmentTransaction {\n\n  private buyType: string;\n  private relatedTransactionId: string;\n\n  constructor() {\n    super(InvestmentTransactionType.BUY_MUTUAL_FUND);\n  }\n\n\n  /**\n   * Gets the type of purchase (i.e. \"BUY\" or \"BUYTOCOVER\"). This is a required field according to\n   * the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the buy type\n   */\n  public getBuyType(): string {\n    return this.buyType;\n  }\n\n  /**\n   * Sets the type of purchase (i.e. \"BUY\" or \"BUYTOCOVER\"). This is a required field according to\n   * the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param buyType the buy type\n   */\n  public setBuyType(buyType: string): void {\n    this.buyType = buyType;\n  }\n\n  /**\n   * Gets the buy type as one of the well-known types.\n   *\n   * @return the type of purchase or null if it's not known\n   */\n  public getBuyTypeEnum(): BuyType {\n    return BuyType_fromOfx(this.buyType);\n  }\n\n  /**\n   * Gets any related transaction id for a mutual fund purchase (e.g. for a mutual fund exchange).\n   * This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the related transaction id\n   */\n  public getRelatedTransactionId(): string {\n    return this.relatedTransactionId;\n  }\n\n  /**\n   * Sets any related transaction id for a mutual fund purchase (e.g. for a mutual fund exchange).\n   * This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param relatedTransactionId the related transaction id\n   */\n  public setRelatedTransactionId(relatedTransactionId: string): void {\n    this.relatedTransactionId = relatedTransactionId;\n  }\n}\n\nAggregate_add( BuyMutualFundTransaction, \"BUYMF\" );\nElement_add(BuyMutualFundTransaction, { name: \"BUYTYPE\", required: true, order: 20, type: String, read: BuyMutualFundTransaction.prototype.getBuyType, write: BuyMutualFundTransaction.prototype.setBuyType });\nElement_add(BuyMutualFundTransaction, { name: \"RELFITID\", order: 30, type: String, read: BuyMutualFundTransaction.prototype.getRelatedTransactionId, write: BuyMutualFundTransaction.prototype.setRelatedTransactionId });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Type of purchase for options.\n * @see \"Section 13.9.2.4.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum OptionBuyType {\n  BUY_TO_OPEN,\n  BUY_TO_CLOSE\n}\n\nexport function OptionBuyType_fromOfx(ofxVal: string): OptionBuyType {\n  if (\"BUYTOOPEN\" === ofxVal) {\n    return OptionBuyType.BUY_TO_OPEN;\n  } else if (\"BUYTOCLOSE\" === ofxVal) {\n    return OptionBuyType.BUY_TO_CLOSE;\n  } else {\n    return null;\n  }\n}\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { InvestmentTransactionType } from \"./TransactionType\";\nimport { BaseBuyInvestmentTransaction } from \"./BaseBuyInvestmentTransaction\";\nimport { OptionBuyType, OptionBuyType_fromOfx } from \"./OptionBuyType\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../../meta/Element_add\";\n\n\n/**\n * Transaction for buying options.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class BuyOptionTransaction extends BaseBuyInvestmentTransaction {\n\n  private optionBuyType: string;\n  private sharesPerContact: number;\n\n  constructor() {\n    super(InvestmentTransactionType.BUY_OPTION);\n  }\n\n  /**\n   * Gets the type of option purchase (i.e. \"BUYTOOPEN\" or \"BUYTOCLOSE\"). This is a required field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the option buy type\n   */\n  public getOptionBuyType(): string {\n    return this.optionBuyType;\n  }\n\n  /**\n   * Sets the type of option purchase (i.e. \"BUYTOOPEN\" or \"BUYTOCLOSE\"). This is a required field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param optionBuyType the option buy type\n   */\n  public setOptionBuyType(optionBuyType: string): void {\n    this.optionBuyType = optionBuyType;\n  }\n\n  /**\n   * Gets the option buy type as one of the well-known types.\n   *\n   * @return the type of purchase or null if it's not known\n   */\n  public getOptionBuyTypeEnum(): OptionBuyType {\n    return OptionBuyType_fromOfx(this.optionBuyType);\n  }\n\n  /**\n   * Gets the number of shares per contact. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the number of shares per contact\n   */\n  public getSharesPerContract(): number {\n    return this.sharesPerContact;\n  }\n\n  /**\n   * Sets the number of shares per contact. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param sharesPerContact the number of shares per contact\n   */\n  public setSharesPerContract(sharesPerContact: number): void {\n    this.sharesPerContact = sharesPerContact;\n  }\n}\n\nAggregate_add( BuyOptionTransaction, \"BUYOPT\" );\nElement_add(BuyOptionTransaction, { name: \"OPTBUYTYPE\", required: true, order: 20, type: String, read: BuyOptionTransaction.prototype.getOptionBuyType, write: BuyOptionTransaction.prototype.setOptionBuyType });\nElement_add(BuyOptionTransaction, { name: \"SHPERCTRCT\", required: true, order: 30, type: Number, read: BuyOptionTransaction.prototype.getSharesPerContract, write: BuyOptionTransaction.prototype.setSharesPerContract });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { InvestmentTransactionType } from \"./TransactionType\";\nimport { BaseBuyInvestmentTransaction } from \"./BaseBuyInvestmentTransaction\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\n\n/**\n * Transaction for buying other types of securities.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class BuyOtherTransaction extends BaseBuyInvestmentTransaction {\n\n  constructor() {\n    super(InvestmentTransactionType.BUY_OTHER);\n  }\n}\n\nAggregate_add( BuyOtherTransaction, \"BUYOTHER\" );\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { InvestmentTransactionType } from \"./TransactionType\";\nimport { BaseBuyInvestmentTransaction } from \"./BaseBuyInvestmentTransaction\";\nimport { BuyType, BuyType_fromOfx } from \"./BuyType\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../../meta/Element_add\";\n\n\n/**\n * Transaction for buying stock.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class BuyStockTransaction extends BaseBuyInvestmentTransaction {\n\n  private buyType: string;\n\n  constructor() {\n    super(InvestmentTransactionType.BUY_STOCK);\n  }\n\n  /**\n   * Gets the type of stock purchase (i.e. \"BUY\" or \"BUYTOCOVER\"). This is a required field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the buy type\n   */\n  public getBuyType(): string {\n    return this.buyType;\n  }\n\n  /**\n   * Sets the type of stock purchase (i.e. \"BUY\" or \"BUYTOCOVER\"). This is a required field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param buyType the buy type\n   */\n  public setBuyType(buyType: string): void {\n    this.buyType = buyType;\n  }\n\n  /**\n   * Gets the buy type as one of the well-known types.\n   *\n   * @return the type of purchase or null if it's not well known\n   */\n  public getBuyTypeEnum(): BuyType {\n    return BuyType_fromOfx(this.buyType);\n  }\n}\n\nAggregate_add( BuyStockTransaction, \"BUYSTOCK\" );\nElement_add(BuyStockTransaction, { name: \"BUYTYPE\", required: true, order: 20, type: String, read: BuyStockTransaction.prototype.getBuyType, write: BuyStockTransaction.prototype.setBuyType });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Type of action for closing a stock option.\n * @see \"Section 13.9.2.4.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum CloseOptionAction {\n  EXERCISE,\n  ASSIGN,\n  EXPIRE\n}\n\nexport function CloseOptionAction_fromOfx(ofxVal: string): CloseOptionAction {\n  if (\"EXERCISE\" === ofxVal) {\n    return CloseOptionAction.EXERCISE;\n  } else if (\"ASSIGN\" === ofxVal) {\n    return CloseOptionAction.ASSIGN;\n  } else if (\"EXPIRE\" === ofxVal) {\n    return CloseOptionAction.EXPIRE;\n  } else {\n    return null;\n  }\n}\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { InvestmentTransactionType } from \"./TransactionType\";\nimport { BaseOtherInvestmentTransaction } from \"./BaseOtherInvestmentTransaction\";\nimport { TransactionWithSecurity } from \"./TransactionWithSecurity\";\nimport { SecurityId } from \"../../seclist/SecurityId\";\nimport { CloseOptionAction, CloseOptionAction_fromOfx } from \"./CloseOptionAction\";\nimport { SubAccountType, SubAccountType_fromOfx } from \"../accounts/SubAccountType\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\nimport { Element_add } from \"../../../../meta/Element_add\";\n\n\n/**\n * Transaction for closing an option position due to expiration, exercise, or assignment.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class CloseOptionTransaction extends BaseOtherInvestmentTransaction\n    implements TransactionWithSecurity {\n\n  private securityId: SecurityId;\n  private optionAction: string;\n  private units: number;\n  private sharesPerContact: number;\n  private subAccountSecurity: string;\n  private relatedTransactionId: string;\n  private gain: number;\n\n  constructor() {\n    super(InvestmentTransactionType.CLOSE_OPTION);\n  }\n\n  /**\n   * Gets the security id of the option.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the security id of the option\n   */\n  public getSecurityId(): SecurityId {\n    return this.securityId;\n  }\n\n  /**\n   * Sets the security id of the option.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param securityId the security id of the option\n   */\n  public setSecurityId(securityId: SecurityId): void {\n    this.securityId = securityId;\n  }\n\n  /**\n   * Gets the action being performed (i.e. \"EXERCISE\", \"ASSIGN\", \"EXPIRE\" This is a required field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the option action\n   */\n  public getOptionAction(): string {\n    return this.optionAction;\n  }\n\n  /**\n   * Sets the action being performed (i.e. \"EXERCISE\", \"ASSIGN\", \"EXPIRE\" This is a required field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param optionAction the option action\n   */\n  public setOptionAction(optionAction: string): void {\n    this.optionAction = optionAction;\n  }\n\n  /**\n   * Gets the action as one of the well-known types.\n   *\n   * @return the type of close or null if it's not a well-known type\n   */\n  public getOptionActionEnum(): CloseOptionAction {\n    return  CloseOptionAction_fromOfx(this.getOptionAction());\n  }\n\n  /**\n   * Gets the number of units of the option that were closed. This is a required field according\n   * to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the number of units closed\n   */\n  public getUnits(): number {\n    return this.units;\n  }\n\n  /**\n   * Sets the number of units of the option that were closed. This is a required field according\n   * to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param units the number of units closed\n   */\n  public setUnits(units: number): void {\n    this.units = units;\n  }\n\n  /**\n   * Gets the number of shares per contact. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the number of shares per contact\n   */\n  public getSharesPerContact(): number {\n    return this.sharesPerContact;\n  }\n\n  /**\n   * Sets the number of shares per contact. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param sharesPerContact the number of shares per contact\n   */\n  public setSharesPerContact(sharesPerContact: number): void {\n    this.sharesPerContact = sharesPerContact;\n  }\n\n  /**\n   * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the sub account type\n   */\n  public getSubAccountSecurity(): string {\n    return this.subAccountSecurity;\n  }\n\n  /**\n   * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param subAccountSecurity the sub account type\n   */\n  public setSubAccountSecurity(subAccountSecurity: string): void {\n    this.subAccountSecurity = subAccountSecurity;\n  }\n\n  /**\n   * Gets the result of getSubAccountFund as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types\n   */\n  public getSubAccountSecurityEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getSubAccountSecurity());\n  }\n\n  /**\n   * Gets the related transaction id for the related buy or sell corresponding to the\n   * EXERCISE or ASSIGN action. This is a required field according to the OFX spec if the\n   * action or EXERCISE or ASSIGN.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the related transaction id\n   */\n  public getRelatedTransactionId(): string {\n    return this.relatedTransactionId;\n  }\n\n  /**\n   * Sets the related transaction id for the related buy or sell corresponding to the\n   * EXERCISE or ASSIGN action. This is a required field according to the OFX spec if the\n   * action or EXERCISE or ASSIGN.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param relatedTransactionId the related transaction id\n   */\n  public setRelatedTransactionId(relatedTransactionId: string): void {\n    this.relatedTransactionId = relatedTransactionId;\n  }\n\n  /**\n   * Gets the gain related to the transaction. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the gain related to the transaction\n   */\n  public getGain(): number {\n    return this.gain;\n  }\n\n  /**\n   * Sets the gain related to the transaction. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param gain the gain related to the transaction\n   */\n  public setGain(gain: number): void {\n    this.gain = gain;\n  }\n}\n\nAggregate_add( CloseOptionTransaction, \"CLOSUREOPT\" );\nChildAggregate_add(CloseOptionTransaction, { order: 20, type: SecurityId, read: CloseOptionTransaction.prototype.getSecurityId, write: CloseOptionTransaction.prototype.setSecurityId });\nElement_add(CloseOptionTransaction, { name: \"OPTACTION\", required: true, order: 30, type: String, read: CloseOptionTransaction.prototype.getOptionAction, write: CloseOptionTransaction.prototype.setOptionAction });\nElement_add(CloseOptionTransaction, { name: \"UNITS\", required: true, order: 40, type: Number, read: CloseOptionTransaction.prototype.getUnits, write: CloseOptionTransaction.prototype.setUnits });\nElement_add(CloseOptionTransaction, { name: \"SHPERCTRCT\", required: true, order: 50, type: Number, read: CloseOptionTransaction.prototype.getSharesPerContact, write: CloseOptionTransaction.prototype.setSharesPerContact });\nElement_add(CloseOptionTransaction, { name: \"SUBACCTSEC\", required: true, order: 60, type: String, read: CloseOptionTransaction.prototype.getSubAccountSecurity, write: CloseOptionTransaction.prototype.setSubAccountSecurity });\nElement_add(CloseOptionTransaction, { name: \"RELFITID\", order: 70, type: String, read: CloseOptionTransaction.prototype.getRelatedTransactionId, write: CloseOptionTransaction.prototype.setRelatedTransactionId });\nElement_add(CloseOptionTransaction, { name: \"GAIN\", order: 80, type: Number, read: CloseOptionTransaction.prototype.getGain, write: CloseOptionTransaction.prototype.setGain });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Type of income.\n * @see \"Section 13.9.2.4.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum IncomeType {\n  LONG_TERM_CAP_GAINS,\n  SHORT_TERM_CAP_GAINS,\n  DIVIDEND,\n  INTEREST,\n  MISC\n}\n\nexport function IncomeType_fromOfx(ofxVal: string): IncomeType {\n  if (\"CGLONG\" === ofxVal) {\n    return IncomeType.LONG_TERM_CAP_GAINS;\n  } else if (\"CGSHORT\" === ofxVal) {\n    return IncomeType.SHORT_TERM_CAP_GAINS;\n  } else if (\"DIV\" === ofxVal) {\n    return IncomeType.DIVIDEND;\n  } else if (\"INTEREST\" === ofxVal) {\n    return IncomeType.INTEREST;\n  } else if (\"MISC\" === ofxVal) {\n    return IncomeType.MISC;\n  } else {\n    return null;\n  }\n}\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { BaseOtherInvestmentTransaction } from \"./BaseOtherInvestmentTransaction\";\nimport { InvestmentTransactionType } from \"./TransactionType\";\nimport { TransactionWithSecurity } from \"./TransactionWithSecurity\";\nimport { SecurityId } from \"../../seclist/SecurityId\";\nimport { OriginalCurrency } from \"./OriginalCurrency\";\nimport { IncomeType, IncomeType_fromOfx } from \"./IncomeType\";\nimport { SubAccountType, SubAccountType_fromOfx } from \"../accounts/SubAccountType\";\nimport { Inv401KSource, Inv401KSource_fromOfx } from \"../positions/Inv401KSource\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\nimport { Element_add } from \"../../../../meta/Element_add\";\n\n\n/**\n * Transaction for investment income that is realized as cash into the investment account.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class IncomeTransaction extends BaseOtherInvestmentTransaction\n    implements TransactionWithSecurity {\n\n  private securityId: SecurityId;\n  private incomeType: string;\n  private total: number;\n  private subAccountSecurity: string;\n  private subAccountFund: string;\n  private taxExempt: boolean;\n  private withholding: number;\n  private currencyCode: string;\n  private originalCurrencyInfo: OriginalCurrency;\n  private inv401kSource: string;\n\n  constructor() {\n    super(InvestmentTransactionType.INCOME);\n  }\n\n  /**\n   * Gets the id of the security that the income was for. This is a required field according to the\n   * OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the security id of the security that the income was for\n   */\n  public getSecurityId(): SecurityId {\n    return this.securityId;\n  }\n\n  /**\n   * Sets the id of the security that the income was for. This is a required field according to the\n   * OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param securityId the security id of the security that the income was for\n   */\n  public setSecurityId(securityId: SecurityId): void {\n    this.securityId = securityId;\n  }\n\n  /**\n   * Gets the type of income. One of \"CGLONG\" (long term capital gains), \"CGSHORT\" (short term\n   * capital gains), \"DIV\" (dividend), INTEREST, or MISC>\n   * @see \"Section 13.9.2.4.4, OFX Spec\" This is a required field according to the OFX spec.\n   *\n   * @return the type of income\n   */\n  public getIncomeType(): string {\n    return this.incomeType;\n  }\n\n  /**\n   * Sets the type of income. One of \"CGLONG\" (long term capital gains), \"CGSHORT\" (short term\n   * capital gains), \"DIV\" (dividend), INTEREST, or MISC>\n   * @see \"Section 13.9.2.4.4, OFX Spec\" This is a required field according to the OFX spec.\n   *\n   * @param incomeType the type of income\n   */\n  public setIncomeType(incomeType: string): void {\n    this.incomeType = incomeType;\n  }\n\n  /**\n   * Gets the income type as one of the well-known types.\n   *\n   * @return the income type or null if it's not well known\n   */\n  public getIncomeTypeEnum(): IncomeType {\n    return IncomeType_fromOfx(this.getIncomeType());\n  }\n\n  /**\n   * Gets the total income received.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the total\n   */\n  public getTotal(): number {\n    return this.total;\n  }\n\n  /**\n   * Sets the total income received.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param total the total\n   */\n  public setTotal(total: number): void {\n    this.total = total;\n  }\n\n  /**\n   * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the sub account type\n   */\n  public getSubAccountSecurity(): string {\n    return this.subAccountSecurity;\n  }\n\n  /**\n   * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param subAcctSec the sub account type\n   */\n  public setSubAccountSecurity(subAcctSec: string): void {\n    this.subAccountSecurity = subAcctSec;\n  }\n\n  /**\n   * Gets the result of getSubAccountSecurity as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types.\n   */\n  public getSubAccountSecurityEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getSubAccountSecurity());\n  }\n\n  /**\n   * Gets the sub account type that the security is from (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the sub account fund for the transaction\n   */\n  public getSubAccountFund(): string {\n    return this.subAccountFund;\n  }\n\n  /**\n   * Sets the sub account type that the security is from (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param subAcctFund the sub account fund for the transaction\n   */\n  public setSubAccountFund(subAcctFund: string): void {\n    this.subAccountFund = subAcctFund;\n  }\n\n  /**\n   * Gets the result of getSubAccountFund as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types\n   */\n  public getSubAccountFundEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getSubAccountFund());\n  }\n\n  /**\n   * Gets whether the income was tax exempt. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return whether the transaction was tax exempt\n   */\n  public getTaxExempt(): boolean {\n    return this.taxExempt;\n  }\n\n  /**\n   * Sets whether the income was tax exempt. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param taxExempt whether the transaction was tax exempt\n   */\n  public setTaxExempt(taxExempt: boolean): void {\n    this.taxExempt = taxExempt;\n  }\n\n  /**\n   * Gets the withholding for the income. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the withholding\n   */\n  public getWithholding(): number {\n    return this.withholding;\n  }\n\n  /**\n   * Sets the withholding for the income. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param withholding the withholding\n   */\n  public setWithholding(withholding: number): void {\n    this.withholding = withholding;\n  }\n\n  /**\n   * Gets the currency code for the transaction. Only one of currency code or original currency\n   * info should be set according to the OFX spec. If neither are set, means the default currency.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the currency code for the transaction\n   */\n  public getCurrencyCode(): string {\n    return this.currencyCode;\n  }\n\n  /**\n   * Sets the currency code for the transaction. Only one of currency code or original currency\n   * info should be set according to the OFX spec. If neither are set, means the default currency.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param currencyCode the currency code for the transaction\n   */\n  public setCurrencyCode(currencyCode: string): void {\n    this.currencyCode = currencyCode;\n    this.originalCurrencyInfo = null;\n  }\n\n  /**\n   * Gets the original currency info for the transaction.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the currency info for the transaction\n   */\n  public getOriginalCurrencyInfo(): OriginalCurrency {\n    return this.originalCurrencyInfo;\n  }\n\n  /**\n   * Sets the original currency info for the transaction.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param originalCurrencyInfo the currency info for the transaction\n   */\n  public setOriginalCurrencyInfo(originalCurrencyInfo: OriginalCurrency): void {\n    this.originalCurrencyInfo = originalCurrencyInfo;\n    this.currencyCode = null;\n  }\n\n  /**\n   * Gets the 401K source for the sale. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the state withholding\n   */\n  public get401kSource(): string {\n    return this.inv401kSource;\n  }\n\n  /**\n   * Sets the 401K source for the sale. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param inv401kSource the state withholding\n   */\n  public set401kSource(inv401kSource: string): void {\n    this.inv401kSource = inv401kSource;\n  }\n\n  /**\n   * Gets the 401(k) source as one of the well-known types.\n   *\n   * @return the type of close or null if it's not well known.\n   */\n  public get401kSourceEnum(): Inv401KSource {\n    return Inv401KSource_fromOfx(this.get401kSource());\n  }\n}\n\nAggregate_add( IncomeTransaction, \"INCOME\" );\nChildAggregate_add(IncomeTransaction, { required: true, order: 20, type: SecurityId, read: IncomeTransaction.prototype.getSecurityId, write: IncomeTransaction.prototype.setSecurityId });\nElement_add(IncomeTransaction, { name: \"INCOMETYPE\", required: true, order: 30, type: String, read: IncomeTransaction.prototype.getIncomeType, write: IncomeTransaction.prototype.setIncomeType });\nElement_add(IncomeTransaction, { name: \"TOTAL\", required: true, order: 40, type: Number, read: IncomeTransaction.prototype.getTotal, write: IncomeTransaction.prototype.setTotal });\nElement_add(IncomeTransaction, { name: \"SUBACCTSEC\", order: 50, type: String, read: IncomeTransaction.prototype.getSubAccountSecurity, write: IncomeTransaction.prototype.setSubAccountSecurity });\nElement_add(IncomeTransaction, { name: \"SUBACCTFUND\", order: 60, type: String, read: IncomeTransaction.prototype.getSubAccountFund, write: IncomeTransaction.prototype.setSubAccountFund });\nElement_add(IncomeTransaction, { name: \"TAXEXEMPT\", order: 70, type: Boolean, read: IncomeTransaction.prototype.getTaxExempt, write: IncomeTransaction.prototype.setTaxExempt });\nElement_add(IncomeTransaction, { name: \"WITHHOLDING\", order: 80, type: Number, read: IncomeTransaction.prototype.getWithholding, write: IncomeTransaction.prototype.setWithholding });\nElement_add(IncomeTransaction, { name: \"CURRENCY\", order: 90, type: String, read: IncomeTransaction.prototype.getCurrencyCode, write: IncomeTransaction.prototype.setCurrencyCode });\nChildAggregate_add(IncomeTransaction, { order: 120, type: OriginalCurrency, read: IncomeTransaction.prototype.getOriginalCurrencyInfo, write: IncomeTransaction.prototype.setOriginalCurrencyInfo });\nElement_add(IncomeTransaction, { name: \"INV401KSOURCE\", order: 110, type: String, read: IncomeTransaction.prototype.get401kSource, write: IncomeTransaction.prototype.set401kSource });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../../meta/Element_add\";\nimport { BaseOtherInvestmentTransaction } from \"./BaseOtherInvestmentTransaction\";\nimport { SecurityId } from \"../../seclist/SecurityId\";\nimport { OriginalCurrency } from \"./OriginalCurrency\";\nimport { InvestmentTransactionType } from \"./TransactionType\";\nimport { SubAccountType, SubAccountType_fromOfx } from \"../accounts/SubAccountType\";\nimport { Inv401KSource, Inv401KSource_fromOfx } from \"../positions/Inv401KSource\";\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\n\n/**\n * Transaction for an investment expense\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class InvestmentExpenseTransaction extends BaseOtherInvestmentTransaction {\n\n  private securityId: SecurityId;\n  private total: number;\n  private subAccountSecurity: string;\n  private subAccountFund: string;\n  private currencyCode: string;\n  private originalCurrencyInfo: OriginalCurrency;\n  private inv401kSource: string;\n\n  constructor() {\n    super(InvestmentTransactionType.INVESTMENT_EXPENSE);\n  }\n\n  /**\n   * Gets the id of the security for the expense. This is a required field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the security id of the security for the expsense\n   */\n  public getSecurityId(): SecurityId {\n    return this.securityId;\n  }\n\n  /**\n   * Sets the id of the security for the expense. This is a required field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param securityId the security id of the security for the expsense\n   */\n  public setSecurityId(securityId: SecurityId): void {\n    this.securityId = securityId;\n  }\n\n  /**\n   * Gets the total for the expense.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the total\n   */\n  public getTotal(): number {\n    return this.total;\n  }\n\n  /**\n   * Sets the total for the expense.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param total the total\n   */\n  public setTotal(total: number): void {\n    this.total = total;\n  }\n\n  /**\n   * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the sub account type\n   */\n  public getSubAccountSecurity(): string {\n    return this.subAccountSecurity;\n  }\n\n  /**\n   * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param subAccountSecurity the sub account type\n   */\n  public setSubAccountSecurity(subAccountSecurity: string): void {\n    this.subAccountSecurity = subAccountSecurity;\n  }\n\n  /**\n   * Gets the result of getSubAccountSecurity as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types.\n   */\n  public getSubAccountSecurityEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getSubAccountSecurity());\n  }\n\n  /**\n   * Gets the sub account type for the fund. (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the sub account fund\n   */\n  public getSubAccountFund(): string {\n    return this.subAccountFund;\n  }\n\n  /**\n   * Sets the sub account type for the fund. (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param subAccountFund the sub account fund\n   */\n  public setSubAccountFund(subAccountFund: string): void {\n    this.subAccountFund = subAccountFund;\n  }\n\n  /**\n   * Gets the result of getSubAccountFund as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types\n   */\n  public getSubAccountFundEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getSubAccountFund());\n  }\n\n  /**\n   * Gets the currency code for the transaction. Only one of currency code or original currency\n   * code should be set according to the OFX spec. If neither are set, means the default currency.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the currency code for the transaction\n   */\n  public getCurrencyCode(): string {\n    return this.currencyCode;\n  }\n\n  /**\n   * sets the currency code for the transaction. Only one of currency code or original currency\n   * code should be set according to the OFX spec. If neither are set, means the default currency.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param currencyCode the currency code for the transaction\n   */\n  public setCurrencyCode(currencyCode: string): void {\n    this.currencyCode = currencyCode;\n    this.originalCurrencyInfo = null;\n  }\n\n  /**\n   * Gets the original currency info for the transaction.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the original currency info for the transaction\n   */\n  public getOriginalCurrencyInfo(): OriginalCurrency {\n    return this.originalCurrencyInfo;\n  }\n\n  /**\n   * Sets the original currency info for the transaction.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param originalCurrencyInfo the original currency info for the transaction\n   */\n  public setOriginalCurrencyInfo(originalCurrencyInfo: OriginalCurrency): void {\n    this.originalCurrencyInfo = originalCurrencyInfo;\n    this.currencyCode = null;\n  }\n\n  /**\n   * Gets the 401K source for the transaction. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the 401k source\n   */\n  public get401kSource(): string {\n    return this.inv401kSource;\n  }\n\n  /**\n   * Sets the 401K source for the transaction. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param inv401kSource the 401k source\n   */\n  public set401kSource(inv401kSource: string): void {\n    this.inv401kSource = inv401kSource;\n  }\n\n  /**\n   * Gets the 401k source as one of the well-known types.\n   *\n   * @return the 401k source or null if its not one of the well-known types\n   */\n  public get401kSourceEnum(): Inv401KSource {\n    return Inv401KSource_fromOfx(this.get401kSource());\n  }\n}\n\nAggregate_add( InvestmentExpenseTransaction, \"INVEXPENSE\" );\nChildAggregate_add(InvestmentExpenseTransaction, { required: true, order: 20, type: SecurityId, read: InvestmentExpenseTransaction.prototype.getSecurityId, write: InvestmentExpenseTransaction.prototype.setSecurityId });\nElement_add(InvestmentExpenseTransaction, { name: \"TOTAL\", required: true, order: 30, type: Number, read: InvestmentExpenseTransaction.prototype.getTotal, write: InvestmentExpenseTransaction.prototype.setTotal });\nElement_add(InvestmentExpenseTransaction, { name: \"SUBACCTSEC\", order: 40, type: String, read: InvestmentExpenseTransaction.prototype.getSubAccountSecurity, write: InvestmentExpenseTransaction.prototype.setSubAccountSecurity });\nElement_add(InvestmentExpenseTransaction, { name: \"SUBACCTFUND\", order: 50, type: String, read: InvestmentExpenseTransaction.prototype.getSubAccountFund, write: InvestmentExpenseTransaction.prototype.setSubAccountFund });\nElement_add(InvestmentExpenseTransaction, { name: \"CURRENCY\", order: 60, type: String, read: InvestmentExpenseTransaction.prototype.getCurrencyCode, write: InvestmentExpenseTransaction.prototype.setCurrencyCode });\nElement_add(InvestmentExpenseTransaction, { name: \"ORIGCURRENCY\", order: 70, type: OriginalCurrency, read: InvestmentExpenseTransaction.prototype.getOriginalCurrencyInfo, write: InvestmentExpenseTransaction.prototype.setOriginalCurrencyInfo });\nElement_add(InvestmentExpenseTransaction, { name: \"INV401KSOURCE\", order: 180, type: String, read: InvestmentExpenseTransaction.prototype.get401kSource, write: InvestmentExpenseTransaction.prototype.set401kSource });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { InvestmentTransactionType } from \"./TransactionType\";\nimport { BaseOtherInvestmentTransaction } from \"./BaseOtherInvestmentTransaction\";\nimport { SubAccountType, SubAccountType_fromOfx } from \"../accounts/SubAccountType\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../../meta/Element_add\";\n\n\n/**\n * Transaction for journal fund transactions between sub-accounts within the same investment\n * account.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class JournalFundTransaction extends BaseOtherInvestmentTransaction {\n\n  private subAccountFrom: string;\n  private subAccountTo: string;\n  private total: number;\n\n  constructor() {\n    super(InvestmentTransactionType.JOURNAL_FUND);\n  }\n\n  /**\n   * Gets the sub account type the transer is from (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the sub account type\n   */\n  public getFromSubAccountFund(): string {\n    return this.subAccountFrom;\n  }\n\n  /**\n   * Sets the sub account type the transer is from (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param subAccountFrom the sub account type\n   */\n  public setFromSubAccountFund(subAccountFrom: string): void {\n    this.subAccountFrom = subAccountFrom;\n  }\n\n  /**\n   * Gets the result of getFromSubAccountFund as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types.\n   */\n  public getFromSubAccountFundEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getFromSubAccountFund());\n  }\n\n  /**\n   * Gets the sub account type that the transfer is to (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the sub account fund\n   */\n  public getToSubAccountFund(): string {\n    return this.subAccountTo;\n  }\n\n  /**\n   * Sets the sub account type that the transfer is to (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param subAccountTo the sub account fund\n   */\n  public setToSubAccountFund(subAccountTo: string): void {\n    this.subAccountTo = subAccountTo;\n  }\n\n  /**\n   * Gets the result of getToSubAccountFund as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types.\n   */\n  public getToSubAccountFundEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getToSubAccountFund());\n  }\n\n  /**\n   * Gets the total for the transaction.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the total\n   */\n  public getTotal(): number {\n    return this.total;\n  }\n\n  /**\n   * Sets the total for the transaction.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param total the total\n   */\n  public setTotal(total: number): void {\n    this.total = total;\n  }\n}\n\nAggregate_add( JournalFundTransaction, \"JRNLFUND\" );\nElement_add(JournalFundTransaction, { name: \"SUBACCTFROM\", order: 20, type: String, read: JournalFundTransaction.prototype.getFromSubAccountFund, write: JournalFundTransaction.prototype.setFromSubAccountFund });\nElement_add(JournalFundTransaction, { name: \"SUBACCTTO\", order: 30, type: String, read: JournalFundTransaction.prototype.getToSubAccountFund, write: JournalFundTransaction.prototype.setToSubAccountFund });\nElement_add(JournalFundTransaction, { name: \"TOTAL\", order: 40, type: Number, read: JournalFundTransaction.prototype.getTotal, write: JournalFundTransaction.prototype.setTotal });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { InvestmentTransactionType } from \"./TransactionType\";\nimport { BaseOtherInvestmentTransaction } from \"./BaseOtherInvestmentTransaction\";\nimport { TransactionWithSecurity } from \"./TransactionWithSecurity\";\nimport { SecurityId } from \"../../seclist/SecurityId\";\nimport { SubAccountType, SubAccountType_fromOfx } from \"../accounts/SubAccountType\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\nimport { Element_add } from \"../../../../meta/Element_add\";\n\n\n/**\n * Transaction for journal security transactions between sub-accounts within the same investment\n * account.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class JournalSecurityTransaction extends BaseOtherInvestmentTransaction\n    implements TransactionWithSecurity {\n\n  private securityId: SecurityId;\n  private subAccountFrom: string;\n  private subAccountTo: string;\n  private total: number;\n\n  constructor() {\n    super(InvestmentTransactionType.JOURNAL_SECURITY);\n  }\n\n  /**\n   * Gets the id of the security that was transferred. This is a required field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the security id of the security that was bought\n   */\n  public getSecurityId(): SecurityId {\n    return this.securityId;\n  }\n\n  /**\n   * Sets the id of the security that was transferred. This is a required field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param securityId the security id of the security that was bought\n   */\n  public setSecurityId(securityId: SecurityId): void {\n    this.securityId = securityId;\n  }\n\n  /**\n   * Gets the sub account type the transer is from (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the sub account type\n   */\n  public getFromSubAccountFund(): string {\n    return this.subAccountFrom;\n  }\n\n  /**\n   * Sets the sub account type the transer is from (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param subAccountFrom the sub account type\n   */\n  public setFromSubAccountFund(subAccountFrom: string): void {\n    this.subAccountFrom = subAccountFrom;\n  }\n\n  /**\n   * Gets the result of getFromSubAccountFund as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types.\n   */\n  public getFromSubAccountFundEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getFromSubAccountFund());\n  }\n\n  /**\n   * Gets the sub account type that the transfer is to (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the sub account fund\n   */\n  public getToSubAccountFund(): string {\n    return this.subAccountTo;\n  }\n\n  /**\n   * sets the sub account type that the transfer is to (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param subAccountTo the sub account fund\n   */\n  public setToSubAccountFund(subAccountTo: string): void {\n    this.subAccountTo = subAccountTo;\n  }\n\n  /**\n   * Gets the result of getToSubAccountFund as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types.\n   */\n  public getToSubAccountFundEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getToSubAccountFund());\n  }\n\n  /**\n   * Gets the total for the transaction.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the total\n   */\n  public getTotal(): number {\n    return this.total;\n  }\n\n  /**\n   * Sets the total for the transaction.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param total the total\n   */\n  public setTotal(total: number): void {\n    this.total = total;\n  }\n}\n\nAggregate_add( JournalSecurityTransaction, \"JRNLSEC\" );\nChildAggregate_add(JournalSecurityTransaction, { required: true, order: 20, type: SecurityId, read: JournalSecurityTransaction.prototype.getSecurityId, write: JournalSecurityTransaction.prototype.setSecurityId });\nElement_add(JournalSecurityTransaction, { name: \"SUBACCTFROM\", order: 30, type: String, read: JournalSecurityTransaction.prototype.getFromSubAccountFund, write: JournalSecurityTransaction.prototype.setFromSubAccountFund });\nElement_add(JournalSecurityTransaction, { name: \"SUBACCTTO\", order: 40, type: String, read: JournalSecurityTransaction.prototype.getToSubAccountFund, write: JournalSecurityTransaction.prototype.setToSubAccountFund });\nElement_add(JournalSecurityTransaction, { name: \"TOTAL\", order: 50, type: Number, read: JournalSecurityTransaction.prototype.getTotal, write: JournalSecurityTransaction.prototype.setTotal });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { InvestmentTransactionType } from \"./TransactionType\";\nimport { BaseOtherInvestmentTransaction } from \"./BaseOtherInvestmentTransaction\";\nimport { OriginalCurrency } from \"./OriginalCurrency\";\nimport { SubAccountType } from \"../accounts/SubAccountType\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../../meta/Element_add\";\n\n\n/**\n * Transaction for journal security transactions between sub-accounts within the same investment\n * account.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class MarginInterestTransaction extends BaseOtherInvestmentTransaction {\n\n  private total: number;\n  private subAccountFund: string;\n  private currencyCode: string;\n  private originalCurrencyInfo: OriginalCurrency;\n\n  constructor() {\n    super(InvestmentTransactionType.MARGIN_INTEREST);\n  }\n\n  /**\n   * Gets the sub account type the margin interest affects (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the sub account type\n   */\n  public getSubAccountFund(): string {\n    return this.subAccountFund;\n  }\n\n  /**\n   * Sets the sub account type the margin interest affects (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param subAccountFund the sub account type\n   */\n  public setSubAccountFund(subAccountFund: string): void {\n    this.subAccountFund = subAccountFund;\n  }\n\n  /**\n   * Gets the result of getSubAccountFund as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types.\n   */\n  public getSubAccountFundEnum(): SubAccountType {\n    var type: string = this.getSubAccountFund();\n    return type != null ? SubAccountType[type] : null;\n  }\n\n  /**\n   * Gets the total for the transaction.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the total\n   */\n  public getTotal(): number {\n    return this.total;\n  }\n\n  /**\n   * Sets the total for the transaction.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param total the total\n   */\n  public setTotal(total: number): void {\n    this.total = total;\n  }\n\n  /**\n   * Gets the currency code for the transaction. Only one of currency code or original currency\n   * info should be set according to the OFX spec. If neither are set, means the default currency.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the currency code for the transaction.\n   */\n  public getCurrencyCode(): string {\n    return this.currencyCode;\n  }\n\n  /**\n   * Sets the currency code for the transaction. Only one of currency code or original currency\n   * info should be set according to the OFX spec. If neither are set, means the default currency.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param currencyCode the currency code for the transaction.\n   */\n  public setCurrencyCode(currencyCode: string): void {\n    this.currencyCode = currencyCode;\n    this.originalCurrencyInfo = null;\n  }\n\n  /**\n   * Gets the original currency info for the transaction.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the original currency info for the transaction.\n   */\n  public getOriginalCurrencyInfo(): OriginalCurrency {\n    return this.originalCurrencyInfo;\n  }\n\n  /**\n   * Sets the original currency info for the transaction.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param originalCurrency the original currency info for the transaction.\n   */\n  public setOriginalCurrencyInfo(originalCurrency: OriginalCurrency): void {\n    this.originalCurrencyInfo = originalCurrency;\n    this.currencyCode = null;\n  }\n}\n\nAggregate_add( MarginInterestTransaction, \"MARGININTEREST\" );\nElement_add(MarginInterestTransaction, { name: \"SUBACCTFUND\", order: 30, type: String, read: MarginInterestTransaction.prototype.getSubAccountFund, write: MarginInterestTransaction.prototype.setSubAccountFund });\nElement_add(MarginInterestTransaction, { name: \"TOTAL\", order: 40, type: Number, read: MarginInterestTransaction.prototype.getTotal, write: MarginInterestTransaction.prototype.setTotal });\nElement_add(MarginInterestTransaction, { name: \"CURRENCY\", order: 110, type: String, read: MarginInterestTransaction.prototype.getCurrencyCode, write: MarginInterestTransaction.prototype.setCurrencyCode });\nElement_add(MarginInterestTransaction, { name: \"ORIGCURRENCY\", order: 120, type: OriginalCurrency, read: MarginInterestTransaction.prototype.getOriginalCurrencyInfo, write: MarginInterestTransaction.prototype.setOriginalCurrencyInfo });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Type of sale for options.\n * @see \"Section 13.9.2.4.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum OptionSellType {\n  SELL_TO_CLOSE,\n  SELL_TO_OPEN\n}\n\nexport function OptionSellType_fromOfx(ofxVal: string): OptionSellType {\n  if (\"SELLTOOPEN\" === ofxVal) {\n    return OptionSellType.SELL_TO_OPEN;\n  } else if (\"SELLTOCLOSE\" === ofxVal) {\n    return OptionSellType.SELL_TO_CLOSE;\n  } else {\n    return null;\n  }\n}\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { InvestmentTransactionType } from \"./TransactionType\";\nimport { BaseOtherInvestmentTransaction } from \"./BaseOtherInvestmentTransaction\";\nimport { TransactionWithSecurity } from \"./TransactionWithSecurity\";\nimport { SecurityId } from \"../../seclist/SecurityId\";\nimport { OriginalCurrency } from \"./OriginalCurrency\";\nimport { IncomeType, IncomeType_fromOfx } from \"./IncomeType\";\nimport { SubAccountType, SubAccountType_fromOfx } from \"../accounts/SubAccountType\";\nimport { Inv401KSource, Inv401KSource_fromOfx } from \"../positions/Inv401KSource\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\nimport { Element_add } from \"../../../../meta/Element_add\";\n\n\n/**\n * Transaction for reinvestment transactions.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class ReinvestIncomeTransaction extends BaseOtherInvestmentTransaction\n    implements TransactionWithSecurity {\n\n  private securityId: SecurityId;\n  private incomeType: string;\n  private total: number;\n  private subAccountSecurity: string;\n  private units: number;\n  private unitPrice: number;\n  private commission: number;\n  private taxes: number;\n  private fees: number;\n  private load: number;\n  private taxExempt: boolean;\n  private currencyCode: string;\n  private originalCurrencyInfo: OriginalCurrency;\n  private inv401kSource: string;\n\n  constructor() {\n    super(InvestmentTransactionType.REINVEST_INCOME);\n  }\n\n  /**\n   * Gets the id of the security that was reinvested in. This is a required field according to the\n   * OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the security id of the security that was reinvested in\n   */\n  public getSecurityId(): SecurityId {\n    return this.securityId;\n  }\n\n  /**\n   * Sets the id of the security that was reinvested in. This is a required field according to the\n   * OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param securityId the security id of the security that was reinvested in\n   */\n  public setSecurityId(securityId: SecurityId): void {\n    this.securityId = securityId;\n  }\n\n  /**\n   * Gets the type of income. One of \"CGLONG\" (long term capital gains), \"CGSHORT\" (short term\n   * capital gains), \"DIV\" (dividend), INTEREST, or MISC. This is a required field according to the\n   * OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\" This is a required field according to the OFX spec.\n   *\n   * @return the type of income\n   */\n  public getIncomeType(): string {\n    return this.incomeType;\n  }\n\n  /**\n   * Sets the type of income. One of \"CGLONG\" (long term capital gains), \"CGSHORT\" (short term\n   * capital gains), \"DIV\" (dividend), INTEREST, or MISC. This is a required field according to the\n   * OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\" This is a required field according to the OFX spec.\n   *\n   * @param incomeType the type of income\n   */\n  public setIncomeType(incomeType: string): void {\n    this.incomeType = incomeType;\n  }\n\n  /**\n   * Gets the type of income as one of the well-known types.\n   *\n   * @return the income type or null if it's not one of the well-known types\n   */\n  public getIncomeTypeEnum(): IncomeType {\n    return IncomeType_fromOfx(this.getIncomeType());\n  }\n\n  /**\n   * Gets the total income received. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the total\n   */\n  public getTotal(): number {\n    return this.total;\n  }\n\n  /**\n   * Sets the total income received. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param total the total\n   */\n  public setTotal(total: number): void {\n    this.total = total;\n  }\n\n  /**\n   * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER). This is a\n   * required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the sub account type\n   */\n  public getSubAccountSecurity(): string {\n    return this.subAccountSecurity;\n  }\n\n  /**\n   * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER). This is a\n   * required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param subAccountSecurity the sub account type\n   */\n  public setSubAccountSecurity(subAccountSecurity: string): void {\n    this.subAccountSecurity = subAccountSecurity;\n  }\n\n  /**\n   * Gets the result of getSubAccountSecurity as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types\n   */\n  public getSubAccountSecurityEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getSubAccountSecurity());\n  }\n\n  /**\n   * Gets the number of units of the security that was reinvested in. This is a required field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the number of units purchased\n   */\n  public getUnits(): number {\n    return this.units;\n  }\n\n  /**\n   * Sets the number of units of the security that was reinvested in. This is a required field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param units the number of units purchased\n   */\n  public setUnits(units: number): void {\n    this.units = units;\n  }\n\n  /**\n   * Gets the price per commonly-quoted unit. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the per unit price\n   */\n  public getUnitPrice(): number {\n    return this.unitPrice;\n  }\n\n  /**\n   * Sets the price per commonly-quoted unit. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param unitPrice the per unit price\n   */\n  public setUnitPrice(unitPrice: number): void {\n    this.unitPrice = unitPrice;\n  }\n\n  /**\n   * Gets the transaction commission for the reinvestment. This is an optional field according to\n   * the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the transaction commision\n   */\n  public getCommission(): number {\n    return this.commission;\n  }\n\n  /**\n   * Sets the transaction commission for the reinvestment. This is an optional field according to\n   * the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param commission the transaction commision\n   */\n  public setCommission(commission: number): void {\n    this.commission = commission;\n  }\n\n  /**\n   * Gets the taxes for the reinvestment. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the transaction taxes\n   */\n  public getTaxes(): number {\n    return this.taxes;\n  }\n\n  /**\n   * Sets the taxes for the reinvestment. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param taxes the transaction taxes\n   */\n  public setTaxes(taxes: number): void {\n    this.taxes = taxes;\n  }\n\n  /**\n   * Gets the fees for the reinvestment. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the transaction fees\n   */\n  public getFees(): number {\n    return this.fees;\n  }\n\n  /**\n   * Sets the fees for the reinvestment. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param fees the transaction fees\n   */\n  public setFees(fees: number): void {\n    this.fees = fees;\n  }\n\n  /**\n   * Gets the load for the reinvestment. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the load\n   */\n  public getLoad(): number {\n    return this.load;\n  }\n\n  /**\n   * Sets the load for the reinvestment. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param load the load\n   */\n  public setLoad(load: number): void {\n    this.load = load;\n  }\n\n  /**\n   * Gets whether the income was tax exempt. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return whether the transaction was tax exempt\n   */\n  public getTaxExempt(): boolean {\n    return this.taxExempt;\n  }\n\n  /**\n   * Sets whether the income was tax exempt. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param taxExempt whether the transaction was tax exempt\n   */\n  public setTaxExempt(taxExempt: boolean): void {\n    this.taxExempt = taxExempt;\n  }\n\n  /**\n   * Gets the currency code for the transaction. Only one of currency code or original currency\n   * info should be set according to the OFX spec. If neither are set, means the default currency.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the currency code for the transaction\n   */\n  public getCurrencyCode(): string {\n    return this.currencyCode;\n  }\n\n  /**\n   * Sets the currency code for the transaction. Only one of currency code or original currency\n   * info should be set according to the OFX spec. If neither are set, means the default currency.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param currencyCode the currency code for the transaction\n   */\n  public setCurrencyCode(currencyCode: string): void {\n    this.currencyCode = currencyCode;\n    this.originalCurrencyInfo = null;\n  }\n\n  /**\n   * Gets the original currency info for the transaction.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the original currency info for the transaction.\n   */\n  public getOriginalCurrencyInfo(): OriginalCurrency {\n    return this.originalCurrencyInfo;\n  }\n\n  /**\n   * Sets the original currency info for the transaction.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param originalCurrencyInfo the original currency info for the transaction.\n   */\n  public setOriginalCurrencyInfo(originalCurrencyInfo: OriginalCurrency): void {\n    this.originalCurrencyInfo = originalCurrencyInfo;\n    this.currencyCode = null;\n  }\n\n  /**\n   * Gets the 401K source for the reinvestment. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the state withholding\n   */\n  public get401kSource(): string {\n    return this.inv401kSource;\n  }\n\n  /**\n   * Sets the 401K source for the reinvestment. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param inv401kSource the state withholding\n   */\n  public set401kSource(inv401kSource: string): void {\n    this.inv401kSource = inv401kSource;\n  }\n\n  /**\n   * Gets the 401(k) source as one of the well-known types.\n   *\n   * @return the type of close or null if it's not well known\n   */\n  public get401kSourceEnum(): Inv401KSource {\n    return Inv401KSource_fromOfx(this.get401kSource());\n  }\n}\n\nAggregate_add( ReinvestIncomeTransaction, \"REINVEST\" );\nChildAggregate_add(ReinvestIncomeTransaction, { required: true, order: 20, type: SecurityId, read: ReinvestIncomeTransaction.prototype.getSecurityId, write: ReinvestIncomeTransaction.prototype.setSecurityId });\nElement_add(ReinvestIncomeTransaction, { name: \"INCOMETYPE\", required: true, order: 30, type: String, read: ReinvestIncomeTransaction.prototype.getIncomeType, write: ReinvestIncomeTransaction.prototype.setIncomeType });\nElement_add(ReinvestIncomeTransaction, { name: \"TOTAL\", required: true, order: 40, type: Number, read: ReinvestIncomeTransaction.prototype.getTotal, write: ReinvestIncomeTransaction.prototype.setTotal });\nElement_add(ReinvestIncomeTransaction, { name: \"SUBACCTSEC\", order: 50, type: String, read: ReinvestIncomeTransaction.prototype.getSubAccountSecurity, write: ReinvestIncomeTransaction.prototype.setSubAccountSecurity });\nElement_add(ReinvestIncomeTransaction, { name: \"UNITS\", required: true, order: 60, type: Number, read: ReinvestIncomeTransaction.prototype.getUnits, write: ReinvestIncomeTransaction.prototype.setUnits });\nElement_add(ReinvestIncomeTransaction, { name: \"UNITPRICE\", required: true, order: 70, type: Number, read: ReinvestIncomeTransaction.prototype.getUnitPrice, write: ReinvestIncomeTransaction.prototype.setUnitPrice });\nElement_add(ReinvestIncomeTransaction, { name: \"COMMISSION\", order: 80, type: Number, read: ReinvestIncomeTransaction.prototype.getCommission, write: ReinvestIncomeTransaction.prototype.setCommission });\nElement_add(ReinvestIncomeTransaction, { name: \"TAXES\", order: 90, type: Number, read: ReinvestIncomeTransaction.prototype.getTaxes, write: ReinvestIncomeTransaction.prototype.setTaxes });\nElement_add(ReinvestIncomeTransaction, { name: \"FEES\", order: 100, type: Number, read: ReinvestIncomeTransaction.prototype.getFees, write: ReinvestIncomeTransaction.prototype.setFees });\nElement_add(ReinvestIncomeTransaction, { name: \"LOAD\", order: 110, type: Number, read: ReinvestIncomeTransaction.prototype.getLoad, write: ReinvestIncomeTransaction.prototype.setLoad });\nElement_add(ReinvestIncomeTransaction, { name: \"TAXEXEMPT\", order: 120, type: Boolean, read: ReinvestIncomeTransaction.prototype.getTaxExempt, write: ReinvestIncomeTransaction.prototype.setTaxExempt });\nElement_add(ReinvestIncomeTransaction, { name: \"CURRENCY\", order: 130, type: String, read: ReinvestIncomeTransaction.prototype.getCurrencyCode, write: ReinvestIncomeTransaction.prototype.setCurrencyCode });\nElement_add(ReinvestIncomeTransaction, { name: \"ORIGCURRENCY\", order: 140, type: OriginalCurrency, read: ReinvestIncomeTransaction.prototype.getOriginalCurrencyInfo, write: ReinvestIncomeTransaction.prototype.setOriginalCurrencyInfo });\nElement_add(ReinvestIncomeTransaction, { name: \"INV401KSOURCE\", order: 150, type: String, read: ReinvestIncomeTransaction.prototype.get401kSource, write: ReinvestIncomeTransaction.prototype.set401kSource });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /**\n * Related option transaction type.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum RelatedOptionType {\n  SPREAD,\n  STRADDLE,\n  NONE,\n  OTHER\n}\n\nexport function RelatedOptionType_fromOfx(ofxVal: string): RelatedOptionType {\n  if (\"SPREAD\" === ofxVal) {\n    return RelatedOptionType.SPREAD;\n  } else if (\"STRADDLE\" === ofxVal) {\n    return RelatedOptionType.STRADDLE;\n  } else if (\"NONE\" === ofxVal) {\n    return RelatedOptionType.NONE;\n  } else if (\"OTHER\" === ofxVal) {\n    return RelatedOptionType.OTHER;\n  } else {\n    return null;\n  }\n}\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { InvestmentTransactionType } from \"./TransactionType\";\nimport { BaseOtherInvestmentTransaction } from \"./BaseOtherInvestmentTransaction\";\nimport { TransactionWithSecurity } from \"./TransactionWithSecurity\";\nimport { SecurityId } from \"../../seclist/SecurityId\";\nimport { OriginalCurrency } from \"./OriginalCurrency\";\nimport { SubAccountType, SubAccountType_fromOfx } from \"../accounts/SubAccountType\";\nimport { Inv401KSource, Inv401KSource_fromOfx } from \"../positions/Inv401KSource\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\nimport { Element_add } from \"../../../../meta/Element_add\";\n\n\n/**\n * Transaction for return of capital transactions.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class ReturnOfCapitalTransaction extends BaseOtherInvestmentTransaction\n    implements TransactionWithSecurity {\n\n  private securityId: SecurityId;\n  private total: number;\n  private subAccountSecurity: string;\n  private subAccountFund: string;\n  private currencyCode: string;\n  private originalCurrencyInfo: OriginalCurrency;\n  private inv401kSource: string;\n\n  constructor() {\n    super(InvestmentTransactionType.RETURN_OF_CAPITAL);\n  }\n\n  /**\n   * Gets the id of the security that capital was returned from. This is a required field according\n   * to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the security id of the security that capital was returned from\n   */\n  public getSecurityId(): SecurityId {\n    return this.securityId;\n  }\n\n  /**\n   * Sets the id of the security that capital was returned from. This is a required field according\n   * to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param securityId the security id of the security that capital was returned from\n   */\n  public setSecurityId(securityId: SecurityId): void {\n    this.securityId = securityId;\n  }\n\n  /**\n   * Gets the total amount of capital returned. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the total\n   */\n  public getTotal(): number {\n    return this.total;\n  }\n\n  /**\n   * Sets the total amount of capital returned. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param total the total\n   */\n  public setTotal(total: number): void {\n    this.total = total;\n  }\n\n  /**\n   * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER). This is a\n   * required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the sub account type\n   */\n  public getSubAccountSecurity(): string {\n    return this.subAccountSecurity;\n  }\n\n  /**\n   * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER). This is a\n   * required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param subAccountSecurity the sub account type\n   */\n  public setSubAccountSecurity(subAccountSecurity: string): void {\n    this.subAccountSecurity = subAccountSecurity;\n  }\n\n  /**\n   * Gets the result of getSubAccountSecurity as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types.\n   */\n  public getSubAccountSecurityEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getSubAccountSecurity());\n  }\n\n  /**\n   * Gets the sub account type that the transaction affects.\n   * (e.g. CASH, MARGIN, SHORT, OTHER). This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the sub account fund\n   */\n  public getSubAccountFund(): string {\n    return this.subAccountFund;\n  }\n\n  /**\n   * Sets the sub account type that the transaction affects.\n   * (e.g. CASH, MARGIN, SHORT, OTHER). This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param subAccountFund the sub account fund\n   */\n  public setSubAccountFund(subAccountFund: string): void {\n    this.subAccountFund = subAccountFund;\n  }\n\n  /**\n   * Gets the result of getSubAccountFund as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types\n   */\n  public getSubAccountFundEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getSubAccountFund());\n  }\n\n  /**\n   * Gets the currency code for the transaction. Only one of currency code or original currency\n   * info should be set according to the OFX spec. If neither are set, means the default currency.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the currency code for the transaction\n   */\n  public getCurrencyCode(): string {\n    return this.currencyCode;\n  }\n\n  /**\n   * Sets the currency code for the transaction. Only one of currency code or original currency\n   * info should be set according to the OFX spec. If neither are set, means the default currency.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param currencyCode the currency code for the transaction\n   */\n  public setCurrencyCode(currencyCode: string): void {\n    this.currencyCode = currencyCode;\n    this.originalCurrencyInfo = null;\n  }\n\n  /**\n   * Gets the original currency info for the transaction.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the currency code for the transaction.\n   */\n  public getOriginalCurrencyInfo(): OriginalCurrency {\n    return this.originalCurrencyInfo;\n  }\n\n  /**\n   * Sets the original currency info for the transaction.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param originalCurrencyInfo the currency code for the transaction.\n   */\n  public setOriginalCurrencyInfo(originalCurrencyInfo: OriginalCurrency): void {\n    this.originalCurrencyInfo = originalCurrencyInfo;\n    this.currencyCode = null;\n  }\n\n  /**\n   * Gets the 401K source for the reinvestment. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the state withholding\n   */\n  public get401kSource(): string {\n    return this.inv401kSource;\n  }\n\n  /**\n   * Sets the 401K source for the reinvestment. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param inv401kSource the state withholding\n   */\n  public set401kSource(inv401kSource: string): void {\n    this.inv401kSource = inv401kSource;\n  }\n\n  /**\n   * Gets the 401(k) source as one of the well-known types.\n   *\n   * @return the type of close or null if it's not well known.\n   */\n  public get401kSourceEnum(): Inv401KSource {\n    return Inv401KSource_fromOfx(this.get401kSource());\n  }\n}\n\nAggregate_add( ReturnOfCapitalTransaction, \"RETOFCAP\" );\nChildAggregate_add(ReturnOfCapitalTransaction, { required: true, order: 20, type: SecurityId, read: ReturnOfCapitalTransaction.prototype.getSecurityId, write: ReturnOfCapitalTransaction.prototype.setSecurityId });\nElement_add(ReturnOfCapitalTransaction, { name: \"TOTAL\", required: true, order: 40, type: Number, read: ReturnOfCapitalTransaction.prototype.getTotal, write: ReturnOfCapitalTransaction.prototype.setTotal });\nElement_add(ReturnOfCapitalTransaction, { name: \"SUBACCTSEC\", order: 50, type: String, read: ReturnOfCapitalTransaction.prototype.getSubAccountSecurity, write: ReturnOfCapitalTransaction.prototype.setSubAccountSecurity });\nElement_add(ReturnOfCapitalTransaction, { name: \"SUBACCTFUND\", order: 140, type: String, read: ReturnOfCapitalTransaction.prototype.getSubAccountFund, write: ReturnOfCapitalTransaction.prototype.setSubAccountFund });\nElement_add(ReturnOfCapitalTransaction, { name: \"CURRENCY\", order: 110, type: String, read: ReturnOfCapitalTransaction.prototype.getCurrencyCode, write: ReturnOfCapitalTransaction.prototype.setCurrencyCode });\nElement_add(ReturnOfCapitalTransaction, { name: \"ORIGCURRENCY\", order: 120, type: OriginalCurrency, read: ReturnOfCapitalTransaction.prototype.getOriginalCurrencyInfo, write: ReturnOfCapitalTransaction.prototype.setOriginalCurrencyInfo });\nElement_add(ReturnOfCapitalTransaction, { name: \"INV401KSOURCE\", order: 180, type: String, read: ReturnOfCapitalTransaction.prototype.get401kSource, write: ReturnOfCapitalTransaction.prototype.set401kSource });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Reason debt was sold.\n * @see \"Section 13.9.2.4.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum SellDebtReason {\n  CALL,\n  SELL,\n  MATURITY\n}\n\nexport function SellDebtReason_fromOfx(ofxVal: string): SellDebtReason {\n  if (\"CALL\" === ofxVal) {\n    return SellDebtReason.CALL;\n  } else if (\"SELL\" === ofxVal) {\n    return SellDebtReason.SELL;\n  } else if (\"MATURITY\" === ofxVal) {\n    return SellDebtReason.MATURITY;\n  } else {\n    return null;\n  }\n}\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { InvestmentTransactionType } from \"./TransactionType\";\nimport { BaseSellInvestmentTransaction } from \"./BaseSellInvestmentTransaction\";\nimport { SellDebtReason, SellDebtReason_fromOfx } from \"./SellDebtReason\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../../meta/Element_add\";\n\n\n/**\n * Transaction for selling debt (i.e. bonds, CDs, etc.,).\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class SellDebtTransaction extends BaseSellInvestmentTransaction {\n\n  private sellReason: string;\n  private accruedInterest: number;\n\n  constructor() {\n    super(InvestmentTransactionType.SELL_DEBT);\n  }\n\n  /**\n   * Gets the reason for the sale. One of \"CALL\" (the debt was called), \"SELL\" (the debt was sold),\n   * \"MATURITY\" (the debt reached maturity).\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return The reason for the sale\n   */\n  public getSellReason(): string {\n    return this.sellReason;\n  }\n\n  /**\n   * Sets the reason for the sale. One of \"CALL\" (the debt was called), \"SELL\" (the debt was sold),\n   * \"MATURITY\" (the debt reached maturity).\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param sellReason The reason for the sale\n   */\n  public setSellReason(sellReason: string): void {\n    this.sellReason = sellReason;\n  }\n\n  /**\n   * Gets the sell reason as one of the well-known types.\n   *\n   * @return the sell reason or null if it's not well known\n   */\n  public getSellReasonEnum(): SellDebtReason {\n    return SellDebtReason_fromOfx(this.getSellReason());\n  }\n\n  /**\n   * Gets the amount of accrued interest on the debt. This is an optional field according to the\n   * OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the amount of accrued interest\n   */\n  public getAccruedInterest(): number {\n    return this.accruedInterest;\n  }\n\n  /**\n   * Sets the amount of accrued interest on the debt. This is an optional field according to the\n   * OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param accruedInterest the amount of accrued interest\n   */\n  public setAccruedInterest(accruedInterest: number): void {\n    this.accruedInterest = accruedInterest;\n  }\n}\n\nAggregate_add( SellDebtTransaction, \"SELLDEBT\" );\nElement_add(SellDebtTransaction, { name: \"SELLREASON\", order: 30, type: String, read: SellDebtTransaction.prototype.getSellReason, write: SellDebtTransaction.prototype.setSellReason });\nElement_add(SellDebtTransaction, { name: \"ACCRDINT\", order: 40, type: Number, read: SellDebtTransaction.prototype.getAccruedInterest, write: SellDebtTransaction.prototype.setAccruedInterest });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Type of sale for stocks and mutual funds.\n *\n * @author Jon Perlow\n */\nexport enum SellType {\n  SELL,\n  SELL_SHORT\n}\n\nexport function SellType_fromOfx(ofxVal: string): SellType {\n  if (\"SELL\" === ofxVal) {\n    return SellType.SELL;\n  } else if (\"SELLSHORT\" === ofxVal) {\n    return SellType.SELL_SHORT;\n  } else {\n    return null;\n  }\n}\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { InvestmentTransactionType } from \"./TransactionType\";\nimport { BaseSellInvestmentTransaction } from \"./BaseSellInvestmentTransaction\";\nimport { SellType, SellType_fromOfx } from \"./SellType\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../../meta/Element_add\";\n\n\n/**\n * Transaction for selling mutual fund.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class SellMutualFundTransaction extends BaseSellInvestmentTransaction {\n\n  private sellType: string;\n  private averageCostBasis: number;\n  private relatedTransactionId: string;\n\n  constructor() {\n    super(InvestmentTransactionType.SELL_MUTUAL_FUND);\n  }\n\n  /**\n   * Gets the type of sale. One of \"SELL\" or \"SELLSHORT\".\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return The type of sale\n   */\n  public getSellType(): string {\n    return this.sellType;\n  }\n\n  /**\n   * Sets the type of sale. One of \"SELL\" or \"SELLSHORT\".\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param sellType The type of sale\n   */\n  public setSellType(sellType: string): void {\n    this.sellType = sellType;\n  }\n\n  /**\n   * Gets the sell type as one of the well-known types.\n   *\n   * @return the type of sale or null if it's not known.\n   */\n  public getSellTypeEnum(): SellType {\n    return SellType_fromOfx(this.sellType);\n  }\n\n  /**\n   * Gets the average cost basis of the sale.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return The average cost basis of the sale\n   */\n  public getAverageCostBasis(): number {\n    return this.averageCostBasis;\n  }\n\n  /**\n   * Sets the average cost basis of the sale.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param averageCostBasis The average cost basis of the sale\n   */\n  public setAverageCostBasis(averageCostBasis: number): void {\n    this.averageCostBasis = averageCostBasis;\n  }\n\n  /**\n   * Gets any related transaction id for a mutual fund sale (e.g. for a mutual fund exchange).\n   * This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the related transaction id\n   */\n  public getRelatedTransactionId(): string {\n    return this.relatedTransactionId;\n  }\n\n  /**\n   * Sets any related transaction id for a mutual fund sale (e.g. for a mutual fund exchange).\n   * This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param relatedTransactionId the related transaction id\n   */\n  public setRelatedTransactionId(relatedTransactionId: string): void {\n    this.relatedTransactionId = relatedTransactionId;\n  }\n}\n\nAggregate_add( SellMutualFundTransaction, \"SELLMF\" );\nElement_add(SellMutualFundTransaction, { name: \"SELLTYPE\", order: 20, type: String, read: SellMutualFundTransaction.prototype.getSellType, write: SellMutualFundTransaction.prototype.setSellType });\nElement_add(SellMutualFundTransaction, { name: \"AVGCOSTBASIS\", order: 30, type: Number, read: SellMutualFundTransaction.prototype.getAverageCostBasis, write: SellMutualFundTransaction.prototype.setAverageCostBasis });\nElement_add(SellMutualFundTransaction, { name: \"RELFITID\", order: 40, type: String, read: SellMutualFundTransaction.prototype.getRelatedTransactionId, write: SellMutualFundTransaction.prototype.setRelatedTransactionId });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { BaseSellInvestmentTransaction } from \"./BaseSellInvestmentTransaction\";\nimport { InvestmentTransactionType } from \"./TransactionType\";\nimport { OptionSellType, OptionSellType_fromOfx } from \"./OptionSellType\";\nimport { RelatedOptionType, RelatedOptionType_fromOfx } from \"./RelatedOptionType\";\nimport { ShortOptionSecurity, ShortOptionSecurity_fromOfx } from \"../positions/ShortOptionSecurity\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../../meta/Element_add\";\n\n\n/**\n * Transaction for selling options.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class SellOptionTransaction extends BaseSellInvestmentTransaction {\n\n  private optionSellType: string;\n  private sharesPerContact: number;\n  private relatedTransactionId: string;\n  private relatedType: string;\n  private secured: string;\n\n  constructor() {\n    super(InvestmentTransactionType.SELL_OPTION);\n  }\n\n  /**\n   * Gets the type of option sale (i.e. \"SELLTOCLOSE\" or \"SELLTOOPEN\"). This is a required field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the option sell type\n   */\n  public getOptionSellType(): string {\n    return this.optionSellType;\n  }\n\n  /**\n   * Sets the type of option sale (i.e. \"SELLTOCLOSE\" or \"SELLTOOPEN\"). This is a required field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param optionSellType the option sell type\n   */\n  public setOptionSellType(optionSellType: string): void {\n    this.optionSellType = optionSellType;\n  }\n\n  /**\n   * Gets the option sell type as one of the well-known types.\n   *\n   * @return the type of sale or null if it's not known.\n   */\n  public getOptionSellTypeEnum(): OptionSellType {\n    return OptionSellType_fromOfx(this.optionSellType);\n  }\n\n  /**\n   * Gets the number of shares per contact. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the number of shares per contact\n   */\n  public getSharesPerContact(): number {\n    return this.sharesPerContact;\n  }\n\n  /**\n   * Sets the number of shares per contact. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param sharesPerContact the number of shares per contact\n   */\n  public setSharesPerContact(sharesPerContact: number): void {\n    this.sharesPerContact = sharesPerContact;\n  }\n\n  /**\n   * Gets a related transaction for the option sale for complex option transactions. This\n   * is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return The related transaction id\n   */\n  public getRelatedTransactionId(): string {\n    return this.relatedTransactionId;\n  }\n\n  /**\n   * Sets a related transaction for the option sale for complex option transactions. This\n   * is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param relatedTransactionId The related transaction id\n   */\n  public setRelatedTransactionId(relatedTransactionId: string): void {\n    this.relatedTransactionId = relatedTransactionId;\n  }\n\n  /**\n   * Gets the type for the related transaction. One of \"SPREAD\", \"STRADDLE\", \"NONE\", \"OTHER\". This\n   * is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return The related tansaction type\n   */\n  public getRelatedType(): string {\n    return this.relatedType;\n  }\n\n  /**\n   * Sets the type for the related transaction. One of \"SPREAD\", \"STRADDLE\", \"NONE\", \"OTHER\". This\n   * is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param relatedType The related tansaction type\n   */\n  public setRelatedType(relatedType: string): void {\n    this.relatedType = relatedType;\n  }\n\n  /**\n   * Gets the related transaction as one of the well-known types.\n   *\n   * @return the related tansaction type or null if it's not well known\n   */\n  public getRelatedTypeEnum(): RelatedOptionType {\n    return RelatedOptionType_fromOfx(this.getRelatedType());\n  }\n\n  /**\n   * Gets how the option sale is secured. One of \"NAKED\" or \"COVERED\". This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return how the option sale is secured\n   */\n  public getSecured(): string {\n    return this.secured;\n  }\n\n  /**\n   * Sets how the option sale is secured. One of \"NAKED\" or \"COVERED\". This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param secured how the option sale is secured\n   */\n  public setSecured(secured: string): void {\n    this.secured = secured;\n  }\n\n  /**\n   * Gets how the option sale is secured as one of the well-known types.\n   *\n   * @return the type indicating how the option is secured or null if it's not well known.\n   */\n  public getSecuredEnum(): ShortOptionSecurity {\n    return ShortOptionSecurity_fromOfx(this.getSecured());\n  }\n}\n\nAggregate_add( SellOptionTransaction, \"SELLOPT\" );\nElement_add(SellOptionTransaction, { name: \"OPTSELLTYPE\", required: true, order: 20, type: String, read: SellOptionTransaction.prototype.getOptionSellType, write: SellOptionTransaction.prototype.setOptionSellType });\nElement_add(SellOptionTransaction, { name: \"SHPERCTRCT\", required: true, order: 30, type: Number, read: SellOptionTransaction.prototype.getSharesPerContact, write: SellOptionTransaction.prototype.setSharesPerContact });\nElement_add(SellOptionTransaction, { name: \"RELFITID\", order: 40, type: String, read: SellOptionTransaction.prototype.getRelatedTransactionId, write: SellOptionTransaction.prototype.setRelatedTransactionId });\nElement_add(SellOptionTransaction, { name: \"RELTYPE\", order: 50, type: String, read: SellOptionTransaction.prototype.getRelatedType, write: SellOptionTransaction.prototype.setRelatedType });\nElement_add(SellOptionTransaction, { name: \"SECURED\", order: 60, type: String, read: SellOptionTransaction.prototype.getSecured, write: SellOptionTransaction.prototype.setSecured });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { InvestmentTransactionType } from \"./TransactionType\";\nimport { BaseSellInvestmentTransaction } from \"./BaseSellInvestmentTransaction\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\n\n\n/**\n * Transaction for buying other types of securities.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class SellOtherTransaction extends BaseSellInvestmentTransaction {\n\n  constructor() {\n    super(InvestmentTransactionType.SELL_OTHER);\n  }\n}\n\nAggregate_add( SellOtherTransaction, \"SELLOTHER\" );\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { BaseSellInvestmentTransaction } from \"./BaseSellInvestmentTransaction\";\nimport { InvestmentTransactionType } from \"./TransactionType\";\nimport { SellType, SellType_fromOfx } from \"./SellType\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../../meta/Element_add\";\n\n\n/**\n * Transaction for selling stock.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class SellStockTransaction extends BaseSellInvestmentTransaction {\n\n  private sellType: string;\n\n  constructor() {\n    super(InvestmentTransactionType.SELL_STOCK);\n  }\n\n  /**\n   * Gets the type of stock sale (i.e. \"SELL\" or \"SELLSHORT\"). This is a required field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @return the sell type\n   */\n  public getSellType(): string {\n    return this.sellType;\n  }\n\n  /**\n   * Sets the type of stock sale (i.e. \"SELL\" or \"SELLSHORT\"). This is a required field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\n   *\n   * @param sellType the sell type\n   */\n  public setSellType(sellType: string): void {\n    this.sellType = sellType;\n  }\n\n  /**\n   * Gets the sell type as one of the well-known types.\n   *\n   * @return the type of sale or null if it's not known\n   */\n  public getSellTypeEnum(): SellType {\n    return SellType_fromOfx(this.sellType);\n  }\n}\n\nAggregate_add( SellStockTransaction, \"SELLSTOCK\" );\nElement_add(SellStockTransaction, { name: \"SELLTYPE\", required: true, order: 20, type: String, read: SellStockTransaction.prototype.getSellType, write: SellStockTransaction.prototype.setSellType });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { BaseOtherInvestmentTransaction } from \"./BaseOtherInvestmentTransaction\";\nimport { SecurityId } from \"../../seclist/SecurityId\";\nimport { OriginalCurrency } from \"./OriginalCurrency\";\nimport { InvestmentTransactionType } from \"./TransactionType\";\nimport { SubAccountType, SubAccountType_fromOfx } from \"../accounts/SubAccountType\";\nimport { Inv401KSource, Inv401KSource_fromOfx } from \"../positions/Inv401KSource\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\nimport { Element_add } from \"../../../../meta/Element_add\";\n\n\n/**\n * Transaction for a stock split.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class SplitTransaction extends BaseOtherInvestmentTransaction {\n  private securityId: SecurityId;\n  private subAccountSecurity: string;\n  private oldUnits: number;\n  private newUnits: number;\n  private numerator: number;\n  private denominator: number;\n  private currencyCode: string;\n  private originalCurrencyInfo: OriginalCurrency;\n  private cashForFractionalUnits: number;\n  private subAccountFund: string;\n  private inv401kSource: string;\n\n  constructor() {\n    super(InvestmentTransactionType.SPLIT);\n  }\n\n  /**\n   * Gets the id of the security for the split. This is a required field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the security id of the security for the expsense\n   */\n  public getSecurityId(): SecurityId {\n    return this.securityId;\n  }\n\n  /**\n   * Sets the id of the security for the split. This is a required field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param securityId the security id of the security for the expsense\n   */\n  public setSecurityId(securityId: SecurityId): void {\n    this.securityId = securityId;\n  }\n\n  /**\n   * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER). This is a\n   * required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the sub account type\n   */\n  public getSubAccountSecurity(): string {\n    return this.subAccountSecurity;\n  }\n\n  /**\n   * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER). This is a\n   * required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param subAccountSecurity the sub account type\n   */\n  public setSubAccountSecurity(subAccountSecurity: string): void {\n    this.subAccountSecurity = subAccountSecurity;\n  }\n\n  /**\n   * Gets the result of getSubAccountSecurity as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types.\n   */\n  public getSubAccountSecurityEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getSubAccountSecurity());\n  }\n\n  /**\n   * Gets the old number of units for the split. This is a required field according to the OFX\n   * spec.\n   *\n   * @return the old number of units.\n   */\n  public getOldUnits(): number {\n    return this.oldUnits;\n  }\n\n  /**\n   * Sets the old number of units for the split. This is a  equired field according to the OFX\n   * spec.\n   *\n   * @param oldUnits the old number of units.\n   */\n  public setOldUnits(oldUnits: number): void {\n    this.oldUnits = oldUnits;\n  }\n\n  /**\n   * Gets the new number of units for the split. This is a required field according to the OFX\n   * spec.\n   *\n   * @return the new number of units.\n   */\n  public getNewUnits(): number {\n    return this.newUnits;\n  }\n\n  /**\n   * Sets the new number of units for the split. This is a required field according to the OFX\n   * spec.\n   *\n   * @param newUnits the new number of units.\n   */\n  public setNewUnits(newUnits: number): void {\n    this.newUnits = newUnits;\n  }\n\n  /**\n   * Gets the numerator for the split ratio. This is a required field according to the OFX spec.\n   *\n   * @return the numerator for the split ratio\n   */\n  public getNumerator(): number {\n    return this.numerator;\n  }\n\n  /**\n   * Sets the numerator for the split ratio. This is a required field according to the OFX spec.\n   *\n   * @param numerator the numerator for the split ratio\n   */\n  public setNumerator(numerator: number): void {\n    this.numerator = numerator;\n  }\n\n  /**\n   * Gets the denominator for the split ratio. This is a required field according to the OFX spec.\n   *\n   * @return the numerator for the split ratio\n   */\n  public getDenominator(): number {\n    return this.denominator;\n  }\n\n  /**\n   * Sets the denominator for the split ratio. This is a required field according to the OFX spec.\n   *\n   * @param denominator the numerator for the split ratio\n   */\n  public setDenominator(denominator: number): void {\n    this.denominator = denominator;\n  }\n\n  /**\n   * Gets the currency code for the transaction. Only one of currency code or original currency\n   * code should be set according to the OFX spec. If neither are set, means the default currency.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the currency code for the transaction\n   */\n  public getCurrencyCode(): string {\n    return this.currencyCode;\n  }\n\n  /**\n   * sets the currency code for the transaction. Only one of currency code or original currency\n   * code should be set according to the OFX spec. If neither are set, means the default currency.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the currency code for the transaction\n   */\n  public setCurrencyCode(currencyCode: string): void {\n    this.currencyCode = currencyCode;\n    this.originalCurrencyInfo = null;\n  }\n\n  /**\n   * Gets the original currency info for the transaction.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the original currency info for the transaction\n   */\n  public getOriginalCurrencyInfo(): OriginalCurrency {\n    return this.originalCurrencyInfo;\n  }\n\n  /**\n   * Sets the original currency info for the transaction.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the original currency info for the transaction\n   */\n  public setOriginalCurrencyInfo(originalCurrencyInfo: OriginalCurrency): void {\n    this.originalCurrencyInfo = originalCurrencyInfo;\n    this.currencyCode = null;\n  }\n\n  /**\n   * Gets the cash for fractional units.\n   *\n   * @return the cash for fractional units\n   */\n  public getCashForFractionalUnits(): number {\n    return this.cashForFractionalUnits;\n  }\n\n  /**\n   * Sets the cash for fractional units.\n   *\n   * @param cashForFractionalUnits the cash for fractional units\n   */\n  public setCashForFractionalUnits(cashForFractionalUnits: number): void {\n    this.cashForFractionalUnits = cashForFractionalUnits;\n  }\n\n  /**\n   * Gets the sub account type for the fund. (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the sub account fund\n   */\n  public getSubAccountFund(): string {\n    return this.subAccountFund;\n  }\n\n  /**\n   * Sets the sub account type for the fund. (e.g. CASH, MARGIN, SHORT, OTHER).\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param subAccountFund the sub account fund\n   */\n  public setSubAccountFund(subAccountFund: string): void {\n    this.subAccountFund = subAccountFund;\n  }\n\n  /**\n   * Gets the result of getSubAccountFund as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types\n   */\n  public getSubAccountFundEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getSubAccountFund());\n  }\n\n  /**\n   * Gets the 401K source for the transaction. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the 401k source\n   */\n  public get401kSource(): string {\n    return this.inv401kSource;\n  }\n\n  /**\n   * Sets the 401K source for the transaction. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param inv401kSource the 401k source\n   */\n  public set401kSource(inv401kSource: string): void {\n    this.inv401kSource = inv401kSource;\n  }\n\n  /**\n   * Gets the 401k source as one of the well-known types.\n   *\n   * @return the 401k source or null if its not one of the well-known types\n   */\n  public get401kSourceEnum(): Inv401KSource {\n    return Inv401KSource_fromOfx(this.get401kSource());\n  }\n}\n\nAggregate_add( SplitTransaction, \"SPLIT\" );\nChildAggregate_add(SplitTransaction, { required: true, order: 20, type: SecurityId, read: SplitTransaction.prototype.getSecurityId, write: SplitTransaction.prototype.setSecurityId });\nElement_add(SplitTransaction, { name: \"SUBACCTSEC\", order: 30, type: String, read: SplitTransaction.prototype.getSubAccountSecurity, write: SplitTransaction.prototype.setSubAccountSecurity });\nElement_add(SplitTransaction, { name: \"OLDUNITS\", order: 40, type: Number, read: SplitTransaction.prototype.getOldUnits, write: SplitTransaction.prototype.setOldUnits });\nElement_add(SplitTransaction, { name: \"NEWUNITS\", order: 50, type: Number, read: SplitTransaction.prototype.getNewUnits, write: SplitTransaction.prototype.setNewUnits });\nElement_add(SplitTransaction, { name: \"NUMERATOR\", order: 60, type: Number, read: SplitTransaction.prototype.getNumerator, write: SplitTransaction.prototype.setNumerator });\nElement_add(SplitTransaction, { name: \"DENOMINATOR\", order: 70, type: Number, read: SplitTransaction.prototype.getDenominator, write: SplitTransaction.prototype.setDenominator });\nElement_add(SplitTransaction, { name: \"CURRENCY\", order: 80, type: String, read: SplitTransaction.prototype.getCurrencyCode, write: SplitTransaction.prototype.setCurrencyCode });\nElement_add(SplitTransaction, { name: \"ORIGCURRENCY\", order: 90, type: OriginalCurrency, read: SplitTransaction.prototype.getOriginalCurrencyInfo, write: SplitTransaction.prototype.setOriginalCurrencyInfo });\nElement_add(SplitTransaction, { name: \"FRACCASH\", order: 100, type: Number, read: SplitTransaction.prototype.getCashForFractionalUnits, write: SplitTransaction.prototype.setCashForFractionalUnits });\nElement_add(SplitTransaction, { name: \"SUBACCTFUND\", order: 110, type: String, read: SplitTransaction.prototype.getSubAccountFund, write: SplitTransaction.prototype.setSubAccountFund });\nElement_add(SplitTransaction, { name: \"INV401KSOURCE\", order: 120, type: String, read: SplitTransaction.prototype.get401kSource, write: SplitTransaction.prototype.set401kSource });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Type of transfer.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum TransferAction {\n  IN,\n  OUT\n}\n\nexport function TransferAction_fromOfx(ofxVal: string): TransferAction {\n  if (\"IN\" === ofxVal) {\n    return TransferAction.IN;\n  } else if (\"OUT\" === ofxVal) {\n    return TransferAction.OUT;\n  } else {\n    return null;\n  }\n}\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { BaseOtherInvestmentTransaction } from \"./BaseOtherInvestmentTransaction\";\nimport { SecurityId } from \"../../seclist/SecurityId\";\nimport { InvestmentTransactionType } from \"./TransactionType\";\nimport { SubAccountType, SubAccountType_fromOfx } from \"../accounts/SubAccountType\";\nimport { TransferAction, TransferAction_fromOfx } from \"./TransferAction\";\nimport { PositionType, PositionType_fromOfx } from \"../positions/PositionType\";\nimport { Inv401KSource, Inv401KSource_fromOfx } from \"../positions/Inv401KSource\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\nimport { Element_add } from \"../../../../meta/Element_add\";\n\n\n/**\n * Transaction for transfers.\n * @see \"Section 13.9.2.4.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class TransferInvestmentTransaction extends BaseOtherInvestmentTransaction {\n\n  private securityId: SecurityId;\n  private subAccountSecurity: string;\n  private units: number;\n  private transferAction: string;\n  private positionType: string;\n  private averageCostBasis: number;\n  private unitPrice: number;\n  private purchaseDate: Date;\n  private inv401kSource: string;\n\n  // TODO (jonp) -- INVACCTFROM\n\n  constructor() {\n    super(InvestmentTransactionType.TRANSFER);\n  }\n\n  /**\n   * Gets the id of the security that was transferred. This is a required field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the security id of the security that was transferred\n   */\n  public getSecurityId(): SecurityId {\n    return this.securityId;\n  }\n\n  /**\n   * Sets the id of the security that was transferred. This is a required field according to the OFX\n   * spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param securityId the security id of the security that was transferred\n   */\n  public setSecurityId(securityId: SecurityId): void {\n    this.securityId = securityId;\n  }\n\n  /**\n    * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n    * @see \"Section 13.9.2.4.3, OFX Spec\"\n    *\n    * @return the sub account type\n    */\n  public getSubAccountSecurity(): string {\n     return this.subAccountSecurity;\n   }\n\n  /**\n    * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\n    * @see \"Section 13.9.2.4.3, OFX Spec\"\n    *\n    * @param subAccountSecurity the sub account type\n    */\n  public setSubAccountSecurity(subAccountSecurity: string): void {\n     this.subAccountSecurity = subAccountSecurity;\n   }\n\n  /**\n   * Gets the result of getSubAccountSecurity as one of the well-known types.\n   *\n   * @return the type of null if it wasn't one of the well known types.\n   */\n  public getSubAccountSecurityEnum(): SubAccountType {\n    return SubAccountType_fromOfx(this.getSubAccountSecurity());\n  }\n\n  /**\n   * Gets the number of units of the security that was transferred. For security-based actions other\n   * than stock splits, this is the quantity bought. For stocks, mutual funds, and others, this\n   * is the number of shares. For bonds, this is the face value. For options, this is the number of\n   * contacts. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the number of units transferred\n   */\n  public getUnits(): number {\n    return this.units;\n  }\n\n  /**\n   * Sets the number of units of the security that was transferred. For security-based actions other\n   * than stock splits, this is the quantity bought. For stocks, mutual funds, and others, this\n   * is the number of shares. For bonds, this is the face value. For options, this is the number of\n   * contacts. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param units the number of units transferred\n   */\n  public setUnits(units: number): void {\n    this.units = units;\n  }\n\n  /**\n   * Gets the type of transfer. One of \"IN\" or \"OUT\". This is a required field according to the\n   * OFX spec.\n   *\n   * @return the type of transfer\n   */\n  public getTransferAction(): string {\n    return this.transferAction;\n  }\n\n  /**\n   * Sets the type of transfer. One of \"IN\" or \"OUT\". This is a required field according to the\n   * OFX spec.\n   *\n   * @param transferAction the type of transfer\n   */\n  public setTransferAction(transferAction: string): void {\n    this.transferAction = transferAction;\n  }\n\n  /**\n   * Gets the transfer action as one of the well-known types.\n   *\n   * @return the type of transfer or null if it's not well known\n   */\n  public getTransferActionEnum(): TransferAction {\n    return TransferAction_fromOfx(this.getTransferAction());\n  }\n\n  /**\n   * Gets the type of position. One of \"LONG\" or \"SHORT\". This is a required field according to the\n   * OFX spec.\n   *\n   * @return the position type\n   */\n  public getPositionType(): string {\n    return this.positionType;\n  }\n\n  /**\n   * Sets the type of position. One of \"LONG\" or \"SHORT\". This is a required field according to the\n   * OFX spec.\n   *\n   * @param positionType the position type\n   */\n  public setPositionType(positionType: string): void {\n    this.positionType = positionType;\n  }\n\n  /**\n   * Gets the position type as one of the well-known types.\n   *\n   * @return the position type or null if it's not well known\n   */\n  public getPositionTypeEnum(): PositionType {\n    return PositionType_fromOfx(this.getPositionType());\n  }\n\n  /**\n   * Gets the average cost basis for the securities being transfered. This is an optional field\n   * according to the ofx spec.\n   *\n   * @return the average cost basis\n   */\n  public getAverageCostBasis(): number {\n    return this.averageCostBasis;\n  }\n\n  /**\n   * Sets the average cost basis for the securities being transfered. This is an optional field\n   * according to the ofx spec.\n   *\n   * @param averageCostBasis the average cost basis\n   */\n  public setAverageCostBasis(averageCostBasis: number): void {\n    this.averageCostBasis = averageCostBasis;\n  }\n\n  /**\n   * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n   * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n   * per contact) price. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the per unit price\n   */\n  public getUnitPrice(): number {\n    return this.unitPrice;\n  }\n\n  /**\n   * Sets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n   * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n   * per contact) price. This is a required field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param unitPrice the per unit price\n   */\n  public setUnitPrice(unitPrice: number): void {\n    this.unitPrice = unitPrice;\n  }\n\n  /**\n   * Gets the original date of purchase for the securities. This is an optional field according to\n   * the ofx spec.\n   *\n   * @return the original date of purchase\n   */\n  public getPurchaseDate(): Date {\n    return this.purchaseDate;\n  }\n\n  /**\n   * Sets the original date of purchase for the securities. This is an optional field according to\n   * the ofx spec.\n   *\n   * @param purchaseDate the original date of purchase\n   */\n  public setPurchaseDate(purchaseDate: Date): void {\n    this.purchaseDate = purchaseDate;\n  }\n\n  /**\n   * Gets the 401K source for the transfer. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the state withholding\n   */\n  public get401kSource(): string {\n    return this.inv401kSource;\n  }\n\n  /**\n   * Sets the 401K source for the transfer. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\n   * according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param inv401kSource the state withholding\n   */\n  public set401kSource(inv401kSource: string): void {\n    this.inv401kSource = inv401kSource;\n  }\n\n  /**\n   * Gets the 401(k) source as one of the well-known types.\n   *\n   * @return the type of close or null if it's not well known.\n   */\n  public get401kSourceEnum(): Inv401KSource {\n    return Inv401KSource_fromOfx(this.get401kSource());\n  }\n}\n\nAggregate_add(TransferInvestmentTransaction, \"TRANSFER\");\nChildAggregate_add(TransferInvestmentTransaction, { required: true, order: 20, type: SecurityId, read: TransferInvestmentTransaction.prototype.getSecurityId, write: TransferInvestmentTransaction.prototype.setSecurityId });\nElement_add(TransferInvestmentTransaction, { name: \"SUBACCTSEC\", order: 30, type: String, read: TransferInvestmentTransaction.prototype.getSubAccountSecurity, write: TransferInvestmentTransaction.prototype.setSubAccountSecurity });\nElement_add(TransferInvestmentTransaction, { name: \"UNITS\", required: true, order: 40, type: Number, read: TransferInvestmentTransaction.prototype.getUnits, write: TransferInvestmentTransaction.prototype.setUnits });\nElement_add(TransferInvestmentTransaction, { name: \"TFERACTION\", required: true, order: 50, type: String, read: TransferInvestmentTransaction.prototype.getTransferAction, write: TransferInvestmentTransaction.prototype.setTransferAction });\nElement_add(TransferInvestmentTransaction, { name: \"POSTYPE\", required: true, order: 60, type: String, read: TransferInvestmentTransaction.prototype.getPositionType, write: TransferInvestmentTransaction.prototype.setPositionType });\nElement_add(TransferInvestmentTransaction, { name: \"AVGCOSTBASIS\", order: 70, type: Number, read: TransferInvestmentTransaction.prototype.getAverageCostBasis, write: TransferInvestmentTransaction.prototype.setAverageCostBasis });\nElement_add(TransferInvestmentTransaction, { name: \"UNITPRICE\", required: true, order: 80, type: Number, read: TransferInvestmentTransaction.prototype.getUnitPrice, write: TransferInvestmentTransaction.prototype.setUnitPrice });\nElement_add(TransferInvestmentTransaction, { name: \"DTPURCHASE\", order: 90, type: Date, read: TransferInvestmentTransaction.prototype.getPurchaseDate, write: TransferInvestmentTransaction.prototype.setPurchaseDate });\nElement_add(TransferInvestmentTransaction, { name: \"INV401KSOURCE\", order: 100, type: String, read: TransferInvestmentTransaction.prototype.get401kSource, write: TransferInvestmentTransaction.prototype.set401kSource });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @author Ryan Heaton\n * @see \"Section 7.2.1, OFX Spec\"\n */\nexport enum SynchronizationCapability {\n\n  FULL,\n\n  LITE\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ApplicationSecurity } from \"../ApplicationSecurity\";\nimport { SynchronizationCapability } from \"./SynchronizationCapability\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../meta/Element_add\";\n\n\n/**\n * Core information about a specific version of a specific message set.\n *\n * @author Ryan Heaton\n * @see \"Section 7.2.1, OFX Spec\"\n */\nexport class CoreMessageSetInfo {\n\n  private version: string;\n  private serviceProviderName: string;\n  private url: string;\n  private security: ApplicationSecurity;\n  private sslRequired: boolean;\n  private realm: string;\n  private language: string;\n  private syncCapability: SynchronizationCapability;\n  private fileBasedErrorRecoverySupport: boolean;\n  private timeout: number;\n\n  constructor() {\n    this.version = \"1\";\n    this.language = \"ENG\"; //Locale.US.getISO3Language();\n  }\n\n  /**\n   * Version of the message set.\n   *\n   * @return The version of the message set.\n   */\n  public getVersion(): string {\n    return this.version;\n  }\n\n  /**\n   * The version of the message set.\n   *\n   * @param version The version of the message set.\n   */\n  public setVersion(version: string): void {\n    this.version = version;\n  }\n\n  /**\n   * The name of the service provider (sometimes the message set processing is outsourced).\n   *\n   * @return The name of the service provider (sometimes the message set processing is outsourced).\n   */\n  public getServiceProviderName(): string {\n    return this.serviceProviderName;\n  }\n\n  /**\n   * The name of the service provider (sometimes the message set processing is outsourced).\n   *\n   * @param serviceProviderName The name of the service provider (sometimes the message set processing is outsourced).\n   */\n  public setServiceProviderName(serviceProviderName: string): void {\n    this.serviceProviderName = serviceProviderName;\n  }\n\n  /**\n   * The URL at which the message set is processed.\n   *\n   * @return The URL at which the message set is processed.\n   */\n  public getUrl(): string {\n    return this.url;\n  }\n\n  /**\n   * The URL at which the message set is processed.\n   *\n   * @param url The URL at which the message set is processed.\n   */\n  public setUrl(url: string): void {\n    this.url = url;\n  }\n\n  /**\n   * The application-level security required for this message set.\n   *\n   * @return The application-level security required for this message set.\n   */\n  public getSecurity(): ApplicationSecurity {\n    return this.security;\n  }\n\n  /**\n   * The application-level security required for this message set.\n   *\n   * @param security The application-level security required for this message set.\n   */\n  public setSecurity(security: ApplicationSecurity): void {\n    this.security = security;\n  }\n\n  /**\n   * Whether transport-level security is required for this message set.\n   *\n   * @return Whether transport-level security is required for this message set.\n   */\n  public getSslRequired(): boolean {\n    return this.sslRequired;\n  }\n\n  /**\n   * Whether transport-level security is required for this message set.\n   *\n   * @param sslRequired Whether transport-level security is required for this message set.\n   */\n  public setSslRequired(sslRequired: boolean): void {\n    this.sslRequired = sslRequired;\n  }\n\n  /**\n   * The sign-on realm.\n   *\n   * @return The sign-on realm.\n   */\n  public getRealm(): string {\n    return this.realm;\n  }\n\n  /**\n   * The sign-on realm.\n   *\n   * @param realm The sign-on realm.\n   */\n  public setRealm(realm: string): void {\n    this.realm = realm;\n  }\n\n  /**\n   * The language.\n   *\n   * @return The language.\n   * @see java.util.Locale#getISO3Language()\n   */\n  public getLanguage(): string {\n    return this.language;\n  }\n\n  /**\n   * The language.\n   *\n   * @param language The language.\n   */\n  public setLanguage(language: string): void {\n    this.language = language;\n  }\n\n  /**\n   * The synchronization capability for this message set.\n   *\n   * @return The synchronization capability for this message set.\n   */\n  public getSyncCapability(): SynchronizationCapability {\n    return this.syncCapability;\n  }\n\n  /**\n   * The synchronization capability for this message set.\n   *\n   * @param syncCapability The synchronization capability for this message set.\n   */\n  public setSyncCapability(syncCapability: SynchronizationCapability): void {\n    this.syncCapability = syncCapability;\n  }\n\n  /**\n   * Whether there exists support for resposne-file based error recovery.\n   *\n   * @return Whether there exists support for resposne-file based error recovery.\n   */\n  public getFileBasedErrorRecoverySupport(): boolean {\n    return this.fileBasedErrorRecoverySupport;\n  }\n\n  /**\n   * Whether there exists support for resposne-file based error recovery.\n   *\n   * @param fileBasedErrorRecoverySupport Whether there exists support for resposne-file based error recovery.\n   */\n  public setFileBasedErrorRecoverySupport(fileBasedErrorRecoverySupport: boolean): void {\n    this.fileBasedErrorRecoverySupport = fileBasedErrorRecoverySupport;\n  }\n\n  /**\n   * Gets the \"INTU.TIMEOUT\" field. There's no public documentation of this field but E*TRADE sends\n   * it. It likely is some type of timeout in seconds.\n   *\n   * @return the \"INTU.TIMEOUT\" property\n   */\n  public getIntuTimeout(): number {\n    return this.timeout;\n  }\n\n  /**\n   * Sets the \"INTU.TIMEOUT\" field. There's no public documentation of this field but E*TRADE sends\n   * it. It likely is some type of timeout in seconds.\n   *\n   * @param timeout the \"INTU.TIMEOUT\" property\n   */\n  public setIntuTimeout(timeout: number): void {\n    this.timeout = timeout;\n  }\n}\n\nAggregate_add( CoreMessageSetInfo, \"MSGSETCORE\" );\nElement_add(CoreMessageSetInfo, { name: \"VER\", required: true, order: 0, type: String, read: CoreMessageSetInfo.prototype.getVersion, write: CoreMessageSetInfo.prototype.setVersion });\nElement_add(CoreMessageSetInfo, { name: \"SPNAME\", order: 10, type: String, read: CoreMessageSetInfo.prototype.getServiceProviderName, write: CoreMessageSetInfo.prototype.setServiceProviderName });\nElement_add(CoreMessageSetInfo, { name: \"URL\", required: true, order: 20, type: String, read: CoreMessageSetInfo.prototype.getUrl, write: CoreMessageSetInfo.prototype.setUrl });\nElement_add(CoreMessageSetInfo, { name: \"OFXSEC\", required: true, order: 30, type: ApplicationSecurity, read: CoreMessageSetInfo.prototype.getSecurity, write: CoreMessageSetInfo.prototype.setSecurity });\nElement_add(CoreMessageSetInfo, { name: \"TRANSPSEC\", required: true, order: 40, type: Boolean, read: CoreMessageSetInfo.prototype.getSslRequired, write: CoreMessageSetInfo.prototype.setSslRequired });\nElement_add(CoreMessageSetInfo, { name: \"SIGNONREALM\", required: true, order: 50, type: String, read: CoreMessageSetInfo.prototype.getRealm, write: CoreMessageSetInfo.prototype.setRealm });\nElement_add(CoreMessageSetInfo, { name: \"LANGUAGE\", required: true, order: 60, type: String, read: CoreMessageSetInfo.prototype.getLanguage, write: CoreMessageSetInfo.prototype.setLanguage });\nElement_add(CoreMessageSetInfo, { name: \"SYNCMODE\", required: true, order: 70, type: SynchronizationCapability, read: CoreMessageSetInfo.prototype.getSyncCapability, write: CoreMessageSetInfo.prototype.setSyncCapability });\nElement_add(CoreMessageSetInfo, { name: \"RESPFILEER\", required: true, order: 80, type: Boolean, read: CoreMessageSetInfo.prototype.getFileBasedErrorRecoverySupport, write: CoreMessageSetInfo.prototype.setFileBasedErrorRecoverySupport });\nElement_add(CoreMessageSetInfo, { name: \"INTU.TIMEOUT\", order: 90, type: Number, read: CoreMessageSetInfo.prototype.getIntuTimeout, write: CoreMessageSetInfo.prototype.setIntuTimeout });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { MessageSetProfile } from \"../MessageSetProfile\";\nimport { CoreMessageSetInfo } from \"./CoreMessageSetInfo\";\nimport { MessageSetType } from \"../MessageSetType\";\nimport { ApplicationSecurity } from \"../ApplicationSecurity\";\nimport { SynchronizationCapability } from \"./SynchronizationCapability\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\n/**\n * Information specific to a version of a message set.\n *\n * @author Ryan Heaton\n * @see \"Section 7.2.1, OFX Spec\"\n */\nexport abstract class VersionSpecificMessageSetInfo implements MessageSetProfile {\n\n  private core: CoreMessageSetInfo;\n\n  /**\n   * The information core.\n   *\n   * @return The information core.\n   */\n  public getCore(): CoreMessageSetInfo {\n    return this.core;\n  }\n\n  /**\n   * The information core.\n   *\n   * @param core The information core.\n   */\n  public setCore(core: CoreMessageSetInfo): void {\n    this.core = core;\n  }\n\n  /**\n   * The message set type.\n   *\n   * @return The message set type.\n   */\n  public abstract getMessageSetType(): MessageSetType;\n\n  public getVersion(): string {\n    return this.core != null ? this.core.getVersion() : null;\n  }\n\n  public getServiceProviderName(): string {\n    return this.core != null ? this.core.getServiceProviderName() : null;\n  }\n\n  public getUrl(): string {\n    return this.core != null ? this.core.getUrl() : null;\n  }\n\n  public getSecurity(): ApplicationSecurity {\n    return this.core != null ? this.core.getSecurity() : null;\n  }\n\n  public isSslRequired(): boolean {\n    return this.core != null && this.core.getSslRequired() != null ? this.core.getSslRequired() : true;\n  }\n\n  public getRealm(): string {\n    return this.core != null ? this.core.getRealm() : null;\n  }\n\n  public getLanguage(): string {\n    return this.core != null ? this.core.getLanguage() : null;\n  }\n\n  public getSyncCapability(): SynchronizationCapability {\n    return this.core != null ? this.core.getSyncCapability() : null;\n  }\n\n  public hasFileBasedErrorRecoverySupport(): boolean {\n    return this.core != null && this.core.getFileBasedErrorRecoverySupport() != null ? this.core.getFileBasedErrorRecoverySupport() : false;\n  }\n}\n\nChildAggregate_add(VersionSpecificMessageSetInfo, { order: 0, type: CoreMessageSetInfo, read: VersionSpecificMessageSetInfo.prototype.getCore, write: VersionSpecificMessageSetInfo.prototype.setCore });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { VersionSpecificMessageSetInfo } from \"./VersionSpecificMessageSetInfo\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\n/**\n * Information about a message set.\n *\n * @author Ryan Heaton\n * @see \"Section 7.2.1, OFX Spec\"\n */\nexport abstract class AbstractMessageSetInfo {\n\n  private versionSpecificInformationList: Array<VersionSpecificMessageSetInfo>;\n\n  /**\n   * List of information about a message set for each version supported.\n   *\n   * @return List of information about a message set for each version supported.\n   */\n  public getVersionSpecificInformationList(): Array<VersionSpecificMessageSetInfo> {\n    return this.versionSpecificInformationList;\n  }\n\n  /**\n   * List of information about a message set for each version supported.\n   *\n   * @param versionSpecificInformationList List of information about a message set for each version supported.\n   */\n  public setVersionSpecificInformationList(versionSpecificInformationList: Array<VersionSpecificMessageSetInfo>): void {\n    this.versionSpecificInformationList = versionSpecificInformationList;\n  }\n}\n\nChildAggregate_add(AbstractMessageSetInfo, { order: 0, type: Array, collectionEntryType: VersionSpecificMessageSetInfo, read: AbstractMessageSetInfo.prototype.getVersionSpecificInformationList, write: AbstractMessageSetInfo.prototype.setVersionSpecificInformationList });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @author Ryan Heaton\n * @see \"Section 7.2.2, OFX Spec\"\n */\nexport enum CharacterType {\n\n  ALPHAONLY,\n\n  NUMERICONLY,\n\n  ALPHAORNUMERIC,\n\n  ALPHAANDNUMERIC\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { AbstractMessageSetInfo } from \"./AbstractMessageSetInfo\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\n/**\n * @author Ryan Heaton\n * @see \"Section 7.2, OFX Spec\"\n */\nexport class MessageSetInfoList {\n\n  private informationList: Array<AbstractMessageSetInfo>;\n\n  /**\n   * The list of information for each message set.\n   *\n   * @return The list of information for each message set.\n   */\n  public getInformationList(): Array<AbstractMessageSetInfo> {\n    return this.informationList;\n  }\n\n  /**\n   * The list of information for each message set.\n   *\n   * @param informationList The list of information for each message set.\n   */\n  public setInformationList(informationList: Array<AbstractMessageSetInfo>): void {\n    this.informationList = informationList;\n  }\n}\n\nAggregate_add( MessageSetInfoList, \"MSGSETLIST\" );\nChildAggregate_add(MessageSetInfoList, { order: 0, type: Array, collectionEntryType: AbstractMessageSetInfo, read: MessageSetInfoList.prototype.getInformationList, write: MessageSetInfoList.prototype.setInformationList });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SignonProfile } from \"../SignonProfile\";\nimport { CharacterType } from \"./CharacterType\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../meta/Element_add\";\n\n\n/**\n * Sign-on information\n *\n * @author Ryan Heaton\n * @see \"Section 7.2.2, OFX Spec\"\n */\nexport class SignonInfo implements SignonProfile {\n\n  private realm: string;\n  private minPasswordCharacters: number;\n  private maxPasswordCharacters: number;\n  private passwordCharacterType: CharacterType;\n  private passwordCaseSensitive: boolean;\n  private passwordSpecialCharsAllowed: boolean;\n  private passwordSpacesAllowed: boolean;\n  private changePasswordSupported: boolean;\n  private changePasswordFirstRequired: boolean;\n  private additionalCredientialsLabel1: string;\n  private additionalCredientialsLabel2: string;\n  private clientUIDRequired: boolean;\n  private authTokenRequiredForFirstSignon: boolean;\n  private authTokenLabel: string;\n  private authTokenInfoURL: string;\n  private mfaSupported: boolean;\n  private mfaChallengeRequiredForFirstSignon: boolean;\n\n  constructor() {\n    this.passwordCaseSensitive = true;\n    this.passwordSpecialCharsAllowed = true;\n    this.passwordSpacesAllowed = true;\n  }\n\n  /**\n   * The name of the sign-on realm.\n   *\n   * @return The name of the sign-on realm.\n   */\n  public getRealm(): string {\n    return this.realm;\n  }\n\n  /**\n   * The name of the sign-on realm.\n   *\n   * @param realm The name of the sign-on realm.\n   */\n  public setRealm(realm: string): void {\n    this.realm = realm;\n  }\n\n  /**\n   * The minimum number of password characters.\n   *\n   * @return The minimum number of password characters.\n   */\n  public getMinPasswordCharacters(): number {\n    return this.minPasswordCharacters;\n  }\n\n  /**\n   * The minimum number of password characters.\n   *\n   * @param minPasswordCharacters The minimum number of password characters.\n   */\n  public setMinPasswordCharacters(minPasswordCharacters: number): void {\n    this.minPasswordCharacters = minPasswordCharacters;\n  }\n\n  /**\n   * The maximum number of password characters.\n   *\n   * @return The maximum number of password characters.\n   */\n  public getMaxPasswordCharacters(): number {\n    return this.maxPasswordCharacters;\n  }\n\n  /**\n   * The maximum number of password characters.\n   *\n   * @param maxPasswordCharacters The maximum number of password characters.\n   */\n  public setMaxPasswordCharacters(maxPasswordCharacters: number): void {\n    this.maxPasswordCharacters = maxPasswordCharacters;\n  }\n\n  /**\n   * The type of password characters supported.\n   *\n   * @return The type of password characters supported.\n   */\n  public getPasswordCharacterType(): CharacterType {\n    return this.passwordCharacterType;\n  }\n\n  /**\n   * The type of password characters supported.\n   *\n   * @param passwordCharacterType The type of password characters supported.\n   */\n  public setPasswordCharacterType(passwordCharacterType: CharacterType): void {\n    this.passwordCharacterType = passwordCharacterType;\n  }\n\n  /**\n   * Whether the password is case-sensitive.\n   *\n   * @return Whether the password is case-sensitive.\n   */\n  public getPasswordCaseSensitive(): boolean {\n    return this.passwordCaseSensitive;\n  }\n\n  /**\n   * Whether the password is case-sensitive.\n   *\n   * @param passwordCaseSensitive Whether the password is case-sensitive.\n   */\n  public setPasswordCaseSensitive(passwordCaseSensitive: boolean): void {\n    this.passwordCaseSensitive = passwordCaseSensitive;\n  }\n\n  /**\n   * Whether special characters are allowed in the password.\n   *\n   * @return Whether special characters are allowed in the password.\n   */\n  public getPasswordSpecialCharsAllowed(): boolean {\n    return this.passwordSpecialCharsAllowed;\n  }\n\n  /**\n   * Whether special characters are allowed in the password.\n   *\n   * @param passwordSpecialCharsAllowed Whether special characters are allowed in the password.\n   */\n  public setPasswordSpecialCharsAllowed(passwordSpecialCharsAllowed: boolean): void {\n    this.passwordSpecialCharsAllowed = passwordSpecialCharsAllowed;\n  }\n\n  /**\n   * Whether spaces are allowed in the password.\n   *\n   * @return Whether spaces are allowed in the password.\n   */\n  public getPasswordSpacesAllowed(): boolean {\n    return this.passwordSpacesAllowed;\n  }\n\n  /**\n   * Whether spaces are allowed in the password.\n   *\n   * @param passwordSpacesAllowed Whether spaces are allowed in the password.\n   */\n  public setPasswordSpacesAllowed(passwordSpacesAllowed: boolean): void {\n    this.passwordSpacesAllowed = passwordSpacesAllowed;\n  }\n\n  /**\n   * Whether the server can process a password change request for this realm.\n   *\n   * @return Whether the server can process a password change request for this realm.\n   */\n  public getChangePasswordSupported(): boolean {\n    return this.changePasswordSupported;\n  }\n\n  /**\n   * Whether the server can process a password change request for this realm.\n   *\n   * @param changePasswordSupported Whether the server can process a password change request for this realm.\n   */\n  public setChangePasswordSupported(changePasswordSupported: boolean): void {\n    this.changePasswordSupported = changePasswordSupported;\n  }\n\n  /**\n   * Whether the server requires the user to change their password as part of their first signon.\n   *\n   * @return Whether the server requires the user to change their password as part of their first signon.\n   */\n  public getChangePasswordFirstRequired(): boolean {\n    return this.changePasswordFirstRequired;\n  }\n\n  /**\n   * Whether the server requires the user to change their password as part of their first signon.\n   *\n   * @param changePasswordFirstRequired Whether the server requires the user to change their password as part of their first signon.\n   */\n  public setChangePasswordFirstRequired(changePasswordFirstRequired: boolean): void {\n    this.changePasswordFirstRequired = changePasswordFirstRequired;\n  }\n\n  /**\n   * Label for a set of additional credentials that the user must supply.\n   *\n   * @return Label for a set of additional credentials that the user must supply.\n   */\n  public getAdditionalCredientialsLabel1(): string {\n    return this.additionalCredientialsLabel1;\n  }\n\n  /**\n   * Label for a set of additional credentials that the user must supply.\n   *\n   * @param additionalCredientialsLabel1 Label for a set of additional credentials that the user must supply.\n   */\n  public setAdditionalCredientialsLabel1(additionalCredientialsLabel1: string): void {\n    this.additionalCredientialsLabel1 = additionalCredientialsLabel1;\n  }\n\n  /**\n   * Label for a set of additional credentials that the user must supply.\n   *\n   * @return Label for a set of additional credentials that the user must supply.\n   */\n  public getAdditionalCredientialsLabel2(): string {\n    return this.additionalCredientialsLabel2;\n  }\n\n  /**\n   * Label for a set of additional credentials that the user must supply.\n   *\n   * @param additionalCredientialsLabel2 Label for a set of additional credentials that the user must supply.\n   */\n  public setAdditionalCredientialsLabel2(additionalCredientialsLabel2: string): void {\n    this.additionalCredientialsLabel2 = additionalCredientialsLabel2;\n  }\n\n  /**\n   * Whether a client UID is required for teh sign-on.\n   *\n   * @return Whether a client UID is required for teh sign-on.\n   */\n  public getClientUIDRequired(): boolean {\n    return this.clientUIDRequired;\n  }\n\n  /**\n   * Whether a client UID is required for teh sign-on.\n   *\n   * @param clientUIDRequired Whether a client UID is required for teh sign-on.\n   */\n  public setClientUIDRequired(clientUIDRequired: boolean): void {\n    this.clientUIDRequired = clientUIDRequired;\n  }\n\n  /**\n   * Whether an auth token is required for the sign-on.\n   *\n   * @return Whether an auth token is required for the sign-on.\n   */\n  public getAuthTokenRequiredForFirstSignon(): boolean {\n    return this.authTokenRequiredForFirstSignon;\n  }\n\n  /**\n   * Whether an auth token is required for the sign-on.\n   *\n   * @param authTokenRequiredForFirstSignon\n   *         Whether an auth token is required for the sign-on.\n   */\n  public setAuthTokenRequiredForFirstSignon(authTokenRequiredForFirstSignon: boolean): void {\n    this.authTokenRequiredForFirstSignon = authTokenRequiredForFirstSignon;\n  }\n\n  /**\n   * The label of the auth token.\n   *\n   * @return The label of the auth token.\n   */\n  public getAuthTokenLabel(): string {\n    return this.authTokenLabel;\n  }\n\n  /**\n   * The label of the auth token.\n   *\n   * @param authTokenLabel The label of the auth token.\n   */\n  public setAuthTokenLabel(authTokenLabel: string): void {\n    this.authTokenLabel = authTokenLabel;\n  }\n\n  /**\n   * The URL for the auth token information.\n   *\n   * @return The URL for the auth token information.\n   */\n  public getAuthTokenInfoURL(): string {\n    return this.authTokenInfoURL;\n  }\n\n  /**\n   * The URL for the auth token information.\n   *\n   * @param authTokenInfoURL The URL for the auth token information.\n   */\n  public setAuthTokenInfoURL(authTokenInfoURL: string): void {\n    this.authTokenInfoURL = authTokenInfoURL;\n  }\n\n  /**\n   * Whether MFA is supported.\n   *\n   * @return Whether MFA is supported.\n   */\n  public getMfaSupported(): boolean {\n    return this.mfaSupported;\n  }\n\n  /**\n   * Whether MFA is supported.\n   *\n   * @param mfaSupported Whether MFA is supported.\n   */\n  public setMfaSupported(mfaSupported: boolean): void {\n    this.mfaSupported = mfaSupported;\n  }\n\n  /**\n   * Whether an MFA challenge request is required for the first sign-on into this realm.\n   *\n   * @return Whether an MFA challenge request is required for the first sign-on into this realm.\n   */\n  public getMfaChallengeRequiredForFirstSignon(): boolean {\n    return this.mfaChallengeRequiredForFirstSignon;\n  }\n\n  /**\n   * Whether an MFA challenge request is required for the first sign-on into this realm.\n   *\n   * @param mfaChallengeRequiredForFirstSignon\n   *         Whether an MFA challenge request is required for the first sign-on into this realm.\n   */\n  public setMfaChallengeRequiredForFirstSignon(mfaChallengeRequiredForFirstSignon: boolean): void {\n    this.mfaChallengeRequiredForFirstSignon = mfaChallengeRequiredForFirstSignon;\n  }\n}\n\nAggregate_add( SignonInfo, \"SIGNONINFO\" );\nElement_add(SignonInfo, { name: \"SIGNONREALM\", required: true, order: 0, type: String, read: SignonInfo.prototype.getRealm, write: SignonInfo.prototype.setRealm });\nElement_add(SignonInfo, { name: \"MIN\", required: true, order: 10, type: Number, read: SignonInfo.prototype.getMinPasswordCharacters, write: SignonInfo.prototype.setMinPasswordCharacters });\nElement_add(SignonInfo, { name: \"MAX\", required: true, order: 20, type: Number, read: SignonInfo.prototype.getMaxPasswordCharacters, write: SignonInfo.prototype.setMaxPasswordCharacters });\nElement_add(SignonInfo, { name: \"CHARTYPE\", required: true, order: 30, type: CharacterType, read: SignonInfo.prototype.getPasswordCharacterType, write: SignonInfo.prototype.setPasswordCharacterType });\nElement_add(SignonInfo, { name: \"CASESEN\", required: true, order: 40, type: Boolean, read: SignonInfo.prototype.getPasswordCaseSensitive, write: SignonInfo.prototype.setPasswordCaseSensitive });\nElement_add(SignonInfo, { name: \"SPECIAL\", required: true, order: 50, type: Boolean, read: SignonInfo.prototype.getPasswordSpecialCharsAllowed, write: SignonInfo.prototype.setPasswordSpecialCharsAllowed });\nElement_add(SignonInfo, { name: \"SPACES\", required: true, order: 60, type: Boolean, read: SignonInfo.prototype.getPasswordSpacesAllowed, write: SignonInfo.prototype.setPasswordSpacesAllowed });\nElement_add(SignonInfo, { name: \"PINCH\", required: true, order: 70, type: Boolean, read: SignonInfo.prototype.getChangePasswordSupported, write: SignonInfo.prototype.setChangePasswordSupported });\nElement_add(SignonInfo, { name: \"CHGPINFIRST\", required: true, order: 80, type: Boolean, read: SignonInfo.prototype.getChangePasswordFirstRequired, write: SignonInfo.prototype.setChangePasswordFirstRequired });\nElement_add(SignonInfo, { name: \"USERCRED1LABEL\", order: 90, type: String, read: SignonInfo.prototype.getAdditionalCredientialsLabel1, write: SignonInfo.prototype.setAdditionalCredientialsLabel1 });\nElement_add(SignonInfo, { name: \"USERCRED2LABEL\", order: 100, type: String, read: SignonInfo.prototype.getAdditionalCredientialsLabel2, write: SignonInfo.prototype.setAdditionalCredientialsLabel2 });\nElement_add(SignonInfo, { name: \"CLIENTUIDREQ\", order: 110, type: Boolean, read: SignonInfo.prototype.getClientUIDRequired, write: SignonInfo.prototype.setClientUIDRequired });\nElement_add(SignonInfo, { name: \"AUTHTOKENFIRST\", order: 120, type: Boolean, read: SignonInfo.prototype.getAuthTokenRequiredForFirstSignon, write: SignonInfo.prototype.setAuthTokenRequiredForFirstSignon });\nElement_add(SignonInfo, { name: \"AUTHTOKENLABEL\", order: 130, type: String, read: SignonInfo.prototype.getAuthTokenLabel, write: SignonInfo.prototype.setAuthTokenLabel });\nElement_add(SignonInfo, { name: \"AUTHTOKENINFOURL\", order: 140, type: String, read: SignonInfo.prototype.getAuthTokenInfoURL, write: SignonInfo.prototype.setAuthTokenInfoURL });\nElement_add(SignonInfo, { name: \"MFACHALLENGESUPT\", order: 150, type: Boolean, read: SignonInfo.prototype.getMfaSupported, write: SignonInfo.prototype.setMfaSupported });\nElement_add(SignonInfo, { name: \"MFACHALLENGEFIRST\", order: 160, type: Boolean, read: SignonInfo.prototype.getMfaChallengeRequiredForFirstSignon, write: SignonInfo.prototype.setMfaChallengeRequiredForFirstSignon });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SignonInfo } from \"./SignonInfo\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\n/**\n * List of signon information.\n *\n * @author Ryan Heaton\n * @see \"Section 7.2.2, OFX Spec\"\n */\nexport class SignonInfoList {\n\n  private infoList: Array<SignonInfo>;\n\n  /**\n   * List of sign-on information.\n   *\n   * @return List of sign-on information.\n   */\n  public getInfoList(): Array<SignonInfo> {\n    return this.infoList;\n  }\n\n  /**\n   * List of sign-on information.\n   *\n   * @param infoList List of sign-on information.\n   */\n  public setInfoList(infoList: Array<SignonInfo>): void {\n    this.infoList = infoList;\n  }\n}\n\nAggregate_add( SignonInfoList, \"SIGNONINFOLIST\" );\nChildAggregate_add(SignonInfoList, { order: 0, type: Array, collectionEntryType: SignonInfo, read: SignonInfoList.prototype.getInfoList, write: SignonInfoList.prototype.setInfoList });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { ResponseMessage } from \"../ResponseMessage\";\nimport { FinancialInstitutionProfile } from \"../../../client/FinancialInstitutionProfile\";\nimport { MessageSetInfoList } from \"./MessageSetInfoList\";\nimport { SignonInfoList } from \"./SignonInfoList\";\nimport { MessageSetType } from \"../MessageSetType\";\nimport { MessageSetProfile } from \"../MessageSetProfile\";\nimport { OFXException } from \"../../../OFXException\";\nimport { SignonProfile } from \"../SignonProfile\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\nimport { Element_add } from \"../../../meta/Element_add\";\n\n\n//import java.net.URL;\n\n/**\n * @author Ryan Heaton\n * @see \"Section 7.2 OFX Spec\"\n */\nexport class ProfileResponse extends ResponseMessage implements FinancialInstitutionProfile {\n\n  private messageSetList: MessageSetInfoList;\n  private signonInfoList: SignonInfoList;\n  private timestamp: Date;\n  private financialInstitutionName: string;\n  private address1: string;\n  private address2: string;\n  private address3: string;\n  private city: string;\n  private state: string;\n  private zip: string;\n  private country: string;\n  private customerServicePhone: string;\n  private technicalSupportPhone: string;\n  private fax: string;\n  private siteURL: string;\n  private email: string;\n\n  /**\n   * List of message set information.\n   * @return List of message set information.\n   */\n  public getMessageSetList(): MessageSetInfoList {\n    return this.messageSetList;\n  }\n\n  /**\n   * List of message set information.\n   *\n   * @param messageSetList List of message set information.\n   */\n  public setMessageSetList(messageSetList: MessageSetInfoList): void {\n    this.messageSetList = messageSetList;\n  }\n\n  /**\n   * List of signon information.\n   *\n   * @return List of signon information.\n   */\n  public getSignonInfoList(): SignonInfoList {\n    return this.signonInfoList;\n  }\n\n  /**\n   * List of signon information.\n   *\n   * @param signonInfoList List of signon information.\n   */\n  public setSignonInfoList(signonInfoList: SignonInfoList): void {\n    this.signonInfoList = signonInfoList;\n  }\n\n  // Inherited.\n  public getResponseMessageName(): string {\n    return \"profile\";\n  }\n\n  // Inherited.\n  public getLastUpdated(): Date {\n    return this.getTimestamp();\n  }\n\n  /**\n   * The timestamp of this profile update.\n   *\n   * @return The timestamp of this profile update.\n   */\n  public getTimestamp(): Date {\n    return this.timestamp;\n  }\n\n  /**\n   * The timestamp of this profile update.\n   *\n   * @param timestamp The timestamp of this profile update.\n   */\n  public setTimestamp(timestamp: Date): void {\n    this.timestamp = timestamp;\n  }\n\n  /**\n   * The name of the financial institution.\n   *\n   * @return The name of the financial institution.\n   */\n  public getFinancialInstitutionName(): string {\n    return this.financialInstitutionName;\n  }\n\n  /**\n   * The name of the financial institution.\n   *\n   * @param financialInstitutionName The name of the financial institution.\n   */\n  public setFinancialInstitutionName(financialInstitutionName: string): void {\n    this.financialInstitutionName = financialInstitutionName;\n  }\n\n  /**\n   * The address of the financial institution.\n   *\n   * @return The address of the financial institution.\n   */\n  public getAddress1(): string {\n    return this.address1;\n  }\n\n  /**\n   * The address of the financial institution.\n   *\n   * @param address1 The address of the financial institution.\n   */\n  public setAddress1(address1: string): void {\n    this.address1 = address1;\n  }\n\n  /**\n   * The address of the financial institution.\n   *\n   * @return The address of the financial institution.\n   */\n  public getAddress2(): string {\n    return this.address2;\n  }\n\n  /**\n   * The address of the financial institution.\n   *\n   * @param address2 The address of the financial institution.\n   */\n  public setAddress2(address2: string): void {\n    this.address2 = address2;\n  }\n\n  /**\n   * The address of the financial institution.\n   *\n   * @return The address of the financial institution.\n   */\n  public getAddress3(): string {\n    return this.address3;\n  }\n\n  /**\n   * The address of the financial institution.\n   *\n   * @param address3 The address of the financial institution.\n   */\n  public setAddress3(address3: string): void {\n    this.address3 = address3;\n  }\n\n  /**\n   * The city of the financial institution.\n   *\n   * @return The city of the financial institution.\n   */\n  public getCity(): string {\n    return this.city;\n  }\n\n  /**\n   * The city of the financial institution.\n   *\n   * @param city The city of the financial institution.\n   */\n  public setCity(city: string): void {\n    this.city = city;\n  }\n\n  /**\n   * The state of this financial institution.\n   *\n   * @return The state of this financial institution.\n   */\n  public getState(): string {\n    return this.state;\n  }\n\n  /**\n   * The state of this financial institution.\n   *\n   * @param state The state of this financial institution.\n   */\n  public setState(state: string): void {\n    this.state = state;\n  }\n\n  /**\n   * The postal code of this financial institution.\n   *\n   * @return The postal code of this financial institution.\n   */\n  public getZip(): string {\n    return this.zip;\n  }\n\n  /**\n   * The postal code of this financial institution.\n   *\n   * @param zip The postal code of this financial institution.\n   */\n  public setZip(zip: string): void {\n    this.zip = zip;\n  }\n\n  /**\n   * The country code for this financial institution.\n   *\n   * @return The country code for this financial institution.\n   * @see java.util.Locale#getISO3Country()\n   */\n  public getCountry(): string {\n    return this.country;\n  }\n\n  /**\n   * The country code for this financial institution.\n   *\n   * @param country The country code for this financial institution.\n   */\n  public setCountry(country: string): void {\n    this.country = country;\n  }\n\n  /**\n   * The phone number to customer service.\n   *\n   * @return The phone number to customer service.\n   */\n  public getCustomerServicePhone(): string {\n    return this.customerServicePhone;\n  }\n\n  /**\n   * The phone number to customer service.\n   *\n   * @param customerServicePhone The phone number to customer service.\n   */\n  public setCustomerServicePhone(customerServicePhone: string): void {\n    this.customerServicePhone = customerServicePhone;\n  }\n\n  /**\n   * The phone number to tech support.\n   *\n   * @return The phone number to tech support.\n   */\n  public getTechnicalSupportPhone(): string {\n    return this.technicalSupportPhone;\n  }\n\n  /**\n   * The phone number to tech support.\n   *\n   * @param technicalSupportPhone The phone number to tech support.\n   */\n  public setTechnicalSupportPhone(technicalSupportPhone: string): void {\n    this.technicalSupportPhone = technicalSupportPhone;\n  }\n\n  /**\n   * The fax number.\n   *\n   * @return The fax number.\n   */\n  public getFax(): string {\n    return this.fax;\n  }\n\n  /**\n   * The fax number.\n   *\n   * @param fax The fax number.\n   */\n  public setFax(fax: string): void {\n    this.fax = fax;\n  }\n\n  /**\n   * URL for the financial institution.\n   *\n   * @return URL for the financial institution.\n   */\n  public getSiteURL(): string {\n    return this.siteURL;\n  }\n\n  /**\n   * URL for the financial institution.\n   *\n   * @param siteURL URL for the financial institution.\n   */\n  public setSiteURL(siteURL: string): void {\n    this.siteURL = siteURL;\n  }\n\n  /**\n   * The email for this FI\n   *\n   * @return The email for this FI\n   */\n  public getEmail(): string {\n    return this.email;\n  }\n\n  /**\n   * The email for this FI\n   *\n   * @param email The email for this FI\n   */\n  public setEmail(email: string): void {\n    this.email = email;\n  }\n\n  public getMessageSetProfile(type: MessageSetType, version: string = null): MessageSetProfile {\n    return (version === null) ?\n      this.getMessageSetProfile_noversion(type) :\n      this.getMessageSetProfile_version(type, version);\n  }\n\n  public getMessageSetProfile_noversion(type: MessageSetType): MessageSetProfile {\n    var profiles: Array<MessageSetProfile> = this.getProfiles(type);\n    if (profiles.length > 1) {\n      throw new OFXException(\"More than one profile of type \" + type);\n    }\n    else if (profiles.length == 0) {\n      return null;\n    }\n    else {\n      return profiles[0];\n    }\n  }\n\n  /**\n   * Get all the profiles of the specified type.\n   *\n   * @param type The type.\n   * @return The profiles.\n   */\n  protected getProfiles(type: MessageSetType): Array<MessageSetProfile> {\n    var profiles: Array<MessageSetProfile> = new Array<MessageSetProfile>();\n    if (this.getMessageSetList() != null && this.getMessageSetList().getInformationList() != null) {\n      for (var info of this.getMessageSetList().getInformationList()) {\n        if (info.getVersionSpecificInformationList() != null) {\n          for (var versionSpecificInfo of info.getVersionSpecificInformationList()) {\n            if (versionSpecificInfo.getMessageSetType() == type) {\n              profiles.push(versionSpecificInfo);\n            }\n          }\n        }\n      }\n    }\n    return profiles;\n  }\n\n  public getMessageSetProfile_version(type: MessageSetType, version: string): MessageSetProfile {\n    for (var profile of this.getProfiles(type)) {\n      if (version == null) {\n        if (profile.getVersion() == null) {\n          return profile;\n        }\n      }\n      else if (version === profile.getVersion()) {\n        return profile;\n      }\n    }\n\n    return null;\n  }\n\n  public getSignonProfile(messageSet: MessageSetProfile): SignonProfile {\n    if (this.getSignonInfoList() != null && this.getSignonInfoList().getInfoList() != null) {\n      for (var signonInfo of this.getSignonInfoList().getInfoList()) {\n        if (messageSet.getRealm() == null) {\n          if (signonInfo.getRealm() == null) {\n            return signonInfo;\n          }\n        }\n        else if (messageSet.getRealm() === signonInfo.getRealm()) {\n          return signonInfo;\n        }\n      }\n    }\n    return null;\n  }\n}\n\nAggregate_add( ProfileResponse, \"PROFRS\" );\nChildAggregate_add(ProfileResponse, { order: 0, type: MessageSetInfoList, read: ProfileResponse.prototype.getMessageSetList, write: ProfileResponse.prototype.setMessageSetList });\nChildAggregate_add(ProfileResponse, { order: 10, type: SignonInfoList, read: ProfileResponse.prototype.getSignonInfoList, write: ProfileResponse.prototype.setSignonInfoList });\nElement_add(ProfileResponse, { name: \"DTPROFUP\", order: 20, type: Date, read: ProfileResponse.prototype.getTimestamp, write: ProfileResponse.prototype.setTimestamp });\nElement_add(ProfileResponse, { name: \"FINAME\", order: 30, type: String, read: ProfileResponse.prototype.getFinancialInstitutionName, write: ProfileResponse.prototype.setFinancialInstitutionName });\nElement_add(ProfileResponse, { name: \"ADDR1\", required: true, order: 40, type: String, read: ProfileResponse.prototype.getAddress1, write: ProfileResponse.prototype.setAddress1 });\nElement_add(ProfileResponse, { name: \"ADDR2\", order: 50, type: String, read: ProfileResponse.prototype.getAddress2, write: ProfileResponse.prototype.setAddress2 });\nElement_add(ProfileResponse, { name: \"ADDR3\", order: 60, type: String, read: ProfileResponse.prototype.getAddress3, write: ProfileResponse.prototype.setAddress3 });\nElement_add(ProfileResponse, { name: \"CITY\", required: true, order: 70, type: String, read: ProfileResponse.prototype.getCity, write: ProfileResponse.prototype.setCity });\nElement_add(ProfileResponse, { name: \"STATE\", required: true, order: 80, type: String, read: ProfileResponse.prototype.getState, write: ProfileResponse.prototype.setState });\nElement_add(ProfileResponse, { name: \"POSTALCODE\", required: true, order: 90, type: String, read: ProfileResponse.prototype.getZip, write: ProfileResponse.prototype.setZip });\nElement_add(ProfileResponse, { name: \"COUNTRY\", required: true, order: 100, type: String, read: ProfileResponse.prototype.getCountry, write: ProfileResponse.prototype.setCountry });\nElement_add(ProfileResponse, { name: \"CSPHONE\", order: 110, type: String, read: ProfileResponse.prototype.getCustomerServicePhone, write: ProfileResponse.prototype.setCustomerServicePhone });\nElement_add(ProfileResponse, { name: \"TSPHONE\", order: 120, type: String, read: ProfileResponse.prototype.getTechnicalSupportPhone, write: ProfileResponse.prototype.setTechnicalSupportPhone });\nElement_add(ProfileResponse, { name: \"FAXPHONE\", order: 130, type: String, read: ProfileResponse.prototype.getFax, write: ProfileResponse.prototype.setFax });\nElement_add(ProfileResponse, { name: \"URL\", order: 140, type: String, read: ProfileResponse.prototype.getSiteURL, write: ProfileResponse.prototype.setSiteURL });\nElement_add(ProfileResponse, { name: \"EMAIL\", order: 150, type: String, read: ProfileResponse.prototype.getEmail, write: ProfileResponse.prototype.setEmail });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TransactionWrappedResponseMessage } from \"../TransactionWrappedResponseMessage\";\nimport { ProfileResponse } from \"./ProfileResponse\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class ProfileResponseTransaction extends TransactionWrappedResponseMessage<ProfileResponse> {\n\n  private message: ProfileResponse;\n\n  /**\n   * The message.\n   *\n   * @return The message.\n   */\n  public getMessage(): ProfileResponse {\n    return this.message;\n  }\n\n  /**\n   * The message.\n   *\n   * @param message The message.\n   */\n  public setMessage(message: ProfileResponse): void {\n    this.message = message;\n  }\n\n  // Inherited.\n  public getWrappedMessage(): ProfileResponse {\n    return this.getMessage();\n  }\n}\n\nAggregate_add(ProfileResponseTransaction, \"PROFTRNRS\");\nChildAggregate_add(ProfileResponseTransaction, { required: true, order: 30, type: ProfileResponse, read: ProfileResponseTransaction.prototype.getMessage, write: ProfileResponseTransaction.prototype.setMessage });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { ResponseMessageSet } from \"../ResponseMessageSet\";\nimport { ProfileResponseTransaction } from \"./ProfileResponseTransaction\";\nimport { MessageSetType } from \"../MessageSetType\";\nimport { ResponseMessage } from \"../ResponseMessage\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\n/**\n * @author Ryan Heaton\n * @see \"Section 7 OFX Spec\"\n */\nexport class ProfileResponseMessageSet extends ResponseMessageSet {\n\n  private profileResponse: ProfileResponseTransaction;\n\n  public getType(): MessageSetType {\n    return MessageSetType.profile;\n  }\n\n  /**\n   * The profile response.\n   *\n   * @return The profile response.\n   */\n  public getProfileResponse(): ProfileResponseTransaction {\n    return this.profileResponse;\n  }\n\n  /**\n   * The profile response.\n   *\n   * @param profileResponse The profile response.\n   */\n  public setProfileResponse(profileResponse: ProfileResponseTransaction): void {\n    this.profileResponse = profileResponse;\n  }\n\n  // Inherited.\n  public getResponseMessages(): Array<ResponseMessage> {\n    var messages: Array<ResponseMessage> = new Array<ResponseMessage>();\n\n    if (this.getProfileResponse() != null) {\n      messages.push(this.getProfileResponse());\n    }\n\n    return messages;\n  }\n}\n\nAggregate_add(ProfileResponseMessageSet, \"PROFMSGSRSV1\");\nChildAggregate_add(ProfileResponseMessageSet, { required: true, order: 0, type: ProfileResponseTransaction, read: ProfileResponseMessageSet.prototype.getProfileResponse, write: ProfileResponseMessageSet.prototype.setProfileResponse });\n","/*\n * Copyright 2012 TheStash\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ProcessorDayOff } from \"../../../common/ProcessorDayOff\";\nimport { Aggregate_add } from \"../../../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../../../meta/Element_add\";\n\n\n/**\n * Funds Transfer Profile\n * @author Scott Priddy\n * @see \"Section 11.13.2.2 OFX Spec\"\n */\nexport class TransferProfile {\n\n  private processorDaysOff: Array<ProcessorDayOff>;\n  private processEndTime: string;\n  private supportsScheduledTransfers: boolean;\n  private supportsRecurringTransfers: boolean;\n  private supportsLoanTransfers: boolean;\n  private supportsScheduledLoanTransfers: boolean;\n  private supportsRecurringLoanTransfers: boolean;\n  private supportsTransferModification: boolean;\n  private supportsModelModification: boolean;\n  private modelWindow: number;\n  private withdrawnDays: number;\n  private defaultDaysToPay: number;\n\n\n  /**\n   * Days of week that no processing occurs: MONDAY, TUESDAY, WEDNESDAY, THURSDAY,\n   * FRIDAY, SATURDAY, or SUNDAY. 0 or more <PROCDAYSOFF> can be sent.\n   * @return List of days during the week that no processing occurs.\n   */\n  public getProcessorDaysOff(): Array<ProcessorDayOff> {\n    return this.processorDaysOff;\n  }\n\n  public setProcessorDaysOff(processorDaysOff: Array<ProcessorDayOff>): void  {\n    this.processorDaysOff = processorDaysOff;\n  }\n\n  /**\n   * Gets time of day that day's processing ends.\n   *\n   * Time formatted as \"HHMMSS.XXX[gmt offset[:tz name]]\",\n   * the milliseconds and time zone are still optional, and default to GMT.\n   * @see \"Section 3.2.8.3 OFX Spec\"\n   * @return Time String formatted as \"HHMMSS.XXX[gmt offset[:tz name]]\"\n   */\n  public getProcessEndTime(): string  {\n    return this.processEndTime;\n  }\n\n  /**\n   * Sets the time of day that day's processing ends.\n   *\n   * Time formatted as \"HHMMSS.XXX[gmt offset[:tz name]]\",\n   * the milliseconds and time zone are still optional, and default to GMT.\n\n   * @see \"Section 3.2.8.3 OFX Spec\"\n   * @param processEndTime formatted as \"HHMMSS.XXX[gmt offset[:tz name]]\"\n   */\n  public setProcessEndTime(processEndTime: string): void  {\n    this.processEndTime = processEndTime;\n  }\n\n  public getSupportsScheduledTransfers(): boolean  {\n    return this.supportsScheduledTransfers;\n  }\n\n  public setSupportsScheduledTransfers(supportsScheduledTransfers: boolean): void  {\n    this.supportsScheduledTransfers = supportsScheduledTransfers;\n  }\n\n  /**\n   * Requires <CANSCHED>\n   * @return Boolean whether supports recurring transfers\n   */\n  public getSupportsRecurringTransfers(): boolean  {\n    return this.supportsRecurringTransfers;\n  }\n\n  public setSupportsRecurringTransfers(supportsRecurringTransfers: boolean): void  {\n    this.supportsRecurringTransfers = supportsRecurringTransfers;\n  }\n\n  /**\n   * <CANLOAN>Y must be present for transfers to involve loans\n   * @return Boolean whether supports loan transfers\n   */\n  public getSupportsLoanTransfers(): boolean  {\n    return this.supportsLoanTransfers;\n  }\n\n  public setSupportsLoanTransfers(supportsLoanTransfers: boolean): void  {\n    this.supportsLoanTransfers = supportsLoanTransfers;\n  }\n\n  public getSupportsScheduledLoanTransfers(): boolean  {\n    return this.supportsScheduledLoanTransfers;\n  }\n\n  public setSupportsScheduledLoanTransfers(supportsScheduledLoanTransfers: boolean): void  {\n    this.supportsScheduledLoanTransfers = supportsScheduledLoanTransfers;\n  }\n\n  public getSupportsRecurringLoanTransfers(): boolean  {\n    return this.supportsRecurringLoanTransfers;\n  }\n\n  public setSupportsRecurringLoanTransfers(supportsRecurringLoanTransfers: boolean): void  {\n    this.supportsRecurringLoanTransfers = supportsRecurringLoanTransfers;\n  }\n\n  public getSupportsTransferModification(): boolean  {\n    return this.supportsTransferModification;\n  }\n\n  public setSupportsTransferModification(supportsTransferModification: boolean): void  {\n    this.supportsTransferModification = supportsTransferModification;\n  }\n\n  public getSupportsModelModification(): boolean  {\n    return this.supportsModelModification;\n  }\n\n  public setSupportsModelModification(supportsModelModification: boolean): void  {\n    this.supportsModelModification = supportsModelModification;\n  }\n\n  /**\n   * Model window\n   * the number of days before a recurring transaction is scheduled to be processed that it is\n   * instantiated on the system\n   * @return Number number of days before a recurring transaction is scheduled to be processed that it is instantiated on the system\n   */\n  public getModelWindow(): number  {\n    return this.modelWindow;\n  }\n\n  public setModelWindow(modelWindow: number): void  {\n    this.modelWindow = modelWindow;\n  }\n\n  /**\n   * Number of days before processing date that funds are withdrawn\n   * @return Number number of days before processing date that funds are withdrawn\n   */\n  public getWithdrawnDays(): number  {\n    return this.withdrawnDays;\n  }\n\n  public setWithdrawnDays(withdrawnDays: number): void  {\n    this.withdrawnDays = withdrawnDays;\n  }\n\n  /**\n   * Default number of days to pay\n   * @return Number Default number of days to pay\n   */\n  public getDefaultDaysToPay(): number  {\n    return this.defaultDaysToPay;\n  }\n\n  public setDefaultDaysToPay(defaultDaysToPay: number): void  {\n    this.defaultDaysToPay = defaultDaysToPay;\n  }\n}\n\nAggregate_add( TransferProfile, \"XFERPROF\" );\nElement_add(TransferProfile, { name: \"PROCDAYSOFF\", order: 0, type: Array, collectionEntryType: ProcessorDayOff, read: TransferProfile.prototype.getProcessorDaysOff, write: TransferProfile.prototype.setProcessorDaysOff });\nElement_add(TransferProfile, { name: \"PROCENDTM\", required: true, order: 10, type: String, read: TransferProfile.prototype.getProcessEndTime, write: TransferProfile.prototype.setProcessEndTime });\nElement_add(TransferProfile, { name: \"CANSCHED\", required: true, order: 20, type: Boolean, read: TransferProfile.prototype.getSupportsScheduledTransfers, write: TransferProfile.prototype.setSupportsScheduledTransfers });\nElement_add(TransferProfile, { name: \"CANRECUR\", required: true, order: 30, type: Boolean, read: TransferProfile.prototype.getSupportsRecurringTransfers, write: TransferProfile.prototype.setSupportsRecurringTransfers });\nElement_add(TransferProfile, { name: \"CANLOAN\", order: 40, type: Boolean, read: TransferProfile.prototype.getSupportsLoanTransfers, write: TransferProfile.prototype.setSupportsLoanTransfers });\nElement_add(TransferProfile, { name: \"CANSCHEDLOAN\", order: 50, type: Boolean, read: TransferProfile.prototype.getSupportsScheduledLoanTransfers, write: TransferProfile.prototype.setSupportsScheduledLoanTransfers });\nElement_add(TransferProfile, { name: \"CANRECURLOAN\", order: 60, type: Boolean, read: TransferProfile.prototype.getSupportsRecurringLoanTransfers, write: TransferProfile.prototype.setSupportsRecurringLoanTransfers });\nElement_add(TransferProfile, { name: \"CANMODXFERS\", required: true, order: 70, type: Boolean, read: TransferProfile.prototype.getSupportsTransferModification, write: TransferProfile.prototype.setSupportsTransferModification });\nElement_add(TransferProfile, { name: \"CANMODMDLS\", required: true, order: 80, type: Boolean, read: TransferProfile.prototype.getSupportsModelModification, write: TransferProfile.prototype.setSupportsModelModification });\nElement_add(TransferProfile, { name: \"MODELWND\", required: true, order: 90, type: Number, read: TransferProfile.prototype.getModelWindow, write: TransferProfile.prototype.setModelWindow });\nElement_add(TransferProfile, { name: \"DAYSWITH\", required: true, order: 100, type: Number, read: TransferProfile.prototype.getWithdrawnDays, write: TransferProfile.prototype.setWithdrawnDays });\nElement_add(TransferProfile, { name: \"DFLTDAYSTOPAY\", required: true, order: 110, type: Number, read: TransferProfile.prototype.getDefaultDaysToPay, write: TransferProfile.prototype.setDefaultDaysToPay });\n","/*\n * Copyright 2012 TheStash\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ProcessorDayOff } from \"../../../common/ProcessorDayOff\";\nimport { Aggregate_add } from \"../../../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../../../meta/Element_add\";\n\n\n/**\n * Stop Check Profile\n * @author Scott Priddy\n * @see \"Section 11.13.2.3 OFX Spec\"\n */\nexport class StopCheckProfile {\n\n  private processorDaysOff: Array<ProcessorDayOff>;\n  private processEndTime: string;\n  private canUseRange: boolean;\n  private canUseDescription: boolean;\n  private stopCheckFee: number;\n\n  /**\n   * Days of week that no processing occurs: MONDAY, TUESDAY, WEDNESDAY, THURSDAY,\n   * FRIDAY, SATURDAY, or SUNDAY. 0 or more <PROCDAYSOFF> can be sent.\n   * @return List of days during the week that no processing occurs.\n   */\n  public getProcessorDaysOff(): Array<ProcessorDayOff> {\n    return this.processorDaysOff;\n  }\n\n  public setProcessorDaysOff(processorDaysOff: Array<ProcessorDayOff>): void {\n    this.processorDaysOff = processorDaysOff;\n  }\n\n  /**\n   * Gets time of day that day's processing ends.\n   *\n   * Time formatted as \"HHMMSS.XXX[gmt offset[:tz name]]\",\n   * the milliseconds and time zone are still optional, and default to GMT.\n   * @see \"Section 3.2.8.3 OFX Spec\"\n   * @return Time String formatted as \"HHMMSS.XXX[gmt offset[:tz name]]\"\n   */\n  public getProcessEndTime(): string {\n    return this.processEndTime;\n  }\n\n  /**\n   * Sets the time of day that day's processing ends.\n   *\n   * Time formatted as \"HHMMSS.XXX[gmt offset[:tz name]]\",\n   * the milliseconds and time zone are still optional, and default to GMT.\n\n   * @see \"Section 3.2.8.3 OFX Spec\"\n   * @param processEndTime formatted as \"HHMMSS.XXX[gmt offset[:tz name]]\"\n   */\n  public setProcessEndTime(processEndTime: string): void {\n    this.processEndTime = processEndTime;\n  }\n\n  public getCanUseRange(): boolean {\n    return this.canUseRange;\n  }\n\n  public setCanUseRange(canUseRange: boolean): void {\n    this.canUseRange = canUseRange;\n  }\n\n  public getCanUseDescription(): boolean {\n    return this.canUseDescription;\n  }\n\n  public setCanUseDescription(canUseDescription: boolean): void {\n    this.canUseDescription = canUseDescription;\n  }\n\n  public getStopCheckFee(): number {\n    return this.stopCheckFee;\n  }\n\n  public setStopCheckFee(stopCheckFee: number): void {\n    this.stopCheckFee = stopCheckFee;\n  }\n}\n\nAggregate_add( StopCheckProfile, \"STPCHKPROF\" );\nElement_add(StopCheckProfile, { name: \"PROCDAYSOFF\", order: 0, type: Array, collectionEntryType: ProcessorDayOff, read: StopCheckProfile.prototype.getProcessorDaysOff, write: StopCheckProfile.prototype.setProcessorDaysOff });\nElement_add(StopCheckProfile, { name: \"PROCENDTM\", required: true, order: 10, type: String, read: StopCheckProfile.prototype.getProcessEndTime, write: StopCheckProfile.prototype.setProcessEndTime });\nElement_add(StopCheckProfile, { name: \"CANUSERANGE\", required: true, order: 20, type: Boolean, read: StopCheckProfile.prototype.getCanUseRange, write: StopCheckProfile.prototype.setCanUseRange });\nElement_add(StopCheckProfile, { name: \"CANUSEDESC\", required: true, order: 30, type: Boolean, read: StopCheckProfile.prototype.getCanUseDescription, write: StopCheckProfile.prototype.setCanUseDescription });\nElement_add(StopCheckProfile, { name: \"STPCHKFEE\", required: true, order: 40, type: Number, read: StopCheckProfile.prototype.getStopCheckFee, write: StopCheckProfile.prototype.setStopCheckFee });\n","/*\n * Copyright 2012 TheStash\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Aggregate_add } from \"../../../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../../../meta/Element_add\";\n\n\n/**\n * Email Profile\n * @author Scott Priddy\n * @see \"Section 11.13.2.3 OFX Spec\"\n */\nexport class EmailProfile {\n\n  private canEmail: boolean;\n  private canNotify: boolean;\n\n  public getCanEmail(): boolean {\n    return this.canEmail;\n  }\n\n  public setCanEmail(canEmail: boolean): void {\n    this.canEmail = canEmail;\n  }\n\n  public getCanNotify(): boolean {\n    return this.canNotify;\n  }\n\n  public setCanNotify(canNotify: boolean): void {\n    this.canNotify = canNotify;\n  }\n}\n\nAggregate_add( EmailProfile, \"EMAILPROF\");\nElement_add(EmailProfile, { name: \"CANEMAIL\", required: true, order: 10, type: Boolean, read: EmailProfile.prototype.getCanEmail, write: EmailProfile.prototype.setCanEmail });\nElement_add(EmailProfile, { name: \"CANNOTIFY\", required: true, order: 20, type: Boolean, read: EmailProfile.prototype.getCanNotify, write: EmailProfile.prototype.setCanNotify });\n","/*\n * Copyright 2012 TheStash\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Aggregate_add } from \"../../../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../../../meta/Element_add\";\n\n\n/**\n * Image Profile\n * @author Scott Priddy\n * @see \"Section 3.1.6.2 OFX Spec\"\n */\nexport class ImageProfile {\n\n  private closingImageAvailable: boolean;\n  private transactionImageAvailable: boolean;\n\n  public getClosingImageAvailable(): boolean {\n    return this.closingImageAvailable;\n  }\n\n  public setClosingImageAvailable(closingImageAvailable: boolean): void {\n    this.closingImageAvailable = closingImageAvailable;\n  }\n\n  public getTransactionImageAvailable(): boolean {\n    return this.transactionImageAvailable;\n  }\n\n  public setTransactionImageAvailable(transactionImageAvailable: boolean): void {\n    this.transactionImageAvailable = transactionImageAvailable;\n  }\n}\n\nAggregate_add( ImageProfile, \"IMAGEPROF\" );\nElement_add(ImageProfile, { name: \"CLOSINGIMGAVAIL\", required: true, order: 10, type: Boolean, read: ImageProfile.prototype.getClosingImageAvailable, write: ImageProfile.prototype.setClosingImageAvailable });\nElement_add(ImageProfile, { name: \"TRANIMGAVAIL\", required: true, order: 20, type: Boolean, read: ImageProfile.prototype.getTransactionImageAvailable, write: ImageProfile.prototype.setTransactionImageAvailable });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { VersionSpecificMessageSetInfo } from \"../VersionSpecificMessageSetInfo\";\nimport { AccountType } from \"../../banking/AccountType\";\nimport { TransferProfile } from \"./common/TransferProfile\";\nimport { StopCheckProfile } from \"./banking/StopCheckProfile\";\nimport { EmailProfile } from \"./banking/EmailProfile\";\nimport { ImageProfile } from \"./common/ImageProfile\";\nimport { MessageSetType } from \"../../MessageSetType\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\nimport { Element_add } from \"../../../../meta/Element_add\";\n\n\n/**\n * Banking Message Set Profile\n * @author Scott Priddy\n * @author Ryan Heaton\n * @see \"Section 11.13.2.1 OFX Spec\"\n */\nexport class BankingV1MessageSetInfo extends VersionSpecificMessageSetInfo {\n\n  private invalidAccountTypes: Array<AccountType>;\n  private closingAvail: boolean;\n  private transferProfile: TransferProfile;\n  private stopCheckProfile: StopCheckProfile;\n  private emailProfile: EmailProfile;\n  private imageProfile: ImageProfile;\n\n\n  public getMessageSetType(): MessageSetType {\n    return MessageSetType.banking;\n  }\n\n  /**\n   * The invalidAccountTypes list.\n   *\n   * @return The invalidAccountTypes list.\n   */\n  public getInvalidAccountTypes(): Array<AccountType> {\n    return this.invalidAccountTypes;\n  }\n\n  /**\n   * The invalidAccountTypes list.\n   *\n   * @param invalidAccountTypes The invalidAccountTypes list.\n   */\n  public setInvalidAccountTypes(invalidAccountTypes: Array<AccountType>): void {\n    this.invalidAccountTypes = invalidAccountTypes;\n  }\n\n  /**\n   * Gets whether closing statement information is available\n   *\n   * @return whether closing statement information is available\n   */\n  public getClosingAvail(): boolean {\n    return this.closingAvail;\n  }\n\n  /**\n   * Sets whether closing statement information is available\n   *\n   * @param closingAvail whether closing statement information is available\n   */\n  public setClosingAvail(closingAvail: boolean): void {\n    this.closingAvail = closingAvail;\n  }\n\n  public getTransferProfile(): TransferProfile {\n    return this.transferProfile;\n  }\n\n  public setTransferProfile(transferProfile: TransferProfile): void {\n    this.transferProfile = transferProfile;\n  }\n\n  public getStopCheckProfile(): StopCheckProfile {\n    return this.stopCheckProfile;\n  }\n\n  public setStopCheckProfile(stopCheckProfile: StopCheckProfile): void {\n    this.stopCheckProfile = stopCheckProfile;\n  }\n\n  public getEmailProfile(): EmailProfile {\n    return this.emailProfile;\n  }\n\n  public setEmailProfile(emailProfile: EmailProfile): void {\n    this.emailProfile = emailProfile;\n  }\n\n  public getImageProfile(): ImageProfile {\n    return this.imageProfile;\n  }\n\n  public setImageProfile(imageProfile: ImageProfile): void {\n    this.imageProfile = imageProfile;\n  }\n}\n\nAggregate_add( BankingV1MessageSetInfo, \"BANKMSGSETV1\" );\nChildAggregate_add(BankingV1MessageSetInfo, { order: 10, type: Array, collectionEntryType: AccountType, read: BankingV1MessageSetInfo.prototype.getInvalidAccountTypes, write: BankingV1MessageSetInfo.prototype.setInvalidAccountTypes });\nElement_add(BankingV1MessageSetInfo, { name: \"CLOSINGAVAIL\", required: true, order: 20, type: Boolean, read: BankingV1MessageSetInfo.prototype.getClosingAvail, write: BankingV1MessageSetInfo.prototype.setClosingAvail });\nChildAggregate_add(BankingV1MessageSetInfo, { name: \"XFERPROF\", order: 30, type: TransferProfile, read: BankingV1MessageSetInfo.prototype.getTransferProfile, write: BankingV1MessageSetInfo.prototype.setTransferProfile });\nChildAggregate_add(BankingV1MessageSetInfo, { name: \"STPCKPROF\", order: 40, type: StopCheckProfile, read: BankingV1MessageSetInfo.prototype.getStopCheckProfile, write: BankingV1MessageSetInfo.prototype.setStopCheckProfile });\nChildAggregate_add(BankingV1MessageSetInfo, { name: \"EMAILPROF\", required: true, order: 50, type: EmailProfile, read: BankingV1MessageSetInfo.prototype.getEmailProfile, write: BankingV1MessageSetInfo.prototype.setEmailProfile });\nChildAggregate_add(BankingV1MessageSetInfo, { name: \"IMAGEPROF\", order: 60, type: ImageProfile, read: BankingV1MessageSetInfo.prototype.getImageProfile, write: BankingV1MessageSetInfo.prototype.setImageProfile });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { AbstractMessageSetInfo } from \"../AbstractMessageSetInfo\";\nimport { BankingV1MessageSetInfo } from \"./BankingV1MessageSetInfo\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class BankingMessageSetInfo extends AbstractMessageSetInfo {\n\n  private version1Info: BankingV1MessageSetInfo;\n\n  public getVersion1Info(): BankingV1MessageSetInfo {\n    return this.version1Info;\n  }\n\n  public setVersion1Info(version1Info: BankingV1MessageSetInfo): void {\n    this.version1Info = version1Info;\n  }\n}\n\nAggregate_add( BankingMessageSetInfo, \"BANKMSGSET\" );\nChildAggregate_add(BankingMessageSetInfo, { order: 0, type: BankingV1MessageSetInfo, read: BankingMessageSetInfo.prototype.getVersion1Info, write: BankingMessageSetInfo.prototype.setVersion1Info });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { VersionSpecificMessageSetInfo } from \"../VersionSpecificMessageSetInfo\";\nimport { ProcessorDayOff } from \"../../common/ProcessorDayOff\";\nimport { MessageSetType } from \"../../MessageSetType\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../../meta/Element_add\";\n\n\n/**\n * BillPay Message Set Profile\n * @author Scott Priddy\n * @author Ryan Heaton\n * @see \"Section 12.11.2 OFX Spec\"\n */\nexport class BillpayV1MessageSetInfo extends VersionSpecificMessageSetInfo {\n\n  private daysWith: number;\n  private defaultDaysToPay: number;\n  private transferDaysWith: number;\n  private transferDefaultDaysToPay: number;\n  private processorDaysOff: Array<ProcessorDayOff>;\n  private processorEndTime: string;\n  private modelWindow: number;\n  private postProcessorWindow: number;\n  private supportsStatusUpdateViaPaymentModificationResponse: boolean;\n  private supportsPaymentByAddress: boolean;\n  private supportsPaymentByTransfer: boolean;\n  private supportsPaymentByPayeeId: boolean;\n  private userCanAddPayee: boolean;\n  private supportsExtendedPayment: boolean;\n  private canModifyPayments: boolean;\n  private canModifyModels: boolean;\n  private supportsDifferentFirstPayment: boolean;\n  private supportsDifferentLastPayment: boolean;\n  private supportsBillPresentmentContext: boolean;\n\n  public getMessageSetType(): MessageSetType {\n    return MessageSetType.payments;\n  }\n\n  public getDaysWith(): number {\n    return this.daysWith;\n  }\n\n  public setDaysWith(daysWith: number): void {\n    this.daysWith = daysWith;\n  }\n\n  public getDefaultDaysToPay(): number {\n    return this.defaultDaysToPay;\n  }\n\n  public setDefaultDaysToPay(defaultDaysToPay: number): void {\n    this.defaultDaysToPay = defaultDaysToPay;\n  }\n\n  public getTransferDaysWith(): number {\n    return this.transferDaysWith;\n  }\n\n  public setTransferDaysWith(transferDaysWith: number): void {\n    this.transferDaysWith = transferDaysWith;\n  }\n\n  public getTransferDefaultDaysToPay(): number {\n    return this.transferDefaultDaysToPay;\n  }\n\n  public setTransferDefaultDaysToPay(transferDefaultDaysToPay: number): void {\n    this.transferDefaultDaysToPay = transferDefaultDaysToPay;\n  }\n\n  public getProcessorDaysOff(): Array<ProcessorDayOff> {\n    return this.processorDaysOff;\n  }\n\n  public setProcessorDaysOff(processorDaysOff: Array<ProcessorDayOff>): void {\n    this.processorDaysOff = processorDaysOff;\n  }\n\n  public getProcessorEndTime(): string {\n    return this.processorEndTime;\n  }\n\n  public setProcessorEndTime(processorEndTime: string): void {\n    this.processorEndTime = processorEndTime;\n  }\n\n  public getModelWindow(): number {\n    return this.modelWindow;\n  }\n\n  public setModelWindow(modelWindow: number): void {\n    this.modelWindow = modelWindow;\n  }\n\n  public getPostProcessorWindow(): number {\n    return this.postProcessorWindow;\n  }\n\n  public setPostProcessorWindow(postProcessorWindow: number): void {\n    this.postProcessorWindow = postProcessorWindow;\n  }\n\n  public getSupportsStatusUpdateViaPaymentModificationResponse(): boolean {\n    return this.supportsStatusUpdateViaPaymentModificationResponse;\n  }\n\n  public setSupportsStatusUpdateViaPaymentModificationResponse(supportsStatusUpdateViaPaymentModificationResponse: boolean): void {\n    this.supportsStatusUpdateViaPaymentModificationResponse = supportsStatusUpdateViaPaymentModificationResponse;\n  }\n\n  public getSupportsPaymentByAddress(): boolean {\n    return this.supportsPaymentByAddress;\n  }\n\n  public setSupportsPaymentByAddress(supportsPaymentByAddress: boolean): void {\n    this.supportsPaymentByAddress = supportsPaymentByAddress;\n  }\n\n  public getSupportsPaymentByTransfer(): boolean {\n    return this.supportsPaymentByTransfer;\n  }\n\n  public setSupportsPaymentByTransfer(supportsPaymentByTransfer: boolean): void {\n    this.supportsPaymentByTransfer = supportsPaymentByTransfer;\n  }\n\n  public getSupportsPaymentByPayeeId(): boolean {\n    return this.supportsPaymentByPayeeId;\n  }\n\n  public setSupportsPaymentByPayeeId(supportsPaymentByPayeeId: boolean): void {\n    this.supportsPaymentByPayeeId = supportsPaymentByPayeeId;\n  }\n\n  public getUserCanAddPayee(): boolean {\n    return this.userCanAddPayee;\n  }\n\n  public setUserCanAddPayee(userCanAddPayee: boolean): void {\n    this.userCanAddPayee = userCanAddPayee;\n  }\n\n  public getSupportsExtendedPayment(): boolean {\n    return this.supportsExtendedPayment;\n  }\n\n  public setSupportsExtendedPayment(supportsExtendedPayment: boolean): void {\n    this.supportsExtendedPayment = supportsExtendedPayment;\n  }\n\n  public getCanModifyPayments(): boolean {\n    return this.canModifyPayments;\n  }\n\n  public setCanModifyPayments(canModifyPayments: boolean): void {\n    this.canModifyPayments = canModifyPayments;\n  }\n\n  public getCanModifyModels(): boolean {\n    return this.canModifyModels;\n  }\n\n  public setCanModifyModels(canModifyModels: boolean): void {\n    this.canModifyModels = canModifyModels;\n  }\n\n  public getSupportsDifferentFirstPayment(): boolean {\n    return this.supportsDifferentFirstPayment;\n  }\n\n  public setSupportsDifferentFirstPayment(supportsDifferentFirstPayment: boolean): void {\n    this.supportsDifferentFirstPayment = supportsDifferentFirstPayment;\n  }\n\n  public getSupportsDifferentLastPayment(): boolean {\n    return this.supportsDifferentLastPayment;\n  }\n\n  public setSupportsDifferentLastPayment(supportsDifferentLastPayment: boolean): void {\n    this.supportsDifferentLastPayment = supportsDifferentLastPayment;\n  }\n\n  public getSupportsBillPresentmentContext(): boolean {\n    return this.supportsBillPresentmentContext;\n  }\n\n  public setSupportsBillPresentmentContext(supportsBillPresentmentContext: boolean): void {\n    this.supportsBillPresentmentContext = supportsBillPresentmentContext;\n  }\n}\n\nAggregate_add( BillpayV1MessageSetInfo, \"BILLPAYMSGSETV1\" );\nElement_add(BillpayV1MessageSetInfo, { name: \"DAYSWITH\", required: true, order: 10, type: Number, read: BillpayV1MessageSetInfo.prototype.getDaysWith, write: BillpayV1MessageSetInfo.prototype.setDaysWith });\nElement_add(BillpayV1MessageSetInfo, { name: \"DFLTDAYSTOPAY\", required: true, order: 20, type: Number, read: BillpayV1MessageSetInfo.prototype.getDefaultDaysToPay, write: BillpayV1MessageSetInfo.prototype.setDefaultDaysToPay });\nElement_add(BillpayV1MessageSetInfo, { name: \"XFERDAYSWITH\", required: true, order: 30, type: Number, read: BillpayV1MessageSetInfo.prototype.getTransferDaysWith, write: BillpayV1MessageSetInfo.prototype.setTransferDaysWith });\nElement_add(BillpayV1MessageSetInfo, { name: \"XFERDFLTDAYSTOPAY\", required: true, order: 40, type: Number, read: BillpayV1MessageSetInfo.prototype.getTransferDefaultDaysToPay, write: BillpayV1MessageSetInfo.prototype.setTransferDefaultDaysToPay });\nElement_add(BillpayV1MessageSetInfo, { name: \"PROCDAYSOFF\", order: 50, type: Array, /*collectionEntryType: ProcessorDayOff,*/ read: BillpayV1MessageSetInfo.prototype.getProcessorDaysOff, write: BillpayV1MessageSetInfo.prototype.setProcessorDaysOff });\nElement_add(BillpayV1MessageSetInfo, { name: \"PROCENDTM\", required: true, order: 60, type: String, read: BillpayV1MessageSetInfo.prototype.getProcessorEndTime, write: BillpayV1MessageSetInfo.prototype.setProcessorEndTime });\nElement_add(BillpayV1MessageSetInfo, { name: \"MODELWND\", required: true, order: 70, type: Number, read: BillpayV1MessageSetInfo.prototype.getModelWindow, write: BillpayV1MessageSetInfo.prototype.setModelWindow });\nElement_add(BillpayV1MessageSetInfo, { name: \"POSTPROCWND\", required: true, order: 80, type: Number, read: BillpayV1MessageSetInfo.prototype.getPostProcessorWindow, write: BillpayV1MessageSetInfo.prototype.setPostProcessorWindow });\nElement_add(BillpayV1MessageSetInfo, { name: \"STSVIAMODS\", required: true, order: 90, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getSupportsStatusUpdateViaPaymentModificationResponse, write: BillpayV1MessageSetInfo.prototype.setSupportsStatusUpdateViaPaymentModificationResponse });\nElement_add(BillpayV1MessageSetInfo, { name: \"PMTBYADDR\", required: true, order: 100, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getSupportsPaymentByAddress, write: BillpayV1MessageSetInfo.prototype.setSupportsPaymentByAddress });\nElement_add(BillpayV1MessageSetInfo, { name: \"PMTBYXFER\", required: true, order: 110, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getSupportsPaymentByTransfer, write: BillpayV1MessageSetInfo.prototype.setSupportsPaymentByTransfer });\nElement_add(BillpayV1MessageSetInfo, { name: \"PMTBYPAYEEID\", required: true, order: 120, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getSupportsPaymentByPayeeId, write: BillpayV1MessageSetInfo.prototype.setSupportsPaymentByPayeeId });\nElement_add(BillpayV1MessageSetInfo, { name: \"CANADDPAYEE\", required: true, order: 130, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getUserCanAddPayee, write: BillpayV1MessageSetInfo.prototype.setUserCanAddPayee });\nElement_add(BillpayV1MessageSetInfo, { name: \"HASEXTDPMT\", required: true, order: 140, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getSupportsExtendedPayment, write: BillpayV1MessageSetInfo.prototype.setSupportsExtendedPayment });\nElement_add(BillpayV1MessageSetInfo, { name: \"CANMODPMTS\", required: true, order: 150, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getCanModifyPayments, write: BillpayV1MessageSetInfo.prototype.setCanModifyPayments });\nElement_add(BillpayV1MessageSetInfo, { name: \"CANMODMDLS\", required: true, order: 160, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getCanModifyModels, write: BillpayV1MessageSetInfo.prototype.setCanModifyModels });\nElement_add(BillpayV1MessageSetInfo, { name: \"DIFFFIRSTPMT\", required: true, order: 170, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getSupportsDifferentFirstPayment, write: BillpayV1MessageSetInfo.prototype.setSupportsDifferentFirstPayment });\nElement_add(BillpayV1MessageSetInfo, { name: \"DIFFLASTPMT\", required: true, order: 180, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getSupportsDifferentLastPayment, write: BillpayV1MessageSetInfo.prototype.setSupportsDifferentLastPayment });\nElement_add(BillpayV1MessageSetInfo, { name: \"BILLPUBCONTEXT\", order: 190, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getSupportsBillPresentmentContext, write: BillpayV1MessageSetInfo.prototype.setSupportsBillPresentmentContext });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { AbstractMessageSetInfo } from \"../AbstractMessageSetInfo\";\nimport { BillpayV1MessageSetInfo } from \"./BillpayV1MessageSetInfo\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class BillpayMessageSetInfo extends AbstractMessageSetInfo {\n\n  private version1Info: BillpayV1MessageSetInfo;\n\n  public getVersion1Info(): BillpayV1MessageSetInfo {\n    return this.version1Info;\n  }\n\n  public setVersion1Info(version1Info: BillpayV1MessageSetInfo): void {\n    this.version1Info = version1Info;\n  }\n}\n\nAggregate_add( BillpayMessageSetInfo, \"BILLPAYMSGSET\" );\nChildAggregate_add(BillpayMessageSetInfo, { order: 0, type: BillpayV1MessageSetInfo, read: BillpayMessageSetInfo.prototype.getVersion1Info, write: BillpayMessageSetInfo.prototype.setVersion1Info });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { VersionSpecificMessageSetInfo } from \"../VersionSpecificMessageSetInfo\";\nimport { ImageProfile } from \"./common/ImageProfile\";\nimport { MessageSetType } from \"../../MessageSetType\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../../meta/Element_add\";\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\n\n\n/**\n * Credit Card Message Set Profile\n * @author Scott Priddy\n * @author Ryan Heaton\n * @see \"Section 11.13.3 OFX Spec\"\n */\nexport class CreditCardV1MessageSetInfo extends VersionSpecificMessageSetInfo {\n\n  private closingAvail: boolean;\n  private imageProfile: ImageProfile;\n\n  public getMessageSetType(): MessageSetType {\n    return MessageSetType.creditcard;\n  }\n\n  /**\n   * Closing statement information available\n   * @return Boolean\n   */\n  public getClosingAvail(): boolean {\n    return this.closingAvail;\n  }\n\n  public setClosingAvail(closingAvail: boolean): void {\n    this.closingAvail = closingAvail;\n  }\n\n  /**\n   * Image profile (if supported)\n   * @return ImageProfile\n   */\n  public getImageProfile(): ImageProfile {\n    return this.imageProfile;\n  }\n\n  public setImageProfile(imageProfile: ImageProfile): void {\n    this.imageProfile = imageProfile;\n  }\n}\n\nAggregate_add( CreditCardV1MessageSetInfo, \"CREDITCARDMSGSETV1\" );\nElement_add(CreditCardV1MessageSetInfo, { name: \"CLOSINGAVAIL\", required: true, order: 20, type: Boolean, read: CreditCardV1MessageSetInfo.prototype.getClosingAvail, write: CreditCardV1MessageSetInfo.prototype.setClosingAvail });\nChildAggregate_add(CreditCardV1MessageSetInfo, { name: \"IMAGEPROF\", order: 10, type: ImageProfile, read: CreditCardV1MessageSetInfo.prototype.getImageProfile, write: CreditCardV1MessageSetInfo.prototype.setImageProfile });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { AbstractMessageSetInfo } from \"../AbstractMessageSetInfo\";\nimport { CreditCardV1MessageSetInfo } from \"./CreditCardV1MessageSetInfo\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class CreditCardMessageSetInfo extends AbstractMessageSetInfo {\n\n  private version1Info: CreditCardV1MessageSetInfo;\n\n  public getVersion1Info(): CreditCardV1MessageSetInfo {\n    return this.version1Info;\n  }\n\n  public setVersion1Info(version1Info: CreditCardV1MessageSetInfo): void {\n    this.version1Info = version1Info;\n  }\n}\n\nAggregate_add( CreditCardMessageSetInfo, \"CREDITCARDMSGSET\" );\nChildAggregate_add(CreditCardMessageSetInfo, { order: 0, type: CreditCardV1MessageSetInfo, read: CreditCardMessageSetInfo.prototype.getVersion1Info, write: CreditCardMessageSetInfo.prototype.setVersion1Info });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { VersionSpecificMessageSetInfo } from \"../VersionSpecificMessageSetInfo\";\nimport { MessageSetType } from \"../../MessageSetType\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../../meta/Element_add\";\n\n\n/**\n * Email Message Set Profile Information\n * @author Scott Priddy\n * @author Ryan Heaton\n * @see \"Section 9.4.2 OFX Spec\"\n */\nexport class EmailV1MessageSetInfo extends VersionSpecificMessageSetInfo {\n\n  private supportsMail: boolean;\n  private supportsMimeType: boolean;\n\n  public getMessageSetType(): MessageSetType {\n    return MessageSetType.email;\n  }\n\n  /**\n   * Y if server supports <MAILRQ> request.\n   * N if server supports only the <MAILSYNCRQ> request.\n   * @return Boolean\n   */\n  public getSupportsMail(): boolean {\n    return this.supportsMail;\n  }\n\n  public setSupportsMail(supportsMail: boolean): void {\n    this.supportsMail = supportsMail;\n  }\n\n  /**\n   * Y if server supports get MIME message\n   * @return Boolean\n   */\n  public getSupportsMimeType(): boolean {\n    return this.supportsMimeType;\n  }\n\n  public setSupportsMimeType(supportsMimeType: boolean): void {\n    this.supportsMimeType = supportsMimeType;\n  }\n\n}\n\nAggregate_add( EmailV1MessageSetInfo, \"EMAILMSGSETV1\" );\nElement_add(EmailV1MessageSetInfo, { name: \"MAILSUP\", required: true, order: 10, type: Boolean, read: EmailV1MessageSetInfo.prototype.getSupportsMail, write: EmailV1MessageSetInfo.prototype.setSupportsMail });\nElement_add(EmailV1MessageSetInfo, { name: \"GETMIMESUP\", required: true, order: 20, type: Boolean, read: EmailV1MessageSetInfo.prototype.getSupportsMimeType, write: EmailV1MessageSetInfo.prototype.setSupportsMimeType });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { AbstractMessageSetInfo } from \"../AbstractMessageSetInfo\";\nimport { EmailV1MessageSetInfo } from \"./EmailV1MessageSetInfo\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class EmailMessageSetInfo extends AbstractMessageSetInfo {\n\n  private version1Info: EmailV1MessageSetInfo;\n\n  public getVersion1Info(): EmailV1MessageSetInfo {\n    return this.version1Info;\n  }\n\n  public setVersion1Info(version1Info: EmailV1MessageSetInfo): void {\n    this.version1Info = version1Info;\n  }\n}\n\nAggregate_add( EmailMessageSetInfo, \"EMAILMSGSET\" );\nChildAggregate_add(EmailMessageSetInfo, { order: 0, type: EmailV1MessageSetInfo, read: EmailMessageSetInfo.prototype.getVersion1Info, write: EmailMessageSetInfo.prototype.setVersion1Info });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { VersionSpecificMessageSetInfo } from \"../VersionSpecificMessageSetInfo\";\nimport { TransferProfile } from \"./common/TransferProfile\";\nimport { MessageSetType } from \"../../MessageSetType\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\nimport { Element_add } from \"../../../../meta/Element_add\";\n\n\n/**\n * Interbank Funds Transfer Message Set Profile\n * @author Scott Priddy\n * @author Ryan Heaton\n * @see \"Section 11.13.4 OFX Spec\"\n */\nexport class InterbankTransferV1MessageSetInfo extends VersionSpecificMessageSetInfo {\n\n  private transferProfile: TransferProfile;\n  private supportsBillPay: boolean;\n  private cancelWindow: number;\n  private domesticInterbankTransferFee: number;\n  private internationalInterbankTransferFee: number;\n\n  public getMessageSetType(): MessageSetType {\n    return MessageSetType.interbank_transfer;\n  }\n\n  public getTransferProfile(): TransferProfile {\n    return this.transferProfile;\n  }\n\n  public setTransferProfile(transferProfile: TransferProfile): void {\n    this.transferProfile = transferProfile;\n  }\n\n  public getSupportsBillPay(): boolean {\n    return this.supportsBillPay;\n  }\n\n  public setSupportsBillPay(supportsBillPay: boolean): void {\n    this.supportsBillPay = supportsBillPay;\n  }\n\n  public getCancelWindow(): number {\n    return this.cancelWindow;\n  }\n\n  public setCancelWindow(cancelWindow: number): void {\n    this.cancelWindow = cancelWindow;\n  }\n\n  public getDomesticInterbankTransferFee(): number {\n    return this.domesticInterbankTransferFee;\n  }\n\n  public setDomesticInterbankTransferFee(domesticInterbankTransferFee: number): void {\n    this.domesticInterbankTransferFee = domesticInterbankTransferFee;\n  }\n\n  public getInternationalInterbankTransferFee(): number {\n    return this.internationalInterbankTransferFee;\n  }\n\n  public setInternationalInterbankTransferFee(internationalInterbankTransferFee: number): void {\n    this.internationalInterbankTransferFee = internationalInterbankTransferFee;\n  }\n}\n\nAggregate_add( InterbankTransferV1MessageSetInfo, \"INTERXFERMSGSETV1\" );\nChildAggregate_add(InterbankTransferV1MessageSetInfo, { name: \"XFERPROF\", required: true, order: 10, type: TransferProfile, read: InterbankTransferV1MessageSetInfo.prototype.getTransferProfile, write: InterbankTransferV1MessageSetInfo.prototype.setTransferProfile });\nElement_add(InterbankTransferV1MessageSetInfo, { name: \"CANBILLPAY\", required: true, order: 20, type: Boolean, read: InterbankTransferV1MessageSetInfo.prototype.getSupportsBillPay, write: InterbankTransferV1MessageSetInfo.prototype.setSupportsBillPay });\nElement_add(InterbankTransferV1MessageSetInfo, { name: \"CANCELWND\", required: true, order: 30, type: Number, read: InterbankTransferV1MessageSetInfo.prototype.getCancelWindow, write: InterbankTransferV1MessageSetInfo.prototype.setCancelWindow });\nElement_add(InterbankTransferV1MessageSetInfo, { name: \"DOMXFERFEE\", required: true, order: 40, type: Number, read: InterbankTransferV1MessageSetInfo.prototype.getDomesticInterbankTransferFee, write: InterbankTransferV1MessageSetInfo.prototype.setDomesticInterbankTransferFee });\nElement_add(InterbankTransferV1MessageSetInfo, { name: \"INTLXFERFEE\", required: true, order: 50, type: Number, read: InterbankTransferV1MessageSetInfo.prototype.getInternationalInterbankTransferFee, write: InterbankTransferV1MessageSetInfo.prototype.setInternationalInterbankTransferFee });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { AbstractMessageSetInfo } from \"../AbstractMessageSetInfo\";\nimport { InterbankTransferV1MessageSetInfo } from \"./InterbankTransferV1MessageSetInfo\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class InterbankTransferMessageSetInfo extends AbstractMessageSetInfo {\n\n  private version1Info: InterbankTransferV1MessageSetInfo;\n\n  public getVersion1Info(): InterbankTransferV1MessageSetInfo {\n    return this.version1Info;\n  }\n\n  public setVersion1Info(version1Info: InterbankTransferV1MessageSetInfo): void {\n    this.version1Info = version1Info;\n  }\n}\n\nAggregate_add( InterbankTransferMessageSetInfo, \"INTERXFERMSGSET\" );\nChildAggregate_add(InterbankTransferMessageSetInfo, { order: 0, type: InterbankTransferV1MessageSetInfo, read: InterbankTransferMessageSetInfo.prototype.getVersion1Info, write: InterbankTransferMessageSetInfo.prototype.setVersion1Info });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { VersionSpecificMessageSetInfo } from \"../VersionSpecificMessageSetInfo\";\nimport { MessageSetType } from \"../../MessageSetType\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../../meta/Element_add\";\n\n\n/**\n * @see \"Section 13.7.1.1, OFX Spec\"\n *\n * @author Jon Perlow\n * @author Ryan Heaton\n */\nexport class InvestmentV1MessageSetInfo extends VersionSpecificMessageSetInfo {\n\n  private supportsStatementsDownload: boolean;\n  private supportsOpenOrdersDownload: boolean;\n  private supportsPositionsDownload: boolean;\n  private supportsBalanceDownload: boolean;\n  private supportsEmail: boolean;\n  private supports401kInformation: boolean;\n  private supportsClosingStatements: boolean;\n\n  public getMessageSetType(): MessageSetType {\n    return MessageSetType.investment;\n  }\n\n  public getSupportsStatementsDownload(): boolean {\n    return this.supportsStatementsDownload;\n  }\n\n  public setSupportsStatementsDownload(supportsStatementsDownload: boolean): void {\n    this.supportsStatementsDownload = supportsStatementsDownload;\n  }\n\n  public getSupportsOpenOrdersDownload(): boolean {\n    return this.supportsOpenOrdersDownload;\n  }\n\n  public setSupportsOpenOrdersDownload(supportsOpenOrdersDownload: boolean): void {\n    this.supportsOpenOrdersDownload = supportsOpenOrdersDownload;\n  }\n\n  public getSupportsPositionsDownload(): boolean {\n    return this.supportsPositionsDownload;\n  }\n\n  public setSupportsPositionsDownload(supportsPositionsDownload: boolean): void {\n    this.supportsPositionsDownload = supportsPositionsDownload;\n  }\n\n  public getSupportsBalanceDownload(): boolean {\n    return this.supportsBalanceDownload;\n  }\n\n  public setSupportsBalanceDownload(supportsBalanceDownload: boolean): void {\n    this.supportsBalanceDownload = supportsBalanceDownload;\n  }\n\n  public getSupportsEmail(): boolean {\n    return this.supportsEmail;\n  }\n\n  public setSupportsEmail(supportsEmail: boolean): void {\n    this.supportsEmail = supportsEmail;\n  }\n\n  public getSupports401kInformation(): boolean {\n    return this.supports401kInformation;\n  }\n\n  public setSupports401kInformation(supports401kInformation: boolean): void {\n    this.supports401kInformation = supports401kInformation;\n  }\n\n  public getSupportsClosingStatements(): boolean {\n    return this.supportsClosingStatements;\n  }\n\n  public setSupportsClosingStatements(supportsClosingStatements: boolean): void {\n    this.supportsClosingStatements = supportsClosingStatements;\n  }\n}\n\nAggregate_add( InvestmentV1MessageSetInfo, \"INVSTMTMSGSETV1\" );\nElement_add(InvestmentV1MessageSetInfo, { name: \"TRANDNLD\", required:true, order: 10, type: Boolean, read: InvestmentV1MessageSetInfo.prototype.getSupportsStatementsDownload, write: InvestmentV1MessageSetInfo.prototype.setSupportsStatementsDownload });\nElement_add(InvestmentV1MessageSetInfo, { name: \"OODNLD\", required:true, order: 20, type: Boolean, read: InvestmentV1MessageSetInfo.prototype.getSupportsOpenOrdersDownload, write: InvestmentV1MessageSetInfo.prototype.setSupportsOpenOrdersDownload });\nElement_add(InvestmentV1MessageSetInfo, { name: \"POSDNLD\", required:true, order: 30, type: Boolean, read: InvestmentV1MessageSetInfo.prototype.getSupportsPositionsDownload, write: InvestmentV1MessageSetInfo.prototype.setSupportsPositionsDownload });\nElement_add(InvestmentV1MessageSetInfo, { name: \"BALDNLD\", required:true, order: 40, type: Boolean, read: InvestmentV1MessageSetInfo.prototype.getSupportsBalanceDownload, write: InvestmentV1MessageSetInfo.prototype.setSupportsBalanceDownload });\nElement_add(InvestmentV1MessageSetInfo, { name: \"CANEMAIL\", required:true, order: 50, type: Boolean, read: InvestmentV1MessageSetInfo.prototype.getSupportsEmail, write: InvestmentV1MessageSetInfo.prototype.setSupportsEmail });\nElement_add(InvestmentV1MessageSetInfo, { name: \"INV401KDNLD\", order: 60, type: Boolean, read: InvestmentV1MessageSetInfo.prototype.getSupports401kInformation, write: InvestmentV1MessageSetInfo.prototype.setSupports401kInformation });\nElement_add(InvestmentV1MessageSetInfo, { name: \"CLOSINGAVAIL\", order: 70, type: Boolean, read: InvestmentV1MessageSetInfo.prototype.getSupportsClosingStatements, write: InvestmentV1MessageSetInfo.prototype.setSupportsClosingStatements });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { AbstractMessageSetInfo } from \"../AbstractMessageSetInfo\";\nimport { InvestmentV1MessageSetInfo } from \"./InvestmentV1MessageSetInfo\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class InvestmentMessageSetInfo extends AbstractMessageSetInfo {\n\n  private version1Info: InvestmentV1MessageSetInfo;\n\n  public getVersion1Info(): InvestmentV1MessageSetInfo {\n    return this.version1Info;\n  }\n\n  public setVersion1Info(version1Info: InvestmentV1MessageSetInfo): void {\n    this.version1Info = version1Info;\n  }\n}\n\nAggregate_add( InvestmentMessageSetInfo, \"INVSTMTMSGSET\" );\nChildAggregate_add(InvestmentMessageSetInfo, { order: 0, type: InvestmentV1MessageSetInfo, read: InvestmentMessageSetInfo.prototype.getVersion1Info, write: InvestmentMessageSetInfo.prototype.setVersion1Info });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { VersionSpecificMessageSetInfo } from \"../VersionSpecificMessageSetInfo\";\nimport { MessageSetType } from \"../../MessageSetType\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class ProfileV1MessageSetInfo extends VersionSpecificMessageSetInfo {\n  public getMessageSetType(): MessageSetType {\n    return MessageSetType.profile;\n  }\n}\n\nAggregate_add( ProfileV1MessageSetInfo, \"PROFMSGSETV1\" );\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { AbstractMessageSetInfo } from \"../AbstractMessageSetInfo\";\nimport { ProfileV1MessageSetInfo } from \"./ProfileV1MessageSetInfo\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class ProfileMessageSetInfo extends AbstractMessageSetInfo {\n\n  private version1Info: ProfileV1MessageSetInfo;\n\n  public getVersion1Info(): ProfileV1MessageSetInfo {\n    return this.version1Info;\n  }\n\n  public setVersion1Info(version1Info: ProfileV1MessageSetInfo): void {\n    this.version1Info = version1Info;\n  }\n}\n\nAggregate_add( ProfileMessageSetInfo, \"PROFMSGSET\" );\nChildAggregate_add(ProfileMessageSetInfo, { order: 0, type: ProfileV1MessageSetInfo, read: ProfileMessageSetInfo.prototype.getVersion1Info, write: ProfileMessageSetInfo.prototype.setVersion1Info });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { VersionSpecificMessageSetInfo } from \"../VersionSpecificMessageSetInfo\";\nimport { MessageSetType } from \"../../MessageSetType\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../../meta/Element_add\";\n\n\n/**\n * @see \"Section 13.7.2.1, OFX Spec\"\n *\n * @author Jon Perlow\n * @author Ryan Heaton\n */\nexport class SecurityListV1MessageSetInfo extends VersionSpecificMessageSetInfo {\n\n  private supportsSecurityListDownload: boolean;\n\n  public getMessageSetType(): MessageSetType {\n    return MessageSetType.investment_security;\n  }\n\n  public getSupportsSecurityListDownload(): boolean {\n    return this.supportsSecurityListDownload;\n  }\n\n  public setSupportsSecurityListDownload(supportsSecurityListDownload: boolean): void {\n    this.supportsSecurityListDownload = supportsSecurityListDownload;\n  }\n}\n\nAggregate_add( SecurityListV1MessageSetInfo, \"SECLISTMSGSETV1\" );\nElement_add(SecurityListV1MessageSetInfo, { name: \"SECLISTRQDNLD\", required:true, order: 10, type: Boolean, read: SecurityListV1MessageSetInfo.prototype.getSupportsSecurityListDownload, write: SecurityListV1MessageSetInfo.prototype.setSupportsSecurityListDownload });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { AbstractMessageSetInfo } from \"../AbstractMessageSetInfo\";\nimport { SecurityListV1MessageSetInfo } from \"./SecurityListV1MessageSetInfo\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class SecurityListMessageSetInfo extends AbstractMessageSetInfo {\n\n  private version1Info: SecurityListV1MessageSetInfo;\n\n  public getVersion1Info(): SecurityListV1MessageSetInfo {\n    return this.version1Info;\n  }\n\n  public setVersion1Info(version1Info: SecurityListV1MessageSetInfo): void {\n    this.version1Info = version1Info;\n  }\n}\n\nAggregate_add( SecurityListMessageSetInfo, \"SECLISTMSGSET\" );\nChildAggregate_add(SecurityListMessageSetInfo, { order: 0, type: SecurityListV1MessageSetInfo, read: SecurityListMessageSetInfo.prototype.getVersion1Info, write: SecurityListMessageSetInfo.prototype.setVersion1Info });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { VersionSpecificMessageSetInfo } from \"../VersionSpecificMessageSetInfo\";\nimport { MessageSetType } from \"../../MessageSetType\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\n\n\n/**\n * @author Jon Perlow\n */\nexport class SignOnV1MessageSetInfo extends VersionSpecificMessageSetInfo {\n\n  public getMessageSetType(): MessageSetType {\n    return MessageSetType.signon;\n  }\n}\n\nAggregate_add( SignOnV1MessageSetInfo, \"SIGNONMSGSETV1\" );\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { AbstractMessageSetInfo } from \"../AbstractMessageSetInfo\";\nimport { SignOnV1MessageSetInfo } from \"./SignOnV1MessageSetInfo\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\n\n\n/**\n * @author Jon Perlow\n */\nexport class SignOnMessageSetInfo extends AbstractMessageSetInfo {\n  private version1Info: SignOnV1MessageSetInfo;\n\n  public getVersion1Info(): SignOnV1MessageSetInfo {\n    return this.version1Info;\n  }\n\n  public setVersion1Info(version1Info: SignOnV1MessageSetInfo): void {\n    this.version1Info = version1Info;\n  }\n\n}\n\nAggregate_add( SignOnMessageSetInfo, \"SIGNONMSGSET\" );\nChildAggregate_add(SignOnMessageSetInfo, { order: 0, type: SignOnV1MessageSetInfo, read: SignOnMessageSetInfo.prototype.getVersion1Info, write: SignOnMessageSetInfo.prototype.setVersion1Info });\n","/*\n * Copyright 2012 TheStash\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Aggregate_add } from \"../../../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../../../meta/Element_add\";\n\n\n/**\n * Client Enrollment option, contains indicator as to whether the account number is required as part of enrollment\n * @author Scott Priddy\n * @see \"Section 8.8 OFX Spec\"\n */\nexport class ClientEnrollment {\n\n  private accountRequired: boolean;\n\n  /**\n   * Y if account number is required as part of enrollment\n   * @return Boolean\n   */\n  public getAccountRequired(): boolean {\n    return this.accountRequired;\n  }\n\n  public setAccountRequired(accountRequired: boolean): void {\n    this.accountRequired = accountRequired;\n  }\n\n}\n\nAggregate_add( ClientEnrollment, \"CLIENTENROLL\" );\nElement_add(ClientEnrollment, { name: \"ACCTREQUIRED\", required: true, order: 0, type: Boolean, read: ClientEnrollment.prototype.getAccountRequired, write: ClientEnrollment.prototype.setAccountRequired });\n","/*\n * Copyright 2012 TheStash\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Aggregate_add } from \"../../../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../../../meta/Element_add\";\n\n\n/**\n * Web Enrollment option containing URL to direct user for web based enrollment, if supported.\n * @author Scott Priddy\n * @see \"Section 8.8 OFX Spec\"\n */\nexport class WebEnrollment {\n\n  private url: string;\n\n  /**\n   * URL to start enrollment process\n   * @return String\n   */\n  public getUrl(): string {\n    return this.url;\n  }\n\n  public setUrl(url: string): void {\n    this.url = url;\n  }\n\n}\n\nAggregate_add( WebEnrollment, \"WEBENROLL\" );\nElement_add(WebEnrollment, { name: \"URL\", required: true, order: 0, type: String, read: WebEnrollment.prototype.getUrl, write: WebEnrollment.prototype.setUrl });\n","/*\n * Copyright 2012 TheStash\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Aggregate_add } from \"../../../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../../../meta/Element_add\";\n\n\n/**\n * Other Enrollment option containing a text message directing users to some other method (such as a phone call)\n * @author Scott Priddy\n * @see \"Section 8.8 OFX Spec\"\n */\nexport class OtherEnrollment {\n\n  private message: string;\n\n  /**\n   * Message to consumer about what to do next (for example, a phone number),\n   * @return String\n   */\n  public getMessage(): string {\n    return this.message;\n  }\n\n  public setMessage(message: string): void {\n    this.message = message;\n  }\n}\n\nAggregate_add( OtherEnrollment, \"OTHERENROLL\" );\nElement_add(OtherEnrollment, { name: \"MESSAGE\", required: true, order: 0, type: String, read: OtherEnrollment.prototype.getMessage, write: OtherEnrollment.prototype.setMessage });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { VersionSpecificMessageSetInfo } from \"../VersionSpecificMessageSetInfo\";\nimport { ClientEnrollment } from \"./signup/ClientEnrollment\";\nimport { WebEnrollment } from \"./signup/WebEnrollment\";\nimport { OtherEnrollment } from \"./signup/OtherEnrollment\";\nimport { MessageSetType } from \"../../MessageSetType\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\nimport { Element_add } from \"../../../../meta/Element_add\";\n\n\n/**\n * Servers use the Signup Message Set Profile Information to define how enrollment should proceed.\n *\n * This aggregate should contain 1 Enrollment option among <CLIENTENROLL>, <WEBENROLL>, or <OTHERENROLL>.\n * todo: review how best to enforce this constraint\n *\n * @author Scott Priddy\n * @author Ryan Heaton\n * @see \"Section 8.8 OFX Spec\"\n */\nexport class SignupV1MessageSetInfo extends VersionSpecificMessageSetInfo {\n\n  private clientEnrollment: ClientEnrollment;\n  private webEnrollment: WebEnrollment;\n  private otherEnrollment: OtherEnrollment;\n  private supportsClientUserInfoChanges: boolean;\n  private supportsAvailableAccounts: boolean;\n  private supportsClientServiceActivationRequests: boolean;\n\n  public getMessageSetType(): MessageSetType {\n    return MessageSetType.signup;\n  }\n\n  public getClientEnrollment(): ClientEnrollment {\n    return this.clientEnrollment;\n  }\n\n  public setClientEnrollment(clientEnrollment: ClientEnrollment): void {\n    this.clientEnrollment = clientEnrollment;\n  }\n\n  public getWebEnrollment(): WebEnrollment {\n    return this.webEnrollment;\n  }\n\n  public setWebEnrollment(webEnrollment: WebEnrollment): void {\n    this.webEnrollment = webEnrollment;\n  }\n\n  public getOtherEnrollment(): OtherEnrollment {\n    return this.otherEnrollment;\n  }\n\n  public setOtherEnrollment(otherEnrollment: OtherEnrollment): void {\n    this.otherEnrollment = otherEnrollment;\n  }\n\n  /**\n   * Y if server supports client-based user information changes,\n   * @return Boolean\n   */\n  public getSupportsClientUserInfoChanges(): boolean {\n    return this.supportsClientUserInfoChanges;\n  }\n\n  public setSupportsClientUserInfoChanges(supportsClientUserInfoChanges: boolean): void {\n    this.supportsClientUserInfoChanges = supportsClientUserInfoChanges;\n  }\n\n  /**\n   * Y if server can provide information on accounts with SVCSTATUS available,\n   * N means client should expect to ask user for specific account information\n   * @return Boolean\n   */\n  public getSupportsAvailableAccounts(): boolean {\n    return this.supportsAvailableAccounts;\n  }\n\n  public setSupportsAvailableAccounts(supportsAvailableAccounts: boolean): void {\n    this.supportsAvailableAccounts = supportsAvailableAccounts;\n  }\n\n  /**\n   * Y if server allows clients to make service activation requests (<ACCTRQ>),\n   * N if server will only advise clients via synchronization of service additions,\n   * changes, or deletions.\n   * @return Boolean\n   */\n  public getSupportsClientServiceActivationRequests(): boolean {\n    return this.supportsClientServiceActivationRequests;\n  }\n\n  public setSupportsClientServiceActivationRequests(supportsClientServiceActivationRequests: boolean): void {\n    this.supportsClientServiceActivationRequests = supportsClientServiceActivationRequests;\n  }\n}\n\nAggregate_add( SignupV1MessageSetInfo, \"SIGNUPMSGSETV1\" );\nChildAggregate_add(SignupV1MessageSetInfo, { name: \"CLIENTENROLL\", order: 10, type: ClientEnrollment, read: SignupV1MessageSetInfo.prototype.getClientEnrollment, write: SignupV1MessageSetInfo.prototype.setClientEnrollment });\nChildAggregate_add(SignupV1MessageSetInfo, { name: \"WEBENROLL\", order: 20, type: WebEnrollment, read: SignupV1MessageSetInfo.prototype.getWebEnrollment, write: SignupV1MessageSetInfo.prototype.setWebEnrollment });\nChildAggregate_add(SignupV1MessageSetInfo, { name: \"OTHERENROLL\", order: 30, type: OtherEnrollment, read: SignupV1MessageSetInfo.prototype.getOtherEnrollment, write: SignupV1MessageSetInfo.prototype.setOtherEnrollment });\nElement_add(SignupV1MessageSetInfo, { name: \"CHGUSERINFO\", required: true, order: 40, type: Boolean, read: SignupV1MessageSetInfo.prototype.getSupportsClientUserInfoChanges, write: SignupV1MessageSetInfo.prototype.setSupportsClientUserInfoChanges });\nElement_add(SignupV1MessageSetInfo, { name: \"AVAILACCTS\", required: true, order: 50, type: Boolean, read: SignupV1MessageSetInfo.prototype.getSupportsAvailableAccounts, write: SignupV1MessageSetInfo.prototype.setSupportsAvailableAccounts });\nElement_add(SignupV1MessageSetInfo, { name: \"CLIENTACTREQ\", required: true, order: 60, type: Boolean, read: SignupV1MessageSetInfo.prototype.getSupportsClientServiceActivationRequests, write: SignupV1MessageSetInfo.prototype.setSupportsClientServiceActivationRequests });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { AbstractMessageSetInfo } from \"../AbstractMessageSetInfo\";\nimport { SignupV1MessageSetInfo } from \"./SignupV1MessageSetInfo\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class SignupMessageSetInfo extends AbstractMessageSetInfo {\n\n  private version1Info: SignupV1MessageSetInfo;\n\n  public getVersion1Info(): SignupV1MessageSetInfo {\n    return this.version1Info;\n  }\n\n  public setVersion1Info(version1Info: SignupV1MessageSetInfo): void {\n    this.version1Info = version1Info;\n  }\n}\n\nAggregate_add( SignupMessageSetInfo, \"SIGNUPMSGSET\" );\nChildAggregate_add(SignupMessageSetInfo, { order: 0, type: SignupV1MessageSetInfo, read: SignupMessageSetInfo.prototype.getVersion1Info, write: SignupMessageSetInfo.prototype.setVersion1Info });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { VersionSpecificMessageSetInfo } from \"../VersionSpecificMessageSetInfo\";\nimport { ProcessorDayOff } from \"../../common/ProcessorDayOff\";\nimport { MessageSetType } from \"../../MessageSetType\";\nimport { Element_add } from \"../../../../meta/Element_add\";\n\n\n/**\n * Wire Transfer Message Set Profile\n * @author Scott Priddy\n * @author Ryan Heaton\n * @see \"Section 11.13.5 OFX Spec\"\n */\nexport class WireTransferV1MessageSetInfo extends VersionSpecificMessageSetInfo {\n\n  private processorDaysOff: Array<ProcessorDayOff>;\n  private processEndTime: string;\n  private supportsScheduledTransfers: boolean;\n  private domesticWireTransferFee: number;\n  private internationalWireTransferFee: number;\n\n  public getMessageSetType(): MessageSetType {\n    return MessageSetType.wire_transfer;\n  }\n\n  public getProcessorDaysOff(): Array<ProcessorDayOff> {\n    return this.processorDaysOff;\n  }\n\n  public setProcessorDaysOff(processorDaysOff: Array<ProcessorDayOff>): void {\n    this.processorDaysOff = processorDaysOff;\n  }\n\n  public getProcessEndTime(): string {\n    return this.processEndTime;\n  }\n\n  public setProcessEndTime(processEndTime: string): void {\n    this.processEndTime = processEndTime;\n  }\n\n  public getSupportsScheduledTransfers(): boolean {\n    return this.supportsScheduledTransfers;\n  }\n\n  public setSupportsScheduledTransfers(supportsScheduledTransfers: boolean): void {\n    this.supportsScheduledTransfers = supportsScheduledTransfers;\n  }\n\n  public getDomesticWireTransferFee(): number {\n    return this.domesticWireTransferFee;\n  }\n\n  public setDomesticWireTransferFee(domesticWireTransferFee: number): void {\n    this.domesticWireTransferFee = domesticWireTransferFee;\n  }\n\n  public getInternationalWireTransferFee(): number {\n    return this.internationalWireTransferFee;\n  }\n\n  public setInternationalWireTransferFee(internationalWireTransferFee: number): void {\n    this.internationalWireTransferFee = internationalWireTransferFee;\n  }\n}\n\nAggregate_add( WireTransferV1MessageSetInfo, \"WIREXFERMSGSETV1\" );\nElement_add(WireTransferV1MessageSetInfo, { name: \"PROCDAYSOFF\", order: 10, type: Array, collectionEntryType: ProcessorDayOff, read: WireTransferV1MessageSetInfo.prototype.getProcessorDaysOff, write: WireTransferV1MessageSetInfo.prototype.setProcessorDaysOff });\nElement_add(WireTransferV1MessageSetInfo, { name: \"PROCENDTM\", required: true, order: 20, type: String, read: WireTransferV1MessageSetInfo.prototype.getProcessEndTime, write: WireTransferV1MessageSetInfo.prototype.setProcessEndTime });\nElement_add(WireTransferV1MessageSetInfo, { name: \"CANSCHED\", required: true, order: 30, type: Boolean, read: WireTransferV1MessageSetInfo.prototype.getSupportsScheduledTransfers, write: WireTransferV1MessageSetInfo.prototype.setSupportsScheduledTransfers });\nElement_add(WireTransferV1MessageSetInfo, { name: \"DOMXFERFEE\", required: true, order: 40, type: Number, read: WireTransferV1MessageSetInfo.prototype.getDomesticWireTransferFee, write: WireTransferV1MessageSetInfo.prototype.setDomesticWireTransferFee });\nElement_add(WireTransferV1MessageSetInfo, { name: \"INTLXFERFEE\", required: true, order: 50, type: Number, read: WireTransferV1MessageSetInfo.prototype.getInternationalWireTransferFee, write: WireTransferV1MessageSetInfo.prototype.setInternationalWireTransferFee });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { AbstractMessageSetInfo } from \"../AbstractMessageSetInfo\";\nimport { WireTransferV1MessageSetInfo } from \"./WireTransferV1MessageSetInfo\";\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class WireTransferMessageSetInfo extends AbstractMessageSetInfo {\n\n  private version1Info: WireTransferV1MessageSetInfo;\n\n  public getVersion1Info(): WireTransferV1MessageSetInfo {\n    return this.version1Info;\n  }\n\n  public setVersion1Info(version1Info: WireTransferV1MessageSetInfo): void {\n    this.version1Info = version1Info;\n  }\n}\n\nAggregate_add( WireTransferMessageSetInfo, \"WIREXFERMSGSET\" );\nChildAggregate_add(WireTransferMessageSetInfo, { order: 0, type: WireTransferV1MessageSetInfo, read: WireTransferMessageSetInfo.prototype.getVersion1Info, write: WireTransferMessageSetInfo.prototype.setVersion1Info });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /**\n * Asset class for debt.\n * @see \"Section 13.8.5.7, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum AssetClass {\n  /**\n   * Government or corporate bonds issued in the United States.\n   */\n  DOMESTIC_BOND,\n\n  /**\n   * Government or corporate bonds issued in foreign countries or the United States.\n   */\n  INTL_BOND,\n\n  /**\n   * Stocks for US companies with market caps of $2B or more.\n   */\n  LARGE_STOCK,\n\n  /**\n   * Stocks for US companies with market caps of ~$100M to $2B.\n   */\n  SMALL_STOCK,\n\n  /**\n   * Publicallt traded stocks for companies based in foreign countries.\n   */\n  INTL_STOCK,\n\n  /**\n   * Stable, short-term investments which provide income that rises and falls with short-term\n   * interest rates.\n   */\n  MONEY_MARKET,\n\n  /**\n   * Investments which do not fit into any of the other types.\n   */\n  OTHER\n}\n\nexport function AssetClass_fromOfx(ofxVal: string): AssetClass {\n  if (\"DOMESTICBOND\" === ofxVal) {\n    return AssetClass.DOMESTIC_BOND;\n  } else if (\"INTLBOND\" === ofxVal) {\n    return AssetClass.INTL_BOND;\n  } else if (\"LARGESTOCK\" === ofxVal) {\n    return AssetClass.LARGE_STOCK;\n  } else if (\"SMALLSTOCK\" === ofxVal) {\n    return AssetClass.SMALL_STOCK;\n  } else if (\"INTLSTOCK\" === ofxVal) {\n    return AssetClass.INTL_STOCK;\n  } else if (\"MONEYMARKET\" === ofxVal) {\n    return AssetClass.MONEY_MARKET;\n  } else if (\"OTHER\" === ofxVal) {\n    return AssetClass.OTHER;\n  } else {\n    return null;\n  }\n}\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SecurityId } from \"./SecurityId\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\nimport { Element_add } from \"../../../meta/Element_add\";\n\n\n/**\n * Info about a security.\n * @see \"Section 13.8.5.1, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class SecurityInfo {\n  private securityId: SecurityId;\n  private securityName: string;\n  private tickerSymbol: string;\n  private fiId: string;\n  private rating: string;\n  private unitPrice: number;\n  private marketValueDate: Date;\n  private currencyCode: string;\n  private memo: string;\n\n  /**\n   * Gets the unique security id for the security. This is a required field according to the OFX\n   * spec.\n   *\n   * @return the security id\n   */\n  public getSecurityId(): SecurityId {\n    return this.securityId;\n  }\n\n  /**\n   * Sets the unique security id for the security. This is a required field according to the OFX\n   * spec.\n   *\n   * @param securityId the security id\n   */\n  public setSecurityId(securityId: SecurityId): void {\n    this.securityId = securityId;\n  }\n\n  /**\n   * Gets the full name of the security. This is a required field according to the OFX spec.\n   *\n   * @return the full name of the security\n   */\n  public getSecurityName(): string {\n    return this.securityName;\n  }\n\n  /**\n   * Sets the full name of the security. This is a required field according to the OFX spec.\n   *\n   * @param securityName the full name of the security\n   */\n  public setSecurityName(securityName: string): void {\n    this.securityName = securityName;\n  }\n\n  /**\n   * Gets the ticker symbol for the security. This is an optional field according to the OFX spec.\n   *\n   * @return the ticket symbol or null if there's no ticker symbol\n   */\n  public getTickerSymbol(): string {\n    return this.tickerSymbol;\n  }\n\n  /**\n   * Sets the ticker symbol for the security. This is an optional field according to the OFX spec.\n   *\n   * @param tickerSymbol the ticket symbol or null if there's no ticker symbol\n   */\n  public setTickerSymbol(tickerSymbol: string): void {\n    this.tickerSymbol = tickerSymbol;\n  }\n\n  /**\n   * Gets the FI ID number for the security. This is an optional field according to the OFX spec.\n   *\n   * @return the FI ID number for the security\n   */\n  public getFiId(): string {\n    return this.fiId;\n  }\n\n  /**\n   * Sets the FI ID number for the security. This is an optional field according to the OFX spec.\n   *\n   * @param fiId the FI ID number for the security\n   */\n  public setFiId(fiId: string): void {\n    this.fiId = fiId;\n  }\n\n  /**\n   * Gets the rating of the security. This is an optional field according to the OFX spec.\n   *\n   * @return the rating\n   */\n  public getRating(): string {\n    return this.rating;\n  }\n\n  /**\n   * Sets the rating of the security. This is an optional field according to the OFX spec.\n   *\n   * @param rating the rating\n   */\n  public setRating(rating: string): void {\n    this.rating = rating;\n  }\n\n  /**\n   * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n   * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n   * per contact) price. This is a noptional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the per unit price\n   */\n  public getUnitPrice(): number {\n    return this.unitPrice;\n  }\n\n  /**\n   * Sets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n   * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n   * per contact) price. This is an optional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @param unitPrice the per unit price\n   */\n  public setUnitPrice(unitPrice: number): void {\n    this.unitPrice = unitPrice;\n  }\n\n  /**\n   * Gets the date as-of for the unit price. This is an optional field according to the OFX spec.\n   *\n   * @return the date as-of for the unit price\n   */\n  public getUnitPriceAsOfDate(): Date {\n    return this.marketValueDate;\n  }\n\n  /**\n   * Sets the date as-of for the unit price. This is an optional field according to the OFX spec.\n   *\n   * param marketValueDate the date as-of for the unit price\n   */\n  public setUnitPriceAsOfDate(marketValueDate: Date): void {\n    this.marketValueDate = marketValueDate;\n  }\n\n  /**\n   * Gets the overriding currency code for the security. If not set, implies the default currency.\n   * This is an optional field according to the OFX spec.\n   *\n   * @return the overriding currency code or null to mean the default currency\n   */\n  public getCurrencyCode(): string {\n    return this.currencyCode;\n  }\n\n  /**\n   * Sets the overriding currency code for the security. If not set, implies the default currency.\n   * This is an optional field according to the OFX spec.\n   *\n   * @param currencyCode the overriding currency code or null to mean the default currency\n   */\n  public setCurrencyCode(currencyCode: string): void {\n    this.currencyCode = currencyCode;\n  }\n\n  /**\n   * Gets any memo associated with the security. This is an optional field according to the OFX\n   * spec.\n   *\n   * @return the memo\n   */\n  public getMemo(): string {\n    return this.memo;\n  }\n\n  /**\n   * Sets any memo associated with the security. This is an optional field according to the OFX\n   * spec.\n   *\n   * @param memo the memo\n   */\n  public setMemo(memo: string): void {\n    this.memo = memo;\n  }\n}\n\nAggregate_add( SecurityInfo, \"SECINFO\" );\nChildAggregate_add(SecurityInfo, { required: true, order: 10, type: SecurityId, read: SecurityInfo.prototype.getSecurityId, write: SecurityInfo.prototype.setSecurityId });\nElement_add(SecurityInfo, { name: \"SECNAME\", required: true, order: 20, type: String, read: SecurityInfo.prototype.getSecurityName, write: SecurityInfo.prototype.setSecurityName });\nElement_add(SecurityInfo, { name: \"TICKER\", order: 30, type: String, read: SecurityInfo.prototype.getTickerSymbol, write: SecurityInfo.prototype.setTickerSymbol });\nElement_add(SecurityInfo, { name: \"FIID\", order: 40, type: String, read: SecurityInfo.prototype.getFiId, write: SecurityInfo.prototype.setFiId });\nElement_add(SecurityInfo, { name: \"RATING\", order: 50, type: String, read: SecurityInfo.prototype.getRating, write: SecurityInfo.prototype.setRating });\nElement_add(SecurityInfo, { name: \"UNITPRICE\", order: 60, type: Number, read: SecurityInfo.prototype.getUnitPrice, write: SecurityInfo.prototype.setUnitPrice });\nElement_add(SecurityInfo, { name: \"DTASOF\", order: 70, type: Date, read: SecurityInfo.prototype.getUnitPriceAsOfDate, write: SecurityInfo.prototype.setUnitPriceAsOfDate });\nElement_add(SecurityInfo, { name: \"CURRENCY\", order: 80, type: String, read: SecurityInfo.prototype.getCurrencyCode, write: SecurityInfo.prototype.setCurrencyCode });\nElement_add(SecurityInfo, { name: \"MEMO\", order: 90, type: String, read: SecurityInfo.prototype.getMemo, write: SecurityInfo.prototype.setMemo });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\nimport { SecurityInfo } from \"./SecurityInfo\";\nimport { SecurityId } from \"./SecurityId\";\n\n\n/**\n * Base class for info about the various types of securities.\n * @see \"Section 13.8.5.1, OFX Spec\"\n * <br>\n * This class exposes a read-only view of the flattened aggregates that are\n * common to all security info as a convenience to application\n * developers who may not find the ofx aggregation model intuitive.\n *\n * @author Jon Perlow\n */\nexport class BaseSecurityInfo {\n  private securityInfo: SecurityInfo;\n\n  /**\n   * Gets the security info aggregate.\n   *\n   * @return the security info aggregate.\n   */\n  public getSecurityInfo(): SecurityInfo {\n    return this.securityInfo;\n  }\n\n  /**\n   * Sets the security info aggregate.\n   *\n   * @param securityInfo the security info aggregate.\n   */\n  public setSecurityInfo(securityInfo: SecurityInfo): void {\n    this.securityInfo = securityInfo;\n  }\n\n  /**\n   * Gets the unique security id for the security. This is a required field according to the OFX\n   * spec.\n   *\n   * @return the security id\n   */\n  public getSecurityId(): SecurityId {\n    return this.getSecurityInfo().getSecurityId();\n  }\n\n  /**\n   * Gets the full name of the security. This is a required field according to the OFX spec.\n   *\n   * @return the full name of the security.\n   */\n  public getSecurityName(): string {\n    return this.getSecurityInfo().getSecurityName();\n  }\n\n  /**\n   * Gets the ticker symbol for the security. This is an optional field according to the OFX spec.\n   *\n   * @return the ticket symbol or null if there's no ticker symbol\n   */\n  public getTickerSymbol(): string {\n    return this.getSecurityInfo().getTickerSymbol();\n  }\n\n  /**\n   * Gets the FI ID number for the security. This is an optional field according to the OFX spec.\n   *\n   * @return the FI ID number for the security\n   */\n  public getFiId(): string {\n    return this.getSecurityInfo().getFiId();\n  }\n\n  /**\n   * Gets the rating of the security. This is an optional field according to the OFX spec.\n   *\n   * @return the rating\n   */\n  public getRating(): string {\n    return this.getSecurityInfo().getRating();\n  }\n\n  /**\n   * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\n   * share price. For bonds, this is the percentage of par. For options, this is the per share (not\n   * per contact) price. This is a noptional field according to the OFX spec.\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\n   *\n   * @return the per unit price\n   */\n  public getUnitPrice(): number {\n    return this.getSecurityInfo().getUnitPrice();\n  }\n\n  /**\n   * Gets the date as-of for the unit price. This is an optional field according to the OFX spec.\n   *\n   * @return the date as-of for the unit price\n   */\n  public getUnitPriceAsOfDate(): Date {\n    return this.getSecurityInfo().getUnitPriceAsOfDate();\n  }\n\n  /**\n   * Gets the overriding currency code for the security. If not set, implies the default currency.\n   * This is an optional field according to the OFX spec.\n   *\n   * @return the overriding currency code or null to mean the default currency\n   */\n  public getCurrencyCode(): string {\n    return this.getSecurityInfo().getCurrencyCode();\n  }\n\n  /**\n   * Gets any memo associated with the security. This is an optional field according to the OFX\n   * spec.\n   *\n   * @return the memo\n   */\n  public getMemo(): string {\n    return this.getSecurityInfo().getMemo();\n  }\n}\n\nChildAggregate_add(BaseSecurityInfo, { required: true, order: 10, type: SecurityInfo, read: BaseSecurityInfo.prototype.getSecurityInfo, write: BaseSecurityInfo.prototype.setSecurityInfo });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Call type for debt.\n * @see \"Section 13.8.5.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum CallType {\n  CALL,\n  PUT,\n  PREFUND,\n  MATURITY\n}\n\nexport function CallType_fromOfx(ofxVal: string): CallType {\n  if (\"CALL\" === ofxVal) {\n    return CallType.CALL;\n  } else if (\"PUT\" === ofxVal) {\n    return CallType.PUT;\n  } else if (\"PREFUND\" === ofxVal) {\n    return CallType.PREFUND;\n  } else if (\"MATURITY\" === ofxVal) {\n    return CallType.MATURITY;\n  } else {\n    return null;\n  }\n}\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Coupon freqency for debt.\n * @see \"Section 13.8.5.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum CouponFrequency {\n  MONTHLY,\n  QUARTERLY,\n  SEMIANNUAL,\n  ANNUAL,\n  OTHER\n}\n\nexport function CouponFrequency_fromOfx(ofxVal: string): CouponFrequency {\n  if (\"MONTHLY\" === ofxVal) {\n    return CouponFrequency.MONTHLY;\n  } else if (\"QUARTERLY\" === ofxVal) {\n    return CouponFrequency.QUARTERLY;\n  } else if (\"SEMIANNUAL\" === ofxVal) {\n    return CouponFrequency.SEMIANNUAL;\n  } else if (\"ANNUAL\" === ofxVal) {\n    return CouponFrequency.ANNUAL;\n  } else if (\"OTHER\" === ofxVal) {\n    return CouponFrequency.OTHER;\n  } else {\n    return null;\n  }\n}\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The class of debt.\n * @see \"Section 13.8.5.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum DebtClass {\n  TREASURY,\n  MUNICIPAL,\n  CORPORATE,\n  OTHER\n}\n\nexport function DebtClass_fromOfx(ofxVal: string): DebtClass {\n  if (\"TREASURY\" === ofxVal) {\n    return DebtClass.TREASURY;\n  } else if (\"MUNICIPAL\" === ofxVal) {\n    return DebtClass.MUNICIPAL;\n  } else if (\"CORPORATE\" === ofxVal) {\n    return DebtClass.CORPORATE;\n  } else if (\"OTHER\" === ofxVal) {\n    return DebtClass.OTHER;\n  } else {\n    return null;\n  }\n}\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The type of debt.\n * @see \"Section 13.8.5.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum DebtType {\n  COUPON,\n  ZERO\n}\n\nexport function DebtType_fromOfx(ofxVal: string): DebtType {\n  if (\"COUPON\" === ofxVal) {\n    return DebtType.COUPON;\n  } else if (\"ZERO\" === ofxVal) {\n    return DebtType.ZERO;\n  } else {\n    return null;\n  }\n}\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { BaseSecurityInfo } from \"./BaseSecurityInfo\";\nimport { DebtType, DebtType_fromOfx } from \"./DebtType\";\nimport { DebtClass, DebtClass_fromOfx } from \"./DebtClass\";\nimport { CouponFrequency, CouponFrequency_fromOfx } from \"./CouponFrequency\";\nimport { CallType, CallType_fromOfx } from \"./CallType\";\nimport { AssetClass, AssetClass_fromOfx } from \"./AssetClass\";\nimport { Element_add } from \"../../../meta/Element_add\";\n\n\n/**\n * Info about a debt security.\n * @see \"Section 13.8.5.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class DebtSecurityInfo extends BaseSecurityInfo {\n\n  private parValue: number;\n  private debtType: string;\n  private debtClass: string;\n  private couponRate: number;\n  private nextMaturityDate: Date;\n  private couponFrequency: string;\n  private callPrice: number;\n  private yieldToCall: number;\n  private nextCallDate: Date;\n  private callType: string;\n  private yieldToMaturity: number;\n  private debtMaturityDate: Date;\n  private assetClass: string;\n  private fiAssetClass: string;\n\n  /**\n   * Gets the par value of the debt. This is a required field according to the OFX spec.\n   *\n   * @return the par value of the debt\n   */\n  public getParValue(): number {\n    return this.parValue;\n  }\n\n  /**\n   * Sets the par value of the debt. This is a required field according to the OFX spec.\n   *\n   * @param parValue the par value of the debt\n   */\n  public setParValue(parValue: number): void {\n    this.parValue = parValue;\n  }\n\n  /**\n   * Gets the type of debt. One of \"COUPON\" or \"ZERO\". This is a required field according to the\n   * OFX spec.\n   *\n   * @return the type of debt\n   */\n  public getDebtType(): string {\n    return this.debtType;\n  }\n\n  /**\n   * Sets the type of debt. One of \"COUPON\" or \"ZERO\". This is a required field according to the\n   * OFX spec.\n   *\n   * @param debtType the type of debt\n   */\n  public setDebtType(debtType: string): void {\n    this.debtType = debtType;\n  }\n\n  /**\n   * Gets the type of debt as one of the well-known types.\n   *\n   * @return the type of debt or null if it's not one of the well-known types\n   */\n  public getDebtTypeEnum(): DebtType {\n    return DebtType_fromOfx(this.getDebtType());\n  }\n\n  /**\n   * Gets the class of debt. One of \"TREASURY\", \"MUNICIPAL\", \"CORPORATE\", or \"OTHER\".\n   * This is an optional field according to the OFX spec.\n   *\n   * @return the class of debt\n   */\n  public getDebtClass(): string {\n    return this.debtClass;\n  }\n\n  /**\n   * Sets the class of debt. One of \"TREASURY\", \"MUNICIPAL\", \"CORPORATE\", or \"OTHER\".\n   * This is an optional field according to the OFX spec.\n   *\n   * @param debtClass the class of debt\n   */\n  public setDebtClass(debtClass: string): void {\n    this.debtClass = debtClass;\n  }\n\n  /**\n   * Gets the class of debt as one of the well-known types.\n   *\n   * @return the class of debt or null if it's not one of the well-known types\n   */\n  public getDebtClassEnum(): DebtClass {\n    return DebtClass_fromOfx(this.debtClass);\n  }\n\n  /**\n   * Gets the coupon rate of the debt for the next closest call date.\n   * This is an optional field according to the OFX spec.\n   *\n   * @return the coupon rate\n   */\n  public getCouponRate(): number {\n    return this.couponRate;\n  }\n\n  /**\n   * Sets the coupon rate of the debt for the next closest call date.\n   * This is an optional field according to the OFX spec.\n   *\n   * @param couponRate the coupon rate\n   */\n  public setCouponRate(couponRate: number): void {\n    this.couponRate = couponRate;\n  }\n\n  /**\n   * Gets the next maturity date for the next coupon.\n   * This is an optional field according to the OFX spec.\n   *\n   * @return the maturity date for the next coupon\n   */\n  public getNextMaturityDate(): Date {\n    return this.nextMaturityDate;\n  }\n\n  /**\n   * Sets the next maturity date for the next coupon.\n   * This is an optional field according to the OFX spec.\n   *\n   * @param nextMaturityDate the maturity date for the next coupon.\n   */\n  public setNextMaturityDate(nextMaturityDate: Date): void {\n    this.nextMaturityDate = nextMaturityDate;\n  }\n\n  /**\n   * Gets the coupon frequency. One of \"MONTHLY\", \"QUARTERLY\", \"SEMIANNUAL\", \"ANNUAL\", or \"OTHER\".\n   * This is an optional field according to the OFX spec.\n   *\n   * @return the coupon frequency\n   */\n  public getCouponFrequency(): string {\n    return this.couponFrequency;\n  }\n\n  /**\n   * Sets the coupon frequency. One of \"MONTHLY\", \"QUARTERLY\", \"SEMIANNUAL\", \"ANNUAL\", or \"OTHER\".\n   * This is an optional field according to the OFX spec.\n   *\n   * @param couponFrequency the coupon frequency\n   */\n  public setCouponFrequency(couponFrequency: string): void {\n    this.couponFrequency = couponFrequency;\n  }\n\n  /**\n   * Gets the coupon frequency as one of the well-known types.\n   *\n   * @return the coupon frequency or null if it's not one of the well-known types\n   */\n  public getCouponFrequencyEnum(): CouponFrequency {\n    return CouponFrequency_fromOfx(this.getCouponFrequency());\n  }\n\n  /**\n   * Gets the bond price. This is an optional field according to the OFX spec.\n   *\n   * @return the bond price\n   */\n  public getCallPrice(): number {\n    return this.callPrice;\n  }\n\n  /**\n   * Sets the bond price. This is an optional field according to the OFX spec.\n   *\n   * @param callPrice the bond price\n   */\n  public setCallPrice(callPrice: number): void {\n    this.callPrice = callPrice;\n  }\n\n  /**\n   * Gets the yield to call as a rate. This is an optional field according to the OFX spec.\n   *\n   * @return the yield to call rate\n   */\n  public getYieldToCall(): number {\n    return this.yieldToCall;\n  }\n\n  /**\n   * Sets the yield to call as a rate. This is an optional field according to the OFX spec.\n   *\n   * @param yieldToCall the yield to call rate\n   */\n  public setYieldToCall(yieldToCall: number): void {\n    this.yieldToCall = yieldToCall;\n  }\n\n  /**\n   * Gets the next call date. This is an optional field according to the OFX spec.\n   *\n   * @return the next call date.\n   */\n  public getNextCallDate(): Date {\n    return this.nextCallDate;\n  }\n\n  /**\n   * Sets the next call date. This is an optional field according to the OFX spec.\n   *\n   * @param nextCallDate the next call date.\n   */\n  public setNextCallDate(nextCallDate: Date): void {\n    this.nextCallDate = nextCallDate;\n  }\n\n  /**\n   * Gets the type of call.\n   *\n   * @return the type of call\n   */\n  public getCallType(): string {\n    return this.callType;\n  }\n\n  /**\n   * Sets the type of call.\n   *\n   * @param callType the type of call\n   */\n  public setCallType(callType: string): void {\n    this.callType = callType;\n  }\n\n  /**\n   * Gets the type of call as one of the well-known types.\n   *\n   * @return the type of call or null if it's not one of the well-known types\n   */\n  public getCallTypeEnum(): CallType {\n    return CallType_fromOfx(this.getCallType());\n  }\n\n  /**\n   * Gets the yield to maturity as a rate. This is an optional field according to the OFX spec.\n   *\n   * @return the yield to call rate\n   */\n  public getYieldToMaturity(): number {\n    return this.yieldToMaturity;\n  }\n\n  /**\n   * Sets the yield to maturity as a rate. This is an optional field according to the OFX spec.\n   *\n   * @param yieldToMaturity the yield to call rate\n   */\n  public setYieldToMaturity(yieldToMaturity: number): void {\n    this.yieldToMaturity = yieldToMaturity;\n  }\n\n  /**\n   * Gets the date when the debt matures. This is an optional field according to the OFX spec.\n   *\n   * @return the date when the debt matures\n   */\n  public getDebtMaturityDate(): Date {\n    return this.debtMaturityDate;\n  }\n\n  /**\n   * Sets the date when the debt matures. This is an optional field according to the OFX spec.\n   *\n   * @param debtMaturityDate the date when the debt matures\n   */\n  public setDebtMaturityDate(debtMaturityDate: Date): void {\n    this.debtMaturityDate = debtMaturityDate;\n  }\n\n  /**\n   * Gets the asset class of the debt. This is an optional field according to the OFX spec.\n   *\n   * @return the asset class of the debt\n   */\n  public getAssetClass(): string {\n    return this.assetClass;\n  }\n\n  /**\n   * Sets the asset class of the debt. This is an optional field according to the OFX spec.\n   *\n   * @param assetClass the asset class of the debt\n   */\n  public setAssetClass(assetClass: string): void {\n    this.assetClass = assetClass;\n  }\n\n  /**\n   * Gets the assert class as one of the well-known types.\n   *\n   * @return the asset class or null if it's not one of the well-known types\n   */\n  public getAssetClassEnum(): AssetClass {\n    return AssetClass_fromOfx(this.getAssetClass());\n  }\n\n  /**\n   * Gets the FI-defined asset class of the debt. This is an optional field according to the OFX\n   * spec.\n   *\n   * @return the FI-defined asset class of the debt\n   */\n  public getFiAssetClass(): string {\n    return this.fiAssetClass;\n  }\n\n  /**\n   * Sets the FI-defined asset class of the debt. This is an optional field according to the OFX\n   * spec.\n   *\n   * @param fiAssetClass the FI-defined asset class of the debt\n   */\n  public setFiAssetClass(fiAssetClass: string): void {\n    this.fiAssetClass = fiAssetClass;\n  }\n}\n\nAggregate_add( DebtSecurityInfo, \"DEBTINFO\" );\nElement_add(DebtSecurityInfo, { name: \"PARVALUE\", required:true, order: 20, type: Number, read: DebtSecurityInfo.prototype.getParValue, write: DebtSecurityInfo.prototype.setParValue });\nElement_add(DebtSecurityInfo, { name: \"DEBTTYPE\", required:true, order: 30, type: String, read: DebtSecurityInfo.prototype.getDebtType, write: DebtSecurityInfo.prototype.setDebtType });\nElement_add(DebtSecurityInfo, { name: \"DEBTCLASS\", order: 40, type: String, read: DebtSecurityInfo.prototype.getDebtClass, write: DebtSecurityInfo.prototype.setDebtClass });\nElement_add(DebtSecurityInfo, { name: \"COUPONRT\", order: 50, type: Number, read: DebtSecurityInfo.prototype.getCouponRate, write: DebtSecurityInfo.prototype.setCouponRate });\nElement_add(DebtSecurityInfo, { name: \"DTCOUPON\", order: 60, type: Date, read: DebtSecurityInfo.prototype.getNextMaturityDate, write: DebtSecurityInfo.prototype.setNextMaturityDate });\nElement_add(DebtSecurityInfo, { name: \"COUPONFREQ\", order: 70, type: String, read: DebtSecurityInfo.prototype.getCouponFrequency, write: DebtSecurityInfo.prototype.setCouponFrequency });\nElement_add(DebtSecurityInfo, { name: \"CALLPRICE\", order: 80, type: Number, read: DebtSecurityInfo.prototype.getCallPrice, write: DebtSecurityInfo.prototype.setCallPrice });\nElement_add(DebtSecurityInfo, { name: \"YIELDTOCALL\", order: 90, type: Number, read: DebtSecurityInfo.prototype.getYieldToCall, write: DebtSecurityInfo.prototype.setYieldToCall });\nElement_add(DebtSecurityInfo, { name: \"DTCALL\", order: 100, type: Date, read: DebtSecurityInfo.prototype.getNextCallDate, write: DebtSecurityInfo.prototype.setNextCallDate });\nElement_add(DebtSecurityInfo, { name: \"CALLTYPE\", order: 110, type: String, read: DebtSecurityInfo.prototype.getCallType, write: DebtSecurityInfo.prototype.setCallType });\nElement_add(DebtSecurityInfo, { name: \"YIELDTOMAT\", order: 120, type: Number, read: DebtSecurityInfo.prototype.getYieldToMaturity, write: DebtSecurityInfo.prototype.setYieldToMaturity });\nElement_add(DebtSecurityInfo, { name: \"DTMAT\", order: 130, type: Date, read: DebtSecurityInfo.prototype.getDebtMaturityDate, write: DebtSecurityInfo.prototype.setDebtMaturityDate });\nElement_add(DebtSecurityInfo, { name: \"ASSETCLASS\", order: 140, type: String, read: DebtSecurityInfo.prototype.getAssetClass, write: DebtSecurityInfo.prototype.setAssetClass });\nElement_add(DebtSecurityInfo, { name: \"FIASSETCLASS\", order: 150, type: String, read: DebtSecurityInfo.prototype.getFiAssetClass, write: DebtSecurityInfo.prototype.setFiAssetClass });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The type of mutual fund.\n * @see \"Section 13.8.5.2, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum MutualFundType {\n  OPEN_END,\n  CLOSE_END,\n  OTHER\n}\n\nexport function MutualFundType_fromOfx(ofxVal: string): MutualFundType {\n  if (\"OPENEND\" === ofxVal) {\n    return MutualFundType.OPEN_END;\n  } else if (\"CLOSEEND\" === ofxVal) {\n    return MutualFundType.CLOSE_END;\n  } else if (\"OTHER\" === ofxVal) {\n    return MutualFundType.OTHER;\n  } else {\n    return null;\n  }\n}\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { BaseSecurityInfo } from \"./BaseSecurityInfo\";\nimport { MutualFundType, MutualFundType_fromOfx } from \"./MutualFundType\";\nimport { Element_add } from \"../../../meta/Element_add\";\n\n\n/**\n * Info about a mutual fund security.\n * @see \"Section 13.8.5.3, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class MutualFundSecurityInfo extends BaseSecurityInfo {\n  private mfType: string;\n  private yield: number;\n  private dateYieldAsOf: Date;\n\n  /**\n   * Gets the mutual fund type. One of \"OPENEND\", \"CLOSEEND\", or \"OTHER\". This is an optional field\n   * according to the OFX spec.\n   *\n   * @return the mutual fund type\n   */\n  public getType(): string {\n    return this.mfType;\n  }\n\n  /**\n   * Sets the mutual fund type. One of \"OPENEND\", \"CLOSEEND\", or \"OTHER\". This is an optional field\n   * according to the OFX spec.\n   *\n   * @param mfType the mutual fund type\n   */\n  public setType(mfType: string): void {\n    this.mfType = mfType;\n  }\n\n  /**\n   * Gets the mutual fund type as one of the well-known types.\n   *\n   * @return the mutual fund type or null if it's not one of the well-known types\n   */\n  public getTypeEnum(): MutualFundType {\n    return MutualFundType_fromOfx(this.getType());\n  }\n\n  /**\n   * Gets the yield as a rate. This is an optional field according to the OFX spec.\n   *\n   * @return the yield as a rate\n   */\n  public getYield(): number {\n    return this.yield;\n  }\n\n  /**\n   * Sets the yield as a rate. This is an optional field according to the OFX spec.\n   *\n   * @param yield the yield as a rate\n   */\n  public setYield(yield_: number): void {\n    this.yield = yield_;\n  }\n\n  /**\n   * Gets the as-of date for the yield. This is an optional field according to the OFX spec.\n   *\n   * @return the as-of date for the yield\n   */\n  public getDateYieldAsOf(): Date {\n    return this.dateYieldAsOf;\n  }\n\n  /**\n   * Sets the as-of date for the yield. This is an optional field according to the OFX spec.\n   *\n   * @param dateYieldAsOf the as-of date for the yield\n   */\n  public setDateYieldAsOf(dateYieldAsOf: Date): void {\n    this.dateYieldAsOf = dateYieldAsOf;\n  }\n\n  // TODO(jonp) -- MFASSERTCLASS and FIMFASSERTCLASS child aggregates\n}\n\nAggregate_add( MutualFundSecurityInfo, \"MFINFO\" );\nElement_add(MutualFundSecurityInfo, { name: \"MFTYPE\", order: 20, type: String, read: MutualFundSecurityInfo.prototype.getType, write: MutualFundSecurityInfo.prototype.setType });\nElement_add(MutualFundSecurityInfo, { name: \"YIELD\", order: 30, type: Number, read: MutualFundSecurityInfo.prototype.getYield, write: MutualFundSecurityInfo.prototype.setYield });\nElement_add(MutualFundSecurityInfo, { name: \"DTYIELDASOF\", order: 40, type: Date, read: MutualFundSecurityInfo.prototype.getDateYieldAsOf, write: MutualFundSecurityInfo.prototype.setDateYieldAsOf });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Type of option.\n * @see \"Section 13.8.5.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum OptionType {\n  PUT,\n  CALL\n}\n\n\nexport function OptionType_fromOfx(ofxVal: string): OptionType {\n  if (\"PUT\" === ofxVal) {\n    return OptionType.PUT;\n  } else if (\"CALL\" === ofxVal) {\n    return OptionType.CALL;\n  } else {\n    return null;\n  }\n}\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { BaseSecurityInfo } from \"./BaseSecurityInfo\";\nimport { SecurityId } from \"./SecurityId\";\nimport { OptionType, OptionType_fromOfx } from \"./OptionType\";\nimport { AssetClass, AssetClass_fromOfx } from \"./AssetClass\";\nimport { Element_add } from \"../../../meta/Element_add\";\n\n\n/**\n * Info about an option security.\n * @see \"Section 13.8.5.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class OptionSecurityInfo extends BaseSecurityInfo {\n\n  private optionType: string;\n  private strikePrice: number;\n  private expirationDate: Date;\n  private sharesPerContact: number;\n  private underlyingSecurity: SecurityId;\n  private assetClass: string;\n  private fiAssetClass: string;\n\n  /**\n   * Gets the type of option. One of \"PUT\" or \"CALL\". This is a required field according to the\n   * OFX spec.\n   *\n   * @return the option type\n   */\n  public getOptionType(): string {\n    return this.optionType;\n  }\n\n  /**\n   * Sets the type of option. One of \"PUT\" or \"CALL\". This is a required field according to the\n   * OFX spec.\n   *\n   * @param optionType the option type\n   */\n  public setOptionType(optionType: string): void {\n    this.optionType = optionType;\n  }\n\n  /**\n   * Gets the option type as a well-known enum value.\n   *\n   * @return the option type or null if it's not one of the well-known types\n   */\n  public getOptionTypeEnum(): OptionType {\n    return OptionType_fromOfx(this.getOptionType());\n  }\n\n  /**\n   * Gets the strike price of the option. This is a required field according to the OFX spec.\n   *\n   * @return the option strike price\n   */\n  public getStrikePrice(): number {\n    return this.strikePrice;\n  }\n\n  /**\n   * Sets the strike price of the option. This is a required field according to the OFX spec.\n   *\n   * @param strikePrice the option strike price\n   */\n  public setStrikePrice(strikePrice: number): void {\n    this.strikePrice = strikePrice;\n  }\n\n  /**\n   * Gets the expiration date of the option. This is a required field according to the OFX spec.\n   *\n   * @return the expiration date of the option\n   */\n  public getExpirationDate(): Date {\n    return this.expirationDate;\n  }\n\n  /**\n   * Sets the expiration date of the option. This is a required field according to the OFX spec.\n   *\n   * @param expirationDate the expiration date of the option\n   */\n  public setExpirationDate(expirationDate: Date): void {\n    this.expirationDate = expirationDate;\n  }\n\n  /**\n   * Gets the number of shares per option contact. This is a required field according to the OFX\n   * spec.\n   *\n   * @return the number of shares per option contact\n   */\n  public getSharesPerContact(): number {\n    return this.sharesPerContact;\n  }\n\n  /**\n   * Sets the number of shares per option contact. This is a required field according to the OFX\n   * spec.\n   *\n   * @param sharesPerContact the number of shares per option contact\n   */\n  public setSharesPerContact(sharesPerContact: number): void {\n    this.sharesPerContact = sharesPerContact;\n  }\n\n  /**\n   * Gets the security id of the underling security. This is an optional field according to the OFX\n   * spec.\n   *\n   * @return the security id of the underlying security\n   */\n  public getUnderlyingSecurity(): SecurityId {\n    return this.underlyingSecurity;\n  }\n\n  /**\n   * Sets the security id of the underling security. This is an optional field according to the OFX\n   * spec.\n   *\n   * @param underlyingSecurity the security id of the underlying security\n   */\n  public setUnderlyingSecurity(underlyingSecurity: SecurityId): void {\n    this.underlyingSecurity = underlyingSecurity;\n  }\n\n  /**\n   * Gets the asset class of the option. This is an optional field according to the OFX spec.\n   *\n   * @return the asset class of the option\n   */\n  public getAssetClass(): string {\n    return this.assetClass;\n  }\n\n  /**\n   * Sets the asset class of the option. This is an optional field according to the OFX spec.\n   *\n   * @param assetClass the asset class of the option\n   */\n  public setAssetClass(assetClass: string): void {\n    this.assetClass = assetClass;\n  }\n\n  /**\n   * Gets the assert class as one of the well-known types.\n   *\n   * @return the asset class or null if it's not one of the well-known types\n   */\n  public getAssetClassEnum(): AssetClass {\n    return AssetClass_fromOfx(this.getAssetClass());\n  }\n\n  /**\n   * Gets the FI-defined asset class of the option. This is an optional field according to the OFX\n   * spec.\n   *\n   * @return the FI-defined asset class of the option\n   */\n  public getFiAssetClass(): string {\n    return this.fiAssetClass;\n  }\n\n  /**\n   * Sets the FI-defined asset class of the option. This is an optional field according to the OFX\n   * spec.\n   *\n   * @param fiAssetClass the FI-defined asset class of the option\n   */\n  public setFiAssetClass(fiAssetClass: string): void {\n    this.fiAssetClass = fiAssetClass;\n  }\n}\n\nAggregate_add( OptionSecurityInfo, \"OPTINFO\" );\nElement_add(OptionSecurityInfo, { name: \"OPTTYPE\", order: 20, type: String, read: OptionSecurityInfo.prototype.getOptionType, write: OptionSecurityInfo.prototype.setOptionType });\nElement_add(OptionSecurityInfo, { name: \"STRIKEPRICE\", order: 30, type: Number, read: OptionSecurityInfo.prototype.getStrikePrice, write: OptionSecurityInfo.prototype.setStrikePrice });\nElement_add(OptionSecurityInfo, { name: \"DTEXPIRE\", order: 40, type: Date, read: OptionSecurityInfo.prototype.getExpirationDate, write: OptionSecurityInfo.prototype.setExpirationDate });\nElement_add(OptionSecurityInfo, { name: \"SHPERCTRCT\", order: 50, type: Number, read: OptionSecurityInfo.prototype.getSharesPerContact, write: OptionSecurityInfo.prototype.setSharesPerContact });\nElement_add(OptionSecurityInfo, { name: \"SECID\", order: 60, type: SecurityId, read: OptionSecurityInfo.prototype.getUnderlyingSecurity, write: OptionSecurityInfo.prototype.setUnderlyingSecurity });\nElement_add(OptionSecurityInfo, { name: \"ASSETCLASS\", order: 70, type: String, read: OptionSecurityInfo.prototype.getAssetClass, write: OptionSecurityInfo.prototype.setAssetClass });\nElement_add(OptionSecurityInfo, { name: \"FIASSETCLASS\", order: 80, type: String, read: OptionSecurityInfo.prototype.getFiAssetClass, write: OptionSecurityInfo.prototype.setFiAssetClass });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { AssetClass_fromOfx, AssetClass } from \"./AssetClass\";\nimport { BaseSecurityInfo } from \"./BaseSecurityInfo\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../meta/Element_add\";\n\n\n/**\n * Info about any other type of security.\n * @see \"Section 13.8.5.5, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class OtherSecurityInfo extends BaseSecurityInfo {\n\n  private typeDesc: string;\n  private assetClass: string;\n  private fiAssetClass: string;\n\n  /**\n   * Gets a description of the type of security. This is an optional field according to the OFX\n   * spec.\n   *\n   * @return the description of the security\n   */\n  public getTypeDesc(): string {\n    return this.typeDesc;\n  }\n\n  /**\n   * Sets a description of the type of security. This is an optional field according to the OFX\n   * spec.\n   *\n   * @param typeDesc the description of the security\n   */\n  public setTypeDesc(typeDesc: string): void {\n    this.typeDesc = typeDesc;\n  }\n\n  /**\n   * Gets the asset class of the option. This is an optional field according to the OFX spec.\n   *\n   * @return the asset class of the debt\n   */\n  public getAssetClass(): string {\n    return this.assetClass;\n  }\n\n  /**\n   * Sets the asset class of the debt. This is an optional field according to the OFX spec.\n   *\n   * @param assetClass the asset class of the debt\n   */\n  public setAssetClass(assetClass: string): void {\n    this.assetClass = assetClass;\n  }\n\n  /**\n   * Gets the assert class as one of the well-known types.\n   *\n   * @return the asset class or null if it's not one of the well-known types\n   */\n  public getAssetClassEnum(): AssetClass {\n    return AssetClass_fromOfx(this.getAssetClass());\n  }\n\n  /**\n   * Gets the FI-defined asset class of the debt. This is an optional field according to the OFX\n   * spec.\n   *\n   * @return the FI-defined asset class of the debt\n   */\n  public getFiAssetClass(): string {\n    return this.fiAssetClass;\n  }\n\n  /**\n   * Sets the FI-defined asset class of the debt. This is an optional field according to the OFX\n   * spec.\n   *\n   * @param fiAssetClass the FI-defined asset class of the debt\n   */\n  public setFiAssetClass(fiAssetClass: string): void {\n    this.fiAssetClass = fiAssetClass;\n  }\n}\n\nAggregate_add( OtherSecurityInfo, \"OTHERINFO\" );\nElement_add(OtherSecurityInfo, { name: \"TYPEDESC\", order: 20, type: String, read: OtherSecurityInfo.prototype.getTypeDesc, write: OtherSecurityInfo.prototype.setTypeDesc });\nElement_add(OtherSecurityInfo, { name: \"ASSETCLASS\", order: 30, type: String, read: OtherSecurityInfo.prototype.getAssetClass, write: OtherSecurityInfo.prototype.setAssetClass });\nElement_add(OtherSecurityInfo, { name: \"FIASSETCLASS\", order: 40, type: String, read: OtherSecurityInfo.prototype.getFiAssetClass, write: OtherSecurityInfo.prototype.setFiAssetClass });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { BaseSecurityInfo } from \"./BaseSecurityInfo\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\n/**\n * Aggregate for a list of securities.\n * @see \"Section 13.8.4, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class SecurityList {\n  private securityInfos: Array<BaseSecurityInfo>;\n\n  public getSecurityInfos(): Array<BaseSecurityInfo> {\n    return this.securityInfos;\n  }\n\n  public setSecurityInfos(securityInfos: Array<BaseSecurityInfo>): void {\n    this.securityInfos = securityInfos;\n  }\n}\n\nAggregate_add( SecurityList, \"SECLIST\" );\nChildAggregate_add(SecurityList, { order: 10, type: Array, collectionEntryType: BaseSecurityInfo, read: SecurityList.prototype.getSecurityInfos, write: SecurityList.prototype.setSecurityInfos });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ResponseMessage } from \"../ResponseMessage\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\n\n\n/**\n * Security list response. This is an empty aggregate. The actual security information is included\n * in the \"SECLIST\" aggregate.\n * @see \"Section 13.8.3, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class SecurityListResponse extends ResponseMessage {\n  public getResponseMessageName(): string {\n    return \"security list\";\n  }\n}\n\nAggregate_add( SecurityListResponse, \"SECLISTRS\" );\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TransactionWrappedResponseMessage } from \"../TransactionWrappedResponseMessage\";\nimport { SecurityListResponse } from \"./SecurityListResponse\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\n/**\n * Security list transaction response.\n * @see \"Section 13.8.3.1, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class SecurityListResponseTransaction\n    extends TransactionWrappedResponseMessage<SecurityListResponse> {\n\n  private message: SecurityListResponse;\n\n  /**\n   * The message.\n   *\n   * @return The message.\n   */\n  public getMessage(): SecurityListResponse {\n    return this.message;\n  }\n\n  /**\n   * The message.\n   *\n   * @param message The message.\n   */\n  public setMessage(message: SecurityListResponse): void {\n    this.message = message;\n  }\n\n  // Inherited.\n  public getWrappedMessage(): SecurityListResponse {\n    return this.getMessage();\n  }\n}\n\nAggregate_add( SecurityListResponseTransaction, \"SECLISTTRNRS\");\nChildAggregate_add(SecurityListResponseTransaction, { required: true, order: 30, type: SecurityListResponse, read: SecurityListResponseTransaction.prototype.getMessage, write: SecurityListResponseTransaction.prototype.setMessage });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ResponseMessageSet } from \"../ResponseMessageSet\";\nimport { SecurityListResponseTransaction } from \"./SecurityListResponseTransaction\";\nimport { SecurityList } from \"./SecurityList\";\nimport { MessageSetType } from \"../MessageSetType\";\nimport { ResponseMessage } from \"../ResponseMessage\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\n/**\n * @author Jon Perlow\n */\nexport class SecurityListResponseMessageSet extends ResponseMessageSet {\n\n  private securityListResponse: SecurityListResponseTransaction;\n  private securityList: SecurityList;\n\n  public getType(): MessageSetType {\n    return MessageSetType.investment_security;\n  }\n\n  /**\n   * The security list response list transaction.\n   *\n   * Most OFX files have a single security response.\n   *\n   * @return The security list response list.\n   */\n  public getSecurityListResponse(): SecurityListResponseTransaction {\n    return this.securityListResponse;\n  }\n\n  /**\n   * The security list response.\n   *\n   * @param securityListResponse The security list response.\n   */\n  public setSecurityListResponse(securityListResponse: SecurityListResponseTransaction) {\n    this.securityListResponse = securityListResponse;\n  }\n\n  public getSecurityList(): SecurityList {\n    return this.securityList;\n  }\n\n  public setSecurityList(securityList: SecurityList): void {\n    this.securityList = securityList;\n  }\n\n  // Inherited.\n  public getResponseMessages(): Array<ResponseMessage> {\n    var ret: Array<ResponseMessage> = new Array<ResponseMessage>();\n    ret.push(this.securityListResponse);\n    return ret;\n  }\n}\n\nAggregate_add( SecurityListResponseMessageSet, \"SECLISTMSGSRSV1\" );\nChildAggregate_add(SecurityListResponseMessageSet, { order: 0, type: SecurityListResponseTransaction, read: SecurityListResponseMessageSet.prototype.getSecurityListResponse, write: SecurityListResponseMessageSet.prototype.setSecurityListResponse });\nChildAggregate_add(SecurityListResponseMessageSet, { order: 10, type: SecurityList, read: SecurityListResponseMessageSet.prototype.getSecurityList, write: SecurityListResponseMessageSet.prototype.setSecurityList });\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The type of debt.\n * @see \"Section 13.8.5.6, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport enum StockType {\n  COMMON,\n  PREFERRED,\n  CONVERTIBLE,\n  OTHER\n}\n\nexport function StockType_fromOfx(ofxVal: string): StockType {\n  if (\"COMMON\" === ofxVal) {\n    return StockType.COMMON;\n  } else if (\"PREFERRED\" === ofxVal) {\n    return StockType.PREFERRED;\n  } else if (\"CONVERTIBLE\" === ofxVal) {\n    return StockType.CONVERTIBLE;\n  } else if (\"OTHER\" === ofxVal) {\n    return StockType.OTHER;\n  } else {\n    return null;\n  }\n}\n","/*\n * Copyright 2010 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { BaseSecurityInfo } from \"./BaseSecurityInfo\";\nimport { StockType, StockType_fromOfx } from \"./StockType\";\nimport { AssetClass, AssetClass_fromOfx } from \"./AssetClass\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../meta/Element_add\";\n\n/**\n * Info about a stock security.\n * @see \"Section 13.8.5.6, OFX Spec\"\n *\n * @author Jon Perlow\n */\nexport class StockSecurityInfo extends BaseSecurityInfo {\n\n  private stockType: string;\n  private yield: number;\n  private dateYieldAsOf: Date;\n  private assetClass: string;\n  private fiAssetClass: string;\n\n  /**\n   * Gets the type of stock. One of \"COMMON\", \"PREFERRED\", \"CONVERTIBLE\", or \"OTHER\". This is an\n   * optional field according to the OFX spec.\n   *\n   * @return the type of stock\n   */\n  public getType(): string {\n    return this.stockType;\n  }\n\n  /**\n   * Sets the type of stock. One of \"COMMON\", \"PREFERRED\", \"CONVERTIBLE\", or \"OTHER\". This is an\n   * optional field according to the OFX spec.\n   *\n   * @param stockType the type of stock\n   */\n  public setType(stockType: string): void {\n    this.stockType = stockType;\n  }\n\n  /**\n   * Gets the type of stock as one of the well-known types.\n   *\n   * @return the type of stock or null if it's not one of the well-known types\n   */\n  public getTypeEnum(): StockType {\n    return StockType_fromOfx(this.getType());\n  }\n\n  /**\n   * Gets the current yield reported as the dividend expressed as a portion of the current stock\n   * price, a rate. This is an optional field according to the OFX spec.\n   *\n   * @return the dividend yield\n   */\n  public getYield(): number {\n    return this.yield;\n  }\n\n  /**\n   * Sets the current yield reported as the dividend expressed as a portion of the current stock\n   * price, a rate. This is an optional field according to the OFX spec.\n   *\n   * @param yield the dividend yield\n   */\n  public setYield(yield_: number): void {\n    this.yield = yield_;\n  }\n\n  /**\n   * Gets the as-of date for the yield. This is an optional field according to the OFX spec.\n   *\n   * @return the as-of date for the yield\n   */\n  public getDateYieldAsOf(): Date {\n    return this.dateYieldAsOf;\n  }\n\n  /**\n   * Sets the as-of date for the yield. This is an optional field according to the OFX spec.\n   *\n   * @param dateYieldAsOf the as-of date for the yield\n   */\n  public setDateYieldAsOf(dateYieldAsOf: Date): void {\n    this.dateYieldAsOf = dateYieldAsOf;\n  }\n\n  /**\n   * Gets the asset class of the stock. This is an optional field according to the OFX spec.\n   *\n   * @return the asset class of the stock\n   */\n  public getAssetClass(): string {\n    return this.assetClass;\n  }\n\n  /**\n   * Sets the asset class of the stock. This is an optional field according to the OFX spec.\n   *\n   * @param assetClass the asset class of the stock\n   */\n  public setAssetClass(assetClass: string): void {\n    this.assetClass = assetClass;\n  }\n\n  /**\n   * Gets the assert class as one of the well-known types.\n   *\n   * @return the asset class or null if it's not one of the well-known types\n   */\n  public getAssetClassEnum(): AssetClass {\n    return AssetClass_fromOfx(this.getAssetClass());\n  }\n\n  /**\n   * Gets the FI-defined asset class of the stock. This is an optional field according to the OFX\n   * spec.\n   *\n   * @return the FI-defined asset class of the stock\n   */\n  public getFiAssetClass(): string {\n    return this.fiAssetClass;\n  }\n\n  /**\n   * Sets the FI-defined asset class of the stock. This is an optional field according to the OFX\n   * spec.\n   *\n   * @param fiAssetClass the FI-defined asset class of the stock\n   */\n  public setFiAssetClass(fiAssetClass: string): void {\n    this.fiAssetClass = fiAssetClass;\n  }\n}\n\nAggregate_add( StockSecurityInfo, \"STOCKINFO\" );\nElement_add(StockSecurityInfo, { name: \"STOCKTYPE\", order: 20, type: String, read: StockSecurityInfo.prototype.getType, write: StockSecurityInfo.prototype.setType });\nElement_add(StockSecurityInfo, { name: \"YIELD\", order: 30, type: Number, read: StockSecurityInfo.prototype.getYield, write: StockSecurityInfo.prototype.setYield });\nElement_add(StockSecurityInfo, { name: \"DTYIELDASOF\", order: 40, type: Date, read: StockSecurityInfo.prototype.getDateYieldAsOf, write: StockSecurityInfo.prototype.setDateYieldAsOf });\nElement_add(StockSecurityInfo, { name: \"ASSETCLASS\", order: 50, type: String, read: StockSecurityInfo.prototype.getAssetClass, write: StockSecurityInfo.prototype.setAssetClass });\nElement_add(StockSecurityInfo, { name: \"FIASSETCLASS\", order: 60, type: String, read: StockSecurityInfo.prototype.getFiAssetClass, write: StockSecurityInfo.prototype.setFiAssetClass });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ResponseMessage } from \"../ResponseMessage\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../meta/Element_add\";\n\n\n/**\n * Response to a change a user password request.\n *\n * @author Ryan Heaton\n * @see \"Section 2.5.2.2, OFX Spec.\"\n */\nexport class PasswordChangeResponse extends ResponseMessage {\n\n  private userId: string;\n  private changeTimestamp: Date;\n\n  /**\n   * The id of the user changing password.\n   *\n   * @return The id of the user changing password.\n   */\n  public getUserId(): string {\n    return this.userId;\n  }\n\n  // Inherited.\n  public getResponseMessageName(): string {\n    return \"password change\";\n  }\n\n  /**\n   * The id of the user changing password.\n   *\n   * @param userId The id of the user changing password.\n   */\n  public setUserId(userId: string): void {\n    this.userId = userId;\n  }\n\n  /**\n   * The timestamp of the password change.\n   *\n   * @return The timestamp of the password change.\n   */\n  public getChangeTimestamp(): Date {\n    return this.changeTimestamp;\n  }\n\n  /**\n   * The timestamp of the password change.\n   *\n   * @param changeTimestamp The timestamp of the password change.\n   */\n  public setChangeTimestamp(changeTimestamp: Date): void {\n    this.changeTimestamp = changeTimestamp;\n  }\n}\n\nAggregate_add( PasswordChangeResponse, \"PINCHRQ\" );\nElement_add(PasswordChangeResponse, { name: \"USERID\", required: true, order: 0, type: String, read: PasswordChangeResponse.prototype.getUserId, write: PasswordChangeResponse.prototype.setUserId });\nElement_add(PasswordChangeResponse, { name: \"DTCHANGED\", order: 10, type: Date, read: PasswordChangeResponse.prototype.getChangeTimestamp, write: PasswordChangeResponse.prototype.setChangeTimestamp });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TransactionWrappedResponseMessage } from \"../TransactionWrappedResponseMessage\";\nimport { PasswordChangeResponse } from \"./PasswordChangeResponse\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class PasswordChangeResponseTransaction extends TransactionWrappedResponseMessage<PasswordChangeResponse> {\n\n  private message: PasswordChangeResponse;\n\n  /**\n   * The message.\n   *\n   * @return The message.\n   */\n  public getMessage(): PasswordChangeResponse {\n    return this.message;\n  }\n\n  /**\n   * The message.\n   *\n   * @param message The message.\n   */\n  public setMessage(message: PasswordChangeResponse): void {\n    this.message = message;\n  }\n\n  // Inherited.\n  public getWrappedMessage(): PasswordChangeResponse {\n    return this.getMessage();\n  }\n}\n\nAggregate_add(PasswordChangeResponseTransaction, \"PINCHTRNRS\");\nChildAggregate_add(PasswordChangeResponseTransaction, { required: true, order: 30, type: PasswordChangeResponse, read: PasswordChangeResponseTransaction.prototype.getMessage, write: PasswordChangeResponseTransaction.prototype.setMessage });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ResponseMessage } from \"../ResponseMessage\";\nimport { StatusHolder } from \"../common/StatusHolder\";\nimport { Status } from \"../common/Status\";\nimport { FinancialInstitutionInfo } from \"./FinancialInstitution\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\nimport { Element_add } from \"../../../meta/Element_add\";\n\n/**\n * The signon response message.\n *\n * @author Ryan Heaton\n * @see \"Section 2.5.1.2, OFX Spec.\"\n */\nexport class SignonResponse extends ResponseMessage implements StatusHolder {\n\n  private status: Status;\n  private timestamp: Date;\n  private userKey: string;\n  private userKeyExpiration: Date;\n  private language: string;\n  private profileLastUpdated: Date;\n  private accountLastUpdated: Date;\n  private financialInstitution: FinancialInstitutionInfo;\n  private sessionId: string;\n  private accessKey: string;\n\n  constructor() {\n    super();\n    this.language = \"ENG\"; //Locale.US.getISO3Language();\n  }\n\n  public getResponseMessageName(): string {\n    return \"signon\";\n  }\n\n  public getStatusHolderName(): string {\n    return this.getResponseMessageName();\n  }\n\n  /**\n   * The signon response status.\n   *\n   * @return The signon response status.\n   */\n  public getStatus(): Status {\n    return this.status;\n  }\n\n  /**\n   * The signon response status.\n   *\n   * @param status The signon response status.\n   */\n  public setStatus(status: Status): void {\n    this.status = status;\n  }\n\n  /**\n   * The timestamp of this response.\n   *\n   * @return The timestamp of this response.\n   */\n  public getTimestamp(): Date {\n    return this.timestamp;\n  }\n\n  /**\n   * The timestamp of this response.\n   *\n   * @param timestamp The timestamp of this response.\n   */\n  public setTimestamp(timestamp: Date): void {\n    this.timestamp = timestamp;\n  }\n\n  /**\n   * The userkey that can be used instead of the username/password.\n   *\n   * @return The userkey that can be used instead of the username/password.\n   */\n  public getUserKey(): string {\n    return this.userKey;\n  }\n\n  /**\n   * The userkey that can be used instead of the username/password.\n   *\n   * @param userKey The userkey that can be used instead of the username/password.\n   */\n  public setUserKey(userKey: string): void {\n    this.userKey = userKey;\n  }\n\n  /**\n   * The date/time of the expiration of the user key.\n   *\n   * @return The date/time of the expiration of the user key.\n   */\n  public getUserKeyExpiration(): Date {\n    return this.userKeyExpiration;\n  }\n\n  /**\n   * The date/time of the expiration of the user key.\n   *\n   * @param userKeyExpiration The date/time of the expiration of the user key.\n   */\n  public setUserKeyExpiration(userKeyExpiration: Date): void {\n    this.userKeyExpiration = userKeyExpiration;\n  }\n\n  /**\n   * The three-letter langauge code.\n   *\n   * @return The three-letter langauge code.\n   * @see java.util.Locale#getISO3Language()\n   */\n  public getLanguage(): string {\n    return this.language;\n  }\n\n  /**\n   * The three-letter langauge code.\n   *\n   * @param language The three-letter langauge code.\n   */\n  public setLanguage(language: string): void {\n    this.language = language;\n  }\n\n  /**\n   * The date/time that the FI profile was last updated.\n   *\n   * @return The date/time that the FI profile was last updated.\n   */\n  public getProfileLastUpdated(): Date {\n    return this.profileLastUpdated;\n  }\n\n  /**\n   * The date/time that the FI profile was last updated.\n   *\n   * @param profileLastUpdated The date/time that the FI profile was last updated.\n   */\n  public setProfileLastUpdated(profileLastUpdated: Date): void {\n    this.profileLastUpdated = profileLastUpdated;\n  }\n\n  /**\n   * The date/time that the user's account information was updated.\n   *\n   * @return The date/time that the user's account information was updated.\n   */\n  public getAccountLastUpdated(): Date {\n    return this.accountLastUpdated;\n  }\n\n  /**\n   * The date/time that the user's account information was updated.\n   *\n   * @param accountLastUpdated The date/time that the user's account information was updated.\n   */\n  public setAccountLastUpdated(accountLastUpdated: Date): void {\n    this.accountLastUpdated = accountLastUpdated;\n  }\n\n  /**\n   * The financial instutution identity information.\n   *\n   * @return The financial instutution identity information.\n   */\n  public getFinancialInstitution(): FinancialInstitutionInfo {\n    return this.financialInstitution;\n  }\n\n  /**\n   * The financial instutution identity information.\n   *\n   * @param financialInstitution The financial instutution identity information.\n   */\n  public setFinancialInstitution(financialInstitution: FinancialInstitutionInfo): void {\n    this.financialInstitution = financialInstitution;\n  }\n\n  /**\n   * The session id for the client.\n   *\n   * @return The session id for the client.\n   */\n  public getSessionId(): string {\n    return this.sessionId;\n  }\n\n  /**\n   * The session id for the client.\n   *\n   * @param sessionId The session id for the client.\n   */\n  public setSessionId(sessionId: string): void {\n    this.sessionId = sessionId;\n  }\n\n  /**\n   * The access key that the client should return in the next sign-on requuest.\n   *\n   * @return The access key that the client should return in the next sign-on requuest.\n   */\n  public getAccessKey(): string {\n    return this.accessKey;\n  }\n\n  /**\n   * The access key that the client should return in the next sign-on requuest.\n   *\n   * @param accessKey The access key that the client should return in the next sign-on requuest.\n   */\n  public setAccessKey(accessKey: string): void {\n    this.accessKey = accessKey;\n  }\n}\n\nAggregate_add( SignonResponse, \"SONRS\" );\nChildAggregate_add(SignonResponse, { required: true, order: 0, type: Status, read: SignonResponse.prototype.getStatus, write: SignonResponse.prototype.setStatus });\nElement_add(SignonResponse, { name: \"DTSERVER\", required: true, order: 10, type: Date, read: SignonResponse.prototype.getTimestamp, write: SignonResponse.prototype.setTimestamp });\nElement_add(SignonResponse, { name: \"USERKEY\", order: 20, type: String, read: SignonResponse.prototype.getUserKey, write: SignonResponse.prototype.setUserKey });\nElement_add(SignonResponse, { name: \"TSKEYEXPIRE\", order: 30, type: Date, read: SignonResponse.prototype.getUserKeyExpiration, write: SignonResponse.prototype.setUserKeyExpiration });\nElement_add(SignonResponse, { name: \"LANGUAGE\", required: true, order: 40, type: String, read: SignonResponse.prototype.getLanguage, write: SignonResponse.prototype.setLanguage });\nElement_add(SignonResponse, { name: \"DTPROFUP\", order: 50, type: Date, read: SignonResponse.prototype.getProfileLastUpdated, write: SignonResponse.prototype.setProfileLastUpdated });\nElement_add(SignonResponse, { name: \"DTACCTUP\", order: 60, type: Date, read: SignonResponse.prototype.getAccountLastUpdated, write: SignonResponse.prototype.setAccountLastUpdated });\nChildAggregate_add(SignonResponse, { order: 70, type: FinancialInstitutionInfo, read: SignonResponse.prototype.getFinancialInstitution, write: SignonResponse.prototype.setFinancialInstitution });\nElement_add(SignonResponse, { name: \"SESSCOOKIE\", order: 80, type: String, read: SignonResponse.prototype.getSessionId, write: SignonResponse.prototype.setSessionId });\nElement_add(SignonResponse, { name: \"ACCESSKEY\", order: 90, type: String, read: SignonResponse.prototype.getAccessKey, write: SignonResponse.prototype.setAccessKey });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ResponseMessageSet } from \"../ResponseMessageSet\";\nimport { SignonResponse } from \"./SignonResponse\";\nimport { PasswordChangeResponseTransaction } from \"./PasswordChangeResponseTransaction\";\nimport { MessageSetType } from \"../MessageSetType\";\nimport { ResponseMessage } from \"../ResponseMessage\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n/**\n * The sign-on response message set.\n *\n * @author Ryan Heaton\n * @see \"Section 2.5, OFX Spec.\"\n */\nexport class SignonResponseMessageSet extends ResponseMessageSet {\n\n  private signonResponse: SignonResponse;\n  private passwordChangeResponse: PasswordChangeResponseTransaction;\n\n  public getType(): MessageSetType {\n    return MessageSetType.signon;\n  }\n\n  /**\n   * The message for this message set.\n   *\n   * @return The message for this message set.\n   */\n  public getSignonResponse(): SignonResponse {\n    return this.signonResponse;\n  }\n\n  /**\n   * The message for this message set.\n   *\n   * @param signonResponse The message for this message set.\n   */\n  public setSignonResponse(signonResponse: SignonResponse): void {\n    this.signonResponse = signonResponse;\n  }\n\n  /**\n   * The password change response.\n   *\n   * @return The password change response.\n   */\n  public getPasswordChangeResponse(): PasswordChangeResponseTransaction {\n    return this.passwordChangeResponse;\n  }\n\n  /**\n   * The password change response.\n   *\n   * @param passwordChangeResponse The password change response.\n   */\n  public setPasswordChangeResponse(passwordChangeResponse: PasswordChangeResponseTransaction): void {\n    this.passwordChangeResponse = passwordChangeResponse;\n  }\n\n  //todo: challenge request/response\n\n  // Inherited.\n  public getResponseMessages(): Array<ResponseMessage> {\n    var messages: Array<ResponseMessage> = new Array<ResponseMessage>();\n\n    if (this.getSignonResponse() != null) {\n      messages.push(this.getSignonResponse());\n    }\n\n    return messages;\n  }\n}\n\nAggregate_add(SignonResponseMessageSet, \"SIGNONMSGSRSV1\");\nChildAggregate_add(SignonResponseMessageSet, { order: 0, type: SignonResponse, read: SignonResponseMessageSet.prototype.getSignonResponse, write: SignonResponseMessageSet.prototype.setSignonResponse });\nChildAggregate_add(SignonResponseMessageSet, { order: 10, type: PasswordChangeResponseTransaction, read: SignonResponseMessageSet.prototype.getPasswordChangeResponse, write: SignonResponseMessageSet.prototype.setPasswordChangeResponse });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { BankAccountInfo } from \"../banking/BankAccountInfo\";\nimport { CreditCardAccountInfo } from \"../creditcard/CreditCardAccountInfo\";\nimport { InvestmentAccountInfo } from \"../investment/accounts/InvestmentAccountInfo\";\nimport { AccountInfo } from \"../common/AccountInfo\";\nimport { OFXException } from \"../../../OFXException\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../meta/Element_add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class AccountProfile {\n\n  private description: string;\n  private phone: string;\n  private bankSpecifics: BankAccountInfo;\n  private creditCardSpecifics: CreditCardAccountInfo;\n  private investSpecifics: InvestmentAccountInfo;\n\n  /**\n   * Description of the account.\n   *\n   * @return The description of the account.\n   */\n  public getDescription(): string {\n    return this.description;\n  }\n\n  /**\n   * The description of the account.\n   *\n   * @param description The description of the account.\n   */\n  public setDescription(description: string): void {\n    this.description = description;\n  }\n\n  /**\n   * Phone number for the account.\n   *\n   * @return Phone number for the account.\n   */\n  public getPhone(): string {\n    return this.phone;\n  }\n\n  /**\n   * Phone number for the account.\n   *\n   * @param phone Phone number for the account.\n   */\n  public setPhone(phone: string): void {\n    this.phone = phone;\n  }\n\n  /**\n   * Account specifics.\n   *\n   * @return Account specifics.\n   */\n  public getSpecifics(): AccountInfo {\n    if (this.getBankSpecifics() != null && this.getCreditCardSpecifics() != null) {\n      throw new OFXException(\"Only one account specifics aggregate can be set at a time.\");\n    }\n    else if (this.getBankSpecifics() != null) {\n      return this.getBankSpecifics();\n    } else if (this.getInvestmentSpecifics() != null) {\n      return this.getInvestmentSpecifics();\n    }\n    else {\n      return this.getCreditCardSpecifics();\n    }\n  }\n\n  /**\n   * Account specifics.\n   *\n   * @param specifics Account specifics.\n   */\n  public setSpecifics(specifics: AccountInfo): void {\n    if (specifics instanceof BankAccountInfo) {\n      this.setBankSpecifics(<BankAccountInfo> specifics);\n    }\n    else if (specifics instanceof CreditCardAccountInfo) {\n      this.setCreditCardSpecifics(<CreditCardAccountInfo> specifics);\n    } else if (specifics instanceof InvestmentAccountInfo) {\n      this.setInvestmentSpecifics(<InvestmentAccountInfo> specifics);\n    }\n    else {\n      throw new OFXException(\"Unknown specifics type: \" + specifics);\n    }\n  }\n\n  /**\n   * Bank-specific info.\n   *\n   * @return Bank-specific info.\n   */\n  public getBankSpecifics(): BankAccountInfo {\n    return this.bankSpecifics;\n  }\n\n  /**\n   * Bank-specific info.\n   *\n   * @param bankSpecifics Bank-specific info.\n   */\n  public setBankSpecifics(bankSpecifics: BankAccountInfo): void {\n    this.creditCardSpecifics = null;\n    this.investSpecifics = null;\n    this.bankSpecifics = bankSpecifics;\n  }\n\n  /**\n   * Credit-card account info.\n   *\n   * @return Credit-card account info.\n   */\n  public getCreditCardSpecifics(): CreditCardAccountInfo {\n    return this.creditCardSpecifics;\n  }\n\n  /**\n   * Credit-card account info.\n   *\n   * @param creditCardSpecifics Credit-card account info.\n   */\n  public setCreditCardSpecifics(creditCardSpecifics: CreditCardAccountInfo): void {\n    this.bankSpecifics = null;\n    this.investSpecifics = null;\n    this.creditCardSpecifics = creditCardSpecifics;\n  }\n\n  /**\n   * Investment account info.\n   *\n   * @return Investment account info.\n   */\n  public getInvestmentSpecifics(): InvestmentAccountInfo {\n    return this.investSpecifics;\n  }\n\n  /**\n   * Investment account info.\n   *\n   * @param investSpecifics Investment account info.\n   */\n  public setInvestmentSpecifics(investSpecifics: InvestmentAccountInfo): void {\n    this.bankSpecifics = null;\n    this.creditCardSpecifics = null;\n    this.investSpecifics = investSpecifics;\n  }\n}\n\nAggregate_add( AccountProfile, \"ACCTINFO\" );\nElement_add(AccountProfile, { name: \"DESC\", order: 0, type: String, read: AccountProfile.prototype.getDescription, write: AccountProfile.prototype.setDescription });\nElement_add(AccountProfile, { name: \"PHONE\", order: 10, type: String, read: AccountProfile.prototype.getPhone, write: AccountProfile.prototype.setPhone });\nChildAggregate_add(AccountProfile, { order: 20, type: BankAccountInfo, read: AccountProfile.prototype.getBankSpecifics, write: AccountProfile.prototype.setBankSpecifics });\nChildAggregate_add(AccountProfile, { order: 30, type: CreditCardAccountInfo, read: AccountProfile.prototype.getCreditCardSpecifics, write: AccountProfile.prototype.setCreditCardSpecifics });\nChildAggregate_add(AccountProfile, { order: 40, type: InvestmentAccountInfo, read: AccountProfile.prototype.getInvestmentSpecifics, write: AccountProfile.prototype.setInvestmentSpecifics });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ResponseMessage } from \"../ResponseMessage\";\nimport { AccountProfile } from \"./AccountProfile\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../meta/Element_add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n/**\n * @author Ryan Heaton\n */\nexport class AccountInfoResponse extends ResponseMessage {\n\n  private lastUpdated: Date;\n  private accounts: Array<AccountProfile>;\n\n  constructor() {\n    super();\n    this.lastUpdated = new Date(0); //default is never updated.\n  }\n\n  public getResponseMessageName(): string {\n    return \"account info\";\n  }\n\n  /**\n   * When the account info was last updated.\n   *\n   * @return When the account info was last updated.\n   */\n  public getLastUpdated(): Date {\n    return this.lastUpdated;\n  }\n\n  /**\n   * When the account info was last updated.\n   *\n   * @param lastUpdated When the account info was last updated.\n   */\n  public setLastUpdated(lastUpdated: Date): void {\n    this.lastUpdated = lastUpdated;\n  }\n\n  /**\n   * The accounts.\n   *\n   * @return The accounts.\n   */\n  public getAccounts(): Array<AccountProfile> {\n    return this.accounts;\n  }\n\n  /**\n   * The accounts.\n   *\n   * @param accounts The accounts.\n   */\n  public setAccounts(accounts: Array<AccountProfile>): void {\n    this.accounts = accounts;\n  }\n}\n\nAggregate_add(AccountInfoResponse, \"ACCTINFORS\");\nElement_add(AccountInfoResponse, { name: \"DTACCTUP\", required: true, order: 0, type: Date, read: AccountInfoResponse.prototype.getLastUpdated, write: AccountInfoResponse.prototype.setLastUpdated });\nChildAggregate_add(AccountInfoResponse, { order: 10, type: Array, collectionEntryType: AccountProfile, read: AccountInfoResponse.prototype.getAccounts, write: AccountInfoResponse.prototype.setAccounts });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { AccountInfoResponse } from \"./AccountInfoResponse\";\nimport { TransactionWrappedResponseMessage } from \"../TransactionWrappedResponseMessage\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class AccountInfoResponseTransaction extends TransactionWrappedResponseMessage<AccountInfoResponse> {\n\n  private message: AccountInfoResponse;\n\n  /**\n   * The wrapped message.\n   *\n   * @return The wrapped message.\n   */\n  public getMessage(): AccountInfoResponse {\n    return this.message;\n  }\n\n  /**\n   * The wrapped message.\n   *\n   * @param message The wrapped message.\n   */\n  public setMessage(message: AccountInfoResponse): void {\n    this.message = message;\n  }\n\n  // Inherited.\n  public getWrappedMessage(): AccountInfoResponse {\n    return this.getMessage();\n  }\n}\n\nAggregate_add( AccountInfoResponseTransaction, \"ACCTINFOTRNRS\" );\nChildAggregate_add(AccountInfoResponseTransaction, { required: true, order: 30, type: AccountInfoResponse, read: AccountInfoResponseTransaction.prototype.getMessage, write: AccountInfoResponseTransaction.prototype.setMessage });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { ResponseMessageSet } from \"../ResponseMessageSet\";\nimport { AccountInfoResponseTransaction } from \"./AccountInfoResponseTransaction\";\nimport { MessageSetType } from \"../MessageSetType\";\nimport { ResponseMessage } from \"../ResponseMessage\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\n/**\n * @author Ryan Heaton\n */\nexport class SignupResponseMessageSet extends ResponseMessageSet {\n\n  private accountInfoResponse: AccountInfoResponseTransaction;\n\n  public getType(): MessageSetType {\n    return MessageSetType.signup;\n  }\n\n  /**\n   * The account info response.\n   *\n   * @return The account info response.\n   */\n  public getAccountInfoResponse(): AccountInfoResponseTransaction {\n    return this.accountInfoResponse;\n  }\n\n  /**\n   * The account info response.\n   *\n   * @param accountInfoResponse The account info response.\n   */\n  public setAccountInfoResponse(accountInfoResponse: AccountInfoResponseTransaction): void {\n    this.accountInfoResponse = accountInfoResponse;\n  }\n\n  /**\n   * The response messages.\n   *\n   * @return The response messages.\n   */\n  public getResponseMessages(): Array<ResponseMessage> {\n    var messages: Array<ResponseMessage> = new Array<ResponseMessage>();\n\n    if (this.getAccountInfoResponse() != null) {\n      messages.push(this.getAccountInfoResponse());\n    }\n\n    return messages;\n  }\n}\n\nAggregate_add(SignupResponseMessageSet, \"SIGNUPMSGSRSV1\");\nChildAggregate_add(SignupResponseMessageSet, { order: 0, type: AccountInfoResponseTransaction, read: SignupResponseMessageSet.prototype.getAccountInfoResponse, write: SignupResponseMessageSet.prototype.setAccountInfoResponse });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../meta/Element_add\";\n\n\n/**\n * @author Aparna Gawali\n * aparna.gawali@sungard.com\n */\nexport class ProcDet {\n\n\tprivate dtAqd: string;\n\tprivate dtSale: string;\n\tprivate secName: string;\n\tprivate costBasis: string;\n\tprivate saleSpr: string;\n\tprivate longShort: string;\n\tprivate wasDisAllowed: string;\n\tprivate noncoveredSec: string;\n\tprivate basisNotshown: string;\n\t/**\n\t * @return the dtAqd\n\t */\n\tpublic getDtAqd(): string {\n\t\treturn this.dtAqd;\n\t}\n\t/**\n\t * @param dtAqd the dtAqd to set\n\t */\n\tpublic setDtAqd(dtAqd: string): void {\n\t\tthis.dtAqd = dtAqd;\n\t}\n\t/**\n\t * @return the dtSale\n\t */\n\tpublic getDtSale(): string {\n\t\treturn this.dtSale;\n\t}\n\t/**\n\t * @param dtSale the dtSale to set\n\t */\n\tpublic setDtSale(dtSale: string): void {\n\t\tthis.dtSale = dtSale;\n\t}\n\t/**\n\t * @return the secName\n\t */\n\tpublic getSecName(): string {\n\t\treturn this.secName;\n\t}\n\t/**\n\t * @param secName the secName to set\n\t */\n\tpublic setSecName(secName: string): void {\n\t\tthis.secName = secName;\n\t}\n\t/**\n\t * @return the costBasis\n\t */\n\tpublic getCostBasis(): string {\n\t\treturn this.costBasis;\n\t}\n\t/**\n\t * @param costBasis the costBasis to set\n\t */\n\tpublic setCostBasis(costBasis: string): void {\n\t\tthis.costBasis = costBasis;\n\t}\n\t/**\n\t * @return the saleSpr\n\t */\n\tpublic getSaleSpr(): string {\n\t\treturn this.saleSpr;\n\t}\n\t/**\n\t * @param saleSpr the saleSpr to set\n\t */\n\tpublic setSaleSpr(saleSpr: string): void {\n\t\tthis.saleSpr = saleSpr;\n\t}\n\t/**\n\t * @return the longShort\n\t */\n\tpublic getLongShort(): string {\n\t\treturn this.longShort;\n\t}\n\t/**\n\t * @param longShort the longShort to set\n\t */\n\tpublic setLongShort(longShort: string): void {\n\t\tthis.longShort = longShort;\n\t}\n\t/**\n\t * @return the wasDisAllowed\n\t */\n\tpublic getWasDisAllowed(): string {\n\t\treturn this.wasDisAllowed;\n\t}\n\t/**\n\t * @param wasDisAllowed the wasDisAllowed to set\n\t */\n\tpublic setWasDisAllowed(wasDisAllowed: string): void {\n\t\tthis.wasDisAllowed = wasDisAllowed;\n\t}\n\t/**\n\t * @return the noncoveredSec\n\t */\n\tpublic getNoncoveredSec(): string {\n\t\treturn this.noncoveredSec;\n\t}\n\t/**\n\t * @param noncoveredSec the noncoveredSec to set\n\t */\n\tpublic setNoncoveredSec(noncoveredSec: string): void {\n\t\tthis.noncoveredSec = noncoveredSec;\n\t}\n\t/**\n\t * @return the basisNotshown\n\t */\n\tpublic getBasisNotshown(): string {\n\t\treturn this.basisNotshown;\n\t}\n\t/**\n\t * @param basisNotshown the basisNotshown to set\n\t */\n\tpublic setBasisNotshown(basisNotshown: string): void {\n\t\tthis.basisNotshown = basisNotshown;\n\t}\n}\n\nAggregate_add( ProcDet, \"PROCDET_V100\");\nElement_add(ProcDet, { name: \"DTAQD\", required: false, order: 0, type: String, read: ProcDet.prototype.getDtAqd, write: ProcDet.prototype.setDtAqd });\nElement_add(ProcDet, { name: \"DTSALE\", required: false, order: 2, type: String, read: ProcDet.prototype.getDtSale, write: ProcDet.prototype.setDtSale });\nElement_add(ProcDet, { name: \"SECNAME\", required: false, order: 3, type: String, read: ProcDet.prototype.getSecName, write: ProcDet.prototype.setSecName });\nElement_add(ProcDet, { name: \"COSTBASIS\", required: false, order: 4, type: String, read: ProcDet.prototype.getCostBasis, write: ProcDet.prototype.setCostBasis });\nElement_add(ProcDet, { name: \"SALESPR\", required: false, order: 5, type: String, read: ProcDet.prototype.getSaleSpr, write: ProcDet.prototype.setSaleSpr });\nElement_add(ProcDet, { name: \"LONGSHORT\", required: false, order: 6, type: String, read: ProcDet.prototype.getLongShort, write: ProcDet.prototype.setLongShort });\nElement_add(ProcDet, { name: \"WASHSALELOSSDISALLOWED\", required: false, order: 7, type: String, read: ProcDet.prototype.getWasDisAllowed, write: ProcDet.prototype.setWasDisAllowed });\nElement_add(ProcDet, { name: \"NONCOVEREDSECURITY\", required: false, order: 8, type: String, read: ProcDet.prototype.getNoncoveredSec, write: ProcDet.prototype.setNoncoveredSec });\nElement_add(ProcDet, { name: \"BASISNOTSHOWN\", required: false, order: 9, type: String, read: ProcDet.prototype.getBasisNotshown, write: ProcDet.prototype.setBasisNotshown });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../meta/Element_add\";\nimport { ProcDet } from \"./ProcDet\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\n/**\n * @author Aparna Gawali\n * aparna.gawali@sungard.com\n */\nexport class ExtDBInfo {\n\n\tprivate procDet: Array<ProcDet>;\n\tprivate teInterest: string;\n\tprivate pabInterest: string;\n\tprivate teIntDividend: string;\n\tprivate pabDividend: string;\n\n\t/**\n\t * @return the procDet\n\t */\n\tpublic getProcDet(): Array<ProcDet> {\n\t\treturn this.procDet;\n\t}\n\n\t/**\n\t * @param procDet the procDet to set\n\t */\n    public setProcDet(procDet: Array<ProcDet>): void {\n\t\tthis.procDet = procDet;\n\t}\n\n\t/**\n\t * @return the teInterest\n\t */\n\tpublic getTeInterest(): string {\n\t\treturn this.teInterest;\n\t}\n\n\t/**\n\t * @param teInterest the teInterest to set\n\t */\n\tpublic setTeInterest(teInterest: string): void {\n\t\tthis.teInterest = teInterest;\n\t}\n\n\t/**\n\t * @return the pabInterest\n\t */\n\tpublic getPabInterest(): string {\n\t\treturn this.pabInterest;\n\t}\n\n\t/**\n\t * @param pabInterest the pabInterest to set\n\t */\n\tpublic setPabInterest(pabInterest: string): void {\n\t\tthis.pabInterest = pabInterest;\n\t}\n\n\t/**\n\t * @return the teIntDividend\n\t */\n\tpublic getTeIntDividend(): string {\n\t\treturn this.teIntDividend;\n\t}\n\n\t/**\n\t * @param teIntDividend the teIntDividend to set\n\t */\n\tpublic setTeIntDividend(teIntDividend: string): void {\n\t\tthis.teIntDividend = teIntDividend;\n\t}\n\n\t/**\n\t * @return the pabDividend\n\t */\n\tpublic getPabDividend(): string {\n\t\treturn this.pabDividend;\n\t}\n\n\t/**\n\t * @param pabDividend the pabDividend to set\n\t */\n\tpublic setPabDividend(pabDividend: string): void {\n\t\tthis.pabDividend = pabDividend;\n\t}\n}\n\nAggregate_add( ExtDBInfo, \"EXTDBINFO_V100\");\nChildAggregate_add(ExtDBInfo, { required:false, order: 0, type: Array, collectionEntryType: ProcDet, read: ExtDBInfo.prototype.getProcDet, write: ExtDBInfo.prototype.setProcDet });\nElement_add(ExtDBInfo, { name: \"TEINTEREST\",required: false , order: 1, type: String, read: ExtDBInfo.prototype.getTeInterest, write: ExtDBInfo.prototype.setTeInterest });\nElement_add(ExtDBInfo, { name: \"PABINTEREST\",required: false , order: 2, type: String, read: ExtDBInfo.prototype.getPabInterest, write: ExtDBInfo.prototype.setPabInterest });\nElement_add(ExtDBInfo, { name: \"TEINTDIVIDEND\",required: false , order: 3, type: String, read: ExtDBInfo.prototype.getTeIntDividend, write: ExtDBInfo.prototype.setTeIntDividend });\nElement_add(ExtDBInfo, { name: \"PABDIVIDEND\",required: false , order: 4, type: String, read: ExtDBInfo.prototype.getPabDividend, write: ExtDBInfo.prototype.setPabDividend });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../meta/Element_add\";\n\n\n/**\n * @author Aparna Gawali\n * aparna.gawali@sungard.com\n */\nexport class PayerAddress {\n\n\tprivate payerName1: string;\n\tprivate payerName2: string;\n\tprivate address1: string;\n\tprivate address2: string;\n\tprivate city: string;\n\tprivate state: string;\n\tprivate postalCode: string;\n\tprivate phone: string;\n\t/**\n\t * @return the payerName1\n\t */\n\tpublic getPayerName1(): string {\n\t\treturn this.payerName1;\n\t}\n\t/**\n\t * @param payerName1 the payerName1 to set\n\t */\n\tpublic setPayerName1(payerName1: string): void {\n\t\tthis.payerName1 = payerName1;\n\t}\n\t/**\n\t * @return the payerName2\n\t */\n\tpublic getPayerName2(): string {\n\t\treturn this.payerName2;\n\t}\n\t/**\n\t * @param payerName2 the payerName2 to set\n\t */\n\tpublic setPayerName2(payerName2: string): void {\n\t\tthis.payerName2 = payerName2;\n\t}\n\t/**\n\t * @return the address1\n\t */\n\tpublic getAddress1(): string {\n\t\treturn this.address1;\n\t}\n\t/**\n\t * @param address1 the address1 to set\n\t */\n\tpublic setAddress1(address1: string): void {\n\t\tthis.address1 = address1;\n\t}\n\n\t/**\n\t * @return the address2\n\t */\n\tpublic getAddress2(): string {\n\t\treturn this.address2;\n\t}\n\t/**\n\t * @param address2 the address2 to set\n\t */\n\tpublic setAddress2(address2: string): void {\n\t\tthis.address2 = address2;\n\t}\n\t/**\n\t * @return the city\n\t */\n\tpublic getCity(): string {\n\t\treturn this.city;\n\t}\n\t/**\n\t * @param city the city to set\n\t */\n\tpublic setCity(city: string): void {\n\t\tthis.city = city;\n\t}\n\t/**\n\t * @return the state\n\t */\n\tpublic getState(): string {\n\t\treturn this.state;\n\t}\n\t/**\n\t * @param state the state to set\n\t */\n\tpublic setState(state: string): void {\n\t\tthis.state = state;\n\t}\n\t/**\n\t * @return the postalCode\n\t */\n\tpublic getPostalCode(): string {\n\t\treturn this.postalCode;\n\t}\n\t/**\n\t * @param postalCode the postalCode to set\n\t */\n\tpublic setPostalCode(postalCode: string): void {\n\t\tthis.postalCode = postalCode;\n\t}\n\t/**\n\t * @return the phone\n\t */\n\tpublic getPhone(): string {\n\t\treturn this.phone;\n\t}\n\t/**\n\t * @param phone the phone to set\n\t */\n\tpublic setPhone(phone: string): void {\n\t\tthis.phone = phone;\n\t}\n}\n\nAggregate_add(PayerAddress, \"PAYERADDR\");\nElement_add(PayerAddress, { name: \"PAYERNAME1\",required: true , order: 0, type: String, read: PayerAddress.prototype.getPayerName1, write: PayerAddress.prototype.setPayerName1 });\nElement_add(PayerAddress, { name: \"PAYERNAME2\",required: false , order: 1, type: String, read: PayerAddress.prototype.getPayerName2, write: PayerAddress.prototype.setPayerName2 });\nElement_add(PayerAddress, { name: \"ADDR1\",required: true , order: 2, type: String, read: PayerAddress.prototype.getAddress1, write: PayerAddress.prototype.setAddress1 });\nElement_add(PayerAddress, { name: \"ADDR2\",required: true , order: 3, type: String, read: PayerAddress.prototype.getAddress2, write: PayerAddress.prototype.setAddress2 });\nElement_add(PayerAddress, { name: \"CITY\",required: true , order: 4, type: String, read: PayerAddress.prototype.getCity, write: PayerAddress.prototype.setCity });\nElement_add(PayerAddress, { name: \"STATE\",required: true , order: 5, type: String, read: PayerAddress.prototype.getState, write: PayerAddress.prototype.setState });\nElement_add(PayerAddress, { name: \"POSTALCODE\",required: true , order: 6, type: String, read: PayerAddress.prototype.getPostalCode, write: PayerAddress.prototype.setPostalCode });\nElement_add(PayerAddress, { name: \"PHONE\",required: false , order: 7, type: String, read: PayerAddress.prototype.getPhone, write: PayerAddress.prototype.setPhone });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../meta/Element_add\";\n\n/**\n * @author Aparna Gawali\n * aparna.gawali@sungard.com\n */\nexport class RecAddress {\n\n\tprivate recName1: string;\n\tprivate recName2: string;\n\tprivate address1: string;\n\tprivate address2: string;\n\tprivate city: string;\n\tprivate state: string;\n\tprivate postalCode: string;\n\tprivate phone: string;\n\t/**\n\t * @return the recName1\n\t */\n\tpublic getRecName1(): string {\n\t\treturn this.recName1;\n\t}\n\t/**\n\t * @param recName1 the recName1 to set\n\t */\n\tpublic setRecName1(recName1: string): void {\n\t\tthis.recName1 = recName1;\n\t}\n\n\t/**\n\t * @return the recName2\n\t */\n\tpublic getRecName2(): string {\n\t\treturn this.recName2;\n\t}\n\t/**\n\t * @param recName2 the recName2 to set\n\t */\n\tpublic setRecName2(recName2: string): void {\n\t\tthis.recName2 = recName2;\n\t}\n\t/**\n\t * @return the address1\n\t */\n\tpublic getAddress1(): string {\n\t\treturn this.address1;\n\t}\n\t/**\n\t * @param address1 the address1 to set\n\t */\n\tpublic setAddress1(address1: string): void {\n\t\tthis.address1 = address1;\n\t}\n\n\t/**\n\t * @return the address2\n\t */\n\tpublic getAddress2(): string {\n\t\treturn this.address2;\n\t}\n\t/**\n\t * @param address2 the address2 to set\n\t */\n\tpublic setAddress2(address2: string): void {\n\t\tthis.address2 = address2;\n\t}\n\t/**\n\t * @return the city\n\t */\n\tpublic getCity(): string {\n\t\treturn this.city;\n\t}\n\t/**\n\t * @param city the city to set\n\t */\n\tpublic setCity(city: string): void {\n\t\tthis.city = city;\n\t}\n\t/**\n\t * @return the state\n\t */\n\tpublic getState(): string {\n\t\treturn this.state;\n\t}\n\t/**\n\t * @param state the state to set\n\t */\n\tpublic setState(state: string): void {\n\t\tthis.state = state;\n\t}\n\t/**\n\t * @return the postalCode\n\t */\n\tpublic getPostalCode(): string {\n\t\treturn this.postalCode;\n\t}\n\t/**\n\t * @param postalCode the postalCode to set\n\t */\n\tpublic setPostalCode(postalCode: string): void {\n\t\tthis.postalCode = postalCode;\n\t}\n\t/**\n\t * @return the phone\n\t */\n\tpublic getPhone(): string {\n\t\treturn this.phone;\n\t}\n\t/**\n\t * @param phone the phone to set\n\t */\n\tpublic setPhone(phone: string): void {\n\t\tthis.phone = phone;\n\t}\n}\n\nAggregate_add(RecAddress, \"RECADDR\");\nElement_add(RecAddress, { name: \"RECNAME1\",required: true , order: 0, type: String, read: RecAddress.prototype.getRecName1, write: RecAddress.prototype.setRecName1 });\nElement_add(RecAddress, { name: \"RECNAME2\",required: false , order: 1, type: String, read: RecAddress.prototype.getRecName2, write: RecAddress.prototype.setRecName2 });\nElement_add(RecAddress, { name: \"ADDR1\",required: true , order: 2, type: String, read: RecAddress.prototype.getAddress1, write: RecAddress.prototype.setAddress1 });\nElement_add(RecAddress, { name: \"ADDR2\",required: true , order: 3, type: String, read: RecAddress.prototype.getAddress2, write: RecAddress.prototype.setAddress2 });\nElement_add(RecAddress, { name: \"CITY\",required: true , order: 4, type: String, read: RecAddress.prototype.getCity, write: RecAddress.prototype.setCity });\nElement_add(RecAddress, { name: \"STATE\",required: true , order: 5, type: String, read: RecAddress.prototype.getState, write: RecAddress.prototype.setState });\nElement_add(RecAddress, { name: \"POSTALCODE\",required: true , order: 6, type: String, read: RecAddress.prototype.getPostalCode, write: RecAddress.prototype.setPostalCode });\nElement_add(RecAddress, { name: \"PHONE\",required: false , order: 7, type: String, read: RecAddress.prototype.getPhone, write: RecAddress.prototype.setPhone });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ExtDBInfo } from \"./ExtDBInfo\";\nimport { PayerAddress } from \"./PayerAddress\";\nimport { RecAddress } from \"./RecAddress\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../meta/Element_add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n/**\n * @author Aparna Gawali\n * aparna.gawali@sungard.com\n */\nexport class Tax1099B  {\n\tprivate srvrtId: string;\n\tprivate taxYear: string;\n\tprivate extDBInfo: ExtDBInfo;\n\tprivate payerAddress: PayerAddress;\n\tprivate payerId: string;\n\tprivate recAddress: RecAddress;\n\tprivate recId: string;\n\tprivate recAcct: string;\n\n\n\t  public getSrvrtId(): string {\n\t    return this.srvrtId;\n\t  }\n\n\n      public setSrvrtId(srvrtId: string): void {\n\t    this.srvrtId = srvrtId;\n\t  }\n\n\n      public getTaxYear(): string {\n\t    return this.taxYear;\n\t  }\n\n\n\t  public setTaxYear(taxYear: string): void {\n\t    this.taxYear = taxYear;\n\t  }\n\n\t/**\n\t * @return the extDBInfo\n\t */\n\tpublic getExtDBInfo(): ExtDBInfo {\n\t\treturn this.extDBInfo;\n\t}\n\n\n\t/**\n\t * @param extDBInfo the extDBInfo to set\n\t */\n\tpublic setExtDBInfo(extDBInfo: ExtDBInfo): void {\n\t\tthis.extDBInfo = extDBInfo;\n\t}\n\n\n\t/**\n\t * @return the payerAddress\n\t */\n\tpublic getPayerAddress(): PayerAddress {\n\t\treturn this.payerAddress;\n\t}\n\n\n\t/**\n\t * @param payerAddress the payerAddress to set\n\t */\n\tpublic setPayerAddress(payerAddress: PayerAddress): void {\n\t\tthis.payerAddress = payerAddress;\n\t}\n\n\t/**\n\t * @return the payerId\n\t */\n\tpublic getPayerId(): string {\n\t\treturn this.payerId;\n\t}\n\n\n\t/**\n\t * @param payerId the payerId to set\n\t */\n\tpublic setPayerId(payerId: string): void {\n\t\tthis.payerId = payerId;\n\t}\n\n\n\t/**\n\t * @return the recAddress\n\t */\n\tpublic getRecAddress(): RecAddress {\n\t\treturn this.recAddress;\n\t}\n\n\n\t/**\n\t * @param recAddress the recAddress to set\n\t */\n\tpublic setRecAddress(recAddress: RecAddress): void {\n\t\tthis.recAddress = recAddress;\n\t}\n\n\t/**\n\t * @return the recId\n\t */\n\tpublic getRecId(): string {\n\t\treturn this.recId;\n\t}\n\n\n\t/**\n\t * @param recId the recId to set\n\t */\n\tpublic setRecId(recId: string): void {\n\t\tthis.recId = recId;\n\t}\n\n\n\t/**\n\t * @return the recAcct\n\t */\n\tpublic getRecAcct(): string {\n\t\treturn this.recAcct;\n\t}\n\n\n\t/**\n\t * @param recAcct the recAcct to set\n\t */\n\tpublic setRecAcct(recAcct: string): void {\n\t\tthis.recAcct = recAcct;\n\t}\n}\n\nAggregate_add( Tax1099B, \"TAX1099B_V100\");\nElement_add(Tax1099B, { name: \"SRVRTID\",required: true , order: 0, type: String, read: Tax1099B.prototype.getSrvrtId, write: Tax1099B.prototype.setSrvrtId });\nElement_add(Tax1099B, { name: \"TAXYEAR\", required: true, order: 1, type: String, read: Tax1099B.prototype.getTaxYear, write: Tax1099B.prototype.setTaxYear });\nChildAggregate_add(Tax1099B, { required:true, order: 2, type: ExtDBInfo, read: Tax1099B.prototype.getExtDBInfo, write: Tax1099B.prototype.setExtDBInfo });\nChildAggregate_add(Tax1099B, { required:true, order: 3, type: PayerAddress, read: Tax1099B.prototype.getPayerAddress, write: Tax1099B.prototype.setPayerAddress });\nElement_add(Tax1099B, { name: \"PAYERID\", required: true, order: 4, type: String, read: Tax1099B.prototype.getPayerId, write: Tax1099B.prototype.setPayerId });\nChildAggregate_add(Tax1099B, { required:true, order: 5, type: RecAddress, read: Tax1099B.prototype.getRecAddress, write: Tax1099B.prototype.setRecAddress });\nElement_add(Tax1099B, { name: \"RECID\", required: true, order: 6, type: String, read: Tax1099B.prototype.getRecId, write: Tax1099B.prototype.setRecId });\nElement_add(Tax1099B, { name: \"RECACCT\", required: true, order: 7, type: String, read: Tax1099B.prototype.getRecAcct, write: Tax1099B.prototype.setRecAcct });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { PayerAddress } from \"./PayerAddress\";\nimport { RecAddress } from \"./RecAddress\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../meta/Element_add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n/**\n * @author Aparna Gawali\n * aparna.gawali@sungard.com\n */\nexport class Tax1099DIV  {\n\n\n\tprivate srvrtId: string;\n\tprivate taxYear: string;\n\tprivate ordDiv: string;\n\tprivate qualifiedDiv: string;\n\tprivate totCapGain: string;\n\tprivate p28Gain: string;\n\tprivate unrecSec1250: string;\n\tprivate sec1202: string;\n\tprivate nonTaxDist: string;\n\tprivate fedTaxWh: string;\n\tprivate investExp: string;\n\tprivate forTaxPd: string;\n\tprivate cashLiq: string;\n\tprivate nonCashLiq: string;\n\n\tprivate payerAddress: PayerAddress;\n\tprivate payerId: string;\n\tprivate recAddress: RecAddress;\n\tprivate recId: string;\n\tprivate recAcct: string;\n\n\n\t  public getSrvrtId(): string {\n\t    return this.srvrtId;\n\t  }\n\n\n      public setSrvrtId(srvrtId: string): void {\n\t    this.srvrtId = srvrtId;\n\t  }\n\n\n      public getTaxYear(): string {\n\t    return this.taxYear;\n\t  }\n\n\n\t  public setTaxYear(taxYear: string): void {\n\t    this.taxYear = taxYear;\n\t  }\n\n\n\t/**\n\t * @return the ordDiv\n\t */\n\tpublic getOrdDiv(): string {\n\t\treturn this.ordDiv;\n\t}\n\n\n\t/**\n\t * @param ordDiv the ordDiv to set\n\t */\n\tpublic setOrdDiv(ordDiv: string): void {\n\t\tthis.ordDiv = ordDiv;\n\t}\n\n\n\t/**\n\t * @return the qualifiedDiv\n\t */\n\tpublic getQualifiedDiv(): string {\n\t\treturn this.qualifiedDiv;\n\t}\n\n\n\t/**\n\t * @param qualifiedDiv the qualifiedDiv to set\n\t */\n\tpublic setQualifiedDiv(qualifiedDiv: string): void {\n\t\tthis.qualifiedDiv = qualifiedDiv;\n\t}\n\n\n\t/**\n\t * @return the totCapGain\n\t */\n\tpublic getTotCapGain(): string {\n\t\treturn this.totCapGain;\n\t}\n\n\n\t/**\n\t * @param totCapGain the totCapGain to set\n\t */\n\tpublic setTotCapGain(totCapGain: string): void {\n\t\tthis.totCapGain = totCapGain;\n\t}\n\n\n\t/**\n\t * @return the p28Gain\n\t */\n\tpublic getP28Gain(): string {\n\t\treturn this.p28Gain;\n\t}\n\n\n\t/**\n\t * @param p28Gain the p28Gain to set\n\t */\n\tpublic setP28Gain(p28Gain: string): void {\n\t\tthis.p28Gain = p28Gain;\n\t}\n\n\n\t/**\n\t * @return the unrecSec1250\n\t */\n\tpublic getUnrecSec1250(): string {\n\t\treturn this.unrecSec1250;\n\t}\n\n\n\t/**\n\t * @param unrecSec1250 the unrecSec1250 to set\n\t */\n\tpublic setUnrecSec1250(unrecSec1250: string): void {\n\t\tthis.unrecSec1250 = unrecSec1250;\n\t}\n\n\n\t/**\n\t * @return the sec1202\n\t */\n\tpublic getSec1202(): string {\n\t\treturn this.sec1202;\n\t}\n\n\n\t/**\n\t * @param sec1202 the sec1202 to set\n\t */\n\tpublic setSec1202(sec1202: string): void {\n\t\tthis.sec1202 = sec1202;\n\t}\n\n\n\t/**\n\t * @return the nonTaxDist\n\t */\n\tpublic getNonTaxDist(): string {\n\t\treturn this.nonTaxDist;\n\t}\n\n\n\t/**\n\t * @param nonTaxDist the nonTaxDist to set\n\t */\n\tpublic setNonTaxDist(nonTaxDist: string): void {\n\t\tthis.nonTaxDist = nonTaxDist;\n\t}\n\n\n\t/**\n\t * @return the fedTaxWh\n\t */\n\tpublic getFedTaxWh(): string {\n\t\treturn this.fedTaxWh;\n\t}\n\n\n\t/**\n\t * @param fedTaxWh the fedTaxWh to set\n\t */\n\tpublic setFedTaxWh(fedTaxWh: string): void {\n\t\tthis.fedTaxWh = fedTaxWh;\n\t}\n\n\n\t/**\n\t * @return the investExp\n\t */\n\tpublic getInvestExp(): string {\n\t\treturn this.investExp;\n\t}\n\n\n\t/**\n\t * @param investExp the investExp to set\n\t */\n\tpublic setInvestExp(investExp: string): void {\n\t\tthis.investExp = investExp;\n\t}\n\n\n\t/**\n\t * @return the forTaxPd\n\t */\n\tpublic getForTaxPd(): string {\n\t\treturn this.forTaxPd;\n\t}\n\n\n\t/**\n\t * @param forTaxPd the forTaxPd to set\n\t */\n\tpublic setForTaxPd(forTaxPd: string): void {\n\t\tthis.forTaxPd = forTaxPd;\n\t}\n\n\n\t/**\n\t * @return the cashLiq\n\t */\n\tpublic getCashLiq(): string {\n\t\treturn this.cashLiq;\n\t}\n\n\n\t/**\n\t * @param cashLiq the cashLiq to set\n\t */\n\tpublic setCashLiq(cashLiq: string): void {\n\t\tthis.cashLiq = cashLiq;\n\t}\n\n\n\t/**\n\t * @return the nonCashLiq\n\t */\n\tpublic getNonCashLiq(): string {\n\t\treturn this.nonCashLiq;\n\t}\n\n\n\t/**\n\t * @param nonCashLiq the nonCashLiq to set\n\t */\n\tpublic setNonCashLiq(nonCashLiq: string): void {\n\t\tthis.nonCashLiq = nonCashLiq;\n\t}\n\n\n\t/**\n\t * @return the payerAddress\n\t */\n\tpublic getPayerAddress(): PayerAddress {\n\t\treturn this.payerAddress;\n\t}\n\n\n\t/**\n\t * @param payerAddress the payerAddress to set\n\t */\n\tpublic setPayerAddress(payerAddress: PayerAddress): void {\n\t\tthis.payerAddress = payerAddress;\n\t}\n\n\t/**\n\t * @return the payerId\n\t */\n\tpublic getPayerId(): string {\n\t\treturn this.payerId;\n\t}\n\n\n\t/**\n\t * @param payerId the payerId to set\n\t */\n\tpublic setPayerId(payerId: string): void {\n\t\tthis.payerId = payerId;\n\t}\n\n\n\t/**\n\t * @return the recAddress\n\t */\n\tpublic getRecAddress(): RecAddress {\n\t\treturn this.recAddress;\n\t}\n\n\n\t/**\n\t * @param recAddress the recAddress to set\n\t */\n\tpublic setRecAddress(recAddress: RecAddress): void {\n\t\tthis.recAddress = recAddress;\n\t}\n\n\t/**\n\t * @return the recId\n\t */\n\tpublic getRecId(): string {\n\t\treturn this.recId;\n\t}\n\n\n\t/**\n\t * @param recId the recId to set\n\t */\n\tpublic setRecId(recId: string): void {\n\t\tthis.recId = recId;\n\t}\n\n\n\t/**\n\t * @return the recAcct\n\t */\n\tpublic getRecAcct(): string {\n\t\treturn this.recAcct;\n\t}\n\n\n\t/**\n\t * @param recAcct the recAcct to set\n\t */\n\tpublic setRecAcct(recAcct: string): void {\n\t\tthis.recAcct = recAcct;\n\t}\n}\n\nAggregate_add(Tax1099DIV, \"TAX1099DIV_V100\");\nElement_add(Tax1099DIV, { name: \"SRVRTID\",required: false , order: 0, type: String, read: Tax1099DIV.prototype.getSrvrtId, write: Tax1099DIV.prototype.setSrvrtId });\nElement_add(Tax1099DIV, { name: \"TAXYEAR\", required: false, order: 1, type: String, read: Tax1099DIV.prototype.getTaxYear, write: Tax1099DIV.prototype.setTaxYear });\nElement_add(Tax1099DIV, { name: \"ORDDIV\", required: false, order: 2, type: String, read: Tax1099DIV.prototype.getOrdDiv, write: Tax1099DIV.prototype.setOrdDiv });\nElement_add(Tax1099DIV, { name: \"QUALIFIEDDIV\", required: false, order: 3, type: String, read: Tax1099DIV.prototype.getQualifiedDiv, write: Tax1099DIV.prototype.setQualifiedDiv });\nElement_add(Tax1099DIV, { name: \"TOTCAPGAIN\", required: false, order: 4, type: String, read: Tax1099DIV.prototype.getTotCapGain, write: Tax1099DIV.prototype.setTotCapGain });\nElement_add(Tax1099DIV, { name: \"P28GAIN\", required: false, order: 5, type: String, read: Tax1099DIV.prototype.getP28Gain, write: Tax1099DIV.prototype.setP28Gain });\nElement_add(Tax1099DIV, { name: \"UNRECSEC1250\", required: false, order: 6, type: String, read: Tax1099DIV.prototype.getUnrecSec1250, write: Tax1099DIV.prototype.setUnrecSec1250 });\nElement_add(Tax1099DIV, { name: \"SEC1202\", required: false, order: 7, type: String, read: Tax1099DIV.prototype.getSec1202, write: Tax1099DIV.prototype.setSec1202 });\nElement_add(Tax1099DIV, { name: \"NONTAXDIST\", required: false, order: 8, type: String, read: Tax1099DIV.prototype.getNonTaxDist, write: Tax1099DIV.prototype.setNonTaxDist });\nElement_add(Tax1099DIV, { name: \"FEDTAXWH\", required: false, order: 9, type: String, read: Tax1099DIV.prototype.getFedTaxWh, write: Tax1099DIV.prototype.setFedTaxWh });\nElement_add(Tax1099DIV, { name: \"INVESTEXP\", required: false, order: 10, type: String, read: Tax1099DIV.prototype.getInvestExp, write: Tax1099DIV.prototype.setInvestExp });\nElement_add(Tax1099DIV, { name: \"FORTAXPD\", required: false, order: 11, type: String, read: Tax1099DIV.prototype.getForTaxPd, write: Tax1099DIV.prototype.setForTaxPd });\nElement_add(Tax1099DIV, { name: \"CASHLIQ\", required: false, order: 12, type: String, read: Tax1099DIV.prototype.getCashLiq, write: Tax1099DIV.prototype.setCashLiq });\nElement_add(Tax1099DIV, { name: \"NONCASHLIQ\", required: false, order: 13, type: String, read: Tax1099DIV.prototype.getNonCashLiq, write: Tax1099DIV.prototype.setNonCashLiq });\nChildAggregate_add(Tax1099DIV, { required:true, order: 14, type: PayerAddress, read: Tax1099DIV.prototype.getPayerAddress, write: Tax1099DIV.prototype.setPayerAddress });\nElement_add(Tax1099DIV, { name: \"PAYERID\", required: true, order: 15, type: String, read: Tax1099DIV.prototype.getPayerId, write: Tax1099DIV.prototype.setPayerId });\nChildAggregate_add(Tax1099DIV, { required:true, order: 16, type: RecAddress, read: Tax1099DIV.prototype.getRecAddress, write: Tax1099DIV.prototype.setRecAddress });\nElement_add(Tax1099DIV, { name: \"RECID\", required: true, order: 17, type: String, read: Tax1099DIV.prototype.getRecId, write: Tax1099DIV.prototype.setRecId });\nElement_add(Tax1099DIV, { name: \"RECACCT\", required: true, order: 18, type: String, read: Tax1099DIV.prototype.getRecAcct, write: Tax1099DIV.prototype.setRecAcct });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { PayerAddress } from \"./PayerAddress\";\nimport { RecAddress } from \"./RecAddress\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../meta/Element_add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n/**\n * @author Aparna Gawali\n * aparna.gawali@sungard.com\n */\nexport class Tax1099INT  {\n\tprivate srvrtId: string;\n\tprivate taxYear: string;\n\tprivate intIncome: string;\n\tprivate erlWithPen: string;\n\tprivate intUsbndtrs: string;\n\tprivate fedTaxWh: string;\n\tprivate investExp: string;\n\tprivate forTaxPd: string;\n\n\tprivate payerAddress: PayerAddress;\n\tprivate payerId: string;\n\tprivate recAddress: RecAddress;\n\tprivate recId: string;\n\tprivate recAcct: string;\n\tprivate taxExemptInt: string;\n\tprivate specifiedPabInt: string;\n\n\t  public getSrvrtId(): string {\n\t    return this.srvrtId;\n\t  }\n\n\n      public setSrvrtId(srvrtId: string): void {\n\t    this.srvrtId = srvrtId;\n\t  }\n\n\n      public getTaxYear(): string {\n\t    return this.taxYear;\n\t  }\n\n\n\t  public setTaxYear(taxYear: string): void {\n\t    this.taxYear = taxYear;\n\t  }\n\n\n\n\t/**\n\t * @return the intIncome\n\t */\n\tpublic getIntIncome(): string {\n\t\treturn this.intIncome;\n\t}\n\n\n\t/**\n\t * @param intIncome the intIncome to set\n\t */\n\tpublic setIntIncome(intIncome: string): void {\n\t\tthis.intIncome = intIncome;\n\t}\n\n\n\t/**\n\t * @return the erlWithPen\n\t */\n\tpublic getErlWithPen(): string {\n\t\treturn this.erlWithPen;\n\t}\n\n\n\t/**\n\t * @param erlWithPen the erlWithPen to set\n\t */\n\tpublic setErlWithPen(erlWithPen: string): void {\n\t\tthis.erlWithPen = erlWithPen;\n\t}\n\n\n\t/**\n\t * @return the intUsbndtrs\n\t */\n\tpublic getIntUsbndtrs(): string {\n\t\treturn this.intUsbndtrs;\n\t}\n\n\n\t/**\n\t * @param intUsbndtrs the intUsbndtrs to set\n\t */\n\tpublic setIntUsbndtrs(intUsbndtrs: string): void {\n\t\tthis.intUsbndtrs = intUsbndtrs;\n\t}\n\n\n\t/**\n\t * @return the fedTaxWh\n\t */\n\tpublic getFedTaxWh(): string {\n\t\treturn this.fedTaxWh;\n\t}\n\n\n\t/**\n\t * @param fedTaxWh the fedTaxWh to set\n\t */\n\tpublic setFedTaxWh(fedTaxWh: string): void {\n\t\tthis.fedTaxWh = fedTaxWh;\n\t}\n\n\n\t/**\n\t * @return the investExp\n\t */\n\tpublic getInvestExp(): string {\n\t\treturn this.investExp;\n\t}\n\n\n\t/**\n\t * @param investExp the investExp to set\n\t */\n\tpublic setInvestExp(investExp: string): void {\n\t\tthis.investExp = investExp;\n\t}\n\n\n\t/**\n\t * @return the forTaxPd\n\t */\n\tpublic getForTaxPd(): string {\n\t\treturn this.forTaxPd;\n\t}\n\n\n\t/**\n\t * @param forTaxPd the forTaxPd to set\n\t */\n\tpublic setForTaxPd(forTaxPd: string): void {\n\t\tthis.forTaxPd = forTaxPd;\n\t}\n\n\n\t/**\n\t * @return the payerAddress\n\t */\n\tpublic getPayerAddress(): PayerAddress {\n\t\treturn this.payerAddress;\n\t}\n\n\n\t/**\n\t * @param payerAddress the payerAddress to set\n\t */\n\tpublic setPayerAddress(payerAddress: PayerAddress): void {\n\t\tthis.payerAddress = payerAddress;\n\t}\n\n\t/**\n\t * @return the payerId\n\t */\n\tpublic getPayerId(): string {\n\t\treturn this.payerId;\n\t}\n\n\n\t/**\n\t * @param payerId the payerId to set\n\t */\n\tpublic setPayerId(payerId: string): void {\n\t\tthis.payerId = payerId;\n\t}\n\n\n\t/**\n\t * @return the recAddress\n\t */\n\tpublic getRecAddress(): RecAddress {\n\t\treturn this.recAddress;\n\t}\n\n\n\t/**\n\t * @param recAddress the recAddress to set\n\t */\n\tpublic setRecAddress(recAddress: RecAddress): void {\n\t\tthis.recAddress = recAddress;\n\t}\n\n\t/**\n\t * @return the recId\n\t */\n\tpublic getRecId(): string {\n\t\treturn this.recId;\n\t}\n\n\n\t/**\n\t * @param recId the recId to set\n\t */\n\tpublic setRecId(recId: string): void {\n\t\tthis.recId = recId;\n\t}\n\n\n\t/**\n\t * @return the recAcct\n\t */\n\tpublic getRecAcct(): string {\n\t\treturn this.recAcct;\n\t}\n\n\n\t/**\n\t * @param recAcct the recAcct to set\n\t */\n\tpublic setRecAcct(recAcct: string): void {\n\t\tthis.recAcct = recAcct;\n\t}\n\n\n\t/**\n\t * @return the taxExemptInt\n\t */\n\tpublic getTaxExemptInt(): string {\n\t\treturn this.taxExemptInt;\n\t}\n\n\n\t/**\n\t * @param taxExemptInt the taxExemptInt to set\n\t */\n\tpublic setTaxExemptInt(taxExemptInt: string): void {\n\t\tthis.taxExemptInt = taxExemptInt;\n\t}\n\n\n\t/**\n\t * @return the specifiedPabInt\n\t */\n\tpublic getSpecifiedPabInt(): string {\n\t\treturn this.specifiedPabInt;\n\t}\n\n\n\t/**\n\t * @param specifiedPabInt the specifiedPabInt to set\n\t */\n\tpublic setSpecifiedPabInt(specifiedPabInt: string): void {\n\t\tthis.specifiedPabInt = specifiedPabInt;\n\t}\n}\n\nAggregate_add(Tax1099INT, \"TAX1099INT_V100\");\nElement_add(Tax1099INT, { name: \"SRVRTID\",required: true , order: 0, type: String, read: Tax1099INT.prototype.getSrvrtId, write: Tax1099INT.prototype.setSrvrtId });\nElement_add(Tax1099INT, { name: \"TAXYEAR\", required: true, order: 1, type: String, read: Tax1099INT.prototype.getTaxYear, write: Tax1099INT.prototype.setTaxYear });\nElement_add(Tax1099INT, { name: \"INTINCOME\",required: false , order: 2, type: String, read: Tax1099INT.prototype.getIntIncome, write: Tax1099INT.prototype.setIntIncome });\nElement_add(Tax1099INT, { name: \"ERLWITHPEN\",required: false , order: 3, type: String, read: Tax1099INT.prototype.getErlWithPen, write: Tax1099INT.prototype.setErlWithPen });\nElement_add(Tax1099INT, { name: \"INTUSBNDTRS\",required: false , order: 4, type: String, read: Tax1099INT.prototype.getIntUsbndtrs, write: Tax1099INT.prototype.setIntUsbndtrs });\nElement_add(Tax1099INT, { name: \"FEDTAXWH\", required: false, order: 5, type: String, read: Tax1099INT.prototype.getFedTaxWh, write: Tax1099INT.prototype.setFedTaxWh });\nElement_add(Tax1099INT, { name: \"INVESTEXP\", required: false, order: 6, type: String, read: Tax1099INT.prototype.getInvestExp, write: Tax1099INT.prototype.setInvestExp });\nElement_add(Tax1099INT, { name: \"FORTAXPD\", required: false, order: 7, type: String, read: Tax1099INT.prototype.getForTaxPd, write: Tax1099INT.prototype.setForTaxPd });\nChildAggregate_add(Tax1099INT, { required:true, order: 8, type: PayerAddress, read: Tax1099INT.prototype.getPayerAddress, write: Tax1099INT.prototype.setPayerAddress });\nElement_add(Tax1099INT, { name: \"PAYERID\", required: true, order: 9, type: String, read: Tax1099INT.prototype.getPayerId, write: Tax1099INT.prototype.setPayerId });\nChildAggregate_add(Tax1099INT, { required:true, order: 10, type: RecAddress, read: Tax1099INT.prototype.getRecAddress, write: Tax1099INT.prototype.setRecAddress });\nElement_add(Tax1099INT, { name: \"RECID\", required: true, order: 11, type: String, read: Tax1099INT.prototype.getRecId, write: Tax1099INT.prototype.setRecId });\nElement_add(Tax1099INT, { name: \"RECACCT\", required: true, order: 12, type: String, read: Tax1099INT.prototype.getRecAcct, write: Tax1099INT.prototype.setRecAcct });\nElement_add(Tax1099INT, { name: \"TAXEXEMPTINT\", required: false, order: 13, type: String, read: Tax1099INT.prototype.getTaxExemptInt, write: Tax1099INT.prototype.setTaxExemptInt });\nElement_add(Tax1099INT, { name: \"SPECIFIEDPABINT\", required: false, order: 14, type: String, read: Tax1099INT.prototype.getSpecifiedPabInt, write: Tax1099INT.prototype.setSpecifiedPabInt });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { PayerAddress } from \"./PayerAddress\";\nimport { RecAddress } from \"./RecAddress\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../meta/Element_add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n/**\n * @author Aparna Gawali\n * aparna.gawali@sungard.com\n */\nexport class Tax1099MISC  {\n\n\n\tprivate srvrtId: string;\n\tprivate taxYear: string;\n\n\tprivate royalties: string;\n\tprivate otherIncome: string;\n\tprivate fedTaxWh: string;\n\tprivate subPmts: string;\n\n\tprivate payerAddress: PayerAddress;\n\tprivate payerId: string;\n\tprivate recAddress: RecAddress;\n\tprivate recId: string;\n\tprivate recAcct: string;\n\n\n      public getSrvrtId(): string {\n\t    return this.srvrtId;\n\t  }\n\n\n      public setSrvrtId(srvrtId: string): void {\n\t    this.srvrtId = srvrtId;\n\t  }\n\n\n      public getTaxYear(): string {\n\t    return this.taxYear;\n\t  }\n\n\n\t  public setTaxYear(taxYear: string): void {\n\t    this.taxYear = taxYear;\n\t  }\n\n\t/**\n\t * @return the royalties\n\t */\n\tpublic getRoyalties(): string {\n\t\treturn this.royalties;\n\t}\n\n\n\t/**\n\t * @param royalties the royalties to set\n\t */\n\tpublic setRoyalties(royalties: string): void {\n\t\tthis.royalties = royalties;\n\t}\n\n\n\t/**\n\t * @return the otherIncome\n\t */\n\tpublic getOtherIncome(): string {\n\t\treturn this.otherIncome;\n\t}\n\n\n\t/**\n\t * @param otherIncome the otherIncome to set\n\t */\n\tpublic setOtherIncome(otherIncome: string): void {\n\t\tthis.otherIncome = otherIncome;\n\t}\n\n\n\t/**\n\t * @return the fedTaxWh\n\t */\n\tpublic getFedTaxWh(): string {\n\t\treturn this.fedTaxWh;\n\t}\n\n\n\t/**\n\t * @param fedTaxWh the fedTaxWh to set\n\t */\n\tpublic setFedTaxWh(fedTaxWh: string): void {\n\t\tthis.fedTaxWh = fedTaxWh;\n\t}\n\n\n\t/**\n\t * @return the subPmts\n\t */\n\tpublic getSubPmts(): string {\n\t\treturn this.subPmts;\n\t}\n\n\n\t/**\n\t * @param subPmts the subPmts to set\n\t */\n\tpublic setSubPmts(subPmts: string): void {\n\t\tthis.subPmts = subPmts;\n\t}\n\n\n\t/**\n\t * @return the payerAddress\n\t */\n\tpublic getPayerAddress(): PayerAddress {\n\t\treturn this.payerAddress;\n\t}\n\n\n\t/**\n\t * @param payerAddress the payerAddress to set\n\t */\n\tpublic setPayerAddress(payerAddress: PayerAddress): void {\n\t\tthis.payerAddress = payerAddress;\n\t}\n\n\t/**\n\t * @return the payerId\n\t */\n\tpublic getPayerId(): string {\n\t\treturn this.payerId;\n\t}\n\n\n\t/**\n\t * @param payerId the payerId to set\n\t */\n\tpublic setPayerId(payerId: string): void {\n\t\tthis.payerId = payerId;\n\t}\n\n\n\t/**\n\t * @return the recAddress\n\t */\n\tpublic getRecAddress(): RecAddress {\n\t\treturn this.recAddress;\n\t}\n\n\n\t/**\n\t * @param recAddress the recAddress to set\n\t */\n\tpublic setRecAddress(recAddress: RecAddress): void {\n\t\tthis.recAddress = recAddress;\n\t}\n\n\t/**\n\t * @return the recId\n\t */\n\tpublic getRecId(): string {\n\t\treturn this.recId;\n\t}\n\n\n\t/**\n\t * @param recId the recId to set\n\t */\n\tpublic setRecId(recId: string): void {\n\t\tthis.recId = recId;\n\t}\n\n\n\t/**\n\t * @return the recAcct\n\t */\n\tpublic getRecAcct(): string {\n\t\treturn this.recAcct;\n\t}\n\n\n\t/**\n\t * @param recAcct the recAcct to set\n\t */\n\tpublic setRecAcct(recAcct: string): void {\n\t\tthis.recAcct = recAcct;\n\t}\n}\n\nAggregate_add( Tax1099MISC, \"TAX1099MISC_V100\");\nElement_add(Tax1099MISC, { name: \"SRVRTID\",required: true , order: 0, type: String, read: Tax1099MISC.prototype.getSrvrtId, write: Tax1099MISC.prototype.setSrvrtId });\nElement_add(Tax1099MISC, { name: \"TAXYEAR\", required: true, order: 1, type: String, read: Tax1099MISC.prototype.getTaxYear, write: Tax1099MISC.prototype.setTaxYear });\nElement_add(Tax1099MISC, { name: \"ROYALTIES\",required: false , order: 2, type: String, read: Tax1099MISC.prototype.getRoyalties, write: Tax1099MISC.prototype.setRoyalties });\nElement_add(Tax1099MISC, { name: \"OTHERINCOME\",required: false , order: 3, type: String, read: Tax1099MISC.prototype.getOtherIncome, write: Tax1099MISC.prototype.setOtherIncome });\nElement_add(Tax1099MISC, { name: \"FEDTAXWH\",required: false , order: 4, type: String, read: Tax1099MISC.prototype.getFedTaxWh, write: Tax1099MISC.prototype.setFedTaxWh });\nElement_add(Tax1099MISC, { name: \"SUBPMTS\",required: false , order: 5, type: String, read: Tax1099MISC.prototype.getSubPmts, write: Tax1099MISC.prototype.setSubPmts });\nChildAggregate_add(Tax1099MISC, { required:true, order: 6, type: PayerAddress, read: Tax1099MISC.prototype.getPayerAddress, write: Tax1099MISC.prototype.setPayerAddress });\nElement_add(Tax1099MISC, { name: \"PAYERID\", required: true, order: 7, type: String, read: Tax1099MISC.prototype.getPayerId, write: Tax1099MISC.prototype.setPayerId });\nChildAggregate_add(Tax1099MISC, { required:true, order: 8, type: RecAddress, read: Tax1099MISC.prototype.getRecAddress, write: Tax1099MISC.prototype.setRecAddress });\nElement_add(Tax1099MISC, { name: \"RECID\", required: true, order: 9, type: String, read: Tax1099MISC.prototype.getRecId, write: Tax1099MISC.prototype.setRecId });\nElement_add(Tax1099MISC, { name: \"RECACCT\", required: true, order: 10, type: String, read: Tax1099MISC.prototype.getRecAcct, write: Tax1099MISC.prototype.setRecAcct });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { PayerAddress } from \"./PayerAddress\";\nimport { RecAddress } from \"./RecAddress\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../meta/Element_add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\n/**\n * @author Aparna Gawali\n * aparna.gawali@sungard.com\n */\nexport class Tax1099OID  {\n\n\n\tprivate srvrtId: string;\n\tprivate taxYear: string;\n\n\tprivate originalDisc: string;\n\tprivate otherPerInt: string;\n\tprivate erlWithPen: string;\n\tprivate fedTaxWh: string;\n\tprivate desc: string;\n\tprivate oidOnUstres: string;\n\tprivate investExp: string;\n\n\tprivate payerAddress: PayerAddress;\n\tprivate payerId: string;\n\tprivate recAddress: RecAddress;\n\tprivate recId: string;\n\tprivate recAcct: string;\n\n\n\t  public getSrvrtId(): string {\n\t    return this.srvrtId;\n\t  }\n\n\n      public setSrvrtId(srvrtId: string): void {\n\t    this.srvrtId = srvrtId;\n\t  }\n\n\n      public getTaxYear(): string {\n\t    return this.taxYear;\n\t  }\n\n\n\t  public setTaxYear(taxYear: string): void {\n\t    this.taxYear = taxYear;\n\t  }\n\n\t/**\n\t * @return the originalDisc\n\t */\n\tpublic getOriginalDisc(): string {\n\t\treturn this.originalDisc;\n\t}\n\n\n\t/**\n\t * @param originalDisc the originalDisc to set\n\t */\n\tpublic setOriginalDisc(originalDisc: string): void {\n\t\tthis.originalDisc = originalDisc;\n\t}\n\n\n\t/**\n\t * @return the otherPerInt\n\t */\n\tpublic getOtherPerInt(): string {\n\t\treturn this.otherPerInt;\n\t}\n\n\n\t/**\n\t * @param otherPerInt the otherPerInt to set\n\t */\n\tpublic setOtherPerInt(otherPerInt: string): void {\n\t\tthis.otherPerInt = otherPerInt;\n\t}\n\n\n\t/**\n\t * @return the erlWithPen\n\t */\n\tpublic getErlWithPen(): string {\n\t\treturn this.erlWithPen;\n\t}\n\n\n\t/**\n\t * @param erlWithPen the erlWithPen to set\n\t */\n\tpublic setErlWithPen(erlWithPen: string): void {\n\t\tthis.erlWithPen = erlWithPen;\n\t}\n\n\n\t/**\n\t * @return the fedTaxWh\n\t */\n\tpublic getFedTaxWh(): string {\n\t\treturn this.fedTaxWh;\n\t}\n\n\n\t/**\n\t * @param fedTaxWh the fedTaxWh to set\n\t */\n\tpublic setFedTaxWh(fedTaxWh: string): void {\n\t\tthis.fedTaxWh = fedTaxWh;\n\t}\n\n\n\t/**\n\t * @return the desc\n\t */\n\tpublic getDesc(): string {\n\t\treturn this.desc;\n\t}\n\n\n\t/**\n\t * @param desc the desc to set\n\t */\n\tpublic setDesc(desc: string): void {\n\t\tthis.desc = desc;\n\t}\n\n\n\t/**\n\t * @return the oidOnUstres\n\t */\n\tpublic getOidOnUstres(): string {\n\t\treturn this.oidOnUstres;\n\t}\n\n\n\t/**\n\t * @param oidOnUstres the oidOnUstres to set\n\t */\n\tpublic setOidOnUstres(oidOnUstres: string): void {\n\t\tthis.oidOnUstres = oidOnUstres;\n\t}\n\n\n\t/**\n\t * @return the investExp\n\t */\n\tpublic getInvestExp(): string {\n\t\treturn this.investExp;\n\t}\n\n\n\t/**\n\t * @param investExp the investExp to set\n\t */\n\tpublic setInvestExp(investExp: string): void {\n\t\tthis.investExp = investExp;\n\t}\n\n\n\t/**\n\t * @return the payerAddress\n\t */\n\tpublic getPayerAddress(): PayerAddress {\n\t\treturn this.payerAddress;\n\t}\n\n\n\t/**\n\t * @param payerAddress the payerAddress to set\n\t */\n\tpublic setPayerAddress(payerAddress: PayerAddress): void {\n\t\tthis.payerAddress = payerAddress;\n\t}\n\n\t/**\n\t * @return the payerId\n\t */\n\tpublic getPayerId(): string {\n\t\treturn this.payerId;\n\t}\n\n\n\t/**\n\t * @param payerId the payerId to set\n\t */\n\tpublic setPayerId(payerId: string): void {\n\t\tthis.payerId = payerId;\n\t}\n\n\n\t/**\n\t * @return the recAddress\n\t */\n\tpublic getRecAddress(): RecAddress {\n\t\treturn this.recAddress;\n\t}\n\n\n\t/**\n\t * @param recAddress the recAddress to set\n\t */\n\tpublic setRecAddress(recAddress: RecAddress): void {\n\t\tthis.recAddress = recAddress;\n\t}\n\n\t/**\n\t * @return the recId\n\t */\n\tpublic getRecId(): string {\n\t\treturn this.recId;\n\t}\n\n\n\t/**\n\t * @param recId the recId to set\n\t */\n\tpublic setRecId(recId: string): void {\n\t\tthis.recId = recId;\n\t}\n\n\n\t/**\n\t * @return the recAcct\n\t */\n\tpublic getRecAcct(): string {\n\t\treturn this.recAcct;\n\t}\n\n\n\t/**\n\t * @param recAcct the recAcct to set\n\t */\n\tpublic setRecAcct(recAcct: string): void {\n\t\tthis.recAcct = recAcct;\n\t}\n}\n\nAggregate_add(Tax1099OID, \"TAX1099OID_V100\");\nElement_add(Tax1099OID, { name: \"SRVRTID\",required: true , order: 0, type: String, read: Tax1099OID.prototype.getSrvrtId, write: Tax1099OID.prototype.setSrvrtId });\nElement_add(Tax1099OID, { name: \"TAXYEAR\", required: true, order: 1, type: String, read: Tax1099OID.prototype.getTaxYear, write: Tax1099OID.prototype.setTaxYear });\nElement_add(Tax1099OID, { name: \"ORIGISDISC\", required: false, order: 2, type: String, read: Tax1099OID.prototype.getOriginalDisc, write: Tax1099OID.prototype.setOriginalDisc });\nElement_add(Tax1099OID, { name: \"OTHERPERINT\", required: false, order: 3, type: String, read: Tax1099OID.prototype.getOtherPerInt, write: Tax1099OID.prototype.setOtherPerInt });\nElement_add(Tax1099OID, { name: \"ERLWITHPEN\", required: false, order: 4, type: String, read: Tax1099OID.prototype.getErlWithPen, write: Tax1099OID.prototype.setErlWithPen });\nElement_add(Tax1099OID, { name: \"FEDTAXWH\", required: false, order: 5, type: String, read: Tax1099OID.prototype.getFedTaxWh, write: Tax1099OID.prototype.setFedTaxWh });\nElement_add(Tax1099OID, { name: \"DESCRIPTION\", required: true, order: 6, type: String, read: Tax1099OID.prototype.getDesc, write: Tax1099OID.prototype.setDesc });\nElement_add(Tax1099OID, { name: \"OIDONUSTRES\", required: false, order: 7, type: String, read: Tax1099OID.prototype.getOidOnUstres, write: Tax1099OID.prototype.setOidOnUstres });\nElement_add(Tax1099OID, { name: \"INVESTEXP\", required: false, order: 8, type: String, read: Tax1099OID.prototype.getInvestExp, write: Tax1099OID.prototype.setInvestExp });\nChildAggregate_add(Tax1099OID, { required:true, order: 9, type: PayerAddress, read: Tax1099OID.prototype.getPayerAddress, write: Tax1099OID.prototype.setPayerAddress });\nElement_add(Tax1099OID, { name: \"PAYERID\", required: true, order: 10, type: String, read: Tax1099OID.prototype.getPayerId, write: Tax1099OID.prototype.setPayerId });\nChildAggregate_add(Tax1099OID, { required:true, order: 11, type: RecAddress, read: Tax1099OID.prototype.getRecAddress, write: Tax1099OID.prototype.setRecAddress });\nElement_add(Tax1099OID, { name: \"RECID\", required: true, order: 12, type: String, read: Tax1099OID.prototype.getRecId, write: Tax1099OID.prototype.setRecId });\nElement_add(Tax1099OID, { name: \"RECACCT\", required: true, order: 13, type: String, read: Tax1099OID.prototype.getRecAcct, write: Tax1099OID.prototype.setRecAcct });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { PayerAddress } from \"./PayerAddress\";\nimport { RecAddress } from \"./RecAddress\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../meta/Element_add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n/**\n * @author Aparna Gawali\n * aparna.gawali@sungard.com\n */\nexport class Tax1099R  {\n\tprivate srvrtId: string;\n\tprivate taxYear: string;\n\tprivate grossDist: string;\n\n\tprivate taxAmt: string;\n\tprivate taxAmtNd: string;\n\tprivate capGain: string;\n\tprivate fedTaxWh: string;\n\tprivate empContins: string;\n\tprivate netUnapEmp: string;\n\tprivate distCode: string;\n\tprivate iraSepSimp: string;\n\tprivate annCtrctDist: string;\n\tprivate totEmpCount: string;\n\n\tprivate payerAddress: PayerAddress;\n\tprivate payerId: string;\n\tprivate recAddress: RecAddress;\n\tprivate recId: string;\n\tprivate recAcct: string;\n\n\n\t  public getSrvrtId(): string {\n\t    return this.srvrtId;\n\t  }\n\n\n      public setSrvrtId(srvrtId: string): void {\n\t    this.srvrtId = srvrtId;\n\t  }\n\n\n      public getTaxYear(): string {\n\t    return this.taxYear;\n\t  }\n\n\n\t  public setTaxYear(taxYear: string): void {\n\t    this.taxYear = taxYear;\n\t  }\n\n\n\t  /**\n\t\t * @return the grossDist\n\t\t */\n\t\tpublic getGrossDist(): string {\n\t\t\treturn this.grossDist;\n\t\t}\n\n\n\t\t/**\n\t\t * @param grossDist the grossDist to set\n\t\t */\n\t\tpublic setGrossDist(grossDist: string): void {\n\t\t\tthis.grossDist = grossDist;\n\t\t}\n\n\n\t\t/**\n\t\t * @return the taxAmt\n\t\t */\n\t\tpublic getTaxAmt(): string {\n\t\t\treturn this.taxAmt;\n\t\t}\n\n\n\t\t/**\n\t\t * @param taxAmt the taxAmt to set\n\t\t */\n\t\tpublic setTaxAmt(taxAmt: string): void {\n\t\t\tthis.taxAmt = taxAmt;\n\t\t}\n\n\n\t\t/**\n\t\t * @return the taxAmtNd\n\t\t */\n\t\tpublic getTaxAmtNd(): string {\n\t\t\treturn this.taxAmtNd;\n\t\t}\n\n\n\t\t/**\n\t\t * @param taxAmtNd the taxAmtNd to set\n\t\t */\n\t\tpublic setTaxAmtNd(taxAmtNd: string): void {\n\t\t\tthis.taxAmtNd = taxAmtNd;\n\t\t}\n\n\n\t\t/**\n\t\t * @return the capGain\n\t\t */\n\t\tpublic getCapGain(): string {\n\t\t\treturn this.capGain;\n\t\t}\n\n\n\t\t/**\n\t\t * @param capGain the capGain to set\n\t\t */\n\t\tpublic setCapGain(capGain: string): void {\n\t\t\tthis.capGain = capGain;\n\t\t}\n\n\n\n\n\t/**\n\t * @return the fedTaxWh\n\t */\n\tpublic getFedTaxWh(): string {\n\t\treturn this.fedTaxWh;\n\t}\n\n\n\t/**\n\t * @param fedTaxWh the fedTaxWh to set\n\t */\n\tpublic setFedTaxWh(fedTaxWh: string): void {\n\t\tthis.fedTaxWh = fedTaxWh;\n\t}\n\n\t/**\n\t * @return the empContins\n\t */\n\tpublic getEmpContins(): string {\n\t\treturn this.empContins;\n\t}\n\n\n\t/**\n\t * @param empContins the empContins to set\n\t */\n\tpublic setEmpContins(empContins: string): void {\n\t\tthis.empContins = empContins;\n\t}\n\n\n\t/**\n\t * @return the netUnapEmp\n\t */\n\tpublic getNetUnapEmp(): string {\n\t\treturn this.netUnapEmp;\n\t}\n\n\n\t/**\n\t * @param netUnapEmp the netUnapEmp to set\n\t */\n\tpublic setNetUnapEmp(netUnapEmp: string): void {\n\t\tthis.netUnapEmp = netUnapEmp;\n\t}\n\n\n\t/**\n\t * @return the distCode\n\t */\n\tpublic getDistCode(): string {\n\t\treturn this.distCode;\n\t}\n\n\n\t/**\n\t * @param distCode the distCode to set\n\t */\n\tpublic setDistCode(distCode: string): void {\n\t\tthis.distCode = distCode;\n\t}\n\n\n\t/**\n\t * @return the iraSepSimp\n\t */\n\tpublic getIraSepSimp(): string {\n\t\treturn this.iraSepSimp;\n\t}\n\n\n\t/**\n\t * @param iraSepSimp the iraSepSimp to set\n\t */\n\tpublic setIraSepSimp(iraSepSimp: string): void {\n\t\tthis.iraSepSimp = iraSepSimp;\n\t}\n\n\n\t/**\n\t * @return the annCtrctDist\n\t */\n\tpublic getAnnCtrctDist(): string {\n\t\treturn this.annCtrctDist;\n\t}\n\n\n\t/**\n\t * @param annCtrctDist the annCtrctDist to set\n\t */\n\tpublic setAnnCtrctDist(annCtrctDist: string): void {\n\t\tthis.annCtrctDist = annCtrctDist;\n\t}\n\n\n\t/**\n\t * @return the totEmpCount\n\t */\n\tpublic getTotEmpCount(): string {\n\t\treturn this.totEmpCount;\n\t}\n\n\n\t/**\n\t * @param totEmpCount the totEmpCount to set\n\t */\n\tpublic setTotEmpCount(totEmpCount: string): void {\n\t\tthis.totEmpCount = totEmpCount;\n\t}\n\n\n\t/**\n\t * @return the payerAddress\n\t */\n\tpublic getPayerAddress(): PayerAddress {\n\t\treturn this.payerAddress;\n\t}\n\n\n\t/**\n\t * @param payerAddress the payerAddress to set\n\t */\n\tpublic setPayerAddress(payerAddress: PayerAddress): void {\n\t\tthis.payerAddress = payerAddress;\n\t}\n\n\t/**\n\t * @return the payerId\n\t */\n\tpublic getPayerId(): string {\n\t\treturn this.payerId;\n\t}\n\n\n\t/**\n\t * @param payerId the payerId to set\n\t */\n\tpublic setPayerId(payerId: string): void {\n\t\tthis.payerId = payerId;\n\t}\n\n\n\t/**\n\t * @return the recAddress\n\t */\n\tpublic getRecAddress(): RecAddress {\n\t\treturn this.recAddress;\n\t}\n\n\n\t/**\n\t * @param recAddress the recAddress to set\n\t */\n\tpublic setRecAddress(recAddress: RecAddress): void {\n\t\tthis.recAddress = recAddress;\n\t}\n\n\t/**\n\t * @return the recId\n\t */\n\tpublic getRecId(): string {\n\t\treturn this.recId;\n\t}\n\n\n\t/**\n\t * @param recId the recId to set\n\t */\n\tpublic setRecId(recId: string): void {\n\t\tthis.recId = recId;\n\t}\n\n\n\t/**\n\t * @return the recAcct\n\t */\n\tpublic getRecAcct(): string {\n\t\treturn this.recAcct;\n\t}\n\n\n\t/**\n\t * @param recAcct the recAcct to set\n\t */\n\tpublic setRecAcct(recAcct: string): void {\n\t\tthis.recAcct = recAcct;\n\t}\n}\n\nAggregate_add(Tax1099R, \"TAX1099R_V100\");\nElement_add(Tax1099R, { name: \"SRVRTID\",required: true , order: 0, type: String, read: Tax1099R.prototype.getSrvrtId, write: Tax1099R.prototype.setSrvrtId });\nElement_add(Tax1099R, { name: \"TAXYEAR\", required: true, order: 1, type: String, read: Tax1099R.prototype.getTaxYear, write: Tax1099R.prototype.setTaxYear });\nElement_add(Tax1099R, { name: \"GROSSDIST\", required: true, order: 2, type: String, read: Tax1099R.prototype.getGrossDist, write: Tax1099R.prototype.setGrossDist });\nElement_add(Tax1099R, { name: \"TAXAMT\", required: false, order: 3, type: String, read: Tax1099R.prototype.getTaxAmt, write: Tax1099R.prototype.setTaxAmt });\nElement_add(Tax1099R, { name: \"TAXAMTND\", required: false, order: 4, type: String, read: Tax1099R.prototype.getTaxAmtNd, write: Tax1099R.prototype.setTaxAmtNd });\nElement_add(Tax1099R, { name: \"CAPGAIN\", required: false, order: 5, type: String, read: Tax1099R.prototype.getCapGain, write: Tax1099R.prototype.setCapGain });\nElement_add(Tax1099R, { name: \"FEDTAXWH\", required: false, order: 6, type: String, read: Tax1099R.prototype.getFedTaxWh, write: Tax1099R.prototype.setFedTaxWh });\nElement_add(Tax1099R, { name: \"EMPCONTINS\", required: false, order: 7, type: String, read: Tax1099R.prototype.getEmpContins, write: Tax1099R.prototype.setEmpContins });\nElement_add(Tax1099R, { name: \"NETUNAPEMP\", required: false, order: 8, type: String, read: Tax1099R.prototype.getNetUnapEmp, write: Tax1099R.prototype.setNetUnapEmp });\nElement_add(Tax1099R, { name: \"DISTCODE\", required: true, order: 9, type: String, read: Tax1099R.prototype.getDistCode, write: Tax1099R.prototype.setDistCode });\nElement_add(Tax1099R, { name: \"IRASEPSIMP\", required: true, order: 10, type: String, read: Tax1099R.prototype.getIraSepSimp, write: Tax1099R.prototype.setIraSepSimp });\nElement_add(Tax1099R, { name: \"ANNCTRCTDIST\", required: false, order: 11, type: String, read: Tax1099R.prototype.getAnnCtrctDist, write: Tax1099R.prototype.setAnnCtrctDist });\nElement_add(Tax1099R, { name: \"TOTEMPCONT\", required: false, order: 12, type: String, read: Tax1099R.prototype.getTotEmpCount, write: Tax1099R.prototype.setTotEmpCount });\nChildAggregate_add(Tax1099R, { required:true, order: 13, type: PayerAddress, read: Tax1099R.prototype.getPayerAddress, write: Tax1099R.prototype.setPayerAddress });\nElement_add(Tax1099R, { name: \"PAYERID\", required: true, order: 14, type: String, read: Tax1099R.prototype.getPayerId, write: Tax1099R.prototype.setPayerId });\nChildAggregate_add(Tax1099R, { required:true, order: 15, type: RecAddress, read: Tax1099R.prototype.getRecAddress, write: Tax1099R.prototype.setRecAddress });\nElement_add(Tax1099R, { name: \"RECID\", required: true, order: 16, type: String, read: Tax1099R.prototype.getRecId, write: Tax1099R.prototype.setRecId });\nElement_add(Tax1099R, { name: \"RECACCT\", required: true, order: 17, type: String, read: Tax1099R.prototype.getRecAcct, write: Tax1099R.prototype.setRecAcct });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { T1099Request } from \"../common/T1099Request\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { Element_add } from \"../../../meta/Element_add\";\n\n\n/**\n * @author Aparna Gawali\n * aparna.gawali@sungard.com\n */\nexport class Tax1099Request extends T1099Request {\n\n    public getTaxYear(): string {\n\t\treturn this.taxYear;\n\t}\n\n\tpublic setTaxYear(taxYear: string): void {\n\t\tthis.taxYear = taxYear;\n\t}\n\n\tprivate taxYear: string;\n}\n\nAggregate_add(Tax1099Request, \"TAX1099RQ\");\nElement_add(Tax1099Request, { name: \"TAXYEAR\", required: true, order: 0, type: String, read: Tax1099Request.prototype.getTaxYear, write: Tax1099Request.prototype.setTaxYear });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TransactionWrappedRequestMessage } from \"../TransactionWrappedRequestMessage\";\nimport { Tax1099Request } from \"./Tax1099Request\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n/**\n * @author Aparna Gawali\n * aparna.gawali@sungard.com\n */\nexport class Tax1099RequestTransaction extends TransactionWrappedRequestMessage<Tax1099Request> {\n\n  private tax1099Request: Tax1099Request;\n\n  /**\n   * The tax1099Request.\n   *\n   * @return The tax1099Request.\n   */\n  public getTax1099Request(): Tax1099Request {\n    return this.tax1099Request;\n  }\n\n  /**\n   * The tax1099Request.\n   *\n   * @param tax1099Request The message.\n   *\n   */\n  public setTax1099Request(tax1099Request: Tax1099Request): void {\n    this.tax1099Request = tax1099Request;\n  }\n\n  // Inherited.\n  public setWrappedMessage(tax1099Request: Tax1099Request): void {\n\t  this.setTax1099Request(tax1099Request);\n  }\n}\n\nAggregate_add(Tax1099RequestTransaction, \"TAX1099TRNRQ\");\nChildAggregate_add(Tax1099RequestTransaction, { required: true, order: 30, type: Tax1099Request, read: Tax1099RequestTransaction.prototype.getTax1099Request, write: Tax1099RequestTransaction.prototype.setTax1099Request });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { RequestMessageSet } from \"../RequestMessageSet\";\nimport { Tax1099RequestTransaction } from \"./Tax1099RequestTransaction\";\nimport { MessageSetType } from \"../MessageSetType\";\nimport { RequestMessage } from \"../RequestMessage\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n/**\n * @author aparna.gawali\n * aparna.gawali@sungard.com\n *\n */\nexport class Tax1099RequestMessageSet extends RequestMessageSet {\n\n  private taxRequestTransaction: Tax1099RequestTransaction;\n\n  public getType(): MessageSetType {\n    return MessageSetType.tax1099;\n  }\n\n  /**\n   * The statement request.\n   *\n   * @return The statement request.\n   */\n  public getTaxRequestTransaction(): Tax1099RequestTransaction {\n    return this.taxRequestTransaction;\n  }\n\n  /**\n   * The statement request.\n   *\n   * @param taxRequestTransaction The statement request.\n   */\n  public setTaxRequestTransaction(taxRequestTransaction: Tax1099RequestTransaction) {\n    this.taxRequestTransaction = taxRequestTransaction;\n  }\n\n  // Inherited.\n  public getRequestMessages(): Array<RequestMessage> {\n    var requestMessages: Array<RequestMessage> = new Array<RequestMessage>();\n    if (this.getTaxRequestTransaction() != null) {\n      requestMessages.push(this.getTaxRequestTransaction());\n    }\n    return requestMessages;\n  }\n}\n\nAggregate_add(Tax1099RequestMessageSet, \"TAX1099MSGSRQV1\" );\nChildAggregate_add(Tax1099RequestMessageSet, { order: 0, type: Tax1099RequestTransaction, read: Tax1099RequestMessageSet.prototype.getTaxRequestTransaction, write: Tax1099RequestMessageSet.prototype.setTaxRequestTransaction });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { T1099Response } from \"../common/T1099Response\";\nimport { Tax1099DIV } from \"./Tax1099DIV\";\nimport { Tax1099INT } from \"./Tax1099INT\";\nimport { Tax1099R } from \"./Tax1099R\";\nimport { Tax1099B } from \"./Tax1099B\";\nimport { Tax1099MISC } from \"./Tax1099MISC\";\nimport { Tax1099OID } from \"./Tax1099OID\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\n/**\n * @author Aparna Gawali\n * aparna.gawali@sungard.com\n */\nexport class Tax1099Response extends T1099Response {\n\n\t// private tax1099div: Tax1099DIV;\n\tprivate lstTax1099DIV: Array<Tax1099DIV>;\n\n\tprivate lstTax1099INT: Array<Tax1099INT>;\n\n\tprivate lstTax1099R: Array<Tax1099R>;\n\n\tprivate lstTax1099B: Array<Tax1099B>;\n\n\tprivate lstTax1099MISC: Array<Tax1099MISC>;\n\n\tprivate lstTax1099OID: Array<Tax1099OID>;\n\n\t/**\n\t * @return the lstTax1099DIV\n\t */\n\tpublic getLstTax1099DIV(): Array<Tax1099DIV> {\n\t\treturn this.lstTax1099DIV;\n\t}\n\n\t/**\n\t * @param lstTax1099DIV\n\t *            the lstTax1099DIV to set\n\t */\n    public setLstTax1099DIV(lstTax1099DIV: Array<Tax1099DIV>): void {\n\t\tthis.lstTax1099DIV = lstTax1099DIV;\n\t}\n\n\n\n\tpublic getResponseMessageName(): string {\n\t\treturn \"1099 Tax details\";\n\t}\n\n\t/**\n\t * @return the lstTax1099INT\n\t */\n\tpublic getLstTax1099INT(): Array<Tax1099INT> {\n\t\treturn this.lstTax1099INT;\n\t}\n\n\t/**\n\t * @param lstTax1099INT the lstTax1099INT to set\n\t */\n    public setLstTax1099INT(lstTax1099INT: Array<Tax1099INT>): void {\n\t\tthis.lstTax1099INT = lstTax1099INT;\n\t}\n\n\t/**\n\t * @return the lstTax1099R\n\t */\n\tpublic getLstTax1099R(): Array<Tax1099R> {\n\t\treturn this.lstTax1099R;\n\t}\n\n\t/**\n\t * @param lstTax1099R the lstTax1099R to set\n\t */\n    public setLstTax1099R(lstTax1099R: Array<Tax1099R>): void {\n\t\tthis.lstTax1099R = lstTax1099R;\n\t}\n\n\t/**\n\t * @return the lstTax1099B\n\t */\n\tpublic getLstTax1099B(): Array<Tax1099B> {\n\t\treturn this.lstTax1099B;\n\t}\n\n\t/**\n\t * @param lstTax1099B the lstTax1099B to set\n\t */\n    public setLstTax1099B(lstTax1099B: Array<Tax1099B>): void {\n\t\tthis.lstTax1099B = lstTax1099B;\n\t}\n\n\t/**\n\t * @return the lstTax1099MISC\n\t */\n\tpublic getLstTax1099MISC(): Array<Tax1099MISC> {\n\t\treturn this.lstTax1099MISC;\n\t}\n\n\t/**\n\t * @param lstTax1099MISC the lstTax1099MISC to set\n\t */\n    public setLstTax1099MISC(lstTax1099MISC: Array<Tax1099MISC>): void {\n\t\tthis.lstTax1099MISC = lstTax1099MISC;\n\t}\n\n\t/**\n\t * @return the lstTax1099OID\n\t */\n\tpublic getLstTax1099OID(): Array<Tax1099OID> {\n\t\treturn this.lstTax1099OID;\n\t}\n\n\t/**\n\t * @param lstTax1099OID the lstTax1099OID to set\n\t */\n    public setLstTax1099OID(lstTax1099OID: Array<Tax1099OID>): void {\n\t\tthis.lstTax1099OID = lstTax1099OID;\n\t}\n}\n\nAggregate_add(Tax1099Response, \"TAX1099RS\");\nChildAggregate_add(Tax1099Response, { required: false, order: 0, type: Array, collectionEntryType: Tax1099DIV, read: Tax1099Response.prototype.getLstTax1099DIV, write: Tax1099Response.prototype.setLstTax1099DIV });\nChildAggregate_add(Tax1099Response, { required: false, order: 1, type: Array, collectionEntryType: Tax1099INT, read: Tax1099Response.prototype.getLstTax1099INT, write: Tax1099Response.prototype.setLstTax1099INT });\nChildAggregate_add(Tax1099Response, { required: false, order: 2, type: Array, collectionEntryType: Tax1099R, read: Tax1099Response.prototype.getLstTax1099R, write: Tax1099Response.prototype.setLstTax1099R });\nChildAggregate_add(Tax1099Response, { required: false, order: 3, type: Array, collectionEntryType: Tax1099B, read: Tax1099Response.prototype.getLstTax1099B, write: Tax1099Response.prototype.setLstTax1099B });\nChildAggregate_add(Tax1099Response, { required: false, order: 4, type: Array, collectionEntryType: Tax1099MISC, read: Tax1099Response.prototype.getLstTax1099MISC, write: Tax1099Response.prototype.setLstTax1099MISC });\nChildAggregate_add(Tax1099Response, { required: false, order:5, type: Array, collectionEntryType: Tax1099OID, read: Tax1099Response.prototype.getLstTax1099OID, write: Tax1099Response.prototype.setLstTax1099OID });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TransactionWrappedResponseMessage } from \"../TransactionWrappedResponseMessage\";\nimport { Tax1099Response } from \"./Tax1099Response\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\n/**\n * @author Aparna Gawali\n * aparna.gawali@sungard.com\n */\nexport class Tax1099ResponseTransaction extends TransactionWrappedResponseMessage<Tax1099Response> {\n\n  private tax1099Response: Tax1099Response;\n\n  /**\n   * The tax1099Response.\n   *\n   * @return The tax1099Response.\n   */\n  public getTax1099Response(): Tax1099Response {\n    return this.tax1099Response;\n  }\n\n  /**\n   * The tax1099Response.\n   *\n   * @param tax1099Response The message.\n   */\n  public setTax1099Response(tax1099Response: Tax1099Response): void {\n    this.tax1099Response = tax1099Response;\n  }\n\n  // Inherited.\n  public getWrappedMessage(): Tax1099Response {\n    return this.getTax1099Response();\n  }\n}\n\nAggregate_add(Tax1099ResponseTransaction, \"TAX1099TRNRS\");\nChildAggregate_add(Tax1099ResponseTransaction, { required: false, order: 2, type: Tax1099Response, read: Tax1099ResponseTransaction.prototype.getTax1099Response, write: Tax1099ResponseTransaction.prototype.setTax1099Response });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ResponseMessageSet } from \"../ResponseMessageSet\";\nimport { Tax1099ResponseTransaction } from \"./Tax1099ResponseTransaction\";\nimport { MessageSetType } from \"../MessageSetType\";\nimport { OFXException } from \"../../../OFXException\";\nimport { ResponseMessage } from \"../ResponseMessage\";\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\n\n\n/**\n * @author Aparna Gawali\n * aparna.gawali@sungard.com\n */\nexport class Tax1099ResponseMessageSet extends ResponseMessageSet {\n\n  private taxResponseTransaction: Array<Tax1099ResponseTransaction>;\n\n  public getType(): MessageSetType {\n    return MessageSetType.tax1099;\n  }\n\n  /**\n   * The taxResponseTransaction list.\n   *\n   * Most OFX files have a single statement response, except MT2OFX\n   * which outputs OFX with multiple statement responses\n   * in a single banking response message set.\n   *\n   * @return The taxResponseTransaction list.\n   */\n  public getTaxResponseTransaction(): Array<Tax1099ResponseTransaction> {\n    return this.taxResponseTransaction;\n  }\n\n  /**\n   * The taxResponseTransaction.\n   *\n   * @param taxResponseTransaction The statement responses.\n   */\n  public setTaxResponseTransaction(taxResponseTransaction: Tax1099ResponseTransaction | Array<Tax1099ResponseTransaction>): void {\n    if (taxResponseTransaction instanceof Array) {\n      this.taxResponseTransaction = <Array<Tax1099ResponseTransaction>>taxResponseTransaction;\n    } else if (taxResponseTransaction instanceof Tax1099ResponseTransaction) {\n      this.taxResponseTransaction = [<Tax1099ResponseTransaction>taxResponseTransaction];\n    } else {\n      throw new OFXException(\"invalid type\");\n    }\n  }\n\n  // Inherited.\n  public getResponseMessages(): Array<ResponseMessage> {\n    return this.taxResponseTransaction;\n  }\n\n  /**\n   * The first statement response.\n   *\n   * @return the first bank statement response.\n   * @deprecated Use getStatementResponses() because sometimes there are multiple responses\n   */\n  public getStatementResponse(): Tax1099ResponseTransaction {\n    return this.taxResponseTransaction == null || this.taxResponseTransaction.length == 0 ? null : this.taxResponseTransaction[0];\n  }\n}\n\nAggregate_add(Tax1099ResponseMessageSet, \"TAX1099MSGSRSV1\");\nChildAggregate_add(Tax1099ResponseMessageSet, { order: 0, type: Array, collectionEntryType: Tax1099ResponseTransaction, read: Tax1099ResponseMessageSet.prototype.getTaxResponseTransaction, write: Tax1099ResponseMessageSet.prototype.setTaxResponseTransaction });\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OFXRuntimeException } from '../OFXRuntimeException'\n\n/**\n * Thrown when a required attribute of an aggregate is null or empty.\n *\n * @author Ryan Heaton\n */\nexport class RequiredAttributeException extends OFXRuntimeException {\n\n  constructor(message: string) {\n    super(message);\n  }\n}\n","/*\n * Copyright 2008 Web Cohesion\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Annotation for a method that returns an OFX aggregate.\n *\n * @author Ryan Heaton\n */\nexport class Aggregate {\n  private _value: string;\n\n  constructor(value: string) {\n    this._value = value;\n  }\n\n  /**\n   * The name of the aggregate.\n   *\n   * @return The name of the aggregate.\n   */\n  public value(): string {\n    return this._value;\n  }\n}\n"],"names":["UUID.v1","Aggregate_add","LOG","parser","sax.parser","ofxMapping"],"mappings":";;;AAAA;;;;;;;;;;;;;;;;;;;;AA6BA,MAAa,YAAa,SAAQ,KAAK;IAGrC,YAAY,UAAkB,IAAI,EAAE,IAAW,IAAI;QACjD,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;KACrB;CACF;;ACrCD;;;;;;;;;;;;;;;AAeA,AAEA;;;AAGA,MAAa,mBAAoB,SAAQ,YAAY;IAEnD,YAAY,UAAkB,IAAI;QAChC,KAAK,CAAC,OAAO,CAAC,CAAC;KAChB;CACF;;ACPD;;;;;AAKA,MAAa,kBAAmB,SAAQ,YAAY;IAGlD,YAAY,MAAc,EAAE,OAAe;QACzC,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;IAEM,SAAS;QACf,OAAO,IAAI,CAAC,MAAM,CAAC;KACnB;CACF;;AClCD;;;;;;;;;;;;;;;AAeA,AAGA;;;AAGA,MAAa,uBAAwB,SAAQ,YAAY;IACvD,YAAmB,UAAkB,IAAI;QACvC,KAAK,CAAC,OAAO,CAAC,CAAC;KAChB;CACF;;ACzBD;;;;;;;;;;;;;;;AAeA,AAGA;;;;;AAKA,MAAa,mCAAoC,SAAQ,YAAY;IACnE,YAAY,OAAe;QACzB,KAAK,CAAC,OAAO,CAAC,CAAC;KAChB;CACF;;AC3BD;;;;;;;;;;;;;;;AAeA,AAGA;;;AAGA,MAAa,sBAAuB,SAAQ,YAAY;IAEtD,YAAmB,UAAkB,IAAI;QACvC,KAAK,CAAC,OAAO,CAAC,CAAC;KAChB;CACF;;ACRD;;;;;AAKA,MAAa,yBAAyB;IAKpC,YAAY,KAAa,EAAE,UAAkB;QAC3C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;IAEM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IAEM,aAAa;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;CACF;;ACrBD;;;AAGA,MAAa,2BAA2B;;;;;;IAS/B,OAAO,iBAAiB;;QAE7B,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;;;;;;IAOM,OAAO,iBAAiB,CAAC,OAA8B;QAC5D,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC;KAChC;;AAnBc,2CAAe,GAA0B,IAAI,yBAAyB,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,mDAAmD;;ACxB5J;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAY,cA0BX;AA1BD,WAAY,cAAc;IAExB,uDAAM,CAAA;IAEN,uDAAM,CAAA;IAEN,yDAAO,CAAA;IAEP,+DAAU,CAAA;IAEV,+DAAU,CAAA;IAEV,+EAAkB,CAAA;IAElB,qEAAa,CAAA;IAEb,2DAAQ,CAAA;IAER,qDAAK,CAAA;IAEL,iFAAmB,CAAA;IAEnB,0DAAO,CAAA;IAEP,0DAAO,CAAA;CAER,EA1BW,cAAc,KAAd,cAAc,QA0BzB;;AChDD;;;;;;;;;;;;;;;;;;;;AAqBA,IAAY,WAUX;AAVD,WAAY,WAAW;IAErB,qDAAQ,CAAA;IAER,mDAAO,CAAA;IAEP,uDAAS,CAAA;IAET,yDAAU,CAAA;CAEX,EAVW,WAAW,KAAX,WAAW,QAUtB;;MC9BY,GAAG;IAIf;QACC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;KAC1B;IAEM,cAAc,CAAC,KAAc;QACnC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;KACzB;IAEM,aAAa;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC;KACxB;IAEM,IAAI,CAAC,GAAG,KAAoB;QAClC,IAAG,IAAI,CAAC,aAAa,EAAE,EAAE;YACxB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SACnB;KACD;IAEM,eAAe,CAAC,KAAc;QACpC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;KAC1B;IAEM,cAAc;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KACzB;IAEM,KAAK,CAAC,GAAG,KAAoB;QACnC,IAAG,IAAI,CAAC,cAAc,EAAE,EAAE;YACzB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SACnB;KACD;IAEM,OAAO,CAAC,GAAG,KAAoB;QACrC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;KACnB;IAEM,KAAK,CAAC,GAAG,KAAoB;QACnC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;KACnB;CACD;AAGD,MAAa,UAAU;IAEtB,OAAO,MAAM,CAAC,KAAU;QACvB,IAAG,CAAC,KAAK,CAAC,GAAG,EAAE;YACd,KAAK,CAAC,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC;SACtB;QAED,OAAO,KAAK,CAAC,GAAG,CAAC;KACjB;CACD;;MCnDY,SAAS;IAKrB,YAAY,UAAyB;QACpC,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC7B;IAED,MAAM;QACL,IAAG,CAAC,IAAI,CAAC,QAAQ,EAAE;YACT,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACtC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACrB;QACD,OAAO,IAAI,CAAC,UAAU,CAAC;KACvB;IAED,MAAM,CAAC,OAAU;QAChB,IAAI,KAAK,GAAW,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACrD,IAAG,KAAK,IAAI,CAAC,CAAC,EAAE;YACf,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC9B;KACD;IAED,IAAI,CAAC,OAAU;QACd,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;KACrB;IAED,MAAM,CAAC,OAAU;QAChB,IAAI,KAAK,GAAW,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACrD,IAAG,KAAK,IAAI,CAAC,CAAC,EAAE;YACf,OAAO,KAAK,CAAC;SACb;QACD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;KACnD;IAED,KAAK;QACJ,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;KAC9B;CACD;;AChDD;;;AAGA,SAAgB,QAAQ,CAAI,KAAQ,EAAE,YAAe;IACnD,OAAO,CAAC,OAAO,KAAK,KAAK,WAAW,IAAI,KAAK,GAAG,YAAY,CAAC;CAC9D;AAGD,SAAgB,gBAAgB,CAAC,SAAc,EAAE,YAAiB;IAChE,OAAO,CAAC,YAAY,KAAK,SAAS;SAC/B,CAAC,OAAO,SAAS,KAAK,UAAU,MAAM,YAAY,CAAC,SAAS,YAAY,SAAS,CAAC,CAAC,CAAC;CACxF;AAAA,AA6BD;;;AAGA,MAAsB,kBAAkB;IAKvC,YAAY,MAAqC;QAChD,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC;QAChC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC;KAChC;IAEM,eAAe;QACrB,OAAO,IAAI,CAAC,YAAY,CAAC;KACzB;IAEM,aAAa;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC;KACvB;IAEM,cAAc;QACpB,OAAO,IAAI,CAAC,WAAW,CAAC;KACxB;CACD;;ACjED;;;;;;;;;;;;;;;AAeA,AAWA;;;;;AAKA,MAAa,cAAe,SAAQ,kBAAkB;IAMpD,YAAY,MAAiC;QAC3C,KAAK,CAAC,MAAM,CAAC,CAAC;QACd,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC;QAC3B,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;QACxD,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QAClD,IAAI,CAAC,oBAAoB,GAAG,QAAQ,CAAC,MAAM,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;KACxE;;;;;;IAOM,IAAI;QACT,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;IAOM,QAAQ;QACb,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;IAOM,KAAK;QACV,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;;;IAKM,mBAAmB;QACxB,OAAO,IAAI,CAAC,oBAAoB,CAAC;KAClC;CACF;;AC9ED;;;;;;;;;;;;;;;AAeA,AAWA;;;;;AAKA,MAAa,OAAQ,SAAQ,kBAAkB;IAM7C,YAAY,MAA0B;QACpC,KAAK,CAAC,MAAM,CAAC,CAAC;QACd,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QAClD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC;QAC3B,IAAI,CAAC,oBAAoB,GAAG,QAAQ,CAAC,MAAM,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;KACxE;;;;;;IAOM,IAAI;QACT,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;IAOM,QAAQ;QACb,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;IAOM,KAAK;QACV,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;;;IAKM,mBAAmB;QACxB,OAAO,IAAI,CAAC,oBAAoB,CAAC;KAClC;CACF;;AC9ED;;;;;;;;;;;;;;;AAeA,AAQA;;AAIA,IAAY,sBAMX;AAND,WAAY,sBAAsB;IAEhC,yFAAe,CAAA;IAEf,yEAAO,CAAA;CAER,EANW,sBAAsB,KAAtB,sBAAsB,QAMjC;;;;;;AAQD,MAAa,kBAAkB;IAa7B,YAAY,GAA6B;QACvC,IAAG,GAAG,YAAY,OAAO,EAAE;YACzB,IAAI,CAAC,6BAA6B,CAAC,GAAG,CAAC,CAAC;SACzC;aAAM,IAAG,GAAG,YAAY,cAAc,EAAE;YACvC,IAAI,CAAC,oCAAoC,CAAC,GAAG,CAAC,CAAC;SAChD;aAAM;YACL,MAAM,IAAI,YAAY,CAAC,cAAc,CAAC,CAAC;SACxC;KACF;IAED,6BAA6B,CAAC,WAAoB;QAChD,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC,aAAa,EAAE,CAAC;QAC9C,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,cAAc,EAAE,CAAC;QAChD,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,EAAE;YAC3B,MAAM,IAAI,YAAY,CAAC,iDAAiD,CAAC,CAAC;SAC3E;aACI,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,EAAE;YACjC,MAAM,IAAI,YAAY,CAAC,kDAAkD,CAAC,CAAC;SAC5E;QAED,IAAI,CAAC,aAAa,GAAG,WAAW,CAAC,eAAe,EAAE,CAAC;QACnD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAChC,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC;QAC/B,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,EAAE,CAAC;QACjC,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC,QAAQ,EAAE,CAAC;QACvC,IAAI,CAAC,IAAI,GAAG,sBAAsB,CAAC,OAAO,CAAC;QAC3C,IAAI,CAAC,SAAS,GAAG,WAAW,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAC/C,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;;KAGzB;IAED,oCAAoC,CAAC,cAA8B;QACjE,IAAI,CAAC,UAAU,GAAG,cAAc,CAAC,aAAa,EAAE,CAAC;QACjD,IAAI,CAAC,WAAW,GAAG,cAAc,CAAC,cAAc,EAAE,CAAC;QACnD,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,EAAE;YAC3B,MAAM,IAAI,YAAY,CAAC,iDAAiD,CAAC,CAAC;SAC3E;aACI,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,EAAE;YACjC,MAAM,IAAI,YAAY,CAAC,kDAAkD,CAAC,CAAC;SAC5E;QAED,IAAI,CAAC,aAAa,GAAG,cAAc,CAAC,eAAe,EAAE,CAAC;QACtD,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,cAAc,CAAC,mBAAmB,EAAE,EAAE;YACxC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,mBAAmB,GAAG,cAAc,CAAC,mBAAmB,EAAE,CAAC;SACjE;aACI,IAAI,mBAAmB,KAAK,cAAc,CAAC,IAAI,EAAE,EAAE;YACtD,IAAI,aAAa,GAAkB,qBAAqB,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAC9F,IAAI,aAAa,IAAI,IAAI,EAAE;gBACzB,MAAM,IAAI,YAAY,CAAC,gCAAgC,GAAG,cAAc,CAAC,eAAe,EAAE,GAAG,wCAAwC,CAAC,CAAC;aACxI;YAED,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC,OAAO,EAAE,CAAC;YACpC,IAAI,mBAAmB,KAAK,IAAI,CAAC,IAAI,EAAE;gBACrC,MAAM,IAAI,YAAY,CAAC,gCAAgC,GAAG,cAAc,CAAC,eAAe,EAAE,GAAG,8CAA8C,CAAC,CAAC;aAC9I;YACD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;SACjC;aACI;YACH,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC,IAAI,EAAE,CAAC;YAClC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;SACjC;QAED,IAAI,CAAC,KAAK,GAAG,cAAc,CAAC,KAAK,EAAE,CAAC;QACpC,IAAI,CAAC,QAAQ,GAAG,cAAc,CAAC,QAAQ,EAAE,CAAC;QAC1C,IAAI,CAAC,IAAI,GAAG,sBAAsB,CAAC,eAAe,CAAC;QACnD,IAAI,CAAC,SAAS,GAAG,kBAAkB,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;KACvD;IAEM,GAAG,CAAC,QAAgB;QACzB,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACzC,IAAI,IAAI,CAAC,aAAa,IAAI,GAAG,IAAI,IAAI,CAAC,aAAa,EAAE;YACnD,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAA;SAC9B;QACD,OAAO,GAAG,CAAC;KACZ;IAEM,GAAG,CAAC,KAAU,EAAE,QAAgB;QACrC,IAAG,IAAI,CAAC,UAAU,EAAE;YAClB,IAAI,UAAU,GAAkB,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACnD,IAAI,UAAU,IAAI,IAAI,EAAE;gBACtB,IAAG,IAAI,CAAC,aAAa,KAAK,SAAS,EAAE;oBACnC,OAAO,CAAC,MAAM,CAAC,gBAAgB,IAAI,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7D,UAAU,GAAQ,IAAI,SAAS,CAAO,IAAI,CAAC,mBAAoB,CAAC,cAAc,CAAC,CAAC;iBACjF;qBAAM;oBACL,UAAU,GAAG,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;iBACvC;aACF;YACD,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACvB,KAAK,GAAG,UAAU,CAAC;SACpB;QAED,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;KACxC;IAEM,gBAAgB;QACrB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;IAEM,iBAAiB;QACtB,OAAO,IAAI,CAAC,mBAAmB,CAAC;KACjC;IAEM,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;IAEM,UAAU;QACf,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IAEM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IAEM,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;IAEM,OAAO,cAAc,CAAC,IAAwB,EAAE,KAAyB;QAC9E,OAAO,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;KACjC;;;;IAMM,OAAO;QACZ,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;IAGM,QAAQ;QACb,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;CACF;;AChMD;;;;;;;;;;;;;;;AAeA,AAeA;;;;;AAKA,MAAa,aAAa;IAOxB,YAAY,IAAY,EAAE,KAAU,EAAE,UAA0B;QAC9D,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,UAAU,GAAG,IAAI,SAAS,CAAqB,kBAAkB,CAAC,cAAc,CAAC,CAAC;QAEvF,IAAG,UAAU,EAAE;YACb,KAAI,IAAI,MAAM,IAAI,UAAU,CAAC,OAAO,EAAE;gBACpC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;aACnD;YACD,IAAI,gBAAgB,GAA8B,UAAU,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;YACjF,KAAI,IAAI,CAAC,IAAI,gBAAgB,EAAE;gBAC7B,IAAI,SAAS,GAAuB,gBAAgB,CAAC,CAAC,CAAC,CAAC;gBACxD,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;aACnC;SACF;KACF;;;;;;IAOM,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;IAEM,OAAO,CAAC,IAAY;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;IAEM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;IAOM,aAAa;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;;;;;;;;;IAeM,YAAY,CAAC,IAAY,EAAE,SAAiB,EAAE,eAAoB,IAAI;QAC3E,IAAI,UAAU,GAA8B,IAAI,KAAK,EAAsB,CAAC;QAC5E,IAAI,gBAAgB,GAAuB,IAAI,CAAC;QAChD,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,EAAE;YACtC,IAAI,SAAS,GAAuB,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;YAChE,IAAI,IAAI,KAAK,SAAS,CAAC,OAAO,EAAE,EAAE;gBAChC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aAC5B;iBACI,IAAI,SAAS,CAAC,OAAO,EAAE,EAAE;gBAC5B,IAAI,YAAY,IAAI,IAAI,EAAE;;oBAExB,IAAI,SAAS,GAAQ,SAAS,CAAC,iBAAiB,EAAE,CAAC;oBACnD,IAAI,SAAS,IAAI,IAAI,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,YAAY,CAAC,EAAE;;wBAEnE,SAAS;qBACV;iBACF;gBACD,IAAI,gBAAgB,IAAI,IAAI,IAAI,gBAAgB,CAAC,QAAQ,EAAE,GAAG,SAAS,EAAE;;oBAEvE,gBAAgB,GAAG,SAAS,CAAC;iBAC9B;aACF;SACF;QAED,IAAI,UAAU,CAAC,MAAM,IAAI,CAAC,EAAE;YAC1B,IAAI,UAAU,CAAC,MAAM,IAAI,CAAC,EAAE;gBAC1B,OAAO,UAAU,CAAC,CAAC,CAAC,CAAC;aACtB;iBACI;gBACH,KAAK,IAAI,SAAS,IAAI,UAAU,EAAE;oBAChC,IAAI,SAAS,CAAC,QAAQ,EAAE,IAAI,SAAS,EAAE;wBACrC,OAAO,SAAS,CAAC;qBAClB;iBACF;aACF;SACF;QAED,OAAO,gBAAgB,CAAC;KACzB;;;;;;IAOM,UAAU;QACf,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC;KAC9C;;;;;;;IAQM,UAAU,CAAC,QAAgB;QAChC,IAAI,OAAO,GAAiB,EAAE,CAAC;QAC/B,KAAK,IAAI,SAAS,IAAI,IAAI,CAAC,OAAO,EAAE;YAClC,IAAI,MAAM,GAAW,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YAC7C,IAAI,WAAW,GAAW,MAAM,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAChE,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,GAAG,WAAW,CAAC;SACtC;QACD,OAAO,OAAO,CAAC;KAChB;;;;;;;IAQM,aAAa,CAAC,IAAY;QAC/B,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,GAAG,IAAI,CAAC;KAC7E;;;;;;;;IASM,SAAS,CAAC,QAAgB,EAAE,IAAY,EAAE,KAAa;QAC5D,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;YACxB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;SAC3D;KACF;IAGM,iBAAiB,CAAC,cAA8B;QACrD,IAAI,SAAS,GAAG,IAAI,kBAAkB,CAAC,cAAc,CAAC,CAAC;QACvD,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;KACnC;IAEM,UAAU,CAAC,OAAgB;QAChC,IAAI,SAAS,GAAG,IAAI,kBAAkB,CAAC,OAAO,CAAC,CAAC;QAChD,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;KACnC;IAEM,SAAS,CAAC,MAAc;QAC7B,OAAO,CAAC,MAAM,CAAe,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;QAC5C,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,GAAG,MAAM,CAAC;KACtC;CACF;;ACpLD;;AAGA,IAAI,GAAQ,CAAC;;;;;;AAOb,MAAa,qBAAqB;;;;;;;IAWzB,OAAO,gBAAgB,CAAC,KAAU;QACvC,IAAI,SAAS,GAAkB,KAAK,CAAC,SAAS,CAAC;QAC/C,IAAG,SAAS,IAAI,IAAI,IAAI,SAAS,CAAC,QAAQ,EAAE,KAAK,KAAK,EAAE;YACtD,OAAO,SAAS,CAAC;SAClB;aAAM;YACL,OAAO,IAAI,CAAC;SACb;KACF;IAEO,OAAO,wBAAwB,CAAC,KAAe;;QAErD,KAAI,IAAI,KAAK,GAAa,KAAK,CAAC,SAAS,EAAE,KAAK,EAAE,KAAK,GAAG,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;YACtF,IAAS,KAAM,CAAC,WAAW,IAAU,KAAM,CAAC,WAAW,CAAC,SAAS,EAAE;gBACjE,OAAa,KAAM,CAAC,WAAW,CAAC,SAAS,CAAC;aAC3C;SACF;QACD,OAAO,IAAI,CAAC;KACb;;;;;;;IAQM,OAAO,mBAAmB,CAAC,aAAqB;QACrD,OAAO,qBAAqB,CAAC,yBAAyB,CAAC,aAAa,CAAC,CAAC;KACvE;IAEM,OAAO,YAAY,CAAC,KAAU,EAAE,IAAY;QACjD,qBAAqB,CAAC,yBAAyB,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;QAE9D,IAAI,aAAa,GAAkB,qBAAqB,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QACjF,IAAG,aAAa,EAAE;YAChB,OAAO,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,EAAE,KAAK,qBAAqB,CAAC,eAAe,CAAC,CAAC;YAClF,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SAC7B;aAAM;YACL,IAAI,UAAU,GAAkB,qBAAqB,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC;YACtF,KAAK,CAAC,SAAS,GAAG,IAAI,aAAa,CAAC,IAAI,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC;SAC9D;KACF;IAEM,OAAO,iBAAiB,CAAC,KAAU,EAAE,cAA8B;QACxE,IAAI,aAAa,GAAkB,qBAAqB,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QACjF,IAAG,CAAC,aAAa,EAAE;YACjB,IAAI,UAAU,GAAkB,qBAAqB,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC;YACtF,aAAa,GAAG,KAAK,CAAC,SAAS,GAAG,IAAI,aAAa,CAAC,qBAAqB,CAAC,eAAe,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC;SAC/G;QACD,OAAO,CAAC,MAAM,CAAC,aAAa,IAAI,IAAI,CAAC,CAAC;QACtC,IAAG,aAAa,EAAE;YAChB,aAAa,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC;SACjD;KACF;IAEM,OAAO,UAAU,CAAC,KAAU,EAAE,OAAgB;QACnD,IAAI,aAAa,GAAkB,qBAAqB,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QACjF,IAAG,CAAC,aAAa,EAAE;YACjB,IAAI,UAAU,GAAkB,qBAAqB,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC;YACtF,aAAa,GAAG,KAAK,CAAC,SAAS,GAAG,IAAI,aAAa,CAAC,qBAAqB,CAAC,eAAe,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC;SAC/G;QACD,OAAO,CAAC,MAAM,CAAC,aAAa,IAAI,IAAI,CAAC,CAAC;QACtC,IAAG,aAAa,EAAE;YAChB,aAAa,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;SACnC;KACF;IAEM,OAAO,SAAS,CAAC,KAAU,EAAE,MAAc;QAChD,IAAI,aAAa,GAAG,qBAAqB,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAClE,IAAG,CAAC,aAAa,EAAE;YACjB,IAAI,UAAU,GAAkB,qBAAqB,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC;YACtF,aAAa,GAAG,KAAK,CAAC,SAAS,GAAG,IAAI,aAAa,CAAC,qBAAqB,CAAC,eAAe,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC;SAC/G;QACD,OAAO,CAAC,MAAM,CAAC,aAAa,IAAI,IAAI,CAAC,CAAC;QACtC,IAAG,aAAa,EAAE;YAChB,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;SACjC;KACF;;AArFc,+CAAyB,GAAW,EAAE,CAAC;AACvC,qCAAe,GAAG,iBAAiB,CAAC;AAuFrD,GAAG,GAAG,UAAU,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC;;AC1H/C;;;;;;;;;;;;;;;AAeA,SAEgB,aAAa,CAAC,KAAa,EAAE,QAAgB,WAAW;IACtE,qBAAqB,CAAC,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;CAClD;;ACnBD;;;;;;;;;;;;;;;AAeA,SAIgB,WAAW,CAAO,KAAU,EAAE,MAA2B;IACvE,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC;IACpC,qBAAqB,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;CAC9D;;ACDD;;;;;;AAMA,MAAa,kBAAkB;;;;;;IAatB,SAAS;QACd,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;;;;;IAOM,SAAS,CAAC,MAAc;QAC7B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;IAOM,gBAAgB;QACrB,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC;KACzB;;;;;;IAOM,gBAAgB,CAAC,aAAqB;QAC3C,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;KAC/B;;;;;;IAOM,WAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;IAOM,WAAW,CAAC,QAAgB;QACjC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;;;;;;IAOM,gBAAgB;QACrB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;;;;;;IAOM,gBAAgB,CAAC,aAAqB;QAC3C,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;KACpC;;;;;;IAOM,cAAc;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;;;;;IAOM,cAAc,CAAC,WAAwB;QAC5C,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAChC;;;;;;IAOM,aAAa;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;IAOM,aAAa,CAAC,UAAkB;QACrC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;CACF;AAED,aAAa,CAAE,kBAAkB,CAAE,CAAC;AACpC,WAAW,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,SAAS,EAAE,KAAK,EAAE,kBAAkB,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,CAAC;AACzL,WAAW,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,kBAAkB,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AAChL,WAAW,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,gBAAgB,EAAE,KAAK,EAAE,kBAAkB,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC,CAAC;AACxM,WAAW,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,EAAE,kBAAkB,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,CAAC;AAC3M,WAAW,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,kBAAkB,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;;ACjInL;;;;;AAKA,MAAa,wBAAwB;;;;;;IAU5B,gBAAgB;QACrB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;;;;;;IAOM,gBAAgB,CAAC,aAAqB;QAC3C,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;KACpC;;;;;;IAOM,aAAa;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;IAOM,aAAa,CAAC,UAAkB;QACrC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;CACF;AAED,aAAa,CAAE,wBAAwB,CAAE,CAAC;AAC1C,WAAW,CAAC,wBAAwB,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,wBAAwB,CAAC,SAAS,CAAC,gBAAgB,EAAE,KAAK,EAAE,wBAAwB,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC,CAAC;AACzN,WAAW,CAAC,wBAAwB,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,wBAAwB,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,wBAAwB,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;;ACjDrM;;;;;;AAMA,MAAa,wBAAwB;;;;;;IAY5B,WAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;IAOM,WAAW,CAAC,QAAgB;QACjC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;;;;;;IAOM,gBAAgB;QACrB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;;;;;;IAOM,gBAAgB,CAAC,aAAqB;QAC3C,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;KACpC;;;;;;IAOM,aAAa;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;IAOM,aAAa,CAAC,UAAkB;QACrC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;CACF;AAED,aAAa,CAAE,wBAAwB,CAAE,CAAC;AAC1C,WAAW,CAAC,wBAAwB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,wBAAwB,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,wBAAwB,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AACjN,WAAW,CAAC,wBAAwB,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,wBAAwB,CAAC,SAAS,CAAC,gBAAgB,EAAE,KAAK,EAAE,wBAAwB,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC,CAAC;AAC1N,WAAW,CAAC,wBAAwB,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,wBAAwB,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,wBAAwB,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;;AC3FrM;;;;;;;;;;;;;;;AAeA,AAIA;;;AAGA,MAAa,cAAc;IAMzB;QACE,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;KACjC;;;;;;IAOM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;IAOM,QAAQ,CAAC,KAAW;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;;;;;;IAOM,MAAM;QACX,OAAO,IAAI,CAAC,GAAG,CAAC;KACjB;;;;;;IAOM,MAAM,CAAC,GAAS;QACrB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;KAChB;;;;;;IAOM,sBAAsB;QAC3B,OAAO,IAAI,CAAC,mBAAmB,CAAC;KACjC;;;;;;IAOM,sBAAsB,CAAC,mBAA4B;QACxD,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;KAChD;CACF;AAED,aAAa,CAAE,cAAc,EAAE,SAAS,CAAE,CAAC;AAC3C,WAAW,CAAC,cAAc,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,cAAc,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC1J,WAAW,CAAC,cAAc,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,cAAc,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC;AACrJ,WAAW,CAAC,cAAc,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,cAAc,CAAC,SAAS,CAAC,sBAAsB,EAAE,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,sBAAsB,EAAE,CAAC,CAAC;;ACzD1M;;;;;AAKA,MAAsB,eAAe;IAQnC,YAAY,OAAU,EAAE,QAAgB,EAAE,QAAgB,EAAE,WAAqC;QAC/F,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;KACpD;;;;;;;IAQS,iBAAiB,CAAC,OAAU;QACpC,IAAI,WAA2B,CAAC;QAChC,IAAI,OAAO,YAAY,kBAAkB,EAAE;YACzC,WAAW,GAAG,cAAc,CAAC,OAAO,CAAC;SACtC;aACI,IAAI,IAAI,CAAC,UAAU,EAAE,YAAY,wBAAwB,EAAE;YAC9D,WAAW,GAAG,cAAc,CAAC,UAAU,CAAC;SACzC;aACI,IAAI,IAAI,CAAC,UAAU,EAAE,YAAY,wBAAwB,EAAE;YAC9D,WAAW,GAAG,cAAc,CAAC,UAAU,CAAC;SACzC;aACI;YACH,MAAM,IAAI,YAAY,CAAC,iBAAiB,CAAC,CAAC;SAC3C;QACD,OAAO,WAAW,CAAC;KACpB;IAEM,aAAa,CAAC,KAAW,EAAE,GAAS;QACzC,IAAI,KAAK,GAAmB,IAAI,cAAc,EAAE,CAAC;QACjD,KAAK,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;QACnC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACtB,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAElB,IAAI,OAAO,GAAoB,IAAI,CAAC,WAAW,CAAC,0BAA0B,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACzG,IAAI,kBAAkB,GAAqD,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACpG,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC;QAC5F,OAAO,CAAC,cAAc,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,uBAAuB,CAAC,kBAAkB,CAAC,CAAC,CAAC;QAElF,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,OAAO,CAAC;aAC3C,IAAI,CAAC,CAAC,QAA0B;YAC/B,IAAI,CAAC,WAAW,CAAC,yBAAyB,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;YAE9D,OAAO,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;SAC/C,CAAC,CAAC;KACJ;;;;;;IAuCM,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;IAOS,cAAc;QACtB,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;CACF;;AC9ID;;;;;;;;;;;;;;;;;;;;AAqBA,MAAsB,iBAAiB;IAMrC;QACE,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;KACpB;;;;;;IAOM,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;IAOM,UAAU,CAAC,OAAe;QAC/B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;;;;;IAcM,OAAO,cAAc,CAAC,IAAuB,EAAE,KAAwB;QAC5E,OAAO,IAAI,CAAC,OAAO,EAAE,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC;KACzC;CAEF;;ACpED;;;;;;;;;;;;;;;;;;;;AAqBA,MAAsB,cAAc;CACnC;;ACtBD;;;;;;;;;;;;;;;AAeA,AAIA;;;;;;AAMA,MAAsB,gCAA2D,SAAQ,cAAc;IAMrG,YAAY,MAAcA,EAAO,EAAE;QACjC,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;KAChB;;;;;;IAOM,MAAM;QACX,OAAO,IAAI,CAAC,GAAG,CAAC;KACjB;;;;;;IAOM,MAAM,CAAC,GAAW;QACvB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;KAChB;;;;;;IAOM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;IAOM,eAAe,CAAC,YAAoB;QACzC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;;;;;;IAOM,iCAAiC;QACtC,OAAO,IAAI,CAAC,8BAA8B,CAAC;KAC5C;;;;;;IAOM,iCAAiC,CAAC,8BAAsC;QAC7E,IAAI,CAAC,8BAA8B,GAAG,8BAA8B,CAAC;KACtE;CASF;AAED,WAAW,CAAC,gCAAgC,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,gCAAgC,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE,gCAAgC,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC;AAC7N,WAAW,CAAC,gCAAgC,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,gCAAgC,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,gCAAgC,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;AACnO,WAAW,CAAC,gCAAgC,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,gCAAgC,CAAC,SAAS,CAAC,iCAAiC,EAAE,KAAK,EAAE,gCAAgC,CAAC,SAAS,CAAC,iCAAiC,EAAE,CAAC,CAAC;;ACrGjQ;;;;;;;;;;;;;;;AAeA,SAGgB,kBAAkB,CAAO,KAAU,EAAE,MAAkC;IACrF,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC;IACpC,qBAAqB,CAAC,iBAAiB,CAAC,KAAK,EAAE,IAAI,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;CAC5E;;ACrBD;;;;;;;;;;;;;;;AAeA,AAMA;;;AAGA,MAAa,gBAAiB,SAAQ,cAAc;;;;;;IAS3C,iBAAiB;QACtB,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;;;;;;IAOM,iBAAiB,CAAC,cAA8B;QACrD,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;KACtC;CACF;AAED,aAAa,CAAE,gBAAgB,EAAE,QAAQ,CAAE,CAAC;AAC5C,kBAAkB,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,gBAAgB,CAAC,SAAS,CAAC,iBAAiB,EAAE,KAAK,EAAE,gBAAgB,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC,CAAC;;AChDrN;;;;;;;;;;;;;;;AAeA,AAMA;;;AAGA,MAAa,oBAAqB,SAAQ,gBAAgB;;;;;;IASjD,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;IAOM,UAAU,CAAC,OAA2B;QAC3C,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;CAEF;AAED,aAAa,CAAE,oBAAoB,EAAE,QAAQ,CAAE,CAAC;AAChD,kBAAkB,CAAC,oBAAoB,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,kBAAkB,EAAE,IAAI,EAAE,oBAAoB,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,oBAAoB,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;;ACjD1N;;;;;;;;;;;;;;;AAeA,AAMA;;;AAGA,MAAa,+BAAgC,SAAQ,gCAAsD;;;;;;IASlG,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;;IAQM,UAAU,CAAC,OAA6B;QAC7C,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;;IAGM,iBAAiB,CAAC,OAA6B;QACpD,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;KAC1B;CACF;AAED,aAAa,CAAE,+BAA+B,EAAE,WAAW,CAAE,CAAC;AAC9D,kBAAkB,CAAC,+BAA+B,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,oBAAoB,EAAE,IAAI,EAAE,+BAA+B,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,+BAA+B,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;;ACtDxO;;;;;;;;;;;;;;;AAeA,AAQA;;;AAGA,MAAa,wBAAyB,SAAQ,iBAAiB;IAItD,OAAO;QACZ,OAAO,cAAc,CAAC,OAAO,CAAC;KAC/B;;;;;;IAOM,mBAAmB;QACxB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;;;;;;IAOM,mBAAmB,CAAC,gBAAiD;QAC1E,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;KAC1C;;IAGM,kBAAkB;QACvB,IAAI,eAAe,GAA0B,EAAE,CAAC;QAChD,IAAI,IAAI,CAAC,mBAAmB,EAAE,IAAI,IAAI,EAAE;YACtC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC;SAClD;QACD,OAAO,eAAe,CAAC;KACxB;CACF;AAED,aAAa,CAAE,wBAAwB,EAAE,cAAc,CAAE,CAAC;AAC1D,kBAAkB,CAAC,wBAAwB,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,+BAA+B,EAAE,IAAI,EAAE,wBAAwB,CAAC,SAAS,CAAC,mBAAmB,EAAE,KAAK,EAAE,wBAAwB,CAAC,SAAS,CAAC,mBAAmB,EAAE,CAAC,CAAC;;AC/D/N;;;;;;;;;;;;;;;AAeA,AAqBA;;;AAGA,MAAa,kBAAmB,SAAQ,eAAmC;IAEzE,YAAY,OAA2B,EAAE,QAAgB,EAAE,QAAgB,EAAE,WAAqC;QAChH,KAAK,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC;KACjD;IAES,uBAAuB,CAAC,QAA0B;QAC1D,IAAI,UAAU,GAA0D,QAAQ,CAAC,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QACvH,IAAI,UAAU,IAAI,IAAI,EAAE;YACtB,MAAM,IAAI,YAAY,CAAC,kCAAkC,CAAC,CAAC;SAC5D;QAED,IAAI,4BAA4B,GAAqC,UAAU,CAAC,oBAAoB,EAAE,CAAC;QACvG,IAAI,4BAA4B,IAAI,IAAI,EAAE;YACxC,MAAM,IAAI,YAAY,CAAC,4CAA4C,CAAC,CAAC;SACtE;QAED,IAAI,SAAS,GAA0B,4BAA4B,CAAC,UAAU,EAAE,CAAC;QACjF,IAAI,SAAS,IAAI,IAAI,EAAE;YACrB,MAAM,IAAI,YAAY,CAAC,0CAA0C,CAAC,CAAC;SACpE;QAED,OAAO,SAAS,CAAC;KAClB;IAES,uBAAuB,CAAC,WAA6D;QAC7F,IAAI,cAAc,GAA6B,IAAI,wBAAwB,EAAE,CAAC;QAC9E,cAAc,CAAC,mBAAmB,CAAmC,WAAW,CAAC,CAAC;QAClF,OAAO,cAAc,CAAC;KACvB;IAES,iBAAiB;QACzB,OAAO,IAAI,+BAA+B,EAAE,CAAC;KAC9C;IAES,sBAAsB,CAAC,OAA2B,EAAE,KAAqB;QACjF,IAAI,WAAW,GAAyB,IAAI,oBAAoB,EAAE,CAAC;QACnE,WAAW,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QAChC,WAAW,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;QACrC,OAAO,WAAW,CAAC;KACpB;CAEF;;AC/DD;;;;;;AAOA,MAAa,4BAA4B;IASvC,YAAmB,EAAW;QAC5B,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;KACd;IAEM,KAAK;QACV,OAAO,IAAI,CAAC,EAAE,CAAC;KAChB;IAEM,KAAK,CAAC,EAAU;QACrB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;KACd;IAEM,yBAAyB;QAC9B,OAAO,IAAI,CAAC,GAAG,CAAC;KACjB;IAEM,yBAAyB,CAAC,EAAU;QACzC,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;KACf;IAEM,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;IAEM,OAAO,CAAC,IAAY;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;IAEM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;IAEM,eAAe,CAAC,YAAoB;QACzC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;IAEM,SAAS;QACd,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IAEM,SAAS,CAAC,MAAc;QAC7B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;IAEM,WAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IAEM,WAAW,CAAC,QAAgB;QACjC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;CACF;;ACrFD;;;;;;;;;;;;;;;AAeA,AAMA;;;AAGA,MAAa,0BAA2B,SAAQ,gBAAgB;;;;;;IASvD,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;IAOM,UAAU,CAAC,OAAiC;QACjD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;CACF;AAED,aAAa,CAAE,0BAA0B,EAAE,UAAU,CAAE,CAAC;AACxD,kBAAkB,CAAC,0BAA0B,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,wBAAwB,EAAE,IAAI,EAAE,0BAA0B,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,0BAA0B,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;;AChDhP;;;;;;;;;;;;;;;AAeA,AAMA;;;AAGA,MAAa,qCAAsC,SAAQ,gCAA4D;;;;;;IAS9G,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;;IAQM,UAAU,CAAC,OAAmC;QACnD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;;IAGM,iBAAiB,CAAC,OAAmC;QAC1D,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;KAC1B;CACF;AAED,aAAa,CAAE,qCAAqC,EAAE,aAAa,CAAE,CAAC;AACtE,kBAAkB,CAAC,qCAAqC,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,0BAA0B,EAAE,IAAI,EAAE,qCAAqC,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,qCAAqC,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;;ACtDhQ;;;;;;;;;;;;;;;AAeA,AAQA;;;;;AAMA,MAAa,2BAA4B,SAAQ,iBAAiB;IAIzD,OAAO;QACZ,OAAO,cAAc,CAAC,UAAU,CAAC;KAClC;;;;;;IAOM,mBAAmB;QACxB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;;;;;;IAOM,mBAAmB,CAAC,gBAAuD;QAChF,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;KAC1C;;IAGM,kBAAkB;QACvB,IAAI,eAAe,GAA0B,EAAE,CAAC;QAChD,IAAI,IAAI,CAAC,mBAAmB,EAAE,IAAI,IAAI,EAAE;YACtC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC;SAClD;QACD,OAAO,eAAe,CAAC;KACxB;CACF;AAED,aAAa,CAAE,2BAA2B,EAAE,oBAAoB,CAAE,CAAC;AACnE,kBAAkB,CAAC,2BAA2B,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,qCAAqC,EAAE,IAAI,EAAE,2BAA2B,CAAC,SAAS,CAAC,mBAAmB,EAAE,KAAK,EAAE,2BAA2B,CAAC,SAAS,CAAC,mBAAmB,EAAE,CAAC,CAAC;;AClE9O;;;;;;;;;;;;;;;AAeA,AAqBA;;;AAGA,MAAa,qBAAsB,SAAQ,eAAyC;IAElF,YAAY,OAAiC,EAAE,QAAgB,EAAE,QAAgB,EAAE,WAAqC;QACtH,KAAK,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC;KACjD;IAES,uBAAuB,CAAC,QAA0B;QAC1D,IAAI,aAAa,GAAgE,QAAQ,CAAC,aAAa,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;QACnI,IAAI,aAAa,IAAI,IAAI,EAAE;YACzB,MAAM,IAAI,YAAY,CAAC,sCAAsC,CAAC,CAAC;SAChE;QAED,IAAI,4BAA4B,GAA2C,aAAa,CAAC,oBAAoB,EAAE,CAAC;QAChH,IAAI,4BAA4B,IAAI,IAAI,EAAE;YACxC,MAAM,IAAI,YAAY,CAAC,gDAAgD,CAAC,CAAC;SAC1E;QAED,IAAI,SAAS,GAAgC,4BAA4B,CAAC,UAAU,EAAE,CAAC;QACvF,IAAI,SAAS,IAAI,IAAI,EAAE;YACrB,MAAM,IAAI,YAAY,CAAC,8CAA8C,CAAC,CAAC;SACxE;QAED,OAAO,SAAS,CAAC;KAClB;IAES,uBAAuB,CAAC,WAA6D;QAC7F,IAAI,iBAAiB,GAAgC,IAAI,2BAA2B,EAAE,CAAC;QACvF,iBAAiB,CAAC,mBAAmB,CAAyC,WAAW,CAAC,CAAC;QAC3F,OAAO,iBAAiB,CAAC;KAC1B;IAES,iBAAiB;QACzB,OAAO,IAAI,qCAAqC,EAAE,CAAC;KACpD;IAES,sBAAsB,CAAC,OAAiC,EAAE,KAAqB;QACvF,IAAI,WAAW,GAA+B,IAAI,0BAA0B,EAAE,CAAC;QAC/E,WAAW,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QAChC,WAAW,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;QACrC,OAAO,WAAW,CAAC;KACpB;CAEF;;ACjFD;;;;;;;;;;;;;;;AAeA,SAEgBC,eAAa,CAAC,KAAa,EAAE,QAAgB,WAAW;IACtE,qBAAqB,CAAC,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;CAClD;;ACnBD;;;;;;;;;;;;;;;AAeA,AAQA;;;;;AAKA,MAAa,MAAO,SAAQ,kBAAkB;IAG5C,YAAY,MAAyB;QACnC,KAAK,CAAC,MAAM,CAAC,CAAC;QACd,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC;KAC1B;;;;;;IAOM,IAAI;QACT,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;CACF;;AC5CD;;;;;;;;;;;;;;;AAeA,SAIgB,UAAU,CAAO,KAAU,EAAE,MAA0B;IACrE,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC;IACpC,qBAAqB,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;CAC5D;;ACtBD;;;;;;;;;;;;;;;;;;;AAoBA,IAAY,mBAKX;AALD,WAAY,mBAAmB;IAE7B,6DAAI,CAAA;IAEJ,+DAAK,CAAA;CACN,EALW,mBAAmB,KAAnB,mBAAmB,QAK9B;;ACzBD;;;;;;;;;;;;;;;AAgBA,AAQA;;;;;;;;AASA,MAAa,eAAe;IAU1B,YAAY,MAAcD,EAAO,EAAE;QACjC,IAAI,CAAC,QAAQ,GAAG,mBAAmB,CAAC,IAAI,CAAC;QACzC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;KAChB;;;;;;;IAQM,WAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;;IAQM,WAAW,CAAC,QAA6B;QAC9C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;;;;;;;IAQM,MAAM;QACX,OAAO,IAAI,CAAC,GAAG,CAAC;KACjB;;;;;;;IAQM,MAAM,CAAC,GAAW;QACvB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;KAChB;;;;;;;IAQM,mBAAmB;QACxB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;;;;;;;IAQM,mBAAmB,CAAC,gBAAwB;QACjD,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;KAC1C;;;;;;;IAQM,cAAc;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;;;;;;IAQM,cAAc,CAAC,WAAyC;QAC7D,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAChC;CACF;AAEDC,eAAa,CAAE,eAAe,EAAE,KAAK,CAAE,CAAC;AACxC,UAAU,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,mBAAmB,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AACxK,UAAU,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC;AACnJ,UAAU,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,mBAAmB,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,mBAAmB,EAAE,CAAC,CAAC;AAC7K,kBAAkB,CAAC,eAAe,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,mBAAmB,EAAE,iBAAiB,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,CAAC;;ACrI5M;;;;;;;;;;;;;;;AAeA,AAIA;;;AAGA,MAAa,wBAAwB;;;;;;IAU5B,KAAK;QACV,OAAO,IAAI,CAAC,EAAE,CAAC;KAChB;;;;;;IAOM,KAAK,CAAC,EAAU;QACrB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;KACd;;;;;;IAOM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;IAOM,eAAe,CAAC,YAAoB;QACzC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;CACF;AAED,aAAa,CAAE,wBAAwB,EAAE,IAAI,CAAE,CAAC;AAChD,WAAW,CAAC,wBAAwB,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,wBAAwB,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,wBAAwB,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC;AACjL,WAAW,CAAC,wBAAwB,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,wBAAwB,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,wBAAwB,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;;AClEpN;;;;;;;;;;;;;;;AAeA,AAOA;;;;;;AAMA,MAAa,aAAc,SAAQ,cAAc;IAuB/C;QACE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC;QAC7B,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC;KAClC;;;;;;IAOM,YAAY;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;IAOM,YAAY,CAAC,SAAe;QACjC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC5B;;;;;;IAOM,SAAS;QACd,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;;;;;IAOM,SAAS,CAAC,MAAc;QAC7B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;IAOM,WAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;IAOM,WAAW,CAAC,QAAgB;QACjC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;;;;;;IAOM,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;IAOM,UAAU,CAAC,OAAe;QAC/B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;;;;;;IAOM,kBAAkB;QACvB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;;;;;;IAOM,kBAAkB,CAAC,eAAwB;QAChD,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;KACxC;;;;;;;IAQM,WAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;IAOM,WAAW,CAAC,QAAgB;QACjC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;;;;;;IAOM,uBAAuB;QAC5B,OAAO,IAAI,CAAC,oBAAoB,CAAC;KAClC;;;;;;IAOM,uBAAuB,CAAC,oBAA8C;QAC3E,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;KAClD;;;;;;IAOM,YAAY;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;IAOM,YAAY,CAAC,SAAiB;QACnC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC5B;;;;;;IAOM,gBAAgB;QACrB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;;;;;;IAOM,gBAAgB,CAAC,aAAqB;QAC3C,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;KACpC;;;;;;IAOM,qBAAqB;QAC1B,OAAO,IAAI,CAAC,kBAAkB,CAAC;KAChC;;;;;;IAOM,qBAAqB,CAAC,kBAA0B;QACrD,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;KAC9C;;;;;;IAOM,YAAY;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;IAOM,YAAY,CAAC,SAAiB;QACnC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC5B;;;;;;IAOM,yBAAyB;QAC9B,OAAO,IAAI,CAAC,sBAAsB,CAAC;KACpC;;;;;;IAOM,yBAAyB,CAAC,sBAA8B;QAC7D,IAAI,CAAC,sBAAsB,GAAG,sBAAsB,CAAC;KACtD;;;;;;IAOM,yBAAyB;QAC9B,OAAO,IAAI,CAAC,sBAAsB,CAAC;KACpC;;;;;;IAOM,yBAAyB,CAAC,sBAA8B;QAC7D,IAAI,CAAC,sBAAsB,GAAG,sBAAsB,CAAC;KACtD;;;;;;IAOM,YAAY;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;IAOM,YAAY,CAAC,SAAiB;QACnC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC5B;;;;;;IAOM,YAAY;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;IAOM,YAAY,CAAC,SAAiB;QACnC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC5B;;;;;AAtSa,4BAAc,GAAW,kCAAkC,CAAC;AA2S5E,aAAa,CAAE,aAAa,EAAE,OAAO,CAAE,CAAC;AACxC,WAAW,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,aAAa,CAAC,SAAS,CAAC,YAAY,EAAE,KAAK,EAAE,aAAa,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;AAChL,WAAW,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,aAAa,CAAC,SAAS,CAAC,SAAS,EAAE,KAAK,EAAE,aAAa,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,CAAC;AAC3J,WAAW,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,aAAa,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,aAAa,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AACjK,WAAW,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,aAAa,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,aAAa,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;AAC9J,WAAW,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,aAAa,CAAC,SAAS,CAAC,kBAAkB,EAAE,KAAK,EAAE,aAAa,CAAC,SAAS,CAAC,kBAAkB,EAAE,CAAC,CAAC;AAClL,WAAW,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,aAAa,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,aAAa,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AACjL,kBAAkB,CAAC,aAAa,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,wBAAwB,EAAE,IAAI,EAAE,aAAa,CAAC,SAAS,CAAC,uBAAuB,EAAE,KAAK,EAAE,aAAa,CAAC,SAAS,CAAC,uBAAuB,EAAE,CAAC,CAAC;AAChM,WAAW,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,aAAa,CAAC,SAAS,CAAC,YAAY,EAAE,KAAK,EAAE,aAAa,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;AACrK,WAAW,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,aAAa,CAAC,SAAS,CAAC,gBAAgB,EAAE,KAAK,EAAE,aAAa,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC,CAAC;AACxL,WAAW,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,aAAa,CAAC,SAAS,CAAC,qBAAqB,EAAE,KAAK,EAAE,aAAa,CAAC,SAAS,CAAC,qBAAqB,EAAE,CAAC,CAAC;AACnM,WAAW,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,aAAa,CAAC,SAAS,CAAC,YAAY,EAAE,KAAK,EAAE,aAAa,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;AACrK,WAAW,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,aAAa,CAAC,SAAS,CAAC,yBAAyB,EAAE,KAAK,EAAE,aAAa,CAAC,SAAS,CAAC,yBAAyB,EAAE,CAAC,CAAC;AAC/L,WAAW,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,aAAa,CAAC,SAAS,CAAC,yBAAyB,EAAE,KAAK,EAAE,aAAa,CAAC,SAAS,CAAC,yBAAyB,EAAE,CAAC,CAAC;AAC/L,WAAW,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,aAAa,CAAC,SAAS,CAAC,YAAY,EAAE,KAAK,EAAE,aAAa,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;AACrK,WAAW,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,aAAa,CAAC,SAAS,CAAC,YAAY,EAAE,KAAK,EAAE,aAAa,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;;AC3VrK;;;;;;;;;;;;;;;;;;;AAoBA,IAAY,uBAOX;AAPD,WAAY,uBAAuB;IAEjC,qEAAI,CAAA;IAEJ,2EAAO,CAAA;IAEP,mFAAW,CAAA;CACZ,EAPW,uBAAuB,KAAvB,uBAAuB,QAOlC;;AC3BD;;;;;;;;;;;;;;;AAeA,AAMA;;;;AAIA,MAAa,cAAe,SAAQ,cAAc;IAKhD;QACE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,iBAAiB,GAAG,uBAAuB,CAAC,WAAW,CAAC;KAC9D;;;;;;IAOM,oBAAoB;QACzB,OAAO,IAAI,CAAC,iBAAiB,CAAC;KAC/B;;;;;;IAOM,oBAAoB,CAAC,iBAA0C;QACpE,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;KAC5C;;;;;;IAOM,qBAAqB;QAC1B,OAAO,IAAI,CAAC,kBAAkB,CAAC;KAChC;;;;;;IAOM,qBAAqB,CAAC,kBAAwB;QACnD,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;KAC9C;CACF;AAED,aAAa,CAAE,cAAc,EAAE,QAAQ,CAAE,CAAC;AAC1C,WAAW,CAAC,cAAc,EAAE,EAAE,IAAI,EAAE,eAAe,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,uBAAuB,EAAE,IAAI,EAAE,cAAc,CAAC,SAAS,CAAC,oBAAoB,EAAE,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,oBAAoB,EAAE,CAAC,CAAC;AAC3M,WAAW,CAAC,cAAc,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,cAAc,CAAC,SAAS,CAAC,qBAAqB,EAAE,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,qBAAqB,EAAE,CAAC,CAAC;;AC1EtL;;;;;;;;;;;;;;;AAeA,AAMA;;;AAGA,MAAa,yBAA0B,SAAQ,gCAAgD;;;;;;IAStF,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;IAOM,UAAU,CAAC,OAAuB;QACvC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;;IAGM,iBAAiB,CAAC,OAAuB;QAC9C,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;KAC1B;CACF;AAED,aAAa,CAAE,yBAAyB,EAAE,WAAW,CAAE,CAAC;AACxD,kBAAkB,CAAC,yBAAyB,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;;ACrDhN;;;;;;;;;;;;;;;AAeA,AAQA;;;;AAIA,MAAa,wBAAyB,SAAQ,iBAAiB;IAItD,OAAO;QACZ,OAAO,cAAc,CAAC,OAAO,CAAC;KAC/B;;;;;;IAOM,iBAAiB;QACtB,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;;;;;;IAOM,iBAAiB,CAAC,cAAyC;QAChE,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;KACtC;;IAIM,kBAAkB;QACvB,IAAI,eAAe,GAA0B,IAAI,KAAK,EAAkB,CAAC;QACzE,IAAI,IAAI,CAAC,iBAAiB,EAAE,IAAI,IAAI,EAAE;YACpC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;SAChD;QACD,OAAO,eAAe,CAAC;KACxB;CACF;AAED,aAAa,CAAE,wBAAwB,EAAE,cAAc,CAAE,CAAC;AAC1D,kBAAkB,CAAC,wBAAwB,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,yBAAyB,EAAE,IAAI,EAAE,wBAAwB,CAAC,SAAS,CAAC,iBAAiB,EAAE,KAAK,EAAE,wBAAwB,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC,CAAC;;ACjErO;;;;;;;;;;;;;;;AAeA,AAKA;;;AAGA,MAAa,kBAAmB,SAAQ,cAAc;IAIpD;QACE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;KAChC;;;;;;IAOM,cAAc;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;;;;;IAOM,cAAc,CAAC,WAAiB;QACrC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAChC;CACF;AAED,aAAa,CAAC,kBAAkB,EAAE,YAAY,CAAC,CAAC;AAChD,WAAW,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,EAAE,kBAAkB,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,CAAC;;ACpDnM;;;;;;;;;;;;;;;AAeA,AAMA;;;AAGA,MAAa,6BAA8B,SAAQ,gCAAoD;;;;;;IAS9F,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;IAOM,UAAU,CAAC,OAA2B;QAC3C,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;;IAGM,iBAAiB,CAAC,OAA2B;QAClD,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;KAC1B;CACF;AAED,aAAa,CAAE,6BAA6B,EAAE,eAAe,CAAE,CAAC;AAChE,kBAAkB,CAAC,6BAA6B,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,kBAAkB,EAAE,IAAI,EAAE,6BAA6B,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,6BAA6B,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;;ACrDhO;;;;;;;;;;;;;;;AAeA,AAQA;;;AAGA,MAAa,uBAAwB,SAAQ,iBAAiB;IAIrD,OAAO;QACZ,OAAO,cAAc,CAAC,MAAM,CAAC;KAC9B;;;;;;IAOM,qBAAqB;QAC1B,OAAO,IAAI,CAAC,kBAAkB,CAAC;KAChC;;;;;;IAOM,qBAAqB,CAAC,kBAAiD;QAC5E,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;KAC9C;;;;;;IAOM,kBAAkB;QACvB,IAAI,QAAQ,GAA0B,IAAI,KAAK,EAAkB,CAAC;QAElE,IAAI,IAAI,CAAC,qBAAqB,EAAE,IAAI,IAAI,EAAE;YACxC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC;SAC7C;QAED,OAAO,QAAQ,CAAC;KACjB;CACF;AAED,aAAa,CAAC,uBAAuB,EAAE,gBAAgB,CAAC,CAAC;AACzD,kBAAkB,CAAC,uBAAuB,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,6BAA6B,EAAE,IAAI,EAAE,uBAAuB,CAAC,SAAS,CAAC,qBAAqB,EAAE,KAAK,EAAE,uBAAuB,CAAC,SAAS,CAAC,qBAAqB,EAAE,CAAC,CAAC;;ACrE9N;;;;;;;;;;;;;;;AAeA,AAIA;;;;;;AAMA,MAAa,eAAe;IAK1B;QACE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;KAC9B;;;;;;;IAQM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;;IAQM,eAAe,CAAC,YAAkB;QACvC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;;;;;;IAOM,mBAAmB;QACxB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;;;;;;IAOM,mBAAmB,CAAC,gBAAyB;QAClD,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;KAC1C;CACF;AAED,aAAa,CAAE,eAAe,EAAE,QAAQ,CAAE,CAAC;AAC3C,WAAW,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;AAC1K,WAAW,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,mBAAmB,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,mBAAmB,EAAE,CAAC,CAAC;;AC3EvL;;;;;;;;;;;;;;;AAeA,AAQA;;;;;;AAMA,MAAa,0BAA2B,SAAQ,gBAAgB;IAO9D;QACE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;KAC5B;;;;;;IAOM,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;IAOM,UAAU,CAAC,OAAiC;QACjD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;;;;;;;;IASM,oBAAoB;QACzB,OAAO,IAAI,CAAC,iBAAiB,CAAC;KAC/B;;;;;;;;IASM,oBAAoB,CAAC,iBAA0B;QACpD,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;KAC5C;;;;;;IAOM,kBAAkB;QACvB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;;;;;;IAOM,kBAAkB,CAAC,eAAgC;QACxD,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;KACxC;;;;;;;IAQM,iBAAiB;QACtB,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;;;;;;;IAQM,iBAAiB,CAAC,cAAuB;QAC9C,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;KACtC;CACF;AAED,aAAa,CAAC,0BAA0B,EAAE,WAAW,CAAC,CAAC;AACvD,kBAAkB,CAAC,0BAA0B,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,wBAAwB,EAAE,IAAI,EAAE,0BAA0B,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,0BAA0B,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;AACjP,WAAW,CAAC,0BAA0B,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,0BAA0B,CAAC,SAAS,CAAC,oBAAoB,EAAE,KAAK,EAAE,0BAA0B,CAAC,SAAS,CAAC,oBAAoB,EAAE,CAAC,CAAC;AACxN,kBAAkB,CAAC,0BAA0B,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,0BAA0B,CAAC,SAAS,CAAC,kBAAkB,EAAE,KAAK,EAAE,0BAA0B,CAAC,SAAS,CAAC,kBAAkB,EAAE,CAAC,CAAC;AACpP,WAAW,CAAC,0BAA0B,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,0BAA0B,CAAC,SAAS,CAAC,iBAAiB,EAAE,KAAK,EAAE,0BAA0B,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC,CAAC;;AC7HnO;;;;;;;;;;;;;;;AAeA,AAMA;;;;;;AAMA,MAAa,qCACT,SAAQ,gCAA4D;;;;;;IAS/D,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;IAOM,UAAU,CAAC,OAAmC;QACnD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;;IAGM,iBAAiB,CAAC,OAAmC;QAC1D,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;KAC1B;CACF;AAED,aAAa,CAAC,qCAAqC,EAAE,cAAc,CAAC,CAAC;AACrE,kBAAkB,CAAC,qCAAqC,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,0BAA0B,EAAE,IAAI,EAAE,qCAAqC,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,qCAAqC,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;;ACzDhQ;;;;;;;;;;;;;;;AAeA,AAIA;;;;;;AAMA,MAAa,UAAU;;;;;;IAUd,WAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;IAOM,WAAW,CAAC,QAAgB;QACjC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;;;;;;IAOM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;IAOM,eAAe,CAAC,YAAoB;QACzC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;CACF;AAED,aAAa,CAAE,UAAU,EAAE,OAAO,CAAE,CAAC;AACrC,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AACxK,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;;ACrEpL;;;;;;;;;;;;;;;AAeA,AAKA;;;;;;AAMA,MAAa,eAAe;IAMnB,aAAa;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;IAEM,aAAa,CAAC,UAAsB;QACzC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;IAEM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;IAEM,eAAe,CAAC,YAAoB;QACzC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;IAEM,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;IAEM,OAAO,CAAC,IAAY;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;KAC1B;CACF;AAED,aAAa,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;AACxC,WAAW,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AAC5K,WAAW,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;AAC7K,WAAW,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;;AClE3J;;;;;;;;;;;;;;;AAeA,AAMA;;;;;;AAMA,MAAa,mBAAoB,SAAQ,cAAc;IAI9C,mBAAmB;QACxB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;IAEM,mBAAmB,CAAC,gBAAwC;QACjE,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;KAC1C;CACF;AAED,aAAa,CAAC,mBAAmB,EAAE,WAAW,CAAC,CAAC;AAChD,kBAAkB,CAAC,mBAAmB,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,mBAAmB,EAAE,eAAe,EAAE,IAAI,EAAE,mBAAmB,CAAC,SAAS,CAAC,mBAAmB,EAAE,KAAK,EAAE,mBAAmB,CAAC,SAAS,CAAC,mBAAmB,EAAE,CAAC,CAAC;;ACzC7O;;;;;;;;;;;;;;;AAeA,AAMA;;;;;;AAMA,MAAa,8BACT,SAAQ,gCAAqD;;;;;;IASxD,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;;IAQM,UAAU,CAAC,OAA4B;QAC5C,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;;IAGM,iBAAiB,CAAC,OAA4B;QACnD,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;KAC1B;CACF;AAED,aAAa,CAAE,8BAA8B,EAAE,cAAc,CAAE,CAAC;AAChE,kBAAkB,CAAC,8BAA8B,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,mBAAmB,EAAE,IAAI,EAAE,8BAA8B,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,8BAA8B,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;;AC1DpO;;;;;;;;;;;;;;;AAeA,AAQA;;;;;;AAMA,MAAa,oCAAqC,SAAQ,iBAAiB;IAIlE,OAAO;QACZ,OAAO,cAAc,CAAC,UAAU,CAAC;KAClC;;;;;;IAOM,mBAAmB;QACxB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;;;;;;IAOM,mBAAmB,CAAC,gBAAuD;QAChF,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;KAC1C;;IAGM,kBAAkB;QACvB,IAAI,eAAe,GAA0B,IAAI,KAAK,EAAkB,CAAC;QACzE,IAAI,IAAI,CAAC,mBAAmB,EAAE,IAAI,IAAI,EAAE;YACtC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC;SAClD;QACD,OAAO,eAAe,CAAC;KACxB;CACF;AAED,aAAa,CAAE,oCAAoC,EAAE,iBAAiB,CAAE,CAAC;AACzE,kBAAkB,CAAC,oCAAoC,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,qCAAqC,EAAE,IAAI,EAAE,oCAAoC,CAAC,SAAS,CAAC,mBAAmB,EAAE,KAAK,EAAE,oCAAoC,CAAC,SAAS,CAAC,mBAAmB,EAAE,CAAC,CAAC;;AClEzQ;;;;;;;;;;;;;;;AAeA,AAQA;;;;;;AAMA,MAAa,6BAA8B,SAAQ,iBAAiB;IAI3D,OAAO;QACZ,OAAO,cAAc,CAAC,UAAU,CAAC;KAClC;;;;;;IAOM,sBAAsB;QAC3B,OAAO,IAAI,CAAC,mBAAmB,CAAC;KACjC;;;;;;IAOM,sBAAsB,CAAC,gBAAgD;QAC5E,IAAI,CAAC,mBAAmB,GAAG,gBAAgB,CAAC;KAC7C;;IAGM,kBAAkB;QACvB,IAAI,eAAe,GAA0B,IAAI,KAAK,EAAkB,CAAC;QACzE,IAAI,IAAI,CAAC,sBAAsB,EAAE,IAAI,IAAI,EAAE;YACzC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC,CAAC;SACrD;QACD,OAAO,eAAe,CAAC;KACxB;CACF;AAED,aAAa,CAAE,6BAA6B,EAAE,iBAAiB,CAAE,CAAC;AAClE,kBAAkB,CAAC,6BAA6B,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,8BAA8B,EAAE,IAAI,EAAE,6BAA6B,CAAC,SAAS,CAAC,sBAAsB,EAAE,KAAK,EAAE,6BAA6B,CAAC,SAAS,CAAC,sBAAsB,EAAE,CAAC,CAAC;;AC3BnP;;;AAGA,MAAa,qBAAqB;IAMhC,YAAY,OAAiC,EAAE,QAAgB,EAAE,QAAgB,EACpD,WAAqC;QAChE,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAChC;IAEM,aAAa,CAAC,KAAW,EAAE,GAAS;QACzC,IAAI,KAAK,GAAmB,IAAI,cAAc,EAAE,CAAC;QACjD,KAAK,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;QACnC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACtB,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAElB,IAAI,OAAO,GAAoB,IAAI,CAAC,WAAW,CAAC,0BAA0B,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACzG,IAAI,kBAAkB,GAA0C,IAAI,qCAAqC,EAAE,CAAC;QAC5G,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC;QAC5F,OAAO,CAAC,cAAc,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,gCAAgC,CAAC,kBAAkB,CAAC,CAAC,CAAC;QAE3F,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,OAAO,CAAC;aAC3C,IAAI,CAAC,CAAC,QAA0B;YAC/B,IAAI,CAAC,WAAW,CAAC,yBAAyB,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;YAC9D,OAAO,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;SAC/C,CAAC,CAAC;KACJ;IAEM,gBAAgB,CAAC,UAAkC;QACxD,IAAI,OAAO,GAAoB,IAAI,CAAC,WAAW,CAAC,0BAA0B,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACzG,IAAI,kBAAkB,GAAmC,IAAI,8BAA8B,EAAE,CAAC;QAC9F,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,CAAC,yBAAyB,CAAC,UAAU,CAAC,CAAC,CAAC;QACjF,OAAO,CAAC,cAAc,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,mCAAmC,CAAC,kBAAkB,CAAC,CAAC,CAAC;QAE9F,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,OAAO,CAAC;aAC3C,IAAI,CAAC,CAAC,QAA0B;YAC/B,IAAI,CAAC,WAAW,CAAC,yBAAyB,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;YAE9D,OAAO,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;SAC1C,CAAC,CAAC;KACJ;;;;;;IAOM,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IAEO,uBAAuB,CAAC,QAA0B;QACxD,IAAI,sBAAsB,GACkB,QAAQ,CAAC,aAAa,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;QAC9F,IAAI,sBAAsB,IAAI,IAAI,EAAE;YAClC,MAAM,IAAI,YAAY,CAAC,qCAAqC,CAAC,CAAC;SAC/D;QAED,IAAI,4BAA4B,GAC5B,sBAAsB,CAAC,oBAAoB,EAAE,CAAC;QAClD,IAAI,4BAA4B,IAAI,IAAI,EAAE;YACxC,MAAM,IAAI,YAAY,CAAC,+CAA+C,CAAC,CAAC;SACzE;QAED,IAAI,SAAS,GAAgC,4BAA4B,CAAC,UAAU,EAAE,CAAC;QACvF,IAAI,SAAS,IAAI,IAAI,EAAE;YACrB,MAAM,IAAI,YAAY,CAAC,6CAA6C,CAAC,CAAC;SACvE;;QAGD,IAAI,sBAAsB,GACW,QAAQ,CAAC,aAAa,CACnD,cAAc,CAAC,mBAAmB,CAAC,CAAC;QAC5C,IAAI,sBAAsB,IAAI,IAAI,EAAE;YAClC,SAAS,CAAC,eAAe,CAAC,sBAAsB,CAAC,eAAe,EAAE,CAAC,CAAC;SACrE;QAED,OAAO,SAAS,CAAC;KAClB;IAEO,gCAAgC,CAAC,WAAkD;QACzF,IAAI,0BAA0B,GAC1B,IAAI,oCAAoC,EAAE,CAAC;QAC/C,0BAA0B,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC;QAC5D,OAAO,0BAA0B,CAAC;KACnC;IAEO,sBAAsB,CAAC,OAAiC,EAAE,KAAqB;QACrF,IAAI,aAAa,GAA+B,IAAI,0BAA0B,EAAE,CAAC;QACjF,aAAa,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QAClC,aAAa,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;QACvC,aAAa,CAAC,kBAAkB,CAAC,IAAI,eAAe,EAAE,CAAC,CAAC;QACxD,OAAO,aAAa,CAAC;KACtB;IAEO,mCAAmC,CAAC,WAA2C;QACrF,IAAI,mBAAmB,GACnB,IAAI,6BAA6B,EAAE,CAAC;QACxC,mBAAmB,CAAC,sBAAsB,CAAC,WAAW,CAAC,CAAC;QACxD,OAAO,mBAAmB,CAAC;KAC5B;IAEO,yBAAyB,CAAC,UAAkC;QAClE,IAAI,mBAAmB,GAAwB,IAAI,mBAAmB,EAAE,CAAC;QACzE,mBAAmB,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;QACpD,OAAO,mBAAmB,CAAC;KAC5B;IAEO,kBAAkB,CAAC,QAA0B;QACnD,IAAI,eAAe,GACkB,QAAQ,CAAC,aAAa,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC;QAChG,IAAI,eAAe,IAAI,IAAI,EAAE;YAC3B,MAAM,IAAI,YAAY,CAAC,wCAAwC,CAAC,CAAC;SAClE;QAED,IAAI,YAAY,GAAiB,eAAe,CAAC,eAAe,EAAE,CAAC;QACnE,IAAI,YAAY,IAAI,IAAI,EAAE;YACxB,MAAM,IAAI,YAAY,CAAC,wCAAwC,CAAC,CAAC;SAClE;QAED,OAAO,YAAY,CAAC;KACrB;CACF;;ACxKD;;;;;;;;;;;;;;;AAeA,AAKA;;;;;;AAMA,MAAa,qBAAsB,SAAQ,cAAc;;;;;;IAUhD,SAAS;QACd,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;;;;;IAOM,SAAS,CAAC,MAAc;QAC7B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;IAOM,cAAc;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;;;;;IAOM,cAAc,CAAC,WAAmB;QACvC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAChC;CACF;AAED,aAAa,CAAE,qBAAqB,EAAE,SAAS,CAAE,CAAC;AAClD,WAAW,CAAC,qBAAqB,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,qBAAqB,CAAC,SAAS,CAAC,SAAS,EAAE,KAAK,EAAE,qBAAqB,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,CAAC;AAClM,WAAW,CAAC,qBAAqB,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,qBAAqB,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,EAAE,qBAAqB,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,CAAC;;ACtElN;;;;;;;;;;;;;;;AAeA,AAMA;;;AAGA,MAAa,gCAAiC,SAAQ,gCAAuD;;;;;;IASpG,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;IAOM,UAAU,CAAC,OAA8B;QAC9C,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;;IAGM,iBAAiB,CAAC,OAA8B;QACrD,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;KAC1B;CACF;AAED,aAAa,CAAC,gCAAgC,EAAE,YAAY,CAAC,CAAC;AAC9D,kBAAkB,CAAC,gCAAgC,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,qBAAqB,EAAE,IAAI,EAAE,gCAAgC,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,gCAAgC,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;;ACrD5O;;;;;;;;;;;;;;;AAeA,AASA;;;;;;AAMA,MAAa,uBAAwB,SAAQ,iBAAiB;IAKrD,OAAO;QACZ,OAAO,cAAc,CAAC,MAAM,CAAC;KAC9B;;;;;;IAOM,gBAAgB;QACrB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;;;;;;IAOM,gBAAgB,CAAC,aAA4B;QAClD,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;KACpC;;;;;;IAOM,wBAAwB;QAC7B,OAAO,IAAI,CAAC,qBAAqB,CAAC;KACnC;;;;;;IAOM,wBAAwB,CAAC,qBAAuD;QACrF,IAAI,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;KACpD;;;IAMM,kBAAkB;QACvB,IAAI,eAAe,GAA0B,IAAI,KAAK,EAAkB,CAAC;QAEzE,IAAI,IAAI,CAAC,gBAAgB,EAAE,IAAI,IAAI,EAAE;YACnC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;SAC/C;QAED,IAAI,IAAI,CAAC,wBAAwB,EAAE,IAAI,IAAI,EAAE;YAC3C,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,wBAAwB,EAAE,CAAC,CAAC;SACvD;QAED,OAAO,eAAe,CAAC;KACxB;CACF;AAED,aAAa,CAAC,uBAAuB,EAAE,gBAAgB,CAAC,CAAC;AACzD,kBAAkB,CAAC,uBAAuB,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,uBAAuB,CAAC,SAAS,CAAC,gBAAgB,EAAE,KAAK,EAAE,uBAAuB,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC,CAAC;AACpN,kBAAkB,CAAC,uBAAuB,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,gCAAgC,EAAE,IAAI,EAAE,uBAAuB,CAAC,SAAS,CAAC,wBAAwB,EAAE,KAAK,EAAE,uBAAuB,CAAC,SAAS,CAAC,wBAAwB,EAAE,CAAC,CAAC;;SCvDxN,uBAAuB,CAAC,GAAQ;IAC7C,QAAQ,GAAG,YAAY,MAAM;YACrB,OAAO,GAAG,CAAC,mBAAmB,KAAK,UAAU,CAAC;YAC9C,OAAO,GAAG,CAAC,SAAS,KAAK,UAAU,CAAC,EAAE;CAChD;;AC7CD;;;;;;;;;;;;;;;;;;;;AAqBA,MAAsB,eAAe;CASpC;;AC7BD;;;;;;;;;;;;;;;AAgBA,AAEA;;;AAGA,IAAY,QAIX;AAJD,WAAY,QAAQ;IAClB,uCAAI,CAAA;IACJ,uCAAI,CAAA;IACJ,yCAAK,CAAA;CACN,EAJW,QAAQ,KAAR,QAAQ,QAInB;;;;AAKD,MAAsB,UAAU;IAE9B,OAAO,KAAa,MAAM,IAAI,YAAY,CAAC,UAAU,CAAC,CAAC,EAAE;IAEzD,UAAU,KAAa,MAAM,IAAI,YAAY,CAAC,UAAU,CAAC,CAAC,EAAE;IAE5D,kBAAkB,KAA0B,MAAM,IAAI,YAAY,CAAC,UAAU,CAAC,CAAC,EAAE;CAClF;;ACtCD;;;;;;;;;;;;;;;AAeA,AAKA;;;AAGA,MAAa,SAAU,SAAQ,UAAU;IAyDvC,YAAY,IAAY,EAAE,OAAe,EAAE,eAAyB;QAClE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;KACxC;IAEM,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;IAEM,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IAEM,kBAAkB;QACvB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;IAEM,OAAO,QAAQ,CAAC,IAAY;QACjC,KAAK,IAAI,CAAC,IAAI,SAAS,CAAC,UAAU,EAAE;YAClC,IAAI,KAAK,GAAc,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAC/C,IAAI,KAAK,CAAC,OAAO,EAAE,IAAI,IAAI,EAAE;gBAC3B,OAAO,KAAK,CAAC;aACd;SACF;QACD,OAAO,IAAI,CAAC;KACb;;IAIM,QAAQ;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;KAC7B;;AAzFa,iBAAO,GAAc,IAAI,SAAS,CAAC,CAAC,EAAE,SAAS,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;AAChE,2BAAiB,GAAc,IAAI,SAAS,CAAC,CAAC,EAAE,sBAAsB,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;AACvF,uBAAa,GAAc,IAAI,SAAS,CAAC,IAAI,EAAE,gBAAgB,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;AACjF,+BAAqB,GAAc,IAAI,SAAS,CAAC,IAAI,EAAE,wBAAwB,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;AACjG,2BAAiB,GAAc,IAAI,SAAS,CAAC,IAAI,EAAE,oBAAoB,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;AACzF,wBAAc,GAAc,IAAI,SAAS,CAAC,IAAI,EAAE,iBAAiB,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;AACnF,gCAAsB,GAAc,IAAI,SAAS,CAAC,IAAI,EAAE,yBAAyB,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;AACnG,uBAAa,GAAc,IAAI,SAAS,CAAC,IAAI,EAAE,eAAe,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;AAChF,2BAAiB,GAAc,IAAI,SAAS,CAAC,IAAI,EAAE,oBAAoB,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;AACzF,6BAAmB,GAAc,IAAI,SAAS,CAAC,IAAI,EAAE,qBAAqB,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC5F,qBAAW,GAAc,IAAI,SAAS,CAAC,IAAI,EAAE,2CAA2C,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC1G,gCAAsB,GAAc,IAAI,SAAS,CAAC,IAAI,EAAE,kCAAkC,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC5G,8BAAoB,GAAc,IAAI,SAAS,CAAC,IAAI,EAAE,aAAa,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;AACrF,kCAAwB,GAAc,IAAI,SAAS,CAAC,KAAK,EAAE,2BAA2B,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;AACvG,wBAAc,GAAc,IAAI,SAAS,CAAC,KAAK,EAAE,gBAAgB,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;AACnF,iCAAuB,GAAc,IAAI,SAAS,CAAC,KAAK,EAAE,0BAA0B,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;AACtG,yBAAe,GAAc,IAAI,SAAS,CAAC,KAAK,EAAE,kBAAkB,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;AACtF,4BAAkB,GAAc,IAAI,SAAS,CAAC,KAAK,EAAE,qBAAqB,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC5F,oBAAU,GAAc,IAAI,SAAS,CAAC,KAAK,EAAE,uBAAuB,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;AACtF,4BAAkB,GAAc,IAAI,SAAS,CAAC,KAAK,EAAE,sBAAsB,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC7F,2BAAiB,GAAc,IAAI,SAAS,CAAC,KAAK,EAAE,qBAAqB,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC3F,iBAAO,GAAc,IAAI,SAAS,CAAC,KAAK,EAAE,0BAA0B,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;AACtF,sBAAY,GAAc,IAAI,SAAS,CAAC,KAAK,EAAC,6BAA6B,EAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC5F,uBAAa,GAAc,IAAI,SAAS,CAAC,KAAK,EAAC,iCAAiC,EAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAExG,oBAAU,GAAgB;IAC/B,SAAS,CAAC,OAAO;IACjB,SAAS,CAAC,iBAAiB;IAC3B,SAAS,CAAC,aAAa;IACvB,SAAS,CAAC,qBAAqB;IAC/B,SAAS,CAAC,iBAAiB;IAC3B,SAAS,CAAC,cAAc;IACxB,SAAS,CAAC,sBAAsB;IAChC,SAAS,CAAC,aAAa;IACvB,SAAS,CAAC,iBAAiB;IAC3B,SAAS,CAAC,mBAAmB;IAC7B,SAAS,CAAC,WAAW;IACrB,SAAS,CAAC,sBAAsB;IAChC,SAAS,CAAC,oBAAoB;IAC9B,SAAS,CAAC,wBAAwB;IAClC,SAAS,CAAC,cAAc;IACxB,SAAS,CAAC,uBAAuB;IACjC,SAAS,CAAC,eAAe;IACzB,SAAS,CAAC,kBAAkB;IAC5B,SAAS,CAAC,UAAU;IACpB,SAAS,CAAC,kBAAkB;IAC5B,SAAS,CAAC,iBAAiB;IAC3B,SAAS,CAAC,OAAO;IACjB,SAAS,CAAC,YAAY;IACtB,SAAS,CAAC,aAAa;CACxB,CAAC;;;;;;;AAiDJ,MAAa,MAAM;IAMjB;QACE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;KAC3B;;;;;;IAOM,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;;;;;;IAOM,OAAO,CAAC,IAAgB;QAC7B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,OAAO,IAAI,CAAC,QAAQ,KAAK,WAAW,EAAE;YACxC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3C;KACF;;;;;;IAOM,WAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;IAOM,WAAW,CAAC,QAAkB;QACnC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;;;;;;IAOM,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;IAOM,UAAU,CAAC,OAAe;QAC/B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;CACF;AAEDA,eAAa,CAAE,MAAM,EAAE,QAAQ,CAAE,CAAC;AAClC,WAAW,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;AACnJ,WAAW,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,MAAM,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AAC9J,WAAW,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,MAAM,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;;ACnMzI;;;;;;;;;;;;;;;AAeA,AAOA;;;;;;AAMA,MAAsB,iCAA6D,SAAQ,eAAe;;;;;;IAWjG,MAAM;QACX,OAAO,IAAI,CAAC,GAAG,CAAC;KACjB;;;;;;IAOM,MAAM,CAAC,GAAW;QACvB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;KAChB;;;;;;IAOM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;IAOM,eAAe,CAAC,YAAoB;QACzC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;;IAGM,mBAAmB;QACxB,OAAO,IAAI,CAAC,sBAAsB,EAAE,CAAC;KACtC;;IAGM,sBAAsB;QAC3B,IAAI,IAAI,GAAW,sBAAsB,CAAC;QAC1C,IAAI,IAAI,CAAC,iBAAiB,EAAE,IAAI,IAAI,EAAE;YACpC,IAAI,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC,sBAAsB,EAAE,GAAG,cAAc,CAAC;SAC3E;;;;;;QAOD,OAAO,IAAI,CAAC;KACb;;;;;;IAOM,SAAS;QACd,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;;;;;IAOM,SAAS,CAAC,MAAc;QAC7B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;CASF;AAED,WAAW,CAAC,iCAAiC,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,iCAAiC,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE,iCAAiC,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC;AAChO,WAAW,CAAC,iCAAiC,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,iCAAiC,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,iCAAiC,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;AACtO,kBAAkB,CAAC,iCAAiC,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,iCAAiC,CAAC,SAAS,CAAC,SAAS,EAAE,KAAK,EAAE,iCAAiC,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,CAAC;;ACpD9N;;;;;;AAOA,MAAa,wBAAyB,SAAQ,wBAAwB;IAKpE,YAAY,IAA8B,EAAE,UAAyB;QACnE,KAAK,EAAE,CAAC;QACR,IAAI,IAAI,IAAI,IAAI,EAAE;YAChB,MAAM,IAAI,YAAY,CAAC,qBAAqB,CAAC,CAAC;SAC/C;QACD,IAAI,UAAU,IAAI,IAAI,EAAE;YACtB,MAAM,IAAI,YAAY,CAAC,oCAAoC,CAAC,CAAC;SAC9D;QAED,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;;IAGM,WAAW;QAChB,IAAI,OAAO,GAAoB,IAAI,CAAC,0BAA0B,CAAC,aAAa,CAAC,cAAc,EAAE,aAAa,CAAC,cAAc,CAAC,CAAC;QAC3H,IAAI,cAAc,GAA6B,IAAI,wBAAwB,EAAE,CAAC;QAC9E,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,wBAAwB,EAAE,CAAC,CAAC;QAClE,OAAO,CAAC,cAAc,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QAChD,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,SAAS,EAAE,CAAC;aAC3D,IAAI,CAAC,CAAC,QAA0B;YAC/B,IAAI,CAAC,yBAAyB,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;YAClD,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;SAClC,CAAC,CAAC;KACJ;;IAGM,mBAAmB,CAAC,QAAgB,EAAE,QAAgB;QAC3D,IAAI,OAAO,GAAoB,IAAI,CAAC,0BAA0B,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;QACnF,IAAI,aAAa,GAA4B,IAAI,uBAAuB,EAAE,CAAC;QAC3E,aAAa,CAAC,qBAAqB,CAAC,IAAI,CAAC,4BAA4B,EAAE,CAAC,CAAC;QACzE,OAAO,CAAC,cAAc,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QAC/C,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,SAAS,EAAE,CAAC;aAC3D,IAAI,CAAC,CAAC,QAA0B;YAC/B,IAAI,CAAC,yBAAyB,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;YAClD,OAAO,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;SAC1C,CAAC,CAAC;KACJ;;IAGM,eAAe,CAAC,OAA2B,EAAE,QAAgB,EAAE,QAAgB;QACpF,OAAO,IAAI,kBAAkB,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;KAClE;;IAGM,qBAAqB,CAAC,OAAiC,EAAE,QAAgB,EAAE,QAAgB;QAChG,OAAO,IAAI,qBAAqB,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;KACrE;;IAGM,qBAAqB,CAAC,OAAiC,EAAE,QAAgB,EAAE,QAAgB;QAChG,OAAO,IAAI,qBAAqB,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;KACrE;;;;;;;;IASM,0BAA0B,CAAC,QAAgB,EAAE,QAAgB;QAClE,IAAI,OAAO,GAAoB,IAAI,eAAe,EAAE,CAAC;QACrD,IAAI,WAAW,GAAiC,IAAI,SAAS,CAAoB,iBAAiB,CAAC,cAAc,CAAC,CAAC;QACnH,IAAI,aAAa,GAA4B,IAAI,uBAAuB,EAAE,CAAC;QAC3E,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;QAC7E,WAAW,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QAClC,OAAO,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;QACpC,OAAO,OAAO,CAAC;KAChB;;;;;;;;;;;;;;;;;IAmBM,WAAW,CAAC,OAAwB,EAAE,MAAc,IAAI,CAAC,OAAO,EAAE,CAAC,SAAS,EAAE;QACnF,OAAO,IAAI,CAAC,aAAa,EAAE,CAAC,WAAW,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;KACvD;;;;;;;IAQS,UAAU,CAAC,QAA0B;QAE7C,IAAI,UAAU,GAA0D,QAAQ,CAAC,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QACvH,IAAI,UAAU,IAAI,IAAI,EAAE;YACtB,MAAM,IAAI,YAAY,CAAC,0BAA0B,CAAC,CAAC;SACpD;QAED,IAAI,mBAAmB,GAA+B,UAAU,CAAC,kBAAkB,EAAE,CAAC;QACtF,IAAI,mBAAmB,IAAI,IAAI,EAAE;YAC/B,MAAM,IAAI,YAAY,CAAC,iCAAiC,CAAC,CAAC;SAC3D;QAED,IAAI,OAAO,GAAoB,mBAAmB,CAAC,UAAU,EAAE,CAAC;QAChE,IAAI,OAAO,IAAI,IAAI,EAAE;YACnB,MAAM,IAAI,YAAY,CAAC,qBAAqB,CAAC,CAAC;SAC/C;QACD,OAAO,OAAO,CAAC;KAChB;;;;;;;;IASM,yBAAyB,CAAC,OAAwB,EAAE,QAA0B;QACnF,IAAI,QAAQ,CAAC,WAAW,EAAE,IAAI,mBAAmB,CAAC,IAAI,EAAE;YACtD,MAAM,IAAI,mCAAmC,CAAC,2BAA2B,GAAG,QAAQ,CAAC,WAAW,EAAE,GAAG,YAAY,CAAC,CAAC;SACpH;QAED,IAAI,OAAO,CAAC,MAAM,EAAE,KAAK,QAAQ,CAAC,MAAM,EAAE,EAAE;YAC1C,MAAM,IAAI,YAAY,CAAC,0BAA0B,GAAG,QAAQ,CAAC,MAAM,EAAE,GAAG,4BAA4B,GAAG,OAAO,CAAC,CAAC;SACjH;QAED,KAAK,IAAI,UAAU,IAAI,OAAO,CAAC,cAAc,EAAE,CAAC,MAAM,EAAE,EAAE;YACxD,IAAI,WAAW,GAAuB,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC;YACnF,IAAI,WAAW,IAAI,IAAI,EAAE;gBACvB,MAAM,IAAI,sBAAsB,CAAC,sBAAsB,GAAG,UAAU,CAAC,OAAO,EAAE,GAAG,WAAW,CAAC,CAAC;aAC/F;YAED,IAAI,WAAW,CAAC,OAAO,EAAE,IAAI,cAAc,CAAC,MAAM,EAAE;gBAClD,IAAI,cAAc,GAA+C,WAAY,CAAC,iBAAiB,EAAE,CAAC;gBAElG,IAAI,cAAc,IAAI,IAAI,EAAE;oBAC1B,MAAM,IAAI,sBAAsB,CAAC,qBAAqB,CAAC,CAAC;iBACzD;aACF;YAED,IAAI,cAAc,GAAc,EAAE,CAAC;YACnC,KAAK,IAAI,cAAc,IAAI,UAAU,CAAC,kBAAkB,EAAE,EAAE;gBAC1D,IAAI,cAAc,YAAY,gCAAgC,EAAE;oBAC9D,cAAc,CAAqD,cAAe,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC;iBACrG;aACF;YAED,KAAK,IAAI,eAAe,IAAI,WAAW,CAAC,mBAAmB,EAAE,EAAE;gBAC7D,IAAI,uBAAuB,CAAC,eAAe,CAAC,EAAE;oBAC5C,IAAI,CAAC,cAAc,CAAoB,eAAe,CAAC,CAAC;iBACzD;gBAED,IAAI,eAAe,YAAY,iCAAiC,EAAE;oBAChE,IAAI,GAAG,GAAiE,eAAgB,CAAC,MAAM,EAAE,CAAC;oBAClG,IAAI,GAAG,IAAI,IAAI,EAAE;wBACf,MAAM,IAAI,uBAAuB,CAAC,uCAAuC,CAAC,CAAC;qBAC5E;yBACI,IAAI,EAAE,GAAG,IAAI,cAAc,CAAC,EAAE;wBACjC,MAAM,IAAI,uBAAuB,CAAC,sCAAsC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;qBACvF;yBAAM;wBACL,OAAO,cAAc,CAAC,GAAG,CAAC,CAAC;qBAC5B;iBACF;aACF;YAED,IAAI,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,MAAM,IAAI,CAAC,EAAE;gBAC3C,MAAM,IAAI,uBAAuB,CAAC,6CAA6C,GAAG,cAAc,CAAC,CAAC;aACnG;SACF;KACF;;;;;;IAOS,cAAc,CAAC,YAA0B;QACjD,IAAI,MAAM,GAAW,YAAY,CAAC,SAAS,EAAE,CAAC;QAC9C,IAAI,MAAM,IAAI,IAAI,EAAE;YAClB,MAAM,IAAI,YAAY,CAAC,kDAAkD,GAAG,YAAY,CAAC,mBAAmB,EAAE,GAAG,YAAY,CAAC,CAAC;SAChI;QAED,IAAI,SAAS,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,EAAE,EAAE;YACzC,IAAI,OAAO,GAAW,MAAM,CAAC,UAAU,EAAE,CAAC;YAC1C,IAAI,OAAO,IAAI,IAAI,EAAE;gBACnB,OAAO,GAAG,0BAA0B,CAAC;gBAErC,IAAI,MAAM,CAAC,OAAO,EAAE,IAAI,IAAI,EAAE;oBAC5B,OAAO,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC,UAAU,EAAE,CAAC;iBACzC;aACF;YAED,MAAM,IAAI,kBAAkB,CAAC,MAAM,EAAE,UAAU,GAAG,YAAY,CAAC,mBAAmB,EAAE,GAAG,IAAI,GAAG,OAAO,CAAC,CAAC;SACxG;KACF;;;;;;IAOS,wBAAwB;QAChC,IAAI,SAAS,GAA8B,IAAI,yBAAyB,EAAE,CAAC;QAC3E,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC;QAClD,OAAO,SAAS,CAAC;KAClB;;;;;;IAOS,oBAAoB;QAC5B,IAAI,cAAc,GAAmB,IAAI,cAAc,EAAE,CAAC;QAC1D,cAAc,CAAC,qBAAqB,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAClD,OAAO,cAAc,CAAC;KACvB;;;;;;;;IASS,mBAAmB,CAAC,QAAgB,EAAE,QAAgB;QAC9D,IAAI,aAAa,GAAkB,IAAI,aAAa,EAAE,CAAC;QACvD,aAAa,CAAC,YAAY,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;QACvC,IAAI,EAAE,GAA6B,IAAI,wBAAwB,EAAE,CAAC;QAClE,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,yBAAyB,EAAE,CAAC,CAAC;QACrD,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,eAAe,EAAE,CAAC,CAAC;QACrD,aAAa,CAAC,uBAAuB,CAAC,EAAE,CAAC,CAAC;QAC1C,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QAClC,aAAa,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QACpC,aAAa,CAAC,gBAAgB,CAAC,2BAA2B,CAAC,iBAAiB,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC3F,aAAa,CAAC,qBAAqB,CAAC,2BAA2B,CAAC,iBAAiB,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC;QACrG,OAAO,aAAa,CAAC;KACtB;;;;;;IAOS,4BAA4B;QACpC,IAAI,WAAW,GAAkC,IAAI,6BAA6B,EAAE,CAAC;QACrF,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,wBAAwB,EAAE,CAAC,CAAC;QACxD,OAAO,WAAW,CAAC;KACpB;;;;;;IAOS,wBAAwB;QAChC,OAAO,IAAI,kBAAkB,EAAE,CAAC;KACjC;;;;;;;IAQS,kBAAkB,CAAC,QAA0B;QACrD,IAAI,UAAU,GAAwD,QAAQ,CAAC,aAAa,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QACpH,IAAI,UAAU,IAAI,IAAI,EAAE;YACtB,MAAM,IAAI,YAAY,CAAC,iCAAiC,CAAC,CAAC;SAC3D;QAED,IAAI,WAAW,GAAmC,UAAU,CAAC,sBAAsB,EAAE,CAAC;QACtF,IAAI,WAAW,IAAI,IAAI,EAAE;YACvB,MAAM,IAAI,YAAY,CAAC,qDAAqD,CAAC,CAAC;SAC/E;QAED,IAAI,YAAY,GAAwB,WAAW,CAAC,UAAU,EAAE,CAAC;QACjE,IAAI,YAAY,IAAI,IAAI,EAAE;YACxB,MAAM,IAAI,YAAY,CAAC,8CAA8C,CAAC,CAAC;SACxE;QAED,OAAO,YAAY,CAAC,WAAW,EAAE,CAAC;KACnC;;;;;;IAOM,aAAa;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;IAOM,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;CACF;;ACnYD;;;;;;;;;;;;;;;AAeA,AAGA;;;;;AAKA,MAAa,sBAAuB,SAAQ,YAAY;IAEtD,YAAmB,OAAe,EAAE,IAAW,IAAI;QACjD,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;KACnB;CAEF;;AC7BD;;;;;;;;;;;;;;;AAeA,AAGA;;;AAGA,MAAa,kBAAmB,SAAQ,sBAAsB;IAI5D,YAAY,OAAe,EAAE,QAAgB;QAC3C,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;IAEM,WAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;CACF;;ACjCD;;;;;;;;;;;;;;;AAeA,AAEA;;;;;AAKA,MAAa,iBAAkB,SAAQ,UAAU;IAM/C,YAAY,IAAY,EAAE,OAAe,EAAE,eAAoC;QAC7E,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;KACxC;IAEM,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;IAEM,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IAEM,kBAAkB;QACvB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;;IAGM,QAAQ;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;KAC7B;CACF;;ACnDD;;;;;;;;;;;;;;;AAeA,AAMA;;;;;AAKA,MAAa,uBAAuB;IAE3B,QAAQ,CAAC,KAAa;QAC3B,IAAI,CAAC,KAAK,EAAE;YACV,OAAO,IAAI,CAAC;SACb;aACI,IAAI,OAAO,KAAK,KAAK,SAAS,EAAE;YACnC,OAAO,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC;SAC1B;aACI,IAAI,KAAK,YAAY,IAAI,EAAE;YAC9B,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;SAC/B;aACI,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAClC,OAAO,KAAK,GAAG,EAAE,CAAC;SACnB;aACI;YACH,OAAO,KAAK,CAAC,QAAQ,EAAE,CAAC;SACzB;KACF;IAEM,UAAU,CAAI,KAAU,EAAE,KAAa;QAC5C,IAAI,CAAC,KAAK,EAAE;YACV,OAAO,IAAI,CAAC;SACb;aACI,IAAI,KAAK,KAAK,UAAU,EAAE;YAC7B,IAAI,IAAI,GAAwB,KAAK,CAAC;YACtC,IAAI,UAAU,GAAe,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YACtD,IAAI,CAAC,UAAU,EAAE;gBACf,UAAU,GAAG,IAAI,iBAAiB,CAAC,IAAI,EAAE,sBAAsB,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;aAClF;YAED,OAAe,UAAU,CAAC;SAC3B;aACI,IAAI,gBAAgB,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE;YACxC,OAAe,UAAU,CAAC,KAAK,CAAC,CAAA;SACjC;aACI,IAAI,gBAAgB,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE;YACzC,QAAgB,GAAG,KAAK,KAAK,CAAC,WAAW,EAAE,EAAE;SAC9C;aACI,IAAI,gBAAgB,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE;YACtC,OAAe,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;SACtC;;aAEI,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;;YAElC,OAAO,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC;YAC/B,IAAG,KAAK,IAAI,KAAK,EAAE;gBACjB,OAAO,KAAK,CAAC,KAAK,CAAC,CAAC;aACrB;SACF;QACD,OAAe,KAAK,CAAC;KACtB;;;;;;;IAQS,SAAS,CAAC,KAAa;QAC/B,IAAI,IAAI,GAAW,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAChD,IAAI,KAAK,GAAW,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACrD,IAAI,GAAG,GAAW,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC/C,IAAI,IAAI,GAAW,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAChD,IAAI,MAAM,GAAW,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;QACnD,IAAI,MAAM,GAAW,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QACxD,IAAI,KAAK,GAAW,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;;QAGvD,IAAI,OAAO,GAAW,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACzC,IAAG,OAAO,IAAI,CAAC,CAAC,EAAE;YAChB,IAAI,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YAC/B,IAAG,KAAK,KAAK,CAAC,CAAC,EAAE;gBACf,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;aAC5B;YACD,IAAI,SAAS,GAAQ,KAAK,CAAC,SAAS,CAAC,OAAO,GAAC,CAAC,EAAE,KAAK,CAAC,CAAC;YACvD,IAAI,IAAI,GAAG,GAAG,SAAS,CAAC;SACzB;;QAGD,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC;KAC1E;;;;;;;IAQS,UAAU,CAAC,IAAU;QAC7B,IAAI,GAAG,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,iBAAiB,EAAE,GAAG,KAAK,CAAC,CAAC;QACtE,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;YACnC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;YAC/B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;YAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;YAC3B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;YAC7B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;YAC7B,GAAG;YACH,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC,CAAC;KACvC;;;;;;;;IAUO,GAAG,CAAC,GAAW,EAAE,IAAY;QACnC,IAAI,CAAC,GAAG,GAAG,GAAC,EAAE,CAAC;QACf,OAAO,CAAC,CAAC,MAAM,GAAG,IAAI,EAAE;YACtB,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;SACb;QACD,OAAO,CAAC,CAAC;KACV;;;;;;;;;IAUO,IAAI,CAAC,GAAW,EAAE,IAAY;QACpC,IAAI,CAAC,GAAG,GAAG,GAAC,EAAE,CAAC;QACf,OAAO,CAAC,CAAC,MAAM,GAAG,IAAI,EAAE;YACtB,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;SACb;QACD,OAAO,CAAC,CAAC;KACV;CACF;;AC9JD;;;;;;;;;;;;;;;AAeA,AAYA,IAAIC,KAAQ,CAAC;;;;;;AAOb,MAAa,mBAAmB;IAI9B;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,uBAAuB,EAAE,CAAC;KACjD;;;;;;;IAQM,OAAO,CAAC,SAAiB,EAAE,MAAiB;QACjD,IAAI,aAAa,GAAkB,qBAAqB,CAAC,gBAAgB,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QACjG,IAAI,aAAa,IAAI,IAAI,EAAE;YACzB,MAAM,IAAI,YAAY,CAAC,yDAAyD,CAAC,CAAC;SACnF;QAED,IAAI,aAAa,CAAC,UAAU,EAAE,EAAE;YAC9B,IAAI,YAAY,GAAiB,aAAa,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;YACrE,IAAI,eAAe,GAAc,EAAE,CAAC;YACpC,KAAK,IAAI,MAAM,IAAI,YAAY,EAAE;gBAC/B,eAAe,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;aAC/E;YACD,MAAM,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;SACtC;QAED,MAAM,CAAC,mBAAmB,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC,CAAC;QACpD,IAAI,mBAAmB,GAAkC,aAAa,CAAC,aAAa,EAAE,CAAC;QACvF,IAAI,CAAC,wBAAwB,CAAC,SAAS,EAAE,MAAM,EAAE,mBAAmB,CAAC,CAAC;QACtE,MAAM,CAAC,iBAAiB,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC,CAAC;KACnD;;;;;;;;IASS,wBAAwB,CAAC,SAAiB,EAAE,MAAiB,EAAE,mBAAkD;QACzH,KAAK,IAAI,CAAC,IAAI,mBAAmB,CAAC,MAAM,EAAE,EAAE;YAC1C,IAAI,kBAAkB,GAAuB,mBAAmB,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;YAC7E,IAAI,UAAU,GAAW,IAAI,CAAC;YAC9B,IAAI;gBACF,UAAU,GAAG,kBAAkB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;aAChD;YACD,OAAO,CAAC,EAAE;gBACRA,KAAG,CAAC,KAAK,CAAC,gBAAgB,GAAG,kBAAkB,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC;aAChE;YAED,IAAI,UAAU,IAAI,IAAI,EAAE;gBACtB,QAAQ,kBAAkB,CAAC,OAAO,EAAE;oBAClC,KAAK,sBAAsB,CAAC,eAAe;wBACzC,IAAI,WAA0B,CAAC;wBAC/B,IAAI,UAAU,YAAY,KAAK,EAAE;4BAC/B,WAAW,GAAG,UAAU,CAAC;yBAC1B;6BACI,IAAG,UAAU,YAAY,SAAS,EAAE;4BACvC,WAAW,GAAuB,UAAW,CAAC,MAAM,EAAE,CAAC;yBACxD;6BACI;4BACH,WAAW,GAAG,CAAC,UAAU,CAAC,CAAC;yBAC5B;wBAED,KAAK,IAAI,QAAQ,IAAI,WAAW,EAAE;4BAChC,IAAI,aAAa,GAAkB,qBAAqB,CAAC,gBAAgB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;4BAChG,IAAI,aAAa,IAAI,IAAI,EAAE;gCACzB,MAAM,IAAI,YAAY,CAAC,mCAAmC,GAAG,QAAQ,CAAC,WAAW,CAAC,IAAI,GAAG,iCAAiC,CAAC,CAAC;6BAC7H;4BAED,IAAI,aAAa,GAAW,kBAAkB,CAAC,OAAO,EAAE,CAAC;4BACzD,IAAI,kBAAkB,CAAC,OAAO,EAAE,EAAE;gCAChC,aAAa,GAAG,aAAa,CAAC,OAAO,EAAE,CAAC;6BACzC;4BAED,MAAM,CAAC,mBAAmB,CAAC,aAAa,CAAC,CAAC;4BAC1C,IAAI,CAAC,wBAAwB,CAAC,QAAQ,EAAE,MAAM,EAAE,aAAa,CAAC,aAAa,EAAE,CAAC,CAAC;4BAC/E,MAAM,CAAC,iBAAiB,CAAC,aAAa,CAAC,CAAC;yBACzC;wBACD,MAAM;oBACR,KAAK,sBAAsB,CAAC,OAAO;wBACjC,IAAI,QAAQ,GAAW,IAAI,CAAC,aAAa,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;wBACjE,IAAI,CAAC,QAAQ,IAAI,IAAI,MAAM,EAAE,KAAK,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE;4BAClD,MAAM,CAAC,YAAY,CAAC,kBAAkB,CAAC,OAAO,EAAE,EAAE,QAAQ,CAAC,CAAC;yBAC7D;wBACD,MAAM;oBACR;wBACE,MAAM,IAAI,YAAY,CAAC,oCAAoC,GAAG,kBAAkB,CAAC,OAAO,EAAE,CAAC,CAAC;iBAC/F;aACF;iBACI,IAAI,kBAAkB,CAAC,UAAU,EAAE,EAAE;gBACxC,MAAM,IAAI,YAAY,CAAC,WAAW,GAAG,kBAAkB,CAAC,QAAQ,EAAE,GAAG,oBAAoB,CAAC,CAAC;aAC5F;SACF;KACF;;;;;;IAOM,aAAa;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;IAOM,aAAa,CAAC,UAA4B;QAC/C,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;CACF;AAEDA,KAAG,GAAG,UAAU,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC;;MCxJhC,YAAY;IAKvB,YAAY,IAAY;QACtB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;KAChB;IAEM,IAAI,CAAC,IAAoB,EAAE,MAAe,EAAE,MAAe;QAChE,IAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YACpC,OAAO,CAAC,CAAC,CAAC;SACX;aAAM;YACL,IAAG,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;gBACzB,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;aACxB;iBAAM;gBACL,MAAM,GAAG,MAAM,IAAI,CAAC,CAAC;gBACrB,MAAM,GAAG,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC;gBAC/B,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC5D,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC1B,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;iBACpC;gBACD,OAAO,MAAM,CAAC;aACf;SACF;KACF;IAGM,QAAQ;QACb,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACjD,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAClC,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,OAAO,EAAE,CAAC;KACX;IAGM,KAAK;QACV,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;KACnB;IAGM,IAAI;QACT,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC;KAC3B;IAGM,KAAK;QACV,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC;KAC3B;IAGM,SAAS;QACd,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KAC3C;CACF;;ACxCD;;;;;AAKA,MAAa,cAAc;IAElB,QAAQ,CAAC,IAAY,EAAE,KAAa;KAC1C;IAEM,SAAS,CAAC,IAAY,EAAE,KAAa;KAC3C;IAEM,cAAc,CAAC,aAAqB;KAC1C;IAEM,YAAY,CAAC,aAAqB;KACxC;CAEF;;ACrCD;;;;;;;;;;;;;;;AAeA,AAEA;;;AAGA,MAAa,iBAAkB,SAAQ,YAAY;IAEjD,YAAY,OAAe;QACzB,KAAK,CAAC,OAAO,CAAC,CAAC;KAChB;CACF;;MCzBY,KAAK;IAGjB;QACC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;KACjB;IAGM,IAAI,CAAC,GAAG,MAAgB;QAC7B,OAAO,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;KAC3D;IAGM,GAAG;QACR,OAAO,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC9C;IAGM,IAAI;QACT,IAAG,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YAC3B,OAAO,IAAI,CAAC;SACb;aAAM;YACL,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;SAC5C;KACF;IAGM,OAAO;QACZ,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,CAAC;KACjC;CACD;;AC9BD;;;;;;;;;;;;;;;AAgBA,IAAY,iBAGX;AAHD,WAAY,iBAAiB;IAC3B,qEAAU,CAAA;IACV,+DAAO,CAAA;CACR,EAHW,iBAAiB,KAAjB,iBAAiB,QAG5B;;;;;;AAOD,MAAa,aAAa;IAIxB,YAAY,SAA4B,EAAE,UAAkB;QAC1D,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;IAEM,YAAY;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;IAEM,aAAa;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;CACF;;AC1CD;;;;;;;;;;;;;;;AAeA,AAOA,IAAIA,KAAQ,CAAC;;;;AAKb,MAAa,mBAAmB;IAM9B,YAAY,UAAsB;QAChC,IAAI,CAAC,UAAU,GAAG,IAAI,KAAK,EAAiB,CAAC;QAC7C,IAAI,CAAC,aAAa,GAAG,IAAI,KAAK,EAAiB,CAAC;QAEhD,IAAI,UAAU,IAAI,IAAI,EAAE;YACtB,MAAM,IAAI,YAAY,CAAC,kCAAkC,CAAC,CAAC;SAC5D;QAED,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;IAEM,OAAO,CAACC,SAAiB;QAC9BA,SAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvCA,SAAM,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7CA,SAAM,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAChD;IAEM,SAAS,CAAC,IAAY;QAC3B,IAAI,KAAK,GAAW,IAAI,CAAC,IAAI,CAAC;QAC9B,IAAID,KAAG,CAAC,cAAc,EAAE,EAAE;YACxBA,KAAG,CAAC,KAAK,CAAC,iBAAiB,GAAG,KAAK,CAAC,CAAC;SACtC;QAED,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,YAAY,EAAE,IAAI,iBAAiB,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE;YAC5J,IAAI,UAAU,GAAW,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,aAAa,EAAE,CAAC;YAChE,IAAIA,KAAG,CAAC,cAAc,EAAE,EAAE;gBACxBA,KAAG,CAAC,KAAK,CAAC,UAAU,GAAG,KAAK,GAAG,yBAAyB,GAAG,UAAU,CAAC,CAAC;aACxE;;YAGD,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;YAE3C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;SACjD;QAED,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC,iBAAiB,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;KAC3E;;;;;;;IAQS,gBAAgB,CAAC,KAAoB;QAC7C,OAAO,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;KAChD;IAEM,UAAU,CAAC,KAAa;QAC7B,IAAIA,KAAG,CAAC,cAAc,EAAE,EAAE;YACxBA,KAAG,CAAC,KAAK,CAAC,eAAe,GAAG,KAAK,CAAC,CAAC;SACpC;QAED,IAAI,aAAa,GAAkB,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;QACzD,IAAI,aAAa,CAAC,YAAY,EAAE,IAAI,iBAAiB,CAAC,UAAU,EAAE;YAChE,IAAI,KAAK,GAAW,aAAa,CAAC,aAAa,EAAE,CAAC,IAAI,EAAE,CAAC;YAEzD,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE;gBAC7B,MAAM,IAAI,YAAY,CAAC,0DAA0D,GAAG,KAAK,GAAG,KAAK,CAAC,CAAC;aACpG;iBACI;gBACH,IAAI,YAAY,GAAkB,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;gBACxD,IAAI,YAAY,CAAC,YAAY,EAAE,IAAI,iBAAiB,CAAC,OAAO,EAAE;oBAC5D,MAAM,IAAI,YAAY,CAAC,wCAAwC,GAAG,KAAK,GAAG,MAAM,GAAG,YAAY,CAAC,YAAY,EAAE,GAAG,IAAI,CAAC,CAAC;iBACxH;qBACI;oBACH,IAAI,KAAK,GAAW,YAAY,CAAC,aAAa,EAAE,CAAC;oBACjD,IAAIA,KAAG,CAAC,cAAc,EAAE,EAAE;wBACxBA,KAAG,CAAC,KAAK,CAAC,UAAU,GAAG,KAAK,GAAG,wBAAwB,GAAG,KAAK,CAAC,CAAC;qBAClE;oBACD,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;iBACzC;aACF;SACF;aACI,IAAI,aAAa,CAAC,YAAY,EAAE,IAAI,iBAAiB,CAAC,OAAO,EAAE;;YAElE,IAAI,KAAK,KAAK,aAAa,CAAC,aAAa,EAAE,EAAE;;gBAE3C,IAAI,KAAK,GAAW,aAAa,CAAC,aAAa,EAAE,CAAC;gBAClD,IAAIA,KAAG,CAAC,cAAc,EAAE,EAAE;oBACxBA,KAAG,CAAC,KAAK,CAAC,mBAAmB,GAAG,KAAK,CAAC,CAAC;iBACxC;gBACD,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBAEpC,IAAI,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;gBAClD,OAAO,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACzB,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;oBACV,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBACjC;aACF;iBACI;gBACH,MAAM,IAAI,YAAY,CAAC,sBAAsB,GAAG,aAAa,CAAC,aAAa,EAAE,CAAC,CAAC;aAChF;SACF;aACI;YACH,MAAM,IAAI,YAAY,CAAC,qBAAqB,GAAG,aAAa,CAAC,YAAY,EAAE,CAAC,CAAC;SAC9E;KACF;IAEM,MAAM,CAAC,KAAa;QACzB,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;YAC3B,IAAI,KAAoB,CAAC;YACzB,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,YAAY,EAAE,IAAI,iBAAiB,CAAC,UAAU,CAAC,EAAE;;gBAE3G,KAAK,GAAG,IAAI,aAAa,CAAC,iBAAiB,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,aAAa,EAAE,GAAG,KAAK,CAAC,CAAC;aACxG;iBACI;gBACH,KAAK,GAAG,IAAI,aAAa,CAAC,iBAAiB,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;aAChE;YACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC7B;KACF;CACF;AAEDA,KAAG,GAAG,UAAU,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC;;ACnJ7C;;;;;;;;;;;;;;;AAiBA,AASA,IAAIA,KAAQ,CAAC;AAEb,SAAS,WAAW,CAAC,EAAiB,EAAE,EAAiB;IACvD,IAAG,EAAE,CAAC,MAAM,KAAK,EAAE,CAAC,MAAM,EAAE;QAC1B,OAAO,KAAK,CAAC;KACd;IACD,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAC7B,IAAG,EAAE,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE;YAClB,OAAO,KAAK,CAAC;SACd;KACF;IACD,OAAO,IAAI,CAAC;CACb;;;;;;;AASD,MAA0B,aAAa;IAIrC;QACE,IAAI,CAAC,cAAc,GAAG,IAAI,cAAc,EAAE,CAAC;KAC5C;;;;;;IAOM,iBAAiB;QACtB,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;;;;;;IAOM,iBAAiB,CAAC,OAAmB;QAC1C,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;KAC/B;;;;;;IAOM,KAAK,CAAC,MAAoB;QAC/B,IAAI,MAAM,GAAW,EAAE,CAAC;QACxB,IAAI,iBAAiB,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;QACpD,IAAI,MAAM,GAAkB,IAAI,KAAK,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;QAChE,MAAM,CAAC,IAAI,+BAA8B,CAAC;QAC1C,IAAI,EAAE,GAAQ,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAClC,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,iBAAiB,CAAC,CAAC,EAAE;YAC9D,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE;;gBAE/B,MAAM,CAAC,IAAI,+BAA8B,CAAC;aAC3C;YACD,EAAE,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;YACnB,IAAI,OAAO,GAAW,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;YACtD,MAAM,IAAI,OAAO,CAAC;SACnB;QAED,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE;YACZ,MAAM,IAAI,iBAAiB,CAAC,qCAAqC,CAAC,CAAC;SACpE;aACI;YACH,IAAI,OAAO,GAAG,aAAa,CAAC,oCAAoC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC9E,IAAI,OAAO,EAAE;gBACX,IAAIA,KAAG,CAAC,aAAa,EAAE,EAAE;oBACvBA,KAAG,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;iBACxC;gBAED,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;gBACrC,MAAM,CAAC,KAAK,EAAE,CAAC;gBACf,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC;aAClD;iBACI;gBACHA,KAAG,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;gBACxC,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;gBACjC,MAAM,CAAC,KAAK,EAAE,CAAC;gBACf,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC;aAClD;SACF;KACF;;;;;;IAOS,oBAAoB;QAC5B,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,CAAC;KAC/B;;;;;;;;IASO,QAAQ,CAAC,MAAqB,EAAE,CAAS;QAC/C,KAAK,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAClC,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACnB,IAAI,EAAE,KAAK,CAAC,EAAE;gBACZ,OAAO,IAAI,CAAC;aACb;SACF;QACD,OAAO,KAAK,CAAC;KACd;IAEO,cAAc,CAAC,MAAqB,EAAE,CAAS;QACrD,IAAI,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC1C,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SAC3B;QACD,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QAC9B,OAAO,OAAO,CAAC;KAChB;;;;;;IAOS,uBAAuB,CAAC,IAAY;QAC5C,IAAI,MAAM,GAAG,KAAK,CAAC;QACnB,IAAIC,SAAM,GAAcC,MAAU,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;QAC/C,IAAI,OAAO,GAAG,IAAI,mBAAmB,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;QAChE,OAAO,CAAC,OAAO,CAACD,SAAM,CAAC,CAAC;QACxBA,SAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;KACpB;;;;;;IAOS,uBAAuB,CAAC,IAAY;QAC5C,IAAI,MAAM,GAAG,IAAI,CAAC;QAClB,IAAIA,SAAM,GAAcC,MAAU,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;QAC/C,IAAI,OAAO,GAAG,IAAI,mBAAmB,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;QAChE,OAAO,CAAC,OAAO,CAACD,SAAM,CAAC,CAAC;QACxBA,SAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;KACpB;;;;;;IAOS,mBAAmB,CAAC,KAAa;QACzC,IAAI,KAAK,GAAkB,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QACpD,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAChC,IAAI,IAAI,GAAW,KAAK,CAAC,CAAC,CAAC,CAAC;YAC5B,IAAI,UAAU,GAAW,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YAC3C,IAAI,UAAU,IAAI,CAAC,EAAE;gBACnB,IAAI,IAAI,GAAW,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;gBACjD,IAAI,KAAK,GAAW,IAAI,CAAC,MAAM,GAAG,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;gBACnF,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;aAC3C;SACF;KACF;;;;;;IAOS,mBAAmB,CAAC,KAAa;QACzC,IAAI,cAAc,GAAa,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACnD,KAAK,IAAI,aAAa,IAAI,cAAc,EAAE;YACxC,IAAI,WAAW,GAAW,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YACrD,IAAI,WAAW,IAAI,CAAC,EAAE;gBACpB,IAAI,IAAI,GAAW,aAAa,CAAC,SAAS,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;gBAC3D,IAAI,KAAK,GAAW,aAAa,CAAC,MAAM,GAAG,WAAW,GAAG,aAAa,CAAC,SAAS,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;gBACvG,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;gBAChC,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;gBACjC,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;gBACrB,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;aAC3C;SACF;KACF;;AAtKa,kDAAoC,GAAW,uBAAuB,CAAC;AAyKvFD,KAAG,GAAG,UAAU,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;;ACzNvC;;;;;;;;;;;;;;;AAeA,AAEA;;;AAGA,MAAa,kBAAmB,SAAQ,iBAAiB;IAEvD,YAAY,OAAe;QACzB,KAAK,CAAC,OAAO,CAAC,CAAC;KAChB;CACF;;ACzBD;;;;;;;;;;;;;;;AAeA,AAWA,IAAIA,KAAQ,CAAC;AAEb,MAAM,mBAAmB;IAMvB,YAAY,IAAqB,EAAE,IAAoB,EAAE,IAAa;QACpE,IAAI,CAAC,qBAAqB,GAAG,CAAC,CAAC;QAC/B,QAAO,SAAS,CAAC,MAAM;YACrB,KAAK,CAAC;gBACJ,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;gBACjD,MAAM;YAER,KAAK,CAAC;gBACJ,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;gBACjD,MAAM;YAER;gBACE,MAAM,IAAI,YAAY,CAAC,6BAA6B,CAAC,CAAC;SACzD;KACF;IAEO,oBAAoB,CAAC,oBAA4B;QACvD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,aAAa,GAAG,oBAAoB,CAAC;KAC3C;IAEO,oBAAoB,CAAC,SAAiB,EAAE,IAAmB,EAAE,aAAqB;QACxF,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;IAEM,cAAc;QACnB,OAAO,IAAI,CAAC,SAAS,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC;KACpD;IAEM,UAAU,CAAC,aAAqB;QACrC,OAAO,IAAI,CAAC,cAAc,EAAE,IAAI,aAAa,KAAK,IAAI,CAAC,aAAa,CAAC;KACtE;CACF;;;;;;AAQD,MAAa,4BAA4B;IAMvC,YAAY,IAAO,EAAE,UAA4B;QAJzC,UAAK,GAA+B,IAAI,KAAK,EAAuB,CAAC;QAErE,gBAAW,GAAY,KAAK,CAAC;QAGnC,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,EAAuB,CAAC;QAC9C,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAEzB,IAAI,aAAa,GAAkB,qBAAqB,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC5F,IAAI,aAAa,IAAI,IAAI,EAAE;YACzB,MAAM,IAAI,YAAY,CAAC,oCAAoC,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,kCAAkC,CAAC,CAAC;SAC3H;QAED,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,mBAAmB,CAAC,IAAI,EAAE,aAAa,EAAE,aAAa,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QACvF,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;IAEM,QAAQ,CAAC,IAAY,EAAE,KAAa;QACzC,IAAI,UAAU,GAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACjE,IAAI,UAAU,IAAI,IAAI,EAAE;YACtB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC;SACpH;KACF;IAEM,SAAS,CAAC,IAAY,EAAE,KAAa;QAC1C,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,cAAc,EAAE,EAAE;YACvC,IAAI,SAAS,GAAuB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,qBAAqB,CAAC,CAAC;YACvH,IAAI,SAAS,IAAI,IAAI,IAAI,SAAS,CAAC,OAAO,EAAE,IAAI,sBAAsB,CAAC,OAAO,EAAE;gBAC9E,IAAI;oBACF,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,gBAAgB,EAAE,EAAE,KAAK,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,SAAS,CAAC,CAAC;iBAC7G;gBACD,OAAO,CAAC,EAAE;oBACRA,KAAG,CAAC,KAAK,CAAC,gBAAgB,GAAG,SAAS,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC;iBACvD;gBACD,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,qBAAqB,GAAG,SAAS,CAAC,QAAQ,EAAE,CAAC;aAChE;iBACI,IAAIA,KAAG,CAAC,aAAa,EAAE,EAAE;gBAC5BA,KAAG,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,GAAG,iCAAiC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,qBAAqB,CAAC,CAAC;aAC7J;SACF;KACF;IAEM,cAAc,CAAC,aAAqB;QACzC,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,cAAc,EAAE,EAAE;YACtC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,mBAAmB,CAAC,aAAa,CAAC,CAAC,CAAC;SACzD;aACI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YAC1B,IAAI,aAAa,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE;gBACtD,MAAM,IAAI,YAAY,CAAC,2BAA2B,GAAG,aAAa,CAAC,CAAC;aACrE;YAED,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SACzB;aACI;YACH,IAAI,UAA+B,CAAC;YAEpC,IAAI,SAAS,GAAuB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,qBAAqB,CAAC,CAAC;YAChI,IAAI,SAAS,IAAI,IAAI,EAAE;gBACrB,IAAI,SAAS,CAAC,OAAO,EAAE,IAAI,sBAAsB,CAAC,eAAe,EAAE;oBACjE,IAAI,aAAkB,CAAC;oBACvB,IAAI,SAAS,CAAC,OAAO,EAAE,EAAE;wBACvB,aAAa,GAAG,qBAAqB,CAAC,mBAAmB,CAAC,aAAa,CAAC,CAAC;qBAC1E;yBACI;wBACH,aAAa,GAAG,SAAS,CAAC,gBAAgB,EAAE,CAAC;qBAC9C;oBAED,IAAI,aAAa,IAAI,IAAI,EAAE;wBACzB,IAAI,aAAa,GAAkB,qBAAqB,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;wBACzF,IAAI,aAAa,IAAI,IAAI,EAAE;4BACzB,MAAM,IAAI,YAAY,CAAC,2CAA2C,GAAG,aAAa,CAAC,OAAO,EAAE,CAAC,CAAC;yBAC/F;wBAED,IAAI,SAAS,GAAW,SAAS,GAAG,IAAI,aAAa,EAAE,CAAC;wBACxD,UAAU,GAAG,IAAI,mBAAmB,CAAC,SAAS,EAAE,aAAa,EAAE,aAAa,CAAC,CAAC;qBAC/E;yBACI;wBACH,IAAIA,KAAG,CAAC,aAAa,EAAE,EAAE;4BACvBA,KAAG,CAAC,IAAI,CAAC,kBAAkB,GAAG,aAAa,GAAG,iCAAiC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,6BAA6B,CAAC,CAAC;yBACrJ;;wBAGD,UAAU,GAAG,IAAI,mBAAmB,CAAC,aAAa,CAAC,CAAC;qBACrD;oBAED,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,qBAAqB,GAAG,SAAS,CAAC,QAAQ,EAAE,CAAC;iBAChE;qBACI;oBACH,IAAIA,KAAG,CAAC,aAAa,EAAE,EAAE;wBACvBA,KAAG,CAAC,IAAI,CAAC,kBAAkB,GAAG,aAAa,GAAG,iCAAiC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,qEAAqE,CAAC,CAAC;qBAC7L;;oBAGD,UAAU,GAAG,IAAI,mBAAmB,CAAC,aAAa,CAAC,CAAC;iBACrD;aACF;iBACI;gBACH,IAAIA,KAAG,CAAC,aAAa,EAAE,EAAE;oBACvBA,KAAG,CAAC,IAAI,CAAC,kBAAkB,GAAG,aAAa,GAAG,iCAAiC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,iDAAiD,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,qBAAqB,CAAC,CAAC;iBACnN;;gBAGD,UAAU,GAAG,IAAI,mBAAmB,CAAC,aAAa,CAAC,CAAC;aACrD;YAED,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAC7B;KACF;IAEM,YAAY,CAAC,aAAqB;QACvC,IAAI,UAAU,GAAwB,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;QACvD,IAAI,aAAa,KAAK,UAAU,CAAC,aAAa,EAAE;YAC9C,MAAM,IAAI,kBAAkB,CAAC,2BAA2B,GAAG,aAAa,GAAG,aAAa;gBACtF,UAAU,CAAC,aAAa,GAAG,qEAAqE,CAAC,CAAC;SACrG;QAED,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE;YACzB,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,aAAa,CAAC,EAAE;;gBAEzC,IAAI,SAAS,GAAuB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,YAAY,CACnE,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,qBAAqB,EAAE,UAAU,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;gBAC9F,IAAI;oBACF,IAAI,SAAS,IAAI,IAAI,EAAE;wBACrB,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,SAAS,CAAC,CAAC;qBAClE;yBAAM;wBACL,IAAIA,KAAG,CAAC,aAAa,EAAE,EAAE;4BACvBA,KAAG,CAAC,IAAI,CAAC,kBAAkB,GAAG,aAAa,GAAG,iCAAiC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,iDAAiD,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,qBAAqB,CAAC,CAAC;yBACnN;qBACF;iBACF;gBACD,OAAO,CAAC,EAAE;oBACRA,KAAG,CAAC,KAAK,CAAC,gBAAgB,GAAG,SAAS,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC;iBACvD;gBACD,IAAI,SAAS,IAAI,IAAI,EAAE;oBACrB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,qBAAqB,GAAG,SAAS,CAAC,QAAQ,EAAE,CAAC;iBAChE;aACF;SACF,AAGA;KACF;CACF;AAEDA,KAAG,GAAG,UAAU,CAAC,MAAM,CAAC,4BAA4B,CAAC,CAAC;;ACxMtD;;;;;AAKA,MAAa,qBAAqB;IAKhC,YAAY,KAAU;QACpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,IAAI,uBAAuB,EAAE,CAAC;KACjD;IAEM,SAAS,CAAC,GAA0B;QACzC,IAAI,MAAM,GAAiB,CAAM,GAAG,YAAY,YAAY,IAAkB,GAAG,GAAG,IAAI,YAAY,CAAS,GAAG,CAAC,CAAC;QAClH,IAAI,SAAS,GAAM,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;QACpC,IAAI,MAAM,GAAc,IAAI,CAAC,SAAS,EAAE,CAAC;QACzC,MAAM,CAAC,iBAAiB,CAAC,IAAI,4BAA4B,CAAI,SAAS,EAAE,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;QAC/F,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACrB,OAAO,SAAS,CAAC;KAClB;;;;;;IAOS,SAAS;QACjB,OAAO,IAAI,aAAa,EAAE,CAAC;KAC5B;;;;;;IAOM,aAAa;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;IAOM,aAAa,CAAC,UAA4B;QAC/C,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;CACF;;ACtDD;;;;;AAKA,MAAsB,kBAAkB;IAMtC;QACE,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;KACpB;;;;;;IAOM,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;IAOM,UAAU,CAAC,OAAe;QAC/B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;;;;;;;IAeM,OAAO,cAAc,CAAC,IAAwB,EAAE,KAAyB;QAC9E,OAAO,IAAI,CAAC,OAAO,EAAE,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC;KACzC;CACF;;ACpED;;;;;;;;;;;;;;;AAeA,AAWA;;;;;;;AAQA,MAAa,gBAAgB;;;;;;;IAepB,WAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;;IAQM,WAAW,CAAC,QAA6B;QAC9C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;;;;;;;IAQM,MAAM;QACX,OAAO,IAAI,CAAC,GAAG,CAAC;KACjB;;;;;;;IAQM,MAAM,CAAC,GAAW;QACvB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;KAChB;;;;;;;IAQM,cAAc;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;;;;;;IAQM,cAAc,CAAC,WAA0C;QAC9D,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAChC;;;;;;IAOM,iBAAiB;QACtB,IAAI,IAAI,GAAmB,cAAc,CAAC,MAAM,CAAC;QACjD,IAAI,OAAO,GAAuB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAE3D,IAAI,OAAO,IAAI,IAAI,EAAE;YACnB,OAAmC,OAAQ,CAAC,iBAAiB,EAAE,CAAC;SACjE;aACI;YACH,OAAO,IAAI,CAAC;SACb;KACF;;;;;;;IAQM,aAAa,CAAC,IAAoB;QACvC,IAAI,OAAO,GAAuB,IAAI,CAAC;QACvC,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,EAAE;YAC5B,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,EAAE;gBACvC,IAAI,UAAU,GAAuB,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;gBAClE,IAAI,UAAU,CAAC,OAAO,EAAE,IAAI,IAAI,EAAE;oBAChC,OAAO,GAAG,UAAU,CAAC;oBACrB,MAAM;iBACP;aACF;SACF;QACD,OAAO,OAAO,CAAC;KAChB;CACF;AAED,aAAa,CAAE,gBAAgB,EAAE,KAAK,CAAE,CAAC;AACzC,UAAU,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,mBAAmB,EAAE,IAAI,EAAE,gBAAgB,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,gBAAgB,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AAC3K,UAAU,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,gBAAgB,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE,gBAAgB,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC;AACtJ,kBAAkB,CAAC,gBAAgB,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,mBAAmB,EAAE,kBAAkB,EAAE,IAAI,EAAE,gBAAgB,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,EAAE,gBAAgB,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,CAAC;;MChJnM,YAAY;IAGvB;QACE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;KAChB;IAEM,QAAQ,CAAC,QAAiB;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KAC3B;IAEM,MAAM,CAAC,IAAY;QACxB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACtB;IAEM,IAAI;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAS,aAAqB,EAAE,YAAoB;YAC1E,OAAO,YAAY,CAAC,MAAM,CAAC;SAC5B,EAAE,CAAC,CAAC,CAAC;KACP;CACF;AAID,MAAa,YAAY;IAIvB,YAAY,GAAiB,EAAE,QAAgB;QAC7C,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;IAGD,KAAK;KACJ;IAGD,KAAK;KACJ;IAGD,KAAK,CAAC,IAAY;QAChB,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;;;KAGvB;CAEF;;AC3BD;;;;;;AAOA,MAAa,WAAW;IAOtB,YAAY,GAAgC;QAC1C,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC;QAC7B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,wBAAwB,GAAG,KAAK,CAAC;QAEtC,IAAG,GAAG,YAAY,YAAY,EAAE;YAC9B,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;SACnB;aAAM,IAAG,GAAG,YAAY,YAAY,EAAE;YACrC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;SACnC;aAAM;YACL,MAAM,IAAI,YAAY,CAAC,wBAAwB,CAAC,CAAC;SAClD;KACF;IAES,SAAS,CAAC,GAAiB;QACnC,OAAO,IAAI,YAAY,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;KAC5C;IAEM,YAAY,CAAC,OAAkB;QACpC,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,MAAM,IAAI,YAAY,CAAC,oCAAoC,CAAC,CAAC;SAC9D;;QAGD,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;QAC9B,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QAC7B,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;QAE5B,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QACxB,IAAI,QAAQ,GAAW,OAAO,CAAC,UAAU,CAAC,CAAC;QAC3C,IAAI,QAAQ,IAAI,IAAI,EAAE;YACpB,QAAQ,GAAG,MAAM,CAAC;SACnB;QACD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACvB,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;QACjC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QAC7B,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;QACjC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;QAC1B,IAAI,MAAM,GAAW,OAAO,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,MAAM,IAAI,IAAI,EAAE;YAClB,MAAM,GAAG,MAAM,CAAC;SACjB;QACD,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACrB,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;QAC1B,IAAI,GAAG,GAAW,OAAO,CAAC,YAAY,CAAC,CAAC;QACxC,IAAI,GAAG,IAAI,IAAI,EAAE;YACf,GAAG,GAAG,MAAM,CAAC;SACd;QACD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,OAAO,EAAE,CAAC;QAEf,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;KAC5B;IAEM,mBAAmB,CAAC,aAAqB;QAC9C,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAChB,IAAI,IAAI,CAAC,0BAA0B,EAAE,EAAE;YACrC,IAAI,CAAC,OAAO,EAAE,CAAC;SAChB;KACF;IAEM,YAAY,CAAC,IAAY,EAAE,KAAa;QAC7C,IAAI,CAAC,KAAK,IAAI,IAAI,MAAM,EAAE,KAAK,KAAK,CAAC,EAAE;YACrC,MAAM,IAAI,YAAY,CAAC,qCAAqC,GAAG,IAAI,GAAG,sCAAsC,CAAC,CAAC;SAC/G;;QAGD,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YAC3B,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;SACxC;QAED,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YAC3B,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;SACrC;QAED,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YAC3B,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;SACrC;QAED,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACjB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAClB,IAAI,IAAI,CAAC,0BAA0B,EAAE,EAAE;YACrC,IAAI,CAAC,OAAO,EAAE,CAAC;SAChB;KACF;IAEM,iBAAiB,CAAC,aAAqB;QAC5C,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACjB,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAChB,IAAI,IAAI,CAAC,0BAA0B,EAAE,EAAE;YACrC,IAAI,CAAC,OAAO,EAAE,CAAC;SAChB;KACF;IAEM,0BAA0B;QAC/B,OAAO,IAAI,CAAC,wBAAwB,CAAC;KACtC;IAEM,2BAA2B,CAAC,wBAAiC;QAClE,IAAI,CAAC,wBAAwB,GAAG,wBAAwB,CAAC;KAC1D;IAEM,KAAK;QACV,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;KACrB;IAEM,KAAK;QACV,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;KACrB;kBAEa,OAAO,CAAC,OAAe,IAAI;QACvC,IAAG,IAAI,IAAI,IAAI,EAAE;YACf,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SAClB;QACD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KACxC;kBAEa,KAAK,CAAC,IAAY;QAC9B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,GAAG,MAAM,GAAG,IAAI,CAAC,CAAC;KACjD;CACF;;ACjKD;;;;;;;;;;;;;;;AAeA,AAcA;;;;;AAOA,IAAIA,KAAQ,CAAC;AAMb,SAAS,kBAAkB,CAAC,GAAW,EAAE,IAAY,EAAE,OAAsB,EAAE,IAAY,EAAE,KAAc;IACzG,OAAO,IAAI,OAAO,CAAC,UAAS,OAAO,EAAE,MAAM;QACzC,IAAI,OAAO,GAAG,IAAI,cAAc,EAAE,CAAC;QACnC,IAAI,YAAY,GAAY,KAAK,CAAC;QAClC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;QACjC,KAAK,IAAI,MAAM,IAAI,OAAO,EAAE;YAC1B,OAAO,CAAC,gBAAgB,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;SACnD;QACD,OAAO,CAAC,MAAM,GAAG;YACf,YAAY,GAAG,IAAI,CAAC;YACpB,IAAI,OAAO,CAAC,MAAM,IAAI,GAAG,IAAI,OAAO,CAAC,MAAM,GAAG,GAAG,EAAE;gBACjD,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;aAC/B;iBAAM,IAAI,OAAO,CAAC,MAAM,IAAI,GAAG,IAAI,OAAO,CAAC,MAAM,GAAG,GAAG,EAAE;gBACxD,MAAM,CAAC,IAAI,YAAY,CAAC,QAAQ,GAAG,OAAO,CAAC,MAAM,GAAG,wBAAwB,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;aACvG;iBAAM;gBACL,MAAM,CAAC,IAAI,YAAY,CAAC,yCAAyC,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;aACtF;SACF,CAAC;QACF,OAAO,CAAC,OAAO,GAAG;YAChB,MAAM,CAAC,IAAI,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC;SAC3C,CAAC;QAEF,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEnB,IAAI,CAAC,KAAK,IAAI,CAAC,YAAY,EAAE;YACrB,OAAQ,CAAC,MAAM,EAAE,CAAC;SACzB;KACF,CAAC,CAAC;CACJ;;;;;;AAQD,MAAa,eAAe;IAO1B;QACE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,UAAU,GAAG,IAAI,mBAAmB,EAAE,CAAC;QAC5C,IAAI,CAAC,YAAY,GAAG,IAAI,qBAAqB,CAAmB,gBAAgB,CAAC,CAAC;QAClF,IAAI,CAAC,IAAI,GAAG,kBAAkB,CAAC;KAChC;;IAGM,WAAW,CAAC,OAAwB,EAAE,GAAW;;;;;QAMtD,IAAI,SAAS,GAAG,IAAI,YAAY,EAAE,CAAC;QACnC,IAAI,SAAS,GAAc,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;QACxD,IAAI,CAAC,aAAa,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QACjD,SAAS,CAAC,KAAK,EAAE,CAAC;QAClB,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;QAC3B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,SAAS,CAAC;aACrC,IAAI,CAAC,CAAC,GAAW;YAChB,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YACtB,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;SAC5B,CAAC,CAAC;KACJ;;;;;;IAOS,UAAU,CAAC,SAAuB;QAC1C,IAAIA,KAAG,CAAC,aAAa,EAAE,EAAE;YACvBA,KAAG,CAAC,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC,IAAI,EAAE,GAAG,4BAA4B,CAAC,CAAC;YAC3E,IAAIA,KAAG,CAAC,cAAc,EAAE,EAAE;gBACxBA,KAAG,CAAC,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;aACxC;SACF;KACF;IAES,WAAW,CAAC,QAAgB;QACpC,IAAIA,KAAG,CAAC,aAAa,EAAE,EAAE;YACvB,IAAIA,KAAG,CAAC,cAAc,EAAE,EAAE;gBACxBA,KAAG,CAAC,KAAK,CAAC,wBAAwB,EAAE,QAAQ,CAAC,CAAC;aAC/C;SACF;KACF;;;;;;;;IASS,UAAU,CAAC,GAAW,EAAE,SAAuB;QACvD,IAAI,OAAO,GAAG,SAAS,CAAC,QAAQ,EAAE,CAAC;QACnC,IAAI,KAAK,GAAY,IAAI,CAAC,QAAQ,EAAE,CAAC;QACrC,IAAI,OAAO,GAAkB;YAC3B,cAAc,EAAE,mBAAmB;YACnC,QAAQ,EAAE,wBAAwB;SACnC,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;KACxD;;;;;;;IAQS,SAAS,CAAC,GAAW;QAC7B,IAAI;YACF,IAAI,MAAM,GAAG,IAAI,YAAY,CAAC,GAAG,CAAC,CAAC;YACnC,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;SACjD;QACD,OAAO,CAAC,EAAE;YACR,MAAM,IAAI,sBAAsB,CAAC,mCAAmC,EAAE,CAAC,CAAC,CAAC;SAC1E;KACF;;;;;;;IAQS,YAAY,CAAC,GAAiB;QACtC,OAAO,IAAI,WAAW,CAAC,GAAG,CAAC,CAAC;KAC7B;;;;;;IAOM,aAAa;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;IAOM,aAAa,CAAC,UAA+B;QAClD,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;;;;;;IAOM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;IAOM,eAAe,CAAC,YAAqD;QAC1E,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;;;;;;IAOM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;IAQM,QAAQ,CAAC,KAAc;QAC5B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;;;;;;IAOM,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;;;;;;IAQM,OAAO,CAAC,IAAiB;QAC9B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;CAEF;AAEDA,KAAG,GAAG,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;;AC7PzC;;;;;;;;;;;;;;;AAeA,AAMA;;;;;AAKA,MAAa,WAAY,SAAQ,WAAW;IAE1C,YAAY,GAAgC;QAC1C,KAAK,CAAC,GAAG,CAAC,CAAC;KACZ;;IAGS,SAAS,CAAC,GAAiB;QACnC,OAAO,IAAI,YAAY,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;KACvC;IAEM,YAAY,CAAC,OAAkB;QACpC,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,MAAM,IAAI,YAAY,CAAC,oCAAoC,CAAC,CAAC;SAC9D;;QAGD,IAAI,CAAC,KAAK,CAAC,6CAA6C,CAAC,CAAC;QAC1D,IAAI,QAAQ,GAAW,OAAO,CAAC,UAAU,CAAC,CAAC;QAC3C,IAAI,QAAQ,IAAI,IAAI,EAAE;YACpB,QAAQ,GAAG,MAAM,CAAC;SACnB;QACD,IAAI,MAAM,GAAW,OAAO,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,MAAM,IAAI,IAAI,EAAE;YAClB,MAAM,GAAG,MAAM,CAAC;SACjB;;QAED,IAAI,GAAG,GAAW,OAAO,CAAC,YAAY,CAAC,CAAC;QACxC,IAAI,GAAG,IAAI,IAAI,EAAE;YACf,GAAG,GAAG,MAAM,CAAC;SACd;QAED,IAAI,CAAC,KAAK,CAAC,qDAAqD,GAAG,QAAQ,GAAG,kBAAkB,GAAG,MAAM,GAAG,kBAAkB,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC;QAC/I,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;KAC5B;IAEM,YAAY,CAAC,IAAY,EAAE,KAAa;QAC7C,KAAK,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAChC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACjB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACjB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;KACjB;;IAGM,0BAA0B;QAC/B,OAAO,KAAK,CAAC;KACd;CACF;;ACzED;;;;;;;;;;;;;;;AAeA,AAKA;;;AAGA,MAAa,eAAgB,SAAQ,eAAe;;IAGxC,YAAY,CAAC,GAAiB;QACtC,OAAO,IAAI,WAAW,CAAC,GAAG,CAAC,CAAC;KAC7B;CACF;;AC7BD;;;;;;;;;;;;;;;;;;AAmBA,IAAY,aAiBX;AAjBD,WAAY,aAAa;;;;IAKvB,mDAAK,CAAA;;;;IAKL,iDAAI,CAAA;;;;IAKJ,qDAAM,CAAA;CAEP,EAjBW,aAAa,KAAb,aAAa,QAiBxB;;ACZD;;;AAGA,MAAa,eAAe;;;;;;IAanB,cAAc;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;;;;;IAOM,cAAc,CAAC,WAA+B;QACnD,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAChC;;IAGM,iBAAiB;QACtB,OAAO,IAAI,CAAC,cAAc,EAAE,CAAC;KAC9B;;;;;;IAOM,sCAAsC;QAC3C,OAAO,IAAI,CAAC,mCAAmC,CAAC;KACjD;;;;;;IAOM,sCAAsC,CAAC,mCAA4C;QACxF,IAAI,CAAC,mCAAmC,GAAG,mCAAmC,CAAC;KAChF;;;;;;IAOM,2CAA2C;QAChD,OAAO,IAAI,CAAC,wCAAwC,CAAC;KACtD;;;;;;IAOM,2CAA2C,CAAC,wCAAiD;QAClG,IAAI,CAAC,wCAAwC,GAAG,wCAAwC,CAAC;KAC1F;;;;;;IAOM,6CAA6C;QAClD,OAAO,IAAI,CAAC,0CAA0C,CAAC;KACxD;;;;;;IAOM,6CAA6C,CAAC,0CAAmD;QACtG,IAAI,CAAC,0CAA0C,GAAG,0CAA0C,CAAC;KAC9F;;;;;;IAOM,SAAS;QACd,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;;;;;IAOM,SAAS,CAAC,MAAqB;QACpC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;CACF;AAED,aAAa,CAAE,eAAe,EAAE,cAAc,CAAE,CAAC;AACjD,kBAAkB,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,kBAAkB,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,CAAC;AACnN,WAAW,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,sCAAsC,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,sCAAsC,EAAE,CAAC,CAAC;AAC7O,WAAW,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,2CAA2C,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,2CAA2C,EAAE,CAAC,CAAC;AACvP,WAAW,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,6CAA6C,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,6CAA6C,EAAE,CAAC,CAAC;AAC5P,WAAW,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,SAAS,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,CAAC;;ACxI3L;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAY,yBAsBX;AAtBD,WAAY,yBAAyB;IAEnC,iFAAQ,CAAA;IACR,+FAAe,CAAA;IACf,qFAAU,CAAA;IACV,mFAAS,CAAA;IACT,mFAAS,CAAA;IACT,yFAAY,CAAA;IACZ,6EAAM,CAAA;IACN,qGAAkB,CAAA;IAClB,yFAAY,CAAA;IACZ,iGAAgB,CAAA;IAChB,gGAAe,CAAA;IACf,gGAAe,CAAA;IACf,oGAAiB,CAAA;IACjB,oFAAS,CAAA;IACT,kGAAgB,CAAA;IAChB,wFAAW,CAAA;IACX,sFAAU,CAAA;IACV,sFAAU,CAAA;IACV,4EAAK,CAAA;IACL,kFAAQ,CAAA;CACT,EAtBW,yBAAyB,KAAzB,yBAAyB,QAsBpC;;AC5CD;;;;;;;;;;;;;;;;;;AAmBA,IAAY,gBAKX;AALD,WAAY,gBAAgB;IAE1B,6DAAO,CAAA;IAEP,2DAAM,CAAA;CACP,EALW,gBAAgB,KAAhB,gBAAgB,QAK3B;;ACxBD;;;;;;;;;;;;;;;AAeA,AAIA;;;AAGA,MAAa,KAAK;;;;;;IAiBT,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;;;;;;IAOM,OAAO,CAAC,IAAY;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;;;;;;IAOM,WAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;IAOM,WAAW,CAAC,QAAgB;QACjC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;;;;;;IAOM,WAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;IAOM,WAAW,CAAC,QAAgB;QACjC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;;;;;;IAOM,WAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;IAOM,WAAW,CAAC,QAAgB;QACjC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;;;;;;IAOM,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;;;;;;IAOM,OAAO,CAAC,IAAY;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;;;;;;IAOM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;IAOM,QAAQ,CAAC,KAAa;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;;;;;;IAOM,MAAM;QACX,OAAO,IAAI,CAAC,GAAG,CAAC;KACjB;;;;;;IAOM,MAAM,CAAC,GAAW;QACvB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;KAChB;;;;;;;IAQM,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;IAOM,UAAU,CAAC,OAAe;QAC/B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;;;;;;IAOM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;IAOM,QAAQ,CAAC,KAAa;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;CAEF;AAED,aAAa,CAAE,KAAK,EAAE,OAAO,CAAE,CAAC;AAChC,WAAW,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;AAC7H,WAAW,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AACtJ,WAAW,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AACtI,WAAW,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AACtI,WAAW,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;AAC7I,WAAW,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;AAChJ,WAAW,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC;AACjJ,WAAW,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;AACvJ,WAAW,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;;AChNjI;;;;;;;;;;;;;;;AAeA,AAIA;;;;AAIA,MAAa,QAAQ;IAKnB;QACE,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;KACnB;;;;;;;IAQM,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;;;;;;IAOM,OAAO,CAAC,IAAY;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;;;;;;IAOM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;IAOM,eAAe,CAAC,YAAoB;QACzC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;CACF;AAED,aAAa,CAAE,QAAQ,EAAE,UAAU,CAAE,CAAC;AACtC,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE,QAAQ,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;AACvJ,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,QAAQ,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;;ACxEzK;;;;;;;;;;;;;;;AAeA,AAWA;;;AAGA,MAAa,WAAW;;;;;;IA4Bf,kBAAkB;QACvB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;;;;;;IAOM,kBAAkB,CAAC,eAA0C;QAClE,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;KACxC;;;;;;IAOM,aAAa;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;IAOM,aAAa,CAAC,UAAgB;QACnC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;;;;;;IAOM,gBAAgB;QACrB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;;;;;;IAOM,gBAAgB,CAAC,aAAmB;QACzC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;KACpC;;;;;;IAOM,gBAAgB;QACrB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;;;;;;IAOM,gBAAgB,CAAC,aAAmB;QACzC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;KACpC;;;;;;IAOM,SAAS;QACd,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;;;;;IAOM,SAAS,CAAC,MAAc;QAC7B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;IAOM,mBAAmB;QACxB,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;;;;;IAOM,mBAAmB,CAAC,MAAc;QACvC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;IAOM,KAAK;QACV,OAAO,IAAI,CAAC,EAAE,CAAC;KAChB;;;;;;IAOM,KAAK,CAAC,EAAU;QACrB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;KACd;;;;;;IAOM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;IAOM,eAAe,CAAC,YAAoB;QACzC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;;;;;;IAOM,mBAAmB;QACxB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;;;;;;IAOM,mBAAmB,CAAC,gBAAkC;QAC3D,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;KAC1C;;;;;;IAOM,SAAS;QACd,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;;;;;IAOM,SAAS,CAAC,MAAc;QAC7B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;IAOM,cAAc;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;;;;;IAOM,cAAc,CAAC,WAAmB;QACvC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAChC;;;;;;IAOM,kBAAkB;QACvB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;;;;;;IAOM,kBAAkB,CAAC,eAAuB;QAC/C,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;KACxC;;;;;;IAOM,yBAAyB;QAC9B,OAAO,IAAI,CAAC,sBAAsB,CAAC;KACpC;;;;;;IAOM,yBAAyB,CAAC,sBAA8B;QAC7D,IAAI,CAAC,sBAAsB,GAAG,sBAAsB,CAAC;KACtD;;;;;;IAOM,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;IAOM,UAAU,CAAC,OAAe;QAC/B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;;;;;;IAOM,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;;;;;;IAOM,OAAO,CAAC,IAAY;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;;;;;;IAOM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;IAOM,QAAQ,CAAC,KAAY;QAC1B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;;;;;;IAOM,gBAAgB;QACrB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;;;;;;IAOM,gBAAgB,CAAC,aAAiC;QACvD,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;KACpC;;;;;;IAOM,sBAAsB;QAC3B,OAAO,IAAI,CAAC,mBAAmB,CAAC;KACjC;;;;;;IAOM,sBAAsB,CAAC,mBAA6C;QACzE,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;KAChD;;;;;;IAOM,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;;;;;;IAOM,OAAO,CAAC,IAAY;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;;;;;;IAOM,WAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;IAOM,WAAW,CAAC,QAAkB;QACnC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;;;;;;IAOM,mBAAmB;QACxB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;;;;;;IAOM,mBAAmB,CAAC,gBAA0B;QACnD,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;KAC1C;CACF;AAED,aAAa,CAAE,WAAW,EAAE,SAAS,CAAE,CAAC;AACxC,WAAW,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,yBAAyB,EAAE,IAAI,EAAE,WAAW,CAAC,SAAS,CAAC,kBAAkB,EAAE,KAAK,EAAE,WAAW,CAAC,SAAS,CAAC,kBAAkB,EAAE,CAAC,CAAC;AAC1M,WAAW,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,WAAW,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,WAAW,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AAC7K,WAAW,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,WAAW,CAAC,SAAS,CAAC,gBAAgB,EAAE,KAAK,EAAE,WAAW,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC,CAAC;AACjK,WAAW,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,WAAW,CAAC,SAAS,CAAC,gBAAgB,EAAE,KAAK,EAAE,WAAW,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC,CAAC;AAClK,WAAW,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,CAAC,SAAS,CAAC,mBAAmB,EAAE,KAAK,EAAE,WAAW,CAAC,SAAS,CAAC,mBAAmB,EAAE,CAAC,CAAC;AACzL,WAAW,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,WAAW,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC;AAC5J,WAAW,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,WAAW,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;AACvK,WAAW,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,eAAe,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,gBAAgB,EAAE,IAAI,EAAE,WAAW,CAAC,SAAS,CAAC,mBAAmB,EAAE,KAAK,EAAE,WAAW,CAAC,SAAS,CAAC,mBAAmB,EAAE,CAAC,CAAC;AAC1L,WAAW,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,CAAC,SAAS,CAAC,SAAS,EAAE,KAAK,EAAE,WAAW,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,CAAC;AACtJ,WAAW,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,EAAE,WAAW,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,CAAC;AACjK,WAAW,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,CAAC,SAAS,CAAC,kBAAkB,EAAE,KAAK,EAAE,WAAW,CAAC,SAAS,CAAC,kBAAkB,EAAE,CAAC,CAAC;AACxK,WAAW,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,CAAC,SAAS,CAAC,yBAAyB,EAAE,KAAK,EAAE,WAAW,CAAC,SAAS,CAAC,yBAAyB,EAAE,CAAC,CAAC;AACnL,WAAW,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,WAAW,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;AACzJ,WAAW,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE,WAAW,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;AAChJ,kBAAkB,CAAC,WAAW,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC1I,kBAAkB,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,kBAAkB,EAAE,IAAI,EAAE,WAAW,CAAC,SAAS,CAAC,gBAAgB,EAAE,KAAK,EAAE,WAAW,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC,CAAC;AAC3L,kBAAkB,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,wBAAwB,EAAE,IAAI,EAAE,WAAW,CAAC,SAAS,CAAC,sBAAsB,EAAE,KAAK,EAAE,WAAW,CAAC,SAAS,CAAC,sBAAsB,EAAE,CAAC,CAAC;AAC3M,WAAW,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE,WAAW,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;AAChJ,kBAAkB,CAAC,WAAW,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,WAAW,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,WAAW,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AACnJ,kBAAkB,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,WAAW,CAAC,SAAS,CAAC,mBAAmB,EAAE,KAAK,EAAE,WAAW,CAAC,SAAS,CAAC,mBAAmB,EAAE,CAAC,CAAC;;ACnczL;;;;;;;;;;;;;;;AAeA,AAMA;;;;;AAMA,MAAa,eAAe;;;;;;IAWnB,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;IAOM,QAAQ,CAAC,KAAW;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;;;;;;IAOM,MAAM;QACX,OAAO,IAAI,CAAC,GAAG,CAAC;KACjB;;;;;;IAOM,MAAM,CAAC,GAAS;QACrB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;KAChB;;;;;;IAOM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;IAOM,eAAe,CAAC,YAAgC;QACrD,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;CACF;AAED,aAAa,CAAE,eAAe,EAAE,cAAc,CAAE,CAAC;AACjD,WAAW,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC7K,WAAW,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC;AACxK,kBAAkB,CAAC,eAAe,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,mBAAmB,EAAE,WAAW,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;;AC3FrM;;;;;;;;;;;;;;;AAeA,AAIA;;;AAGA,MAAa,WAAW;;;;;;IAUf,SAAS;QACd,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;;;;;IAOM,SAAS,CAAC,MAAc;QAC7B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;IAOM,WAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;IAOM,WAAW,CAAC,QAAc;QAC/B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;CACF;AAED,aAAa,CAAE,WAAW,CAAE,CAAC;AAC7B,WAAW,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,CAAC,SAAS,CAAC,SAAS,EAAE,KAAK,EAAE,WAAW,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,CAAC;AACpK,WAAW,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,WAAW,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,WAAW,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;;AClEvK;;;;;;;;;;;;;;;AAeA,AAQA;;;;AAKA,MAAsB,iBAAkB,SAAQ,eAAe;IAQ7D;QACE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;KAC3B;;;;;;;IAQM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;IAOM,eAAe,CAAC,YAAoB;QACzC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;;;;;;IAOM,kBAAkB;QACvB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;;;;;;IAOM,kBAAkB,CAAC,eAAgC;QACxD,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;KACxC;;;;;;IAOM,gBAAgB;QACrB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;;;;;;IAOM,gBAAgB,CAAC,aAA0B;QAChD,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;KACpC;;;;;;IAOM,mBAAmB;QACxB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;;;;;;IAOM,mBAAmB,CAAC,gBAA6B;QACtD,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;KAC1C;;;;;;IAOM,gBAAgB;QACrB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;;;;;;IAOM,gBAAgB,CAAC,aAAqB;QAC3C,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;KACpC;CACF;AAED,WAAW,CAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,iBAAiB,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,iBAAiB,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;AAClM,kBAAkB,CAAC,iBAAiB,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,iBAAiB,CAAC,SAAS,CAAC,kBAAkB,EAAE,KAAK,EAAE,iBAAiB,CAAC,SAAS,CAAC,kBAAkB,EAAE,CAAC,CAAC;AACzL,kBAAkB,CAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,iBAAiB,CAAC,SAAS,CAAC,gBAAgB,EAAE,KAAK,EAAE,iBAAiB,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC,CAAC;AACpM,kBAAkB,CAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,iBAAiB,CAAC,SAAS,CAAC,mBAAmB,EAAE,KAAK,EAAE,iBAAiB,CAAC,SAAS,CAAC,mBAAmB,EAAE,CAAC,CAAC;AACzM,WAAW,CAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,iBAAiB,CAAC,SAAS,CAAC,gBAAgB,EAAE,KAAK,EAAE,iBAAiB,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC,CAAC;;ACzIvL;;;;;;;;;;;;;;;AAeA,AAMA;;;AAGA,MAAa,qBAAsB,SAAQ,iBAAiB;IAInD,sBAAsB;QAC3B,OAAO,gBAAgB,CAAC;KACzB;;;;;;IAOM,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;IAOM,UAAU,CAAC,OAA2B;QAC3C,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;CAEF;AAED,aAAa,CAAE,qBAAqB,EAAE,QAAQ,CAAE,CAAC;AACjD,kBAAkB,CAAC,qBAAqB,EAAE,EAAE,IAAI,EAAC,cAAc,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,kBAAkB,EAAE,IAAI,EAAE,qBAAqB,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,qBAAqB,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;;ACrD7M;;;;;;;;;;;;;;;AAeA,AAMA;;;AAGA,MAAa,gCAAiC,SAAQ,iCAAwD;;;;;;IASrG,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;IAOM,UAAU,CAAC,OAA8B;QAC9C,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;;IAGM,iBAAiB;QACtB,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC;KAC1B;CACF;AAED,aAAa,CAAE,gCAAgC,EAAE,WAAW,CAAE,CAAC;AAC/D,kBAAkB,CAAC,gCAAgC,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,qBAAqB,EAAE,IAAI,EAAE,gCAAgC,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,gCAAgC,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;;ACrD5O;;;;;;;;;;;;;;;AAeA,AAQA;;;AAGA,MAAa,yBAA0B,SAAQ,kBAAkB;IAIxD,OAAO;QACZ,OAAO,cAAc,CAAC,OAAO,CAAC;KAC/B;;;;;;;;;;IAWM,qBAAqB;QAC1B,OAAO,IAAI,CAAC,kBAAkB,CAAC;KAChC;;;;;;IAOM,qBAAqB,CAAC,kBAA2D;QACtF,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;KAC9C;;IAGM,mBAAmB;QACxB,OAAO,IAAI,CAAC,kBAAkB,CAAC;KAChC;;;;;;;IAQM,oBAAoB;QACzB,OAAO,IAAI,CAAC,kBAAkB,IAAI,IAAI,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;KACnH;IAEM,oBAAoB,CAAC,iBAAmD;QAC7E,IAAI,CAAC,kBAAkB,GAAG,CAAC,iBAAiB,CAAC,CAAC;KAC/C;CAEF;AAED,aAAa,CAAE,yBAAyB,EAAE,cAAc,CAAE,CAAC;AAC3D,kBAAkB,CAAC,yBAAyB,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,mBAAmB,EAAE,gCAAgC,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,qBAAqB,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,qBAAqB,EAAE,CAAC,CAAC;;AC9EnQ;;;;;;;;;;;;;;;AAeA,IAMY,iBAOX;AAPD,WAAY,iBAAiB;IAE3B,6DAAM,CAAA;IAEN,+DAAO,CAAA;IAEP,6DAAM,CAAA;CACP,EAPW,iBAAiB,KAAjB,iBAAiB,QAO5B;;;;;AAOD,MAAa,aAAa;;;;;;IAcjB,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;;;;;;IAOM,OAAO,CAAC,IAAY;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;;;;;;IAOM,cAAc;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;;;;;IAOM,cAAc,CAAC,WAAmB;QACvC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAChC;;;;;;IAOM,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;;;;;;IAOM,OAAO,CAAC,IAAuB;QACpC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;;;;;;IAOM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;IAOM,QAAQ,CAAC,KAAa;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;;;;;;IAOM,YAAY;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;IAOM,YAAY,CAAC,SAAe;QACjC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC5B;;;;;;IAOM,WAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;IAOM,WAAW,CAAC,QAAkB;QACnC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;CACF;AAED,aAAa,CAAE,aAAa,EAAE,KAAK,CAAE,CAAC;AACtC,WAAW,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,aAAa,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE,aAAa,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;AACpK,WAAW,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,aAAa,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,EAAE,aAAa,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,CAAC;AACnL,WAAW,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,iBAAiB,EAAE,IAAI,EAAE,aAAa,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE,aAAa,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;AACnL,WAAW,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,aAAa,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,aAAa,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;AACxK,WAAW,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,aAAa,CAAC,SAAS,CAAC,YAAY,EAAE,KAAK,EAAE,aAAa,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;AAC/J,kBAAkB,CAAC,aAAa,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,aAAa,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,aAAa,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;;AC/JxJ;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAY,eAQX;AARD,WAAY,eAAe;IACzB,yDAAM,CAAA;IACN,2DAAO,CAAA;IACP,+DAAS,CAAA;IACT,6DAAQ,CAAA;IACR,yDAAM,CAAA;IACN,6DAAQ,CAAA;IACR,yDAAM,CAAA;CACP,EARW,eAAe,KAAf,eAAe,QAQ1B;AAED,SAAgB,uBAAuB,CAAC,MAAc;IACpD,IAAI,QAAQ,KAAK,MAAM,EAAE;QACvB,OAAO,eAAe,CAAC,MAAM,CAAC;KAC/B;SAAM,IAAI,SAAS,KAAK,MAAM,EAAE;QAC/B,OAAO,eAAe,CAAC,OAAO,CAAC;KAChC;SAAM,IAAI,WAAW,KAAK,MAAM,EAAE;QACjC,OAAO,eAAe,CAAC,SAAS,CAAC;KAClC;SAAM,IAAI,UAAU,KAAK,MAAM,EAAE;QAChC,OAAO,eAAe,CAAC,QAAQ,CAAC;KACjC;SAAM,IAAI,QAAQ,KAAK,MAAM,EAAE;QAC9B,OAAO,eAAe,CAAC,MAAM,CAAC;KAC/B;SAAM,IAAI,UAAU,KAAK,MAAM,EAAE;QAChC,OAAO,eAAe,CAAC,QAAQ,CAAC;KACjC;SAAM,IAAI,QAAQ,KAAK,MAAM,EAAE;QAC9B,OAAO,eAAe,CAAC,MAAM,CAAC;KAC/B;SAAM;QACL,OAAO,IAAI,CAAC;KACb;CACF;;AClDD;;;;;;;;;;;;;;;AAeA,AAIA;;;;AAIA,MAAa,YAAa,SAAQ,cAAc;CAC/C;AAED,aAAa,CAAE,YAAY,EAAE,QAAQ,CAAE,CAAC;;AC1BxC;;;;;;;;;;;;;;;AAeA,AAGA;;;;;AAMA,MAAsB,aAAc,SAAQ,eAAe;CAC1D;;ACzBD;;;;;;;;;;;;;;;;;;AAmBA,IAAY,eAsFX;AAtFD,WAAY,eAAe;;;;IAKzB,yDAAM,CAAA;;;;IAKN,uDAAK,CAAA;;;;IAKL,mDAAG,CAAA;;;;IAKH,mDAAG,CAAA;;;;IAKH,mDAAG,CAAA;;;;IAKH,yDAAM,CAAA;;;;IAKN,mDAAG,CAAA;;;;IAKH,mDAAG,CAAA;;;;IAKH,mDAAG,CAAA;;;;IAKH,qDAAI,CAAA;;;;IAKJ,wDAAK,CAAA;;;;IAKL,4DAAO,CAAA;;;;IAKP,sDAAI,CAAA;;;;IAKJ,gEAAS,CAAA;;;;IAKT,oEAAW,CAAA;;;;IAKX,gEAAS,CAAA;;;;IAKT,wDAAK,CAAA;CACN,EAtFW,eAAe,KAAf,eAAe,QAsF1B;;ACzGD;;;;;;;;;;;;;;;AAeA,AAQA;;;AAGA,MAAa,YAAY;;;;;;IAehB,kBAAkB;QACvB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;;;;;;IAOM,kBAAkB,CAAC,eAAmC;QAC3D,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;QAClC,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;KACxC;;;;;;IAOM,cAAc,CAAC,IAAmD;QACvE,IAAG,IAAI,YAAY,kBAAkB,EAAE;YACrC,IAAI,CAAC,kBAAkB,CAAqB,IAAI,CAAC,CAAC;SACnD;aAAM;YACL,IAAI,CAAC,wBAAwB,CAA2B,IAAI,CAAC,CAAC;SAC/D;KACF;;;;;;IAOM,wBAAwB;QAC7B,OAAO,IAAI,CAAC,qBAAqB,CAAC;KACnC;;;;;;IAOM,wBAAwB,CAAC,qBAA+C;QAC7E,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;KACpD;;;;;;IAOM,gBAAgB;QACrB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;;;;;;IAOM,gBAAgB,CAAC,aAAiC;QACvD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAChC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;KACpC;;;;;;IAOM,YAAY,CAAC,SAAwD;QAC1E,IAAG,SAAS,YAAY,kBAAkB;YACxC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;aAC9B,IAAG,SAAS,YAAY,wBAAwB;YACnD,IAAI,CAAC,sBAAsB,CAAC,SAAS,CAAC,CAAC;;YAEvC,MAAM,IAAI,YAAY,CAAC,cAAc,CAAC,CAAC;KAC1C;;;;;;IAQM,sBAAsB;QAC3B,OAAO,IAAI,CAAC,mBAAmB,CAAC;KACjC;;;;;;IAOM,sBAAsB,CAAC,mBAA6C;QACzE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;KAChD;;;;;;IAOM,SAAS;QACd,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;;;;;IAOM,SAAS,CAAC,MAAc;QAC7B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;IAOM,MAAM;QACX,OAAO,IAAI,CAAC,GAAG,CAAC;KACjB;;;;;;IAOM,MAAM,CAAC,GAAS;QACrB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;KAChB;CACF;AAED,aAAa,CAAE,YAAY,EAAE,UAAU,CAAE,CAAC;AAC1C,kBAAkB,CAAC,YAAY,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,kBAAkB,EAAE,IAAI,EAAE,YAAY,CAAC,SAAS,CAAC,kBAAkB,EAAE,KAAK,EAAE,YAAY,CAAC,SAAS,CAAC,kBAAkB,EAAE,CAAC,CAAC;AAClM,kBAAkB,CAAC,YAAY,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,wBAAwB,EAAE,IAAI,EAAE,YAAY,CAAC,SAAS,CAAC,wBAAwB,EAAE,KAAK,EAAE,YAAY,CAAC,SAAS,CAAC,wBAAwB,EAAE,CAAC,CAAC;AACnN,kBAAkB,CAAC,YAAY,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,kBAAkB,EAAE,IAAI,EAAE,YAAY,CAAC,SAAS,CAAC,gBAAgB,EAAE,KAAK,EAAE,YAAY,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC,CAAC;AAC7L,kBAAkB,CAAC,YAAY,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,wBAAwB,EAAE,IAAI,EAAE,YAAY,CAAC,SAAS,CAAC,sBAAsB,EAAE,KAAK,EAAE,YAAY,CAAC,SAAS,CAAC,sBAAsB,EAAE,CAAC,CAAC;AAC7M,WAAW,CAAC,YAAY,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,YAAY,CAAC,SAAS,CAAC,SAAS,EAAE,KAAK,EAAE,YAAY,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,CAAC;AACxK,WAAW,CAAC,YAAY,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,YAAY,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE,YAAY,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC;;ACvL/I;;;;;;;;;;;;;;;;;;AAmBA,IAAY,mBAWX;AAXD,WAAY,mBAAmB;IAE7B,+EAAa,CAAA;IAEb,qEAAQ,CAAA;IAER,uEAAS,CAAA;IAET,yEAAU,CAAA;IAEV,qEAAQ,CAAA;CACT,EAXW,mBAAmB,KAAnB,mBAAmB,QAW9B;;AC9BD;;;;;;;;;;;;;;;AAeA,AAKA;;;AAGA,MAAa,cAAc;;;;;;IAUlB,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;IAOM,QAAQ,CAAC,KAA0B;QACxC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;;;;;;IAOM,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;;;;;;IAOM,OAAO,CAAC,IAAU;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;CACF;AAED,aAAa,CAAE,cAAc,EAAE,YAAY,CAAE,CAAC;AAC9C,WAAW,CAAC,cAAc,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,mBAAmB,EAAE,IAAI,EAAE,cAAc,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC7L,WAAW,CAAC,cAAc,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,cAAc,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;;AC3C3K;;;AAGA,MAAa,qBAAqB;;;;;;IAazB,oBAAoB;QACzB,OAAO,IAAI,CAAC,iBAAiB,CAAC;KAC/B;;;;;;IAOM,oBAAoB,CAAC,iBAA2C;QACrE,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;KAC5C;;IAGM,iBAAiB;QACtB,OAAO,IAAI,CAAC,oBAAoB,EAAE,CAAC;KACpC;;;;;;IAOM,sCAAsC;QAC3C,OAAO,IAAI,CAAC,mCAAmC,CAAC;KACjD;;;;;;IAOM,sCAAsC,CAAC,mCAA4C;QACxF,IAAI,CAAC,mCAAmC,GAAG,mCAAmC,CAAC;KAChF;;;;;;IAOM,2CAA2C;QAChD,OAAO,IAAI,CAAC,wCAAwC,CAAC;KACtD;;;;;;IAOM,2CAA2C,CAAC,wCAAiD;QAClG,IAAI,CAAC,wCAAwC,GAAG,wCAAwC,CAAC;KAC1F;;;;;;IAOM,6CAA6C;QAClD,OAAO,IAAI,CAAC,0CAA0C,CAAC;KACxD;;;;;;IAOM,6CAA6C,CAAC,0CAAmD;QACtG,IAAI,CAAC,0CAA0C,GAAG,0CAA0C,CAAC;KAC9F;;;;;;IAOM,SAAS;QACd,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;;;;;IAOM,SAAS,CAAC,MAAqB;QACpC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;CACF;AAED,aAAa,CAAE,qBAAqB,EAAE,YAAY,CAAE,CAAC;AACrD,kBAAkB,CAAC,qBAAqB,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,wBAAwB,EAAE,IAAI,EAAE,qBAAqB,CAAC,SAAS,CAAC,oBAAoB,EAAE,KAAK,EAAE,qBAAqB,CAAC,SAAS,CAAC,oBAAoB,EAAE,CAAC,CAAC;AACrP,WAAW,CAAC,qBAAqB,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,qBAAqB,CAAC,SAAS,CAAC,sCAAsC,EAAE,KAAK,EAAE,qBAAqB,CAAC,SAAS,CAAC,sCAAsC,EAAE,CAAC,CAAC;AAC/P,WAAW,CAAC,qBAAqB,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,qBAAqB,CAAC,SAAS,CAAC,2CAA2C,EAAE,KAAK,EAAE,qBAAqB,CAAC,SAAS,CAAC,2CAA2C,EAAE,CAAC,CAAC;AACzQ,WAAW,CAAC,qBAAqB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,qBAAqB,CAAC,SAAS,CAAC,6CAA6C,EAAE,KAAK,EAAE,qBAAqB,CAAC,SAAS,CAAC,6CAA6C,EAAE,CAAC,CAAC;AAC9Q,WAAW,CAAC,qBAAqB,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,qBAAqB,CAAC,SAAS,CAAC,SAAS,EAAE,KAAK,EAAE,qBAAqB,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,CAAC;;ACxI7M;;;;;;;;;;;;;;;AAeA,AAMA;;;AAGA,MAAa,2BAA4B,SAAQ,iBAAiB;IAIzD,sBAAsB;QAC3B,OAAO,uBAAuB,CAAC;KAChC;;;;;;IAOM,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;IAOM,UAAU,CAAC,OAAiC;QACjD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;CACF;AAED,aAAa,CAAE,2BAA2B,EAAE,UAAU,CAAC,CAAC;AACxD,kBAAkB,CAAC,2BAA2B,EAAE,EAAE,IAAI,EAAC,YAAY,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,wBAAwB,EAAE,IAAI,EAAE,2BAA2B,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,2BAA2B,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;;ACpDnO;;;;;;;;;;;;;;;AAeA,AAMA;;;AAGA,MAAa,sCAAuC,SAAQ,iCAA8D;;;;;;IASjH,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;IAOM,UAAU,CAAC,OAAoC;QACpD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;;IAGM,iBAAiB;QACtB,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC;KAC1B;CACF;AAED,aAAa,CAAE,sCAAsC,EAAE,aAAa,CAAE,CAAA;AACtE,kBAAkB,CAAC,sCAAsC,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,2BAA2B,EAAE,IAAI,EAAE,sCAAsC,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,sCAAsC,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;;ACrDpQ;;;;;;;;;;;;;;;AAeA,AAQA;;;AAGA,MAAa,4BAA6B,SAAQ,kBAAkB;IAI3D,OAAO;QACZ,OAAO,cAAc,CAAC,UAAU,CAAC;KAClC;;;;;;;;;;IAWM,qBAAqB;QAC1B,OAAO,IAAI,CAAC,kBAAkB,CAAC;KAChC;;;;;;IAQM,qBAAqB,CAAC,kBAAiE;QAC5F,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;KAC9C;;;;;;;IASM,oBAAoB;QACzB,OAAO,IAAI,CAAC,kBAAkB,IAAI,IAAI,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;KACnH;;;;;;IAOM,oBAAoB,CAAC,iBAAyD;QACnF,IAAI,CAAC,kBAAkB,GAAG,CAAC,iBAAiB,CAAC,CAAC;KAC/C;;IAIM,mBAAmB;QACxB,OAAO,IAAI,CAAC,kBAAkB,CAAC;KAChC;CACF;AAED,aAAa,CAAE,4BAA4B,EAAE,oBAAoB,CAAE,CAAC;AACpE,kBAAkB,CAAC,4BAA4B,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,mBAAmB,EAAE,sCAAsC,EAAE,IAAI,EAAE,4BAA4B,CAAC,SAAS,CAAC,qBAAqB,EAAE,KAAK,EAAE,4BAA4B,CAAC,SAAS,CAAC,qBAAqB,EAAE,CAAC,CAAC;;ACrFlR;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAY,qBAKX;AALD,WAAY,qBAAqB;IAC/B,6EAAU,CAAA;IACV,mEAAK,CAAA;IACL,mEAAK,CAAA;IACL,2EAAS,CAAA;CACV,EALW,qBAAqB,KAArB,qBAAqB,QAKhC;AAGD,SAAgB,6BAA6B,CAAC,MAAc;IAC1D,IAAI,YAAY,KAAK,MAAM,EAAE;QAC3B,OAAO,qBAAqB,CAAC,UAAU,CAAC;KACzC;SAAM,IAAI,OAAO,KAAK,MAAM,EAAE;QAC7B,OAAO,qBAAqB,CAAC,KAAK,CAAC;KACpC;SAAM,IAAI,WAAW,KAAK,MAAM,EAAE;QACjC,OAAO,qBAAqB,CAAC,SAAS,CAAC;KACxC;SAAM,IAAI,WAAW,KAAK,MAAM,EAAE;QACjC,OAAO,qBAAqB,CAAC,SAAS,CAAC;KACxC;SAAM;QACL,OAAO,IAAI,CAAC;KACb;CACF;;AC1CD;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAY,gBAIX;AAJD,WAAY,gBAAgB;IAC1B,2DAAM,CAAA;IACN,6DAAO,CAAA;IACP,iEAAS,CAAA;CACV,EAJW,gBAAgB,KAAhB,gBAAgB,QAI3B;AAED,SAAgB,wBAAwB,CAAC,MAAc;IACrD,IAAI,QAAQ,KAAK,MAAM,EAAE;QACvB,OAAO,gBAAgB,CAAC,MAAM,CAAC;KAChC;SAAM,IAAI,MAAM,KAAK,MAAM,EAAE;QAC5B,OAAO,gBAAgB,CAAC,OAAO,CAAC;KACjC;SAAM,IAAI,OAAO,KAAK,MAAM,EAAE;QAC7B,OAAO,gBAAgB,CAAC,SAAS,CAAC;KACnC;SAAM;QACL,OAAO,IAAI,CAAC;KACb;CACF;;ACtCD;;;;;;;;;;;;;;;;;;;;;AAuBA,IAAY,uBAkCX;AAlCD,WAAY,uBAAuB;;IAGjC,uEAAK,CAAA;;IAGL,uEAAK,CAAA;;IAGL,mEAAG,CAAA;;IAGH,yEAAM,CAAA;;IAGN,uEAAK,CAAA;;IAGL,yEAAM,CAAA;;IAGN,yEAAM,CAAA;;IAGN,yEAAM,CAAA;;IAGN,mEAAG,CAAA;;IAGH,uEAAK,CAAA;;IAGL,sEAAI,CAAA;CACL,EAlCW,uBAAuB,KAAvB,uBAAuB,QAkClC;AAMD,IAAI,UAAU,GAAmB;IAC/B,MAAM,EAAE,uBAAuB,CAAC,KAAK;IACrC,MAAM,EAAE,uBAAuB,CAAC,KAAK;IACrC,KAAK,EAAE,uBAAuB,CAAC,GAAG;IAClC,QAAQ,EAAE,uBAAuB,CAAC,MAAM;IACxC,OAAO,EAAE,uBAAuB,CAAC,KAAK;IACtC,QAAQ,EAAE,uBAAuB,CAAC,MAAM;IACxC,QAAQ,EAAE,uBAAuB,CAAC,MAAM;IACxC,QAAQ,EAAE,uBAAuB,CAAC,MAAM;IACxC,KAAK,EAAE,uBAAuB,CAAC,GAAG;IAClC,OAAO,EAAE,uBAAuB,CAAC,KAAK;IACtC,MAAM,EAAE,uBAAuB,CAAC,IAAI;CACrC,CAAC;AAEF,SAAgB,+BAA+B,CAAC,MAAc;IAC5D,OAAO,MAAM,IAAI,IAAI,GAAG,IAAI,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;CACnD;;ACpDD;;;;;;AAMA,MAAa,qBAAqB;;;;;;IAczB,oBAAoB;QACzB,OAAO,IAAI,CAAC,iBAAiB,CAAC;KAC/B;;;;;;;IAQM,oBAAoB,CAAC,iBAA2C;QACrE,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;KAC5C;;IAGM,iBAAiB;QACtB,OAAO,IAAI,CAAC,oBAAoB,EAAE,CAAC;KACpC;;;;;;;IAQM,0BAA0B;QAC/B,OAAO,IAAI,CAAC,uBAAuB,CAAC;KACrC;;;;;;;IAQM,0BAA0B,CAAC,uBAA+B;QAC/D,IAAI,CAAC,uBAAuB,GAAG,uBAAuB,CAAC;KACxD;;;;;;IAOM,8BAA8B;QACnC,OAAO,+BAA+B,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;KACtE;;;;;;;IAQM,mBAAmB;QACxB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;;;;;;;IAQM,mBAAmB,CAAC,gBAAyB;QAClD,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;KAC1C;;;;;;;IAQM,mBAAmB;QACxB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;;;;;;;IAQM,mBAAmB,CAAC,gBAAwB;QACjD,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;KAC1C;;;;;;IAOM,uBAAuB;QAC5B,OAAO,wBAAwB,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC;KAC7D;;;;;;;IAQM,wBAAwB;QAC7B,OAAO,IAAI,CAAC,qBAAqB,CAAC;KACnC;;;;;;;IAQM,wBAAwB,CAAC,qBAA6B;QAC3D,IAAI,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;KACpD;;;;;;IAOM,4BAA4B;QACjC,OAAQ,6BAA6B,CAAC,IAAI,CAAC,wBAAwB,EAAE,CAAC,CAAC;KACxE;;;;;;;IAQM,cAAc;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;;;;;;IAQM,cAAc,CAAC,WAAmB;QACvC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAChC;CACF;AAED,aAAa,CAAE,qBAAqB,EAAE,aAAa,CAAE,CAAC;AACtD,kBAAkB,CAAC,qBAAqB,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,wBAAwB,EAAE,IAAI,EAAE,qBAAqB,CAAC,SAAS,CAAC,oBAAoB,EAAE,KAAK,EAAE,qBAAqB,CAAC,SAAS,CAAC,oBAAoB,EAAE,CAAC,CAAC;AACtP,WAAW,CAAC,qBAAqB,EAAE,EAAE,IAAI,EAAE,eAAe,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,qBAAqB,CAAC,SAAS,CAAC,0BAA0B,EAAE,KAAK,EAAE,qBAAqB,CAAC,SAAS,CAAC,0BAA0B,EAAE,CAAC,CAAC;AAC5O,WAAW,CAAC,qBAAqB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,qBAAqB,CAAC,SAAS,CAAC,mBAAmB,EAAE,KAAK,EAAE,qBAAqB,CAAC,SAAS,CAAC,mBAAmB,EAAE,CAAC,CAAC;AAC1N,WAAW,CAAC,qBAAqB,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,qBAAqB,CAAC,SAAS,CAAC,mBAAmB,EAAE,KAAK,EAAE,qBAAqB,CAAC,SAAS,CAAC,mBAAmB,EAAE,CAAC,CAAC;AAC1N,WAAW,CAAC,qBAAqB,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,qBAAqB,CAAC,SAAS,CAAC,wBAAwB,EAAE,KAAK,EAAE,qBAAqB,CAAC,SAAS,CAAC,wBAAwB,EAAE,CAAC,CAAC;AACtN,WAAW,CAAC,qBAAqB,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,qBAAqB,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,EAAE,qBAAqB,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,CAAC;;ACxMlM;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAY,cAKX;AALD,WAAY,cAAc;IACxB,mDAAI,CAAA;IACJ,uDAAM,CAAA;IACN,qDAAK,CAAA;IACL,qDAAK,CAAA;CACN,EALW,cAAc,KAAd,cAAc,QAKzB;AAED,SAAgB,sBAAsB,CAAC,MAAc;IACnD,IAAI,MAAM,KAAK,MAAM,EAAE;QACrB,OAAO,cAAc,CAAC,IAAI,CAAC;KAC5B;SAAM,IAAI,QAAQ,KAAK,MAAM,EAAE;QAC9B,OAAO,cAAc,CAAC,MAAM,CAAC;KAC9B;SAAM,IAAI,OAAO,KAAK,MAAM,EAAE;QAC7B,OAAO,cAAc,CAAC,KAAK,CAAC;KAC7B;SAAM,IAAI,OAAO,KAAK,MAAM,EAAE;QAC7B,OAAO,cAAc,CAAC,KAAK,CAAC;KAC7B;SAAM;QACL,OAAO,IAAI,CAAC;KACb;CACF;;ACzCD;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAY,YAGX;AAHD,WAAY,YAAY;IACtB,+CAAI,CAAA;IACJ,iDAAK,CAAA;CACN,EAHW,YAAY,KAAZ,YAAY,QAGvB;AAED,SAAgB,oBAAoB,CAAC,MAAc;IACjD,IAAI,MAAM,KAAK,MAAM,EAAE;QACrB,OAAO,YAAY,CAAC,IAAI,CAAC;KAC1B;SAAM,IAAI,OAAO,KAAK,MAAM,EAAE;QAC7B,OAAO,YAAY,CAAC,KAAK,CAAC;KAC3B;SAAM;QACL,OAAO,IAAI,CAAC;KACb;CACF;;ACnCD;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAY,aAQX;AARD,WAAY,aAAa;IACvB,qDAAM,CAAA;IACN,2DAAS,CAAA;IACT,mDAAK,CAAA;IACL,qEAAc,CAAA;IACd,yDAAQ,CAAA;IACR,6DAAU,CAAA;IACV,mEAAa,CAAA;CACd,EARW,aAAa,KAAb,aAAa,QAQxB;AAMD,IAAIG,YAAU,GAAgB;IAC5B,QAAQ,EAAE,aAAa,CAAC,MAAM;IAC9B,UAAU,EAAE,aAAa,CAAC,SAAS;IACnC,OAAO,EAAE,aAAa,CAAC,KAAK;IAC5B,eAAe,EAAE,aAAa,CAAC,cAAc;IAC7C,UAAU,EAAE,aAAa,CAAC,QAAQ;IAClC,WAAW,EAAE,aAAa,CAAC,UAAU;IACrC,cAAc,EAAE,aAAa,CAAC,aAAa;CAC5C,CAAC;AAEF,SAAgB,qBAAqB,CAAC,MAAc;IAClD,OAAO,MAAM,IAAI,IAAI,GAAG,IAAI,GAAGA,YAAU,CAAC,MAAM,CAAC,CAAC;CACnD;;AChDD;;;;;;;;;;;;;;;AAeA,AASA;;;;;;AAMA,MAAa,kBAAkB;;;;;;;IAmBtB,aAAa;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;;IAQM,aAAa,CAAC,UAAsB;QACzC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;;;;;;;;IASM,gBAAgB;QACrB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;;;;;;;;IASM,gBAAgB,CAAC,aAAqB;QAC3C,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;KACpC;;;;;;;IAQD,oBAAoB;QAClB,OAAO,sBAAsB,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;KACxD;;;;;;;;IASM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;;;IASM,eAAe,CAAC,YAAoB;QACzC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;;;;;;;IAQM,mBAAmB;QACxB,OAAO,oBAAoB,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;KACrD;;;;;;;;;IAUM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;;;;IAUM,QAAQ,CAAC,KAAa;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;;;;;;;;;IAUM,YAAY;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;;;;IAUM,YAAY,CAAC,SAAiB;QACnC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC5B;;;;;;;IAQM,cAAc;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;;;;;;IAQM,cAAc,CAAC,WAAmB;QACvC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAChC;;;;;;;;IASM,kBAAkB;QACvB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;;;;;;;;IASM,kBAAkB,CAAC,eAAqB;QAC7C,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;KACxC;;;;;;;;IASM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;;;IASM,eAAe,CAAC,YAAoB;QACzC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;;;;;;;;IASM,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;;;;;;;;IASM,OAAO,CAAC,IAAY;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;;;;;;;;;IAUM,aAAa;QAClB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;;;;;;;;;IAUM,aAAa,CAAC,aAAqB;QACxC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;KACpC;;;;;;IAOM,iBAAiB;QACtB,OAAO,qBAAqB,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;KACpD;CACF;AAED,aAAa,CAAE,kBAAkB,EAAE,QAAQ,CAAE,CAAC;AAC9C,kBAAkB,CAAC,kBAAkB,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,kBAAkB,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AAC7L,WAAW,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,gBAAgB,EAAE,KAAK,EAAE,kBAAkB,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC,CAAC;AAC5M,WAAW,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,kBAAkB,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;AACvM,WAAW,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,kBAAkB,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;AACvL,WAAW,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,YAAY,EAAE,KAAK,EAAE,kBAAkB,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;AACnM,WAAW,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,EAAE,kBAAkB,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,CAAC;AACpM,WAAW,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,kBAAkB,EAAE,KAAK,EAAE,kBAAkB,CAAC,SAAS,CAAC,kBAAkB,EAAE,CAAC,CAAC;AAC/M,WAAW,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,kBAAkB,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;AACxL,WAAW,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE,kBAAkB,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;AACpK,WAAW,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,eAAe,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,kBAAkB,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;;ACjT1L;;;;;;;;;;;;;;;AAeA,AAQA;;;;;;;;;AASA,MAAa,YAAY;;;;;;IAQhB,qBAAqB;QAC1B,OAAO,IAAI,CAAC,kBAAkB,CAAC;KAChC;;;;;;IAOM,qBAAqB,CAAC,kBAAsC;QACjE,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;KAC9C;;;;;;;IAQM,aAAa;QAClB,OAAO,IAAI,CAAC,qBAAqB,EAAE,CAAC,aAAa,EAAE,CAAC;KACrD;;;;;;;;IASM,gBAAgB;QACrB,OAAO,IAAI,CAAC,qBAAqB,EAAE,CAAC,gBAAgB,EAAE,CAAC;KACxD;;;;;;;IAQD,oBAAoB;QAClB,OAAO,sBAAsB,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;KACxD;;;;;;;;IASM,eAAe;QACpB,OAAO,IAAI,CAAC,qBAAqB,EAAE,CAAC,eAAe,EAAE,CAAC;KACvD;;;;;;;IAQM,mBAAmB;QACxB,OAAO,oBAAoB,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;KACrD;;;;;;;;;IAUM,QAAQ;QACb,OAAO,IAAI,CAAC,qBAAqB,EAAE,CAAC,QAAQ,EAAE,CAAC;KAChD;;;;;;;;;IAUM,YAAY;QACjB,OAAO,IAAI,CAAC,qBAAqB,EAAE,CAAC,YAAY,EAAE,CAAC;KACpD;;;;;;;IAQM,cAAc;QACnB,OAAO,IAAI,CAAC,qBAAqB,EAAE,CAAC,cAAc,EAAE,CAAC;KACtD;;;;;;;;IASM,kBAAkB;QACvB,OAAO,IAAI,CAAC,qBAAqB,EAAE,CAAC,kBAAkB,EAAE,CAAC;KAC1D;;;;;;;;IASM,eAAe;QACpB,OAAO,IAAI,CAAC,qBAAqB,EAAE,CAAC,eAAe,EAAE,CAAC;KACvD;;;;;;;;IASM,OAAO;QACZ,OAAO,IAAI,CAAC,qBAAqB,EAAE,CAAC,OAAO,EAAE,CAAC;KAC/C;;;;;;;;;IAUM,aAAa;QAClB,OAAO,IAAI,CAAC,qBAAqB,EAAE,CAAC,aAAa,EAAE,CAAC;KACrD;;;;;;IAOM,iBAAiB;QACtB,OAAO,qBAAqB,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;KACpD;CACF;AAED,kBAAkB,CAAC,YAAY,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,kBAAkB,EAAE,IAAI,EAAE,YAAY,CAAC,SAAS,CAAC,qBAAqB,EAAE,KAAK,EAAE,YAAY,CAAC,SAAS,CAAC,qBAAqB,EAAE,CAAC,CAAC;;AClMnM;;;;;;;;;;;;;;;AAeA,AAIA;;;;;;AAMA,MAAa,YAAa,SAAQ,YAAY;CAC7C;AAED,aAAa,CAAE,YAAY,EAAE,SAAS,CAAE,CAAA;;AC5BxC;;;;;;;;;;;;;;;AAeA,AAKA;;;;;;AAMA,MAAa,sBAAsB;;;;;;IAQ1B,YAAY;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;IAOM,YAAY,CAAC,SAA8B;QAChD,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC5B;CACF;AAED,aAAa,CAAE,sBAAsB,EAAE,YAAY,CAAE,CAAC;AACtD,kBAAkB,CAAC,sBAAsB,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,mBAAmB,EAAE,YAAY,EAAE,IAAI,EAAE,sBAAsB,CAAC,SAAS,CAAC,YAAY,EAAE,KAAK,EAAE,sBAAsB,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;;ACjDrN;;;;;;;;;;;;;;;AAeA,AAKA;;;;;;AAMA,MAAa,kBAAmB,SAAQ,YAAY;;;;;;IAY3C,cAAc;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;;;;;IAOM,cAAc,CAAC,WAAmB;QACvC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAChC;;;;;;IAOM,YAAY;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;IAOM,YAAY,CAAC,SAAiB;QACnC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC5B;;;;;;IAOM,oBAAoB;QACzB,OAAO,IAAI,CAAC,iBAAiB,CAAC;KAC/B;;;;;;IAOM,oBAAoB,CAAC,iBAA0B;QACpD,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;KAC5C;;;;;;IAOM,uBAAuB;QAC5B,OAAO,IAAI,CAAC,oBAAoB,CAAC;KAClC;;;;;;IAOM,uBAAuB,CAAC,oBAA6B;QAC1D,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;KAClD;CACF;AAED,aAAa,CAAE,kBAAkB,EAAE,OAAO,CAAE,CAAC;AAC7C,WAAW,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,EAAE,kBAAkB,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,CAAC;AACzL,WAAW,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,YAAY,EAAE,KAAK,EAAE,kBAAkB,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;AACnL,WAAW,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,oBAAoB,EAAE,KAAK,EAAE,kBAAkB,CAAC,SAAS,CAAC,oBAAoB,EAAE,CAAC,CAAC;AACnM,WAAW,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,uBAAuB,EAAE,KAAK,EAAE,kBAAkB,CAAC,SAAS,CAAC,uBAAuB,EAAE,CAAC,CAAC;;AC9GxM;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAY,mBAGX;AAHD,WAAY,mBAAmB;IAC7B,+DAAK,CAAA;IACL,mEAAO,CAAA;CACR,EAHW,mBAAmB,KAAnB,mBAAmB,QAG9B;AAED,SAAgB,2BAA2B,CAAC,MAAc;IACxD,IAAI,OAAO,KAAK,MAAM,EAAE;QACtB,OAAO,mBAAmB,CAAC,KAAK,CAAC;KAClC;SAAM,IAAI,SAAS,KAAK,MAAM,EAAE;QAC/B,OAAO,mBAAmB,CAAC,OAAO,CAAC;KACpC;SAAM;QACL,OAAO,IAAI,CAAC;KACb;CACF;;ACnCD;;;;;;;;;;;;;;;AAeA,AAMA;;;;;;AAMA,MAAa,eAAgB,SAAQ,YAAY;;;;;;IAQxC,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;IAOM,UAAU,CAAC,OAAe;QAC/B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;;;;;;IAOD,cAAc;QACZ,OAAO,2BAA2B,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;KACvD;CACF;AAED,aAAa,CAAE,eAAe,EAAE,QAAQ,CAAE,CAAC;AAC3C,WAAW,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;;AC3DpK;;;;;;;;;;;;;;;AAeA,AAIA;;;;;;AAMA,MAAa,aAAc,SAAQ,YAAY;CAC9C;AAED,aAAa,CAAE,aAAa,EAAE,UAAU,CAAE,CAAC;;AC5B3C;;;;;;;;;;;;;;;AAeA,AAKA;;;;;;AAMA,MAAa,aAAc,SAAQ,YAAY;;;;;;IAUtC,cAAc;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;;;;;IAOM,cAAc,CAAC,WAAmB;QACvC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAChC;;;;;;IAOM,YAAY;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;IAOM,YAAY,CAAC,SAAiB;QACnC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC5B;;;;;;IAOM,oBAAoB;QACzB,OAAO,IAAI,CAAC,iBAAiB,CAAC;KAC/B;;;;;;IAOM,oBAAoB,CAAC,iBAA0B;QACpD,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;KAC5C;CACF;AAED,aAAa,CAAE,aAAa,EAAE,UAAU,CAAE,CAAC;AAC3C,WAAW,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,aAAa,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,EAAE,aAAa,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,CAAC;AAC1K,WAAW,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,aAAa,CAAC,SAAS,CAAC,YAAY,EAAE,KAAK,EAAE,aAAa,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;AACpK,WAAW,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,aAAa,CAAC,SAAS,CAAC,oBAAoB,EAAE,KAAK,EAAE,aAAa,CAAC,SAAS,CAAC,oBAAoB,EAAE,CAAC,CAAC;;ACzFpL;;;;;;;;;;;;;;;AAeA,AAKA;;;;;;AAMA,MAAa,WAAW;;;;;;IASf,iBAAiB;QACtB,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;;;;;;IAOM,iBAAiB,CAAC,cAAoC;QAC3D,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;KACtC;CACF;AAED,aAAa,CAAE,WAAW,EAAE,SAAS,CAAE,CAAC;AACxC,kBAAkB,CAAC,WAAW,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,mBAAmB,EAAE,aAAa,EAAE,IAAI,EAAE,WAAW,CAAC,SAAS,CAAC,iBAAiB,EAAE,KAAK,EAAE,WAAW,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC,CAAC;;AClD/L;;;;;;;;;;;;;;;AAeA,AAMA;;;;;;AAMA,MAAa,iBAAiB;;;;;;;IAcrB,gBAAgB;QACrB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;;;;;;;IAQM,gBAAgB,CAAC,aAAqB;QAC3C,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;KACpC;;;;;;;;IASM,gBAAgB;QACrB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;;;;;;;;IASM,gBAAgB,CAAC,aAAqB;QAC3C,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;KACpC;;;;;;;IAQM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;;IAQM,eAAe,CAAC,YAAoB;QACzC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;;;;;;IAOM,cAAc;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;;;;;IAOM,cAAc,CAAC,WAAmB;QACvC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAChC;;;;;;IAOM,cAAc;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;;;;;IAOM,cAAc,CAAC,WAAwB;QAC5C,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAChC;CACF;AAED,aAAa,CAAC,iBAAiB,EAAE,QAAQ,CAAC,CAAC;AAC3C,WAAW,CAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,iBAAiB,CAAC,SAAS,CAAC,gBAAgB,EAAE,KAAK,EAAE,iBAAiB,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC,CAAC;AACxM,WAAW,CAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,eAAe,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,iBAAiB,CAAC,SAAS,CAAC,gBAAgB,EAAE,KAAK,EAAE,iBAAiB,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC,CAAC;AAC5M,WAAW,CAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,iBAAiB,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,iBAAiB,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;AACzM,WAAW,CAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,iBAAiB,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,EAAE,iBAAiB,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,CAAC;AACnL,kBAAkB,CAAC,iBAAiB,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,iBAAiB,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,EAAE,iBAAiB,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,CAAC;;ACxH7K;;;;;;;;;AASA,MAAsB,yBAAyB;IAI7C,YAAY,eAA0C;QACpD,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;KACxC;;;;;;IAOM,kBAAkB;QACvB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;;;;;;;;IAgBM,gBAAgB;QACrB,OAAO,IAAI,CAAC,wBAAwB,EAAE,CAAC,gBAAgB,EAAE,CAAC;KAC3D;;;;;;;;IASM,WAAW;QAChB,OAAO,IAAI,CAAC,wBAAwB,EAAE,CAAC,WAAW,EAAE,CAAC;KACtD;;;;;;;;IASM,YAAY;QACjB,OAAO,IAAI,CAAC,wBAAwB,EAAE,CAAC,YAAY,EAAE,CAAC;KACvD;;;;;;;;IASM,iBAAiB;QACtB,OAAO,IAAI,CAAC,wBAAwB,EAAE,CAAC,iBAAiB,EAAE,CAAC;KAC5D;;;;;;;;IASM,wBAAwB;QAC7B,OAAO,IAAI,CAAC,wBAAwB,EAAE,CAAC,wBAAwB,EAAE,CAAC;KACnE;;;;;;;;IASM,OAAO;QACZ,OAAO,IAAI,CAAC,wBAAwB,EAAE,CAAC,OAAO,EAAE,CAAC;KAClD;CACF;;ACrHD;;;;;;;;;;;;;;;AAeA,AAOA;;;;;;AAMA,MAAa,yBAAyB;;;;;IAS7B,cAAc;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;;;;IAMM,cAAc,CAAC,WAAwB;QAC5C,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAChC;;;;;;;IAQM,iBAAiB;QACtB,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;;;;;;;IAQM,iBAAiB,CAAC,cAAsB;QAC7C,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;KACtC;;;;;;IAOM,qBAAqB;QAC1B,OAAO,sBAAsB,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;KACzD;CACF;AAED,aAAa,CAAE,yBAAyB,EAAE,aAAa,CAAE,CAAC;AAC1D,kBAAkB,CAAC,yBAAyB,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,CAAC;AACrM,WAAW,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,iBAAiB,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC,CAAC;;ACjFpO;;;;;;;;;;;;;;;AAeA,AAOA;;;;;;AAMA,MAAa,yBAAyB;;;;;;IAW7B,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;IAOM,QAAQ,CAAC,KAAW;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;;;;;;IAOM,MAAM;QACX,OAAO,IAAI,CAAC,GAAG,CAAC;KACjB;;;;;;IAOM,MAAM,CAAC,GAAS;QACrB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;KAChB;;;;;;;IAQM,yBAAyB;QAC9B,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;;IAQM,yBAAyB,CAAC,YAA8C;QAC7E,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;;;;;;IAOM,mBAAmB;QACxB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;;;;;;IAOM,mBAAmB,CAAC,gBAAkD;QAC3E,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;KAC1C;CACF;AAED,aAAa,CAAE,yBAAyB,EAAE,aAAa,CAAE,CAAC;AAC1D,WAAW,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC3M,WAAW,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC;AACtM,kBAAkB,CAAC,yBAAyB,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,mBAAmB,EAAE,yBAAyB,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,yBAAyB,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,yBAAyB,EAAE,CAAC,CAAC;AACrQ,kBAAkB,CAAC,yBAAyB,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,mBAAmB,EAAE,yBAAyB,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,mBAAmB,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,mBAAmB,EAAE,CAAC,CAAC;;ACjHzP;;;;;;;;;;;;;;;AAeA,AAWA;;;;;;AAMA,MAAa,2BAA4B,SAAQ,iBAAiB;;;;;;;IAoBzD,sBAAsB;QAC3B,OAAO,sBAAsB,CAAC;KAC/B;;;;;;;IAQM,kBAAkB;QACvB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;;;;;;;IAQM,kBAAkB,CAAC,eAAqB;QAC7C,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;KACxC;;;;;;IAOM,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;IAOM,UAAU,CAAC,OAAiC;QACjD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;;;;;;IAOM,4BAA4B;QACjC,OAAO,IAAI,CAAC,yBAAyB,CAAC;KACvC;;;;;;IAOM,4BAA4B,CAAC,eAA0C;QAC5E,IAAI,CAAC,yBAAyB,GAAG,eAAe,CAAC;KAClD;;;;;;IAOM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;IAOM,eAAe,CAAC,YAAoC;QACzD,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;;;;;;IAOM,iBAAiB;QACtB,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;;;;;;IAOM,iBAAiB,CAAC,cAAiC;QACxD,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;KACtC;;;;;;;;;;IAWM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;;;;;IAWM,eAAe,CAAC,YAA0B;QAC/C,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;CACF;AAED,aAAa,CAAC,2BAA2B,EAAE,WAAW,CAAC,CAAC;AACxD,WAAW,CAAC,2BAA2B,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,2BAA2B,CAAC,SAAS,CAAC,kBAAkB,EAAE,KAAK,EAAE,2BAA2B,CAAC,SAAS,CAAC,kBAAkB,EAAE,CAAC,CAAC;AACrO,kBAAkB,CAAC,2BAA2B,EAAE,EAAE,IAAI,EAAC,aAAa,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,wBAAwB,EAAE,IAAI,EAAE,2BAA2B,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,2BAA2B,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;AACpP,kBAAkB,CAAC,2BAA2B,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,yBAAyB,EAAE,IAAI,EAAE,2BAA2B,CAAC,SAAS,CAAC,4BAA4B,EAAE,KAAK,EAAE,2BAA2B,CAAC,SAAS,CAAC,4BAA4B,EAAE,CAAC,CAAC;AACrP,kBAAkB,CAAC,2BAA2B,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,sBAAsB,EAAE,IAAI,EAAE,2BAA2B,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,2BAA2B,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;AACxN,kBAAkB,CAAC,2BAA2B,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,iBAAiB,EAAE,IAAI,EAAE,2BAA2B,CAAC,SAAS,CAAC,iBAAiB,EAAE,KAAK,EAAE,2BAA2B,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC,CAAC;;ACpLvN;;;;;;;;;;;;;;;AAeA,AAMA;;;;;;AAMA,MAAa,sCACT,SAAQ,iCAA8D;;;;;;IASjE,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;IAOM,UAAU,CAAC,OAAoC;QACpD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;;IAGM,iBAAiB;QACtB,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC;KAC1B;CACF;AAED,aAAa,CAAE,sCAAsC,EAAE,cAAc,CAAE,CAAC;AACxE,kBAAkB,CAAC,sCAAsC,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,2BAA2B,EAAE,IAAI,EAAE,sCAAsC,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,sCAAsC,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;;ACzDpQ;;;;;;;;;;;;;;;AAeA,AAQA;;;;;;AAMA,MAAa,qCAAsC,SAAQ,kBAAkB;IAIpE,OAAO;QACZ,OAAO,cAAc,CAAC,UAAU,CAAC;KAClC;;;;;;IAOM,qBAAqB;QAC1B,OAAO,IAAI,CAAC,kBAAkB,CAAC;KAChC;;;;;;IAQM,qBAAqB,CAAC,kBAAiE;QAC5F,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;KAC9C;;;;;;;IASM,oBAAoB;QACzB,OAAO,IAAI,CAAC,kBAAkB,IAAI,IAAI,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;KACnH;;;;;;IAOM,oBAAoB,CAAC,iBAAyD;QACnF,IAAI,CAAC,kBAAkB,GAAG,CAAC,iBAAiB,CAAC,CAAC;KAC/C;;IAGM,mBAAmB;QACxB,OAAO,IAAI,CAAC,kBAAkB,CAAC;KAChC;CACF;AAED,aAAa,CAAE,qCAAqC,EAAE,iBAAiB,CAAE,CAAC;AAC1E,kBAAkB,CAAC,qCAAqC,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,mBAAmB,EAAE,sCAAsC,EAAE,IAAI,EAAE,qCAAqC,CAAC,SAAS,CAAC,qBAAqB,EAAE,KAAK,EAAE,qCAAqC,CAAC,SAAS,CAAC,qBAAqB,EAAE,CAAC,CAAC;;ACnF7S;;;;;;;;;;;;;;;AAeA,AAIA;;;;;;AAMA,MAAa,qBAAqB;;;;;;;;IAgBzB,gBAAgB;QACrB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;;;;;;;;IASM,gBAAgB,CAAC,aAAqB;QAC3C,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;KACpC;;;;;;;;IASM,WAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;;;IASM,WAAW,CAAC,QAAgB;QACjC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;;;;;;;;IASM,YAAY;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;;;IASM,YAAY,CAAC,SAAe;QACjC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC5B;;;;;;;;IASM,iBAAiB;QACtB,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;;;;;;;;IASM,iBAAiB,CAAC,cAAoB;QAC3C,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;KACtC;;;;;;;;IASM,wBAAwB;QAC7B,OAAO,IAAI,CAAC,qBAAqB,CAAC;KACnC;;;;;;;;IASM,wBAAwB,CAAC,qBAA6B;QAC3D,IAAI,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;KACpD;;;;;;;;IASM,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;;;;;;;;IASM,OAAO,CAAC,IAAY;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;CACF;AAED,aAAa,CAAE,qBAAqB,EAAE,SAAS,CAAE,CAAC;AAClD,WAAW,CAAC,qBAAqB,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,qBAAqB,CAAC,SAAS,CAAC,gBAAgB,EAAE,KAAK,EAAE,qBAAqB,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC,CAAC;AAC/M,WAAW,CAAC,qBAAqB,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,qBAAqB,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,qBAAqB,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AACxL,WAAW,CAAC,qBAAqB,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,qBAAqB,CAAC,SAAS,CAAC,YAAY,EAAE,KAAK,EAAE,qBAAqB,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;AACxM,WAAW,CAAC,qBAAqB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,qBAAqB,CAAC,SAAS,CAAC,iBAAiB,EAAE,KAAK,EAAE,qBAAqB,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC,CAAC;AACnM,WAAW,CAAC,qBAAqB,EAAE,EAAE,IAAI,EAAE,eAAe,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,qBAAqB,CAAC,SAAS,CAAC,wBAAwB,EAAE,KAAK,EAAE,qBAAqB,CAAC,SAAS,CAAC,wBAAwB,EAAE,CAAC,CAAC;AACxN,WAAW,CAAC,qBAAqB,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,qBAAqB,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE,qBAAqB,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;;AC7K7K;;;;;;;;;;;;;;;AAeA,AAIA;;;;;;;;;AASA,MAAa,gBAAgB;;;;;;;IAWpB,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;;IAQM,eAAe,CAAC,YAAoB;QACzC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;;;;;;;IAQM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;;IAQM,eAAe,CAAC,YAAoB;QACzC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;CACF;AAED,aAAa,CAAE,gBAAgB,EAAE,cAAc,CAAE,CAAC;AAClD,WAAW,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,gBAAgB,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,gBAAgB,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;AACjM,WAAW,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,gBAAgB,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,gBAAgB,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;;AC5EhM;;;;;;;;;;;;;;;AAeA,AASA;;;;;;AAMA,MAAa,wBAAwB;;;;;;IAsB5B,wBAAwB;QAC7B,OAAO,IAAI,CAAC,qBAAqB,CAAC;KACnC;;;;;;IAOM,wBAAwB,CAAC,qBAA4C;QAC1E,IAAI,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;KACpD;;;;;;;;IASM,aAAa;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;;;IASM,aAAa,CAAC,UAAsB;QACzC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;;;;;;;;;;IAWM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;;;;;IAWM,QAAQ,CAAC,KAAa;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;;;;;;;;;IAUM,YAAY;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;;;;IAUM,YAAY,CAAC,SAAiB;QACnC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC5B;;;;;;;;IASM,SAAS;QACd,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;;;;;;;IASM,SAAS,CAAC,MAAc;QAC7B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;;;IASM,aAAa;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;;;IASM,aAAa,CAAC,UAAkB;QACrC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;;;;;;;IAQM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;;IAQM,QAAQ,CAAC,KAAa;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;;;;;;;IAQM,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;;;;;;;IAQM,OAAO,CAAC,IAAY;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;;;;;;;IAQM,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;;;;;;;IAQM,OAAO,CAAC,IAAY;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;;;;;;;;;IAUM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;;;;IAUM,QAAQ,CAAC,KAAa;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;;;;;;;;IASM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;;;IASM,eAAe,CAAC,YAAoB;QACzC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;KAClC;;;;;;;IAQM,uBAAuB;QAC5B,OAAO,IAAI,CAAC,oBAAoB,CAAC;KAClC;;;;;;;IAQM,uBAAuB,CAAC,oBAAsC;QACnE,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;QACjD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;KAC1B;;;;;;;IAQM,qBAAqB;QAC1B,OAAO,IAAI,CAAC,kBAAkB,CAAC;KAChC;;;;;;;IAQM,qBAAqB,CAAC,kBAA0B;QACrD,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;KAC9C;;;;;;IAOM,yBAAyB;QAC9B,OAAO,sBAAsB,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC;KAC7D;;;;;;;IASM,iBAAiB;QACtB,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;;;;;;;IAQM,iBAAiB,CAAC,WAAmB;QAC1C,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC;KACnC;;;;;;IAOM,qBAAqB;QAC1B,OAAO,sBAAsB,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;KACzD;CACF;AAED,aAAa,CAAE,wBAAwB,EAAE,QAAQ,CAAE,CAAC;AACpD,kBAAkB,CAAC,wBAAwB,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,qBAAqB,EAAE,IAAI,EAAE,wBAAwB,CAAC,SAAS,CAAC,wBAAwB,EAAE,KAAK,EAAE,wBAAwB,CAAC,SAAS,CAAC,wBAAwB,EAAE,CAAC,CAAC;AAChO,kBAAkB,CAAC,wBAAwB,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,wBAAwB,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,wBAAwB,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AAC/M,WAAW,CAAC,wBAAwB,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,wBAAwB,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,wBAAwB,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;AACzM,WAAW,CAAC,wBAAwB,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,wBAAwB,CAAC,SAAS,CAAC,YAAY,EAAE,KAAK,EAAE,wBAAwB,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;AACrN,WAAW,CAAC,wBAAwB,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,wBAAwB,CAAC,SAAS,CAAC,SAAS,EAAE,KAAK,EAAE,wBAAwB,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,CAAC;AAC5L,WAAW,CAAC,wBAAwB,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,wBAAwB,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,wBAAwB,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AACxM,WAAW,CAAC,wBAAwB,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,wBAAwB,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,wBAAwB,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;AACzL,WAAW,CAAC,wBAAwB,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,wBAAwB,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE,wBAAwB,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;AACtL,WAAW,CAAC,wBAAwB,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,wBAAwB,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE,wBAAwB,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;AACtL,WAAW,CAAC,wBAAwB,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,wBAAwB,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,wBAAwB,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC1M,WAAW,CAAC,wBAAwB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,wBAAwB,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,wBAAwB,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;AAC3M,kBAAkB,CAAC,wBAAwB,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,gBAAgB,EAAE,IAAI,EAAE,wBAAwB,CAAC,SAAS,CAAC,uBAAuB,EAAE,KAAK,EAAE,wBAAwB,CAAC,SAAS,CAAC,uBAAuB,EAAE,CAAC,CAAC;AAC1N,WAAW,CAAC,wBAAwB,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,wBAAwB,CAAC,SAAS,CAAC,qBAAqB,EAAE,KAAK,EAAE,wBAAwB,CAAC,SAAS,CAAC,qBAAqB,EAAE,CAAC,CAAC;AACzN,WAAW,CAAC,wBAAwB,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,wBAAwB,CAAC,SAAS,CAAC,iBAAiB,EAAE,KAAK,EAAE,wBAAwB,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC,CAAC;;ACrWlN;;;;;;;;;AASA,MAAsB,4BAA6B,SAAQ,yBAAyB;IAKlF,YAAY,eAA0C;QACpD,KAAK,CAAC,eAAe,CAAC,CAAC;KACxB;;;;;;IAOM,gBAAgB;QACrB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;;;;;;IAOM,gBAAgB,CAAC,aAAuC;QAC7D,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;KACpC;;;;;;;IAQM,wBAAwB;QAC7B,OAAO,IAAI,CAAC,gBAAgB,EAAE,CAAC,wBAAwB,EAAE,CAAC;KAC3D;;;;;;;;IASM,aAAa;QAClB,OAAO,IAAI,CAAC,gBAAgB,EAAE,CAAC,aAAa,EAAE,CAAC;KAChD;;;;;;;;;;IAWM,QAAQ;QACb,OAAO,IAAI,CAAC,gBAAgB,EAAE,CAAC,QAAQ,EAAE,CAAC;KAC3C;;;;;;;;;IAUM,YAAY;QACjB,OAAO,IAAI,CAAC,gBAAgB,EAAE,CAAC,YAAY,EAAE,CAAC;KAC/C;;;;;;;;IASM,SAAS;QACd,OAAO,IAAI,CAAC,gBAAgB,EAAE,CAAC,SAAS,EAAE,CAAC;KAC5C;;;;;;;;IASM,aAAa;QAClB,OAAO,IAAI,CAAC,gBAAgB,EAAE,CAAC,aAAa,EAAE,CAAC;KAChD;;;;;;;IAQM,QAAQ;QACb,OAAO,IAAI,CAAC,gBAAgB,EAAE,CAAC,QAAQ,EAAE,CAAC;KAC3C;;;;;;;IAQM,OAAO;QACZ,OAAO,IAAI,CAAC,gBAAgB,EAAE,CAAC,OAAO,EAAE,CAAC;KAC1C;;;;;;;IAQM,OAAO;QACZ,OAAO,IAAI,CAAC,gBAAgB,EAAE,CAAC,OAAO,EAAE,CAAC;KAC1C;;;;;;;;;IAUM,QAAQ;QACb,OAAO,IAAI,CAAC,gBAAgB,EAAE,CAAC,QAAQ,EAAE,CAAC;KAC3C;;;;;;;;IASM,eAAe;QACpB,OAAO,IAAI,CAAC,gBAAgB,EAAE,CAAC,eAAe,EAAE,CAAC;KAClD;;;;;;;IAQM,uBAAuB;QAC5B,OAAO,IAAI,CAAC,gBAAgB,EAAE,CAAC,uBAAuB,EAAE,CAAC;KAC1D;;;;;;;IAQM,qBAAqB;QAC1B,OAAO,IAAI,CAAC,gBAAgB,EAAE,CAAC,qBAAqB,EAAE,CAAC;KACxD;;;;;;IAOM,yBAAyB;QAC9B,OAAO,sBAAsB,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC;KAC7D;;;;;;;IAQM,iBAAiB;QACtB,OAAO,IAAI,CAAC,gBAAgB,EAAE,CAAC,iBAAiB,EAAE,CAAC;KACpD;;;;;;IAOM,qBAAqB;QAC1B,OAAO,sBAAsB,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;KACzD;CACF;AAED,kBAAkB,CAAC,4BAA4B,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,wBAAwB,EAAE,IAAI,EAAE,4BAA4B,CAAC,SAAS,CAAC,gBAAgB,EAAE,KAAK,EAAE,4BAA4B,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC,CAAC;;ACxO/N;;;;;;;;;;;;;;;AAeA,AAMA;;;;;;;;;AASA,MAAa,8BAA+B,SAAQ,yBAAyB;IAI3E,YAAY,eAA0C;QACpD,KAAK,CAAC,eAAe,CAAC,CAAC;KACxB;;;;;;;IAQM,wBAAwB;QAC7B,OAAO,IAAI,CAAC,qBAAqB,CAAC;KACnC;;;;;;IAOM,wBAAwB,CAAC,qBAA4C;QAC1E,IAAI,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;KACpD;CACF;AAED,kBAAkB,CAAC,8BAA8B,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,qBAAqB,EAAE,IAAI,EAAE,8BAA8B,CAAC,SAAS,CAAC,wBAAwB,EAAE,KAAK,EAAE,8BAA8B,CAAC,SAAS,CAAC,wBAAwB,EAAE,CAAC,CAAC;;AC1DlP;;;;;;;;;;;;;;;AAeA,AAUA;;;;;;AAMA,MAAa,yBAAyB;;;;;;IA4B7B,wBAAwB;QAC7B,OAAO,IAAI,CAAC,qBAAqB,CAAC;KACnC;;;;;;IAOM,wBAAwB,CAAC,qBAA4C;QAC1E,IAAI,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;KACpD;;;;;;;;IASM,aAAa;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;;;IASM,aAAa,CAAC,UAAsB;QACzC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;;;;;;;;;;IAWM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;;;;;IAWM,QAAQ,CAAC,KAAa;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;;;;;;;;;IAUM,YAAY;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;;;;IAUM,YAAY,CAAC,SAAiB;QACnC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC5B;;;;;;;;IASM,WAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;;;IASM,WAAW,CAAC,QAAgB;QACjC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;;;;;;;;IASM,aAAa;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;;;IASM,aAAa,CAAC,UAAkB;QACrC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;;;;;;;IAQM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;;IAQM,QAAQ,CAAC,KAAa;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;;;;;;;IAQM,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;;;;;;;IAQM,OAAO,CAAC,IAAY;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;;;;;;;IAQM,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;;;;;;;IAQM,OAAO,CAAC,IAAY;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;;;;;;;IAQM,cAAc;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;;;;;;IAQM,cAAc,CAAC,WAAmB;QACvC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAChC;;;;;;;IAQM,YAAY;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;;IAQM,YAAY,CAAC,SAAkB;QACpC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC5B;;;;;;;;;;IAWM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;;;;;IAWM,QAAQ,CAAC,KAAa;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;;;;;;;IAQM,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;;;;;;;IAQM,OAAO,CAAC,IAAY;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;;;;;;;;IASM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;;;IASM,eAAe,CAAC,YAAoB;QACzC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;KAClC;;;;;;;IAQM,uBAAuB;QAC5B,OAAO,IAAI,CAAC,oBAAoB,CAAC;KAClC;;;;;;;IAQM,uBAAuB,CAAC,oBAAsC;QACnE,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;QACjD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;KAC1B;;;;;;;IAQM,qBAAqB;QAC1B,OAAO,IAAI,CAAC,kBAAkB,CAAC;KAChC;;;;;;;IAQM,qBAAqB,CAAC,kBAA0B;QACrD,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;KAC9C;;;;;;IAOM,yBAAyB;QAC9B,OAAO,sBAAsB,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC;KAC7D;;;;;;;;IASM,iBAAiB;QACtB,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;;;;;;;;IASM,iBAAiB,CAAC,cAAsB;QAC7C,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;KACtC;;;;;;IAOM,qBAAqB;QAC1B,OAAO,sBAAsB,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;KACzD;;;;;;;;IASM,SAAS;QACd,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;;;;;;;IASM,SAAS,CAAC,MAAc;QAC7B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;;IAQM,mBAAmB;QACxB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;;;;;;;IAQM,mBAAmB,CAAC,gBAAwB;QACjD,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;KAC1C;;;;;;;IAQM,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;;IAQM,UAAU,CAAC,OAAe;QAC/B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;;;;;;;;;IAUM,aAAa;QAClB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;;;;;;;;;IAUM,aAAa,CAAC,aAAqB;QACxC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;KACpC;;;;;;IAOM,iBAAiB;QACtB,OAAO,qBAAqB,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;KACpD;CACF;AAED,aAAa,CAAE,yBAAyB,EAAE,SAAS,CAAE,CAAC;AACtD,kBAAkB,CAAC,yBAAyB,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,qBAAqB,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,wBAAwB,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,wBAAwB,EAAE,CAAC,CAAC;AACnO,kBAAkB,CAAC,yBAAyB,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AAClN,WAAW,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC5M,WAAW,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,YAAY,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;AACxN,WAAW,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AACrM,WAAW,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AAC3M,WAAW,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC5L,WAAW,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;AACzL,WAAW,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;AACzL,WAAW,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,CAAC;AAC9M,WAAW,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,YAAY,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;AACzM,WAAW,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC7M,WAAW,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;AAC1L,WAAW,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;AAC9M,WAAW,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,gBAAgB,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,uBAAuB,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,uBAAuB,EAAE,CAAC,CAAC;AAC5O,WAAW,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,qBAAqB,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,qBAAqB,EAAE,CAAC,CAAC;AAC5N,WAAW,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,iBAAiB,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC,CAAC;AACrN,WAAW,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,SAAS,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,CAAC;AAChM,WAAW,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,kBAAkB,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,mBAAmB,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,mBAAmB,EAAE,CAAC,CAAC;AAC9N,WAAW,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;AACnM,WAAW,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,eAAe,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;;AChhB/M;;;;;;;;;AASA,MAAsB,6BAA8B,SAAQ,yBAAyB;IAKnF,YAAY,eAA0C;QACpD,KAAK,CAAC,eAAe,CAAC,CAAC;KACxB;;;;;;;IAQM,iBAAiB;QACtB,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;;;;;;IAOM,iBAAiB,CAAC,cAAyC;QAChE,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;KACtC;;;;;;;IAQM,wBAAwB;QAC7B,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC,wBAAwB,EAAE,CAAC;KAC5D;;;;;;;;IASM,aAAa;QAClB,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC,aAAa,EAAE,CAAC;KACjD;;;;;;;;;;IAWM,QAAQ;QACb,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC,QAAQ,EAAE,CAAC;KAC5C;;;;;;;;;IAUM,YAAY;QACjB,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC,YAAY,EAAE,CAAC;KAChD;;;;;;;;IASM,WAAW;QAChB,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC,WAAW,EAAE,CAAC;KAC/C;;;;;;;;IASM,aAAa;QAClB,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC,aAAa,EAAE,CAAC;KACjD;;;;;;;IAQM,QAAQ;QACb,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC,QAAQ,EAAE,CAAC;KAC5C;;;;;;;IAQM,OAAO;QACZ,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC,OAAO,EAAE,CAAC;KAC3C;;;;;;;IAQM,OAAO;QACZ,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC,OAAO,EAAE,CAAC;KAC3C;;;;;;;IAQM,cAAc;QACnB,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC,cAAc,EAAE,CAAC;KAClD;;;;;;;IAQM,YAAY;QACjB,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC,YAAY,EAAE,CAAC;KAChD;;;;;;;;;;IAWM,QAAQ;QACb,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC,QAAQ,EAAE,CAAC;KAC5C;;;;;;;IAQM,OAAO;QACZ,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC,OAAO,EAAE,CAAC;KAC3C;;;;;;;;IASM,eAAe;QACpB,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC,eAAe,EAAE,CAAC;KACnD;;;;;;;IAQM,uBAAuB;QAC5B,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC,uBAAuB,EAAE,CAAC;KAC3D;;;;;;;IAQM,qBAAqB;QAC1B,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC,qBAAqB,EAAE,CAAC;KACzD;;;;;;IAOM,yBAAyB;QAC9B,OAAO,sBAAsB,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC;KAC7D;;;;;;;IAQM,iBAAiB;QACtB,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC,iBAAiB,EAAE,CAAC;KACrD;;;;;;IAOM,qBAAqB;QAC1B,OAAO,sBAAsB,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;KACzD;;;;;;;;IASM,SAAS;QACd,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC,SAAS,EAAE,CAAC;KAC7C;;;;;;;IAQM,mBAAmB;QACxB,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC,mBAAmB,EAAE,CAAC;KACvD;;;;;;;IAQM,UAAU;QACf,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC,UAAU,EAAE,CAAC;KAC9C;;;;;;;;;IAUM,aAAa;QAClB,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC,aAAa,EAAE,CAAC;KACjD;;;;;;IAOM,iBAAiB;QACtB,OAAO,qBAAqB,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;KACpD;CACF;AAED,kBAAkB,CAAC,6BAA6B,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,yBAAyB,EAAE,IAAI,EAAE,6BAA6B,CAAC,SAAS,CAAC,iBAAiB,EAAE,KAAK,EAAE,6BAA6B,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC,CAAC;;AC7TrO;;;;;;;;;;;;;;;AAeA,AAMA;;;;;;AAMA,MAAa,kBAAmB,SAAQ,4BAA4B;IAIlE;QACE,KAAK,CAAC,yBAAyB,CAAC,QAAQ,CAAC,CAAC;KAC3C;;;;;;;;IASM,kBAAkB;QACvB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;;;;;;;;IASM,kBAAkB,CAAC,eAAuB;QAC/C,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;KACxC;CACF;AAED,aAAa,CAAE,kBAAkB,EAAE,SAAS,CAAE,CAAC;AAC/C,WAAW,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,kBAAkB,EAAE,KAAK,EAAE,kBAAkB,CAAC,SAAS,CAAC,kBAAkB,EAAE,CAAC,CAAC;;AC3D9L;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAY,OAGX;AAHD,WAAY,OAAO;IACjB,mCAAG,CAAA;IACH,qDAAY,CAAA;CACb,EAHW,OAAO,KAAP,OAAO,QAGlB;AAED,SAAgB,eAAe,CAAC,MAAc;IAC5C,IAAI,KAAK,KAAK,MAAM,EAAE;QACpB,OAAO,OAAO,CAAC,GAAG,CAAC;KACpB;SAAM,IAAI,YAAY,KAAK,MAAM,EAAE;QAClC,OAAO,OAAO,CAAC,YAAY,CAAC;KAC7B;SAAM;QACL,OAAO,IAAI,CAAC;KACb;CACF;;ACnCD;;;;;;;;;;;;;;;AAeA,AAOA;;;;;;AAMA,MAAa,wBAAyB,SAAQ,4BAA4B;IAKxE;QACE,KAAK,CAAC,yBAAyB,CAAC,eAAe,CAAC,CAAC;KAClD;;;;;;;;IAUM,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;;;IASM,UAAU,CAAC,OAAe;QAC/B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;;;;;;IAOM,cAAc;QACnB,OAAO,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACtC;;;;;;;;IASM,uBAAuB;QAC5B,OAAO,IAAI,CAAC,oBAAoB,CAAC;KAClC;;;;;;;;IASM,uBAAuB,CAAC,oBAA4B;QACzD,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;KAClD;CACF;AAED,aAAa,CAAE,wBAAwB,EAAE,OAAO,CAAE,CAAC;AACnD,WAAW,CAAC,wBAAwB,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,wBAAwB,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,wBAAwB,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;AAC/M,WAAW,CAAC,wBAAwB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,wBAAwB,CAAC,SAAS,CAAC,uBAAuB,EAAE,KAAK,EAAE,wBAAwB,CAAC,SAAS,CAAC,uBAAuB,EAAE,CAAC,CAAC;;AC9F1N;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAY,aAGX;AAHD,WAAY,aAAa;IACvB,+DAAW,CAAA;IACX,iEAAY,CAAA;CACb,EAHW,aAAa,KAAb,aAAa,QAGxB;AAED,SAAgB,qBAAqB,CAAC,MAAc;IAClD,IAAI,WAAW,KAAK,MAAM,EAAE;QAC1B,OAAO,aAAa,CAAC,WAAW,CAAC;KAClC;SAAM,IAAI,YAAY,KAAK,MAAM,EAAE;QAClC,OAAO,aAAa,CAAC,YAAY,CAAC;KACnC;SAAM;QACL,OAAO,IAAI,CAAC;KACb;CACF;;ACnCD;;;;;;;;;;;;;;;AAeA,AAOA;;;;;;AAMA,MAAa,oBAAqB,SAAQ,4BAA4B;IAKpE;QACE,KAAK,CAAC,yBAAyB,CAAC,UAAU,CAAC,CAAC;KAC7C;;;;;;;;IASM,gBAAgB;QACrB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;;;;;;;;IASM,gBAAgB,CAAC,aAAqB;QAC3C,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;KACpC;;;;;;IAOM,oBAAoB;QACzB,OAAO,qBAAqB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;KAClD;;;;;;;IAQM,oBAAoB;QACzB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;;;;;;;IAQM,oBAAoB,CAAC,gBAAwB;QAClD,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;KAC1C;CACF;AAED,aAAa,CAAE,oBAAoB,EAAE,QAAQ,CAAE,CAAC;AAChD,WAAW,CAAC,oBAAoB,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,oBAAoB,CAAC,SAAS,CAAC,gBAAgB,EAAE,KAAK,EAAE,oBAAoB,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC,CAAC;AAClN,WAAW,CAAC,oBAAoB,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,oBAAoB,CAAC,SAAS,CAAC,oBAAoB,EAAE,KAAK,EAAE,oBAAoB,CAAC,SAAS,CAAC,oBAAoB,EAAE,CAAC,CAAC;;AC3F1N;;;;;;;;;;;;;;;AAeA,AAIA;;;;;;AAMA,MAAa,mBAAoB,SAAQ,4BAA4B;IAEnE;QACE,KAAK,CAAC,yBAAyB,CAAC,SAAS,CAAC,CAAC;KAC5C;CACF;AAED,aAAa,CAAE,mBAAmB,EAAE,UAAU,CAAE,CAAC;;AChCjD;;;;;;;;;;;;;;;AAeA,AAOA;;;;;;AAMA,MAAa,mBAAoB,SAAQ,4BAA4B;IAInE;QACE,KAAK,CAAC,yBAAyB,CAAC,SAAS,CAAC,CAAC;KAC5C;;;;;;;;IASM,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;;;IASM,UAAU,CAAC,OAAe;QAC/B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;;;;;;IAOM,cAAc;QACnB,OAAO,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACtC;CACF;AAED,aAAa,CAAE,mBAAmB,EAAE,UAAU,CAAE,CAAC;AACjD,WAAW,CAAC,mBAAmB,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,mBAAmB,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,mBAAmB,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;;ACrEhM;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAY,iBAIX;AAJD,WAAY,iBAAiB;IAC3B,iEAAQ,CAAA;IACR,6DAAM,CAAA;IACN,6DAAM,CAAA;CACP,EAJW,iBAAiB,KAAjB,iBAAiB,QAI5B;AAED,SAAgB,yBAAyB,CAAC,MAAc;IACtD,IAAI,UAAU,KAAK,MAAM,EAAE;QACzB,OAAO,iBAAiB,CAAC,QAAQ,CAAC;KACnC;SAAM,IAAI,QAAQ,KAAK,MAAM,EAAE;QAC9B,OAAO,iBAAiB,CAAC,MAAM,CAAC;KACjC;SAAM,IAAI,QAAQ,KAAK,MAAM,EAAE;QAC9B,OAAO,iBAAiB,CAAC,MAAM,CAAC;KACjC;SAAM;QACL,OAAO,IAAI,CAAC;KACb;CACF;;ACtCD;;;;;;;;;;;;;;;AAeA,AAWA;;;;;;AAMA,MAAa,sBAAuB,SAAQ,8BAA8B;IAWxE;QACE,KAAK,CAAC,yBAAyB,CAAC,YAAY,CAAC,CAAC;KAC/C;;;;;;;IAQM,aAAa;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;;IAQM,aAAa,CAAC,UAAsB;QACzC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;;;;;;;;IASM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;;;IASM,eAAe,CAAC,YAAoB;QACzC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;;;;;;IAOM,mBAAmB;QACxB,OAAQ,yBAAyB,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;KAC3D;;;;;;;;IASM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;;;IASM,QAAQ,CAAC,KAAa;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;;;;;;;IAQM,mBAAmB;QACxB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;;;;;;;IAQM,mBAAmB,CAAC,gBAAwB;QACjD,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;KAC1C;;;;;;;IAQM,qBAAqB;QAC1B,OAAO,IAAI,CAAC,kBAAkB,CAAC;KAChC;;;;;;;IAQM,qBAAqB,CAAC,kBAA0B;QACrD,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;KAC9C;;;;;;IAOM,yBAAyB;QAC9B,OAAO,sBAAsB,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC;KAC7D;;;;;;;;;IAUM,uBAAuB;QAC5B,OAAO,IAAI,CAAC,oBAAoB,CAAC;KAClC;;;;;;;;;IAUM,uBAAuB,CAAC,oBAA4B;QACzD,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;KAClD;;;;;;;IAQM,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;;;;;;;IAQM,OAAO,CAAC,IAAY;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;CACF;AAED,aAAa,CAAE,sBAAsB,EAAE,YAAY,CAAE,CAAC;AACtD,kBAAkB,CAAC,sBAAsB,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,sBAAsB,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,sBAAsB,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AACzL,WAAW,CAAC,sBAAsB,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,sBAAsB,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,sBAAsB,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;AACrN,WAAW,CAAC,sBAAsB,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,sBAAsB,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,sBAAsB,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;AACnM,WAAW,CAAC,sBAAsB,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,sBAAsB,CAAC,SAAS,CAAC,mBAAmB,EAAE,KAAK,EAAE,sBAAsB,CAAC,SAAS,CAAC,mBAAmB,EAAE,CAAC,CAAC;AAC9N,WAAW,CAAC,sBAAsB,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,sBAAsB,CAAC,SAAS,CAAC,qBAAqB,EAAE,KAAK,EAAE,sBAAsB,CAAC,SAAS,CAAC,qBAAqB,EAAE,CAAC,CAAC;AAClO,WAAW,CAAC,sBAAsB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,sBAAsB,CAAC,SAAS,CAAC,uBAAuB,EAAE,KAAK,EAAE,sBAAsB,CAAC,SAAS,CAAC,uBAAuB,EAAE,CAAC,CAAC;AACpN,WAAW,CAAC,sBAAsB,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,sBAAsB,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE,sBAAsB,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;;AC7NhL;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAY,UAMX;AAND,WAAY,UAAU;IACpB,yEAAmB,CAAA;IACnB,2EAAoB,CAAA;IACpB,mDAAQ,CAAA;IACR,mDAAQ,CAAA;IACR,2CAAI,CAAA;CACL,EANW,UAAU,KAAV,UAAU,QAMrB;AAED,SAAgB,kBAAkB,CAAC,MAAc;IAC/C,IAAI,QAAQ,KAAK,MAAM,EAAE;QACvB,OAAO,UAAU,CAAC,mBAAmB,CAAC;KACvC;SAAM,IAAI,SAAS,KAAK,MAAM,EAAE;QAC/B,OAAO,UAAU,CAAC,oBAAoB,CAAC;KACxC;SAAM,IAAI,KAAK,KAAK,MAAM,EAAE;QAC3B,OAAO,UAAU,CAAC,QAAQ,CAAC;KAC5B;SAAM,IAAI,UAAU,KAAK,MAAM,EAAE;QAChC,OAAO,UAAU,CAAC,QAAQ,CAAC;KAC5B;SAAM,IAAI,MAAM,KAAK,MAAM,EAAE;QAC5B,OAAO,UAAU,CAAC,IAAI,CAAC;KACxB;SAAM;QACL,OAAO,IAAI,CAAC;KACb;CACF;;AC5CD;;;;;;;;;;;;;;;AAeA,AAaA;;;;;;AAMA,MAAa,iBAAkB,SAAQ,8BAA8B;IAcnE;QACE,KAAK,CAAC,yBAAyB,CAAC,MAAM,CAAC,CAAC;KACzC;;;;;;;;IASM,aAAa;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;;;IASM,aAAa,CAAC,UAAsB;QACzC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;;;;;;;;IASM,aAAa;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;;;IASM,aAAa,CAAC,UAAkB;QACrC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;;;;;;IAOM,iBAAiB;QACtB,OAAO,kBAAkB,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;KACjD;;;;;;;IAQM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;;IAQM,QAAQ,CAAC,KAAa;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;;;;;;;IAQM,qBAAqB;QAC1B,OAAO,IAAI,CAAC,kBAAkB,CAAC;KAChC;;;;;;;IAQM,qBAAqB,CAAC,UAAkB;QAC7C,IAAI,CAAC,kBAAkB,GAAG,UAAU,CAAC;KACtC;;;;;;IAOM,yBAAyB;QAC9B,OAAO,sBAAsB,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC;KAC7D;;;;;;;IAQM,iBAAiB;QACtB,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;;;;;;;IAQM,iBAAiB,CAAC,WAAmB;QAC1C,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC;KACnC;;;;;;IAOM,qBAAqB;QAC1B,OAAO,sBAAsB,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;KACzD;;;;;;;IAQM,YAAY;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;;IAQM,YAAY,CAAC,SAAkB;QACpC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC5B;;;;;;;IAQM,cAAc;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;;;;;;IAQM,cAAc,CAAC,WAAmB;QACvC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAChC;;;;;;;;IASM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;;;IASM,eAAe,CAAC,YAAoB;QACzC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;KAClC;;;;;;;IAQM,uBAAuB;QAC5B,OAAO,IAAI,CAAC,oBAAoB,CAAC;KAClC;;;;;;;IAQM,uBAAuB,CAAC,oBAAsC;QACnE,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;QACjD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;KAC1B;;;;;;;;;IAUM,aAAa;QAClB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;;;;;;;;;IAUM,aAAa,CAAC,aAAqB;QACxC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;KACpC;;;;;;IAOM,iBAAiB;QACtB,OAAO,qBAAqB,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;KACpD;CACF;AAED,aAAa,CAAE,iBAAiB,EAAE,QAAQ,CAAE,CAAC;AAC7C,kBAAkB,CAAC,iBAAiB,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,iBAAiB,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,iBAAiB,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AAC1L,WAAW,CAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,iBAAiB,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,iBAAiB,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AACnM,WAAW,CAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,iBAAiB,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,iBAAiB,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;AACpL,WAAW,CAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,iBAAiB,CAAC,SAAS,CAAC,qBAAqB,EAAE,KAAK,EAAE,iBAAiB,CAAC,SAAS,CAAC,qBAAqB,EAAE,CAAC,CAAC;AACnM,WAAW,CAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,iBAAiB,CAAC,SAAS,CAAC,iBAAiB,EAAE,KAAK,EAAE,iBAAiB,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC,CAAC;AAC5L,WAAW,CAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,iBAAiB,CAAC,SAAS,CAAC,YAAY,EAAE,KAAK,EAAE,iBAAiB,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;AACjL,WAAW,CAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,iBAAiB,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,EAAE,iBAAiB,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,CAAC;AACtL,WAAW,CAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,iBAAiB,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,iBAAiB,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;AACrL,kBAAkB,CAAC,iBAAiB,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,gBAAgB,EAAE,IAAI,EAAE,iBAAiB,CAAC,SAAS,CAAC,uBAAuB,EAAE,KAAK,EAAE,iBAAiB,CAAC,SAAS,CAAC,uBAAuB,EAAE,CAAC,CAAC;AACrM,WAAW,CAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,eAAe,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,iBAAiB,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,iBAAiB,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;;ACvTvL;;;;;;;;;;;;;;;AAeA,AAUA;;;;;;AAMA,MAAa,4BAA6B,SAAQ,8BAA8B;IAU9E;QACE,KAAK,CAAC,yBAAyB,CAAC,kBAAkB,CAAC,CAAC;KACrD;;;;;;;;IASM,aAAa;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;;;IASM,aAAa,CAAC,UAAsB;QACzC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;;;;;;;IAQM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;;IAQM,QAAQ,CAAC,KAAa;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;;;;;;;IAQM,qBAAqB;QAC1B,OAAO,IAAI,CAAC,kBAAkB,CAAC;KAChC;;;;;;;IAQM,qBAAqB,CAAC,kBAA0B;QACrD,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;KAC9C;;;;;;IAOM,yBAAyB;QAC9B,OAAO,sBAAsB,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC;KAC7D;;;;;;;IAQM,iBAAiB;QACtB,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;;;;;;;IAQM,iBAAiB,CAAC,cAAsB;QAC7C,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;KACtC;;;;;;IAOM,qBAAqB;QAC1B,OAAO,sBAAsB,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;KACzD;;;;;;;;IASM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;;;IASM,eAAe,CAAC,YAAoB;QACzC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;KAClC;;;;;;;IAQM,uBAAuB;QAC5B,OAAO,IAAI,CAAC,oBAAoB,CAAC;KAClC;;;;;;;IAQM,uBAAuB,CAAC,oBAAsC;QACnE,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;QACjD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;KAC1B;;;;;;;;;IAUM,aAAa;QAClB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;;;;;;;;;IAUM,aAAa,CAAC,aAAqB;QACxC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;KACpC;;;;;;IAOM,iBAAiB;QACtB,OAAO,qBAAqB,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;KACpD;CACF;AAED,aAAa,CAAE,4BAA4B,EAAE,YAAY,CAAE,CAAC;AAC5D,kBAAkB,CAAC,4BAA4B,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,4BAA4B,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,4BAA4B,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AAC3N,WAAW,CAAC,4BAA4B,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,4BAA4B,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,4BAA4B,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;AACrN,WAAW,CAAC,4BAA4B,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,4BAA4B,CAAC,SAAS,CAAC,qBAAqB,EAAE,KAAK,EAAE,4BAA4B,CAAC,SAAS,CAAC,qBAAqB,EAAE,CAAC,CAAC;AACpO,WAAW,CAAC,4BAA4B,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,4BAA4B,CAAC,SAAS,CAAC,iBAAiB,EAAE,KAAK,EAAE,4BAA4B,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC,CAAC;AAC7N,WAAW,CAAC,4BAA4B,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,4BAA4B,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,4BAA4B,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;AACtN,WAAW,CAAC,4BAA4B,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,gBAAgB,EAAE,IAAI,EAAE,4BAA4B,CAAC,SAAS,CAAC,uBAAuB,EAAE,KAAK,EAAE,4BAA4B,CAAC,SAAS,CAAC,uBAAuB,EAAE,CAAC,CAAC;AACpP,WAAW,CAAC,4BAA4B,EAAE,EAAE,IAAI,EAAE,eAAe,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,4BAA4B,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,4BAA4B,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;;ACtOxN;;;;;;;;;;;;;;;AAeA,AAOA;;;;;;;AAOA,MAAa,sBAAuB,SAAQ,8BAA8B;IAMxE;QACE,KAAK,CAAC,yBAAyB,CAAC,YAAY,CAAC,CAAC;KAC/C;;;;;;;IAQM,qBAAqB;QAC1B,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;;;;;;;IAQM,qBAAqB,CAAC,cAAsB;QACjD,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;KACtC;;;;;;IAOM,yBAAyB;QAC9B,OAAO,sBAAsB,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC;KAC7D;;;;;;;IAQM,mBAAmB;QACxB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;;IAQM,mBAAmB,CAAC,YAAoB;QAC7C,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;;;;;;IAOM,uBAAuB;QAC5B,OAAO,sBAAsB,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC;KAC3D;;;;;;;IAQM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;;IAQM,QAAQ,CAAC,KAAa;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;CACF;AAED,aAAa,CAAE,sBAAsB,EAAE,UAAU,CAAE,CAAC;AACpD,WAAW,CAAC,sBAAsB,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,sBAAsB,CAAC,SAAS,CAAC,qBAAqB,EAAE,KAAK,EAAE,sBAAsB,CAAC,SAAS,CAAC,qBAAqB,EAAE,CAAC,CAAC;AACnN,WAAW,CAAC,sBAAsB,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,sBAAsB,CAAC,SAAS,CAAC,mBAAmB,EAAE,KAAK,EAAE,sBAAsB,CAAC,SAAS,CAAC,mBAAmB,EAAE,CAAC,CAAC;AAC7M,WAAW,CAAC,sBAAsB,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,sBAAsB,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,sBAAsB,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;;ACzHnL;;;;;;;;;;;;;;;AAeA,AAUA;;;;;;;AAOA,MAAa,0BAA2B,SAAQ,8BAA8B;IAQ5E;QACE,KAAK,CAAC,yBAAyB,CAAC,gBAAgB,CAAC,CAAC;KACnD;;;;;;;;IASM,aAAa;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;;;IASM,aAAa,CAAC,UAAsB;QACzC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;;;;;;;IAQM,qBAAqB;QAC1B,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;;;;;;;IAQM,qBAAqB,CAAC,cAAsB;QACjD,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;KACtC;;;;;;IAOM,yBAAyB;QAC9B,OAAO,sBAAsB,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC;KAC7D;;;;;;;IAQM,mBAAmB;QACxB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;;IAQM,mBAAmB,CAAC,YAAoB;QAC7C,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;;;;;;IAOM,uBAAuB;QAC5B,OAAO,sBAAsB,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC;KAC3D;;;;;;;IAQM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;;IAQM,QAAQ,CAAC,KAAa;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;CACF;AAED,aAAa,CAAE,0BAA0B,EAAE,SAAS,CAAE,CAAC;AACvD,kBAAkB,CAAC,0BAA0B,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,0BAA0B,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,0BAA0B,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AACrN,WAAW,CAAC,0BAA0B,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,0BAA0B,CAAC,SAAS,CAAC,qBAAqB,EAAE,KAAK,EAAE,0BAA0B,CAAC,SAAS,CAAC,qBAAqB,EAAE,CAAC,CAAC;AAC/N,WAAW,CAAC,0BAA0B,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,0BAA0B,CAAC,SAAS,CAAC,mBAAmB,EAAE,KAAK,EAAE,0BAA0B,CAAC,SAAS,CAAC,mBAAmB,EAAE,CAAC,CAAC;AACzN,WAAW,CAAC,0BAA0B,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,0BAA0B,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,0BAA0B,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;;ACrJ/L;;;;;;;;;;;;;;;AAeA,AAQA;;;;;;;AAOA,MAAa,yBAA0B,SAAQ,8BAA8B;IAO3E;QACE,KAAK,CAAC,yBAAyB,CAAC,eAAe,CAAC,CAAC;KAClD;;;;;;;IAQM,iBAAiB;QACtB,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;;;;;;;IAQM,iBAAiB,CAAC,cAAsB;QAC7C,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;KACtC;;;;;;IAOM,qBAAqB;QAC1B,IAAI,IAAI,GAAW,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC5C,OAAO,IAAI,IAAI,IAAI,GAAG,cAAc,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;KACnD;;;;;;;IAQM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;;IAQM,QAAQ,CAAC,KAAa;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;;;;;;;;IASM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;;;IASM,eAAe,CAAC,YAAoB;QACzC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;KAClC;;;;;;;IAQM,uBAAuB;QAC5B,OAAO,IAAI,CAAC,oBAAoB,CAAC;KAClC;;;;;;;IAQM,uBAAuB,CAAC,gBAAkC;QAC/D,IAAI,CAAC,oBAAoB,GAAG,gBAAgB,CAAC;QAC7C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;KAC1B;CACF;AAED,aAAa,CAAE,yBAAyB,EAAE,gBAAgB,CAAE,CAAC;AAC7D,WAAW,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,iBAAiB,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC,CAAC;AACpN,WAAW,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC5L,WAAW,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;AAC9M,WAAW,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,gBAAgB,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,uBAAuB,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,uBAAuB,EAAE,CAAC,CAAC;;AC5I5O;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAY,cAGX;AAHD,WAAY,cAAc;IACxB,qEAAa,CAAA;IACb,mEAAY,CAAA;CACb,EAHW,cAAc,KAAd,cAAc,QAGzB;AAED,SAAgB,sBAAsB,CAAC,MAAc;IACnD,IAAI,YAAY,KAAK,MAAM,EAAE;QAC3B,OAAO,cAAc,CAAC,YAAY,CAAC;KACpC;SAAM,IAAI,aAAa,KAAK,MAAM,EAAE;QACnC,OAAO,cAAc,CAAC,aAAa,CAAC;KACrC;SAAM;QACL,OAAO,IAAI,CAAC;KACb;CACF;;ACnCD;;;;;;;;;;;;;;;AAeA,AAaA;;;;;;AAMA,MAAa,yBAA0B,SAAQ,8BAA8B;IAkB3E;QACE,KAAK,CAAC,yBAAyB,CAAC,eAAe,CAAC,CAAC;KAClD;;;;;;;;IASM,aAAa;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;;;IASM,aAAa,CAAC,UAAsB;QACzC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;;;;;;;;;IAUM,aAAa;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;;;;IAUM,aAAa,CAAC,UAAkB;QACrC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;;;;;;IAOM,iBAAiB;QACtB,OAAO,kBAAkB,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;KACjD;;;;;;;IAQM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;;IAQM,QAAQ,CAAC,KAAa;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;;;;;;;;IASM,qBAAqB;QAC1B,OAAO,IAAI,CAAC,kBAAkB,CAAC;KAChC;;;;;;;;IASM,qBAAqB,CAAC,kBAA0B;QACrD,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;KAC9C;;;;;;IAOM,yBAAyB;QAC9B,OAAO,sBAAsB,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC;KAC7D;;;;;;;;IASM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;;;IASM,QAAQ,CAAC,KAAa;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;;;;;;;IAQM,YAAY;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;;IAQM,YAAY,CAAC,SAAiB;QACnC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC5B;;;;;;;;IASM,aAAa;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;;;IASM,aAAa,CAAC,UAAkB;QACrC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;;;;;;;IAQM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;;IAQM,QAAQ,CAAC,KAAa;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;;;;;;;IAQM,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;;;;;;;IAQM,OAAO,CAAC,IAAY;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;;;;;;;IAQM,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;;;;;;;IAQM,OAAO,CAAC,IAAY;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;;;;;;;IAQM,YAAY;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;;IAQM,YAAY,CAAC,SAAkB;QACpC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC5B;;;;;;;;IASM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;;;IASM,eAAe,CAAC,YAAoB;QACzC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;KAClC;;;;;;;IAQM,uBAAuB;QAC5B,OAAO,IAAI,CAAC,oBAAoB,CAAC;KAClC;;;;;;;IAQM,uBAAuB,CAAC,oBAAsC;QACnE,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;QACjD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;KAC1B;;;;;;;;;IAUM,aAAa;QAClB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;;;;;;;;;IAUM,aAAa,CAAC,aAAqB;QACxC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;KACpC;;;;;;IAOM,iBAAiB;QACtB,OAAO,qBAAqB,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;KACpD;CACF;AAED,aAAa,CAAE,yBAAyB,EAAE,UAAU,CAAE,CAAC;AACvD,kBAAkB,CAAC,yBAAyB,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AAClN,WAAW,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AAC3N,WAAW,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC5M,WAAW,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,qBAAqB,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,qBAAqB,EAAE,CAAC,CAAC;AAC3N,WAAW,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC5M,WAAW,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,YAAY,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;AACxN,WAAW,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AAC3M,WAAW,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC5L,WAAW,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;AAC1L,WAAW,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;AAC1L,WAAW,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,YAAY,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;AAC1M,WAAW,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;AAC9M,WAAW,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,gBAAgB,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,uBAAuB,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,uBAAuB,EAAE,CAAC,CAAC;AAC5O,WAAW,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,eAAe,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;;AC9Y/M;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAY,iBAKX;AALD,WAAY,iBAAiB;IAC3B,6DAAM,CAAA;IACN,iEAAQ,CAAA;IACR,yDAAI,CAAA;IACJ,2DAAK,CAAA;CACN,EALW,iBAAiB,KAAjB,iBAAiB,QAK5B;AAED,SAAgB,yBAAyB,CAAC,MAAc;IACtD,IAAI,QAAQ,KAAK,MAAM,EAAE;QACvB,OAAO,iBAAiB,CAAC,MAAM,CAAC;KACjC;SAAM,IAAI,UAAU,KAAK,MAAM,EAAE;QAChC,OAAO,iBAAiB,CAAC,QAAQ,CAAC;KACnC;SAAM,IAAI,MAAM,KAAK,MAAM,EAAE;QAC5B,OAAO,iBAAiB,CAAC,IAAI,CAAC;KAC/B;SAAM,IAAI,OAAO,KAAK,MAAM,EAAE;QAC7B,OAAO,iBAAiB,CAAC,KAAK,CAAC;KAChC;SAAM;QACL,OAAO,IAAI,CAAC;KACb;CACF;;ACzCD;;;;;;;;;;;;;;;AAeA,AAYA;;;;;;AAMA,MAAa,0BAA2B,SAAQ,8BAA8B;IAW5E;QACE,KAAK,CAAC,yBAAyB,CAAC,iBAAiB,CAAC,CAAC;KACpD;;;;;;;;IASM,aAAa;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;;;IASM,aAAa,CAAC,UAAsB;QACzC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;;;;;;;IAQM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;;IAQM,QAAQ,CAAC,KAAa;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;;;;;;;;IASM,qBAAqB;QAC1B,OAAO,IAAI,CAAC,kBAAkB,CAAC;KAChC;;;;;;;;IASM,qBAAqB,CAAC,kBAA0B;QACrD,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;KAC9C;;;;;;IAOM,yBAAyB;QAC9B,OAAO,sBAAsB,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC;KAC7D;;;;;;;;IASM,iBAAiB;QACtB,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;;;;;;;;IASM,iBAAiB,CAAC,cAAsB;QAC7C,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;KACtC;;;;;;IAOM,qBAAqB;QAC1B,OAAO,sBAAsB,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;KACzD;;;;;;;;IASM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;;;IASM,eAAe,CAAC,YAAoB;QACzC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;KAClC;;;;;;;IAQM,uBAAuB;QAC5B,OAAO,IAAI,CAAC,oBAAoB,CAAC;KAClC;;;;;;;IAQM,uBAAuB,CAAC,oBAAsC;QACnE,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;QACjD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;KAC1B;;;;;;;;;IAUM,aAAa;QAClB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;;;;;;;;;IAUM,aAAa,CAAC,aAAqB;QACxC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;KACpC;;;;;;IAOM,iBAAiB;QACtB,OAAO,qBAAqB,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;KACpD;CACF;AAED,aAAa,CAAE,0BAA0B,EAAE,UAAU,CAAE,CAAC;AACxD,kBAAkB,CAAC,0BAA0B,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,0BAA0B,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,0BAA0B,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AACrN,WAAW,CAAC,0BAA0B,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,0BAA0B,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,0BAA0B,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC/M,WAAW,CAAC,0BAA0B,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,0BAA0B,CAAC,SAAS,CAAC,qBAAqB,EAAE,KAAK,EAAE,0BAA0B,CAAC,SAAS,CAAC,qBAAqB,EAAE,CAAC,CAAC;AAC9N,WAAW,CAAC,0BAA0B,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,0BAA0B,CAAC,SAAS,CAAC,iBAAiB,EAAE,KAAK,EAAE,0BAA0B,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC,CAAC;AACxN,WAAW,CAAC,0BAA0B,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,0BAA0B,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,0BAA0B,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;AACjN,WAAW,CAAC,0BAA0B,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,gBAAgB,EAAE,IAAI,EAAE,0BAA0B,CAAC,SAAS,CAAC,uBAAuB,EAAE,KAAK,EAAE,0BAA0B,CAAC,SAAS,CAAC,uBAAuB,EAAE,CAAC,CAAC;AAC/O,WAAW,CAAC,0BAA0B,EAAE,EAAE,IAAI,EAAE,eAAe,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,0BAA0B,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,0BAA0B,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;;AC7OlN;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAY,cAIX;AAJD,WAAY,cAAc;IACxB,mDAAI,CAAA;IACJ,mDAAI,CAAA;IACJ,2DAAQ,CAAA;CACT,EAJW,cAAc,KAAd,cAAc,QAIzB;AAED,SAAgB,sBAAsB,CAAC,MAAc;IACnD,IAAI,MAAM,KAAK,MAAM,EAAE;QACrB,OAAO,cAAc,CAAC,IAAI,CAAC;KAC5B;SAAM,IAAI,MAAM,KAAK,MAAM,EAAE;QAC5B,OAAO,cAAc,CAAC,IAAI,CAAC;KAC5B;SAAM,IAAI,UAAU,KAAK,MAAM,EAAE;QAChC,OAAO,cAAc,CAAC,QAAQ,CAAC;KAChC;SAAM;QACL,OAAO,IAAI,CAAC;KACb;CACF;;ACtCD;;;;;;;;;;;;;;;AAeA,AAOA;;;;;;AAMA,MAAa,mBAAoB,SAAQ,6BAA6B;IAKpE;QACE,KAAK,CAAC,yBAAyB,CAAC,SAAS,CAAC,CAAC;KAC5C;;;;;;;;IASM,aAAa;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;;;IASM,aAAa,CAAC,UAAkB;QACrC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;;;;;;IAOM,iBAAiB;QACtB,OAAO,sBAAsB,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;KACrD;;;;;;;;IASM,kBAAkB;QACvB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;;;;;;;;IASM,kBAAkB,CAAC,eAAuB;QAC/C,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;KACxC;CACF;AAED,aAAa,CAAE,mBAAmB,EAAE,UAAU,CAAE,CAAC;AACjD,WAAW,CAAC,mBAAmB,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,mBAAmB,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,mBAAmB,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AACzL,WAAW,CAAC,mBAAmB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,mBAAmB,CAAC,SAAS,CAAC,kBAAkB,EAAE,KAAK,EAAE,mBAAmB,CAAC,SAAS,CAAC,kBAAkB,EAAE,CAAC,CAAC;;AC7FjM;;;;;;;;;;;;;;;;;;;;AAqBA,IAAY,QAGX;AAHD,WAAY,QAAQ;IAClB,uCAAI,CAAA;IACJ,mDAAU,CAAA;CACX,EAHW,QAAQ,KAAR,QAAQ,QAGnB;AAED,SAAgB,gBAAgB,CAAC,MAAc;IAC7C,IAAI,MAAM,KAAK,MAAM,EAAE;QACrB,OAAO,QAAQ,CAAC,IAAI,CAAC;KACtB;SAAM,IAAI,WAAW,KAAK,MAAM,EAAE;QACjC,OAAO,QAAQ,CAAC,UAAU,CAAC;KAC5B;SAAM;QACL,OAAO,IAAI,CAAC;KACb;CACF;;AClCD;;;;;;;;;;;;;;;AAeA,AAOA;;;;;;AAMA,MAAa,yBAA0B,SAAQ,6BAA6B;IAM1E;QACE,KAAK,CAAC,yBAAyB,CAAC,gBAAgB,CAAC,CAAC;KACnD;;;;;;;IAQM,WAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;;IAQM,WAAW,CAAC,QAAgB;QACjC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;;;;;;IAOM,eAAe;QACpB,OAAO,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACxC;;;;;;;IAQM,mBAAmB;QACxB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;;;;;;;IAQM,mBAAmB,CAAC,gBAAwB;QACjD,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;KAC1C;;;;;;;;IASM,uBAAuB;QAC5B,OAAO,IAAI,CAAC,oBAAoB,CAAC;KAClC;;;;;;;;IASM,uBAAuB,CAAC,oBAA4B;QACzD,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;KAClD;CACF;AAED,aAAa,CAAE,yBAAyB,EAAE,QAAQ,CAAE,CAAC;AACrD,WAAW,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AACrM,WAAW,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,mBAAmB,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,mBAAmB,EAAE,CAAC,CAAC;AACzN,WAAW,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,uBAAuB,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,uBAAuB,EAAE,CAAC,CAAC;;ACjH7N;;;;;;;;;;;;;;;AAeA,AASA;;;;;;AAMA,MAAa,qBAAsB,SAAQ,6BAA6B;IAQtE;QACE,KAAK,CAAC,yBAAyB,CAAC,WAAW,CAAC,CAAC;KAC9C;;;;;;;;IASM,iBAAiB;QACtB,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;;;;;;;;IASM,iBAAiB,CAAC,cAAsB;QAC7C,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;KACtC;;;;;;IAOM,qBAAqB;QAC1B,OAAO,sBAAsB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KACpD;;;;;;;IAQM,mBAAmB;QACxB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;;;;;;;IAQM,mBAAmB,CAAC,gBAAwB;QACjD,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;KAC1C;;;;;;;;IASM,uBAAuB;QAC5B,OAAO,IAAI,CAAC,oBAAoB,CAAC;KAClC;;;;;;;;IASM,uBAAuB,CAAC,oBAA4B;QACzD,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;KAClD;;;;;;;;IASM,cAAc;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;;;;;;;IASM,cAAc,CAAC,WAAmB;QACvC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAChC;;;;;;IAOM,kBAAkB;QACvB,OAAO,yBAAyB,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;KACzD;;;;;;;;IASM,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;;;IASM,UAAU,CAAC,OAAe;QAC/B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;;;;;;IAOM,cAAc;QACnB,OAAO,2BAA2B,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;KACvD;CACF;AAED,aAAa,CAAE,qBAAqB,EAAE,SAAS,CAAE,CAAC;AAClD,WAAW,CAAC,qBAAqB,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,qBAAqB,CAAC,SAAS,CAAC,iBAAiB,EAAE,KAAK,EAAE,qBAAqB,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC,CAAC;AACxN,WAAW,CAAC,qBAAqB,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,qBAAqB,CAAC,SAAS,CAAC,mBAAmB,EAAE,KAAK,EAAE,qBAAqB,CAAC,SAAS,CAAC,mBAAmB,EAAE,CAAC,CAAC;AAC3N,WAAW,CAAC,qBAAqB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,qBAAqB,CAAC,SAAS,CAAC,uBAAuB,EAAE,KAAK,EAAE,qBAAqB,CAAC,SAAS,CAAC,uBAAuB,EAAE,CAAC,CAAC;AACjN,WAAW,CAAC,qBAAqB,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,qBAAqB,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,EAAE,qBAAqB,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,CAAC;AAC9L,WAAW,CAAC,qBAAqB,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,qBAAqB,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,qBAAqB,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;;ACvLtL;;;;;;;;;;;;;;;AAeA,AAKA;;;;;;AAMA,MAAa,oBAAqB,SAAQ,6BAA6B;IAErE;QACE,KAAK,CAAC,yBAAyB,CAAC,UAAU,CAAC,CAAC;KAC7C;CACF;AAED,aAAa,CAAE,oBAAoB,EAAE,WAAW,CAAE,CAAC;;ACjCnD;;;;;;;;;;;;;;;AAeA,AAOA;;;;;;AAMA,MAAa,oBAAqB,SAAQ,6BAA6B;IAIrE;QACE,KAAK,CAAC,yBAAyB,CAAC,UAAU,CAAC,CAAC;KAC7C;;;;;;;;IASM,WAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;;;IASM,WAAW,CAAC,QAAgB;QACjC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;;;;;;IAOM,eAAe;QACpB,OAAO,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACxC;CACF;AAED,aAAa,CAAE,oBAAoB,EAAE,WAAW,CAAE,CAAC;AACnD,WAAW,CAAC,oBAAoB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,oBAAoB,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,oBAAoB,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;;ACrEtM;;;;;;;;;;;;;;;AAeA,AAWA;;;;;;AAMA,MAAa,gBAAiB,SAAQ,8BAA8B;IAalE;QACE,KAAK,CAAC,yBAAyB,CAAC,KAAK,CAAC,CAAC;KACxC;;;;;;;;IASM,aAAa;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;;;IASM,aAAa,CAAC,UAAsB;QACzC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;;;;;;;;IASM,qBAAqB;QAC1B,OAAO,IAAI,CAAC,kBAAkB,CAAC;KAChC;;;;;;;;IASM,qBAAqB,CAAC,kBAA0B;QACrD,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;KAC9C;;;;;;IAOM,yBAAyB;QAC9B,OAAO,sBAAsB,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC;KAC7D;;;;;;;IAQM,WAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;;IAQM,WAAW,CAAC,QAAgB;QACjC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;;;;;;;IAQM,WAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;;IAQM,WAAW,CAAC,QAAgB;QACjC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;;;;;;IAOM,YAAY;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;IAOM,YAAY,CAAC,SAAiB;QACnC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC5B;;;;;;IAOM,cAAc;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;;;;;IAOM,cAAc,CAAC,WAAmB;QACvC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAChC;;;;;;;;IASM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;;;IASM,eAAe,CAAC,YAAoB;QACzC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;KAClC;;;;;;;IAQM,uBAAuB;QAC5B,OAAO,IAAI,CAAC,oBAAoB,CAAC;KAClC;;;;;;;IAQM,uBAAuB,CAAC,oBAAsC;QACnE,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;QACjD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;KAC1B;;;;;;IAOM,yBAAyB;QAC9B,OAAO,IAAI,CAAC,sBAAsB,CAAC;KACpC;;;;;;IAOM,yBAAyB,CAAC,sBAA8B;QAC7D,IAAI,CAAC,sBAAsB,GAAG,sBAAsB,CAAC;KACtD;;;;;;;IAQM,iBAAiB;QACtB,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;;;;;;;IAQM,iBAAiB,CAAC,cAAsB;QAC7C,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;KACtC;;;;;;IAOM,qBAAqB;QAC1B,OAAO,sBAAsB,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;KACzD;;;;;;;;;IAUM,aAAa;QAClB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;;;;;;;;;IAUM,aAAa,CAAC,aAAqB;QACxC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;KACpC;;;;;;IAOM,iBAAiB;QACtB,OAAO,qBAAqB,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;KACpD;CACF;AAED,aAAa,CAAE,gBAAgB,EAAE,OAAO,CAAE,CAAC;AAC3C,kBAAkB,CAAC,gBAAgB,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,gBAAgB,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,gBAAgB,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AACvL,WAAW,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,gBAAgB,CAAC,SAAS,CAAC,qBAAqB,EAAE,KAAK,EAAE,gBAAgB,CAAC,SAAS,CAAC,qBAAqB,EAAE,CAAC,CAAC;AAChM,WAAW,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,gBAAgB,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,gBAAgB,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AAC1K,WAAW,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,gBAAgB,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,gBAAgB,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AAC1K,WAAW,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,gBAAgB,CAAC,SAAS,CAAC,YAAY,EAAE,KAAK,EAAE,gBAAgB,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;AAC7K,WAAW,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,gBAAgB,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,EAAE,gBAAgB,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,CAAC;AACnL,WAAW,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,gBAAgB,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,gBAAgB,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;AAClL,WAAW,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,gBAAgB,EAAE,IAAI,EAAE,gBAAgB,CAAC,SAAS,CAAC,uBAAuB,EAAE,KAAK,EAAE,gBAAgB,CAAC,SAAS,CAAC,uBAAuB,EAAE,CAAC,CAAC;AAChN,WAAW,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,gBAAgB,CAAC,SAAS,CAAC,yBAAyB,EAAE,KAAK,EAAE,gBAAgB,CAAC,SAAS,CAAC,yBAAyB,EAAE,CAAC,CAAC;AACvM,WAAW,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,gBAAgB,CAAC,SAAS,CAAC,iBAAiB,EAAE,KAAK,EAAE,gBAAgB,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC,CAAC;AAC1L,WAAW,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,eAAe,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,gBAAgB,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,gBAAgB,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;;AC1TpL;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAY,cAGX;AAHD,WAAY,cAAc;IACxB,+CAAE,CAAA;IACF,iDAAG,CAAA;CACJ,EAHW,cAAc,KAAd,cAAc,QAGzB;AAED,SAAgB,sBAAsB,CAAC,MAAc;IACnD,IAAI,IAAI,KAAK,MAAM,EAAE;QACnB,OAAO,cAAc,CAAC,EAAE,CAAC;KAC1B;SAAM,IAAI,KAAK,KAAK,MAAM,EAAE;QAC3B,OAAO,cAAc,CAAC,GAAG,CAAC;KAC3B;SAAM;QACL,OAAO,IAAI,CAAC;KACb;CACF;;ACnCD;;;;;;;;;;;;;;;AAeA,AAYA;;;;;;AAMA,MAAa,6BAA8B,SAAQ,8BAA8B;;IAc/E;QACE,KAAK,CAAC,yBAAyB,CAAC,QAAQ,CAAC,CAAC;KAC3C;;;;;;;;IASM,aAAa;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;;;IASM,aAAa,CAAC,UAAsB;QACzC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;;;;;;;IAQM,qBAAqB;QACzB,OAAO,IAAI,CAAC,kBAAkB,CAAC;KAChC;;;;;;;IAQK,qBAAqB,CAAC,kBAA0B;QACpD,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;KAC9C;;;;;;IAOK,yBAAyB;QAC9B,OAAO,sBAAsB,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC;KAC7D;;;;;;;;;;IAWM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;;;;;IAWM,QAAQ,CAAC,KAAa;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;;;;;;;IAQM,iBAAiB;QACtB,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;;;;;;;IAQM,iBAAiB,CAAC,cAAsB;QAC7C,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;KACtC;;;;;;IAOM,qBAAqB;QAC1B,OAAO,sBAAsB,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;KACzD;;;;;;;IAQM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;;IAQM,eAAe,CAAC,YAAoB;QACzC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;;;;;;IAOM,mBAAmB;QACxB,OAAO,oBAAoB,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;KACrD;;;;;;;IAQM,mBAAmB;QACxB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;;;;;;;IAQM,mBAAmB,CAAC,gBAAwB;QACjD,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;KAC1C;;;;;;;;;IAUM,YAAY;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;;;;IAUM,YAAY,CAAC,SAAiB;QACnC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC5B;;;;;;;IAQM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;;IAQM,eAAe,CAAC,YAAkB;QACvC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;;;;;;;;;IAUM,aAAa;QAClB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;;;;;;;;;IAUM,aAAa,CAAC,aAAqB;QACxC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;KACpC;;;;;;IAOM,iBAAiB;QACtB,OAAO,qBAAqB,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;KACpD;CACF;AAED,aAAa,CAAC,6BAA6B,EAAE,UAAU,CAAC,CAAC;AACzD,kBAAkB,CAAC,6BAA6B,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,6BAA6B,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,6BAA6B,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AAC9N,WAAW,CAAC,6BAA6B,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,6BAA6B,CAAC,SAAS,CAAC,qBAAqB,EAAE,KAAK,EAAE,6BAA6B,CAAC,SAAS,CAAC,qBAAqB,EAAE,CAAC,CAAC;AACvO,WAAW,CAAC,6BAA6B,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,6BAA6B,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,6BAA6B,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;AACxN,WAAW,CAAC,6BAA6B,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,6BAA6B,CAAC,SAAS,CAAC,iBAAiB,EAAE,KAAK,EAAE,6BAA6B,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC,CAAC;AAC/O,WAAW,CAAC,6BAA6B,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,6BAA6B,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,6BAA6B,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;AACxO,WAAW,CAAC,6BAA6B,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,6BAA6B,CAAC,SAAS,CAAC,mBAAmB,EAAE,KAAK,EAAE,6BAA6B,CAAC,SAAS,CAAC,mBAAmB,EAAE,CAAC,CAAC;AACrO,WAAW,CAAC,6BAA6B,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,6BAA6B,CAAC,SAAS,CAAC,YAAY,EAAE,KAAK,EAAE,6BAA6B,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;AACpO,WAAW,CAAC,6BAA6B,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,6BAA6B,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,6BAA6B,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;AACzN,WAAW,CAAC,6BAA6B,EAAE,EAAE,IAAI,EAAE,eAAe,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,6BAA6B,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,6BAA6B,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;;ACrS3N;;;;;;;;;;;;;;;;;;;AAoBA,IAAY,yBAKX;AALD,WAAY,yBAAyB;IAEnC,yEAAI,CAAA;IAEJ,yEAAI,CAAA;CACL,EALW,yBAAyB,KAAzB,yBAAyB,QAKpC;;ACzBD;;;;;;;;;;;;;;;AAeA,AAMA;;;;;;AAMA,MAAa,kBAAkB;IAa7B;QACE,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;KACvB;;;;;;IAOM,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;IAOM,UAAU,CAAC,OAAe;QAC/B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;;;;;;IAOM,sBAAsB;QAC3B,OAAO,IAAI,CAAC,mBAAmB,CAAC;KACjC;;;;;;IAOM,sBAAsB,CAAC,mBAA2B;QACvD,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;KAChD;;;;;;IAOM,MAAM;QACX,OAAO,IAAI,CAAC,GAAG,CAAC;KACjB;;;;;;IAOM,MAAM,CAAC,GAAW;QACvB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;KAChB;;;;;;IAOM,WAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;IAOM,WAAW,CAAC,QAA6B;QAC9C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;;;;;;IAOM,cAAc;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;;;;;IAOM,cAAc,CAAC,WAAoB;QACxC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAChC;;;;;;IAOM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;IAOM,QAAQ,CAAC,KAAa;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;;;;;;;IAQM,WAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;IAOM,WAAW,CAAC,QAAgB;QACjC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;;;;;;IAOM,iBAAiB;QACtB,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;;;;;;IAOM,iBAAiB,CAAC,cAAyC;QAChE,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;KACtC;;;;;;IAOM,gCAAgC;QACrC,OAAO,IAAI,CAAC,6BAA6B,CAAC;KAC3C;;;;;;IAOM,gCAAgC,CAAC,6BAAsC;QAC5E,IAAI,CAAC,6BAA6B,GAAG,6BAA6B,CAAC;KACpE;;;;;;;IAQM,cAAc;QACnB,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;;IAQM,cAAc,CAAC,OAAe;QACnC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;CACF;AAED,aAAa,CAAE,kBAAkB,EAAE,YAAY,CAAE,CAAC;AAClD,WAAW,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,kBAAkB,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;AACxL,WAAW,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,sBAAsB,EAAE,KAAK,EAAE,kBAAkB,CAAC,SAAS,CAAC,sBAAsB,EAAE,CAAC,CAAC;AACpM,WAAW,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE,kBAAkB,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC;AACjL,WAAW,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,mBAAmB,EAAE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,kBAAkB,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AAC3M,WAAW,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,EAAE,kBAAkB,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,CAAC;AACxM,WAAW,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,kBAAkB,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC7L,WAAW,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,kBAAkB,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AAChM,WAAW,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,yBAAyB,EAAE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,iBAAiB,EAAE,KAAK,EAAE,kBAAkB,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC,CAAC;AAC/N,WAAW,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,gCAAgC,EAAE,KAAK,EAAE,kBAAkB,CAAC,SAAS,CAAC,gCAAgC,EAAE,CAAC,CAAC;AAC7O,WAAW,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,EAAE,kBAAkB,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,CAAC;;ACxN1L;;;;;;AAMA,MAAsB,6BAA6B;;;;;;IAS1C,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;;;;;;IAOM,OAAO,CAAC,IAAwB;QACrC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;IASM,UAAU;QACf,OAAO,IAAI,CAAC,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,GAAG,IAAI,CAAC;KAC1D;IAEM,sBAAsB;QAC3B,OAAO,IAAI,CAAC,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,GAAG,IAAI,CAAC;KACtE;IAEM,MAAM;QACX,OAAO,IAAI,CAAC,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC;KACtD;IAEM,WAAW;QAChB,OAAO,IAAI,CAAC,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC;KAC3D;IAEM,aAAa;QAClB,OAAO,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,GAAG,IAAI,CAAC;KACpG;IAEM,QAAQ;QACb,OAAO,IAAI,CAAC,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC;KACxD;IAEM,WAAW;QAChB,OAAO,IAAI,CAAC,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC;KAC3D;IAEM,iBAAiB;QACtB,OAAO,IAAI,CAAC,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,IAAI,CAAC;KACjE;IAEM,gCAAgC;QACrC,OAAO,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,gCAAgC,EAAE,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,gCAAgC,EAAE,GAAG,KAAK,CAAC;KACzI;CACF;AAED,kBAAkB,CAAC,6BAA6B,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,kBAAkB,EAAE,IAAI,EAAE,6BAA6B,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE,6BAA6B,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;;AC/FzM;;;;;;;;;;;;;;;AAeA,AAIA;;;;;;AAMA,MAAsB,sBAAsB;;;;;;IASnC,iCAAiC;QACtC,OAAO,IAAI,CAAC,8BAA8B,CAAC;KAC5C;;;;;;IAOM,iCAAiC,CAAC,8BAAoE;QAC3G,IAAI,CAAC,8BAA8B,GAAG,8BAA8B,CAAC;KACtE;CACF;AAED,kBAAkB,CAAC,sBAAsB,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,mBAAmB,EAAE,6BAA6B,EAAE,IAAI,EAAE,sBAAsB,CAAC,SAAS,CAAC,iCAAiC,EAAE,KAAK,EAAE,sBAAsB,CAAC,SAAS,CAAC,iCAAiC,EAAE,CAAC,CAAC;;AChD/Q;;;;;;;;;;;;;;;;;;;AAoBA,IAAY,aASX;AATD,WAAY,aAAa;IAEvB,2DAAS,CAAA;IAET,+DAAW,CAAA;IAEX,qEAAc,CAAA;IAEd,uEAAe,CAAA;CAChB,EATW,aAAa,KAAb,aAAa,QASxB;;AC7BD;;;;;;;;;;;;;;;AAeA,AAKA;;;;AAIA,MAAa,kBAAkB;;;;;;IAStB,kBAAkB;QACvB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;;;;;;IAOM,kBAAkB,CAAC,eAA8C;QACtE,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;KACxC;CACF;AAED,aAAa,CAAE,kBAAkB,EAAE,YAAY,CAAE,CAAC;AAClD,kBAAkB,CAAC,kBAAkB,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,mBAAmB,EAAE,sBAAsB,EAAE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,kBAAkB,EAAE,KAAK,EAAE,kBAAkB,CAAC,SAAS,CAAC,kBAAkB,EAAE,CAAC,CAAC;;AC3B9N;;;;;;AAMA,MAAa,UAAU;IAoBrB;QACE,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;QAClC,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC;QACxC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;KACnC;;;;;;IAOM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;IAOM,QAAQ,CAAC,KAAa;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;;;;;;IAOM,wBAAwB;QAC7B,OAAO,IAAI,CAAC,qBAAqB,CAAC;KACnC;;;;;;IAOM,wBAAwB,CAAC,qBAA6B;QAC3D,IAAI,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;KACpD;;;;;;IAOM,wBAAwB;QAC7B,OAAO,IAAI,CAAC,qBAAqB,CAAC;KACnC;;;;;;IAOM,wBAAwB,CAAC,qBAA6B;QAC3D,IAAI,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;KACpD;;;;;;IAOM,wBAAwB;QAC7B,OAAO,IAAI,CAAC,qBAAqB,CAAC;KACnC;;;;;;IAOM,wBAAwB,CAAC,qBAAoC;QAClE,IAAI,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;KACpD;;;;;;IAOM,wBAAwB;QAC7B,OAAO,IAAI,CAAC,qBAAqB,CAAC;KACnC;;;;;;IAOM,wBAAwB,CAAC,qBAA8B;QAC5D,IAAI,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;KACpD;;;;;;IAOM,8BAA8B;QACnC,OAAO,IAAI,CAAC,2BAA2B,CAAC;KACzC;;;;;;IAOM,8BAA8B,CAAC,2BAAoC;QACxE,IAAI,CAAC,2BAA2B,GAAG,2BAA2B,CAAC;KAChE;;;;;;IAOM,wBAAwB;QAC7B,OAAO,IAAI,CAAC,qBAAqB,CAAC;KACnC;;;;;;IAOM,wBAAwB,CAAC,qBAA8B;QAC5D,IAAI,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;KACpD;;;;;;IAOM,0BAA0B;QAC/B,OAAO,IAAI,CAAC,uBAAuB,CAAC;KACrC;;;;;;IAOM,0BAA0B,CAAC,uBAAgC;QAChE,IAAI,CAAC,uBAAuB,GAAG,uBAAuB,CAAC;KACxD;;;;;;IAOM,8BAA8B;QACnC,OAAO,IAAI,CAAC,2BAA2B,CAAC;KACzC;;;;;;IAOM,8BAA8B,CAAC,2BAAoC;QACxE,IAAI,CAAC,2BAA2B,GAAG,2BAA2B,CAAC;KAChE;;;;;;IAOM,+BAA+B;QACpC,OAAO,IAAI,CAAC,4BAA4B,CAAC;KAC1C;;;;;;IAOM,+BAA+B,CAAC,4BAAoC;QACzE,IAAI,CAAC,4BAA4B,GAAG,4BAA4B,CAAC;KAClE;;;;;;IAOM,+BAA+B;QACpC,OAAO,IAAI,CAAC,4BAA4B,CAAC;KAC1C;;;;;;IAOM,+BAA+B,CAAC,4BAAoC;QACzE,IAAI,CAAC,4BAA4B,GAAG,4BAA4B,CAAC;KAClE;;;;;;IAOM,oBAAoB;QACzB,OAAO,IAAI,CAAC,iBAAiB,CAAC;KAC/B;;;;;;IAOM,oBAAoB,CAAC,iBAA0B;QACpD,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;KAC5C;;;;;;IAOM,kCAAkC;QACvC,OAAO,IAAI,CAAC,+BAA+B,CAAC;KAC7C;;;;;;;IAQM,kCAAkC,CAAC,+BAAwC;QAChF,IAAI,CAAC,+BAA+B,GAAG,+BAA+B,CAAC;KACxE;;;;;;IAOM,iBAAiB;QACtB,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;;;;;;IAOM,iBAAiB,CAAC,cAAsB;QAC7C,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;KACtC;;;;;;IAOM,mBAAmB;QACxB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;;;;;;IAOM,mBAAmB,CAAC,gBAAwB;QACjD,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;KAC1C;;;;;;IAOM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;IAOM,eAAe,CAAC,YAAqB;QAC1C,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;;;;;;IAOM,qCAAqC;QAC1C,OAAO,IAAI,CAAC,kCAAkC,CAAC;KAChD;;;;;;;IAQM,qCAAqC,CAAC,kCAA2C;QACtF,IAAI,CAAC,kCAAkC,GAAG,kCAAkC,CAAC;KAC9E;CACF;AAED,aAAa,CAAE,UAAU,EAAE,YAAY,CAAE,CAAC;AAC1C,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;AACpK,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,wBAAwB,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,wBAAwB,EAAE,CAAC,CAAC;AAC7L,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,wBAAwB,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,wBAAwB,EAAE,CAAC,CAAC;AAC7L,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,wBAAwB,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,wBAAwB,EAAE,CAAC,CAAC;AACzM,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,wBAAwB,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,wBAAwB,EAAE,CAAC,CAAC;AAClM,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,8BAA8B,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,8BAA8B,EAAE,CAAC,CAAC;AAC9M,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,wBAAwB,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,wBAAwB,EAAE,CAAC,CAAC;AACjM,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,0BAA0B,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,0BAA0B,EAAE,CAAC,CAAC;AACpM,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,8BAA8B,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,8BAA8B,EAAE,CAAC,CAAC;AAClN,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,gBAAgB,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,+BAA+B,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,+BAA+B,EAAE,CAAC,CAAC;AACtM,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,gBAAgB,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,+BAA+B,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,+BAA+B,EAAE,CAAC,CAAC;AACvM,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,oBAAoB,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,oBAAoB,EAAE,CAAC,CAAC;AAChL,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,gBAAgB,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,kCAAkC,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,kCAAkC,EAAE,CAAC,CAAC;AAC9M,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,gBAAgB,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,iBAAiB,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC,CAAC;AAC3K,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,kBAAkB,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,mBAAmB,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,mBAAmB,EAAE,CAAC,CAAC;AACjL,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,kBAAkB,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;AAC1K,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,mBAAmB,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,qCAAqC,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,qCAAqC,EAAE,CAAC,CAAC;;AC3XvN;;;;;;;;;;;;;;;AAeA,AAKA;;;;;;AAMA,MAAa,cAAc;;;;;;IASlB,WAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;IAOM,WAAW,CAAC,QAA2B;QAC5C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;CACF;AAED,aAAa,CAAE,cAAc,EAAE,gBAAgB,CAAE,CAAC;AAClD,kBAAkB,CAAC,cAAc,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,mBAAmB,EAAE,UAAU,EAAE,IAAI,EAAE,cAAc,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;;AClDxL;;;;;;;;;;;;;;;AAeA,AAaA;;;;;AAMA,MAAa,eAAgB,SAAQ,eAAe;;;;;IAuB3C,iBAAiB;QACtB,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;;;;;;IAOM,iBAAiB,CAAC,cAAkC;QACzD,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;KACtC;;;;;;IAOM,iBAAiB;QACtB,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;;;;;;IAOM,iBAAiB,CAAC,cAA8B;QACrD,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;KACtC;;IAGM,sBAAsB;QAC3B,OAAO,SAAS,CAAC;KAClB;;IAGM,cAAc;QACnB,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC;KAC5B;;;;;;IAOM,YAAY;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;IAOM,YAAY,CAAC,SAAe;QACjC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC5B;;;;;;IAOM,2BAA2B;QAChC,OAAO,IAAI,CAAC,wBAAwB,CAAC;KACtC;;;;;;IAOM,2BAA2B,CAAC,wBAAgC;QACjE,IAAI,CAAC,wBAAwB,GAAG,wBAAwB,CAAC;KAC1D;;;;;;IAOM,WAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;IAOM,WAAW,CAAC,QAAgB;QACjC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;;;;;;IAOM,WAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;IAOM,WAAW,CAAC,QAAgB;QACjC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;;;;;;IAOM,WAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;IAOM,WAAW,CAAC,QAAgB;QACjC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;;;;;;IAOM,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;;;;;;IAOM,OAAO,CAAC,IAAY;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;;;;;;IAOM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;IAOM,QAAQ,CAAC,KAAa;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;;;;;;IAOM,MAAM;QACX,OAAO,IAAI,CAAC,GAAG,CAAC;KACjB;;;;;;IAOM,MAAM,CAAC,GAAW;QACvB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;KAChB;;;;;;;IAQM,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;IAOM,UAAU,CAAC,OAAe;QAC/B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;;;;;;IAOM,uBAAuB;QAC5B,OAAO,IAAI,CAAC,oBAAoB,CAAC;KAClC;;;;;;IAOM,uBAAuB,CAAC,oBAA4B;QACzD,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;KAClD;;;;;;IAOM,wBAAwB;QAC7B,OAAO,IAAI,CAAC,qBAAqB,CAAC;KACnC;;;;;;IAOM,wBAAwB,CAAC,qBAA6B;QAC3D,IAAI,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;KACpD;;;;;;IAOM,MAAM;QACX,OAAO,IAAI,CAAC,GAAG,CAAC;KACjB;;;;;;IAOM,MAAM,CAAC,GAAW;QACvB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;KAChB;;;;;;IAOM,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;IAOM,UAAU,CAAC,OAAe;QAC/B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;;;;;;IAOM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;IAOM,QAAQ,CAAC,KAAa;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;IAEM,oBAAoB,CAAC,IAAoB,EAAE,UAAkB,IAAI;QACtE,OAAO,CAAC,OAAO,KAAK,IAAI;YACtB,IAAI,CAAC,8BAA8B,CAAC,IAAI,CAAC;YACzC,IAAI,CAAC,4BAA4B,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;KACpD;IAEM,8BAA8B,CAAC,IAAoB;QACxD,IAAI,QAAQ,GAA6B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAChE,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YACvB,MAAM,IAAI,YAAY,CAAC,gCAAgC,GAAG,IAAI,CAAC,CAAC;SACjE;aACI,IAAI,QAAQ,CAAC,MAAM,IAAI,CAAC,EAAE;YAC7B,OAAO,IAAI,CAAC;SACb;aACI;YACH,OAAO,QAAQ,CAAC,CAAC,CAAC,CAAC;SACpB;KACF;;;;;;;IAQS,WAAW,CAAC,IAAoB;QACxC,IAAI,QAAQ,GAA6B,IAAI,KAAK,EAAqB,CAAC;QACxE,IAAI,IAAI,CAAC,iBAAiB,EAAE,IAAI,IAAI,IAAI,IAAI,CAAC,iBAAiB,EAAE,CAAC,kBAAkB,EAAE,IAAI,IAAI,EAAE;YAC7F,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,iBAAiB,EAAE,CAAC,kBAAkB,EAAE,EAAE;gBAC9D,IAAI,IAAI,CAAC,iCAAiC,EAAE,IAAI,IAAI,EAAE;oBACpD,KAAK,IAAI,mBAAmB,IAAI,IAAI,CAAC,iCAAiC,EAAE,EAAE;wBACxE,IAAI,mBAAmB,CAAC,iBAAiB,EAAE,IAAI,IAAI,EAAE;4BACnD,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;yBACpC;qBACF;iBACF;aACF;SACF;QACD,OAAO,QAAQ,CAAC;KACjB;IAEM,4BAA4B,CAAC,IAAoB,EAAE,OAAe;QACvE,KAAK,IAAI,OAAO,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE;YAC1C,IAAI,OAAO,IAAI,IAAI,EAAE;gBACnB,IAAI,OAAO,CAAC,UAAU,EAAE,IAAI,IAAI,EAAE;oBAChC,OAAO,OAAO,CAAC;iBAChB;aACF;iBACI,IAAI,OAAO,KAAK,OAAO,CAAC,UAAU,EAAE,EAAE;gBACzC,OAAO,OAAO,CAAC;aAChB;SACF;QAED,OAAO,IAAI,CAAC;KACb;IAEM,gBAAgB,CAAC,UAA6B;QACnD,IAAI,IAAI,CAAC,iBAAiB,EAAE,IAAI,IAAI,IAAI,IAAI,CAAC,iBAAiB,EAAE,CAAC,WAAW,EAAE,IAAI,IAAI,EAAE;YACtF,KAAK,IAAI,UAAU,IAAI,IAAI,CAAC,iBAAiB,EAAE,CAAC,WAAW,EAAE,EAAE;gBAC7D,IAAI,UAAU,CAAC,QAAQ,EAAE,IAAI,IAAI,EAAE;oBACjC,IAAI,UAAU,CAAC,QAAQ,EAAE,IAAI,IAAI,EAAE;wBACjC,OAAO,UAAU,CAAC;qBACnB;iBACF;qBACI,IAAI,UAAU,CAAC,QAAQ,EAAE,KAAK,UAAU,CAAC,QAAQ,EAAE,EAAE;oBACxD,OAAO,UAAU,CAAC;iBACnB;aACF;SACF;QACD,OAAO,IAAI,CAAC;KACb;CACF;AAED,aAAa,CAAE,eAAe,EAAE,QAAQ,CAAE,CAAC;AAC3C,kBAAkB,CAAC,eAAe,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,kBAAkB,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,iBAAiB,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC,CAAC;AACnL,kBAAkB,CAAC,eAAe,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,iBAAiB,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC,CAAC;AAChL,WAAW,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,YAAY,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;AACvK,WAAW,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,2BAA2B,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,2BAA2B,EAAE,CAAC,CAAC;AACrM,WAAW,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AACpL,WAAW,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AACpK,WAAW,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AACpK,WAAW,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;AAC3K,WAAW,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC9K,WAAW,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC;AAC/K,WAAW,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;AACrL,WAAW,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,uBAAuB,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,uBAAuB,EAAE,CAAC,CAAC;AAC/L,WAAW,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,wBAAwB,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,wBAAwB,EAAE,CAAC,CAAC;AACjM,WAAW,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC;AAC9J,WAAW,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;AACjK,WAAW,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;;ACxb/J;;;;;;;;;;;;;;;AAeA,AAMA;;;AAGA,MAAa,0BAA2B,SAAQ,iCAAkD;;;;;;IASzF,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;IAOM,UAAU,CAAC,OAAwB;QACxC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;;IAGM,iBAAiB;QACtB,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC;KAC1B;CACF;AAED,aAAa,CAAC,0BAA0B,EAAE,WAAW,CAAC,CAAC;AACvD,kBAAkB,CAAC,0BAA0B,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,0BAA0B,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,0BAA0B,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;;ACrDpN;;;;;;;;;;;;;;;AAeA,AAQA;;;;AAIA,MAAa,yBAA0B,SAAQ,kBAAkB;IAIxD,OAAO;QACZ,OAAO,cAAc,CAAC,OAAO,CAAC;KAC/B;;;;;;IAOM,kBAAkB;QACvB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;;;;;;IAOM,kBAAkB,CAAC,eAA2C;QACnE,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;KACxC;;IAGM,mBAAmB;QACxB,IAAI,QAAQ,GAA2B,IAAI,KAAK,EAAmB,CAAC;QAEpE,IAAI,IAAI,CAAC,kBAAkB,EAAE,IAAI,IAAI,EAAE;YACrC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC;SAC1C;QAED,OAAO,QAAQ,CAAC;KACjB;CACF;AAED,aAAa,CAAC,yBAAyB,EAAE,cAAc,CAAC,CAAC;AACzD,kBAAkB,CAAC,yBAAyB,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,0BAA0B,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,kBAAkB,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,kBAAkB,EAAE,CAAC,CAAC;;AClE3O;;;;;;;;;;;;;;;AAeA,AAKA;;;;;AAKA,MAAa,eAAe;;;;;;IAqBnB,mBAAmB;QACxB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;IAEM,mBAAmB,CAAC,gBAAwC;QACjE,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;KAC1C;;;;;;;;;IAUM,iBAAiB;QACtB,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;;;;;;;;;;IAWM,iBAAiB,CAAC,cAAsB;QAC7C,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;KACtC;IAEM,6BAA6B;QAClC,OAAO,IAAI,CAAC,0BAA0B,CAAC;KACxC;IAEM,6BAA6B,CAAC,0BAAmC;QACtE,IAAI,CAAC,0BAA0B,GAAG,0BAA0B,CAAC;KAC9D;;;;;IAMM,6BAA6B;QAClC,OAAO,IAAI,CAAC,0BAA0B,CAAC;KACxC;IAEM,6BAA6B,CAAC,0BAAmC;QACtE,IAAI,CAAC,0BAA0B,GAAG,0BAA0B,CAAC;KAC9D;;;;;IAMM,wBAAwB;QAC7B,OAAO,IAAI,CAAC,qBAAqB,CAAC;KACnC;IAEM,wBAAwB,CAAC,qBAA8B;QAC5D,IAAI,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;KACpD;IAEM,iCAAiC;QACtC,OAAO,IAAI,CAAC,8BAA8B,CAAC;KAC5C;IAEM,iCAAiC,CAAC,8BAAuC;QAC9E,IAAI,CAAC,8BAA8B,GAAG,8BAA8B,CAAC;KACtE;IAEM,iCAAiC;QACtC,OAAO,IAAI,CAAC,8BAA8B,CAAC;KAC5C;IAEM,iCAAiC,CAAC,8BAAuC;QAC9E,IAAI,CAAC,8BAA8B,GAAG,8BAA8B,CAAC;KACtE;IAEM,+BAA+B;QACpC,OAAO,IAAI,CAAC,4BAA4B,CAAC;KAC1C;IAEM,+BAA+B,CAAC,4BAAqC;QAC1E,IAAI,CAAC,4BAA4B,GAAG,4BAA4B,CAAC;KAClE;IAEM,4BAA4B;QACjC,OAAO,IAAI,CAAC,yBAAyB,CAAC;KACvC;IAEM,4BAA4B,CAAC,yBAAkC;QACpE,IAAI,CAAC,yBAAyB,GAAG,yBAAyB,CAAC;KAC5D;;;;;;;IAQM,cAAc;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;IAEM,cAAc,CAAC,WAAmB;QACvC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAChC;;;;;IAMM,gBAAgB;QACrB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;IAEM,gBAAgB,CAAC,aAAqB;QAC3C,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;KACpC;;;;;IAMM,mBAAmB;QACxB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;IAEM,mBAAmB,CAAC,gBAAwB;QACjD,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;KAC1C;CACF;AAED,aAAa,CAAE,eAAe,EAAE,UAAU,CAAE,CAAC;AAC7C,WAAW,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,mBAAmB,EAAE,eAAe,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,mBAAmB,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,mBAAmB,EAAE,CAAC,CAAC;AAC9N,WAAW,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,iBAAiB,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC,CAAC;AACpM,WAAW,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,6BAA6B,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,6BAA6B,EAAE,CAAC,CAAC;AAC5N,WAAW,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,6BAA6B,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,6BAA6B,EAAE,CAAC,CAAC;AAC5N,WAAW,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,wBAAwB,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,wBAAwB,EAAE,CAAC,CAAC;AACjM,WAAW,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,iCAAiC,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,iCAAiC,EAAE,CAAC,CAAC;AACxN,WAAW,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,iCAAiC,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,iCAAiC,EAAE,CAAC,CAAC;AACxN,WAAW,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,+BAA+B,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,+BAA+B,EAAE,CAAC,CAAC;AACnO,WAAW,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,4BAA4B,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,4BAA4B,EAAE,CAAC,CAAC;AAC5N,WAAW,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,CAAC;AAC7L,WAAW,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,gBAAgB,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC,CAAC;AAClM,WAAW,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,eAAe,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,mBAAmB,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,mBAAmB,EAAE,CAAC,CAAC;;AClM7M;;;;;;;;;;;;;;;AAeA,AAKA;;;;;AAKA,MAAa,gBAAgB;;;;;;IAapB,mBAAmB;QACxB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;IAEM,mBAAmB,CAAC,gBAAwC;QACjE,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;KAC1C;;;;;;;;;IAUM,iBAAiB;QACtB,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;;;;;;;;;;IAWM,iBAAiB,CAAC,cAAsB;QAC7C,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;KACtC;IAEM,cAAc;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;IAEM,cAAc,CAAC,WAAoB;QACxC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAChC;IAEM,oBAAoB;QACzB,OAAO,IAAI,CAAC,iBAAiB,CAAC;KAC/B;IAEM,oBAAoB,CAAC,iBAA0B;QACpD,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;KAC5C;IAEM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;IAEM,eAAe,CAAC,YAAoB;QACzC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;CACF;AAED,aAAa,CAAE,gBAAgB,EAAE,YAAY,CAAE,CAAC;AAChD,WAAW,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,mBAAmB,EAAE,eAAe,EAAE,IAAI,EAAE,gBAAgB,CAAC,SAAS,CAAC,mBAAmB,EAAE,KAAK,EAAE,gBAAgB,CAAC,SAAS,CAAC,mBAAmB,EAAE,CAAC,CAAC;AACjO,WAAW,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,gBAAgB,CAAC,SAAS,CAAC,iBAAiB,EAAE,KAAK,EAAE,gBAAgB,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC,CAAC;AACvM,WAAW,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,gBAAgB,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,EAAE,gBAAgB,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,CAAC;AACpM,WAAW,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,gBAAgB,CAAC,SAAS,CAAC,oBAAoB,EAAE,KAAK,EAAE,gBAAgB,CAAC,SAAS,CAAC,oBAAoB,EAAE,CAAC,CAAC;AAC/M,WAAW,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,gBAAgB,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,gBAAgB,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;;ACrGnM;;;;;;;;;;;;;;;AAeA,AAIA;;;;;AAKA,MAAa,YAAY;IAKhB,WAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IAEM,WAAW,CAAC,QAAiB;QAClC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;IAEM,YAAY;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;IAEM,YAAY,CAAC,SAAkB;QACpC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC5B;CACF;AAED,aAAa,CAAE,YAAY,EAAE,WAAW,CAAC,CAAC;AAC1C,WAAW,CAAC,YAAY,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,YAAY,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,YAAY,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AAC/K,WAAW,CAAC,YAAY,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,YAAY,CAAC,SAAS,CAAC,YAAY,EAAE,KAAK,EAAE,YAAY,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;;AChDlL;;;;;;;;;;;;;;;AAeA,AAIA;;;;;AAKA,MAAa,YAAY;IAKhB,wBAAwB;QAC7B,OAAO,IAAI,CAAC,qBAAqB,CAAC;KACnC;IAEM,wBAAwB,CAAC,qBAA8B;QAC5D,IAAI,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;KACpD;IAEM,4BAA4B;QACjC,OAAO,IAAI,CAAC,yBAAyB,CAAC;KACvC;IAEM,4BAA4B,CAAC,yBAAkC;QACpE,IAAI,CAAC,yBAAyB,GAAG,yBAAyB,CAAC;KAC5D;CACF;AAED,aAAa,CAAE,YAAY,EAAE,WAAW,CAAE,CAAC;AAC3C,WAAW,CAAC,YAAY,EAAE,EAAE,IAAI,EAAE,iBAAiB,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,YAAY,CAAC,SAAS,CAAC,wBAAwB,EAAE,KAAK,EAAE,YAAY,CAAC,SAAS,CAAC,wBAAwB,EAAE,CAAC,CAAC;AAChN,WAAW,CAAC,YAAY,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,YAAY,CAAC,SAAS,CAAC,4BAA4B,EAAE,KAAK,EAAE,YAAY,CAAC,SAAS,CAAC,4BAA4B,EAAE,CAAC,CAAC;;AChDrN;;;;;;;;;;;;;;;AAeA,AAYA;;;;;;AAMA,MAAa,uBAAwB,SAAQ,6BAA6B;IAUjE,iBAAiB;QACtB,OAAO,cAAc,CAAC,OAAO,CAAC;KAC/B;;;;;;IAOM,sBAAsB;QAC3B,OAAO,IAAI,CAAC,mBAAmB,CAAC;KACjC;;;;;;IAOM,sBAAsB,CAAC,mBAAuC;QACnE,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;KAChD;;;;;;IAOM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;IAOM,eAAe,CAAC,YAAqB;QAC1C,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;IAEM,kBAAkB;QACvB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;IAEM,kBAAkB,CAAC,eAAgC;QACxD,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;KACxC;IAEM,mBAAmB;QACxB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;IAEM,mBAAmB,CAAC,gBAAkC;QAC3D,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;KAC1C;IAEM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;IAEM,eAAe,CAAC,YAA0B;QAC/C,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;IAEM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;IAEM,eAAe,CAAC,YAA0B;QAC/C,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;CACF;AAED,aAAa,CAAE,uBAAuB,EAAE,cAAc,CAAE,CAAC;AACzD,kBAAkB,CAAC,uBAAuB,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,mBAAmB,EAAE,WAAW,EAAE,IAAI,EAAE,uBAAuB,CAAC,SAAS,CAAC,sBAAsB,EAAE,KAAK,EAAE,uBAAuB,CAAC,SAAS,CAAC,sBAAsB,EAAE,CAAC,CAAC;AAC3O,WAAW,CAAC,uBAAuB,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,uBAAuB,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,uBAAuB,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;AAC5N,kBAAkB,CAAC,uBAAuB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,uBAAuB,CAAC,SAAS,CAAC,kBAAkB,EAAE,KAAK,EAAE,uBAAuB,CAAC,SAAS,CAAC,kBAAkB,EAAE,CAAC,CAAC;AAC7N,kBAAkB,CAAC,uBAAuB,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,gBAAgB,EAAE,IAAI,EAAE,uBAAuB,CAAC,SAAS,CAAC,mBAAmB,EAAE,KAAK,EAAE,uBAAuB,CAAC,SAAS,CAAC,mBAAmB,EAAE,CAAC,CAAC;AACjO,kBAAkB,CAAC,uBAAuB,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,uBAAuB,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,uBAAuB,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;AACrO,kBAAkB,CAAC,uBAAuB,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,uBAAuB,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,uBAAuB,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;;AC1HrN;;;;;;;;;;;;;;;AAeA,AAMA;;;AAGA,MAAa,qBAAsB,SAAQ,sBAAsB;IAIxD,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;IAEM,eAAe,CAAC,YAAqC;QAC1D,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;CACF;AAED,aAAa,CAAE,qBAAqB,EAAE,YAAY,CAAE,CAAC;AACrD,kBAAkB,CAAC,qBAAqB,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,uBAAuB,EAAE,IAAI,EAAE,qBAAqB,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,qBAAqB,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;;ACtCtM;;;;;;;;;;;;;;;AAeA,AAOA;;;;;;AAMA,MAAa,uBAAwB,SAAQ,6BAA6B;IAsBjE,iBAAiB;QACtB,OAAO,cAAc,CAAC,QAAQ,CAAC;KAChC;IAEM,WAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IAEM,WAAW,CAAC,QAAgB;QACjC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;IAEM,mBAAmB;QACxB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;IAEM,mBAAmB,CAAC,gBAAwB;QACjD,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;KAC1C;IAEM,mBAAmB;QACxB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;IAEM,mBAAmB,CAAC,gBAAwB;QACjD,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;KAC1C;IAEM,2BAA2B;QAChC,OAAO,IAAI,CAAC,wBAAwB,CAAC;KACtC;IAEM,2BAA2B,CAAC,wBAAgC;QACjE,IAAI,CAAC,wBAAwB,GAAG,wBAAwB,CAAC;KAC1D;IAEM,mBAAmB;QACxB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;IAEM,mBAAmB,CAAC,gBAAwC;QACjE,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;KAC1C;IAEM,mBAAmB;QACxB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;IAEM,mBAAmB,CAAC,gBAAwB;QACjD,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;KAC1C;IAEM,cAAc;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;IAEM,cAAc,CAAC,WAAmB;QACvC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAChC;IAEM,sBAAsB;QAC3B,OAAO,IAAI,CAAC,mBAAmB,CAAC;KACjC;IAEM,sBAAsB,CAAC,mBAA2B;QACvD,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;KAChD;IAEM,qDAAqD;QAC1D,OAAO,IAAI,CAAC,kDAAkD,CAAC;KAChE;IAEM,qDAAqD,CAAC,kDAA2D;QACtH,IAAI,CAAC,kDAAkD,GAAG,kDAAkD,CAAC;KAC9G;IAEM,2BAA2B;QAChC,OAAO,IAAI,CAAC,wBAAwB,CAAC;KACtC;IAEM,2BAA2B,CAAC,wBAAiC;QAClE,IAAI,CAAC,wBAAwB,GAAG,wBAAwB,CAAC;KAC1D;IAEM,4BAA4B;QACjC,OAAO,IAAI,CAAC,yBAAyB,CAAC;KACvC;IAEM,4BAA4B,CAAC,yBAAkC;QACpE,IAAI,CAAC,yBAAyB,GAAG,yBAAyB,CAAC;KAC5D;IAEM,2BAA2B;QAChC,OAAO,IAAI,CAAC,wBAAwB,CAAC;KACtC;IAEM,2BAA2B,CAAC,wBAAiC;QAClE,IAAI,CAAC,wBAAwB,GAAG,wBAAwB,CAAC;KAC1D;IAEM,kBAAkB;QACvB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;IAEM,kBAAkB,CAAC,eAAwB;QAChD,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;KACxC;IAEM,0BAA0B;QAC/B,OAAO,IAAI,CAAC,uBAAuB,CAAC;KACrC;IAEM,0BAA0B,CAAC,uBAAgC;QAChE,IAAI,CAAC,uBAAuB,GAAG,uBAAuB,CAAC;KACxD;IAEM,oBAAoB;QACzB,OAAO,IAAI,CAAC,iBAAiB,CAAC;KAC/B;IAEM,oBAAoB,CAAC,iBAA0B;QACpD,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;KAC5C;IAEM,kBAAkB;QACvB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;IAEM,kBAAkB,CAAC,eAAwB;QAChD,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;KACxC;IAEM,gCAAgC;QACrC,OAAO,IAAI,CAAC,6BAA6B,CAAC;KAC3C;IAEM,gCAAgC,CAAC,6BAAsC;QAC5E,IAAI,CAAC,6BAA6B,GAAG,6BAA6B,CAAC;KACpE;IAEM,+BAA+B;QACpC,OAAO,IAAI,CAAC,4BAA4B,CAAC;KAC1C;IAEM,+BAA+B,CAAC,4BAAqC;QAC1E,IAAI,CAAC,4BAA4B,GAAG,4BAA4B,CAAC;KAClE;IAEM,iCAAiC;QACtC,OAAO,IAAI,CAAC,8BAA8B,CAAC;KAC5C;IAEM,iCAAiC,CAAC,8BAAuC;QAC9E,IAAI,CAAC,8BAA8B,GAAG,8BAA8B,CAAC;KACtE;CACF;AAED,aAAa,CAAE,uBAAuB,EAAE,iBAAiB,CAAE,CAAC;AAC5D,WAAW,CAAC,uBAAuB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,uBAAuB,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,uBAAuB,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AAC/M,WAAW,CAAC,uBAAuB,EAAE,EAAE,IAAI,EAAE,eAAe,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,uBAAuB,CAAC,SAAS,CAAC,mBAAmB,EAAE,KAAK,EAAE,uBAAuB,CAAC,SAAS,CAAC,mBAAmB,EAAE,CAAC,CAAC;AACpO,WAAW,CAAC,uBAAuB,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,uBAAuB,CAAC,SAAS,CAAC,mBAAmB,EAAE,KAAK,EAAE,uBAAuB,CAAC,SAAS,CAAC,mBAAmB,EAAE,CAAC,CAAC;AACnO,WAAW,CAAC,uBAAuB,EAAE,EAAE,IAAI,EAAE,mBAAmB,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,uBAAuB,CAAC,SAAS,CAAC,2BAA2B,EAAE,KAAK,EAAE,uBAAuB,CAAC,SAAS,CAAC,2BAA2B,EAAE,CAAC,CAAC;AACxP,WAAW,CAAC,uBAAuB,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,4CAA4C,IAAI,EAAE,uBAAuB,CAAC,SAAS,CAAC,mBAAmB,EAAE,KAAK,EAAE,uBAAuB,CAAC,SAAS,CAAC,mBAAmB,EAAE,CAAC,CAAC;AAC3P,WAAW,CAAC,uBAAuB,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,uBAAuB,CAAC,SAAS,CAAC,mBAAmB,EAAE,KAAK,EAAE,uBAAuB,CAAC,SAAS,CAAC,mBAAmB,EAAE,CAAC,CAAC;AAChO,WAAW,CAAC,uBAAuB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,uBAAuB,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,EAAE,uBAAuB,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,CAAC;AACrN,WAAW,CAAC,uBAAuB,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,uBAAuB,CAAC,SAAS,CAAC,sBAAsB,EAAE,KAAK,EAAE,uBAAuB,CAAC,SAAS,CAAC,sBAAsB,EAAE,CAAC,CAAC;AACxO,WAAW,CAAC,uBAAuB,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,uBAAuB,CAAC,SAAS,CAAC,qDAAqD,EAAE,KAAK,EAAE,uBAAuB,CAAC,SAAS,CAAC,qDAAqD,EAAE,CAAC,CAAC;AACtS,WAAW,CAAC,uBAAuB,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,uBAAuB,CAAC,SAAS,CAAC,2BAA2B,EAAE,KAAK,EAAE,uBAAuB,CAAC,SAAS,CAAC,2BAA2B,EAAE,CAAC,CAAC;AAClP,WAAW,CAAC,uBAAuB,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,uBAAuB,CAAC,SAAS,CAAC,4BAA4B,EAAE,KAAK,EAAE,uBAAuB,CAAC,SAAS,CAAC,4BAA4B,EAAE,CAAC,CAAC;AACpP,WAAW,CAAC,uBAAuB,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,uBAAuB,CAAC,SAAS,CAAC,2BAA2B,EAAE,KAAK,EAAE,uBAAuB,CAAC,SAAS,CAAC,2BAA2B,EAAE,CAAC,CAAC;AACrP,WAAW,CAAC,uBAAuB,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,uBAAuB,CAAC,SAAS,CAAC,kBAAkB,EAAE,KAAK,EAAE,uBAAuB,CAAC,SAAS,CAAC,kBAAkB,EAAE,CAAC,CAAC;AAClO,WAAW,CAAC,uBAAuB,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,uBAAuB,CAAC,SAAS,CAAC,0BAA0B,EAAE,KAAK,EAAE,uBAAuB,CAAC,SAAS,CAAC,0BAA0B,EAAE,CAAC,CAAC;AACjP,WAAW,CAAC,uBAAuB,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,uBAAuB,CAAC,SAAS,CAAC,oBAAoB,EAAE,KAAK,EAAE,uBAAuB,CAAC,SAAS,CAAC,oBAAoB,EAAE,CAAC,CAAC;AACrO,WAAW,CAAC,uBAAuB,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,uBAAuB,CAAC,SAAS,CAAC,kBAAkB,EAAE,KAAK,EAAE,uBAAuB,CAAC,SAAS,CAAC,kBAAkB,EAAE,CAAC,CAAC;AACjO,WAAW,CAAC,uBAAuB,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,uBAAuB,CAAC,SAAS,CAAC,gCAAgC,EAAE,KAAK,EAAE,uBAAuB,CAAC,SAAS,CAAC,gCAAgC,EAAE,CAAC,CAAC;AAC/P,WAAW,CAAC,uBAAuB,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,uBAAuB,CAAC,SAAS,CAAC,+BAA+B,EAAE,KAAK,EAAE,uBAAuB,CAAC,SAAS,CAAC,+BAA+B,EAAE,CAAC,CAAC;AAC5P,WAAW,CAAC,uBAAuB,EAAE,EAAE,IAAI,EAAE,gBAAgB,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,uBAAuB,CAAC,SAAS,CAAC,iCAAiC,EAAE,KAAK,EAAE,uBAAuB,CAAC,SAAS,CAAC,iCAAiC,EAAE,CAAC,CAAC;;AClOnP;;;;;;;;;;;;;;;AAeA,AAMA;;;AAGA,MAAa,qBAAsB,SAAQ,sBAAsB;IAIxD,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;IAEM,eAAe,CAAC,YAAqC;QAC1D,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;CACF;AAED,aAAa,CAAE,qBAAqB,EAAE,eAAe,CAAE,CAAC;AACxD,kBAAkB,CAAC,qBAAqB,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,uBAAuB,EAAE,IAAI,EAAE,qBAAqB,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,qBAAqB,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;;ACtCtM;;;;;;;;;;;;;;;AAeA,AAQA;;;;;;AAMA,MAAa,0BAA2B,SAAQ,6BAA6B;IAKpE,iBAAiB;QACtB,OAAO,cAAc,CAAC,UAAU,CAAC;KAClC;;;;;IAMM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;IAEM,eAAe,CAAC,YAAqB;QAC1C,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;;;;;IAMM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;IAEM,eAAe,CAAC,YAA0B;QAC/C,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;CACF;AAED,aAAa,CAAE,0BAA0B,EAAE,oBAAoB,CAAE,CAAC;AAClE,WAAW,CAAC,0BAA0B,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,0BAA0B,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,0BAA0B,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;AACrO,kBAAkB,CAAC,0BAA0B,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,0BAA0B,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,0BAA0B,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;;ACjE9N;;;;;;;;;;;;;;;AAeA,AAMA;;;AAGA,MAAa,wBAAyB,SAAQ,sBAAsB;IAI3D,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;IAEM,eAAe,CAAC,YAAwC;QAC7D,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;CACF;AAED,aAAa,CAAE,wBAAwB,EAAE,kBAAkB,CAAE,CAAC;AAC9D,kBAAkB,CAAC,wBAAwB,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,0BAA0B,EAAE,IAAI,EAAE,wBAAwB,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,wBAAwB,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;;ACtClN;;;;;;;;;;;;;;;AAeA,AAMA;;;;;;AAMA,MAAa,qBAAsB,SAAQ,6BAA6B;IAK/D,iBAAiB;QACtB,OAAO,cAAc,CAAC,KAAK,CAAC;KAC7B;;;;;;IAOM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;IAEM,eAAe,CAAC,YAAqB;QAC1C,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;;;;;IAMM,mBAAmB;QACxB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;IAEM,mBAAmB,CAAC,gBAAyB;QAClD,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;KAC1C;CAEF;AAED,aAAa,CAAE,qBAAqB,EAAE,eAAe,CAAE,CAAC;AACxD,WAAW,CAAC,qBAAqB,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,qBAAqB,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,qBAAqB,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;AACjN,WAAW,CAAC,qBAAqB,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,qBAAqB,CAAC,SAAS,CAAC,mBAAmB,EAAE,KAAK,EAAE,qBAAqB,CAAC,SAAS,CAAC,mBAAmB,EAAE,CAAC,CAAC;;ACjE5N;;;;;;;;;;;;;;;AAeA,AAMA;;;AAGA,MAAa,mBAAoB,SAAQ,sBAAsB;IAItD,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;IAEM,eAAe,CAAC,YAAmC;QACxD,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;CACF;AAED,aAAa,CAAE,mBAAmB,EAAE,aAAa,CAAE,CAAC;AACpD,kBAAkB,CAAC,mBAAmB,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,qBAAqB,EAAE,IAAI,EAAE,mBAAmB,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,mBAAmB,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;;ACtC9L;;;;;;;;;;;;;;;AAeA,AAQA;;;;;;AAMA,MAAa,iCAAkC,SAAQ,6BAA6B;IAQ3E,iBAAiB;QACtB,OAAO,cAAc,CAAC,kBAAkB,CAAC;KAC1C;IAEM,kBAAkB;QACvB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;IAEM,kBAAkB,CAAC,eAAgC;QACxD,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;KACxC;IAEM,kBAAkB;QACvB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;IAEM,kBAAkB,CAAC,eAAwB;QAChD,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;KACxC;IAEM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;IAEM,eAAe,CAAC,YAAoB;QACzC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;IAEM,+BAA+B;QACpC,OAAO,IAAI,CAAC,4BAA4B,CAAC;KAC1C;IAEM,+BAA+B,CAAC,4BAAoC;QACzE,IAAI,CAAC,4BAA4B,GAAG,4BAA4B,CAAC;KAClE;IAEM,oCAAoC;QACzC,OAAO,IAAI,CAAC,iCAAiC,CAAC;KAC/C;IAEM,oCAAoC,CAAC,iCAAyC;QACnF,IAAI,CAAC,iCAAiC,GAAG,iCAAiC,CAAC;KAC5E;CACF;AAED,aAAa,CAAE,iCAAiC,EAAE,mBAAmB,CAAE,CAAC;AACxE,kBAAkB,CAAC,iCAAiC,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,iCAAiC,CAAC,SAAS,CAAC,kBAAkB,EAAE,KAAK,EAAE,iCAAiC,CAAC,SAAS,CAAC,kBAAkB,EAAE,CAAC,CAAC;AAC3Q,WAAW,CAAC,iCAAiC,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,iCAAiC,CAAC,SAAS,CAAC,kBAAkB,EAAE,KAAK,EAAE,iCAAiC,CAAC,SAAS,CAAC,kBAAkB,EAAE,CAAC,CAAC;AAC9P,WAAW,CAAC,iCAAiC,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,iCAAiC,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,iCAAiC,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;AACtP,WAAW,CAAC,iCAAiC,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,iCAAiC,CAAC,SAAS,CAAC,+BAA+B,EAAE,KAAK,EAAE,iCAAiC,CAAC,SAAS,CAAC,+BAA+B,EAAE,CAAC,CAAC;AACvR,WAAW,CAAC,iCAAiC,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,iCAAiC,CAAC,SAAS,CAAC,oCAAoC,EAAE,KAAK,EAAE,iCAAiC,CAAC,SAAS,CAAC,oCAAoC,EAAE,CAAC,CAAC;;ACvFlS;;;;;;;;;;;;;;;AAeA,AAMA;;;AAGA,MAAa,+BAAgC,SAAQ,sBAAsB;IAIlE,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;IAEM,eAAe,CAAC,YAA+C;QACpE,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;CACF;AAED,aAAa,CAAE,+BAA+B,EAAE,iBAAiB,CAAE,CAAC;AACpE,kBAAkB,CAAC,+BAA+B,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,iCAAiC,EAAE,IAAI,EAAE,+BAA+B,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,+BAA+B,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;;ACtC9O;;;;;;;;;;;;;;;AAeA,AAMA;;;;;;AAMA,MAAa,0BAA2B,SAAQ,6BAA6B;IAUpE,iBAAiB;QACtB,OAAO,cAAc,CAAC,UAAU,CAAC;KAClC;IAEM,6BAA6B;QAClC,OAAO,IAAI,CAAC,0BAA0B,CAAC;KACxC;IAEM,6BAA6B,CAAC,0BAAmC;QACtE,IAAI,CAAC,0BAA0B,GAAG,0BAA0B,CAAC;KAC9D;IAEM,6BAA6B;QAClC,OAAO,IAAI,CAAC,0BAA0B,CAAC;KACxC;IAEM,6BAA6B,CAAC,0BAAmC;QACtE,IAAI,CAAC,0BAA0B,GAAG,0BAA0B,CAAC;KAC9D;IAEM,4BAA4B;QACjC,OAAO,IAAI,CAAC,yBAAyB,CAAC;KACvC;IAEM,4BAA4B,CAAC,yBAAkC;QACpE,IAAI,CAAC,yBAAyB,GAAG,yBAAyB,CAAC;KAC5D;IAEM,0BAA0B;QAC/B,OAAO,IAAI,CAAC,uBAAuB,CAAC;KACrC;IAEM,0BAA0B,CAAC,uBAAgC;QAChE,IAAI,CAAC,uBAAuB,GAAG,uBAAuB,CAAC;KACxD;IAEM,gBAAgB;QACrB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;IAEM,gBAAgB,CAAC,aAAsB;QAC5C,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;KACpC;IAEM,0BAA0B;QAC/B,OAAO,IAAI,CAAC,uBAAuB,CAAC;KACrC;IAEM,0BAA0B,CAAC,uBAAgC;QAChE,IAAI,CAAC,uBAAuB,GAAG,uBAAuB,CAAC;KACxD;IAEM,4BAA4B;QACjC,OAAO,IAAI,CAAC,yBAAyB,CAAC;KACvC;IAEM,4BAA4B,CAAC,yBAAkC;QACpE,IAAI,CAAC,yBAAyB,GAAG,yBAAyB,CAAC;KAC5D;CACF;AAED,aAAa,CAAE,0BAA0B,EAAE,iBAAiB,CAAE,CAAC;AAC/D,WAAW,CAAC,0BAA0B,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAC,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,0BAA0B,CAAC,SAAS,CAAC,6BAA6B,EAAE,KAAK,EAAE,0BAA0B,CAAC,SAAS,CAAC,6BAA6B,EAAE,CAAC,CAAC;AAC5P,WAAW,CAAC,0BAA0B,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAC,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,0BAA0B,CAAC,SAAS,CAAC,6BAA6B,EAAE,KAAK,EAAE,0BAA0B,CAAC,SAAS,CAAC,6BAA6B,EAAE,CAAC,CAAC;AAC1P,WAAW,CAAC,0BAA0B,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAC,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,0BAA0B,CAAC,SAAS,CAAC,4BAA4B,EAAE,KAAK,EAAE,0BAA0B,CAAC,SAAS,CAAC,4BAA4B,EAAE,CAAC,CAAC;AACzP,WAAW,CAAC,0BAA0B,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAC,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,0BAA0B,CAAC,SAAS,CAAC,0BAA0B,EAAE,KAAK,EAAE,0BAA0B,CAAC,SAAS,CAAC,0BAA0B,EAAE,CAAC,CAAC;AACrP,WAAW,CAAC,0BAA0B,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAC,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,0BAA0B,CAAC,SAAS,CAAC,gBAAgB,EAAE,KAAK,EAAE,0BAA0B,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC,CAAC;AAClO,WAAW,CAAC,0BAA0B,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,0BAA0B,CAAC,SAAS,CAAC,0BAA0B,EAAE,KAAK,EAAE,0BAA0B,CAAC,SAAS,CAAC,0BAA0B,EAAE,CAAC,CAAC;AAC1O,WAAW,CAAC,0BAA0B,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,0BAA0B,CAAC,SAAS,CAAC,4BAA4B,EAAE,KAAK,EAAE,0BAA0B,CAAC,SAAS,CAAC,4BAA4B,EAAE,CAAC,CAAC;;ACzG/O;;;;;;;;;;;;;;;AAeA,AAMA;;;AAGA,MAAa,wBAAyB,SAAQ,sBAAsB;IAI3D,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;IAEM,eAAe,CAAC,YAAwC;QAC7D,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;CACF;AAED,aAAa,CAAE,wBAAwB,EAAE,eAAe,CAAE,CAAC;AAC3D,kBAAkB,CAAC,wBAAwB,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,0BAA0B,EAAE,IAAI,EAAE,wBAAwB,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,wBAAwB,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;;ACtClN;;;;;;;;;;;;;;;AAeA,AAKA;;;AAGA,MAAa,uBAAwB,SAAQ,6BAA6B;IACjE,iBAAiB;QACtB,OAAO,cAAc,CAAC,OAAO,CAAC;KAC/B;CACF;AAED,aAAa,CAAE,uBAAuB,EAAE,cAAc,CAAE,CAAC;;AC7BzD;;;;;;;;;;;;;;;AAeA,AAMA;;;AAGA,MAAa,qBAAsB,SAAQ,sBAAsB;IAIxD,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;IAEM,eAAe,CAAC,YAAqC;QAC1D,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;CACF;AAED,aAAa,CAAE,qBAAqB,EAAE,YAAY,CAAE,CAAC;AACrD,kBAAkB,CAAC,qBAAqB,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,uBAAuB,EAAE,IAAI,EAAE,qBAAqB,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,qBAAqB,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;;ACtCtM;;;;;;;;;;;;;;;AAeA,AAMA;;;;;;AAMA,MAAa,4BAA6B,SAAQ,6BAA6B;IAItE,iBAAiB;QACtB,OAAO,cAAc,CAAC,mBAAmB,CAAC;KAC3C;IAEM,+BAA+B;QACpC,OAAO,IAAI,CAAC,4BAA4B,CAAC;KAC1C;IAEM,+BAA+B,CAAC,4BAAqC;QAC1E,IAAI,CAAC,4BAA4B,GAAG,4BAA4B,CAAC;KAClE;CACF;AAED,aAAa,CAAE,4BAA4B,EAAE,iBAAiB,CAAE,CAAC;AACjE,WAAW,CAAC,4BAA4B,EAAE,EAAE,IAAI,EAAE,eAAe,EAAE,QAAQ,EAAC,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,4BAA4B,CAAC,SAAS,CAAC,+BAA+B,EAAE,KAAK,EAAE,4BAA4B,CAAC,SAAS,CAAC,+BAA+B,EAAE,CAAC,CAAC;;AC7C3Q;;;;;;;;;;;;;;;AAeA,AAMA;;;AAGA,MAAa,0BAA2B,SAAQ,sBAAsB;IAI7D,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;IAEM,eAAe,CAAC,YAA0C;QAC/D,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;CACF;AAED,aAAa,CAAE,0BAA0B,EAAE,eAAe,CAAE,CAAC;AAC7D,kBAAkB,CAAC,0BAA0B,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,4BAA4B,EAAE,IAAI,EAAE,0BAA0B,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,0BAA0B,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;;ACtC1N;;;;;;;;;;;;;;;AAeA,AAKA;;;AAGA,MAAa,sBAAuB,SAAQ,6BAA6B;IAEhE,iBAAiB;QACtB,OAAO,cAAc,CAAC,MAAM,CAAC;KAC9B;CACF;AAED,aAAa,CAAE,sBAAsB,EAAE,gBAAgB,CAAE,CAAC;;AC9B1D;;;;;;;;;;;;;;;AAeA,AAMA;;;AAGA,MAAa,oBAAqB,SAAQ,sBAAsB;IAGvD,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;IAEM,eAAe,CAAC,YAAoC;QACzD,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;CAEF;AAED,aAAa,CAAE,oBAAoB,EAAE,cAAc,CAAE,CAAC;AACtD,kBAAkB,CAAC,oBAAoB,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,sBAAsB,EAAE,IAAI,EAAE,oBAAoB,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,oBAAoB,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;;ACtClM;;;;;;;;;;;;;;;AAeA,AAIA;;;;;AAKA,MAAa,gBAAgB;;;;;IAQpB,kBAAkB;QACvB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;IAEM,kBAAkB,CAAC,eAAwB;QAChD,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;KACxC;CAEF;AAED,aAAa,CAAE,gBAAgB,EAAE,cAAc,CAAE,CAAC;AAClD,WAAW,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,gBAAgB,CAAC,SAAS,CAAC,kBAAkB,EAAE,KAAK,EAAE,gBAAgB,CAAC,SAAS,CAAC,kBAAkB,EAAE,CAAC,CAAC;;AC3C5M;;;;;;;;;;;;;;;AAeA,AAIA;;;;;AAKA,MAAa,aAAa;;;;;IAQjB,MAAM;QACX,OAAO,IAAI,CAAC,GAAG,CAAC;KACjB;IAEM,MAAM,CAAC,GAAW;QACvB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;KAChB;CAEF;AAED,aAAa,CAAE,aAAa,EAAE,WAAW,CAAE,CAAC;AAC5C,WAAW,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,aAAa,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE,aAAa,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC;;AC3CjK;;;;;;;;;;;;;;;AAeA,AAIA;;;;;AAKA,MAAa,eAAe;;;;;IAQnB,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IAEM,UAAU,CAAC,OAAe;QAC/B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;CACF;AAED,aAAa,CAAE,eAAe,EAAE,aAAa,CAAE,CAAC;AAChD,WAAW,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;;AC1CnL;;;;;;;;;;;;;;;AAeA,AAUA;;;;;;;;;;AAUA,MAAa,sBAAuB,SAAQ,6BAA6B;IAShE,iBAAiB;QACtB,OAAO,cAAc,CAAC,MAAM,CAAC;KAC9B;IAEM,mBAAmB;QACxB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;IAEM,mBAAmB,CAAC,gBAAkC;QAC3D,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;KAC1C;IAEM,gBAAgB;QACrB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;IAEM,gBAAgB,CAAC,aAA4B;QAClD,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;KACpC;IAEM,kBAAkB;QACvB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;IAEM,kBAAkB,CAAC,eAAgC;QACxD,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;KACxC;;;;;IAMM,gCAAgC;QACrC,OAAO,IAAI,CAAC,6BAA6B,CAAC;KAC3C;IAEM,gCAAgC,CAAC,6BAAsC;QAC5E,IAAI,CAAC,6BAA6B,GAAG,6BAA6B,CAAC;KACpE;;;;;;IAOM,4BAA4B;QACjC,OAAO,IAAI,CAAC,yBAAyB,CAAC;KACvC;IAEM,4BAA4B,CAAC,yBAAkC;QACpE,IAAI,CAAC,yBAAyB,GAAG,yBAAyB,CAAC;KAC5D;;;;;;;IAQM,0CAA0C;QAC/C,OAAO,IAAI,CAAC,uCAAuC,CAAC;KACrD;IAEM,0CAA0C,CAAC,uCAAgD;QAChG,IAAI,CAAC,uCAAuC,GAAG,uCAAuC,CAAC;KACxF;CACF;AAED,aAAa,CAAE,sBAAsB,EAAE,gBAAgB,CAAE,CAAC;AAC1D,kBAAkB,CAAC,sBAAsB,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,gBAAgB,EAAE,IAAI,EAAE,sBAAsB,CAAC,SAAS,CAAC,mBAAmB,EAAE,KAAK,EAAE,sBAAsB,CAAC,SAAS,CAAC,mBAAmB,EAAE,CAAC,CAAC;AACjO,kBAAkB,CAAC,sBAAsB,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,sBAAsB,CAAC,SAAS,CAAC,gBAAgB,EAAE,KAAK,EAAE,sBAAsB,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC,CAAC;AACrN,kBAAkB,CAAC,sBAAsB,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,sBAAsB,CAAC,SAAS,CAAC,kBAAkB,EAAE,KAAK,EAAE,sBAAsB,CAAC,SAAS,CAAC,kBAAkB,EAAE,CAAC,CAAC;AAC7N,WAAW,CAAC,sBAAsB,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,sBAAsB,CAAC,SAAS,CAAC,gCAAgC,EAAE,KAAK,EAAE,sBAAsB,CAAC,SAAS,CAAC,gCAAgC,EAAE,CAAC,CAAC;AAC1P,WAAW,CAAC,sBAAsB,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,sBAAsB,CAAC,SAAS,CAAC,4BAA4B,EAAE,KAAK,EAAE,sBAAsB,CAAC,SAAS,CAAC,4BAA4B,EAAE,CAAC,CAAC;AACjP,WAAW,CAAC,sBAAsB,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,sBAAsB,CAAC,SAAS,CAAC,0CAA0C,EAAE,KAAK,EAAE,sBAAsB,CAAC,SAAS,CAAC,0CAA0C,EAAE,CAAC,CAAC;;ACtH/Q;;;;;;;;;;;;;;;AAeA,AAMA;;;AAGA,MAAa,oBAAqB,SAAQ,sBAAsB;IAIvD,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;IAEM,eAAe,CAAC,YAAoC;QACzD,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;CACF;AAED,aAAa,CAAE,oBAAoB,EAAE,cAAc,CAAE,CAAC;AACtD,kBAAkB,CAAC,oBAAoB,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,sBAAsB,EAAE,IAAI,EAAE,oBAAoB,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,oBAAoB,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;;ACtClM;;;;;;;;;;;;;;;AAeA,AAOA;;;;;;AAMA,MAAa,4BAA6B,SAAQ,6BAA6B;IAQtE,iBAAiB;QACtB,OAAO,cAAc,CAAC,aAAa,CAAC;KACrC;IAEM,mBAAmB;QACxB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;IAEM,mBAAmB,CAAC,gBAAwC;QACjE,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;KAC1C;IAEM,iBAAiB;QACtB,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;IAEM,iBAAiB,CAAC,cAAsB;QAC7C,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;KACtC;IAEM,6BAA6B;QAClC,OAAO,IAAI,CAAC,0BAA0B,CAAC;KACxC;IAEM,6BAA6B,CAAC,0BAAmC;QACtE,IAAI,CAAC,0BAA0B,GAAG,0BAA0B,CAAC;KAC9D;IAEM,0BAA0B;QAC/B,OAAO,IAAI,CAAC,uBAAuB,CAAC;KACrC;IAEM,0BAA0B,CAAC,uBAA+B;QAC/D,IAAI,CAAC,uBAAuB,GAAG,uBAAuB,CAAC;KACxD;IAEM,+BAA+B;QACpC,OAAO,IAAI,CAAC,4BAA4B,CAAC;KAC1C;IAEM,+BAA+B,CAAC,4BAAoC;QACzE,IAAI,CAAC,4BAA4B,GAAG,4BAA4B,CAAC;KAClE;CACF;AAED,aAAa,CAAE,4BAA4B,EAAE,kBAAkB,CAAE,CAAC;AAClE,WAAW,CAAC,4BAA4B,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,mBAAmB,EAAE,eAAe,EAAE,IAAI,EAAE,4BAA4B,CAAC,SAAS,CAAC,mBAAmB,EAAE,KAAK,EAAE,4BAA4B,CAAC,SAAS,CAAC,mBAAmB,EAAE,CAAC,CAAC;AACtQ,WAAW,CAAC,4BAA4B,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,4BAA4B,CAAC,SAAS,CAAC,iBAAiB,EAAE,KAAK,EAAE,4BAA4B,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC,CAAC;AAC3O,WAAW,CAAC,4BAA4B,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,4BAA4B,CAAC,SAAS,CAAC,6BAA6B,EAAE,KAAK,EAAE,4BAA4B,CAAC,SAAS,CAAC,6BAA6B,EAAE,CAAC,CAAC;AACnQ,WAAW,CAAC,4BAA4B,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,4BAA4B,CAAC,SAAS,CAAC,0BAA0B,EAAE,KAAK,EAAE,4BAA4B,CAAC,SAAS,CAAC,0BAA0B,EAAE,CAAC,CAAC;AAC9P,WAAW,CAAC,4BAA4B,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,4BAA4B,CAAC,SAAS,CAAC,+BAA+B,EAAE,KAAK,EAAE,4BAA4B,CAAC,SAAS,CAAC,+BAA+B,EAAE,CAAC,CAAC;;ACtFzQ;;;;;;;;;;;;;;;AAeA,AAMA;;;AAGA,MAAa,0BAA2B,SAAQ,sBAAsB;IAI7D,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;IAEM,eAAe,CAAC,YAA0C;QAC/D,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;CACF;AAED,aAAa,CAAE,0BAA0B,EAAE,gBAAgB,CAAE,CAAC;AAC9D,kBAAkB,CAAC,0BAA0B,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,4BAA4B,EAAE,IAAI,EAAE,0BAA0B,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,0BAA0B,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;;ACtC1N;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAY,UAoCX;AApCD,WAAY,UAAU;;;;IAIpB,6DAAa,CAAA;;;;IAKb,qDAAS,CAAA;;;;IAKT,yDAAW,CAAA;;;;IAKX,yDAAW,CAAA;;;;IAKX,uDAAU,CAAA;;;;;IAMV,2DAAY,CAAA;;;;IAKZ,6CAAK,CAAA;CACN,EApCW,UAAU,KAAV,UAAU,QAoCrB;AAED,SAAgB,kBAAkB,CAAC,MAAc;IAC/C,IAAI,cAAc,KAAK,MAAM,EAAE;QAC7B,OAAO,UAAU,CAAC,aAAa,CAAC;KACjC;SAAM,IAAI,UAAU,KAAK,MAAM,EAAE;QAChC,OAAO,UAAU,CAAC,SAAS,CAAC;KAC7B;SAAM,IAAI,YAAY,KAAK,MAAM,EAAE;QAClC,OAAO,UAAU,CAAC,WAAW,CAAC;KAC/B;SAAM,IAAI,YAAY,KAAK,MAAM,EAAE;QAClC,OAAO,UAAU,CAAC,WAAW,CAAC;KAC/B;SAAM,IAAI,WAAW,KAAK,MAAM,EAAE;QACjC,OAAO,UAAU,CAAC,UAAU,CAAC;KAC9B;SAAM,IAAI,aAAa,KAAK,MAAM,EAAE;QACnC,OAAO,UAAU,CAAC,YAAY,CAAC;KAChC;SAAM,IAAI,OAAO,KAAK,MAAM,EAAE;QAC7B,OAAO,UAAU,CAAC,KAAK,CAAC;KACzB;SAAM;QACL,OAAO,IAAI,CAAC;KACb;CACF;;AC9ED;;;;;;;;;;;;;;;AAeA,AAMA;;;;;;AAMA,MAAa,YAAY;;;;;;;IAiBhB,aAAa;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;;IAQM,aAAa,CAAC,UAAsB;QACzC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;;;;;;IAOM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;IAOM,eAAe,CAAC,YAAoB;QACzC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;;;;;;IAOM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;IAOM,eAAe,CAAC,YAAoB;QACzC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;;;;;;IAOM,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;;;;;;IAOM,OAAO,CAAC,IAAY;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;;;;;;IAOM,SAAS;QACd,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;;;;;IAOM,SAAS,CAAC,MAAc;QAC7B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;;;;IAUM,YAAY;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;;;;IAUM,YAAY,CAAC,SAAiB;QACnC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC5B;;;;;;IAOM,oBAAoB;QACzB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;;;;;;IAOM,oBAAoB,CAAC,eAAqB;QAC/C,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;KACxC;;;;;;;IAQM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;;IAQM,eAAe,CAAC,YAAoB;QACzC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;;;;;;;IAQM,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;;;;;;;IAQM,OAAO,CAAC,IAAY;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;CACF;AAED,aAAa,CAAE,YAAY,EAAE,SAAS,CAAE,CAAC;AACzC,kBAAkB,CAAC,YAAY,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,YAAY,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,YAAY,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AAC3K,WAAW,CAAC,YAAY,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,YAAY,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,YAAY,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;AACrL,WAAW,CAAC,YAAY,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,YAAY,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,YAAY,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;AACpK,WAAW,CAAC,YAAY,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,YAAY,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE,YAAY,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;AAClJ,WAAW,CAAC,YAAY,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,YAAY,CAAC,SAAS,CAAC,SAAS,EAAE,KAAK,EAAE,YAAY,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,CAAC;AACxJ,WAAW,CAAC,YAAY,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,YAAY,CAAC,SAAS,CAAC,YAAY,EAAE,KAAK,EAAE,YAAY,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;AACjK,WAAW,CAAC,YAAY,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,YAAY,CAAC,SAAS,CAAC,oBAAoB,EAAE,KAAK,EAAE,YAAY,CAAC,SAAS,CAAC,oBAAoB,EAAE,CAAC,CAAC;AAC5K,WAAW,CAAC,YAAY,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,YAAY,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,YAAY,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;AACtK,WAAW,CAAC,YAAY,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,YAAY,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE,YAAY,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;;AC9NlJ;;;;;;;;;;;;;;;AAeA,AAKA;;;;;;;;;;AAUA,MAAa,gBAAgB;;;;;;IAQpB,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;IAOM,eAAe,CAAC,YAA0B;QAC/C,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;;;;;;;IAQM,aAAa;QAClB,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC,aAAa,EAAE,CAAC;KAC/C;;;;;;IAOM,eAAe;QACpB,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC,eAAe,EAAE,CAAC;KACjD;;;;;;IAOM,eAAe;QACpB,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC,eAAe,EAAE,CAAC;KACjD;;;;;;IAOM,OAAO;QACZ,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC,OAAO,EAAE,CAAC;KACzC;;;;;;IAOM,SAAS;QACd,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC,SAAS,EAAE,CAAC;KAC3C;;;;;;;;;IAUM,YAAY;QACjB,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC,YAAY,EAAE,CAAC;KAC9C;;;;;;IAOM,oBAAoB;QACzB,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC,oBAAoB,EAAE,CAAC;KACtD;;;;;;;IAQM,eAAe;QACpB,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC,eAAe,EAAE,CAAC;KACjD;;;;;;;IAQM,OAAO;QACZ,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC,OAAO,EAAE,CAAC;KACzC;CACF;AAED,kBAAkB,CAAC,gBAAgB,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,gBAAgB,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,gBAAgB,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;;AC3I7L;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAY,QAKX;AALD,WAAY,QAAQ;IAClB,uCAAI,CAAA;IACJ,qCAAG,CAAA;IACH,6CAAO,CAAA;IACP,+CAAQ,CAAA;CACT,EALW,QAAQ,KAAR,QAAQ,QAKnB;AAED,SAAgB,gBAAgB,CAAC,MAAc;IAC7C,IAAI,MAAM,KAAK,MAAM,EAAE;QACrB,OAAO,QAAQ,CAAC,IAAI,CAAC;KACtB;SAAM,IAAI,KAAK,KAAK,MAAM,EAAE;QAC3B,OAAO,QAAQ,CAAC,GAAG,CAAC;KACrB;SAAM,IAAI,SAAS,KAAK,MAAM,EAAE;QAC/B,OAAO,QAAQ,CAAC,OAAO,CAAC;KACzB;SAAM,IAAI,UAAU,KAAK,MAAM,EAAE;QAChC,OAAO,QAAQ,CAAC,QAAQ,CAAC;KAC1B;SAAM;QACL,OAAO,IAAI,CAAC;KACb;CACF;;ACzCD;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAY,eAMX;AAND,WAAY,eAAe;IACzB,2DAAO,CAAA;IACP,+DAAS,CAAA;IACT,iEAAU,CAAA;IACV,yDAAM,CAAA;IACN,uDAAK,CAAA;CACN,EANW,eAAe,KAAf,eAAe,QAM1B;AAED,SAAgB,uBAAuB,CAAC,MAAc;IACpD,IAAI,SAAS,KAAK,MAAM,EAAE;QACxB,OAAO,eAAe,CAAC,OAAO,CAAC;KAChC;SAAM,IAAI,WAAW,KAAK,MAAM,EAAE;QACjC,OAAO,eAAe,CAAC,SAAS,CAAC;KAClC;SAAM,IAAI,YAAY,KAAK,MAAM,EAAE;QAClC,OAAO,eAAe,CAAC,UAAU,CAAC;KACnC;SAAM,IAAI,QAAQ,KAAK,MAAM,EAAE;QAC9B,OAAO,eAAe,CAAC,MAAM,CAAC;KAC/B;SAAM,IAAI,OAAO,KAAK,MAAM,EAAE;QAC7B,OAAO,eAAe,CAAC,KAAK,CAAC;KAC9B;SAAM;QACL,OAAO,IAAI,CAAC;KACb;CACF;;AC5CD;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAY,SAKX;AALD,WAAY,SAAS;IACnB,iDAAQ,CAAA;IACR,mDAAS,CAAA;IACT,mDAAS,CAAA;IACT,2CAAK,CAAA;CACN,EALW,SAAS,KAAT,SAAS,QAKpB;AAED,SAAgB,iBAAiB,CAAC,MAAc;IAC9C,IAAI,UAAU,KAAK,MAAM,EAAE;QACzB,OAAO,SAAS,CAAC,QAAQ,CAAC;KAC3B;SAAM,IAAI,WAAW,KAAK,MAAM,EAAE;QACjC,OAAO,SAAS,CAAC,SAAS,CAAC;KAC5B;SAAM,IAAI,WAAW,KAAK,MAAM,EAAE;QACjC,OAAO,SAAS,CAAC,SAAS,CAAC;KAC5B;SAAM,IAAI,OAAO,KAAK,MAAM,EAAE;QAC7B,OAAO,SAAS,CAAC,KAAK,CAAC;KACxB;SAAM;QACL,OAAO,IAAI,CAAC;KACb;CACF;;ACzCD;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAY,QAGX;AAHD,WAAY,QAAQ;IAClB,2CAAM,CAAA;IACN,uCAAI,CAAA;CACL,EAHW,QAAQ,KAAR,QAAQ,QAGnB;AAED,SAAgB,gBAAgB,CAAC,MAAc;IAC7C,IAAI,QAAQ,KAAK,MAAM,EAAE;QACvB,OAAO,QAAQ,CAAC,MAAM,CAAC;KACxB;SAAM,IAAI,MAAM,KAAK,MAAM,EAAE;QAC5B,OAAO,QAAQ,CAAC,IAAI,CAAC;KACtB;SAAM;QACL,OAAO,IAAI,CAAC;KACb;CACF;;ACnCD;;;;;;;;;;;;;;;AAeA,AAUA;;;;;;AAMA,MAAa,gBAAiB,SAAQ,gBAAgB;;;;;;IAsB7C,WAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;IAOM,WAAW,CAAC,QAAgB;QACjC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;;;;;;;IAQM,WAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;;IAQM,WAAW,CAAC,QAAgB;QACjC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;;;;;;IAOM,eAAe;QACpB,OAAO,gBAAgB,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;KAC7C;;;;;;;IAQM,YAAY;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;;IAQM,YAAY,CAAC,SAAiB;QACnC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC5B;;;;;;IAOM,gBAAgB;QACrB,OAAO,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KAC1C;;;;;;;IAQM,aAAa;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;;IAQM,aAAa,CAAC,UAAkB;QACrC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;;;;;;;IAQM,mBAAmB;QACxB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;;;;;;;IAQM,mBAAmB,CAAC,gBAAsB;QAC/C,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;KAC1C;;;;;;;IAQM,kBAAkB;QACvB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;;;;;;;IAQM,kBAAkB,CAAC,eAAuB;QAC/C,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;KACxC;;;;;;IAOM,sBAAsB;QAC3B,OAAO,uBAAuB,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC;KAC3D;;;;;;IAOM,YAAY;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;IAOM,YAAY,CAAC,SAAiB;QACnC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC5B;;;;;;IAOM,cAAc;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;;;;;IAOM,cAAc,CAAC,WAAmB;QACvC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAChC;;;;;;IAOM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;IAOM,eAAe,CAAC,YAAkB;QACvC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;;;;;;IAOM,WAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;IAOM,WAAW,CAAC,QAAgB;QACjC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;;;;;;IAOM,eAAe;QACpB,OAAO,gBAAgB,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;KAC7C;;;;;;IAOM,kBAAkB;QACvB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;;;;;;IAOM,kBAAkB,CAAC,eAAuB;QAC/C,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;KACxC;;;;;;IAOM,mBAAmB;QACxB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;;;;;;IAOM,mBAAmB,CAAC,gBAAsB;QAC/C,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;KAC1C;;;;;;IAOM,aAAa;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;IAOM,aAAa,CAAC,UAAkB;QACrC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;;;;;;IAOM,iBAAiB;QACtB,OAAO,kBAAkB,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;KACjD;;;;;;;IAQM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;;IAQM,eAAe,CAAC,YAAoB;QACzC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;CACF;AAED,aAAa,CAAE,gBAAgB,EAAE,UAAU,CAAE,CAAC;AAC9C,WAAW,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAC,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,gBAAgB,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,gBAAgB,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AACzL,WAAW,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAC,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,gBAAgB,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,gBAAgB,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AACzL,WAAW,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,gBAAgB,CAAC,SAAS,CAAC,YAAY,EAAE,KAAK,EAAE,gBAAgB,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;AAC7K,WAAW,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,gBAAgB,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,gBAAgB,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AAC9K,WAAW,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,gBAAgB,CAAC,SAAS,CAAC,mBAAmB,EAAE,KAAK,EAAE,gBAAgB,CAAC,SAAS,CAAC,mBAAmB,EAAE,CAAC,CAAC;AACxL,WAAW,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,gBAAgB,CAAC,SAAS,CAAC,kBAAkB,EAAE,KAAK,EAAE,gBAAgB,CAAC,SAAS,CAAC,kBAAkB,EAAE,CAAC,CAAC;AAC1L,WAAW,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,gBAAgB,CAAC,SAAS,CAAC,YAAY,EAAE,KAAK,EAAE,gBAAgB,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;AAC7K,WAAW,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,gBAAgB,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,EAAE,gBAAgB,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,CAAC;AACnL,WAAW,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,gBAAgB,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,gBAAgB,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;AAC/K,WAAW,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,gBAAgB,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,gBAAgB,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AAC3K,WAAW,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,gBAAgB,CAAC,SAAS,CAAC,kBAAkB,EAAE,KAAK,EAAE,gBAAgB,CAAC,SAAS,CAAC,kBAAkB,EAAE,CAAC,CAAC;AAC3L,WAAW,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,gBAAgB,CAAC,SAAS,CAAC,mBAAmB,EAAE,KAAK,EAAE,gBAAgB,CAAC,SAAS,CAAC,mBAAmB,EAAE,CAAC,CAAC;AACtL,WAAW,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,gBAAgB,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,gBAAgB,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AACjL,WAAW,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,gBAAgB,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,gBAAgB,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;;ACpXvL;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAY,cAIX;AAJD,WAAY,cAAc;IACxB,2DAAQ,CAAA;IACR,6DAAS,CAAA;IACT,qDAAK,CAAA;CACN,EAJW,cAAc,KAAd,cAAc,QAIzB;AAED,SAAgB,sBAAsB,CAAC,MAAc;IACnD,IAAI,SAAS,KAAK,MAAM,EAAE;QACxB,OAAO,cAAc,CAAC,QAAQ,CAAC;KAChC;SAAM,IAAI,UAAU,KAAK,MAAM,EAAE;QAChC,OAAO,cAAc,CAAC,SAAS,CAAC;KACjC;SAAM,IAAI,OAAO,KAAK,MAAM,EAAE;QAC7B,OAAO,cAAc,CAAC,KAAK,CAAC;KAC7B;SAAM;QACL,OAAO,IAAI,CAAC;KACb;CACF;;ACtCD;;;;;;;;;;;;;;;AAeA,AAMA;;;;;;AAMA,MAAa,sBAAuB,SAAQ,gBAAgB;;;;;;;IAWnD,OAAO;QACZ,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;;;;;;IAQM,OAAO,CAAC,MAAc;QAC3B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;IAOM,WAAW;QAChB,OAAO,sBAAsB,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;KAC/C;;;;;;IAOM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;IAOM,QAAQ,CAAC,MAAc;QAC5B,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;KACrB;;;;;;IAOM,gBAAgB;QACrB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;;;;;;IAOM,gBAAgB,CAAC,aAAmB;QACzC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;KACpC;CAGF;AAED,aAAa,CAAE,sBAAsB,EAAE,QAAQ,CAAE,CAAC;AAClD,WAAW,CAAC,sBAAsB,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,sBAAsB,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE,sBAAsB,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;AAClL,WAAW,CAAC,sBAAsB,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,sBAAsB,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,sBAAsB,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;AACnL,WAAW,CAAC,sBAAsB,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,sBAAsB,CAAC,SAAS,CAAC,gBAAgB,EAAE,KAAK,EAAE,sBAAsB,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC,CAAC;;ACvGvM;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAY,UAGX;AAHD,WAAY,UAAU;IACpB,yCAAG,CAAA;IACH,2CAAI,CAAA;CACL,EAHW,UAAU,KAAV,UAAU,QAGrB;AAGD,SAAgB,kBAAkB,CAAC,MAAc;IAC/C,IAAI,KAAK,KAAK,MAAM,EAAE;QACpB,OAAO,UAAU,CAAC,GAAG,CAAC;KACvB;SAAM,IAAI,MAAM,KAAK,MAAM,EAAE;QAC5B,OAAO,UAAU,CAAC,IAAI,CAAC;KACxB;SAAM;QACL,OAAO,IAAI,CAAC;KACb;CACF;;ACpCD;;;;;;;;;;;;;;;AAeA,AAQA;;;;;;AAMA,MAAa,kBAAmB,SAAQ,gBAAgB;;;;;;;IAgB/C,aAAa;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;;IAQM,aAAa,CAAC,UAAkB;QACrC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;;;;;;IAOM,iBAAiB;QACtB,OAAO,kBAAkB,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;KACjD;;;;;;IAOM,cAAc;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;;;;;IAOM,cAAc,CAAC,WAAmB;QACvC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAChC;;;;;;IAOM,iBAAiB;QACtB,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;;;;;;IAOM,iBAAiB,CAAC,cAAoB;QAC3C,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;KACtC;;;;;;;IAQM,mBAAmB;QACxB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;;;;;;;IAQM,mBAAmB,CAAC,gBAAwB;QACjD,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;KAC1C;;;;;;;IAQM,qBAAqB;QAC1B,OAAO,IAAI,CAAC,kBAAkB,CAAC;KAChC;;;;;;;IAQM,qBAAqB,CAAC,kBAA8B;QACzD,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;KAC9C;;;;;;IAOM,aAAa;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;IAOM,aAAa,CAAC,UAAkB;QACrC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;;;;;;IAOM,iBAAiB;QACtB,OAAO,kBAAkB,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;KACjD;;;;;;;IAQM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;;IAQM,eAAe,CAAC,YAAoB;QACzC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;CACF;AAED,aAAa,CAAE,kBAAkB,EAAE,SAAS,CAAE,CAAC;AAC/C,WAAW,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,kBAAkB,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AACnL,WAAW,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,EAAE,kBAAkB,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,CAAC;AACzL,WAAW,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,iBAAiB,EAAE,KAAK,EAAE,kBAAkB,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC,CAAC;AAC1L,WAAW,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,mBAAmB,EAAE,KAAK,EAAE,kBAAkB,CAAC,SAAS,CAAC,mBAAmB,EAAE,CAAC,CAAC;AAClM,WAAW,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,qBAAqB,EAAE,KAAK,EAAE,kBAAkB,CAAC,SAAS,CAAC,qBAAqB,EAAE,CAAC,CAAC;AACrM,WAAW,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,kBAAkB,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AACtL,WAAW,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,kBAAkB,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;;ACvM5L;;;;;;;;;;;;;;;AAeA,AAMA;;;;;;AAMA,MAAa,iBAAkB,SAAQ,gBAAgB;;;;;;;IAY9C,WAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;;IAQM,WAAW,CAAC,QAAgB;QACjC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;;;;;;IAOM,aAAa;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;IAOM,aAAa,CAAC,UAAkB;QACrC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;;;;;;IAOM,iBAAiB;QACtB,OAAO,kBAAkB,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;KACjD;;;;;;;IAQM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;;IAQM,eAAe,CAAC,YAAoB;QACzC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;CACF;AAED,aAAa,CAAE,iBAAiB,EAAE,WAAW,CAAE,CAAC;AAChD,WAAW,CAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,iBAAiB,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,iBAAiB,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AAC7K,WAAW,CAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,iBAAiB,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,iBAAiB,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AACnL,WAAW,CAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,iBAAiB,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,iBAAiB,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;;ACxGzL;;;;;;;;;;;;;;;AAeA,AAKA;;;;;;AAMA,MAAa,YAAY;IAGhB,gBAAgB;QACrB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;IAEM,gBAAgB,CAAC,aAAsC;QAC5D,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;KACpC;CACF;AAED,aAAa,CAAE,YAAY,EAAE,SAAS,CAAE,CAAC;AACzC,kBAAkB,CAAC,YAAY,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,mBAAmB,EAAE,gBAAgB,EAAE,IAAI,EAAE,YAAY,CAAC,SAAS,CAAC,gBAAgB,EAAE,KAAK,EAAE,YAAY,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC,CAAC;;ACvCnM;;;;;;;;;;;;;;;AAeA,AAIA;;;;;;;AAOA,MAAa,oBAAqB,SAAQ,eAAe;IAChD,sBAAsB;QAC3B,OAAO,eAAe,CAAC;KACxB;CACF;AAED,aAAa,CAAE,oBAAoB,EAAE,WAAW,CAAE,CAAC;;AChCnD;;;;;;;;;;;;;;;AAeA,AAMA;;;;;;AAMA,MAAa,+BACT,SAAQ,iCAAuD;;;;;;IAS1D,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;IAOM,UAAU,CAAC,OAA6B;QAC7C,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;;IAGM,iBAAiB;QACtB,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC;KAC1B;CACF;AAED,aAAa,CAAE,+BAA+B,EAAE,cAAc,CAAC,CAAC;AAChE,kBAAkB,CAAC,+BAA+B,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,oBAAoB,EAAE,IAAI,EAAE,+BAA+B,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,+BAA+B,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;;ACzDxO;;;;;;;;;;;;;;;AAeA,AASA;;;AAGA,MAAa,8BAA+B,SAAQ,kBAAkB;IAK7D,OAAO;QACZ,OAAO,cAAc,CAAC,mBAAmB,CAAC;KAC3C;;;;;;;;IASM,uBAAuB;QAC5B,OAAO,IAAI,CAAC,oBAAoB,CAAC;KAClC;;;;;;IAOM,uBAAuB,CAAC,oBAAqD;QAClF,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;KAClD;IAEM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;IAEM,eAAe,CAAC,YAA0B;QAC/C,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;;IAGM,mBAAmB;QACxB,IAAI,GAAG,GAA2B,IAAI,KAAK,EAAmB,CAAC;QAC/D,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QACpC,OAAO,GAAG,CAAC;KACZ;CACF;AAED,aAAa,CAAE,8BAA8B,EAAE,iBAAiB,CAAE,CAAC;AACnE,kBAAkB,CAAC,8BAA8B,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,+BAA+B,EAAE,IAAI,EAAE,8BAA8B,CAAC,SAAS,CAAC,uBAAuB,EAAE,KAAK,EAAE,8BAA8B,CAAC,SAAS,CAAC,uBAAuB,EAAE,CAAC,CAAC;AACzP,kBAAkB,CAAC,8BAA8B,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,8BAA8B,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,8BAA8B,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;;AC1EvN;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAY,SAKX;AALD,WAAY,SAAS;IACnB,6CAAM,CAAA;IACN,mDAAS,CAAA;IACT,uDAAW,CAAA;IACX,2CAAK,CAAA;CACN,EALW,SAAS,KAAT,SAAS,QAKpB;AAED,SAAgB,iBAAiB,CAAC,MAAc;IAC9C,IAAI,QAAQ,KAAK,MAAM,EAAE;QACvB,OAAO,SAAS,CAAC,MAAM,CAAC;KACzB;SAAM,IAAI,WAAW,KAAK,MAAM,EAAE;QACjC,OAAO,SAAS,CAAC,SAAS,CAAC;KAC5B;SAAM,IAAI,aAAa,KAAK,MAAM,EAAE;QACnC,OAAO,SAAS,CAAC,WAAW,CAAC;KAC9B;SAAM,IAAI,OAAO,KAAK,MAAM,EAAE;QAC7B,OAAO,SAAS,CAAC,KAAK,CAAC;KACxB;SAAM;QACL,OAAO,IAAI,CAAC;KACb;CACF;;ACzCD;;;;;;;;;;;;;;;AAeA,AAMA;;;;;;AAMA,MAAa,iBAAkB,SAAQ,gBAAgB;;;;;;;IAc9C,OAAO;QACZ,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;;IAQM,OAAO,CAAC,SAAiB;QAC9B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC5B;;;;;;IAOM,WAAW;QAChB,OAAO,iBAAiB,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;KAC1C;;;;;;;IAQM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;;IAQM,QAAQ,CAAC,MAAc;QAC5B,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;KACrB;;;;;;IAOM,gBAAgB;QACrB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;;;;;;IAOM,gBAAgB,CAAC,aAAmB;QACzC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;KACpC;;;;;;IAOM,aAAa;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;IAOM,aAAa,CAAC,UAAkB;QACrC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;;;;;;IAOM,iBAAiB;QACtB,OAAO,kBAAkB,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;KACjD;;;;;;;IAQM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;;IAQM,eAAe,CAAC,YAAoB;QACzC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;CACF;AAED,aAAa,CAAE,iBAAiB,EAAE,WAAW,CAAE,CAAC;AAChD,WAAW,CAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,iBAAiB,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE,iBAAiB,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;AACtK,WAAW,CAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,iBAAiB,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,iBAAiB,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;AACpK,WAAW,CAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,iBAAiB,CAAC,SAAS,CAAC,gBAAgB,EAAE,KAAK,EAAE,iBAAiB,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC,CAAC;AACxL,WAAW,CAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,iBAAiB,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,iBAAiB,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AACnL,WAAW,CAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,iBAAiB,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,iBAAiB,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;;AC3JzL;;;;;;;;;;;;;;;AAeA,AAKA;;;;;;AAMA,MAAa,sBAAuB,SAAQ,eAAe;;;;;;IAUlD,SAAS;QACd,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;IAGM,sBAAsB;QAC3B,OAAO,iBAAiB,CAAC;KAC1B;;;;;;IAOM,SAAS,CAAC,MAAc;QAC7B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;IAOM,kBAAkB;QACvB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;;;;;;IAOM,kBAAkB,CAAC,eAAqB;QAC7C,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;KACxC;CACF;AAED,aAAa,CAAE,sBAAsB,EAAE,SAAS,CAAE,CAAC;AACnD,WAAW,CAAC,sBAAsB,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,sBAAsB,CAAC,SAAS,CAAC,SAAS,EAAE,KAAK,EAAE,sBAAsB,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,CAAC;AACrM,WAAW,CAAC,sBAAsB,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,sBAAsB,CAAC,SAAS,CAAC,kBAAkB,EAAE,KAAK,EAAE,sBAAsB,CAAC,SAAS,CAAC,kBAAkB,EAAE,CAAC,CAAC;;AC3EzM;;;;;;;;;;;;;;;AAeA,AAMA;;;AAGA,MAAa,iCAAkC,SAAQ,iCAAyD;;;;;;IASvG,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;IAOM,UAAU,CAAC,OAA+B;QAC/C,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;;IAGM,iBAAiB;QACtB,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC;KAC1B;CACF;AAED,aAAa,CAAC,iCAAiC,EAAE,YAAY,CAAC,CAAC;AAC/D,kBAAkB,CAAC,iCAAiC,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,sBAAsB,EAAE,IAAI,EAAE,iCAAiC,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,iCAAiC,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;;ACrDhP;;;;;;;;;;;;;;;AAeA,AAQA;;;;;;AAMA,MAAa,cAAe,SAAQ,eAAe;IAajD;QACE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;KACvB;IAEM,sBAAsB;QAC3B,OAAO,QAAQ,CAAC;KACjB;IAEM,mBAAmB;QACxB,OAAO,IAAI,CAAC,sBAAsB,EAAE,CAAC;KACtC;;;;;;IAOM,SAAS;QACd,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;;;;;IAOM,SAAS,CAAC,MAAc;QAC7B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;IAOM,YAAY;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;IAOM,YAAY,CAAC,SAAe;QACjC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC5B;;;;;;IAOM,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;IAOM,UAAU,CAAC,OAAe;QAC/B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;;;;;;IAOM,oBAAoB;QACzB,OAAO,IAAI,CAAC,iBAAiB,CAAC;KAC/B;;;;;;IAOM,oBAAoB,CAAC,iBAAuB;QACjD,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;KAC5C;;;;;;;IAQM,WAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;IAOM,WAAW,CAAC,QAAgB;QACjC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;;;;;;IAOM,qBAAqB;QAC1B,OAAO,IAAI,CAAC,kBAAkB,CAAC;KAChC;;;;;;IAOM,qBAAqB,CAAC,kBAAwB;QACnD,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;KAC9C;;;;;;IAOM,qBAAqB;QAC1B,OAAO,IAAI,CAAC,kBAAkB,CAAC;KAChC;;;;;;IAOM,qBAAqB,CAAC,kBAAwB;QACnD,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;KAC9C;;;;;;IAOM,uBAAuB;QAC5B,OAAO,IAAI,CAAC,oBAAoB,CAAC;KAClC;;;;;;IAOM,uBAAuB,CAAC,oBAA8C;QAC3E,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;KAClD;;;;;;IAOM,YAAY;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;IAOM,YAAY,CAAC,SAAiB;QACnC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC5B;;;;;;IAOM,YAAY;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;IAOM,YAAY,CAAC,SAAiB;QACnC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC5B;CACF;AAED,aAAa,CAAE,cAAc,EAAE,OAAO,CAAE,CAAC;AACzC,kBAAkB,CAAC,cAAc,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,cAAc,CAAC,SAAS,CAAC,SAAS,EAAE,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,CAAC;AACpK,WAAW,CAAC,cAAc,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,cAAc,CAAC,SAAS,CAAC,YAAY,EAAE,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;AACpL,WAAW,CAAC,cAAc,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,cAAc,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;AACjK,WAAW,CAAC,cAAc,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,cAAc,CAAC,SAAS,CAAC,oBAAoB,EAAE,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,oBAAoB,EAAE,CAAC,CAAC;AACvL,WAAW,CAAC,cAAc,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,cAAc,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AACpL,WAAW,CAAC,cAAc,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,cAAc,CAAC,SAAS,CAAC,qBAAqB,EAAE,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,qBAAqB,EAAE,CAAC,CAAC;AACtL,WAAW,CAAC,cAAc,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,cAAc,CAAC,SAAS,CAAC,qBAAqB,EAAE,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,qBAAqB,EAAE,CAAC,CAAC;AACtL,kBAAkB,CAAC,cAAc,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,wBAAwB,EAAE,IAAI,EAAE,cAAc,CAAC,SAAS,CAAC,uBAAuB,EAAE,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,uBAAuB,EAAE,CAAC,CAAC;AACnM,WAAW,CAAC,cAAc,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,cAAc,CAAC,SAAS,CAAC,YAAY,EAAE,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;AACxK,WAAW,CAAC,cAAc,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,cAAc,CAAC,SAAS,CAAC,YAAY,EAAE,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;;ACvPvK;;;;;;;;;;;;;;;AAeA,AAQA;;;;;;AAMA,MAAa,wBAAyB,SAAQ,kBAAkB;IAKvD,OAAO;QACZ,OAAO,cAAc,CAAC,MAAM,CAAC;KAC9B;;;;;;IAOM,iBAAiB;QACtB,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;;;;;;IAOM,iBAAiB,CAAC,cAA8B;QACrD,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;KACtC;;;;;;IAOM,yBAAyB;QAC9B,OAAO,IAAI,CAAC,sBAAsB,CAAC;KACpC;;;;;;IAOM,yBAAyB,CAAC,sBAAyD;QACxF,IAAI,CAAC,sBAAsB,GAAG,sBAAsB,CAAC;KACtD;;;IAKM,mBAAmB;QACxB,IAAI,QAAQ,GAA2B,IAAI,KAAK,EAAmB,CAAC;QAEpE,IAAI,IAAI,CAAC,iBAAiB,EAAE,IAAI,IAAI,EAAE;YACpC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;SACzC;QAED,OAAO,QAAQ,CAAC;KACjB;CACF;AAED,aAAa,CAAC,wBAAwB,EAAE,gBAAgB,CAAC,CAAC;AAC1D,kBAAkB,CAAC,wBAAwB,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,wBAAwB,CAAC,SAAS,CAAC,iBAAiB,EAAE,KAAK,EAAE,wBAAwB,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC,CAAC;AAC1M,kBAAkB,CAAC,wBAAwB,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,iCAAiC,EAAE,IAAI,EAAE,wBAAwB,CAAC,SAAS,CAAC,yBAAyB,EAAE,KAAK,EAAE,wBAAwB,CAAC,SAAS,CAAC,yBAAyB,EAAE,CAAC,CAAC;;AC1F9O;;;;;;;;;;;;;;;AAeA,AAUA;;;AAGA,MAAa,cAAc;;;;;;IAalB,cAAc;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;;;;;IAOM,cAAc,CAAC,WAAmB;QACvC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAChC;;;;;;IAOM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;IAOM,QAAQ,CAAC,KAAa;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;;;;;;IAOM,YAAY;QACjB,IAAI,IAAI,CAAC,gBAAgB,EAAE,IAAI,IAAI,IAAI,IAAI,CAAC,sBAAsB,EAAE,IAAI,IAAI,EAAE;YAC5E,MAAM,IAAI,YAAY,CAAC,4DAA4D,CAAC,CAAC;SACtF;aACI,IAAI,IAAI,CAAC,gBAAgB,EAAE,IAAI,IAAI,EAAE;YACxC,OAAO,IAAI,CAAC,gBAAgB,EAAE,CAAC;SAChC;aAAM,IAAI,IAAI,CAAC,sBAAsB,EAAE,IAAI,IAAI,EAAE;YAChD,OAAO,IAAI,CAAC,sBAAsB,EAAE,CAAC;SACtC;aACI;YACH,OAAO,IAAI,CAAC,sBAAsB,EAAE,CAAC;SACtC;KACF;;;;;;IAOM,YAAY,CAAC,SAAsB;QACxC,IAAI,SAAS,YAAY,eAAe,EAAE;YACxC,IAAI,CAAC,gBAAgB,CAAmB,SAAS,CAAC,CAAC;SACpD;aACI,IAAI,SAAS,YAAY,qBAAqB,EAAE;YACnD,IAAI,CAAC,sBAAsB,CAAyB,SAAS,CAAC,CAAC;SAChE;aAAM,IAAI,SAAS,YAAY,qBAAqB,EAAE;YACrD,IAAI,CAAC,sBAAsB,CAAyB,SAAS,CAAC,CAAC;SAChE;aACI;YACH,MAAM,IAAI,YAAY,CAAC,0BAA0B,GAAG,SAAS,CAAC,CAAC;SAChE;KACF;;;;;;IAOM,gBAAgB;QACrB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;;;;;;IAOM,gBAAgB,CAAC,aAA8B;QACpD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAChC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;KACpC;;;;;;IAOM,sBAAsB;QAC3B,OAAO,IAAI,CAAC,mBAAmB,CAAC;KACjC;;;;;;IAOM,sBAAsB,CAAC,mBAA0C;QACtE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;KAChD;;;;;;IAOM,sBAAsB;QAC3B,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;;;;;;IAOM,sBAAsB,CAAC,eAAsC;QAClE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAChC,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;KACxC;CACF;AAED,aAAa,CAAE,cAAc,EAAE,UAAU,CAAE,CAAC;AAC5C,WAAW,CAAC,cAAc,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,cAAc,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,CAAC;AACrK,WAAW,CAAC,cAAc,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,cAAc,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC3J,kBAAkB,CAAC,cAAc,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,cAAc,CAAC,SAAS,CAAC,gBAAgB,EAAE,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC,CAAC;AAC5K,kBAAkB,CAAC,cAAc,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,qBAAqB,EAAE,IAAI,EAAE,cAAc,CAAC,SAAS,CAAC,sBAAsB,EAAE,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,sBAAsB,EAAE,CAAC,CAAC;AAC9L,kBAAkB,CAAC,cAAc,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,qBAAqB,EAAE,IAAI,EAAE,cAAc,CAAC,SAAS,CAAC,sBAAsB,EAAE,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,sBAAsB,EAAE,CAAC,CAAC;;AChL9L;;;;;;;;;;;;;;;AAeA,AAMA;;;AAGA,MAAa,mBAAoB,SAAQ,eAAe;IAKtD;QACE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;KAChC;IAEM,sBAAsB;QAC3B,OAAO,cAAc,CAAC;KACvB;;;;;;IAOM,cAAc;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;;;;;IAOM,cAAc,CAAC,WAAiB;QACrC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAChC;;;;;;IAOM,WAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;IAOM,WAAW,CAAC,QAA+B;QAChD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;CACF;AAED,aAAa,CAAC,mBAAmB,EAAE,YAAY,CAAC,CAAC;AACjD,WAAW,CAAC,mBAAmB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,mBAAmB,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,EAAE,mBAAmB,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,CAAC;AACtM,kBAAkB,CAAC,mBAAmB,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,mBAAmB,EAAE,cAAc,EAAE,IAAI,EAAE,mBAAmB,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,mBAAmB,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;;AC7E5M;;;;;;;;;;;;;;;AAeA,AAMA;;;AAGA,MAAa,8BAA+B,SAAQ,iCAAsD;;;;;;IASjG,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;IAOM,UAAU,CAAC,OAA4B;QAC5C,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;;IAGM,iBAAiB;QACtB,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC;KAC1B;CACF;AAED,aAAa,CAAE,8BAA8B,EAAE,eAAe,CAAE,CAAC;AACjE,kBAAkB,CAAC,8BAA8B,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,mBAAmB,EAAE,IAAI,EAAE,8BAA8B,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,8BAA8B,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;;ACrDpO;;;;;;;;;;;;;;;AAeA,AAQA;;;AAGA,MAAa,wBAAyB,SAAQ,kBAAkB;IAIvD,OAAO;QACZ,OAAO,cAAc,CAAC,MAAM,CAAC;KAC9B;;;;;;IAOM,sBAAsB;QAC3B,OAAO,IAAI,CAAC,mBAAmB,CAAC;KACjC;;;;;;IAOM,sBAAsB,CAAC,mBAAmD;QAC/E,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;KAChD;;;;;;IAOM,mBAAmB;QACxB,IAAI,QAAQ,GAA2B,IAAI,KAAK,EAAmB,CAAC;QAEpE,IAAI,IAAI,CAAC,sBAAsB,EAAE,IAAI,IAAI,EAAE;YACzC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC,CAAC;SAC9C;QAED,OAAO,QAAQ,CAAC;KACjB;CACF;AAED,aAAa,CAAC,wBAAwB,EAAE,gBAAgB,CAAC,CAAC;AAC1D,kBAAkB,CAAC,wBAAwB,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,8BAA8B,EAAE,IAAI,EAAE,wBAAwB,CAAC,SAAS,CAAC,sBAAsB,EAAE,KAAK,EAAE,wBAAwB,CAAC,SAAS,CAAC,sBAAsB,EAAE,CAAC,CAAC;;ACrEpO;;;;;;;;;;;;;;;AAeA,AAIA;;;;AAIA,MAAa,OAAO;;;;IAcZ,QAAQ;QACd,OAAO,IAAI,CAAC,KAAK,CAAC;KAClB;;;;IAIM,QAAQ,CAAC,KAAa;QAC5B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACnB;;;;IAIM,SAAS;QACf,OAAO,IAAI,CAAC,MAAM,CAAC;KACnB;;;;IAIM,SAAS,CAAC,MAAc;QAC9B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACrB;;;;IAIM,UAAU;QAChB,OAAO,IAAI,CAAC,OAAO,CAAC;KACpB;;;;IAIM,UAAU,CAAC,OAAe;QAChC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACvB;;;;IAIM,YAAY;QAClB,OAAO,IAAI,CAAC,SAAS,CAAC;KACtB;;;;IAIM,YAAY,CAAC,SAAiB;QACpC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC3B;;;;IAIM,UAAU;QAChB,OAAO,IAAI,CAAC,OAAO,CAAC;KACpB;;;;IAIM,UAAU,CAAC,OAAe;QAChC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACvB;;;;IAIM,YAAY;QAClB,OAAO,IAAI,CAAC,SAAS,CAAC;KACtB;;;;IAIM,YAAY,CAAC,SAAiB;QACpC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC3B;;;;IAIM,gBAAgB;QACtB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC1B;;;;IAIM,gBAAgB,CAAC,aAAqB;QAC5C,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;KACnC;;;;IAIM,gBAAgB;QACtB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC1B;;;;IAIM,gBAAgB,CAAC,aAAqB;QAC5C,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;KACnC;;;;IAIM,gBAAgB;QACtB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC1B;;;;IAIM,gBAAgB,CAAC,aAAqB;QAC5C,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;KACnC;CACD;AAED,aAAa,CAAE,OAAO,EAAE,cAAc,CAAC,CAAC;AACxC,WAAW,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,OAAO,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;AACtJ,WAAW,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC,SAAS,CAAC,SAAS,EAAE,KAAK,EAAE,OAAO,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,CAAC;AACzJ,WAAW,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,OAAO,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;AAC5J,WAAW,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC,SAAS,CAAC,YAAY,EAAE,KAAK,EAAE,OAAO,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;AAClK,WAAW,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,OAAO,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;AAC5J,WAAW,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC,SAAS,CAAC,YAAY,EAAE,KAAK,EAAE,OAAO,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;AAClK,WAAW,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,wBAAwB,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC,SAAS,CAAC,gBAAgB,EAAE,KAAK,EAAE,OAAO,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC,CAAC;AACvL,WAAW,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,oBAAoB,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC,SAAS,CAAC,gBAAgB,EAAE,KAAK,EAAE,OAAO,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC,CAAC;AACnL,WAAW,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,eAAe,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC,SAAS,CAAC,gBAAgB,EAAE,KAAK,EAAE,OAAO,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC,CAAC;;ACzJ9K;;;;;;;;;;;;;;;AAeA,AAMA;;;;AAIA,MAAa,SAAS;;;;IAWd,UAAU;QAChB,OAAO,IAAI,CAAC,OAAO,CAAC;KACpB;;;;IAKS,UAAU,CAAC,OAAuB;QAC3C,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACvB;;;;IAKM,aAAa;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC;KACvB;;;;IAKM,aAAa,CAAC,UAAkB;QACtC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC7B;;;;IAKM,cAAc;QACpB,OAAO,IAAI,CAAC,WAAW,CAAC;KACxB;;;;IAKM,cAAc,CAAC,WAAmB;QACxC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAC/B;;;;IAKM,gBAAgB;QACtB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC1B;;;;IAKM,gBAAgB,CAAC,aAAqB;QAC5C,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;KACnC;;;;IAKM,cAAc;QACpB,OAAO,IAAI,CAAC,WAAW,CAAC;KACxB;;;;IAKM,cAAc,CAAC,WAAmB;QACxC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAC/B;CACD;AAED,aAAa,CAAE,SAAS,EAAE,gBAAgB,CAAC,CAAC;AAC5C,kBAAkB,CAAC,SAAS,EAAE,EAAE,QAAQ,EAAC,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,mBAAmB,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,SAAS,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;AACpL,WAAW,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE,YAAY,EAAC,QAAQ,EAAE,KAAK,EAAG,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,SAAS,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,SAAS,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AAC3K,WAAW,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE,aAAa,EAAC,QAAQ,EAAE,KAAK,EAAG,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,SAAS,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,EAAE,SAAS,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,CAAC;AAC9K,WAAW,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE,eAAe,EAAC,QAAQ,EAAE,KAAK,EAAG,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,SAAS,CAAC,SAAS,CAAC,gBAAgB,EAAE,KAAK,EAAE,SAAS,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC,CAAC;AACpL,WAAW,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE,aAAa,EAAC,QAAQ,EAAE,KAAK,EAAG,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,SAAS,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,EAAE,SAAS,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,CAAC;;AC7G9K;;;;;;;;;;;;;;;AAeA,AAIA;;;;AAIA,MAAa,YAAY;;;;IAajB,aAAa;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC;KACvB;;;;IAIM,aAAa,CAAC,UAAkB;QACtC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC7B;;;;IAIM,aAAa;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC;KACvB;;;;IAIM,aAAa,CAAC,UAAkB;QACtC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC7B;;;;IAIM,WAAW;QACjB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACrB;;;;IAIM,WAAW,CAAC,QAAgB;QAClC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KACzB;;;;IAKM,WAAW;QACjB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACrB;;;;IAIM,WAAW,CAAC,QAAgB;QAClC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KACzB;;;;IAIM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;KACjB;;;;IAIM,OAAO,CAAC,IAAY;QAC1B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KACjB;;;;IAIM,QAAQ;QACd,OAAO,IAAI,CAAC,KAAK,CAAC;KAClB;;;;IAIM,QAAQ,CAAC,KAAa;QAC5B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACnB;;;;IAIM,aAAa;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC;KACvB;;;;IAIM,aAAa,CAAC,UAAkB;QACtC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC7B;;;;IAIM,QAAQ;QACd,OAAO,IAAI,CAAC,KAAK,CAAC;KAClB;;;;IAIM,QAAQ,CAAC,KAAa;QAC5B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACnB;CACD;AAED,aAAa,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC;AACzC,WAAW,CAAC,YAAY,EAAE,EAAE,IAAI,EAAE,YAAY,EAAC,QAAQ,EAAE,IAAI,EAAG,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,YAAY,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,YAAY,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AACnL,WAAW,CAAC,YAAY,EAAE,EAAE,IAAI,EAAE,YAAY,EAAC,QAAQ,EAAE,KAAK,EAAG,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,YAAY,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,YAAY,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AACpL,WAAW,CAAC,YAAY,EAAE,EAAE,IAAI,EAAE,OAAO,EAAC,QAAQ,EAAE,IAAI,EAAG,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,YAAY,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,YAAY,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AAC1K,WAAW,CAAC,YAAY,EAAE,EAAE,IAAI,EAAE,OAAO,EAAC,QAAQ,EAAE,IAAI,EAAG,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,YAAY,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,YAAY,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AAC1K,WAAW,CAAC,YAAY,EAAE,EAAE,IAAI,EAAE,MAAM,EAAC,QAAQ,EAAE,IAAI,EAAG,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,YAAY,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE,YAAY,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;AACjK,WAAW,CAAC,YAAY,EAAE,EAAE,IAAI,EAAE,OAAO,EAAC,QAAQ,EAAE,IAAI,EAAG,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;AACpK,WAAW,CAAC,YAAY,EAAE,EAAE,IAAI,EAAE,YAAY,EAAC,QAAQ,EAAE,IAAI,EAAG,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,YAAY,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,YAAY,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AACnL,WAAW,CAAC,YAAY,EAAE,EAAE,IAAI,EAAE,OAAO,EAAC,QAAQ,EAAE,KAAK,EAAG,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;;AC5IrK;;;;;;;;;;;;;;;AAeA,AAGA;;;;AAIA,MAAa,UAAU;;;;IAaf,WAAW;QACjB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACrB;;;;IAIM,WAAW,CAAC,QAAgB;QAClC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KACzB;;;;IAKM,WAAW;QACjB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACrB;;;;IAIM,WAAW,CAAC,QAAgB;QAClC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KACzB;;;;IAIM,WAAW;QACjB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACrB;;;;IAIM,WAAW,CAAC,QAAgB;QAClC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KACzB;;;;IAKM,WAAW;QACjB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACrB;;;;IAIM,WAAW,CAAC,QAAgB;QAClC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KACzB;;;;IAIM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;KACjB;;;;IAIM,OAAO,CAAC,IAAY;QAC1B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KACjB;;;;IAIM,QAAQ;QACd,OAAO,IAAI,CAAC,KAAK,CAAC;KAClB;;;;IAIM,QAAQ,CAAC,KAAa;QAC5B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACnB;;;;IAIM,aAAa;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC;KACvB;;;;IAIM,aAAa,CAAC,UAAkB;QACtC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC7B;;;;IAIM,QAAQ;QACd,OAAO,IAAI,CAAC,KAAK,CAAC;KAClB;;;;IAIM,QAAQ,CAAC,KAAa;QAC5B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACnB;CACD;AAED,aAAa,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;AACrC,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,UAAU,EAAC,QAAQ,EAAE,IAAI,EAAG,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AACvK,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,UAAU,EAAC,QAAQ,EAAE,KAAK,EAAG,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AACxK,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,OAAO,EAAC,QAAQ,EAAE,IAAI,EAAG,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AACpK,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,OAAO,EAAC,QAAQ,EAAE,IAAI,EAAG,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AACpK,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,MAAM,EAAC,QAAQ,EAAE,IAAI,EAAG,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;AAC3J,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,OAAO,EAAC,QAAQ,EAAE,IAAI,EAAG,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC9J,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,YAAY,EAAC,QAAQ,EAAE,IAAI,EAAG,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AAC7K,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,OAAO,EAAC,QAAQ,EAAE,KAAK,EAAG,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;;AC5I/J;;;;;;;;;;;;;;;AAeA,AAOA;;;;AAIA,MAAa,QAAQ;IAWX,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IAGS,UAAU,CAAC,OAAe;QAClC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;IAGS,UAAU;QAClB,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IAGM,UAAU,CAAC,OAAe;QAC/B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;;;;IAKI,YAAY;QAClB,OAAO,IAAI,CAAC,SAAS,CAAC;KACtB;;;;IAMM,YAAY,CAAC,SAAoB;QACvC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC3B;;;;IAMM,eAAe;QACrB,OAAO,IAAI,CAAC,YAAY,CAAC;KACzB;;;;IAMM,eAAe,CAAC,YAA0B;QAChD,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KACjC;;;;IAKM,UAAU;QAChB,OAAO,IAAI,CAAC,OAAO,CAAC;KACpB;;;;IAMM,UAAU,CAAC,OAAe;QAChC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACvB;;;;IAMM,aAAa;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC;KACvB;;;;IAMM,aAAa,CAAC,UAAsB;QAC1C,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC7B;;;;IAKM,QAAQ;QACd,OAAO,IAAI,CAAC,KAAK,CAAC;KAClB;;;;IAMM,QAAQ,CAAC,KAAa;QAC5B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACnB;;;;IAMM,UAAU;QAChB,OAAO,IAAI,CAAC,OAAO,CAAC;KACpB;;;;IAMM,UAAU,CAAC,OAAe;QAChC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACvB;CACD;AAED,aAAa,CAAE,QAAQ,EAAE,eAAe,CAAC,CAAC;AAC1C,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,SAAS,EAAC,QAAQ,EAAE,IAAI,EAAG,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,QAAQ,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;AAC9J,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,QAAQ,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;AAC9J,kBAAkB,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAC,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,QAAQ,CAAC,SAAS,CAAC,YAAY,EAAE,KAAK,EAAE,QAAQ,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;AAC1J,kBAAkB,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAC,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,QAAQ,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,QAAQ,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;AACnK,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,QAAQ,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;AAC9J,kBAAkB,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAC,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,QAAQ,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,QAAQ,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AAC7J,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,QAAQ,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;AACxJ,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,QAAQ,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;;AC9J9J;;;;;;;;;;;;;;;AAeA,AAMA;;;;AAIA,MAAa,UAAU;IAyBb,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IAGS,UAAU,CAAC,OAAe;QAClC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;IAGS,UAAU;QAClB,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IAGM,UAAU,CAAC,OAAe;QAC/B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;;;;IAMI,SAAS;QACf,OAAO,IAAI,CAAC,MAAM,CAAC;KACnB;;;;IAMM,SAAS,CAAC,MAAc;QAC9B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACrB;;;;IAMM,eAAe;QACrB,OAAO,IAAI,CAAC,YAAY,CAAC;KACzB;;;;IAMM,eAAe,CAAC,YAAoB;QAC1C,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KACjC;;;;IAMM,aAAa;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC;KACvB;;;;IAMM,aAAa,CAAC,UAAkB;QACtC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC7B;;;;IAMM,UAAU;QAChB,OAAO,IAAI,CAAC,OAAO,CAAC;KACpB;;;;IAMM,UAAU,CAAC,OAAe;QAChC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACvB;;;;IAMM,eAAe;QACrB,OAAO,IAAI,CAAC,YAAY,CAAC;KACzB;;;;IAMM,eAAe,CAAC,YAAoB;QAC1C,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KACjC;;;;IAMM,UAAU;QAChB,OAAO,IAAI,CAAC,OAAO,CAAC;KACpB;;;;IAMM,UAAU,CAAC,OAAe;QAChC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACvB;;;;IAMM,aAAa;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC;KACvB;;;;IAMM,aAAa,CAAC,UAAkB;QACtC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC7B;;;;IAMM,WAAW;QACjB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACrB;;;;IAMM,WAAW,CAAC,QAAgB;QAClC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KACzB;;;;IAMM,YAAY;QAClB,OAAO,IAAI,CAAC,SAAS,CAAC;KACtB;;;;IAMM,YAAY,CAAC,SAAiB;QACpC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC3B;;;;IAMM,WAAW;QACjB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACrB;;;;IAMM,WAAW,CAAC,QAAgB;QAClC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KACzB;;;;IAMM,UAAU;QAChB,OAAO,IAAI,CAAC,OAAO,CAAC;KACpB;;;;IAMM,UAAU,CAAC,OAAe;QAChC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACvB;;;;IAMM,aAAa;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC;KACvB;;;;IAMM,aAAa,CAAC,UAAkB;QACtC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC7B;;;;IAMM,eAAe;QACrB,OAAO,IAAI,CAAC,YAAY,CAAC;KACzB;;;;IAMM,eAAe,CAAC,YAA0B;QAChD,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KACjC;;;;IAKM,UAAU;QAChB,OAAO,IAAI,CAAC,OAAO,CAAC;KACpB;;;;IAMM,UAAU,CAAC,OAAe;QAChC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACvB;;;;IAMM,aAAa;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC;KACvB;;;;IAMM,aAAa,CAAC,UAAsB;QAC1C,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC7B;;;;IAKM,QAAQ;QACd,OAAO,IAAI,CAAC,KAAK,CAAC;KAClB;;;;IAMM,QAAQ,CAAC,KAAa;QAC5B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACnB;;;;IAMM,UAAU;QAChB,OAAO,IAAI,CAAC,OAAO,CAAC;KACpB;;;;IAMM,UAAU,CAAC,OAAe;QAChC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACvB;CACD;AAED,aAAa,CAAC,UAAU,EAAE,iBAAiB,CAAC,CAAC;AAC7C,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,SAAS,EAAC,QAAQ,EAAE,KAAK,EAAG,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;AACrK,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;AACrK,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,CAAC;AAClK,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;AACpL,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AAC9K,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;AACrK,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;AACpL,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;AACrK,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AAC9K,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AACxK,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,YAAY,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;AAC5K,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AACzK,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;AACtK,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AAC/K,kBAAkB,CAAC,UAAU,EAAE,EAAE,QAAQ,EAAC,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;AAC1K,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;AACrK,kBAAkB,CAAC,UAAU,EAAE,EAAE,QAAQ,EAAC,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AACpK,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC/J,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;;ACvWrK;;;;;;;;;;;;;;;AAeA,AAMA;;;;AAIA,MAAa,UAAU;IAkBb,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IAGS,UAAU,CAAC,OAAe;QAClC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;IAGS,UAAU;QAClB,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IAGM,UAAU,CAAC,OAAe;QAC/B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;;;;IAOI,YAAY;QAClB,OAAO,IAAI,CAAC,SAAS,CAAC;KACtB;;;;IAMM,YAAY,CAAC,SAAiB;QACpC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC3B;;;;IAMM,aAAa;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC;KACvB;;;;IAMM,aAAa,CAAC,UAAkB;QACtC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC7B;;;;IAMM,cAAc;QACpB,OAAO,IAAI,CAAC,WAAW,CAAC;KACxB;;;;IAMM,cAAc,CAAC,WAAmB;QACxC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAC/B;;;;IAMM,WAAW;QACjB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACrB;;;;IAMM,WAAW,CAAC,QAAgB;QAClC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KACzB;;;;IAMM,YAAY;QAClB,OAAO,IAAI,CAAC,SAAS,CAAC;KACtB;;;;IAMM,YAAY,CAAC,SAAiB;QACpC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC3B;;;;IAMM,WAAW;QACjB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACrB;;;;IAMM,WAAW,CAAC,QAAgB;QAClC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KACzB;;;;IAMM,eAAe;QACrB,OAAO,IAAI,CAAC,YAAY,CAAC;KACzB;;;;IAMM,eAAe,CAAC,YAA0B;QAChD,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KACjC;;;;IAKM,UAAU;QAChB,OAAO,IAAI,CAAC,OAAO,CAAC;KACpB;;;;IAMM,UAAU,CAAC,OAAe;QAChC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACvB;;;;IAMM,aAAa;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC;KACvB;;;;IAMM,aAAa,CAAC,UAAsB;QAC1C,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC7B;;;;IAKM,QAAQ;QACd,OAAO,IAAI,CAAC,KAAK,CAAC;KAClB;;;;IAMM,QAAQ,CAAC,KAAa;QAC5B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACnB;;;;IAMM,UAAU;QAChB,OAAO,IAAI,CAAC,OAAO,CAAC;KACpB;;;;IAMM,UAAU,CAAC,OAAe;QAChC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACvB;;;;IAMM,eAAe;QACrB,OAAO,IAAI,CAAC,YAAY,CAAC;KACzB;;;;IAMM,eAAe,CAAC,YAAoB;QAC1C,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KACjC;;;;IAMM,kBAAkB;QACxB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC5B;;;;IAMM,kBAAkB,CAAC,eAAuB;QAChD,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;KACvC;CACD;AAED,aAAa,CAAC,UAAU,EAAE,iBAAiB,CAAC,CAAC;AAC7C,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,SAAS,EAAC,QAAQ,EAAE,IAAI,EAAG,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;AACpK,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;AACpK,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,WAAW,EAAC,QAAQ,EAAE,KAAK,EAAG,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,YAAY,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;AAC3K,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,YAAY,EAAC,QAAQ,EAAE,KAAK,EAAG,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AAC9K,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,aAAa,EAAC,QAAQ,EAAE,KAAK,EAAG,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,CAAC;AACjL,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AACxK,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,YAAY,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;AAC3K,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AACxK,kBAAkB,CAAC,UAAU,EAAE,EAAE,QAAQ,EAAC,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;AACzK,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;AACpK,kBAAkB,CAAC,UAAU,EAAE,EAAE,QAAQ,EAAC,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AACpK,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC/J,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;AACrK,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;AACrL,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,iBAAiB,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,kBAAkB,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,kBAAkB,EAAE,CAAC,CAAC;;AC7R9L;;;;;;;;;;;;;;;AAeA,AAMA;;;;AAIA,MAAa,WAAW;IAkBX,UAAU;QAClB,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IAGS,UAAU,CAAC,OAAe;QAClC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;IAGS,UAAU;QAClB,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IAGM,UAAU,CAAC,OAAe;QAC/B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;;;;IAKI,YAAY;QAClB,OAAO,IAAI,CAAC,SAAS,CAAC;KACtB;;;;IAMM,YAAY,CAAC,SAAiB;QACpC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC3B;;;;IAMM,cAAc;QACpB,OAAO,IAAI,CAAC,WAAW,CAAC;KACxB;;;;IAMM,cAAc,CAAC,WAAmB;QACxC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAC/B;;;;IAMM,WAAW;QACjB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACrB;;;;IAMM,WAAW,CAAC,QAAgB;QAClC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KACzB;;;;IAMM,UAAU;QAChB,OAAO,IAAI,CAAC,OAAO,CAAC;KACpB;;;;IAMM,UAAU,CAAC,OAAe;QAChC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACvB;;;;IAMM,eAAe;QACrB,OAAO,IAAI,CAAC,YAAY,CAAC;KACzB;;;;IAMM,eAAe,CAAC,YAA0B;QAChD,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KACjC;;;;IAKM,UAAU;QAChB,OAAO,IAAI,CAAC,OAAO,CAAC;KACpB;;;;IAMM,UAAU,CAAC,OAAe;QAChC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACvB;;;;IAMM,aAAa;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC;KACvB;;;;IAMM,aAAa,CAAC,UAAsB;QAC1C,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC7B;;;;IAKM,QAAQ;QACd,OAAO,IAAI,CAAC,KAAK,CAAC;KAClB;;;;IAMM,QAAQ,CAAC,KAAa;QAC5B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACnB;;;;IAMM,UAAU;QAChB,OAAO,IAAI,CAAC,OAAO,CAAC;KACpB;;;;IAMM,UAAU,CAAC,OAAe;QAChC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACvB;CACD;AAED,aAAa,CAAE,WAAW,EAAE,kBAAkB,CAAC,CAAC;AAChD,WAAW,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,SAAS,EAAC,QAAQ,EAAE,IAAI,EAAG,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,WAAW,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;AACvK,WAAW,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,WAAW,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;AACvK,WAAW,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,WAAW,EAAC,QAAQ,EAAE,KAAK,EAAG,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,CAAC,SAAS,CAAC,YAAY,EAAE,KAAK,EAAE,WAAW,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;AAC9K,WAAW,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,aAAa,EAAC,QAAQ,EAAE,KAAK,EAAG,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,EAAE,WAAW,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,CAAC;AACpL,WAAW,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,UAAU,EAAC,QAAQ,EAAE,KAAK,EAAG,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,WAAW,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AAC3K,WAAW,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,SAAS,EAAC,QAAQ,EAAE,KAAK,EAAG,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,WAAW,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;AACxK,kBAAkB,CAAC,WAAW,EAAE,EAAE,QAAQ,EAAC,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,WAAW,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,WAAW,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;AAC5K,WAAW,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,WAAW,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;AACvK,kBAAkB,CAAC,WAAW,EAAE,EAAE,QAAQ,EAAC,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,WAAW,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,WAAW,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AACtK,WAAW,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;AACjK,WAAW,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,WAAW,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;;ACvNxK;;;;;;;;;;;;;;;AAeA,AAOA;;;;AAIA,MAAa,UAAU;IAqBb,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IAGS,UAAU,CAAC,OAAe;QAClC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;IAGS,UAAU;QAClB,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IAGM,UAAU,CAAC,OAAe;QAC/B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;;;;IAKI,eAAe;QACrB,OAAO,IAAI,CAAC,YAAY,CAAC;KACzB;;;;IAMM,eAAe,CAAC,YAAoB;QAC1C,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KACjC;;;;IAMM,cAAc;QACpB,OAAO,IAAI,CAAC,WAAW,CAAC;KACxB;;;;IAMM,cAAc,CAAC,WAAmB;QACxC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAC/B;;;;IAMM,aAAa;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC;KACvB;;;;IAMM,aAAa,CAAC,UAAkB;QACtC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC7B;;;;IAMM,WAAW;QACjB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACrB;;;;IAMM,WAAW,CAAC,QAAgB;QAClC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KACzB;;;;IAMM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;KACjB;;;;IAMM,OAAO,CAAC,IAAY;QAC1B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KACjB;;;;IAMM,cAAc;QACpB,OAAO,IAAI,CAAC,WAAW,CAAC;KACxB;;;;IAMM,cAAc,CAAC,WAAmB;QACxC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAC/B;;;;IAMM,YAAY;QAClB,OAAO,IAAI,CAAC,SAAS,CAAC;KACtB;;;;IAMM,YAAY,CAAC,SAAiB;QACpC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC3B;;;;IAMM,eAAe;QACrB,OAAO,IAAI,CAAC,YAAY,CAAC;KACzB;;;;IAMM,eAAe,CAAC,YAA0B;QAChD,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KACjC;;;;IAKM,UAAU;QAChB,OAAO,IAAI,CAAC,OAAO,CAAC;KACpB;;;;IAMM,UAAU,CAAC,OAAe;QAChC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACvB;;;;IAMM,aAAa;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC;KACvB;;;;IAMM,aAAa,CAAC,UAAsB;QAC1C,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC7B;;;;IAKM,QAAQ;QACd,OAAO,IAAI,CAAC,KAAK,CAAC;KAClB;;;;IAMM,QAAQ,CAAC,KAAa;QAC5B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACnB;;;;IAMM,UAAU;QAChB,OAAO,IAAI,CAAC,OAAO,CAAC;KACpB;;;;IAMM,UAAU,CAAC,OAAe;QAChC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACvB;CACD;AAED,aAAa,CAAC,UAAU,EAAE,iBAAiB,CAAC,CAAC;AAC7C,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,SAAS,EAAC,QAAQ,EAAE,IAAI,EAAG,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;AACpK,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;AACpK,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;AAClL,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,CAAC;AACjL,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AAC9K,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AACxK,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;AAClK,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,CAAC;AACjL,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,YAAY,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;AAC3K,kBAAkB,CAAC,UAAU,EAAE,EAAE,QAAQ,EAAC,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;AACzK,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;AACrK,kBAAkB,CAAC,UAAU,EAAE,EAAE,QAAQ,EAAC,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AACpK,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC/J,WAAW,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;;AC9QrK;;;;;;;;;;;;;;;AAeA,AAMA;;;;AAIA,MAAa,QAAQ;IAuBX,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IAGS,UAAU,CAAC,OAAe;QAClC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;IAGS,UAAU;QAClB,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IAGM,UAAU,CAAC,OAAe;QAC/B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;;;;IAMK,YAAY;QAClB,OAAO,IAAI,CAAC,SAAS,CAAC;KACtB;;;;IAMM,YAAY,CAAC,SAAiB;QACpC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC3B;;;;IAMM,SAAS;QACf,OAAO,IAAI,CAAC,MAAM,CAAC;KACnB;;;;IAMM,SAAS,CAAC,MAAc;QAC9B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACrB;;;;IAMM,WAAW;QACjB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACrB;;;;IAMM,WAAW,CAAC,QAAgB;QAClC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KACzB;;;;IAMM,UAAU;QAChB,OAAO,IAAI,CAAC,OAAO,CAAC;KACpB;;;;IAMM,UAAU,CAAC,OAAe;QAChC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACvB;;;;IAQK,WAAW;QACjB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACrB;;;;IAMM,WAAW,CAAC,QAAgB;QAClC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KACzB;;;;IAKM,aAAa;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC;KACvB;;;;IAMM,aAAa,CAAC,UAAkB;QACtC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC7B;;;;IAMM,aAAa;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC;KACvB;;;;IAMM,aAAa,CAAC,UAAkB;QACtC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC7B;;;;IAMM,WAAW;QACjB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACrB;;;;IAMM,WAAW,CAAC,QAAgB;QAClC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KACzB;;;;IAMM,aAAa;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC;KACvB;;;;IAMM,aAAa,CAAC,UAAkB;QACtC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC7B;;;;IAMM,eAAe;QACrB,OAAO,IAAI,CAAC,YAAY,CAAC;KACzB;;;;IAMM,eAAe,CAAC,YAAoB;QAC1C,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KACjC;;;;IAMM,cAAc;QACpB,OAAO,IAAI,CAAC,WAAW,CAAC;KACxB;;;;IAMM,cAAc,CAAC,WAAmB;QACxC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAC/B;;;;IAMM,eAAe;QACrB,OAAO,IAAI,CAAC,YAAY,CAAC;KACzB;;;;IAMM,eAAe,CAAC,YAA0B;QAChD,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KACjC;;;;IAKM,UAAU;QAChB,OAAO,IAAI,CAAC,OAAO,CAAC;KACpB;;;;IAMM,UAAU,CAAC,OAAe;QAChC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACvB;;;;IAMM,aAAa;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC;KACvB;;;;IAMM,aAAa,CAAC,UAAsB;QAC1C,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC7B;;;;IAKM,QAAQ;QACd,OAAO,IAAI,CAAC,KAAK,CAAC;KAClB;;;;IAMM,QAAQ,CAAC,KAAa;QAC5B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACnB;;;;IAMM,UAAU;QAChB,OAAO,IAAI,CAAC,OAAO,CAAC;KACpB;;;;IAMM,UAAU,CAAC,OAAe;QAChC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACvB;CACD;AAED,aAAa,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAC;AACzC,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,SAAS,EAAC,QAAQ,EAAE,IAAI,EAAG,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,QAAQ,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;AAC9J,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,QAAQ,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;AAC9J,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,SAAS,CAAC,YAAY,EAAE,KAAK,EAAE,QAAQ,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;AACpK,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,SAAS,CAAC,SAAS,EAAE,KAAK,EAAE,QAAQ,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,CAAC;AAC5J,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,QAAQ,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AAClK,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,QAAQ,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;AAC/J,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,QAAQ,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AAClK,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,QAAQ,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AACxK,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,QAAQ,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AACxK,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,QAAQ,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AACjK,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,QAAQ,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AACxK,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,QAAQ,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;AAC/K,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,EAAE,QAAQ,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,CAAC;AAC3K,kBAAkB,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAC,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,QAAQ,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,EAAE,QAAQ,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;AACpK,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,QAAQ,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;AAC/J,kBAAkB,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAC,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,QAAQ,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,QAAQ,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;AAC9J,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,QAAQ,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;AACzJ,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,QAAQ,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;;ACrV/J;;;;;;;;;;;;;;;AAeA,AAKA;;;;AAIA,MAAa,cAAe,SAAQ,YAAY;IAErC,UAAU;QACnB,OAAO,IAAI,CAAC,OAAO,CAAC;KACpB;IAEM,UAAU,CAAC,OAAe;QAChC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACvB;CAGD;AAED,aAAa,CAAC,cAAc,EAAE,WAAW,CAAC,CAAC;AAC3C,WAAW,CAAC,cAAc,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,cAAc,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;;ACtChL;;;;;;;;;;;;;;;AAeA,AAKA;;;;AAIA,MAAa,yBAA0B,SAAQ,gCAAgD;;;;;;IAStF,iBAAiB;QACtB,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;;;;;;;IAQM,iBAAiB,CAAC,cAA8B;QACrD,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;KACtC;;IAGM,iBAAiB,CAAC,cAA8B;QACtD,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC;KACvC;CACF;AAED,aAAa,CAAC,yBAAyB,EAAE,cAAc,CAAC,CAAC;AACzD,kBAAkB,CAAC,yBAAyB,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,iBAAiB,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC,CAAC;;ACtD9N;;;;;;;;;;;;;;;AAeA,AAOA;;;;;AAKA,MAAa,wBAAyB,SAAQ,iBAAiB;IAItD,OAAO;QACZ,OAAO,cAAc,CAAC,OAAO,CAAC;KAC/B;;;;;;IAOM,wBAAwB;QAC7B,OAAO,IAAI,CAAC,qBAAqB,CAAC;KACnC;;;;;;IAOM,wBAAwB,CAAC,qBAAgD;QAC9E,IAAI,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;KACpD;;IAGM,kBAAkB;QACvB,IAAI,eAAe,GAA0B,IAAI,KAAK,EAAkB,CAAC;QACzE,IAAI,IAAI,CAAC,wBAAwB,EAAE,IAAI,IAAI,EAAE;YAC3C,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,wBAAwB,EAAE,CAAC,CAAC;SACvD;QACD,OAAO,eAAe,CAAC;KACxB;CACF;AAED,aAAa,CAAC,wBAAwB,EAAE,iBAAiB,CAAE,CAAC;AAC5D,kBAAkB,CAAC,wBAAwB,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,yBAAyB,EAAE,IAAI,EAAE,wBAAwB,CAAC,SAAS,CAAC,wBAAwB,EAAE,KAAK,EAAE,wBAAwB,CAAC,SAAS,CAAC,wBAAwB,EAAE,CAAC,CAAC;;AChEnO;;;;;;;;;;;;;;;AAeA,AAWA;;;;AAIA,MAAa,eAAgB,SAAQ,aAAa;;;;IAkB1C,gBAAgB;QACtB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC1B;;;;;IAMS,gBAAgB,CAAC,aAAgC;QAC1D,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;KACnC;IAIM,sBAAsB;QAC5B,OAAO,kBAAkB,CAAC;KAC1B;;;;IAKM,gBAAgB;QACtB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC1B;;;;IAKS,gBAAgB,CAAC,aAAgC;QAC1D,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;KACnC;;;;IAKM,cAAc;QACpB,OAAO,IAAI,CAAC,WAAW,CAAC;KACxB;;;;IAKS,cAAc,CAAC,WAA4B;QACpD,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAC/B;;;;IAKM,cAAc;QACpB,OAAO,IAAI,CAAC,WAAW,CAAC;KACxB;;;;IAKS,cAAc,CAAC,WAA4B;QACpD,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAC/B;;;;IAKM,iBAAiB;QACvB,OAAO,IAAI,CAAC,cAAc,CAAC;KAC3B;;;;IAKS,iBAAiB,CAAC,cAAkC;QAC7D,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;KACrC;;;;IAKM,gBAAgB;QACtB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC1B;;;;IAKS,gBAAgB,CAAC,aAAgC;QAC1D,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;KACnC;CACD;AAED,aAAa,CAAC,eAAe,EAAE,WAAW,CAAC,CAAC;AAC5C,kBAAkB,CAAC,eAAe,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,mBAAmB,EAAE,UAAU,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,gBAAgB,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC,CAAC;AACtN,kBAAkB,CAAC,eAAe,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,mBAAmB,EAAE,UAAU,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,gBAAgB,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC,CAAC;AACtN,kBAAkB,CAAC,eAAe,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,mBAAmB,EAAE,QAAQ,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,CAAC;AAChN,kBAAkB,CAAC,eAAe,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,mBAAmB,EAAE,QAAQ,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,CAAC;AAChN,kBAAkB,CAAC,eAAe,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,mBAAmB,EAAE,WAAW,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,iBAAiB,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC,CAAC;AACzN,kBAAkB,CAAC,eAAe,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,mBAAmB,EAAE,UAAU,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,gBAAgB,EAAE,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC,CAAC;;AC/IrN;;;;;;;;;;;;;;;AAeA,AAMA;;;;AAIA,MAAa,0BAA2B,SAAQ,iCAAkD;;;;;;IASzF,kBAAkB;QACvB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;;;;;;IAOM,kBAAkB,CAAC,eAAgC;QACxD,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;KACxC;;IAGM,iBAAiB;QACtB,OAAO,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAClC;CACF;AAED,aAAa,CAAC,0BAA0B,EAAE,cAAc,CAAC,CAAC;AAC1D,kBAAkB,CAAC,0BAA0B,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,0BAA0B,CAAC,SAAS,CAAC,kBAAkB,EAAE,KAAK,EAAE,0BAA0B,CAAC,SAAS,CAAC,kBAAkB,EAAE,CAAC,CAAC;;ACtDpO;;;;;;;;;;;;;;;AAeA,AASA;;;;AAIA,MAAa,yBAA0B,SAAQ,kBAAkB;IAIxD,OAAO;QACZ,OAAO,cAAc,CAAC,OAAO,CAAC;KAC/B;;;;;;;;;;IAWM,yBAAyB;QAC9B,OAAO,IAAI,CAAC,sBAAsB,CAAC;KACpC;;;;;;IAOM,yBAAyB,CAAC,sBAAsF;QACrH,IAAI,sBAAsB,YAAY,KAAK,EAAE;YAC3C,IAAI,CAAC,sBAAsB,GAAsC,sBAAsB,CAAC;SACzF;aAAM,IAAI,sBAAsB,YAAY,0BAA0B,EAAE;YACvE,IAAI,CAAC,sBAAsB,GAAG,CAA6B,sBAAsB,CAAC,CAAC;SACpF;aAAM;YACL,MAAM,IAAI,YAAY,CAAC,cAAc,CAAC,CAAC;SACxC;KACF;;IAGM,mBAAmB;QACxB,OAAO,IAAI,CAAC,sBAAsB,CAAC;KACpC;;;;;;;IAQM,oBAAoB;QACzB,OAAO,IAAI,CAAC,sBAAsB,IAAI,IAAI,IAAI,IAAI,CAAC,sBAAsB,CAAC,MAAM,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC;KAC/H;CACF;AAED,aAAa,CAAC,yBAAyB,EAAE,iBAAiB,CAAC,CAAC;AAC5D,kBAAkB,CAAC,yBAAyB,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,mBAAmB,EAAE,0BAA0B,EAAE,IAAI,EAAE,yBAAyB,CAAC,SAAS,CAAC,yBAAyB,EAAE,KAAK,EAAE,yBAAyB,CAAC,SAAS,CAAC,yBAAyB,EAAE,CAAC,CAAC;;ACjFrQ;;;;;;;;;;;;;;;AAgBA,AAEA;;;;;AAKA,MAAa,0BAA2B,SAAQ,mBAAmB;IAEjE,YAAY,OAAe;QACzB,KAAK,CAAC,OAAO,CAAC,CAAC;KAChB;CACF;;AC5BD;;;;;;;;;;;;;;;;;;;;AAqBA,MAAa,SAAS;IAGpB,YAAY,KAAa;QACvB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACrB;;;;;;IAOM,KAAK;QACV,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;CACF;;;;"}